<Type Name="RouteCollection" FullName="System.Web.Routing.RouteCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5e4ccbbe9fc90cc276033662828cc5609ca1f924" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36597859" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RouteCollection : System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RouteCollection extends System.Collections.ObjectModel.Collection`1&lt;class System.Web.Routing.RouteBase&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.RouteCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class RouteCollection&#xA;Inherits Collection(Of RouteBase)" />
  <TypeSignature Language="C++ CLI" Value="public ref class RouteCollection : System::Collections::ObjectModel::Collection&lt;System::Web::Routing::RouteBase ^&gt;" />
  <TypeSignature Language="F#" Value="type RouteCollection = class&#xA;    inherit Collection&lt;RouteBase&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Web.Routing.RouteBase</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0f83b-101">Fournit une collection d’itinéraires pour le routage ASP.NET.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0f83b-101">Provides a collection of routes for ASP.NET routing.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f83b-102">Le <xref:System.Web.Routing.RouteCollection> classe fournit des méthodes qui vous permettent de gérer une collection d’objets dérivés de la <xref:System.Web.Routing.RouteBase> classe.</span><span class="sxs-lookup"><span data-stu-id="0f83b-102">The <xref:System.Web.Routing.RouteCollection> class provides methods that enable you to manage a collection of objects that derive from the <xref:System.Web.Routing.RouteBase> class.</span></span>  
  
 <span data-ttu-id="0f83b-103">En général, vous allez utiliser le `static` <xref:System.Web.Routing.RouteTable.Routes%2A> propriété de la <xref:System.Web.Routing.RouteTable> classe pour récupérer un <xref:System.Web.Routing.RouteCollection> objet.</span><span class="sxs-lookup"><span data-stu-id="0f83b-103">Typically, you will use the `static`<xref:System.Web.Routing.RouteTable.Routes%2A> property of the <xref:System.Web.Routing.RouteTable> class to retrieve a <xref:System.Web.Routing.RouteCollection> object.</span></span> <span data-ttu-id="0f83b-104">Le <xref:System.Web.Routing.RouteTable.Routes%2A> propriété stocke tous les itinéraires pour une application ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="0f83b-104">The <xref:System.Web.Routing.RouteTable.Routes%2A> property stores all the routes for an ASP.NET application.</span></span> <span data-ttu-id="0f83b-105">Le routage ASP.NET effectue une itération dans les itinéraires dans les <xref:System.Web.Routing.RouteTable.Routes%2A> propriété pour rechercher l’itinéraire qui correspond à une URL.</span><span class="sxs-lookup"><span data-stu-id="0f83b-105">ASP.NET routing iterates through the routes in the <xref:System.Web.Routing.RouteTable.Routes%2A> property to find the route that matches a URL.</span></span>  
  
 <span data-ttu-id="0f83b-106">Pour construire une URL, vous appelez le <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> (méthode) et passez une collection de valeurs.</span><span class="sxs-lookup"><span data-stu-id="0f83b-106">To construct a URL, you call the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method and pass in a collection of values.</span></span> <span data-ttu-id="0f83b-107">Le <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> méthode recherche le premier itinéraire avec des paramètres qui correspondent aux valeurs que vous avez passé, retourne un <xref:System.Web.Routing.VirtualPathData> objet qui contient des informations sur l’itinéraire correspondant.</span><span class="sxs-lookup"><span data-stu-id="0f83b-107">The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method finds the first route with parameters that match the values that you passed in, and returns a <xref:System.Web.Routing.VirtualPathData> object that contains information about the matching route.</span></span> <span data-ttu-id="0f83b-108">Vous récupérez l’URL via le <xref:System.Web.Routing.VirtualPathData.VirtualPath%2A> propriété de la <xref:System.Web.Routing.VirtualPathData> objet.</span><span class="sxs-lookup"><span data-stu-id="0f83b-108">You retrieve the URL through the <xref:System.Web.Routing.VirtualPathData.VirtualPath%2A> property of the <xref:System.Web.Routing.VirtualPathData> object.</span></span>  
  
 <span data-ttu-id="0f83b-109">Vous pouvez ajouter un itinéraire avec un nom ou sans nom.</span><span class="sxs-lookup"><span data-stu-id="0f83b-109">You can add a route either with a name or without a name.</span></span> <span data-ttu-id="0f83b-110">Incluant un nom vous permet de faire la distinction entre les itinéraires semblables lorsque les URL sont construites.</span><span class="sxs-lookup"><span data-stu-id="0f83b-110">Including a name enables you to distinguish between similar routes when URLs are constructed.</span></span> <span data-ttu-id="0f83b-111">Si vous ne spécifiez pas un nom, le routage ASP.NET utilise le premier itinéraire correspondant dans la collection pour construire une URL.</span><span class="sxs-lookup"><span data-stu-id="0f83b-111">If you do not specify a name, ASP.NET routing uses the first matching route in the collection to construct a URL.</span></span>  
  
 <span data-ttu-id="0f83b-112">Lorsque vous ajoutez un itinéraire sans nom à la <xref:System.Web.Routing.RouteCollection> de l’objet, vous ne pouvez pas ajouter un itinéraire qui est déjà dans la collection.</span><span class="sxs-lookup"><span data-stu-id="0f83b-112">When you add an unnamed route to the <xref:System.Web.Routing.RouteCollection> object, you cannot add a route that already is in the collection.</span></span> <span data-ttu-id="0f83b-113">Lorsque vous ajoutez un itinéraire nommé, vous ne pouvez pas utiliser un nom qui identifie déjà un itinéraire dans la collection.</span><span class="sxs-lookup"><span data-stu-id="0f83b-113">When you add a named route, you cannot use a name that already identifies a route in the collection.</span></span>  
  
 <span data-ttu-id="0f83b-114">Vous utilisez la <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> (méthode) et le <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> méthode pour vous assurer que vous interagissez avec la collection sans conflits provenant d’autres processus.</span><span class="sxs-lookup"><span data-stu-id="0f83b-114">You use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
 <span data-ttu-id="0f83b-115">Pour plus d’informations sur l’ajout d’un itinéraire pour une collection d’itinéraires, consultez [le routage ASP.NET](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span><span class="sxs-lookup"><span data-stu-id="0f83b-115">For more information about how to add a route to a route collection, see [ASP.NET Routing](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0f83b-116">Initialise une nouvelle instance de la classe <see cref="T:System.Web.Routing.RouteCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-116">Initializes a new instance of the <see cref="T:System.Web.Routing.RouteCollection" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RouteCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0f83b-117">Initialise une nouvelle instance de la classe <see cref="T:System.Web.Routing.RouteCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-117">Initializes a new instance of the <see cref="T:System.Web.Routing.RouteCollection" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteCollection (System.Web.Hosting.VirtualPathProvider virtualPathProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Hosting.VirtualPathProvider virtualPathProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.#ctor(System.Web.Hosting.VirtualPathProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RouteCollection(System::Web::Hosting::VirtualPathProvider ^ virtualPathProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.RouteCollection : System.Web.Hosting.VirtualPathProvider -&gt; System.Web.Routing.RouteCollection" Usage="new System.Web.Routing.RouteCollection virtualPathProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPathProvider" Type="System.Web.Hosting.VirtualPathProvider" />
      </Parameters>
      <Docs>
        <param name="virtualPathProvider">
          <span data-ttu-id="0f83b-118">Fournisseur pour récupérer des ressources à partir d’un système de fichiers virtuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-118">A provider for retrieving resources from a virtual file system.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f83b-119">Initialise une nouvelle instance de la classe <see cref="T:System.Web.Routing.RouteCollection" /> en utilisant le fournisseur de chemins d'accès virtuels spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-119">Initializes a new instance of the <see cref="T:System.Web.Routing.RouteCollection" /> class by using the specified virtual path provider.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string name, System.Web.Routing.RouteBase item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string name, class System.Web.Routing.RouteBase item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.Add(System.String,System.Web.Routing.RouteBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (name As String, item As RouteBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ name, System::Web::Routing::RouteBase ^ item);" />
      <MemberSignature Language="F#" Value="override this.Add : string * System.Web.Routing.RouteBase -&gt; unit" Usage="routeCollection.Add (name, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="item" Type="System.Web.Routing.RouteBase" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0f83b-120">Valeur qui identifie l’itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-120">The value that identifies the route.</span>
          </span>
          <span data-ttu-id="0f83b-121">La valeur peut être <see langword="null" /> ou une chaîne vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-121">The value can be <see langword="null" /> or an empty string.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="0f83b-122">Itinéraire à ajouter à la fin de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-122">The route to add to the end of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f83b-123">Ajoute un itinéraire à la fin de l’objet <see cref="T:System.Web.Routing.RouteCollection" /> et assigne le nom spécifié à l’itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-123">Adds a route to the end of the <see cref="T:System.Web.Routing.RouteCollection" /> object and assigns the specified name to the route.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f83b-124">Le <xref:System.Web.Routing.RouteCollection.Add%2A> méthode vous permet de définir un nom pour un itinéraire lorsque vous l’ajoutez à la collection d’itinéraires.</span><span class="sxs-lookup"><span data-stu-id="0f83b-124">The <xref:System.Web.Routing.RouteCollection.Add%2A> method enables you to define a name for a route when you add it to the route collection.</span></span> <span data-ttu-id="0f83b-125">En définissant un nom pour l’itinéraire, vous pouvez spécifier un itinéraire particulier à utiliser lorsque vous utilisez le routage pour construire une URL.</span><span class="sxs-lookup"><span data-stu-id="0f83b-125">By defining a name for the route, you can specify a particular route to use when you use routing to construct a URL.</span></span> <span data-ttu-id="0f83b-126">Spécification d’un itinéraire particulier est importante lorsque plusieurs itinéraires correspondent aux valeurs que vous passez à la <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0f83b-126">Specifying a particular route is important when more than one route matches the values that you pass to the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method.</span></span> <span data-ttu-id="0f83b-127">Si vous ne spécifiez pas un itinéraire nommé, le routage ASP.NET utilisera le premier itinéraire dans la collection qui correspond aux valeurs.</span><span class="sxs-lookup"><span data-stu-id="0f83b-127">If you do not specify a named route, ASP.NET routing will use the first route in the collection that matches the values.</span></span> <span data-ttu-id="0f83b-128">Pour plus d’informations, consultez [Comment : construire une URL à partir des itinéraires](http://msdn.microsoft.com/library/1ffd4085-71f6-4822-be8f-f682ca638650).</span><span class="sxs-lookup"><span data-stu-id="0f83b-128">For more information, see [How to: Construct URLs from Routes](http://msdn.microsoft.com/library/1ffd4085-71f6-4822-be8f-f682ca638650).</span></span>  
  
 <span data-ttu-id="0f83b-129">Un nom peut être utilisé qu’une seule fois dans le <xref:System.Web.Routing.RouteCollection> objet.</span><span class="sxs-lookup"><span data-stu-id="0f83b-129">A name can be used only one time in the <xref:System.Web.Routing.RouteCollection> object.</span></span>  
  
 <span data-ttu-id="0f83b-130">Si vous n’avez pas à spécifier un nom pour l’itinéraire, vous pouvez ajouter l’itinéraire en appelant le <xref:System.Collections.ObjectModel.Collection%601.Add%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0f83b-130">If you do not have to specify a name for the route, you can add the route by calling the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method.</span></span>  
  
 <span data-ttu-id="0f83b-131">Utilisez le <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> (méthode) et le <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> méthode pour vous assurer que vous interagissez avec la collection sans conflits provenant d’autres processus.</span><span class="sxs-lookup"><span data-stu-id="0f83b-131">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f83b-132">L’exemple suivant montre comment ajouter un itinéraire vers un <xref:System.Web.Routing.RouteCollection> de l’objet et attribuer un nom à l’itinéraire.</span><span class="sxs-lookup"><span data-stu-id="0f83b-132">The following example shows how to add a route to a <xref:System.Web.Routing.RouteCollection> object and assign a name to the route.</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#1)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f83b-133">
            <paramref name="item" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-133">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0f83b-134">
            <paramref name="name" /> est déjà utilisé dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-134">
              <paramref name="name" /> is already used in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AppendTrailingSlash">
      <MemberSignature Language="C#" Value="public bool AppendTrailingSlash { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AppendTrailingSlash" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.RouteCollection.AppendTrailingSlash" />
      <MemberSignature Language="VB.NET" Value="Public Property AppendTrailingSlash As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AppendTrailingSlash { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AppendTrailingSlash : bool with get, set" Usage="System.Web.Routing.RouteCollection.AppendTrailingSlash" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0f83b-135">Obtient ou définit une valeur qui indique si les barres obliques de fin sont ajoutées lorsque les chemins d'accès virtuels sont normalisés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-135">Gets or sets a value that indicates whether trailing slashes are added when virtual paths are normalized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0f83b-136">
            <see langword="true" /> si des barres obliques finales sont ajoutées ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-136">
              <see langword="true" /> if trailing slashes are added; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0f83b-137">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-137">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected override void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearItems();" />
      <MemberSignature Language="F#" Value="override this.ClearItems : unit -&gt; unit" Usage="routeCollection.ClearItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0f83b-138">Supprime tous les éléments de l’objet <see cref="T:System.Web.Routing.RouteCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-138">Removes all the elements from the <see cref="T:System.Web.Routing.RouteCollection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f83b-139">Utilisez le <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> (méthode) et le <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> méthode pour vous assurer que vous interagissez avec la collection sans conflits provenant d’autres processus.</span><span class="sxs-lookup"><span data-stu-id="0f83b-139">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReadLock">
      <MemberSignature Language="C#" Value="public IDisposable GetReadLock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable GetReadLock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetReadLock" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadLock () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ GetReadLock();" />
      <MemberSignature Language="F#" Value="member this.GetReadLock : unit -&gt; IDisposable" Usage="routeCollection.GetReadLock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0f83b-140">Fournit un objet pour gérer la sécurité des threads quand vous récupérez un objet de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-140">Provides an object for managing thread safety when you retrieve an object from the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f83b-141">Objet qui gère la sécurité des threads.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-141">An object that manages thread safety.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f83b-142">Le <xref:System.Web.Routing.RouteCollection> objet n’est disponible pour plusieurs processus dans l’application.</span><span class="sxs-lookup"><span data-stu-id="0f83b-142">The <xref:System.Web.Routing.RouteCollection> object is available to multiple processes in the application.</span></span> <span data-ttu-id="0f83b-143">Par conséquent, si vous devez récupérer un itinéraire lorsque l’application est en cours d’exécution, utilisez la <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> méthode afin de garantir la sécurité des threads.</span><span class="sxs-lookup"><span data-stu-id="0f83b-143">Therefore, if you have to retrieve a route when the application is running, use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method in order to guarantee thread safety.</span></span> <span data-ttu-id="0f83b-144">En obtenant un verrou de lecture sur la collection d’itinéraires, vous vous assurer que la collection n’est pas modifiée pendant que vous tentez de le récupérer.</span><span class="sxs-lookup"><span data-stu-id="0f83b-144">By obtaining a read lock on the route collection, you make sure that the collection will not be modified while you are trying to retrieve it.</span></span>  
  
 <span data-ttu-id="0f83b-145">Le <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> méthode arrête le thread de continuer jusqu'à ce que le verrou peut être acquis.</span><span class="sxs-lookup"><span data-stu-id="0f83b-145">The <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method stops the thread from continuing until the lock can be acquired.</span></span> <span data-ttu-id="0f83b-146">Si un verrou d’écriture est en place, le thread attend jusqu'à ce que la mise à jour est terminée et que le verrou d’écriture est libéré.</span><span class="sxs-lookup"><span data-stu-id="0f83b-146">If a write lock is in place, the thread waits until the update is completed and the write lock is released.</span></span> <span data-ttu-id="0f83b-147">Le verrou en lecture sur la collection d’itinéraires est libéré lorsque la <xref:System.IDisposable> objet qui est retourné par cette méthode est supprimé.</span><span class="sxs-lookup"><span data-stu-id="0f83b-147">The read lock on the route collection is released when the <xref:System.IDisposable> object that is returned by this method is disposed.</span></span>  
  
 <span data-ttu-id="0f83b-148">Si vous n’utilisez pas <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>, vous pouvez obtenir une erreur pendant la lecture le <xref:System.Web.Routing.RouteCollection> collection.</span><span class="sxs-lookup"><span data-stu-id="0f83b-148">If you do not use <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>, you might get an error while you are reading through the <xref:System.Web.Routing.RouteCollection> collection.</span></span> <span data-ttu-id="0f83b-149">Par exemple, supposons que vous parcourez les objets dans le <xref:System.Web.Routing.RouteCollection> collection pour les lire, sans appeler <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>.</span><span class="sxs-lookup"><span data-stu-id="0f83b-149">For example, suppose you loop through the objects in the <xref:System.Web.Routing.RouteCollection> collection to read them, without calling <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>.</span></span> <span data-ttu-id="0f83b-150">Lorsque vous faites cela, un autre thread d’une autre demande peut appeler <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> et ajouter un itinéraire à la collection.</span><span class="sxs-lookup"><span data-stu-id="0f83b-150">While you are doing that, another thread from another request might call <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> and add a route to the collection.</span></span> <span data-ttu-id="0f83b-151">Le premier thread échouera ensuite avec une erreur.</span><span class="sxs-lookup"><span data-stu-id="0f83b-151">The first thread will then fail with an error.</span></span>  
  
 <span data-ttu-id="0f83b-152">Il existe deux scénarios dans lesquels vous n’avez pas à appeler <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>:</span><span class="sxs-lookup"><span data-stu-id="0f83b-152">There are two scenarios in which you do not have to call <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>:</span></span>  
  
-   <span data-ttu-id="0f83b-153">Méthodes publiques de la <xref:System.Web.Routing.RouteCollection> classe telles que <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> et <xref:System.Web.Routing.RouteCollection.GetRouteData%2A> appeler <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> en interne.</span><span class="sxs-lookup"><span data-stu-id="0f83b-153">Public methods of the <xref:System.Web.Routing.RouteCollection> class such as <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> and <xref:System.Web.Routing.RouteCollection.GetRouteData%2A> call <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> internally.</span></span> <span data-ttu-id="0f83b-154">Par conséquent, il est inutile d’appeler explicitement <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> lorsque vous appelez une méthode publique de la <xref:System.Web.Routing.RouteCollection> classe pour récupérer des données à partir de la collection.</span><span class="sxs-lookup"><span data-stu-id="0f83b-154">Therefore, you do not have to explicitly call <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> when you call a public method of the <xref:System.Web.Routing.RouteCollection> class to retrieve data from the collection.</span></span>  
  
-   <span data-ttu-id="0f83b-155">Lorsque l’application démarre et ne traite pas encore de demandes, comme dans le `Application_Start` Gestionnaire d’événements, un seul thread est en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="0f83b-155">When the application is starting and is not yet processing requests, such as in the `Application_Start` event handler, only one thread is running.</span></span> <span data-ttu-id="0f83b-156">Comme il n’y a pas d’autres threads qui peuvent mettre à jour la collection pendant que vous la lisez, vous n’avez pas à appeler <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>.</span><span class="sxs-lookup"><span data-stu-id="0f83b-156">Because there are no other threads that might update the collection while you are reading it, you do not have to call <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f83b-157">L’exemple suivant montre comment utiliser la <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> méthode lorsque vous extrayez un itinéraire pendant que l’application est en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="0f83b-157">The following example shows how to use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method when you retrieve a route while the application is running.</span></span> <span data-ttu-id="0f83b-158">Le `Using` instruction garantit que ce qui se passe au moment de l’exécution lorsque vous lisez à partir de la collection (que le code s’exécute normalement ou une exception est levée), le verrou sera libéré en toute sécurité à la fin de la `Using` bloc de code.</span><span class="sxs-lookup"><span data-stu-id="0f83b-158">The `Using` statement ensures that no matter what happens at run time when you read from the collection (whether the code completes normally or an exception is thrown) the lock will be safely released at the end of the `Using` code block.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteData">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteData GetRouteData (System.Web.HttpContextBase httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.RouteData GetRouteData(class System.Web.HttpContextBase httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetRouteData(System.Web.HttpContextBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRouteData (httpContext As HttpContextBase) As RouteData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::RouteData ^ GetRouteData(System::Web::HttpContextBase ^ httpContext);" />
      <MemberSignature Language="F#" Value="member this.GetRouteData : System.Web.HttpContextBase -&gt; System.Web.Routing.RouteData" Usage="routeCollection.GetRouteData httpContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
      </Parameters>
      <Docs>
        <param name="httpContext">
          <span data-ttu-id="0f83b-159">Objet qui encapsule des informations sur la requête HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-159">An object that encapsulates information about the HTTP request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f83b-160">Retourne des informations sur l’itinéraire dans la collection qui correspond aux valeurs spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-160">Returns information about the route in the collection that matches the specified values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f83b-161">Objet qui contient les valeurs de la définition d’itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-161">An object that contains the values from the route definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f83b-162">
            <paramref name="context" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-162">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0f83b-163">La propriété <see cref="P:System.Web.HttpContextBase.Request" /> de l'objet dans le paramètre <paramref name="context" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-163">The <see cref="P:System.Web.HttpContextBase.Request" /> property of the object in the <paramref name="context" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetVirtualPath">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0f83b-164">Retourne des informations sur le chemin d'accès d'URL associé à l'itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-164">Returns information about the URL path that is associated with the route.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetVirtualPath">
      <MemberSignature Language="C#" Value="public System.Web.Routing.VirtualPathData GetVirtualPath (System.Web.Routing.RequestContext requestContext, System.Web.Routing.RouteValueDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.VirtualPathData GetVirtualPath(class System.Web.Routing.RequestContext requestContext, class System.Web.Routing.RouteValueDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::VirtualPathData ^ GetVirtualPath(System::Web::Routing::RequestContext ^ requestContext, System::Web::Routing::RouteValueDictionary ^ values);" />
      <MemberSignature Language="F#" Value="member this.GetVirtualPath : System.Web.Routing.RequestContext * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.VirtualPathData" Usage="routeCollection.GetVirtualPath (requestContext, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.VirtualPathData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="requestContext">
          <span data-ttu-id="0f83b-165">Objet qui encapsule des informations sur l’itinéraire demandé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-165">An object that encapsulates information about the requested route.</span>
          </span>
        </param>
        <param name="values">
          <span data-ttu-id="0f83b-166">Objet qui contient les paramètres d’un itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-166">An object that contains the parameters for a route.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f83b-167">Retourne des informations sur le chemin de l’URL associé à l’itinéraire, selon les valeurs de contexte et de paramètre spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-167">Returns information about the URL path that is associated with the route, given the specified context and parameter values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f83b-168">Objet qui contient des informations sur le chemin d’URL associé à l’itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-168">An object that contains information about the URL path that is associated with the route.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualPath">
      <MemberSignature Language="C#" Value="public System.Web.Routing.VirtualPathData GetVirtualPath (System.Web.Routing.RequestContext requestContext, string name, System.Web.Routing.RouteValueDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.VirtualPathData GetVirtualPath(class System.Web.Routing.RequestContext requestContext, string name, class System.Web.Routing.RouteValueDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetVirtualPath(System.Web.Routing.RequestContext,System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::VirtualPathData ^ GetVirtualPath(System::Web::Routing::RequestContext ^ requestContext, System::String ^ name, System::Web::Routing::RouteValueDictionary ^ values);" />
      <MemberSignature Language="F#" Value="member this.GetVirtualPath : System.Web.Routing.RequestContext * string * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.VirtualPathData" Usage="routeCollection.GetVirtualPath (requestContext, name, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.VirtualPathData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="requestContext">
          <span data-ttu-id="0f83b-169">Objet qui encapsule des informations sur l’itinéraire demandé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-169">An object that encapsulates information about the requested route.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="0f83b-170">Nom de l’itinéraire à utiliser au moment de récupérer des informations sur le chemin d’URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-170">The name of the route to use when information about the URL path is retrieved.</span>
          </span>
        </param>
        <param name="values">
          <span data-ttu-id="0f83b-171">Objet qui contient les paramètres d’un itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-171">An object that contains the parameters for a route.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f83b-172">Retourne des informations sur le chemin d’URL associé à l’itinéraire nommé, selon le contexte, le nom d’itinéraire et les valeurs de paramètres spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-172">Returns information about the URL path that is associated with the named route, given the specified context, route name, and parameter values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f83b-173">Objet qui contient des informations sur le chemin d’URL associé à l’itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-173">An object that contains information about the URL path that is associated with the route.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0f83b-174">Aucun itinéraire avec le nom spécifié dans le paramètre <paramref name="name" /> n'a été trouvé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-174">No route could be found that has the name specified in the <paramref name="name" /> parameter.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWriteLock">
      <MemberSignature Language="C#" Value="public IDisposable GetWriteLock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable GetWriteLock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetWriteLock" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWriteLock () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ GetWriteLock();" />
      <MemberSignature Language="F#" Value="member this.GetWriteLock : unit -&gt; IDisposable" Usage="routeCollection.GetWriteLock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0f83b-175">Fournit un objet pour gérer la sécurité des threads quand vous ajoutez ou supprimez des éléments dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-175">Provides an object for managing thread safety when you add or remove elements in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f83b-176">Objet qui gère la sécurité des threads.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-176">An object that manages thread safety.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f83b-177">L’approche recommandée pour définir des itinéraires dans une application ASP.NET consiste à ajouter les itinéraires vers le <xref:System.Web.Routing.RouteTable.Routes%2A> propriété dans un gestionnaire d’événements pour le `Application_Start` événement dans le fichier Global.asax.</span><span class="sxs-lookup"><span data-stu-id="0f83b-177">The recommended approach for defining routes in an ASP.NET application is to add the routes to the <xref:System.Web.Routing.RouteTable.Routes%2A> property in an event handler for the `Application_Start` event in the Global.asax file.</span></span> <span data-ttu-id="0f83b-178">Pour plus d'informations, consultez <xref:System.Web.Routing.RouteCollection>.</span><span class="sxs-lookup"><span data-stu-id="0f83b-178">For more information, see <xref:System.Web.Routing.RouteCollection>.</span></span>  
  
 <span data-ttu-id="0f83b-179">Si vous devez ajouter un itinéraire lorsque l’application est en cours d’exécution, vous utilisez la <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> méthode pour garantir la sécurité des threads.</span><span class="sxs-lookup"><span data-stu-id="0f83b-179">If you have to add a route when the application is running, you use the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to guarantee thread safety.</span></span> <span data-ttu-id="0f83b-180">Le verrou d’écriture sur la collection d’itinéraires est libéré lorsque la <xref:System.IDisposable> objet qui est retourné par cette méthode est supprimé.</span><span class="sxs-lookup"><span data-stu-id="0f83b-180">The write lock on the route collection is released when the <xref:System.IDisposable> object that is returned by this method is disposed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f83b-181">L’exemple suivant montre comment utiliser la <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> méthode lorsque vous ajoutez un itinéraire pendant que l’application est en cours d’exécution.</span><span class="sxs-lookup"><span data-stu-id="0f83b-181">The following example shows how to use the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method when you add a route while the application is running.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Ignore">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0f83b-182">Définit un modèle d'URL dont les correspondances par rapport à des itinéraires ne doivent pas être vérifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-182">Defines a URL pattern that should not be checked for matches against routes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f83b-183">Cette méthode crée un itinéraire qui est mappé à la <xref:System.Web.Routing.StopRoutingHandler> Gestionnaire d’itinéraire.</span><span class="sxs-lookup"><span data-stu-id="0f83b-183">This method creates a route that is mapped to the <xref:System.Web.Routing.StopRoutingHandler> route handler.</span></span> <span data-ttu-id="0f83b-184">Après avoir appelé cette méthode, les demandes qui correspondent au modèle d’URL spécifié ne seront pas être traitées comme acheminer les demandes.</span><span class="sxs-lookup"><span data-stu-id="0f83b-184">After you call this method, requests that match the specified URL pattern will not be processed as route requests.</span></span>  
  
 <span data-ttu-id="0f83b-185">Le routage ASP.NET ignore automatiquement les demandes lorsque l’URL correspond à un fichier physique, tel qu’un fichier image.</span><span class="sxs-lookup"><span data-stu-id="0f83b-185">ASP.NET routing automatically ignores requests when the URL matches a physical file, such as an image file.</span></span> <span data-ttu-id="0f83b-186">Dans certains cas, vous pourriez également routage ignore les demandes lorsqu’il n’existe aucun fichier physique.</span><span class="sxs-lookup"><span data-stu-id="0f83b-186">In some cases you might also want routing to ignore requests when there is no physical file.</span></span> <span data-ttu-id="0f83b-187">Par exemple, les demandes qu’ASP.NET fait automatiquement pour les fichiers .axd ne doivent pas être considérées comme des demandes d’itinéraire bien qu’il n’existe aucun fichier physique qui correspond à l’extension de nom de fichier .axd.</span><span class="sxs-lookup"><span data-stu-id="0f83b-187">For example, the requests that ASP.NET automatically makes for .axd files should not be treated as route requests even though there is no physical file that corresponds to the .axd file-name extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ignore">
      <MemberSignature Language="C#" Value="public void Ignore (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Ignore(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.Ignore(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Ignore (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Ignore(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Ignore : string -&gt; unit" Usage="routeCollection.Ignore url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="0f83b-188">Modèle d'URL à ignorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-188">The URL pattern to be ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f83b-189">Définit un modèle d'URL dont les correspondances par rapport à des itinéraires ne doivent pas être vérifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-189">Defines a URL pattern that should not be checked for matches against routes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f83b-190">Cette méthode crée un itinéraire qui est mappé à la <xref:System.Web.Routing.StopRoutingHandler> Gestionnaire d’itinéraire.</span><span class="sxs-lookup"><span data-stu-id="0f83b-190">This method creates a route that is mapped to the <xref:System.Web.Routing.StopRoutingHandler> route handler.</span></span> <span data-ttu-id="0f83b-191">Après avoir appelé cette méthode, les demandes qui correspondent au modèle d’URL spécifié ne seront pas être traitées comme acheminer les demandes.</span><span class="sxs-lookup"><span data-stu-id="0f83b-191">After you call this method, requests that match the specified URL pattern will not be processed as route requests.</span></span>  
  
 <span data-ttu-id="0f83b-192">Le routage ASP.NET ignore automatiquement les demandes lorsque l’URL correspond à un fichier physique, tel qu’un fichier image.</span><span class="sxs-lookup"><span data-stu-id="0f83b-192">ASP.NET routing automatically ignores requests when the URL matches a physical file, such as an image file.</span></span> <span data-ttu-id="0f83b-193">Dans certains cas, vous pourriez également routage ignore les demandes lorsqu’il n’existe aucun fichier physique.</span><span class="sxs-lookup"><span data-stu-id="0f83b-193">In some cases you might also want routing to ignore requests when there is no physical file.</span></span> <span data-ttu-id="0f83b-194">Par exemple, les demandes qu’ASP.NET fait automatiquement pour les fichiers .axd ne doivent pas être considérées comme des demandes d’itinéraire bien qu’il n’existe aucun fichier physique qui correspond à l’extension de nom de fichier .axd.</span><span class="sxs-lookup"><span data-stu-id="0f83b-194">For example, the requests that ASP.NET automatically makes for .axd files should not be treated as route requests even though there is no physical file that corresponds to the .axd file-name extension.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f83b-195">Le modèle par défaut pour les projets MVC utilise cette méthode pour exclure des fichiers .axd du routage, comme indiqué dans l’exemple suivant :</span><span class="sxs-lookup"><span data-stu-id="0f83b-195">The default template for MVC projects uses this method to exclude .axd files from routing, as shown in the following example:</span></span>  
  
 [!code-csharp[MvcDefaultApp#2](~/samples/snippets/csharp/VS_Snippets_WebNet/mvcdefaultapp/cs/global.asax.cs#2)]
 [!code-vb[MvcDefaultApp#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/mvcdefaultapp/vb/global.asax.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ignore">
      <MemberSignature Language="C#" Value="public void Ignore (string url, object constraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Ignore(string url, object constraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.Ignore(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Ignore (url As String, constraints As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Ignore(System::String ^ url, System::Object ^ constraints);" />
      <MemberSignature Language="F#" Value="member this.Ignore : string * obj -&gt; unit" Usage="routeCollection.Ignore (url, constraints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="constraints" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="0f83b-196">Modèle d'URL à ignorer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-196">The URL pattern to be ignored.</span>
          </span>
        </param>
        <param name="constraints">
          <span data-ttu-id="0f83b-197">Critère supplémentaire qui détermine si une demande qui correspond au modèle d'URL sera ignorée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-197">Additional criteria that determine whether a request that matches the URL pattern will be ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f83b-198">Définit un modèle d'URL qui ne doit pas être vérifié pour les correspondances par rapport à des itinéraires si une URL de requête satisfait les contraintes spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-198">Defines a URL pattern that should not be checked for matches against routes if a request URL meets the specified constraints.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f83b-199">Cette méthode crée un itinéraire qui est mappé à la <xref:System.Web.Routing.StopRoutingHandler> Gestionnaire d’itinéraire.</span><span class="sxs-lookup"><span data-stu-id="0f83b-199">This method creates a route that is mapped to the <xref:System.Web.Routing.StopRoutingHandler> route handler.</span></span> <span data-ttu-id="0f83b-200">Après avoir appelé cette méthode, les demandes qui correspondent au modèle d’URL spécifié ne seront pas être traitées comme acheminer les demandes.</span><span class="sxs-lookup"><span data-stu-id="0f83b-200">After you call this method, requests that match the specified URL pattern will not be processed as route requests.</span></span>  
  
 <span data-ttu-id="0f83b-201">Le routage ASP.NET ignore automatiquement les demandes lorsque l’URL correspond à un fichier physique, tel qu’un fichier image.</span><span class="sxs-lookup"><span data-stu-id="0f83b-201">ASP.NET routing automatically ignores requests when the URL matches a physical file, such as an image file.</span></span> <span data-ttu-id="0f83b-202">Dans certains cas, vous pourriez également routage ignore les demandes lorsqu’il n’existe aucun fichier physique.</span><span class="sxs-lookup"><span data-stu-id="0f83b-202">In some cases you might also want routing to ignore requests when there is no physical file.</span></span> <span data-ttu-id="0f83b-203">Par exemple, les demandes qu’ASP.NET fait automatiquement pour les fichiers .axd ne doivent pas être considérées comme des demandes d’itinéraire bien qu’il n’existe aucun fichier physique qui correspond à l’extension de nom de fichier .axd.</span><span class="sxs-lookup"><span data-stu-id="0f83b-203">For example, the requests that ASP.NET automatically makes for .axd files should not be treated as route requests even though there is no physical file that corresponds to the .axd file-name extension.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f83b-204">L’exemple suivant montre comment utiliser cette méthode pour ignorer toutes les URL qui ont une extension .aspx.</span><span class="sxs-lookup"><span data-stu-id="0f83b-204">The following example shows how to use this method to ignore all URLs that have an .aspx extension.</span></span> <span data-ttu-id="0f83b-205">Vous pouvez souhaiter procéder ainsi si vous inscrivez un gestionnaire HTTP personnalisé pour gérer toutes les URL pour les fichiers ayant l’extension « .aspx ».</span><span class="sxs-lookup"><span data-stu-id="0f83b-205">You might want to do this if you register a custom HTTP handler to handle all URLs for files that have the extension ".aspx".</span></span> <span data-ttu-id="0f83b-206">Un modèle d’URL unique qui correspondrait à toutes les demandes .aspx requerrait deux paramètres catchall tels que `{*path}.aspx/{*pathinfo}`.</span><span class="sxs-lookup"><span data-stu-id="0f83b-206">A single URL pattern that would match all .aspx requests would require two catchall parameters such as `{*path}.aspx/{*pathinfo}`.</span></span> <span data-ttu-id="0f83b-207">(Ce modèle correspondrait à n’importe quelle URL qui se termine par .aspx, y compris ceux qui ont des paramètres de chaîne de requête.) Toutefois, le routage autorise un seul paramètre fourre-tout à la fin.</span><span class="sxs-lookup"><span data-stu-id="0f83b-207">(This pattern would match any URL that ends in .aspx, including those that have query-string parameters.) However, routing allows only one catchall parameter at the end.</span></span> <span data-ttu-id="0f83b-208">En guise d’alternative, vous pouvez spécifier un modèle d’URL qui a un paramètre catchall unique qui correspond à toutes les URL et puis spécifier des contraintes qui excluent tout ce qui n’a pas l’extension .aspx, comme indiqué dans l’exemple suivant :</span><span class="sxs-lookup"><span data-stu-id="0f83b-208">As an alternative, you can specify a URL pattern that has a single catchall parameter that matches all URLs and then specify constraints that exclude everything that does not have the .aspx extension, as shown in the following example:</span></span>  
  
```vb  
routes.Ignore("{*allaspx}", new With {.allaspx = ".*\.aspx(/.*)?"})  
```  
  
```csharp  
routes.Ignore("{*allaspx}", new {allaspx=@".*\.aspx(/.*)?"});  
```  
  
 <span data-ttu-id="0f83b-209">La ligne de code précédente est généralement ajoutée à une méthode qui est appelée à partir de la `Application_Start` méthode dans le fichier Global.asax, comme indiqué dans l’exemple pour la <xref:System.Web.Routing.RouteCollection.Ignore%28System.String%29> de surcharge.</span><span class="sxs-lookup"><span data-stu-id="0f83b-209">The previous line of code would typically be added to a method that is called from the `Application_Start` method in the Global.asax, as shown in the example for the <xref:System.Web.Routing.RouteCollection.Ignore%28System.String%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f83b-210">Le paramètre <paramref name="url" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-210">The <paramref name="url" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, System.Web.Routing.RouteBase item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, class System.Web.Routing.RouteBase item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.InsertItem(System.Int32,System.Web.Routing.RouteBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As RouteBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, System::Web::Routing::RouteBase ^ item);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * System.Web.Routing.RouteBase -&gt; unit" Usage="routeCollection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Web.Routing.RouteBase" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0f83b-211">Index de base zéro au niveau duquel <c>item</c> est inséré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-211">The zero-based index at which <c>item</c> is inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="0f83b-212">Itinéraire à insérer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-212">The route to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f83b-213">Insère l'itinéraire spécifié dans l'objet <see cref="T:System.Web.Routing.RouteCollection" /> à l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-213">Inserts the specified route into the <see cref="T:System.Web.Routing.RouteCollection" /> object at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f83b-214">Lorsque vous ajoutez un itinéraire sans nom à la <xref:System.Web.Routing.RouteCollection> de l’objet, vous ne pouvez pas ajouter un itinéraire qui est déjà dans la collection.</span><span class="sxs-lookup"><span data-stu-id="0f83b-214">When you add an unnamed route to the <xref:System.Web.Routing.RouteCollection> object, you cannot add a route that already is in the collection.</span></span>  
  
 <span data-ttu-id="0f83b-215">Utilisez le <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> (méthode) et le <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> méthode pour vous assurer que vous interagissez avec la collection sans conflits provenant d’autres processus.</span><span class="sxs-lookup"><span data-stu-id="0f83b-215">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f83b-216">
            <paramref name="item" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-216">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0f83b-217">
            <paramref name="item" /> existe déjà dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-217">
              <paramref name="item" /> is already in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteBase this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RouteBase Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.RouteCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As RouteBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RouteBase ^ default[System::String ^] { System::Web::Routing::RouteBase ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Web.Routing.RouteBase" Usage="System.Web.Routing.RouteCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="0f83b-218">Valeur qui identifie l’itinéraire à obtenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-218">The value that identifies the route to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f83b-219">Obtient l’itinéraire dans la collection qui porte le nom spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-219">Gets the route in the collection that has the specified name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0f83b-220">Un objet portant le nom spécifié, ou <see langword="null" /> si <paramref name="name" /> est <see langword="null" />, est une chaîne vide ou ne correspond pas à un itinéraire dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-220">An object that has the specified name, or <see langword="null" /> if <paramref name="name" /> is <see langword="null" />, is an empty string, or does not match any route in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f83b-221">Utilisez le <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> (méthode) et le <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> méthode pour vous assurer que vous interagissez avec la collection sans conflits provenant d’autres processus.</span><span class="sxs-lookup"><span data-stu-id="0f83b-221">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LowercaseUrls">
      <MemberSignature Language="C#" Value="public bool LowercaseUrls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LowercaseUrls" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.RouteCollection.LowercaseUrls" />
      <MemberSignature Language="VB.NET" Value="Public Property LowercaseUrls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LowercaseUrls { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LowercaseUrls : bool with get, set" Usage="System.Web.Routing.RouteCollection.LowercaseUrls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0f83b-222">Obtient ou définit une valeur qui indique si les URL sont converties en minuscules lorsque les chemins d'accès virtuels sont normalisés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-222">Gets or sets a value that indicates whether URLs are converted to lower case when virtual paths are normalized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0f83b-223">
            <see langword="true" /> pour convertir les caractères des URL en minuscules ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-223">
              <see langword="true" /> to convert URLs to lower case; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0f83b-224">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-224">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f83b-225">Si une chaîne de requête est incluse dans l’URL, cette partie de l’URL n’est pas convertie en minuscules.</span><span class="sxs-lookup"><span data-stu-id="0f83b-225">If a query string is included in the URL, that part of the URL is not converted to lower case.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MapPageRoute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0f83b-226">Offre un moyen de définir des itinéraires pour les applications Web Forms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-226">Provides a way to define routes for Web Forms applications.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f83b-227">Cette méthode est fournie pour faciliter le codage.</span><span class="sxs-lookup"><span data-stu-id="0f83b-227">This method is provided for coding convenience.</span></span> <span data-ttu-id="0f83b-228">Elle équivaut à appeler le <xref:System.Web.Routing.RouteCollection.Add%2A> méthode et en passant un <xref:System.Web.Routing.Route> objet qui est créé à l’aide de la <xref:System.Web.Routing.PageRouteHandler> classe.</span><span class="sxs-lookup"><span data-stu-id="0f83b-228">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f83b-229">L’exemple suivant montre comment définir des itinéraires pour une application Web Forms à l’aide de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="0f83b-229">The following example shows how to define routes for a Web Forms application by using this method.</span></span> <span data-ttu-id="0f83b-230">L’exemple montre une méthode nommée `RegisterRoutes` qui est appelée à partir de `Application_Start` dans le fichier Global.asax.</span><span class="sxs-lookup"><span data-stu-id="0f83b-230">The example shows a method named `RegisterRoutes` that is called from `Application_Start` in the Global.asax file.</span></span> <span data-ttu-id="0f83b-231">La méthode utilise chaque surcharge de <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> pour ajouter un itinéraire à l’application.</span><span class="sxs-lookup"><span data-stu-id="0f83b-231">The method uses each overload of <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> to add a route to the application.</span></span> <span data-ttu-id="0f83b-232">Pour plus d’informations sur la façon de définir des itinéraires pour les applications Web Forms, consultez [Comment : définir des itinéraires pour les Applications Web Forms](http://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678).</span><span class="sxs-lookup"><span data-stu-id="0f83b-232">For more information about how to define routes for Web Forms applications, see [How to: Define Routes for Web Forms Applications](http://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678).</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#122](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#122)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#122](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#122)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeUrl" Type="System.String" />
        <Parameter Name="physicalFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="routeName">
          <span data-ttu-id="0f83b-233">Nom de l'itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-233">The name of the route.</span>
          </span>
        </param>
        <param name="routeUrl">
          <span data-ttu-id="0f83b-234">Modèle d’URL pour l’itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-234">The URL pattern for the route.</span>
          </span>
        </param>
        <param name="physicalFile">
          <span data-ttu-id="0f83b-235">URL physique de l'itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-235">The physical URL for the route.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f83b-236">Offre un moyen de définir des itinéraires pour les applications Web Forms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-236">Provides a way to define routes for Web Forms applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f83b-237">Itinéraire ajouté à la collection d'itinéraires.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-237">The route that is added to the route collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f83b-238">Cette méthode est fournie pour faciliter le codage.</span><span class="sxs-lookup"><span data-stu-id="0f83b-238">This method is provided for coding convenience.</span></span> <span data-ttu-id="0f83b-239">Elle équivaut à appeler le <xref:System.Web.Routing.RouteCollection.Add%2A> méthode et en passant un <xref:System.Web.Routing.Route> objet qui est créé à l’aide de la <xref:System.Web.Routing.PageRouteHandler> classe.</span><span class="sxs-lookup"><span data-stu-id="0f83b-239">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f83b-240">L’exemple suivant montre comment définir un itinéraire à l’aide de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="0f83b-240">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="0f83b-241">La première instruction définit un itinéraire qui n’a pas de nom.</span><span class="sxs-lookup"><span data-stu-id="0f83b-241">The first statement defines a route that does not have a name.</span></span> <span data-ttu-id="0f83b-242">La deuxième instruction définit un itinéraire nommé.</span><span class="sxs-lookup"><span data-stu-id="0f83b-242">The second statement defines a named route.</span></span> <span data-ttu-id="0f83b-243">Cet exemple fait partie d’un exemple plus complet qui est disponible dans le <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> vue d’ensemble de la méthode.</span><span class="sxs-lookup"><span data-stu-id="0f83b-243">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#140](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#140)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#140](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#140)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String, checkPhysicalUrlAccess As Boolean) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string * bool -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile, checkPhysicalUrlAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeUrl" Type="System.String" />
        <Parameter Name="physicalFile" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="routeName">
          <span data-ttu-id="0f83b-244">Nom de l'itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-244">The name of the route.</span>
          </span>
        </param>
        <param name="routeUrl">
          <span data-ttu-id="0f83b-245">Modèle d’URL pour l’itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-245">The URL pattern for the route.</span>
          </span>
        </param>
        <param name="physicalFile">
          <span data-ttu-id="0f83b-246">URL physique de l'itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-246">The physical URL for the route.</span>
          </span>
        </param>
        <param name="checkPhysicalUrlAccess">
          <span data-ttu-id="0f83b-247">Valeur qui indique si ASP.NET doit valider que l'utilisateur a autorité pour accéder à l'URL physique (l'URL de routage est toujours vérifiée).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-247">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked).</span>
          </span>
          <span data-ttu-id="0f83b-248">Ce paramètre définit la propriété <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-248">This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f83b-249">Offre un moyen de définir des itinéraires pour les applications Web Forms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-249">Provides a way to define routes for Web Forms applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f83b-250">Itinéraire ajouté à la collection d'itinéraires.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-250">The route that is added to the route collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f83b-251">Cette méthode est fournie pour faciliter le codage.</span><span class="sxs-lookup"><span data-stu-id="0f83b-251">This method is provided for coding convenience.</span></span> <span data-ttu-id="0f83b-252">Elle équivaut à appeler le <xref:System.Web.Routing.RouteCollection.Add%2A> méthode et en passant un <xref:System.Web.Routing.Route> objet qui est créé à l’aide de la <xref:System.Web.Routing.PageRouteHandler> classe.</span><span class="sxs-lookup"><span data-stu-id="0f83b-252">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f83b-253">L’exemple suivant montre comment définir un itinéraire à l’aide de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="0f83b-253">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="0f83b-254">Cet exemple fait partie d’un exemple plus complet qui est disponible dans le <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> vue d’ensemble de la méthode.</span><span class="sxs-lookup"><span data-stu-id="0f83b-254">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#145](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#145)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#145](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, System.Web.Routing.RouteValueDictionary defaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, class System.Web.Routing.RouteValueDictionary defaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String, checkPhysicalUrlAccess As Boolean, defaults As RouteValueDictionary) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile, bool checkPhysicalUrlAccess, System::Web::Routing::RouteValueDictionary ^ defaults);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string * bool * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile, checkPhysicalUrlAccess, defaults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeUrl" Type="System.String" />
        <Parameter Name="physicalFile" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeName">
          <span data-ttu-id="0f83b-255">Nom de l'itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-255">The name of the route.</span>
          </span>
        </param>
        <param name="routeUrl">
          <span data-ttu-id="0f83b-256">Modèle d’URL pour l’itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-256">The URL pattern for the route.</span>
          </span>
        </param>
        <param name="physicalFile">
          <span data-ttu-id="0f83b-257">URL physique de l'itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-257">The physical URL for the route.</span>
          </span>
        </param>
        <param name="checkPhysicalUrlAccess">
          <span data-ttu-id="0f83b-258">Valeur qui indique si ASP.NET doit valider que l'utilisateur a autorité pour accéder à l'URL physique (l'URL de routage est toujours vérifiée).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-258">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked).</span>
          </span>
          <span data-ttu-id="0f83b-259">Ce paramètre définit la propriété <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-259">This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</span>
          </span>
        </param>
        <param name="defaults">
          <span data-ttu-id="0f83b-260">Valeurs par défaut pour les paramètres d'itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-260">Default values for the route parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f83b-261">Offre un moyen de définir des itinéraires pour les applications Web Forms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-261">Provides a way to define routes for Web Forms applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f83b-262">Itinéraire ajouté à la collection d'itinéraires.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-262">The route that is added to the route collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f83b-263">Cette méthode est fournie pour faciliter le codage.</span><span class="sxs-lookup"><span data-stu-id="0f83b-263">This method is provided for coding convenience.</span></span> <span data-ttu-id="0f83b-264">Elle équivaut à appeler le <xref:System.Web.Routing.RouteCollection.Add%2A> méthode et en passant un <xref:System.Web.Routing.Route> objet qui est créé à l’aide de la <xref:System.Web.Routing.PageRouteHandler> classe.</span><span class="sxs-lookup"><span data-stu-id="0f83b-264">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f83b-265">L’exemple suivant montre comment définir un itinéraire à l’aide de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="0f83b-265">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="0f83b-266">Cet exemple fait partie d’un exemple plus complet qui est disponible dans le <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> vue d’ensemble de la méthode.</span><span class="sxs-lookup"><span data-stu-id="0f83b-266">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#150](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#150)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#150](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#150)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.RouteValueDictionary constraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, class System.Web.Routing.RouteValueDictionary defaults, class System.Web.Routing.RouteValueDictionary constraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String, checkPhysicalUrlAccess As Boolean, defaults As RouteValueDictionary, constraints As RouteValueDictionary) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile, bool checkPhysicalUrlAccess, System::Web::Routing::RouteValueDictionary ^ defaults, System::Web::Routing::RouteValueDictionary ^ constraints);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string * bool * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile, checkPhysicalUrlAccess, defaults, constraints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeUrl" Type="System.String" />
        <Parameter Name="physicalFile" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="constraints" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeName">
          <span data-ttu-id="0f83b-267">Nom de l'itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-267">The name of the route.</span>
          </span>
        </param>
        <param name="routeUrl">
          <span data-ttu-id="0f83b-268">Modèle d’URL pour l’itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-268">The URL pattern for the route.</span>
          </span>
        </param>
        <param name="physicalFile">
          <span data-ttu-id="0f83b-269">URL physique de l'itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-269">The physical URL for the route.</span>
          </span>
        </param>
        <param name="checkPhysicalUrlAccess">
          <span data-ttu-id="0f83b-270">Valeur qui indique si ASP.NET doit valider que l'utilisateur a autorité pour accéder à l'URL physique (l'URL de routage est toujours vérifiée).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-270">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked).</span>
          </span>
          <span data-ttu-id="0f83b-271">Ce paramètre définit la propriété <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-271">This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</span>
          </span>
        </param>
        <param name="defaults">
          <span data-ttu-id="0f83b-272">Valeurs par défaut de l'itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-272">Default values for the route.</span>
          </span>
        </param>
        <param name="constraints">
          <span data-ttu-id="0f83b-273">Contraintes qu'une requête d'URL doit satisfaire pour qu'elles soient traitées en tant qu'itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-273">Constraints that a URL request must meet in order to be processed as this route.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f83b-274">Offre un moyen de définir des itinéraires pour les applications Web Forms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-274">Provides a way to define routes for Web Forms applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f83b-275">Itinéraire ajouté à la collection d'itinéraires.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-275">The route that is added to the route collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f83b-276">Cette méthode est fournie pour faciliter le codage.</span><span class="sxs-lookup"><span data-stu-id="0f83b-276">This method is provided for coding convenience.</span></span> <span data-ttu-id="0f83b-277">Elle équivaut à appeler le <xref:System.Web.Routing.RouteCollection.Add%2A> méthode et en passant un <xref:System.Web.Routing.Route> objet qui est créé à l’aide de la <xref:System.Web.Routing.PageRouteHandler> classe.</span><span class="sxs-lookup"><span data-stu-id="0f83b-277">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f83b-278">L’exemple suivant montre comment définir un itinéraire à l’aide de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="0f83b-278">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="0f83b-279">Cet exemple fait partie d’un exemple plus complet qui est disponible dans le <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> vue d’ensemble de la méthode.</span><span class="sxs-lookup"><span data-stu-id="0f83b-279">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#155](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#155)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#155](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#155)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.RouteValueDictionary constraints, System.Web.Routing.RouteValueDictionary dataTokens);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, class System.Web.Routing.RouteValueDictionary defaults, class System.Web.Routing.RouteValueDictionary constraints, class System.Web.Routing.RouteValueDictionary dataTokens) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String, checkPhysicalUrlAccess As Boolean, defaults As RouteValueDictionary, constraints As RouteValueDictionary, dataTokens As RouteValueDictionary) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile, bool checkPhysicalUrlAccess, System::Web::Routing::RouteValueDictionary ^ defaults, System::Web::Routing::RouteValueDictionary ^ constraints, System::Web::Routing::RouteValueDictionary ^ dataTokens);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string * bool * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile, checkPhysicalUrlAccess, defaults, constraints, dataTokens)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeUrl" Type="System.String" />
        <Parameter Name="physicalFile" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="constraints" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="dataTokens" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeName">
          <span data-ttu-id="0f83b-280">Nom de l'itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-280">The name of the route.</span>
          </span>
        </param>
        <param name="routeUrl">
          <span data-ttu-id="0f83b-281">Modèle d’URL pour l’itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-281">The URL pattern for the route.</span>
          </span>
        </param>
        <param name="physicalFile">
          <span data-ttu-id="0f83b-282">URL physique de l'itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-282">The physical URL for the route.</span>
          </span>
        </param>
        <param name="checkPhysicalUrlAccess">
          <span data-ttu-id="0f83b-283">Valeur qui indique si ASP.NET doit valider que l'utilisateur a autorité pour accéder à l'URL physique (l'URL de routage est toujours vérifiée).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-283">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked).</span>
          </span>
          <span data-ttu-id="0f83b-284">Ce paramètre définit la propriété <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-284">This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</span>
          </span>
        </param>
        <param name="defaults">
          <span data-ttu-id="0f83b-285">Valeurs par défaut pour les paramètres d'itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-285">Default values for the route parameters.</span>
          </span>
        </param>
        <param name="constraints">
          <span data-ttu-id="0f83b-286">Contraintes qu'une requête d'URL doit satisfaire pour qu'elles soient traitées en tant qu'itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-286">Constraints that a URL request must meet in order to be processed as this route.</span>
          </span>
        </param>
        <param name="dataTokens">
          <span data-ttu-id="0f83b-287">Valeurs associées à l'itinéraire et non utilisées pour déterminer si un itinéraire correspond à un modèle d'URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-287">Values that are associated with the route that are not used to determine whether a route matches a URL pattern.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f83b-288">Offre un moyen de définir des itinéraires pour les applications Web Forms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-288">Provides a way to define routes for Web Forms applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0f83b-289">Itinéraire ajouté à la collection d'itinéraires.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-289">The route that is added to the route collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f83b-290">Cette méthode est fournie pour faciliter le codage.</span><span class="sxs-lookup"><span data-stu-id="0f83b-290">This method is provided for coding convenience.</span></span> <span data-ttu-id="0f83b-291">Elle équivaut à appeler le <xref:System.Web.Routing.RouteCollection.Add%2A> méthode et en passant un <xref:System.Web.Routing.Route> objet qui est créé à l’aide de la <xref:System.Web.Routing.PageRouteHandler> classe.</span><span class="sxs-lookup"><span data-stu-id="0f83b-291">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0f83b-292">L’exemple suivant montre comment définir un itinéraire à l’aide de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="0f83b-292">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="0f83b-293">Cet exemple fait partie d’un exemple plus complet qui est disponible dans le <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> vue d’ensemble de la méthode.</span><span class="sxs-lookup"><span data-stu-id="0f83b-293">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#160](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#160)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#160](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#160)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f83b-294">Le paramètre <paramref name="routeUrl" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-294">The <paramref name="routeUrl" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected override void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RemoveItem(int index);" />
      <MemberSignature Language="F#" Value="override this.RemoveItem : int -&gt; unit" Usage="routeCollection.RemoveItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0f83b-295">Index de base zéro de l’itinéraire à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-295">The zero-based index of the route to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f83b-296">Supprime l'itinéraire de l'objet <see cref="T:System.Web.Routing.RouteCollection" /> à l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-296">Removes the route from the <see cref="T:System.Web.Routing.RouteCollection" /> object at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f83b-297">Utilisez le <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> (méthode) et le <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> méthode pour vous assurer que vous interagissez avec la collection sans conflits provenant d’autres processus.</span><span class="sxs-lookup"><span data-stu-id="0f83b-297">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteExistingFiles">
      <MemberSignature Language="C#" Value="public bool RouteExistingFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RouteExistingFiles" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.RouteCollection.RouteExistingFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteExistingFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RouteExistingFiles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RouteExistingFiles : bool with get, set" Usage="System.Web.Routing.RouteCollection.RouteExistingFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0f83b-298">Obtient ou définit une valeur qui indique si le routage ASP.NET doit gérer des URL qui correspondent à un fichier existant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-298">Gets or sets a value that indicates whether ASP.NET routing should handle URLs that match an existing file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0f83b-299">
            <see langword="true" /> si le routage ASP.NET gère toutes les requêtes, y compris celles qui correspondent à un fichier existant ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-299">
              <see langword="true" /> if ASP.NET routing handles all requests, even those that match an existing file; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0f83b-300">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-300">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f83b-301">Bien que cette valeur peut être modifiée dynamiquement, toute modification apportée après l’activation d’un service sera ignorée lors de l’utilisation d’intégration du routage ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="0f83b-301">Although this value can be changed dynamically, any change made after a service has been activated will be ignored when using ASP.NET routing integration.</span></span> <span data-ttu-id="0f83b-302">Pour plus d’informations, consultez [intégration de routage ASP.NET](http://go.microsoft.com/fwlink/?LinkId=195235).</span><span class="sxs-lookup"><span data-stu-id="0f83b-302">For more information, see [ASP.NET Routing Integration](http://go.microsoft.com/fwlink/?LinkId=195235).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override void SetItem (int index, System.Web.Routing.RouteBase item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, class System.Web.Routing.RouteBase item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.SetItem(System.Int32,System.Web.Routing.RouteBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItem (index As Integer, item As RouteBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, System::Web::Routing::RouteBase ^ item);" />
      <MemberSignature Language="F#" Value="override this.SetItem : int * System.Web.Routing.RouteBase -&gt; unit" Usage="routeCollection.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Web.Routing.RouteBase" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0f83b-303">Index de base zéro de l’itinéraire à remplacer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-303">The zero-based index of the route to replace.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="0f83b-304">Itinéraire à ajouter à l’index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-304">The route to add at the specified index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0f83b-305">Remplace l’itinéraire à l’index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-305">Replaces the route at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0f83b-306">Lorsque vous ajoutez un itinéraire sans nom à la <xref:System.Web.Routing.RouteCollection> de l’objet, vous ne pouvez pas ajouter un itinéraire qui est déjà dans la collection.</span><span class="sxs-lookup"><span data-stu-id="0f83b-306">When you add an unnamed route to the <xref:System.Web.Routing.RouteCollection> object, you cannot add a route that already is in the collection.</span></span>  
  
 <span data-ttu-id="0f83b-307">Utilisez le <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> (méthode) et le <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> méthode pour vous assurer que vous interagissez avec la collection sans conflits provenant d’autres processus.</span><span class="sxs-lookup"><span data-stu-id="0f83b-307">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0f83b-308">
            <paramref name="item" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-308">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0f83b-309">
            <paramref name="item" /> existe déjà dans la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0f83b-309">
              <paramref name="item" /> is already in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>