<Type Name="PageRouteHandler" FullName="System.Web.Routing.PageRouteHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e57b2750234e1844025e285e7241399f3129ce1b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39989600" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PageRouteHandler : System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PageRouteHandler extends System.Object implements class System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.PageRouteHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class PageRouteHandler&#xA;Implements IRouteHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageRouteHandler : System::Web::Routing::IRouteHandler" />
  <TypeSignature Language="F#" Value="type PageRouteHandler = class&#xA;    interface IRouteHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Routing.IRouteHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="cbb62-101">Fournit des propriétés et des méthodes pour définir le mappage d'une URL à un fichier physique.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cbb62-101">Provides properties and methods for defining how a URL maps to a physical file.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbb62-102">Vous passez une instance de <xref:System.Web.Routing.PageRouteHandler> à la <xref:System.Web.Routing.Route> constructeur afin de mapper une URL d’un fichier physique.</span><span class="sxs-lookup"><span data-stu-id="cbb62-102">You pass an instance of <xref:System.Web.Routing.PageRouteHandler> to the <xref:System.Web.Routing.Route> constructor in order to map a URL of a physical file.</span></span> <span data-ttu-id="cbb62-103">Le <xref:System.Web.Routing.PageRouteHandler> objet spécifie le chemin d’accès virtuel du fichier physique et détermine si les règles d’autorisation pour l’URL physique est activé.</span><span class="sxs-lookup"><span data-stu-id="cbb62-103">The <xref:System.Web.Routing.PageRouteHandler> object specifies the virtual path of the physical file and determines whether authorization rules for the physical URL is checked.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Routing.Route" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="cbb62-104">Initialise une nouvelle instance de la classe <see cref="T:System.Web.Routing.PageRouteHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbb62-104">Initializes a new instance of the <see cref="T:System.Web.Routing.PageRouteHandler" /> class.</span>
          </span>
        </summary>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRouteHandler (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRouteHandler(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.PageRouteHandler : string -&gt; System.Web.Routing.PageRouteHandler" Usage="new System.Web.Routing.PageRouteHandler virtualPath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="cbb62-105">Chemin d'accès virtuel du fichier physique pour cet objet <see cref="P:System.Web.Routing.RouteData.Route" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbb62-105">The virtual path of the physical file for this <see cref="P:System.Web.Routing.RouteData.Route" /> object.</span>
          </span>
          <span data-ttu-id="cbb62-106">Le fichier doit être situé dans l'application active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbb62-106">The file must be located in the current application.</span>
          </span>
          <span data-ttu-id="cbb62-107">Par conséquent, le chemin d'accès doit commencer par un tilde (~).</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbb62-107">Therefore, the path must begin with a tilde (~).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbb62-108">Initialise une nouvelle instance de la classe <see cref="T:System.Web.Routing.PageRouteHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbb62-108">Initializes a new instance of the <see cref="T:System.Web.Routing.PageRouteHandler" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbb62-109">Lorsque vous utilisez ce constructeur, le <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> propriété est définie sur `true`.</span><span class="sxs-lookup"><span data-stu-id="cbb62-109">When you use this constructor, the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cbb62-110">Le paramètre <paramref name="virtualPath" /> est <see langword="null" /> ou est une chaîne vide ou ne commence pas par « ~/ ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbb62-110">The <paramref name="virtualPath" /> parameter is <see langword="null" /> or is an empty string or does not start with "~/".</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRouteHandler (string virtualPath, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string virtualPath, bool checkPhysicalUrlAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPath As String, checkPhysicalUrlAccess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRouteHandler(System::String ^ virtualPath, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.PageRouteHandler : string * bool -&gt; System.Web.Routing.PageRouteHandler" Usage="new System.Web.Routing.PageRouteHandler (virtualPath, checkPhysicalUrlAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="cbb62-111">Chemin d'accès virtuel du fichier physique de cet objet <see cref="P:System.Web.Routing.RouteData.Route" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbb62-111">The virtual path of the physical file of this <see cref="P:System.Web.Routing.RouteData.Route" /> object.</span>
          </span>
          <span data-ttu-id="cbb62-112">Le fichier doit être situé dans l'application active.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbb62-112">The file must be located in the current application.</span>
          </span>
          <span data-ttu-id="cbb62-113">Par conséquent, le chemin d'accès doit commencer par un tilde (~).</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbb62-113">Therefore, the path must begin with a tilde (~).</span>
          </span>
        </param>
        <param name="checkPhysicalUrlAccess">
          <span data-ttu-id="cbb62-114">Si cette propriété a la valeur <see langword="false" />, les règles d'autorisation sont appliquées à l'URL de requête et non à l'URL de la page physique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbb62-114">If this property is set to <see langword="false" />, authorization rules will be applied to the request URL and not to the URL of the physical page.</span>
          </span>
          <span data-ttu-id="cbb62-115">Si cette propriété a la valeur <see langword="true" />, les règles d'autorisation sont appliquées à l'URL de requête et à l'URL de la page physique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbb62-115">If this property is set to <see langword="true" />, authorization rules will be applied to both the request URL and to the URL of the physical page.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbb62-116">Initialise une nouvelle instance de la classe <see cref="T:System.Web.Routing.PageRouteHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbb62-116">Initializes a new instance of the <see cref="T:System.Web.Routing.PageRouteHandler" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbb62-117">Par défaut, le <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> propriété est `true`.</span><span class="sxs-lookup"><span data-stu-id="cbb62-117">By default, the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is `true`.</span></span> <span data-ttu-id="cbb62-118">Par conséquent, si vous souhaitez que les règles d’autorisation à appliquer à l’URL de la page physique et à l’URL de routage, vous pouvez utiliser le <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%29> constructeur au lieu de ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="cbb62-118">Therefore, if you want authorization rules to be applied to both the URL of the physical page and to the route URL, you can use the <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%29> constructor instead of this constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="cbb62-119">Le paramètre <paramref name="virtualPath" /> est <see langword="null" /> ou est une chaîne vide ou ne commence pas par « ~/ ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbb62-119">The <paramref name="virtualPath" /> parameter is <see langword="null" /> or is an empty string or does not start with "~/".</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
    <Member MemberName="CheckPhysicalUrlAccess">
      <MemberSignature Language="C#" Value="public bool CheckPhysicalUrlAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckPhysicalUrlAccess" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckPhysicalUrlAccess As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckPhysicalUrlAccess { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckPhysicalUrlAccess : bool" Usage="System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cbb62-120">Obtient une valeur qui détermine si des règles d'autorisation sont appliquées à l'URL du fichier physique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbb62-120">Gets a value that determines whether authorization rules are applied to the physical file's URL.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cbb62-121">
            <see langword="true" /> si l'autorisation est vérifiée pour l'URL du fichier physique associé à l'itinéraire ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbb62-121">
              <see langword="true" /> if authorization is checked for the URL of the physical file that is associated with the route; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="cbb62-122">La valeur par défaut est <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbb62-122">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbb62-123">Vous pouvez définir le <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> propriété lorsque vous utilisez le <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%2CSystem.Boolean%29> constructeur.</span><span class="sxs-lookup"><span data-stu-id="cbb62-123">You can set the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property when you use the <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%2CSystem.Boolean%29> constructor.</span></span>  
  
 <span data-ttu-id="cbb62-124">La valeur de la <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> propriété détermine si le <xref:System.Web.Routing.PageRouteHandler> les autorisations de sécurité uniquement pour l’URL de routage ou pour la page physique et l’URL de routage à l’objet.</span><span class="sxs-lookup"><span data-stu-id="cbb62-124">The value of the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property determines whether the <xref:System.Web.Routing.PageRouteHandler> object will check security permissions only for the route URL or for both the physical page and the route URL.</span></span>  
  
 <span data-ttu-id="cbb62-125">Lorsque le <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> propriété est définie sur `true` (qui est sa valeur par défaut), un utilisateur doit avoir l’autorisation d’accéder à l’URL de routage et l’URL physique.</span><span class="sxs-lookup"><span data-stu-id="cbb62-125">When the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is set to `true` (which is its default value), a user must have permission to access both the route URL and the physical URL.</span></span> <span data-ttu-id="cbb62-126">Lorsque le <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> propriété est définie sur `false`, un utilisateur requiert uniquement l’autorisation d’accéder à l’URL de routage et les autorisations pour l’URL physique ne sont pas vérifiées.</span><span class="sxs-lookup"><span data-stu-id="cbb62-126">When the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is set to `false`, a user requires only permission to access the route URL, and permissions for the physical URL are not checked.</span></span>  
  
 <span data-ttu-id="cbb62-127">Les autorisations sont définies dans le fichier Web.config, comme indiqué dans l’exemple suivant :</span><span class="sxs-lookup"><span data-stu-id="cbb62-127">Permissions are defined in the Web.config file, as shown in the following example:</span></span>  
  
```  
<configuration>  
  <location path="categoriespage.aspx">  
    <system.web>  
      <authorization>  
        <allow roles="admin"/>  
        <deny users="*"/>  
      </authorization>  
    </system.web>  
  </location>  
  <location path="category">  
    <system.web>  
      <authorization>  
        <allow users="*"/>  
      </authorization>  
    </system.web>  
  </location>  
</configuration>  
```  
  
 <span data-ttu-id="cbb62-128">Pour une URL de demande qui contient `Category/food/show` après le nom de domaine, si le modèle d’URL de routage est `Category/{action}/{categoryName}` et la page physique est Categoriespage.aspx, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] applique les autorisations définies dans l’exemple précédent dans une des manières suivantes :</span><span class="sxs-lookup"><span data-stu-id="cbb62-128">For a request URL that contains `Category/food/show` after the domain name, if the route URL pattern is `Category/{action}/{categoryName}` and the physical page is Categoriespage.aspx, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] applies the permissions defined in the previous example in one of the following ways:</span></span>  
  
-   <span data-ttu-id="cbb62-129">Si le <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> propriété est `false`, tous les utilisateurs sont autorisés à accéder, étant donné que tous les utilisateurs sont autorisés à accéder à du modèle d’URL qui commence par `category`.</span><span class="sxs-lookup"><span data-stu-id="cbb62-129">If the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is `false`, all users are granted access, because all users are granted access to the URL pattern that starts with `category`.</span></span>  
  
-   <span data-ttu-id="cbb62-130">Si le <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> propriété est `true`, seuls `admin` utilisateurs sont autorisés à accéder.</span><span class="sxs-lookup"><span data-stu-id="cbb62-130">If the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is `true`, only `admin` users are granted access.</span></span> <span data-ttu-id="cbb62-131">Tous les utilisateurs ont accès au modèle d’URL qui commence par `category`, mais uniquement `admin` utilisateurs ont accès à la page Categoriespage.aspx physique.</span><span class="sxs-lookup"><span data-stu-id="cbb62-131">All users have access to the URL pattern that begins with `category`, but only `admin` users have access to the physical page Categoriespage.aspx.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
    <Member MemberName="GetHttpHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler GetHttpHandler (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.IHttpHandler GetHttpHandler(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::IHttpHandler ^ GetHttpHandler(System::Web::Routing::RequestContext ^ requestContext);" />
      <MemberSignature Language="F#" Value="abstract member GetHttpHandler : System.Web.Routing.RequestContext -&gt; System.Web.IHttpHandler&#xA;override this.GetHttpHandler : System.Web.Routing.RequestContext -&gt; System.Web.IHttpHandler" Usage="pageRouteHandler.GetHttpHandler requestContext" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Routing.IRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext">
          <span data-ttu-id="cbb62-132">Objet qui encapsule des informations sur la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbb62-132">An object that encapsulates information about the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbb62-133">Retourne l’objet qui traite la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbb62-133">Returns the object that processes the request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbb62-134">Objet qui traite la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbb62-134">The object that processes the request.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cbb62-135">Le paramètre <paramref name="requestContext" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbb62-135">The <paramref name="requestContext" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
    <Member MemberName="GetSubstitutedVirtualPath">
      <MemberSignature Language="C#" Value="public string GetSubstitutedVirtualPath (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetSubstitutedVirtualPath(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath(System.Web.Routing.RequestContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetSubstitutedVirtualPath(System::Web::Routing::RequestContext ^ requestContext);" />
      <MemberSignature Language="F#" Value="member this.GetSubstitutedVirtualPath : System.Web.Routing.RequestContext -&gt; string" Usage="pageRouteHandler.GetSubstitutedVirtualPath requestContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext">
          <span data-ttu-id="cbb62-136">Objet qui encapsule des informations sur la requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbb62-136">An object that encapsulates information about the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cbb62-137">Retourne le chemin d'accès virtuel du fichier physique pour l'itinéraire après l'application de substitutions aux paramètres de remplacement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbb62-137">Returns the virtual path of the physical file for the route after substitutions have been applied to any replacement parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cbb62-138">URL du fichier physique généré à partir d'un itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbb62-138">The URL of the physical file that was generated from a route.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbb62-139">Si le <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> valeur ne contient pas de paramètres de remplacement, le <xref:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath%2A> méthode retourne la même valeur que le <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="cbb62-139">If the <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> value does not contain any replacement parameters, the <xref:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath%2A> method returns the same value as the <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cbb62-140">Le paramètre <paramref name="requestContext" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbb62-140">The <paramref name="requestContext" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="public string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.PageRouteHandler.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Routing.PageRouteHandler.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cbb62-141">Obtient le chemin d'accès virtuel de la page Web associée à cet itinéraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbb62-141">Gets the virtual path of the Web page that is associated with this route.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cbb62-142">URL de la page Web, avant l'application de substitutions aux paramètres de remplacement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cbb62-142">The URL of the Web page, before substitutions have been applied for any replacement parameters.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cbb62-143">Vous définissez le <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> propriété dans le <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> constructeur ou dans le <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> constructeur.</span><span class="sxs-lookup"><span data-stu-id="cbb62-143">You set the <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> property in the <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> constructor or in the <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
  </Members>
</Type>