<Type Name="Route" FullName="System.Web.Routing.Route">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1d3f0cc42d0b710e90cb52188d8d38bb8e88a3a7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30540213" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Route : System.Web.Routing.RouteBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Route extends System.Web.Routing.RouteBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.Route" />
  <TypeSignature Language="VB.NET" Value="Public Class Route&#xA;Inherits RouteBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Route : System::Web::Routing::RouteBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Routing.RouteBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fournit des propriétés et des méthodes pour définir un itinéraire et pour obtenir des informations sur l’itinéraire.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Web.Routing.Route> classe vous permet de spécifier comment le routage est traité dans une application ASP.NET. Vous créez un <xref:System.Web.Routing.Route> pour chaque modèle d’URL que vous souhaitez mapper à une classe qui peut gérer les demandes qui correspondent à ce modèle d’objet. Vous ajoutez ensuite l’itinéraire à la <xref:System.Web.Routing.RouteTable.Routes%2A> collection. Lorsque l’application reçoit une demande, le routage ASP.NET itère les itinéraires dans les <xref:System.Web.Routing.RouteTable.Routes%2A> collection pour rechercher le premier itinéraire qui correspond au modèle de l’URL.  
  
 Définir le <xref:System.Web.Routing.Route.Url%2A> propriété à un modèle d’URL. Modèle d’URL se compose de segments situés après le nom de l’application dans une requête HTTP. Par exemple, dans l’URL `http://www.contoso.com/products/show/beverages`, le modèle s’applique à `products/show/beverages`. Un modèle avec trois segments, tels que `{controller}/{action}/{id}`, correspond à l’URL `http://www.contoso.com/products/show/beverages`. Chaque segment est délimitée par le `/` caractère. Lorsqu’un segment est placé entre accolades (`{` et `}`), le segment fait référence à un paramètre d’URL. Le routage ASP.NET récupère la valeur de la demande et l’affecte au paramètre d’URL. Dans l’exemple précédent, le paramètre d’URL `action` reçoit la valeur `show`. Si le segment n’est pas placé entre accolades, la valeur est traitée comme une valeur littérale.  
  
 Définir le <xref:System.Web.Routing.Route.Defaults%2A> propriété un <xref:System.Web.Routing.RouteValueDictionary> objet qui inclut des valeurs qui sont utilisées si un paramètre est absent dans l’URL ou pour définir des valeurs supplémentaires qui ne sont pas paramétrables dans l’URL. Définir le <xref:System.Web.Routing.Route.Constraints%2A> propriété un <xref:System.Web.Routing.RouteValueDictionary> objet qui contient des valeurs qui sont des expressions régulières ou <xref:System.Web.Routing.IRouteConstraint> objets. Ces valeurs sont utilisées pour déterminer si une valeur de paramètre est valide.  
  
   
  
## Examples  
 L’exemple suivant montre comment créer un <xref:System.Web.Routing.Route> de l’objet et l’ajouter à la <xref:System.Web.Routing.RouteTable.Routes%2A> propriété.  
  
 [!code-csharp[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/vb/Global.asax#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Routing.Route" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Route (string url, System.Web.Routing.IRouteHandler routeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.Web.Routing.IRouteHandler routeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.#ctor(System.String,System.Web.Routing.IRouteHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, routeHandler As IRouteHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Route(System::String ^ url, System::Web::Routing::IRouteHandler ^ routeHandler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="routeHandler" Type="System.Web.Routing.IRouteHandler" />
      </Parameters>
      <Docs>
        <param name="url">Modèle d’URL pour l’itinéraire.</param>
        <param name="routeHandler">Objet qui traite les demandes relatives à l’itinéraire.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Routing.Route" /> à l'aide de la classe de gestionnaire et du modèle d'URL spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment créer un <xref:System.Web.Routing.Route> de l’objet et l’ajouter à la <xref:System.Web.Routing.RouteTable.Routes%2A> propriété.  
  
 [!code-csharp[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/vb/Global.asax#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Route (string url, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.IRouteHandler routeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.Web.Routing.RouteValueDictionary defaults, class System.Web.Routing.IRouteHandler routeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.IRouteHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, defaults As RouteValueDictionary, routeHandler As IRouteHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Route(System::String ^ url, System::Web::Routing::RouteValueDictionary ^ defaults, System::Web::Routing::IRouteHandler ^ routeHandler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeHandler" Type="System.Web.Routing.IRouteHandler" />
      </Parameters>
      <Docs>
        <param name="url">Modèle d’URL pour l’itinéraire.</param>
        <param name="defaults">Valeurs à utiliser pour les paramètres qu’il manque dans l’URL.</param>
        <param name="routeHandler">Objet qui traite les demandes relatives à l’itinéraire.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Routing.Route" />, en utilisant le modèle d'URL spécifié, les valeurs de paramètre par défaut et la classe de gestionnaire.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.Routing.Route.Defaults" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Route (string url, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.RouteValueDictionary constraints, System.Web.Routing.IRouteHandler routeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.Web.Routing.RouteValueDictionary defaults, class System.Web.Routing.RouteValueDictionary constraints, class System.Web.Routing.IRouteHandler routeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.IRouteHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, defaults As RouteValueDictionary, constraints As RouteValueDictionary, routeHandler As IRouteHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Route(System::String ^ url, System::Web::Routing::RouteValueDictionary ^ defaults, System::Web::Routing::RouteValueDictionary ^ constraints, System::Web::Routing::IRouteHandler ^ routeHandler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="constraints" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeHandler" Type="System.Web.Routing.IRouteHandler" />
      </Parameters>
      <Docs>
        <param name="url">Modèle d’URL pour l’itinéraire.</param>
        <param name="defaults">Valeurs à utiliser si l’URL ne contient pas tous les paramètres.</param>
        <param name="constraints">Expression régulière qui spécifie les valeurs valides pour un paramètre d’URL.</param>
        <param name="routeHandler">Objet qui traite les demandes relatives à l’itinéraire.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Routing.Route" />, en utilisant le modèle d'URL spécifié, les valeurs de paramètre par défaut, les contraintes et la classe de gestionnaire.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.Routing.Route.Constraints" />
        <altmember cref="P:System.Web.Routing.Route.Defaults" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Route (string url, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.RouteValueDictionary constraints, System.Web.Routing.RouteValueDictionary dataTokens, System.Web.Routing.IRouteHandler routeHandler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string url, class System.Web.Routing.RouteValueDictionary defaults, class System.Web.Routing.RouteValueDictionary constraints, class System.Web.Routing.RouteValueDictionary dataTokens, class System.Web.Routing.IRouteHandler routeHandler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.#ctor(System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.IRouteHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (url As String, defaults As RouteValueDictionary, constraints As RouteValueDictionary, dataTokens As RouteValueDictionary, routeHandler As IRouteHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Route(System::String ^ url, System::Web::Routing::RouteValueDictionary ^ defaults, System::Web::Routing::RouteValueDictionary ^ constraints, System::Web::Routing::RouteValueDictionary ^ dataTokens, System::Web::Routing::IRouteHandler ^ routeHandler);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="constraints" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="dataTokens" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeHandler" Type="System.Web.Routing.IRouteHandler" />
      </Parameters>
      <Docs>
        <param name="url">Modèle d’URL pour l’itinéraire.</param>
        <param name="defaults">Valeurs à utiliser si l’URL ne contient pas tous les paramètres.</param>
        <param name="constraints">Expression régulière qui spécifie les valeurs valides pour un paramètre d’URL.</param>
        <param name="dataTokens">Valeurs personnalisées qui sont passées au gestionnaire d’itinéraires, mais qui ne sont pas utilisées pour déterminer si l’itinéraire correspond à un modèle d’URL. Ces valeurs sont passées au gestionnaire d’itinéraires, où elles peuvent être utilisées pour le traitement de la requête.</param>
        <param name="routeHandler">Objet qui traite les demandes relatives à l’itinéraire.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Routing.Route" />, en utilisant le modèle d'URL spécifié, les valeurs de paramètre par défaut, les contraintes, les valeurs personnalisées et la classe de gestionnaire.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.Routing.Route.Constraints" />
        <altmember cref="P:System.Web.Routing.Route.DataTokens" />
        <altmember cref="P:System.Web.Routing.Route.Defaults" />
      </Docs>
    </Member>
    <Member MemberName="Constraints">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteValueDictionary Constraints { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RouteValueDictionary Constraints" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.Route.Constraints" />
      <MemberSignature Language="VB.NET" Value="Public Property Constraints As RouteValueDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RouteValueDictionary ^ Constraints { System::Web::Routing::RouteValueDictionary ^ get(); void set(System::Web::Routing::RouteValueDictionary ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteValueDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un dictionnaire des expressions qui spécifient les valeurs valides d’un paramètre d’URL.</summary>
        <value>Objet qui contient les noms et expressions de paramètres.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Routing.Route.Constraints%2A> propriété vous permet de limiter les valeurs acceptables pour un paramètre d’URL qui est traité par un itinéraire. Vous affectez un <xref:System.Web.Routing.RouteValueDictionary> de l’objet à le <xref:System.Web.Routing.Route.Constraints%2A> propriété. Chaque élément dans le <xref:System.Web.Routing.RouteValueDictionary> objet contient le nom d’un paramètre et une des valeurs suivantes :  
  
-   Chaîne qui définit une expression régulière. L’expression régulière respecte la casse.  
  
-   Un objet qui implémente le <xref:System.Web.Routing.IRouteConstraint> interface et qui inclut un <xref:System.Web.Routing.IRouteConstraint.Match%2A> (méthode).  
  
 La classe <xref:System.Web.Routing.HttpMethodConstraint> implémente l'interface <xref:System.Web.Routing.IRouteConstraint>. Vous pouvez inclure une instance de la <xref:System.Web.Routing.HttpMethodConstraint> classe en tant que contrainte pour spécifier les verbes HTTP sont acceptables pour l’itinéraire.  
  
   
  
## Examples  
 L’exemple suivant montre comment créer un <xref:System.Web.Routing.Route> et définissez la <xref:System.Web.Routing.Route.Constraints%2A>, <xref:System.Web.Routing.Route.DataTokens%2A>, et <xref:System.Web.Routing.Route.Defaults%2A> propriétés.  
  
 [!code-csharp[System.Web.Routing.Route.ctor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.Route.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/VB/Global.asax#1)]  
  
 L’exemple suivant montre un <xref:System.Web.Routing.Route> dont l’objet <xref:System.Web.Routing.Route.Constraints%2A> propriété contient un paramètre nommé `httpMethod` avec une instance de la <xref:System.Web.Routing.HttpMethodConstraint> classe pour la valeur.  
  
 [!code-csharp[System.Web.Routing.Route.Constraints#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.Route.Constraints/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.Route.Constraints#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.Route.Constraints/vb/Global.asax#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataTokens">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteValueDictionary DataTokens { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RouteValueDictionary DataTokens" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.Route.DataTokens" />
      <MemberSignature Language="VB.NET" Value="Public Property DataTokens As RouteValueDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RouteValueDictionary ^ DataTokens { System::Web::Routing::RouteValueDictionary ^ get(); void set(System::Web::Routing::RouteValueDictionary ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteValueDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit des valeurs personnalisées qui sont passées au gestionnaire d’itinéraires, mais qui ne sont pas utilisées pour déterminer si l’itinéraire correspond à un modèle d’URL.</summary>
        <value>Objet qui contient des valeurs personnalisées.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous utilisez le <xref:System.Web.Routing.RouteData.DataTokens%2A> propriété à extraire ou affecter des valeurs associées à l’itinéraire qui ne sont pas utilisés pour déterminer si un itinéraire correspond à un modèle d’URL. Ces valeurs sont passées au gestionnaire d’itinéraires, où elles peuvent être utilisées pour le traitement de la requête.  
  
   
  
## Examples  
 L’exemple suivant montre comment créer un <xref:System.Web.Routing.Route> et définissez la <xref:System.Web.Routing.Route.Constraints%2A>, <xref:System.Web.Routing.Route.DataTokens%2A>, et <xref:System.Web.Routing.Route.Defaults%2A> propriétés.  
  
 [!code-csharp[System.Web.Routing.Route.ctor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.Route.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/VB/Global.asax#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Defaults">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteValueDictionary Defaults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RouteValueDictionary Defaults" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.Route.Defaults" />
      <MemberSignature Language="VB.NET" Value="Public Property Defaults As RouteValueDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RouteValueDictionary ^ Defaults { System::Web::Routing::RouteValueDictionary ^ get(); void set(System::Web::Routing::RouteValueDictionary ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteValueDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit les valeurs à utiliser si l’URL ne contient pas tous les paramètres.</summary>
        <value>Objet qui contient les noms de paramètres et valeurs par défaut.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Routing.Route.Defaults%2A> propriété vous permet de définir la valeur pour un paramètre d’URL si l’URL ne contient pas de segment pour ce paramètre. Vous affectez un <xref:System.Web.Routing.RouteValueDictionary> de l’objet à le <xref:System.Web.Routing.Route.Defaults%2A> propriété. Chaque élément dans le <xref:System.Web.Routing.RouteValueDictionary> objet contient le nom d’un paramètre et la valeur à utiliser si le paramètre est manquant.  
  
 Vous pouvez inclure une valeur par défaut pour un paramètre qui n’est pas défini dans le <xref:System.Web.Routing.Route.Url%2A> propriété comme un segment. Lorsque le routage ASP.NET gère une demande, cette valeur par défaut est toujours passée au gestionnaire d’itinéraire. Lorsque vous construisez une URL et incluez une valeur pour un paramètre par défaut qui n’est pas défini comme un segment, l’itinéraire sera uniquement être considérée comme une correspondance si la valeur que vous avez fournie correspond à la valeur par défaut pour l’itinéraire.  
  
   
  
## Examples  
 L’exemple suivant montre comment créer un <xref:System.Web.Routing.Route> et définissez la <xref:System.Web.Routing.Route.Constraints%2A>, <xref:System.Web.Routing.Route.DataTokens%2A>, et <xref:System.Web.Routing.Route.Defaults%2A> propriétés.  
  
 [!code-csharp[System.Web.Routing.Route.ctor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.Route.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.Route.ctor/VB/Global.asax#1)]  
  
 L’exemple suivant montre un <xref:System.Web.Routing.Route> dont l’objet <xref:System.Web.Routing.Route.Defaults%2A> propriété contient un paramètre qui ne fait pas partie du modèle dans le <xref:System.Web.Routing.Route.Url%2A> propriété.  
  
 [!code-csharp[System.Web.Routing.Route.Defaults#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.Route.Defaults/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.Route.Defaults#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.Route.Defaults/vb/Global.asax#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteData">
      <MemberSignature Language="C#" Value="public override System.Web.Routing.RouteData GetRouteData (System.Web.HttpContextBase httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Routing.RouteData GetRouteData(class System.Web.HttpContextBase httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.GetRouteData(System.Web.HttpContextBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRouteData (httpContext As HttpContextBase) As RouteData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Routing::RouteData ^ GetRouteData(System::Web::HttpContextBase ^ httpContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
      </Parameters>
      <Docs>
        <param name="httpContext">Objet qui encapsule des informations sur la requête HTTP.</param>
        <summary>Retourne des informations sur l’itinéraire demandé.</summary>
        <returns>Objet qui contient les valeurs de la définition d’itinéraire.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualPath">
      <MemberSignature Language="C#" Value="public override System.Web.Routing.VirtualPathData GetVirtualPath (System.Web.Routing.RequestContext requestContext, System.Web.Routing.RouteValueDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Routing.VirtualPathData GetVirtualPath(class System.Web.Routing.RequestContext requestContext, class System.Web.Routing.RouteValueDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Routing::VirtualPathData ^ GetVirtualPath(System::Web::Routing::RequestContext ^ requestContext, System::Web::Routing::RouteValueDictionary ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.VirtualPathData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="requestContext">Objet qui encapsule des informations sur l’itinéraire demandé.</param>
        <param name="values">Objet qui contient les paramètres d’un itinéraire.</param>
        <summary>Retourne des informations sur l’URL associée à l’itinéraire.</summary>
        <returns>Objet qui contient des informations sur l’URL associée à l’itinéraire.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessConstraint">
      <MemberSignature Language="C#" Value="protected virtual bool ProcessConstraint (System.Web.HttpContextBase httpContext, object constraint, string parameterName, System.Web.Routing.RouteValueDictionary values, System.Web.Routing.RouteDirection routeDirection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ProcessConstraint(class System.Web.HttpContextBase httpContext, object constraint, string parameterName, class System.Web.Routing.RouteValueDictionary values, valuetype System.Web.Routing.RouteDirection routeDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.Route.ProcessConstraint(System.Web.HttpContextBase,System.Object,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteDirection)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ProcessConstraint(System::Web::HttpContextBase ^ httpContext, System::Object ^ constraint, System::String ^ parameterName, System::Web::Routing::RouteValueDictionary ^ values, System::Web::Routing::RouteDirection routeDirection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
        <Parameter Name="constraint" Type="System.Object" />
        <Parameter Name="parameterName" Type="System.String" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="routeDirection" Type="System.Web.Routing.RouteDirection" />
      </Parameters>
      <Docs>
        <param name="httpContext">Objet qui encapsule des informations sur la requête HTTP.</param>
        <param name="constraint">Expression régulière ou objet à utiliser pour tester <c>parameterName</c>.</param>
        <param name="parameterName">Nom du paramètre à tester.</param>
        <param name="values">Valeurs à tester.</param>
        <param name="routeDirection">Valeur qui spécifie si le routage d’URL traite une demande entrante ou construit une URL.</param>
        <summary>Détermine si une valeur de paramètre correspond à la contrainte pour ce paramètre.</summary>
        <returns>
          <see langword="true" /> si la valeur du paramètre correspond à la contrainte ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="constraint" /> n'est pas une chaîne qui contient une expression régulière.</exception>
      </Docs>
    </Member>
    <Member MemberName="RouteHandler">
      <MemberSignature Language="C#" Value="public System.Web.Routing.IRouteHandler RouteHandler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.IRouteHandler RouteHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.Route.RouteHandler" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteHandler As IRouteHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::IRouteHandler ^ RouteHandler { System::Web::Routing::IRouteHandler ^ get(); void set(System::Web::Routing::IRouteHandler ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.IRouteHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l’objet qui traite les requêtes pour la route.</summary>
        <value>Objet qui traite la requête.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Url">
      <MemberSignature Language="C#" Value="public string Url { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Url" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.Route.Url" />
      <MemberSignature Language="VB.NET" Value="Public Property Url As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Url { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le modèle d’URL pour la route.</summary>
        <value>Le modèle pour mettre en correspondance la route avec une URL.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous assignez une valeur à la <xref:System.Web.Routing.Route.Url%2A> propriété, le `/` caractère est interprété comme un séparateur lorsque l’URL est analysée. Utiliser des accolades (`{}`) pour définir une variable qui est appelée un *paramètre d’URL*. La valeur du segment correspondant dans l’URL est affectée au paramètre d’URL. Toutes les valeurs dans le <xref:System.Web.Routing.Route.Url%2A> propriété qui ne sont pas placés entre accolades sont traitées comme des constantes littérales.  
  
 Le `?` caractère n’est pas autorisé dans le <xref:System.Web.Routing.Route.Url%2A> propriété. Chaque segment d’URL doit être séparé par un séparateur ou une constante littérale. Vous pouvez utiliser `{{` ou `}}` comme caractères d’échappement pour une accolade ouvrante.  
  
   
  
## Examples  
 L’exemple suivant montre comment définir le <xref:System.Web.Routing.Route.Url%2A> propriété dans le constructeur de classe. Le modèle contient la valeur littérale « Catégorie » pour le premier segment et les paramètres d’URL pour les deux segments.  
  
 [!code-csharp[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/cs/Global.asax#1)]
 [!code-vb[System.Web.Routing.RouteTable.Routes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Routing.RouteTable.Routes/vb/Global.asax#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Un des éléments suivants :  
  
-   La valeur commence par <c>~</c> ou <c>/</c>.  
  
-   La valeur contient un caractère <c>?</c> .  
  
-   Le paramètre passe-partout n'est pas le dernier.</exception>
        <exception cref="T:System.Exception">Les segments d’URL ne sont pas séparés par un délimiteur ou une constante littérale.</exception>
      </Docs>
    </Member>
  </Members>
</Type>