<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CompositionContainer.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5531be8b9445e82ab2acefc549474a24be1a166d3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">531be8b9445e82ab2acefc549474a24be1a166d3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>Manages the composition of parts.</source>
          <target state="translated">Gère la composition des composants.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> object serves two major purposes in an application.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> objet a deux objectifs principaux dans une application.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>First, it keeps track of which parts are available for composition and what their dependencies are, and performs composition whenever the set of available parts changes.</source>
          <target state="translated">Tout d’abord, il effectue le suivi de quelles parties sont disponibles pour la composition et leurs dépendances et exécute la composition chaque fois que l’ensemble des parties disponibles modifications.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>Second, it provides the methods by which the application gets instances of composed parts or fills the dependencies of a composable part.</source>
          <target state="translated">Ensuite, il fournit les méthodes auxquelles l’application obtient des instances de parties composées ou remplit les dépendances d’une partie composable.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Ce type implémente le <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Lorsque vous avez fini d’utiliser le type, vous devez la supprimer directement ou indirectement.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Pour supprimer le type directement, vous devez appeler sa <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> méthode dans un <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> bloc.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Pour la supprimer indirectement, utiliser une construction de langage telles que <ph id="ph1">`using`</ph> (en c#) ou <ph id="ph2">`Using`</ph> (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Pour plus d’informations, consultez la section « Utilisant un objet qui implémente IDisposable » dans la <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> rubrique de l’interface.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>Parts can be made available to the container either directly or through the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog%2A&gt;</ph> property.</source>
          <target state="translated">Parties peuvent être rendues disponibles pour le conteneur soit directement ou via le <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>All the parts discoverable in this <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Primitives.ComposablePartCatalog&gt;</ph> are available to the container to fulfill imports, along with any parts added directly.</source>
          <target state="translated">Toutes les parties détectables dans ce <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Primitives.ComposablePartCatalog&gt;</ph> sont disponibles au conteneur pour accomplir des importations, ainsi que toutes les parties ajoutées directement.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A&gt;</ph> method allows instantiated parts to be added to an existing container.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A&gt;</ph> méthode autorise les parties instanciées à ajouter à un conteneur existant.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>Assuming composition is successful, these parts will have their imports filled with parts retrieved from the container, and their exports will be available to other parts.</source>
          <target state="translated">En supposant que la composition a réussi, ces parties verront leurs importations remplies de parties extraites du conteneur et leurs exportations seront disponibles à d’autres parties.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>Imports marked as recomposable will be registered for recomposition.</source>
          <target state="translated">Les importations marquées comme recomposable seront inscrit pour la recomposition.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce%2A&gt;</ph> method allows a part to have its imports filled without being added to the container.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce%2A&gt;</ph> méthode autorise une partie de ses importations remplies sans ajouté au conteneur.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>If the composition is successful, the part's imports will be filled, but the part's exports will not be available to other parts and no imports will be registered for recomposition.</source>
          <target state="translated">Si la composition est réussie, les importations du composant seront remplies, mais exportations du composant ne sera pas disponibles à d’autres parties et aucune importation ne sera inscrite pour la recomposition.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source><ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> objects should always be disposed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> les objets doivent toujours être supprimés.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>When the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose%2A&gt;</ph> method is called, the <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> object also disposes all the parts that it has created.</source>
          <target state="translated">Lorsque le <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose%2A&gt;</ph> méthode est appelée, le <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> objet supprime également toutes les parties qu’il a créées.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> object that can be accessed from multiple threads must be constructed with the <ph id="ph2">`isThreadSafe`</ph> parameter set to <ph id="ph3">`true`</ph>, using the <ph id="ph4">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.%23ctor%28System.ComponentModel.Composition.Primitives.ComposablePartCatalog%2CSystem.Boolean%2CSystem.ComponentModel.Composition.Hosting.ExportProvider%5B%5D%29&gt;</ph> constructor.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> objet sont accessibles à partir de plusieurs threads doit être construit avec le <ph id="ph2">`isThreadSafe`</ph> paramètre la valeur <ph id="ph3">`true`</ph>, à l’aide du <ph id="ph4">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.%23ctor%28System.ComponentModel.Composition.Primitives.ComposablePartCatalog%2CSystem.Boolean%2CSystem.ComponentModel.Composition.Hosting.ExportProvider%5B%5D%29&gt;</ph> constructeur.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>Performance will be slightly slower when <ph id="ph1">`isThreadSafe`</ph> is <ph id="ph2">`true`</ph>, so we recommend that you set this parameter to <ph id="ph3">`false`</ph> in single-threaded scenarios.</source>
          <target state="translated">Les performances seront légèrement plus lentes lorsque <ph id="ph1">`isThreadSafe`</ph> est <ph id="ph2">`true`</ph>, nous vous recommandons de définir ce paramètre sur <ph id="ph3">`false`</ph> dans des scénarios monothread.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> should never import itself, or a part that has a reference to it.</source>
          <target state="translated">Un <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> doit jamais s’importer, ou une partie qui a une référence à celui-ci.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>Such a reference could allow an untrusted part to gain access all the parts in the container.</source>
          <target state="translated">Une telle référence pourrait permettre une partie non approuvée à accéder à toutes les parties dans le conteneur.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>In the following example, a <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> object is initialized with a catalog and is used to fill the imports of a part.</source>
          <target state="translated">Dans l’exemple suivant, un <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> objet est initialisé avec un catalogue et est utilisé pour remplir les importations d’un composant.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>This example uses the Attributed Programming Model.</source>
          <target state="translated">Cet exemple utilise le modèle de programmation par attributs.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> objects that provide the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> access to <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects, or <ph id="ph4">&lt;see langword="null" /&gt;</ph> to set <ph id="ph5">&lt;see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /&gt;</ph> to an empty <ph id="ph6">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</source>
          <target state="translated">Tableau d'objets <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> qui fournissent l'accès <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> aux objets <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> ou <ph id="ph4">&lt;see langword="null" /&gt;</ph> pour définir <ph id="ph5">&lt;see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /&gt;</ph> sur un <ph id="ph6">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> vide.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> class with the specified export providers.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> avec les fournisseurs d'exportations spécifiés.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source><ph id="ph1">&lt;paramref name="providers" /&gt;</ph> contains an element that is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="providers" /&gt;</ph> contient un élément <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>An object that specifies the behavior of this container.</source>
          <target state="translated">Objet qui spécifie le comportement de ce conteneur.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> objects that provide the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> access to <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects, or <ph id="ph4">&lt;see langword="null" /&gt;</ph> to set <ph id="ph5">&lt;see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /&gt;</ph> to an empty <ph id="ph6">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</source>
          <target state="translated">Tableau d'objets <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> qui fournissent l'accès <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> aux objets <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> ou <ph id="ph4">&lt;see langword="null" /&gt;</ph> pour définir <ph id="ph5">&lt;see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /&gt;</ph> sur un <ph id="ph6">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> vide.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> class with the specified export providers and options.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> avec les fournisseurs d'exportations et les options spécifiés.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source><ph id="ph1">&lt;paramref name="providers" /&gt;</ph> contains an element that is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="providers" /&gt;</ph> contient un élément <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>A catalog that provides <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</source>
          <target state="translated">Catalogue qui fournit des objets <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> au <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> objects that provide the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> access to <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects, or <ph id="ph4">&lt;see langword="null" /&gt;</ph> to set <ph id="ph5">&lt;see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /&gt;</ph> to an empty <ph id="ph6">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</source>
          <target state="translated">Tableau d'objets <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> qui fournissent l'accès <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> aux objets <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> ou <ph id="ph4">&lt;see langword="null" /&gt;</ph> pour définir <ph id="ph5">&lt;see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /&gt;</ph> sur un <ph id="ph6">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> vide.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> class with the specified catalog and export providers.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> avec les catalogues spécifiés et les fournisseurs d'exportations.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source><ph id="ph1">&lt;paramref name="providers" /&gt;</ph> contains an element that is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="providers" /&gt;</ph> contient un élément <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>A catalog that provides <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</source>
          <target state="translated">Catalogue qui fournit des objets <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> au <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> object must be thread-safe; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si cet objet <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> doit être thread-safe ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> objects that provide the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> access to <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects, or <ph id="ph4">&lt;see langword="null" /&gt;</ph> to set the <ph id="ph5">&lt;see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /&gt;</ph> property to an empty <ph id="ph6">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</source>
          <target state="translated">Tableau d'objets <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> qui fournissent au <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> l'accès aux objets <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> ou <ph id="ph4">&lt;see langword="null" /&gt;</ph> pour définir la propriété <ph id="ph5">&lt;see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /&gt;</ph> sur un <ph id="ph6">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> vide.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> class with the specified catalog, thread-safe mode, and export providers.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> avec le catalogue spécifié, le mode thread-safe et les fournisseurs d'exportations.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> object that can be accessed from multiple threads must set the <ph id="ph2">`isThreadSafe`</ph> parameter to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> objet sont accessibles à partir de plusieurs threads doit définir le <ph id="ph2">`isThreadSafe`</ph> paramètre <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>Performance will be slightly slower when <ph id="ph1">`isThreadSafe`</ph> is <ph id="ph2">`true`</ph>, so we recommend that you set this parameter to <ph id="ph3">`false`</ph> in single-threaded scenarios.</source>
          <target state="translated">Les performances seront légèrement plus lentes lorsque <ph id="ph1">`isThreadSafe`</ph> est <ph id="ph2">`true`</ph>, nous vous recommandons de définir ce paramètre sur <ph id="ph3">`false`</ph> dans des scénarios monothread.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>The default is <ph id="ph1">`false`</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>One or more elements of <ph id="ph1">&lt;paramref name="providers" /&gt;</ph> are <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Un ou plusieurs éléments de <ph id="ph1">&lt;paramref name="providers" /&gt;</ph> sont <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>A catalog that provides <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</source>
          <target state="translated">Catalogue qui fournit des objets <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> au <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>An object that specifies options that affect the behavior of the container.</source>
          <target state="translated">Objet qui spécifie les options qui affectent le comportement du conteneur.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> objects that provide the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> access to <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects, or <ph id="ph4">&lt;see langword="null" /&gt;</ph> to set <ph id="ph5">&lt;see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /&gt;</ph> to an empty <ph id="ph6">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</source>
          <target state="translated">Tableau d'objets <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> qui fournissent l'accès <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> aux objets <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> ou <ph id="ph4">&lt;see langword="null" /&gt;</ph> pour définir <ph id="ph5">&lt;see cref="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers" /&gt;</ph> sur un <ph id="ph6">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> vide.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> class with the specified catalog, options, and export providers.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> avec les catalogues, les options et les fournisseurs d'exportations spécifiés.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions,System.ComponentModel.Composition.Hosting.ExportProvider[])">
          <source><ph id="ph1">&lt;paramref name="providers" /&gt;</ph> contains an element that is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="providers" /&gt;</ph> contient un élément <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /&gt;</ph> that provides the container access to <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects.</source>
          <target state="translated">Obtient le <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /&gt;</ph> qui fournit au conteneur l'accès aux objets <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog">
          <source>The catalog that provides the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> access to exports produced from <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph> objects.</source>
          <target state="translated">Catalogue qui fournit à <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> l'accès aux exportations produites à partir d'objets <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut est <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Catalog">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> object has been disposed of.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)">
          <source>Changes to the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> to include during the composition.</source>
          <target state="translated">Modifications apportées au <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> à inclure pendant la composition.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)">
          <source>Adds or removes the parts in the specified <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch" /&gt;</ph> from the container and executes composition.</source>
          <target state="translated">Ajoute ou supprime les parties dans le <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionBatch" /&gt;</ph> spécifié du conteneur et exécute la composition.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)">
          <source>This method is the primary way of directly adding or removing parts from the container.</source>
          <target state="translated">Cette méthode est la principale manière de directement ajoutant ou en supprimant les parties du conteneur.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> will always maintain a stable, composed state.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> conserve toujours un état composé, stable.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)">
          <source>Therefore, calling <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A&gt;</ph> with an empty <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionBatch&gt;</ph> is never necessary to start composition.</source>
          <target state="translated">Par conséquent, l’appel <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A&gt;</ph> avec vide <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionBatch&gt;</ph> n’est jamais nécessaire pour démarrer la composition.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)">
          <source>Instead, call the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A&gt;</ph> method whenever you need to make changes to the parts available to the <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph>.</source>
          <target state="translated">Au lieu de cela, appelez le <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A&gt;</ph> méthode chaque fois que vous devez apporter des modifications aux parties disponibles pour la <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionBatch&gt;</ph> can contain both parts to be added and parts to be removed.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionBatch&gt;</ph> peut contenir des éléments à ajouter et des parties à supprimer.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)">
          <source>Recomposition will take place only once for each call to <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A&gt;</ph>.</source>
          <target state="translated">La recomposition aura lieu qu’une seule fois pour chaque appel à <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)">
          <source>In this simple example, three parts are created and added to the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph>, and one part is retrieved to show that all imports have been filled.</source>
          <target state="translated">Dans cet exemple simple, trois parties sont créés et ajoutés à la <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph>, et une partie est extraite pour indiquer que toutes les importations ont été remplies.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Compose(System.ComponentModel.Composition.Hosting.CompositionBatch)">
          <source>This example uses the Attributed Programming Model.</source>
          <target state="translated">Cet exemple utilise le modèle de programmation par attributs.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Hosting.CompositionContainer">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</source>
          <target state="translated">Libère les ressources utilisées par le <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> class.</source>
          <target state="translated">Libère toutes les ressources utilisées par l'instance actuelle de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph>.</source>
          <target state="translated">Appelez la méthode <ph id="ph1">`Dispose`</ph> une fois que vous avez terminé d'utiliser <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> in an unusable state.</source>
          <target state="translated">La méthode <ph id="ph1">`Dispose`</ph> rend le <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> inutilisable.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> was occupying.</source>
          <target state="translated">Après avoir appelé <ph id="ph1">`Dispose`</ph>, vous devez libérer toutes les références à la <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> pour que le garbage collector puisse récupérer la mémoire qui le <ph id="ph3">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> occupée.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>de nettoyage des ressources non managées<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> et <bpt id="p2">[</bpt>implémentant une méthode de suppression<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph>.</source>
          <target state="translated">Appelez toujours <ph id="ph1">`Dispose`</ph> avant de libérer votre dernière référence à <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer&gt;</ph> de l'objet <ph id="ph2">`Finalize`</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour libérer les ressources managées et non managées ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour ne libérer que les ressources non managées.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libère les ressources non managées utilisées par <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> et libère éventuellement les ressources managées.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <source>The object that defines the conditions of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects to get.</source>
          <target state="translated">Objet qui définit les conditions des objets <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> à obtenir.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <source>The composition transaction to use, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> to disable transactional composition.</source>
          <target state="translated">Transaction de composition à utiliser ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> pour désactiver la composition transactionnelle.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <source>Returns a collection of all exports that match the conditions in the specified <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /&gt;</ph> object.</source>
          <target state="translated">Retourne une collection de toutes les exportations qui correspondent aux conditions dans l'objet <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <source>A collection of all the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects in this <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> object that match the conditions specified by <ph id="ph3">&lt;paramref name="definition" /&gt;</ph>.</source>
          <target state="translated">Collection de tous les objets <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> de cet objet <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> qui correspondent aux conditions spécifiées par <ph id="ph3">&lt;paramref name="definition" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <source>Implementations should not treat cardinality-related mismatches as errors and should not throw exceptions for cardinality-related mismatches.</source>
          <target state="translated">Les implémentations ne doivent pas traiter les incompatibilités de cardinalité comme des erreurs et lever d’exceptions pour les incompatibilités de cardinalité.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <source>For example, if the import requests exactly one export and the provider has either no matching exports or more than one, the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore%2A&gt;</ph> method should return an empty <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> collection of <ph id="ph3">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> objects.</source>
          <target state="translated">Par exemple, si l’importation demande exactement une exportation et le fournisseur n’a pas d’exportations correspondantes ou plusieurs, la <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.GetExportsCore%2A&gt;</ph> méthode doit retourner vide <ph id="ph2">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> collection de <ph id="ph3">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> objets.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers">
          <source>Gets the export providers that provide the container access to additional <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /&gt;</ph> objects.</source>
          <target state="translated">Obtient les fournisseurs d'exportations qui fournissent au conteneur l'accès aux objets <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /&gt;</ph> supplémentaires.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> objects that provide the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> access to additional <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects.</source>
          <target state="translated">Collection d'objets <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /&gt;</ph> qui fournissent à <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> l'accès aux objets <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> supplémentaires.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers">
          <source>The default is an empty <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph>.</source>
          <target state="translated">La valeur par défaut correspond à une <ph id="ph1">&lt;see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /&gt;</ph> vide.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Hosting.CompositionContainer.Providers">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> has been disposed of.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> that needs to be released.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> qui doit être libéré.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)">
          <source>Releases the specified <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> object from the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</source>
          <target state="translated">Libère l'objet <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> spécifié du <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)">
          <source>The behavior of this method may vary depending on the implementation of the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.ExportProvider&gt;</ph> that produced the <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> instance.</source>
          <target state="translated">Le comportement de cette méthode peut varier selon l’implémentation de la <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.ExportProvider&gt;</ph> qui a généré le <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> instance.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)">
          <source>As a rule, non-shared exports should be detached from the container.</source>
          <target state="translated">En règle générale, les exportations non partagées doivent être détachées du conteneur.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)">
          <source>For example, the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider&gt;</ph> will only release an <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> if it comes from a <ph id="ph3">&lt;xref:System.ComponentModel.Composition.Primitives.ComposablePart&gt;</ph> that was constructed under a <ph id="ph4">&lt;xref:System.ComponentModel.Composition.CreationPolicy.NonShared&gt;</ph> context.</source>
          <target state="translated">Par exemple, le <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider&gt;</ph> libèrera seulement un <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> s’il provient d’un <ph id="ph3">&lt;xref:System.ComponentModel.Composition.Primitives.ComposablePart&gt;</ph> qui a été construit sous un <ph id="ph4">&lt;xref:System.ComponentModel.Composition.CreationPolicy.NonShared&gt;</ph> contexte.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)">
          <source>Release in this context means walking the dependency chain of the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> objects, detaching references from the container and calling <ph id="ph2">`Dispose`</ph> on the <ph id="ph3">&lt;xref:System.ComponentModel.Composition.Primitives.ComposablePart&gt;</ph> objects as needed.</source>
          <target state="translated">Mise en production dans ce contexte signifie que la chaîne de dépendance de la <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> détachant des références du conteneur et en appelant les objets <ph id="ph2">`Dispose`</ph> sur la <ph id="ph3">&lt;xref:System.ComponentModel.Composition.Primitives.ComposablePart&gt;</ph> des objets en fonction des besoins.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)">
          <source>If the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> was constructed under a <ph id="ph2">&lt;xref:System.ComponentModel.Composition.CreationPolicy.Shared&gt;</ph> context the <ph id="ph3">&lt;xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider&gt;</ph> will do nothing, as the specified <ph id="ph4">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> may being used by other requestors.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> a été construit sous un <ph id="ph2">&lt;xref:System.ComponentModel.Composition.CreationPolicy.Shared&gt;</ph> contexte la <ph id="ph3">&lt;xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider&gt;</ph> ne fera rien, comme spécifié <ph id="ph4">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> peut être utilisé par d’autres demandeurs.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)">
          <source>Those will only be detached when the container is itself disposed.</source>
          <target state="translated">Ceux-ci sont uniquement détachés lorsque le conteneur est lui-même supprimé.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport(System.ComponentModel.Composition.Primitives.Export)">
          <source><ph id="ph1">&lt;paramref name="export" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="export" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})">
          <source>The type of the export.</source>
          <target state="translated">Type de l'exportation.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})">
          <source>An indirect reference to the export to remove.</source>
          <target state="translated">Référence indirecte à l'exportation à supprimer.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport``1(System.Lazy{``0})">
          <source>Removes the specified export from composition and releases its resources if possible.</source>
          <target state="translated">Supprime l'exportation spécifiée de la composition et libère ses ressources, si possible.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects to be released.</source>
          <target state="translated">Collection d'objets <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> à libérer.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})">
          <source>Releases a set of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> objects from the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</source>
          <target state="translated">Libère un jeu d'objets <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.Export" /&gt;</ph> du <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})">
          <source>The behavior of this method may vary depending on the context in which the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> was constructed.</source>
          <target state="translated">Le comportement de cette méthode peut varier selon le contexte dans lequel le <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Primitives.Export&gt;</ph> a été construit.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport%2A&gt;</ph> method.</source>
          <target state="translated">Pour plus d'informations, voir la méthode <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExport%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})">
          <source><ph id="ph1">&lt;paramref name="exports" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="exports" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export})">
          <source><ph id="ph1">&lt;paramref name="exports" /&gt;</ph> contains an element that is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="exports" /&gt;</ph> contient un élément <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})">
          <source>The type of the exports.</source>
          <target state="translated">Type des exportations.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})">
          <source>A collection of indirect references to the exports to be removed.</source>
          <target state="translated">Collection de références indirectes aux exportations à supprimer.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``1(System.Collections.Generic.IEnumerable{System.Lazy{``0}})">
          <source>Removes a collection of exports from composition and releases their resources if possible.</source>
          <target state="translated">Supprime une collection d'exportations de la composition et libère leurs ressources, si possible.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``1}})">
          <source>The type of the exports.</source>
          <target state="translated">Type des exportations.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``1}})">
          <source>The type of the exports' metadata view.</source>
          <target state="translated">Type de l'affichage des métadonnées des exportations.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``1}})">
          <source>A collection of indirect references to the exports to be removed and their metadata.</source>
          <target state="translated">Collection de références indirectes aux exportations à supprimer et à leurs métadonnées.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.ReleaseExports``2(System.Collections.Generic.IEnumerable{System.Lazy{``0,``1}})">
          <source>Removes a collection of exports from composition and releases their resources if possible.</source>
          <target state="translated">Supprime une collection d'exportations de la composition et libère leurs ressources, si possible.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
          <source>The part to satisfy the imports of.</source>
          <target state="translated">Partie dont les importations doivent être satisfaites.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
          <source>Satisfies the imports of the specified <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph> object without registering it for recomposition.</source>
          <target state="translated">Satisfait les importations de l'objet <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePart" /&gt;</ph> spécifié sans l'enregistrer en vue de la recomposition.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> object has been disposed of.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
          <source><ph id="ph1">&lt;paramref name="part" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="part" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
          <source>An error occurred during composition.</source>
          <target state="translated">Une erreur s'est produite pendant la composition.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.CompositionContainer.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)">
          <source><ph id="ph1">&lt;see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /&gt;</ph> will contain a collection of the errors that occurred.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /&gt;</ph> contiendra une collection des erreurs qui se sont produites.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>