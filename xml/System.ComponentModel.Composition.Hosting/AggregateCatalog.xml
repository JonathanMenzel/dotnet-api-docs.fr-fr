<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AggregateCatalog.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c7bfdb7143ed6f8d2ad54016a4e8833e2c2b62b9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c7bfdb7143ed6f8d2ad54016a4e8833e2c2b62b9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Hosting.AggregateCatalog">
          <source>A catalog that combines the elements of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /&gt;</ph> objects.</source>
          <target state="translated">Catalogue qui combine les éléments des objets <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.AggregateCatalog">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Ce type implémente le <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.AggregateCatalog">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Lorsque vous avez fini d’utiliser le type, vous devez la supprimer directement ou indirectement.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.AggregateCatalog">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Pour supprimer le type directement, vous devez appeler sa <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> méthode dans un <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> bloc.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.AggregateCatalog">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Pour la supprimer indirectement, utiliser une construction de langage telles que <ph id="ph1">`using`</ph> (en c#) ou <ph id="ph2">`Using`</ph> (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.AggregateCatalog">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Pour plus d’informations, consultez la section « Utilisant un objet qui implémente IDisposable » dans la <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> rubrique de l’interface.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Hosting.AggregateCatalog">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartCatalog})">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /&gt;</ph> objects to add to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph> or <ph id="ph3">&lt;see langword="null" /&gt;</ph> to create an empty <ph id="ph4">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph>.</source>
          <target state="translated">Collection d'objets <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /&gt;</ph> à ajouter au <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph> ou <ph id="ph3">&lt;see langword="null" /&gt;</ph> pour créer un <ph id="ph4">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph>vide.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartCatalog})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph> class with the specified catalogs.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph> à l'aide des catalogues spécifiés.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.ComposablePartCatalog})">
          <source><ph id="ph1">&lt;paramref name="catalogs" /&gt;</ph> contains an element that is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="catalogs" /&gt;</ph> contient un élément <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog[])">
          <source>A array of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /&gt;</ph> objects to add to the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph>.</source>
          <target state="translated">Tableau d'objets <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /&gt;</ph> à ajouter au <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph> class with the specified catalogs.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph> à l'aide des catalogues spécifiés.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog[])">
          <source><ph id="ph1">&lt;paramref name="catalogs" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="catalogs" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog[])">
          <source><ph id="ph1">&lt;paramref name="catalogs" /&gt;</ph> contains an element that is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="catalogs" /&gt;</ph> contient un élément <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Hosting.AggregateCatalog.Catalogs">
          <source>Gets the underlying catalogs of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph> object.</source>
          <target state="translated">Obtient les catalogues sous-jacents de l'objet <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ComponentModel.Composition.Hosting.AggregateCatalog.Catalogs">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /&gt;</ph> objects that underlie the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph> object.</source>
          <target state="translated">Collection d'objets <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartCatalog" /&gt;</ph> sous-jacents de l'objet <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.ComponentModel.Composition.Hosting.AggregateCatalog.Catalogs">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph> object has been disposed of.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Composition.Hosting.AggregateCatalog.Changed">
          <source>Occurs when the contents of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph> object have changed.</source>
          <target state="translated">Se produit lorsque le contenu de l'objet <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph> a été modifié.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="E:System.ComponentModel.Composition.Hosting.AggregateCatalog.Changing">
          <source>Occurs when the contents of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph> object are changing.</source>
          <target state="translated">Se produit lorsque le contenu de l'objet <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph> est modifié.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour libérer les ressources managées et non managées ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour ne libérer que les ressources non managées.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libère les ressources non managées utilisées par <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph> et libère éventuellement les ressources managées.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.GetEnumerator">
          <source>Returns an enumerator that iterates through the catalog.</source>
          <target state="translated">Retourne un énumérateur qui itère au sein du catalogue.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.GetEnumerator">
          <source>An enumerator that can be used to iterate through the catalog.</source>
          <target state="translated">Énumérateur permettant d'itérer au sein du catalogue.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
          <source>The conditions of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" /&gt;</ph> objects to be returned.</source>
          <target state="translated">Conditions des objets <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" /&gt;</ph> à retourner.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
          <source>Gets the export definitions that match the constraint expressed by the specified definition.</source>
          <target state="translated">Obtient les définitions d'exportations qui correspondent à la contrainte exprimée par la définition spécifiée.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph> containing the <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" /&gt;</ph> objects and their associated <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /&gt;</ph> objects for objects that match the constraint specified by <ph id="ph4">&lt;paramref name="definition" /&gt;</ph>.</source>
          <target state="translated">Collection de <ph id="ph1">&lt;see cref="T:System.Tuple`2" /&gt;</ph> contenant les objets <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ExportDefinition" /&gt;</ph> et leurs objets <ph id="ph3">&lt;see cref="T:System.ComponentModel.Composition.Primitives.ComposablePartDefinition" /&gt;</ph> associés pour les objets qui correspondent à la contrainte spécifiée par <ph id="ph4">&lt;paramref name="definition" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph> object has been disposed of.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AggregateCatalog" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)">
          <source><ph id="ph1">&lt;paramref name="definition" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="definition" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" /&gt;</ph> object that contains the event data.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanged(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.AggregateCatalog.Changed" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.AggregateCatalog.Changed" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" /&gt;</ph> object that contains the event data.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs" /&gt;</ph> qui contient les données d'événement.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AggregateCatalog.OnChanging(System.ComponentModel.Composition.Hosting.ComposablePartCatalogChangeEventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.AggregateCatalog.Changing" /&gt;</ph> event.</source>
          <target state="translated">Déclenche l'événement <ph id="ph1">&lt;see cref="E:System.ComponentModel.Composition.Hosting.AggregateCatalog.Changing" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>