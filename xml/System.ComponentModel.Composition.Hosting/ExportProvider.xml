<Type Name="ExportProvider" FullName="System.ComponentModel.Composition.Hosting.ExportProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="feaba0f39f4c97d4382696a62812176466ac5e69" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36643630" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ExportProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExportProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.ExportProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExportProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExportProvider abstract" />
  <TypeSignature Language="F#" Value="type ExportProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d8a53-101">Récupère des exportations qui correspondent à un objet <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> spécifié.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d8a53-101">Retrieves exports which match a specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> object.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExportProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExportProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d8a53-102">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-102">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportsChanged">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; ExportsChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; ExportsChanged" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ExportsChanged As EventHandler(Of ExportsChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::ComponentModel::Composition::Hosting::ExportsChangeEventArgs ^&gt; ^ ExportsChanged;" />
      <MemberSignature Language="F#" Value="member this.ExportsChanged : EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; " Usage="member this.ExportsChanged : System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a53-103">Se produit lors de la modification des exportations de <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-103">Occurs when the exports in the <see cref="T:System.ComponentModel.Composition.Hosting.ExportProvider" /> change.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExportsChanging">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; ExportsChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; ExportsChanging" />
      <MemberSignature Language="DocId" Value="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ExportsChanging As EventHandler(Of ExportsChangeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::ComponentModel::Composition::Hosting::ExportsChangeEventArgs ^&gt; ^ ExportsChanging;" />
      <MemberSignature Language="F#" Value="member this.ExportsChanging : EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; " Usage="member this.ExportsChanging : System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d8a53-104">Se produit lorsque les exportations fournies sont modifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-104">Occurs when the provided exports are changing.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExport&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8a53-105">Obtient une exportation spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-105">Gets a specified export.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExport&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Lazy&lt;T&gt; GetExport&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Lazy`1&lt;!!T&gt; GetExport&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport(Of T) () As Lazy(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; Lazy&lt;T&gt; ^ GetExport();" />
      <MemberSignature Language="F#" Value="member this.GetExport : unit -&gt; Lazy&lt;'T&gt;" Usage="exportProvider.GetExport " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d8a53-106">Paramètre de type de l'objet <see cref="T:System.Lazy`1" /> à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-106">The type parameter of the <see cref="T:System.Lazy`1" /> object to return.</span>
          </span>
          <span data-ttu-id="d8a53-107">Le nom du contrat est également dérivé de ce paramètre de type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-107">The contract name is also derived from this type parameter.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="d8a53-108">Retourne l'exportation avec le nom de contrat dérivé du paramètre de type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-108">Returns the export with the contract name derived from the specified type parameter.</span>
          </span>
          <span data-ttu-id="d8a53-109">Si la mise en correspondance ne donne pas une et une seule exportation, une exception est levée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-109">If there is not exactly one matching export, an exception is thrown.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8a53-110">Exportation avec le nom de contrat dérivé du paramètre de type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-110">The export with the contract name derived from the specified type parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8a53-111">Le nom de contrat est le résultat de l’appel de la <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> méthode sur `T`.</span><span class="sxs-lookup"><span data-stu-id="d8a53-111">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d8a53-112">Le nom de contrat est comparé à l’aide de la <xref:System.StringComparer.Ordinal%2A> propriété pour effectuer une comparaison respectant la casse, non linguistique.</span><span class="sxs-lookup"><span data-stu-id="d8a53-112">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
          <span data-ttu-id="d8a53-113">Il n'y a aucun objet <see cref="T:System.Lazy`1" /> avec le nom de contrat dérivé de <paramref name="T" /> dans l'objet <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-113">There are zero <see cref="T:System.Lazy`1" /> objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
          </span>
          <span data-ttu-id="d8a53-114">- ou - Il existe plusieurs objets <see cref="T:System.Lazy`1" /> avec le nom de contrat dérivé de <paramref name="T" /> dans l’objet <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-114">-or-  There is more than one <see cref="T:System.Lazy`1" /> object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d8a53-115">L'objet <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> a été supprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-115">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExport&lt;T&gt;">
      <MemberSignature Language="C#" Value="public Lazy&lt;T&gt; GetExport&lt;T&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Lazy`1&lt;!!T&gt; GetExport&lt;T&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport(Of T) (contractName As String) As Lazy(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; Lazy&lt;T&gt; ^ GetExport(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExport : string -&gt; Lazy&lt;'T&gt;" Usage="exportProvider.GetExport contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d8a53-116">Paramètre de type de l'objet <see cref="T:System.Lazy`1" /> à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-116">The type parameter of the <see cref="T:System.Lazy`1" /> object to return.</span>
          </span>
        </typeparam>
        <param name="contractName">
          <span data-ttu-id="d8a53-117">Nom de contrat de l'objet <see cref="T:System.Lazy`1" /> à retourner, <see langword="null" /> ou chaîne vide ("") pour utiliser le nom de contrat par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-117">The contract name of the <see cref="T:System.Lazy`1" /> object to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8a53-118">Retourne l'exportation avec le nom de contrat spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-118">Returns the export with the specified contract name.</span>
          </span>
          <span data-ttu-id="d8a53-119">Si la mise en correspondance ne donne pas une et une seule exportation, une exception est levée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-119">If there is not exactly one matching export, an exception is thrown.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8a53-120">Exportation avec le nom de contrat spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-120">The export with the specified contract name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8a53-121">Le nom de contrat par défaut est le résultat de l’appel de la <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> méthode sur `T`.</span><span class="sxs-lookup"><span data-stu-id="d8a53-121">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d8a53-122">Le nom de contrat est comparé à l’aide de la <xref:System.StringComparer.Ordinal%2A> propriété pour effectuer une comparaison respectant la casse, non linguistique.</span><span class="sxs-lookup"><span data-stu-id="d8a53-122">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
          <span data-ttu-id="d8a53-123">Il n'y a aucun objet <see cref="T:System.Lazy`1" /> avec le nom de contrat dérivé de <paramref name="T" /> dans l'objet <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-123">There are zero <see cref="T:System.Lazy`1" /> objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
          </span>
          <span data-ttu-id="d8a53-124">- ou - Il existe plusieurs objets <see cref="T:System.Lazy`1" /> avec le nom de contrat dérivé de <paramref name="T" /> dans l’objet <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-124">-or-  There is more than one <see cref="T:System.Lazy`1" /> object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d8a53-125">L'objet <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> a été supprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-125">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExport&lt;T,TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public Lazy&lt;T,TMetadataView&gt; GetExport&lt;T,TMetadataView&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Lazy`2&lt;!!T, !!TMetadataView&gt; GetExport&lt;T, TMetadataView&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport(Of T, TMetadataView) () As Lazy(Of T, TMetadataView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TMetadataView&gt;&#xA; Lazy&lt;T, TMetadataView&gt; ^ GetExport();" />
      <MemberSignature Language="F#" Value="member this.GetExport : unit -&gt; Lazy&lt;'T, 'MetadataView&gt;" Usage="exportProvider.GetExport " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;T,TMetadataView&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d8a53-126">Paramètre de type de l'objet <see cref="T:System.Lazy`2" /> à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-126">The type parameter of the <see cref="T:System.Lazy`2" /> object to return.</span>
          </span>
          <span data-ttu-id="d8a53-127">Le nom du contrat est également dérivé de ce paramètre de type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-127">The contract name is also derived from this type parameter.</span>
          </span>
        </typeparam>
        <typeparam name="TMetadataView">
          <span data-ttu-id="d8a53-128">Type d'affichage des métadonnées de l'objet <see cref="T:System.Lazy`2" /> à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-128">The type of the metadata view of the <see cref="T:System.Lazy`2" /> object to return.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="d8a53-129">Retourne l'exportation avec le nom de contrat dérivé du paramètre de type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-129">Returns the export with the contract name derived from the specified type parameter.</span>
          </span>
          <span data-ttu-id="d8a53-130">Si la mise en correspondance ne donne pas une et une seule exportation, une exception est levée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-130">If there is not exactly one matching export, an exception is thrown.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8a53-131">System.Lazy\`2</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-131">System.Lazy\`2</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8a53-132">Le nom de contrat est le résultat de l’appel de la <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> méthode sur `T`.</span><span class="sxs-lookup"><span data-stu-id="d8a53-132">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d8a53-133">Le nom de contrat est comparé à l’aide de la <xref:System.StringComparer.Ordinal%2A> propriété pour effectuer une comparaison respectant la casse, non linguistique.</span><span class="sxs-lookup"><span data-stu-id="d8a53-133">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
          <span data-ttu-id="d8a53-134">Il n'y a aucun objet <see cref="T:System.Lazy`2" /> avec le nom de contrat dérivé de <paramref name="T" /> dans l'objet <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-134">There are zero <see cref="T:System.Lazy`2" /> objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
          </span>
          <span data-ttu-id="d8a53-135">- ou - Il existe plusieurs objets <see cref="T:System.Lazy`2" /> avec le nom de contrat dérivé de <paramref name="T" /> dans l’objet <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-135">-or-  There is more than one <see cref="T:System.Lazy`2" /> object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d8a53-136">L'objet <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> a été supprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-136">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d8a53-137">
            <paramref name="TMetadataView" /> n'est pas un type de vue de métadonnées valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-137">
              <paramref name="TMetadataView" /> is not a valid metadata view type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExport&lt;T,TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public Lazy&lt;T,TMetadataView&gt; GetExport&lt;T,TMetadataView&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Lazy`2&lt;!!T, !!TMetadataView&gt; GetExport&lt;T, TMetadataView&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExport``2(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExport(Of T, TMetadataView) (contractName As String) As Lazy(Of T, TMetadataView)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TMetadataView&gt;&#xA; Lazy&lt;T, TMetadataView&gt; ^ GetExport(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExport : string -&gt; Lazy&lt;'T, 'MetadataView&gt;" Usage="exportProvider.GetExport contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Lazy&lt;T,TMetadataView&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d8a53-138">Paramètre de type de l'objet <see cref="T:System.Lazy`2" /> à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-138">The type parameter of the <see cref="T:System.Lazy`2" /> object to return.</span>
          </span>
        </typeparam>
        <typeparam name="TMetadataView">
          <span data-ttu-id="d8a53-139">Type d'affichage des métadonnées de l'objet <see cref="T:System.Lazy`2" /> à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-139">The type of the metadata view of the <see cref="T:System.Lazy`2" /> object to return.</span>
          </span>
        </typeparam>
        <param name="contractName">
          <span data-ttu-id="d8a53-140">Nom de contrat de l'objet <see cref="T:System.Lazy`2" /> à retourner, <see langword="null" /> ou chaîne vide ("") pour utiliser le nom de contrat par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-140">The contract name of the <see cref="T:System.Lazy`2" /> object to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8a53-141">Retourne l'exportation avec le nom de contrat spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-141">Returns the export with the specified contract name.</span>
          </span>
          <span data-ttu-id="d8a53-142">Si la mise en correspondance ne donne pas une et une seule exportation, une exception est levée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-142">If there is not exactly one matching export, an exception is thrown.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8a53-143">Exportation avec le nom de contrat spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-143">The export with the specified contract name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8a53-144">Le nom de contrat par défaut est le résultat de l’appel de la <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> méthode sur `T`.</span><span class="sxs-lookup"><span data-stu-id="d8a53-144">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d8a53-145">Le nom de contrat est comparé à l’aide de la <xref:System.StringComparer.Ordinal%2A> propriété pour effectuer une comparaison respectant la casse, non linguistique.</span><span class="sxs-lookup"><span data-stu-id="d8a53-145">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
          <span data-ttu-id="d8a53-146">Il n'y a aucun objet <see cref="T:System.Lazy`2" /> avec le nom de contrat dérivé de <paramref name="T" /> dans l'objet <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-146">There are zero <see cref="T:System.Lazy`2" /> objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
          </span>
          <span data-ttu-id="d8a53-147">- ou - Il existe plusieurs objets <see cref="T:System.Lazy`2" /> avec le nom de contrat dérivé de <paramref name="T" /> dans l’objet <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-147">-or-  There is more than one <see cref="T:System.Lazy`2" /> object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d8a53-148">L'objet <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> a été supprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-148">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d8a53-149">
            <paramref name="TMetadataView" /> n'est pas un type de vue de métadonnées valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-149">
              <paramref name="TMetadataView" /> is not a valid metadata view type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExportedValue&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8a53-150">Obtient un objet exporté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-150">Gets an exported object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetExportedValue&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetExportedValue&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValue(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetExportedValue();" />
      <MemberSignature Language="F#" Value="member this.GetExportedValue : unit -&gt; 'T" Usage="exportProvider.GetExportedValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d8a53-151">Type de l'objet exporté à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-151">The type of the exported object to return.</span>
          </span>
          <span data-ttu-id="d8a53-152">Le nom du contrat est également dérivé de ce paramètre de type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-152">The contract name is also derived from this type parameter.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="d8a53-153">Retourne l'objet exporté avec le nom de contrat dérivé du paramètre de type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-153">Returns the exported object with the contract name derived from the specified type parameter.</span>
          </span>
          <span data-ttu-id="d8a53-154">Si la mise en correspondance ne donne pas uniquement un seul objet exporté, une exception est levée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-154">If there is not exactly one matching exported object, an exception is thrown.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8a53-155">Objet exporté avec le nom de contrat dérivé du paramètre de type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-155">The exported object with the contract name derived from the specified type parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8a53-156">Le nom de contrat est le résultat de l’appel de la <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> méthode sur `T`.</span><span class="sxs-lookup"><span data-stu-id="d8a53-156">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d8a53-157">Le nom de contrat est comparé à l’aide de la <xref:System.StringComparer.Ordinal%2A> propriété pour effectuer une comparaison respectant la casse, non linguistique.</span><span class="sxs-lookup"><span data-stu-id="d8a53-157">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
          <span data-ttu-id="d8a53-158">Il n'y a aucun objet exporté avec le nom de contrat dérivé de <paramref name="T" /> dans <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-158">There are zero exported objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          </span>
          <span data-ttu-id="d8a53-159">- ou - Il existe plusieurs objets exportés avec le nom de contrat dérivé de <paramref name="T" /> dans <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-159">-or-  There is more than one exported object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d8a53-160">L'objet <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> a été supprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-160">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException">
          <span data-ttu-id="d8a53-161">L'objet exporté sous-jacent ne peut pas être casté en <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-161">The underlying exported object cannot be cast to <paramref name="T" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException">
          <span data-ttu-id="d8a53-162">Une erreur s'est produite pendant la composition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-162">An error occurred during composition.</span>
          </span>
          <span data-ttu-id="d8a53-163">
            <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> contiendra une collection d'erreurs qui se sont produites.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-163">
              <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExportedValue&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetExportedValue&lt;T&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetExportedValue&lt;T&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValue``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValue(Of T) (contractName As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetExportedValue(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExportedValue : string -&gt; 'T" Usage="exportProvider.GetExportedValue contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d8a53-164">Type de l'objet exporté à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-164">The type of the exported object to return.</span>
          </span>
        </typeparam>
        <param name="contractName">
          <span data-ttu-id="d8a53-165">Nom de contrat de l'objet exporté à retourner, <see langword="null" /> ou chaîne vide ("") pour utiliser le nom de contrat par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-165">The contract name of the exported object to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8a53-166">Retourne l'objet exporté avec le nom de contrat spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-166">Returns the exported object with the specified contract name.</span>
          </span>
          <span data-ttu-id="d8a53-167">Si la mise en correspondance ne donne pas uniquement un seul objet exporté, une exception est levée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-167">If there is not exactly one matching exported object, an exception is thrown.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8a53-168">Objet exporté avec le nom de contrat spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-168">The exported object with the specified contract name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8a53-169">Le nom de contrat par défaut est le résultat de l’appel de la <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> méthode sur `T`.</span><span class="sxs-lookup"><span data-stu-id="d8a53-169">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d8a53-170">Le nom de contrat est comparé à l’aide de la <xref:System.StringComparer.Ordinal%2A> propriété pour effectuer une comparaison respectant la casse, non linguistique.</span><span class="sxs-lookup"><span data-stu-id="d8a53-170">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
          <span data-ttu-id="d8a53-171">Il n'y a aucun objet exporté avec le nom de contrat dérivé de <paramref name="T" /> dans <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-171">There are zero exported objects with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          </span>
          <span data-ttu-id="d8a53-172">- ou - Il existe plusieurs objets exportés avec le nom de contrat dérivé de <paramref name="T" /> dans <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-172">-or-  There is more than one exported object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d8a53-173">L'objet <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> a été supprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-173">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException">
          <span data-ttu-id="d8a53-174">L'objet exporté sous-jacent ne peut pas être casté en <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-174">The underlying exported object cannot be cast to <paramref name="T" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException">
          <span data-ttu-id="d8a53-175">Une erreur s'est produite pendant la composition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-175">An error occurred during composition.</span>
          </span>
          <span data-ttu-id="d8a53-176">
            <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> contiendra une collection d'erreurs qui se sont produites.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-176">
              <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExportedValueOrDefault&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8a53-177">Obtient un objet exporté spécifié ou une valeur par défaut si celui-ci n'est pas disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-177">Gets a specified exported object or a default value if it is unavailable.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExportedValueOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetExportedValueOrDefault&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetExportedValueOrDefault&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValueOrDefault(Of T) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetExportedValueOrDefault();" />
      <MemberSignature Language="F#" Value="member this.GetExportedValueOrDefault : unit -&gt; 'T" Usage="exportProvider.GetExportedValueOrDefault " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d8a53-178">Type de l'objet exporté à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-178">The type of the exported object to return.</span>
          </span>
          <span data-ttu-id="d8a53-179">Le nom du contrat est également dérivé de ce paramètre de type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-179">The contract name is also derived from this type parameter.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="d8a53-180">Obtient l'objet exporté avec le nom de contrat dérivé du paramètre de type spécifié ou la valeur par défaut du type spécifié, ou encore lève une exception s'il existe plusieurs correspondances d'objets exportés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-180">Gets the exported object with the contract name derived from the specified type parameter or the default value for the specified type, or throws an exception if there is more than one matching exported object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8a53-181">Objet exporté avec le nom de contrat dérivé de <paramref name="T" />, s'il est trouvé ; sinon, valeur par défaut de <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-181">The exported object with the contract name derived from <paramref name="T" />, if found; otherwise, the default value for <paramref name="T" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8a53-182">Si l’objet exporté est introuvable, cette méthode retourne la valeur par défaut appropriée pour `T`; par exemple, zéro pour les types d’entiers, `false` pour les types booléens, et `null` pour les types référence.</span><span class="sxs-lookup"><span data-stu-id="d8a53-182">If the exported object is not found, this method returns the appropriate default value for `T`; for example, zero for integer types, `false` for Boolean types, and `null` for reference types.</span></span>  
  
 <span data-ttu-id="d8a53-183">Le nom de contrat est le résultat de l’appel de la <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> méthode sur `T`.</span><span class="sxs-lookup"><span data-stu-id="d8a53-183">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d8a53-184">Le nom de contrat est comparé à l’aide de la <xref:System.StringComparer.Ordinal%2A> propriété pour effectuer une comparaison respectant la casse, non linguistique.</span><span class="sxs-lookup"><span data-stu-id="d8a53-184">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
          <span data-ttu-id="d8a53-185">Il y a plusieurs objets exportés avec le nom de contrat dérivé de <paramref name="T" /> dans <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-185">There is more than one exported object with the contract name derived from <paramref name="T" /> in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d8a53-186">L'objet <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> a été supprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-186">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException">
          <span data-ttu-id="d8a53-187">L'objet exporté sous-jacent ne peut pas être casté en <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-187">The underlying exported object cannot be cast to <paramref name="T" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException">
          <span data-ttu-id="d8a53-188">Une erreur s'est produite pendant la composition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-188">An error occurred during composition.</span>
          </span>
          <span data-ttu-id="d8a53-189">
            <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> contiendra une collection d'erreurs qui se sont produites.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-189">
              <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExportedValueOrDefault&lt;T&gt;">
      <MemberSignature Language="C#" Value="public T GetExportedValueOrDefault&lt;T&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance !!T GetExportedValueOrDefault&lt;T&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValueOrDefault``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValueOrDefault(Of T) (contractName As String) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; T GetExportedValueOrDefault(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExportedValueOrDefault : string -&gt; 'T" Usage="exportProvider.GetExportedValueOrDefault contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d8a53-190">Type de l'objet exporté à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-190">The type of the exported object to return.</span>
          </span>
        </typeparam>
        <param name="contractName">
          <span data-ttu-id="d8a53-191">Nom de contrat de l'objet exporté à retourner, <see langword="null" /> ou chaîne vide ("") pour utiliser le nom de contrat par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-191">The contract name of the exported object to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8a53-192">Obtient l'objet exporté avec le nom de contrat spécifié ou la valeur par défaut du type spécifié, ou encore lève une exception s'il existe plusieurs correspondances d'objets exportés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-192">Gets the exported object with the specified contract name or the default value for the specified type, or throws an exception if there is more than one matching exported object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8a53-193">Objet exporté avec le nom de contrat spécifié, s'il est trouvé ; sinon, valeur par défaut de <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-193">The exported object with the specified contract name, if found; otherwise, the default value for <paramref name="T" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8a53-194">Si l’objet exporté est introuvable, cette méthode retourne la valeur par défaut appropriée pour `T`; par exemple, zéro pour les types d’entiers, `false` pour les types booléens, et `null` pour les types référence.</span><span class="sxs-lookup"><span data-stu-id="d8a53-194">If the exported object is not found, this method returns the appropriate default value for `T`; for example, zero for integer types, `false` for Boolean types, and `null` for reference types.</span></span>  
  
 <span data-ttu-id="d8a53-195">Le nom de contrat par défaut est le résultat de l’appel de la <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> méthode sur `T`.</span><span class="sxs-lookup"><span data-stu-id="d8a53-195">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d8a53-196">Le nom de contrat est comparé à l’aide de la <xref:System.StringComparer.Ordinal%2A> propriété pour effectuer une comparaison respectant la casse, non linguistique.</span><span class="sxs-lookup"><span data-stu-id="d8a53-196">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
          <span data-ttu-id="d8a53-197">Il y a plusieurs objets exportés avec le nom de contrat spécifié dans <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-197">There is more than one exported object with the specified contract name in the <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d8a53-198">L'objet <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> a été supprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-198">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException">
          <span data-ttu-id="d8a53-199">L'objet exporté sous-jacent ne peut pas être casté en <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-199">The underlying exported object cannot be cast to <paramref name="T" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException">
          <span data-ttu-id="d8a53-200">Une erreur s'est produite pendant la composition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-200">An error occurred during composition.</span>
          </span>
          <span data-ttu-id="d8a53-201">
            <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> contiendra une collection d'erreurs qui se sont produites.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-201">
              <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExportedValues&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8a53-202">Obtient un ou plusieurs objets exportés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-202">Gets one or more exported objects.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExportedValues&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;T&gt; GetExportedValues&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetExportedValues&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValues(Of T) () As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetExportedValues();" />
      <MemberSignature Language="F#" Value="member this.GetExportedValues : unit -&gt; seq&lt;'T&gt;" Usage="exportProvider.GetExportedValues " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d8a53-203">Type de l'objet exporté à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-203">The type of the exported object to return.</span>
          </span>
          <span data-ttu-id="d8a53-204">Le nom du contrat est également dérivé de ce paramètre de type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-204">The contract name is also derived from this type parameter.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="d8a53-205">Obtient tous les objets exportés avec le nom de contrat dérivé du paramètre de type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-205">Gets all the exported objects with the contract name derived from the specified type parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8a53-206">Objets exportés avec le nom de contrat dérivé du paramètre de type spécifié, s'il est trouvé ; sinon, objet <see cref="T:System.Collections.ObjectModel.Collection`1" /> vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-206">The exported objects with the contract name derived from the specified type parameter, if found; otherwise, an empty <see cref="T:System.Collections.ObjectModel.Collection`1" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8a53-207">Le nom de contrat est le résultat de l’appel de la <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> méthode sur `T`.</span><span class="sxs-lookup"><span data-stu-id="d8a53-207">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d8a53-208">Le nom de contrat est comparé à l’aide de la <xref:System.StringComparer.Ordinal%2A> propriété pour effectuer une comparaison respectant la casse, non linguistique.</span><span class="sxs-lookup"><span data-stu-id="d8a53-208">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d8a53-209">L'objet <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> a été supprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-209">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException">
          <span data-ttu-id="d8a53-210">Un ou plusieurs des objets exportés sous-jacents ne peuvent pas être castés en <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-210">One or more of the underlying exported objects cannot be cast to <paramref name="T" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException">
          <span data-ttu-id="d8a53-211">Une erreur s'est produite pendant la composition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-211">An error occurred during composition.</span>
          </span>
          <span data-ttu-id="d8a53-212">
            <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> contiendra une collection d'erreurs qui se sont produites.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-212">
              <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExportedValues&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;T&gt; GetExportedValues&lt;T&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; GetExportedValues&lt;T&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportedValues``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExportedValues(Of T) (contractName As String) As IEnumerable(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Collections::Generic::IEnumerable&lt;T&gt; ^ GetExportedValues(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExportedValues : string -&gt; seq&lt;'T&gt;" Usage="exportProvider.GetExportedValues contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d8a53-213">Type de l'objet exporté à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-213">The type of the exported object to return.</span>
          </span>
        </typeparam>
        <param name="contractName">
          <span data-ttu-id="d8a53-214">Nom de contrat des objets exportés à retourner, <see langword="null" /> ou chaîne vide ("") pour utiliser le nom de contrat par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-214">The contract name of the exported objects to return; or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8a53-215">Obtient tous les objets exportés avec le nom de contrat spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-215">Gets all the exported objects with the specified contract name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8a53-216">Objets exportés avec le nom de contrat spécifié, s'il est trouvé ; sinon, objet <see cref="T:System.Collections.ObjectModel.Collection`1" /> vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-216">The exported objects with the specified contract name, if found; otherwise, an empty <see cref="T:System.Collections.ObjectModel.Collection`1" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8a53-217">Le nom de contrat par défaut est le résultat de l’appel de la <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> méthode sur `T`.</span><span class="sxs-lookup"><span data-stu-id="d8a53-217">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d8a53-218">Le nom de contrat est comparé à l’aide de la <xref:System.StringComparer.Ordinal%2A> propriété pour effectuer une comparaison respectant la casse, non linguistique.</span><span class="sxs-lookup"><span data-stu-id="d8a53-218">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d8a53-219">L'objet <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> a été supprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-219">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionContractMismatchException">
          <span data-ttu-id="d8a53-220">Une ou plusieurs des valeurs exportées sous-jacentes ne peuvent pas être castées en <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-220">One or more of the underlying exported values cannot be cast to <paramref name="T" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Composition.CompositionException">
          <span data-ttu-id="d8a53-221">Une erreur s'est produite pendant la composition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-221">An error occurred during composition.</span>
          </span>
          <span data-ttu-id="d8a53-222">
            <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> contiendra une collection d'erreurs qui se sont produites.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-222">
              <see cref="P:System.ComponentModel.Composition.CompositionException.Errors" /> will contain a collection of errors that occurred.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetExports">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d8a53-223">Obtient toutes les exportations correspondant aux conditions spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-223">Gets all the exports matching the specified conditions.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt; GetExports(class System.ComponentModel.Composition.Primitives.ImportDefinition definition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports (definition As ImportDefinition) As IEnumerable(Of Export)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ GetExports(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition);" />
      <MemberSignature Language="F#" Value="member this.GetExports : System.ComponentModel.Composition.Primitives.ImportDefinition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.Export&gt;" Usage="exportProvider.GetExports definition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
      </Parameters>
      <Docs>
        <param name="definition">
          <span data-ttu-id="d8a53-224">Objet qui définit les conditions des objets <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> à obtenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-224">The object that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8a53-225">Obtient toutes les exportations qui correspondent aux conditions de la définition de l'importation spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-225">Gets all exports that match the conditions of the specified import definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8a53-226">Collection de tous les objets <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> correspondant à la condition spécifiée par <paramref name="definition" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-226">A collection of all the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects matching the condition specified by <paramref name="definition" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
          <span data-ttu-id="d8a53-227">
            <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> est <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> et il n'y a aucun objet <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> qui correspond aux conditions du <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-227">
              <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> and there are zero <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects that match the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span>
          </span>
          <span data-ttu-id="d8a53-228">- ou - <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> est <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> ou <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" />, et il existe plusieurs objets <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> qui correspondent aux conditions du <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-228">-or-  <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> or <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> and there is more than one <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> object that matches the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d8a53-229">
            <paramref name="definition" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-229">
              <paramref name="definition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; GetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt; GetExports(class System.ComponentModel.Composition.Primitives.ImportDefinition definition, class System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ GetExports(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition, System::ComponentModel::Composition::Hosting::AtomicComposition ^ atomicComposition);" />
      <MemberSignature Language="F#" Value="member this.GetExports : System.ComponentModel.Composition.Primitives.ImportDefinition * System.ComponentModel.Composition.Hosting.AtomicComposition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.Export&gt;" Usage="exportProvider.GetExports (definition, atomicComposition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
        <Parameter Name="atomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
      </Parameters>
      <Docs>
        <param name="definition">
          <span data-ttu-id="d8a53-230">Objet qui définit les conditions des objets <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> à obtenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-230">The object that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to get.</span>
          </span>
        </param>
        <param name="atomicComposition">
          <span data-ttu-id="d8a53-231">Conteneur transactionnel pour la composition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-231">The transactional container for the composition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8a53-232">Obtient toutes les exportations qui correspondent aux conditions de la définition et de la composition de l'importation spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-232">Gets all exports that match the conditions of the specified import definition and composition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8a53-233">Collection de tous les objets <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> correspondant à la condition spécifiée par <paramref name="definition" /> et <paramref name="atomicComposition" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-233">A collection of all the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects matching the condition specified by <paramref name="definition" /> and <paramref name="atomicComposition" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.Composition.ImportCardinalityMismatchException">
          <span data-ttu-id="d8a53-234">
            <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> est <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> et il n'y a aucun objet <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> qui correspond aux conditions du <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-234">
              <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> and there are zero <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects that match the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span>
          </span>
          <span data-ttu-id="d8a53-235">- ou - <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> est <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> ou <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" />, et il existe plusieurs objets <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> qui correspondent aux conditions du <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-235">-or-  <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> or <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> and there is more than one <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> object that matches the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d8a53-236">
            <paramref name="definition" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-236">
              <paramref name="definition" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d8a53-237">-ou- <paramref name="atomicComposition" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-237">-or-  <paramref name="atomicComposition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;object,object&gt;&gt; GetExports (Type type, Type metadataViewType, string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`2&lt;object, object&gt;&gt; GetExports(class System.Type type, class System.Type metadataViewType, string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports(System.Type,System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Lazy&lt;System::Object ^, System::Object ^&gt; ^&gt; ^ GetExports(Type ^ type, Type ^ metadataViewType, System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExports : Type * Type * string -&gt; seq&lt;Lazy&lt;obj, obj&gt;&gt;" Usage="exportProvider.GetExports (type, metadataViewType, contractName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;System.Object,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="metadataViewType" Type="System.Type" />
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="d8a53-238">Paramètre de type des objets <see cref="T:System.Lazy`2" /> à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-238">The type parameter of the <see cref="T:System.Lazy`2" /> objects to return.</span>
          </span>
        </param>
        <param name="metadataViewType">
          <span data-ttu-id="d8a53-239">Type d'affichage des métadonnées des objets <see cref="T:System.Lazy`2" /> à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-239">The type of the metadata view of the <see cref="T:System.Lazy`2" /> objects to return.</span>
          </span>
        </param>
        <param name="contractName">
          <span data-ttu-id="d8a53-240">Nom de contrat de l'objet <see cref="T:System.Lazy`2" /> à retourner, <see langword="null" /> ou chaîne vide ("") pour utiliser le nom de contrat par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-240">The contract name of the <see cref="T:System.Lazy`2" /> object to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8a53-241">Obtient toutes les exportations avec le nom de contrat spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-241">Gets all the exports with the specified contract name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8a53-242">Collection de tous les objets <see cref="T:System.Lazy`2" /> pour le contrat correspondant à <paramref name="contractName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-242">A collection of all the <see cref="T:System.Lazy`2" /> objects for the contract matching <paramref name="contractName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8a53-243">Le nom de contrat par défaut est le résultat de l’appel de la <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> méthode sur `type`.</span><span class="sxs-lookup"><span data-stu-id="d8a53-243">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `type`.</span></span>  
  
 <span data-ttu-id="d8a53-244">Le nom de contrat est comparé à l’aide de la <xref:System.StringComparer.Ordinal%2A> propriété pour effectuer une comparaison respectant la casse, non linguistique.</span><span class="sxs-lookup"><span data-stu-id="d8a53-244">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d8a53-245">L'objet <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> a été supprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-245">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d8a53-246">
            <paramref name="type" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-246">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d8a53-247">
            <paramref name="metadataViewType" /> n'est pas un type de vue de métadonnées valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-247">
              <paramref name="metadataViewType" /> is not a valid metadata view type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;T&gt;&gt; GetExports&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`1&lt;!!T&gt;&gt; GetExports&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports(Of T) () As IEnumerable(Of Lazy(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Collections::Generic::IEnumerable&lt;Lazy&lt;T&gt; ^&gt; ^ GetExports();" />
      <MemberSignature Language="F#" Value="member this.GetExports : unit -&gt; seq&lt;Lazy&lt;'T&gt;&gt;" Usage="exportProvider.GetExports " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d8a53-248">Paramètre de type des objets <see cref="T:System.Lazy`1" /> à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-248">The type parameter of the <see cref="T:System.Lazy`1" /> objects to return.</span>
          </span>
          <span data-ttu-id="d8a53-249">Le nom du contrat est également dérivé de ce paramètre de type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-249">The contract name is also derived from this type parameter.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="d8a53-250">Obtient toutes les exportations avec le nom de contrat dérivé du paramètre de type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-250">Gets all the exports with the contract name derived from the specified type parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8a53-251">Objets <see cref="T:System.Lazy`1" /> avec le nom de contrat dérivé de <paramref name="T" />, s'il est trouvé ; sinon, objet <see cref="T:System.Collections.Generic.IEnumerable`1" /> vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-251">The <see cref="T:System.Lazy`1" /> objects with the contract name derived from <paramref name="T" />, if found; otherwise, an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8a53-252">Le nom de contrat est le résultat de l’appel de la <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> méthode sur `T`.</span><span class="sxs-lookup"><span data-stu-id="d8a53-252">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d8a53-253">Le nom de contrat est comparé à l’aide de la <xref:System.StringComparer.Ordinal%2A> propriété pour effectuer une comparaison respectant la casse, non linguistique.</span><span class="sxs-lookup"><span data-stu-id="d8a53-253">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d8a53-254">L'objet <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> a été supprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-254">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports&lt;T&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;T&gt;&gt; GetExports&lt;T&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`1&lt;!!T&gt;&gt; GetExports&lt;T&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports(Of T) (contractName As String) As IEnumerable(Of Lazy(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; System::Collections::Generic::IEnumerable&lt;Lazy&lt;T&gt; ^&gt; ^ GetExports(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExports : string -&gt; seq&lt;Lazy&lt;'T&gt;&gt;" Usage="exportProvider.GetExports contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;T&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d8a53-255">Paramètre de type des objets <see cref="T:System.Lazy`1" /> à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-255">The type parameter of the <see cref="T:System.Lazy`1" /> objects to return.</span>
          </span>
        </typeparam>
        <param name="contractName">
          <span data-ttu-id="d8a53-256">Nom de contrat des objets <see cref="T:System.Lazy`1" /> à retourner, <see langword="null" /> ou chaîne vide ("") pour utiliser le nom de contrat par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-256">The contract name of the <see cref="T:System.Lazy`1" /> objects to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8a53-257">Obtient toutes les exportations avec le nom de contrat spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-257">Gets all the exports with the specified contract name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8a53-258">Objets <see cref="T:System.Lazy`1" /> avec le nom de contrat spécifié, s'il est trouvé ; sinon, objet <see cref="T:System.Collections.Generic.IEnumerable`1" /> vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-258">The <see cref="T:System.Lazy`1" /> objects with the specified contract name, if found; otherwise, an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8a53-259">Le nom de contrat par défaut est le résultat de l’appel de la <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> méthode sur `T`.</span><span class="sxs-lookup"><span data-stu-id="d8a53-259">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d8a53-260">Le nom de contrat est comparé à l’aide de la <xref:System.StringComparer.Ordinal%2A> propriété pour effectuer une comparaison respectant la casse, non linguistique.</span><span class="sxs-lookup"><span data-stu-id="d8a53-260">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d8a53-261">L'objet <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> a été supprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-261">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports&lt;T,TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;T,TMetadataView&gt;&gt; GetExports&lt;T,TMetadataView&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`2&lt;!!T, !!TMetadataView&gt;&gt; GetExports&lt;T, TMetadataView&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports(Of T, TMetadataView) () As IEnumerable(Of Lazy(Of T, TMetadataView))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TMetadataView&gt;&#xA; System::Collections::Generic::IEnumerable&lt;Lazy&lt;T, TMetadataView&gt; ^&gt; ^ GetExports();" />
      <MemberSignature Language="F#" Value="member this.GetExports : unit -&gt; seq&lt;Lazy&lt;'T, 'MetadataView&gt;&gt;" Usage="exportProvider.GetExports " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;T,TMetadataView&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d8a53-262">Paramètre de type des objets <see cref="T:System.Lazy`2" /> à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-262">The type parameter of the <see cref="T:System.Lazy`2" /> objects to return.</span>
          </span>
          <span data-ttu-id="d8a53-263">Le nom du contrat est également dérivé de ce paramètre de type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-263">The contract name is also derived from this type parameter.</span>
          </span>
        </typeparam>
        <typeparam name="TMetadataView">
          <span data-ttu-id="d8a53-264">Type d'affichage des métadonnées des objets <see cref="T:System.Lazy`2" /> à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-264">The type of the metadata view of the <see cref="T:System.Lazy`2" /> objects to return.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="d8a53-265">Obtient toutes les exportations avec le nom de contrat dérivé du paramètre de type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-265">Gets all the exports with the contract name derived from the specified type parameter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8a53-266">Objets <see cref="T:System.Lazy`2" /> avec le nom de contrat dérivé de <paramref name="T" />, s'il est trouvé ; sinon, objet <see cref="T:System.Collections.Generic.IEnumerable`1" /> vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-266">The <see cref="T:System.Lazy`2" /> objects with the contract name derived from <paramref name="T" />, if found; otherwise, an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8a53-267">Le nom de contrat est le résultat de l’appel de la <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> méthode sur `T`.</span><span class="sxs-lookup"><span data-stu-id="d8a53-267">The contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d8a53-268">Le nom de contrat est comparé à l’aide de la <xref:System.StringComparer.Ordinal%2A> propriété pour effectuer une comparaison respectant la casse, non linguistique.</span><span class="sxs-lookup"><span data-stu-id="d8a53-268">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d8a53-269">L'objet <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> a été supprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-269">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d8a53-270">
            <paramref name="TMetadataView" /> n'est pas un type de vue de métadonnées valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-270">
              <paramref name="TMetadataView" /> is not a valid metadata view type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExports&lt;T,TMetadataView&gt;">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Lazy&lt;T,TMetadataView&gt;&gt; GetExports&lt;T,TMetadataView&gt; (string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Lazy`2&lt;!!T, !!TMetadataView&gt;&gt; GetExports&lt;T, TMetadataView&gt;(string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExports``2(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExports(Of T, TMetadataView) (contractName As String) As IEnumerable(Of Lazy(Of T, TMetadataView))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T, typename TMetadataView&gt;&#xA; System::Collections::Generic::IEnumerable&lt;Lazy&lt;T, TMetadataView&gt; ^&gt; ^ GetExports(System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="member this.GetExports : string -&gt; seq&lt;Lazy&lt;'T, 'MetadataView&gt;&gt;" Usage="exportProvider.GetExports contractName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Lazy&lt;T,TMetadataView&gt;&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
        <TypeParameter Name="TMetadataView" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="d8a53-271">Paramètre de type des objets <see cref="T:System.Lazy`2" /> à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-271">The type parameter of the <see cref="T:System.Lazy`2" /> objects to return.</span>
          </span>
          <span data-ttu-id="d8a53-272">Le nom du contrat est également dérivé de ce paramètre de type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-272">The contract name is also derived from this type parameter.</span>
          </span>
        </typeparam>
        <typeparam name="TMetadataView">
          <span data-ttu-id="d8a53-273">Type d'affichage des métadonnées des objets <see cref="T:System.Lazy`2" /> à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-273">The type of the metadata view of the <see cref="T:System.Lazy`2" /> objects to return.</span>
          </span>
        </typeparam>
        <param name="contractName">
          <span data-ttu-id="d8a53-274">Nom de contrat des objets <see cref="T:System.Lazy`2" /> à retourner, <see langword="null" /> ou chaîne vide ("") pour utiliser le nom de contrat par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-274">The contract name of the <see cref="T:System.Lazy`2" /> objects to return, or <see langword="null" /> or an empty string ("") to use the default contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8a53-275">Obtient toutes les exportations avec le nom de contrat spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-275">Gets all the exports with the specified contract name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8a53-276">Objets <see cref="T:System.Lazy`2" /> avec le nom de contrat spécifié, s'il est trouvé ; sinon, objet <see cref="T:System.Collections.Generic.IEnumerable`1" /> vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-276">The <see cref="T:System.Lazy`2" /> objects with the specified contract name if found; otherwise, an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8a53-277">Le nom de contrat par défaut est le résultat de l’appel de la <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> méthode sur `T`.</span><span class="sxs-lookup"><span data-stu-id="d8a53-277">The default contract name is the result of calling the <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A> method on `T`.</span></span>  
  
 <span data-ttu-id="d8a53-278">Le nom de contrat est comparé à l’aide de la <xref:System.StringComparer.Ordinal%2A> propriété pour effectuer une comparaison respectant la casse, non linguistique.</span><span class="sxs-lookup"><span data-stu-id="d8a53-278">The contract name is compared by using the <xref:System.StringComparer.Ordinal%2A> property to perform a case-sensitive, non-linguistic comparison.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="d8a53-279">L'objet <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> a été supprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-279">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> object has been disposed of.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="d8a53-280">
            <paramref name="TMetadataView" /> n'est pas un type de vue de métadonnées valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-280">
              <paramref name="TMetadataView" /> is not a valid metadata view type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetExportsCore">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; GetExportsCore (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt; GetExportsCore(class System.ComponentModel.Composition.Primitives.ImportDefinition definition, class System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ GetExportsCore(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition, System::ComponentModel::Composition::Hosting::AtomicComposition ^ atomicComposition);" />
      <MemberSignature Language="F#" Value="abstract member GetExportsCore : System.ComponentModel.Composition.Primitives.ImportDefinition * System.ComponentModel.Composition.Hosting.AtomicComposition -&gt; seq&lt;System.ComponentModel.Composition.Primitives.Export&gt;" Usage="exportProvider.GetExportsCore (definition, atomicComposition)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
        <Parameter Name="atomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
      </Parameters>
      <Docs>
        <param name="definition">
          <span data-ttu-id="d8a53-281">Objet qui définit les conditions des objets <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-281">The object that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to return.</span>
          </span>
        </param>
        <param name="atomicComposition">
          <span data-ttu-id="d8a53-282">Conteneur transactionnel pour la composition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-282">The transactional container for the composition.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8a53-283">Obtient toutes les exportations qui correspondent à la contrainte définie par la définition spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-283">Gets all the exports that match the constraint defined by the specified definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8a53-284">Collection qui contient toutes les exportations correspondant à la condition spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-284">A collection that contains all the exports that match the specified condition.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d8a53-285">Les substitutions de cette méthode ne doivent pas traiter les incompatibilités de cardinalité comme des erreurs et ne doivent pas lever d’exceptions dans ces cas.</span><span class="sxs-lookup"><span data-stu-id="d8a53-285">Overrides of this method should not treat cardinality-related mismatches as errors, and should not throw exceptions in those cases.</span></span> <span data-ttu-id="d8a53-286">Par exemple, si <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality%2A> est <xref:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne> et qu’aucun <xref:System.ComponentModel.Composition.Primitives.Export> les objets qui correspondent aux conditions de l’objet <xref:System.ComponentModel.Composition.Primitives.ImportDefinition>, vide <xref:System.Collections.Generic.IEnumerable%601> collection doit être retournée.</span><span class="sxs-lookup"><span data-stu-id="d8a53-286">For example, if <xref:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality%2A> is <xref:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne> and there are zero <xref:System.ComponentModel.Composition.Primitives.Export> objects that match the conditions of the specified <xref:System.ComponentModel.Composition.Primitives.ImportDefinition>, an empty <xref:System.Collections.Generic.IEnumerable%601> collection should be returned.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExportsChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnExportsChanged (System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnExportsChanged(class System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanged(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnExportsChanged (e As ExportsChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnExportsChanged(System::ComponentModel::Composition::Hosting::ExportsChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnExportsChanged : System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs -&gt; unit&#xA;override this.OnExportsChanged : System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs -&gt; unit" Usage="exportProvider.OnExportsChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="d8a53-287">
            <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-287">An <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8a53-288">Déclenche l'événement <see cref="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-288">Raises the <see cref="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnExportsChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnExportsChanging (System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnExportsChanging(class System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.OnExportsChanging(System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnExportsChanging (e As ExportsChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnExportsChanging(System::ComponentModel::Composition::Hosting::ExportsChangeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnExportsChanging : System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs -&gt; unit&#xA;override this.OnExportsChanging : System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs -&gt; unit" Usage="exportProvider.OnExportsChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="d8a53-289">
            <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" /> qui contient les données d'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-289">An <see cref="T:System.ComponentModel.Composition.Hosting.ExportsChangeEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8a53-290">Déclenche l'événement <see cref="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-290">Raises the <see cref="E:System.ComponentModel.Composition.Hosting.ExportProvider.ExportsChanging" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetExports">
      <MemberSignature Language="C#" Value="public bool TryGetExports (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition, out System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; exports);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetExports(class System.ComponentModel.Composition.Primitives.ImportDefinition definition, class System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition, [out] class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt;&amp; exports) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.ExportProvider.TryGetExports(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition,System.Collections.Generic.IEnumerable{System.ComponentModel.Composition.Primitives.Export}@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetExports(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition, System::ComponentModel::Composition::Hosting::AtomicComposition ^ atomicComposition, [Runtime::InteropServices::Out] System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ % exports);" />
      <MemberSignature Language="F#" Value="member this.TryGetExports : System.ComponentModel.Composition.Primitives.ImportDefinition * System.ComponentModel.Composition.Hosting.AtomicComposition *  -&gt; bool" Usage="exportProvider.TryGetExports (definition, atomicComposition, exports)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
        <Parameter Name="atomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
        <Parameter Name="exports" Type="System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="definition">
          <span data-ttu-id="d8a53-291">Objet qui définit les conditions des objets <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> à obtenir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-291">The object that defines the conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to get.</span>
          </span>
        </param>
        <param name="atomicComposition">
          <span data-ttu-id="d8a53-292">Conteneur transactionnel pour la composition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-292">The transactional container for the composition.</span>
          </span>
        </param>
        <param name="exports">
          <span data-ttu-id="d8a53-293">Lorsque cette méthode est retournée, contient une collection d'objets <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> qui correspondent aux conditions définies par <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />, s'il est trouvé ; sinon, objet <see cref="T:System.Collections.Generic.IEnumerable`1" /> vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-293">When this method returns, contains a collection of <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects that match the conditions defined by <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />, if found; otherwise, an empty <see cref="T:System.Collections.Generic.IEnumerable`1" /> object.</span>
          </span>
          <span data-ttu-id="d8a53-294">Ce paramètre est passé sans être initialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-294">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d8a53-295">Obtient toutes les exportations qui correspondent aux conditions de l'importation spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-295">Gets all the exports that match the conditions of the specified import.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d8a53-296">
            <see langword="true" />si <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> est <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> ou <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrMore" /> et qu’il n’y a aucun objet <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> qui correspond aux conditions du <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" /> spécifié ; <see langword="true" /> si <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> est <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> ou <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> qu’il existe exactement un <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> qui correspond aux conditions du <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />spécifié ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-296">
              <see langword="true" /> if <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> or <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrMore" /> and there are zero <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects that match the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />; <see langword="true" /> if <see cref="P:System.ComponentModel.Composition.Primitives.ImportDefinition.Cardinality" /> is <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ZeroOrOne" /> or <see cref="F:System.ComponentModel.Composition.Primitives.ImportCardinality.ExactlyOne" /> and there is exactly one <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> that matches the conditions of the specified <see cref="T:System.ComponentModel.Composition.Primitives.ImportDefinition" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d8a53-297">
            <paramref name="definition" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d8a53-297">
              <paramref name="definition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>