<Type Name="CatalogExportProvider" FullName="System.ComponentModel.Composition.Hosting.CatalogExportProvider">
  <TypeSignature Language="C#" Value="public class CatalogExportProvider : System.ComponentModel.Composition.Hosting.ExportProvider, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CatalogExportProvider extends System.ComponentModel.Composition.Hosting.ExportProvider implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class CatalogExportProvider&#xA;Inherits ExportProvider&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogExportProvider : System::ComponentModel::Composition::Hosting::ExportProvider, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.ComponentModel.Composition</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Composition.Hosting.ExportProvider</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="68e4d-101">Récupère des exportations d'un catalogue.</span><span class="sxs-lookup"><span data-stu-id="68e4d-101">Retrieves exports from a catalog.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="68e4d-102">Ce type implémente le <xref:System.IDisposable> interface.</span><span class="sxs-lookup"><span data-stu-id="68e4d-102">This type implements the <xref:System.IDisposable> interface.</span></span> <span data-ttu-id="68e4d-103">Lorsque vous avez fini d’utiliser le type, vous devez la supprimer directement ou indirectement.</span><span class="sxs-lookup"><span data-stu-id="68e4d-103">When you have finished using the type, you should dispose of it either directly or indirectly.</span></span> <span data-ttu-id="68e4d-104">Pour supprimer le type directement, vous devez appeler sa <xref:System.IDisposable.Dispose%2A> méthode dans un `try` / `catch` bloc.</span><span class="sxs-lookup"><span data-stu-id="68e4d-104">To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block.</span></span> <span data-ttu-id="68e4d-105">Pour la supprimer indirectement, utiliser une construction de langage telles que `using` (en c#) ou `Using` (en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="68e4d-105">To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic).</span></span> <span data-ttu-id="68e4d-106">Pour plus d’informations, consultez la section « Utilisant un objet qui implémente IDisposable » dans la <xref:System.IDisposable> rubrique de l’interface.</span><span class="sxs-lookup"><span data-stu-id="68e4d-106">For more information, see the "Using an Object that Implements IDisposable" section in the <xref:System.IDisposable> interface topic.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68e4d-107">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />.</span><span class="sxs-lookup"><span data-stu-id="68e4d-107">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogExportProvider (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (catalog As ComposablePartCatalog)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogExportProvider(System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ catalog);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="catalog" Type="System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />
      </Parameters>
      <Docs>
        <param name="catalog"><span data-ttu-id="68e4d-108">Catalogue que le <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> utilise pour produire des objets <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</span><span class="sxs-lookup"><span data-stu-id="68e4d-108">The catalog that the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> uses to produce <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span></span></param>
        <summary><span data-ttu-id="68e4d-109">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> à l'aide du catalogue spécifié.</span><span class="sxs-lookup"><span data-stu-id="68e4d-109">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> class with the specified catalog.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="68e4d-110"><paramref name="catalog" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="68e4d-110"><paramref name="catalog" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogExportProvider (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, bool isThreadSafe);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, bool isThreadSafe) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (catalog As ComposablePartCatalog, isThreadSafe As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogExportProvider(System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ catalog, bool isThreadSafe);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="catalog" Type="System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />
        <Parameter Name="isThreadSafe" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="catalog"><span data-ttu-id="68e4d-111">Catalogue que le <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> utilise pour produire des objets <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</span><span class="sxs-lookup"><span data-stu-id="68e4d-111">The catalog that the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> uses to produce <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span></span></param>
        <param name="isThreadSafe">
          <span data-ttu-id="68e4d-112"><see langword="true" /> si cet objet doit être thread-safe ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="68e4d-112"><see langword="true" /> if this object must be thread-safe; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="68e4d-113">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> à l'aide du catalogue spécifié et éventuellement en mode thread-safe.</span><span class="sxs-lookup"><span data-stu-id="68e4d-113">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> class with the specified catalog and optional thread-safe mode.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="68e4d-114"><paramref name="catalog" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="68e4d-114"><paramref name="catalog" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogExportProvider (System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Composition.Primitives.ComposablePartCatalog catalog, valuetype System.ComponentModel.Composition.Hosting.CompositionOptions compositionOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.#ctor(System.ComponentModel.Composition.Primitives.ComposablePartCatalog,System.ComponentModel.Composition.Hosting.CompositionOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogExportProvider(System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ catalog, System::ComponentModel::Composition::Hosting::CompositionOptions compositionOptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="catalog" Type="System.ComponentModel.Composition.Primitives.ComposablePartCatalog" />
        <Parameter Name="compositionOptions" Type="System.ComponentModel.Composition.Hosting.CompositionOptions" />
      </Parameters>
      <Docs>
        <param name="catalog"><span data-ttu-id="68e4d-115">Catalogue que le <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> utilise pour produire des objets <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</span><span class="sxs-lookup"><span data-stu-id="68e4d-115">The catalog that the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> uses to produce <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span></span></param>
        <param name="compositionOptions"><span data-ttu-id="68e4d-116">Options qui déterminent le comportement de ce fournisseur.</span><span class="sxs-lookup"><span data-stu-id="68e4d-116">Options that determine the behavior of this provider.</span></span></param>
        <summary><span data-ttu-id="68e4d-117">Initialise une nouvelle instance de la classe <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> à l'aide du catalogue et des options de composition spécifiés.</span><span class="sxs-lookup"><span data-stu-id="68e4d-117">Initializes a new instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> class with the specified catalog and composition options.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="68e4d-118"><paramref name="catalog" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="68e4d-118"><paramref name="catalog" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Catalog">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Primitives.ComposablePartCatalog Catalog { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Composition.Primitives.ComposablePartCatalog Catalog" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Catalog" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Catalog As ComposablePartCatalog" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ Catalog { System::ComponentModel::Composition::Primitives::ComposablePartCatalog ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Primitives.ComposablePartCatalog</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68e4d-119">Obtient le catalogue utilisé pour fournir des exportations.</span><span class="sxs-lookup"><span data-stu-id="68e4d-119">Gets the catalog that is used to provide exports.</span></span></summary>
        <value><span data-ttu-id="68e4d-120">Catalogue que le <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> utilise pour produire des objets <see cref="T:System.ComponentModel.Composition.Primitives.Export" />.</span><span class="sxs-lookup"><span data-stu-id="68e4d-120">The catalog that the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> uses to produce <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="68e4d-121"><see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="68e4d-121">The <see cref="T:System.ComponentModel.Composition.Hosting.CompositionContainer" /> has been disposed of.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="68e4d-122">Libère les ressources utilisées par le <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />.</span><span class="sxs-lookup"><span data-stu-id="68e4d-122">Releases the resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="68e4d-123">Libère toutes les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" />.</span><span class="sxs-lookup"><span data-stu-id="68e4d-123">Releases all resources used by the current instance of the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68e4d-124">Appelez la méthode `Dispose` une fois que vous avez terminé d'utiliser <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider>.</span><span class="sxs-lookup"><span data-stu-id="68e4d-124">Call `Dispose` when you are finished using the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider>.</span></span> <span data-ttu-id="68e4d-125">La méthode `Dispose` rend le <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> inutilisable.</span><span class="sxs-lookup"><span data-stu-id="68e4d-125">The `Dispose` method leaves the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> in an unusable state.</span></span> <span data-ttu-id="68e4d-126">Après avoir appelé `Dispose`, vous devez libérer toutes les références à la <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> occupée.</span><span class="sxs-lookup"><span data-stu-id="68e4d-126">After calling `Dispose`, you must release all references to the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> so the garbage collector can reclaim the memory that the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> was occupying.</span></span>  
  
 <span data-ttu-id="68e4d-127">Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentant une méthode de suppression](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="68e4d-127">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="68e4d-128">Appelez toujours `Dispose` avant de libérer votre dernière référence à <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider>.</span><span class="sxs-lookup"><span data-stu-id="68e4d-128">Always call `Dispose` before you release your last reference to the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider>.</span></span> <span data-ttu-id="68e4d-129">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> de l'objet `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="68e4d-129">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="68e4d-130"><see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</span><span class="sxs-lookup"><span data-stu-id="68e4d-130"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="68e4d-131">Libère les ressources non managées utilisées par <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> et libère éventuellement les ressources managées.</span><span class="sxs-lookup"><span data-stu-id="68e4d-131">Releases the unmanaged resources used by the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExportsCore">
      <MemberSignature Language="C#" Value="protected override System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt; GetExportsCore (System.ComponentModel.Composition.Primitives.ImportDefinition definition, System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.ComponentModel.Composition.Primitives.Export&gt; GetExportsCore(class System.ComponentModel.Composition.Primitives.ImportDefinition definition, class System.ComponentModel.Composition.Hosting.AtomicComposition atomicComposition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportsCore(System.ComponentModel.Composition.Primitives.ImportDefinition,System.ComponentModel.Composition.Hosting.AtomicComposition)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::Generic::IEnumerable&lt;System::ComponentModel::Composition::Primitives::Export ^&gt; ^ GetExportsCore(System::ComponentModel::Composition::Primitives::ImportDefinition ^ definition, System::ComponentModel::Composition::Hosting::AtomicComposition ^ atomicComposition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.ComponentModel.Composition.Primitives.Export&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="definition" Type="System.ComponentModel.Composition.Primitives.ImportDefinition" />
        <Parameter Name="atomicComposition" Type="System.ComponentModel.Composition.Hosting.AtomicComposition" />
      </Parameters>
      <Docs>
        <param name="definition"><span data-ttu-id="68e4d-132">Conditions des objets <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> à retourner.</span><span class="sxs-lookup"><span data-stu-id="68e4d-132">The conditions of the <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects to be returned.</span></span></param>
        <param name="atomicComposition"><span data-ttu-id="68e4d-133">Transaction de composition à utiliser ou <see langword="null" /> pour désactiver la composition transactionnelle.</span><span class="sxs-lookup"><span data-stu-id="68e4d-133">The composition transaction to use, or <see langword="null" /> to disable transactional composition.</span></span></param>
        <summary><span data-ttu-id="68e4d-134">Retourne toutes les exportations qui correspondent aux conditions de l'importation spécifiée.</span><span class="sxs-lookup"><span data-stu-id="68e4d-134">Returns all exports that match the conditions of the specified import.</span></span></summary>
        <returns><span data-ttu-id="68e4d-135">Collection qui contient toutes les exportations correspondant à la condition spécifiée.</span><span class="sxs-lookup"><span data-stu-id="68e4d-135">A collection that contains all the exports that match the specified condition.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68e4d-136">Les implémenteurs ne doivent pas traiter les incompatibilités de cardinalité comme des erreurs et lever d’exceptions pour les incompatibilités de cardinalité.</span><span class="sxs-lookup"><span data-stu-id="68e4d-136">Implementers should not treat cardinality-related mismatches as errors and should not throw exceptions for cardinality-related mismatches.</span></span> <span data-ttu-id="68e4d-137">Par exemple, si l’importation demande exactement une exportation et le fournisseur n’a pas d’exportations correspondantes ou plusieurs, la <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportsCore%2A> méthode doit retourner vide <xref:System.Collections.Generic.IEnumerable%601> collection de <xref:System.ComponentModel.Composition.Primitives.Export> objets.</span><span class="sxs-lookup"><span data-stu-id="68e4d-137">For example, if the import requests exactly one export and the provider has either no matching exports or more than one, the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider.GetExportsCore%2A> method should return an empty <xref:System.Collections.Generic.IEnumerable%601> collection of <xref:System.ComponentModel.Composition.Primitives.Export> objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceProvider">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Composition.Hosting.ExportProvider SourceProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Composition.Hosting.ExportProvider SourceProvider" />
      <MemberSignature Language="DocId" Value="P:System.ComponentModel.Composition.Hosting.CatalogExportProvider.SourceProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceProvider As ExportProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Composition::Hosting::ExportProvider ^ SourceProvider { System::ComponentModel::Composition::Hosting::ExportProvider ^ get(); void set(System::ComponentModel::Composition::Hosting::ExportProvider ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ComponentModel.Composition</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Composition.Hosting.ExportProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="68e4d-138">Obtient ou définit le fournisseur d'exportations qui fournit l'accès aux exportations supplémentaires.</span><span class="sxs-lookup"><span data-stu-id="68e4d-138">Gets or sets the export provider that provides access to additional exports.</span></span></summary>
        <value><span data-ttu-id="68e4d-139">Fournisseur d'exportations qui fournit l'accès <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> aux objets <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> supplémentaires.</span><span class="sxs-lookup"><span data-stu-id="68e4d-139">The export provider that provides the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> access to additional <see cref="T:System.ComponentModel.Composition.Primitives.Export" /> objects.</span></span> <span data-ttu-id="68e4d-140">La valeur par défaut est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="68e4d-140">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="68e4d-141">Vous devez définir cette propriété avant de vous accéder à toutes les méthodes sur le <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> objet.</span><span class="sxs-lookup"><span data-stu-id="68e4d-141">You must set this property before you access any methods on the <xref:System.ComponentModel.Composition.Hosting.CatalogExportProvider> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="68e4d-142"><see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> a été supprimé.</span><span class="sxs-lookup"><span data-stu-id="68e4d-142">The <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> has been disposed of.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="68e4d-143"><paramref name="value" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="68e4d-143"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="68e4d-144">Cette propriété a déjà été définie.</span><span class="sxs-lookup"><span data-stu-id="68e4d-144">This property has already been set.</span></span>  
  
 <span data-ttu-id="68e4d-145">- ou -</span><span class="sxs-lookup"><span data-stu-id="68e4d-145">-or-</span></span>  
  
 <span data-ttu-id="68e4d-146">Les méthodes sur l'objet <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> ont déjà été accédées.</span><span class="sxs-lookup"><span data-stu-id="68e4d-146">The methods on the <see cref="T:System.ComponentModel.Composition.Hosting.CatalogExportProvider" /> object have already been accessed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>