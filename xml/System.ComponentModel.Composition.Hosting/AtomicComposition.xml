<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AtomicComposition.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac505902feb35fb74188b0dffcbf4bb49118dabdddb.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05902feb35fb74188b0dffcbf4bb49118dabdddb</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Hosting.AtomicComposition">
          <source>Represents a single composition operation for transactional composition.</source>
          <target state="translated">Représente une opération de composition unique pour la composition transactionnelle.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.AtomicComposition">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Ce type implémente le <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.AtomicComposition">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Lorsque vous avez fini d’utiliser le type, vous devez la supprimer directement ou indirectement.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.AtomicComposition">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Pour supprimer le type directement, vous devez appeler sa <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> méthode dans un <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> bloc.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.AtomicComposition">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Pour la supprimer indirectement, utiliser une construction de langage telles que <ph id="ph1">`using`</ph> (en c#) ou <ph id="ph2">`Using`</ph> (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ComponentModel.Composition.Hosting.AtomicComposition">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Pour plus d’informations, consultez la section « Utilisant un objet qui implémente IDisposable » dans la <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> rubrique de l’interface.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Hosting.AtomicComposition">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor(System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <source>The parent of this composition operation.</source>
          <target state="translated">Parent de cette opération de composition.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.#ctor(System.ComponentModel.Composition.Hosting.AtomicComposition)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" /&gt;</ph> class with the specified parent <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" /&gt;</ph>.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" /&gt;</ph> avec le <ph id="ph2">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" /&gt;</ph> parent spécifié.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.AddCompleteAction(System.Action)">
          <source>The action to be executed.</source>
          <target state="translated">Action à exécuter.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.AddCompleteAction(System.Action)">
          <source>Adds an action to be executed when the overall composition operation completes successfully.</source>
          <target state="translated">Ajoute une action à exécuter lorsque l'opération de composition globale se termine avec succès.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.AddRevertAction(System.Action)">
          <source>The action to be executed.</source>
          <target state="translated">Action à exécuter.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.AddRevertAction(System.Action)">
          <source>Adds an action to be executed if the overall composition operation fails.</source>
          <target state="translated">Ajoute une action à exécuter si l'opération de composition globale échoue.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Complete">
          <source>Marks this composition operation as complete.</source>
          <target state="translated">Marque cette opération de composition comme terminée.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Complete">
          <source>If this <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;</ph> is nested, completion actions will not be executed until the parent composition operation has also completed.</source>
          <target state="translated">Si cette <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;</ph> est imbriqué, achèvement actions ne seront pas exécutées jusqu'à ce que l’opération de composition parent a également été effectuée.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Hosting.AtomicComposition">
          <source>Releases the resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" /&gt;</ph>, and mark this composition operation as failed.</source>
          <target state="translated">Libère les ressources utilisées par <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" /&gt;</ph> et marque cette opération de composition comme non réussie.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" /&gt;</ph> class, and mark this composition operation as failed.</source>
          <target state="translated">Libère toutes les ressources utilisées par l'instance actuelle de la classe <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" /&gt;</ph> et marque cette opération de composition comme non réussie.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;</ph>.</source>
          <target state="translated">Appelez la méthode <ph id="ph1">`Dispose`</ph> une fois que vous avez terminé d'utiliser <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;</ph> in an unusable state.</source>
          <target state="translated">La méthode <ph id="ph1">`Dispose`</ph> rend le <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;</ph> inutilisable.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;</ph> was occupying.</source>
          <target state="translated">Après avoir appelé <ph id="ph1">`Dispose`</ph>, vous devez libérer toutes les références à la <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;</ph> pour que le garbage collector puisse récupérer la mémoire qui le <ph id="ph3">&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;</ph> occupée.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>de nettoyage des ressources non managées<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> et <bpt id="p2">[</bpt>implémentant une méthode de suppression<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;</ph>.</source>
          <target state="translated">Appelez toujours <ph id="ph1">`Dispose`</ph> avant de libérer votre dernière référence à <ph id="ph2">&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <ph id="ph1">&lt;xref:System.ComponentModel.Composition.Hosting.AtomicComposition&gt;</ph> de l'objet <ph id="ph2">`Finalize`</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour libérer les ressources managées et non managées ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour ne libérer que les ressources non managées.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Libère les ressources non managées utilisées par <ph id="ph1">&lt;see cref="T:System.ComponentModel.Composition.Hosting.AtomicComposition" /&gt;</ph> et libère éventuellement les ressources managées.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)">
          <source>The key to save.</source>
          <target state="translated">Clé à enregistrer.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)">
          <source>The value to save.</source>
          <target state="translated">Valeur à enregistrer.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)">
          <source>Saves a key-value pair in the transaction to track tentative state.</source>
          <target state="translated">Enregistre une paire clé-valeur dans la transaction pour assurer le suivi de l'état provisoire.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="T:System.ComponentModel.Composition.Hosting.AtomicComposition">
          <source>Gets a value saved by the <ph id="ph1">&lt;see cref="M:System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Obtient une valeur enregistrée par la méthode <ph id="ph1">&lt;see cref="M:System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,``0@)">
          <source>The type of the value to be retrieved.</source>
          <target state="translated">Type de la valeur à récupérer.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,``0@)">
          <source>The key to retrieve from.</source>
          <target state="translated">Clé à partir de laquelle récupérer.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,``0@)">
          <source>The retrieved value.</source>
          <target state="translated">Valeur récupérée.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,``0@)">
          <source>Gets a value saved by the <ph id="ph1">&lt;see cref="M:System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Obtient une valeur enregistrée par la méthode <ph id="ph1">&lt;see cref="M:System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,``0@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value was successfully retrieved; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la valeur a été correctement récupérée ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,System.Boolean,``0@)">
          <source>The type of the value to be retrieved.</source>
          <target state="translated">Type de la valeur à récupérer.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,System.Boolean,``0@)">
          <source>The key to retrieve from.</source>
          <target state="translated">Clé à partir de laquelle récupérer.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,System.Boolean,``0@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to exclude parent transactions; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour exclure des transactions parent ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,System.Boolean,``0@)">
          <source>The retrieved value.</source>
          <target state="translated">Valeur récupérée.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,System.Boolean,``0@)">
          <source>Gets a value saved by the <ph id="ph1">&lt;see cref="M:System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)" /&gt;</ph> method, with the option of not searching parent transactions.</source>
          <target state="translated">Obtient une valeur enregistrée par la méthode <ph id="ph1">&lt;see cref="M:System.ComponentModel.Composition.Hosting.AtomicComposition.SetValue(System.Object,System.Object)" /&gt;</ph>, avec la possibilité de ne pas rechercher de transactions parent.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ComponentModel.Composition.Hosting.AtomicComposition.TryGetValue``1(System.Object,System.Boolean,``0@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value was successfully retrieved; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la valeur a été correctement récupérée ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>