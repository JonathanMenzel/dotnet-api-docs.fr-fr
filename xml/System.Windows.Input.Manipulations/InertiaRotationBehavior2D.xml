<Type Name="InertiaRotationBehavior2D" FullName="System.Windows.Input.Manipulations.InertiaRotationBehavior2D">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e736f1ccb83244055ed4d7f272122c90a650f069" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39949274" /></Metadata><TypeSignature Language="C#" Value="public sealed class InertiaRotationBehavior2D : System.Windows.Input.Manipulations.InertiaParameters2D" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit InertiaRotationBehavior2D extends System.Windows.Input.Manipulations.InertiaParameters2D" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Manipulations.InertiaRotationBehavior2D" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InertiaRotationBehavior2D&#xA;Inherits InertiaParameters2D" />
  <TypeSignature Language="C++ CLI" Value="public ref class InertiaRotationBehavior2D sealed : System::Windows::Input::Manipulations::InertiaParameters2D" />
  <TypeSignature Language="F#" Value="type InertiaRotationBehavior2D = class&#xA;    inherit InertiaParameters2D" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.Manipulations.InertiaParameters2D</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d036b-101">Décrit le comportement de rotation souhaité d'un processeur d'inertie.</span><span class="sxs-lookup"><span data-stu-id="d036b-101">Describes desired rotation behavior of an inertia processor.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InertiaRotationBehavior2D ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InertiaRotationBehavior2D();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d036b-102">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Input.Manipulations.InertiaRotationBehavior2D" />.</span><span class="sxs-lookup"><span data-stu-id="d036b-102">Initializes a new instance of the <see cref="T:System.Windows.Input.Manipulations.InertiaRotationBehavior2D" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredDeceleration">
      <MemberSignature Language="C#" Value="public float DesiredDeceleration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 DesiredDeceleration" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration" />
      <MemberSignature Language="VB.NET" Value="Public Property DesiredDeceleration As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float DesiredDeceleration { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.DesiredDeceleration : single with get, set" Usage="System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d036b-103">Obtient ou définit la décélération angulaire souhaitée, en radians par milliseconde au carré.</span><span class="sxs-lookup"><span data-stu-id="d036b-103">Gets or sets the desired angular deceleration, in radians per millisecond squared.</span></span></summary>
        <value><span data-ttu-id="d036b-104">Décélération angulaire souhaitée, en radians par milliseconde au carré.</span><span class="sxs-lookup"><span data-stu-id="d036b-104">The desired angular deceleration, in radians per millisecond squared.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d036b-105">Cette propriété représente la décélération angulaire souhaitée à utiliser lors de l’opération de l’inertie.</span><span class="sxs-lookup"><span data-stu-id="d036b-105">This property represents the desired angular deceleration to be used during the inertia operation.</span></span> <span data-ttu-id="d036b-106">Cette valeur de propriété est mutuellement exclusive avec le <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> propriété ; cette propriété la valeur de paramètre <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> à `NaN`.</span><span class="sxs-lookup"><span data-stu-id="d036b-106">This property value is mutually exclusive with the <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> property; setting this property will set <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> to `NaN`.</span></span> <span data-ttu-id="d036b-107">La valeur par défaut pour cette propriété et <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> est `NaN`.</span><span class="sxs-lookup"><span data-stu-id="d036b-107">The default value for both this property and <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> is `NaN`.</span></span> <span data-ttu-id="d036b-108">Vous devez définir une ou l’autre propriété avant le début du traitement de l’inertie.</span><span class="sxs-lookup"><span data-stu-id="d036b-108">You must set one or the other property before inertia processing starts.</span></span>  
  
 <span data-ttu-id="d036b-109"><xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration%2A> doit être un nombre fini, non négatif.</span><span class="sxs-lookup"><span data-stu-id="d036b-109"><xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration%2A> must be a finite, non-negative number.</span></span>  
  
 <span data-ttu-id="d036b-110">Cette propriété ne peut pas être définie pendant l’exécution le processeur d’inertie. Sinon, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="d036b-110">This property cannot be set while the inertia processor is running; otherwise, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesiredRotation">
      <MemberSignature Language="C#" Value="public float DesiredRotation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 DesiredRotation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation" />
      <MemberSignature Language="VB.NET" Value="Public Property DesiredRotation As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float DesiredRotation { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.DesiredRotation : single with get, set" Usage="System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d036b-111">Obtient ou définit la rotation souhaitée, en radians.</span><span class="sxs-lookup"><span data-stu-id="d036b-111">Gets or sets the desired rotation, in radians.</span></span></summary>
        <value><span data-ttu-id="d036b-112">Rotation souhaitée, en radians.</span><span class="sxs-lookup"><span data-stu-id="d036b-112">The desired rotation, in radians.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d036b-113">Cette propriété représente la rotation de fin souhaitée de l’opération de l’inertie.</span><span class="sxs-lookup"><span data-stu-id="d036b-113">This property represents the desired ending rotation of the inertia operation.</span></span> <span data-ttu-id="d036b-114">Cette valeur de propriété est mutuellement exclusive avec le <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration%2A> propriété ; cette propriété la valeur de paramètre <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration%2A> à `NaN`.</span><span class="sxs-lookup"><span data-stu-id="d036b-114">This property value is mutually exclusive with the <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration%2A> property; setting this property will set <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration%2A> to `NaN`.</span></span> <span data-ttu-id="d036b-115">La valeur par défaut pour cette propriété et <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration%2A> est `NaN`.</span><span class="sxs-lookup"><span data-stu-id="d036b-115">The default value for both this property and <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredDeceleration%2A> is `NaN`.</span></span> <span data-ttu-id="d036b-116">Vous devez définir une ou l’autre propriété avant le début du traitement de l’inertie.</span><span class="sxs-lookup"><span data-stu-id="d036b-116">You must set one or the other property before inertia processing starts.</span></span>  
  
 <span data-ttu-id="d036b-117"><xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> doit être un nombre fini, non négatif.</span><span class="sxs-lookup"><span data-stu-id="d036b-117"><xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> must be a finite, non-negative number.</span></span> <span data-ttu-id="d036b-118">La direction de rotation est déterminée par le <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.InitialVelocity%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="d036b-118">The direction of rotation is determined by the <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.InitialVelocity%2A> property.</span></span>  
  
 <span data-ttu-id="d036b-119">Cette propriété ne peut pas être définie pendant l’exécution le processeur d’inertie. Sinon, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="d036b-119">This property cannot be set while the inertia processor is running; otherwise, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d036b-120">Dans l’exemple suivant, le <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> propriété est définie pour permettre le traitement de l’inertie pivoter un objet trois-et-1,5 fois à partir de son orientation initiale.</span><span class="sxs-lookup"><span data-stu-id="d036b-120">In the following example, the <xref:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.DesiredRotation%2A> property is set to enable inertia processing to rotate an object three-and-one-half times from its starting orientation.</span></span>  
  
 [!code-csharp[ManipulationAPI#_ManipulationItem_SetDesiredRotation](~/samples/snippets/csharp/VS_Snippets_Misc/manipulationapi/cs/manipulationitem.xaml.cs#_manipulationitem_setdesiredrotation)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitialVelocity">
      <MemberSignature Language="C#" Value="public float InitialVelocity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 InitialVelocity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Manipulations.InertiaRotationBehavior2D.InitialVelocity" />
      <MemberSignature Language="VB.NET" Value="Public Property InitialVelocity As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float InitialVelocity { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.InitialVelocity : single with get, set" Usage="System.Windows.Input.Manipulations.InertiaRotationBehavior2D.InitialVelocity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Input.Manipulations</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d036b-121">Obtient ou définit la rapidité rotationnelle initiale, en radians par milliseconde.</span><span class="sxs-lookup"><span data-stu-id="d036b-121">Gets or sets the initial rotational velocity, in radians per millisecond.</span></span></summary>
        <value><span data-ttu-id="d036b-122">Rapidité rotationnelle initiale, en radians par milliseconde.</span><span class="sxs-lookup"><span data-stu-id="d036b-122">The initial rotational velocity, in radians per millisecond.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d036b-123">La valeur par défaut de cette propriété est `NaN`.</span><span class="sxs-lookup"><span data-stu-id="d036b-123">The default value for this property is `NaN`.</span></span> <span data-ttu-id="d036b-124">Laisser cette propriété inchangée à partir de la valeur par défaut ou la définition de cette propriété sur zéro (0) désactivera l’inertie rotative.</span><span class="sxs-lookup"><span data-stu-id="d036b-124">Leaving this property unchanged from the default or setting this property to zero (0) will disable rotational inertia.</span></span>  
  
 <span data-ttu-id="d036b-125">Cette propriété ne peut pas être définie pendant l’exécution le processeur d’inertie. Sinon, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="d036b-125">This property cannot be set while the inertia processor is running; otherwise, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>