<Type Name="NavigationService" FullName="System.Windows.Navigation.NavigationService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7d42838efdb2bbc0d33536a4a174c313d0881ac2" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37495285" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class NavigationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NavigationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Navigation.NavigationService" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NavigationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class NavigationService sealed" />
  <TypeSignature Language="F#" Value="type NavigationService = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Contains methods, properties, and events to support navigation.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService> encapsule la possibilité de télécharger le contenu dans le contexte d’une navigation de style navigateur.  
  
 Le contenu peut être n’importe quel type d’objet .NET Framework et les fichiers HTML. En général, toutefois, les pages sont la méthode favorite comme moyen de contenu du package pour la navigation (voir <xref:System.Windows.Controls.Page>).  
  
 Contenu accessibles par navigation en fournissant une instance d’un objet et en appelant une surcharge de la <xref:System.Windows.Navigation.NavigationService.Navigate%2A> méthode qui accepte un objet :  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%2CSystem.Object%29?displayProperty=nameWithType>  
  
 Vous pouvez également contenu accessibles par navigation en passant un URI absolu ou relatif à un de la <xref:System.Windows.Navigation.NavigationService.Navigate%2A> surcharges de méthode qui accepte un URI :  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%2CSystem.Boolean%29?displayProperty=nameWithType>  
  
 Lorsque le contenu est cible de la navigation par URI, <xref:System.Windows.Navigation.NavigationService> retournera un objet qui contient le contenu.  
  
 La durée de vie d’une navigation peut être suivie avec les événements suivants :  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigated>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationProgress>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationFailed>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationStopped>  
  
-   <xref:System.Windows.Navigation.NavigationService.LoadCompleted>  
  
-   <xref:System.Windows.Navigation.NavigationService.FragmentNavigation>.  
  
 Pas tous les événements sont déclenchés chaque fois qu’une navigation se produit ; le jeu d’événements qui sont déclenchés est déterminé par le type de navigation qui se produit (contenu ou fragment de contenu) et comment le volet de navigation se termine (annulée, arrêté ou échoué).  
  
 L’exemple suivant illustre l’ordre dans lequel ces événements sont déclenchés :  
  
 ![Diagramme de flux de navigation de page](~/add/media/navigationoverviewfigure11.png "organigramme de navigation de Page")  
  
 Pendant ou après une navigation, <xref:System.Windows.Navigation.NavigationService> fournit des informations sur le contenu cible de la navigation, y compris l’URI du contenu cible de la navigation (<xref:System.Windows.Navigation.NavigationService.Source%2A>), l’URI du contenu actuel (<xref:System.Windows.Navigation.NavigationService.CurrentSource%2A>) et un objet qui contienne le contenu qui a été atteinte (<xref:System.Windows.Navigation.NavigationService.Content%2A>).  
  
 Lorsque le contenu est cible de navigation, <xref:System.Windows.Navigation.NavigationService> enregistre la navigation en tant qu’entrée dans l’historique de navigation. Une entrée est ajoutée à le pour historique de navigation arrière lorsqu’une nouvelle navigation se produit, en appelant le <xref:System.Windows.Navigation.NavigationService.Navigate%2A> (méthode), ou en accédant à une entrée dans l’historique de navigation, en appelant <xref:System.Windows.Navigation.NavigationService.GoForward%2A>. Une entrée est ajoutée à l’historique de navigation en accédant à une entrée à l’arrière de l’historique de navigation, en appelant <xref:System.Windows.Navigation.NavigationService.GoBack%2A>. <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> et <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> signaler s’il y a des entrées en arrière et l’historique de navigation, respectivement. En outre, l’entrée la plus récente à l’arrière l’historique de navigation peut être supprimé en appelant <xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A>.  
  
 Par défaut, <xref:System.Windows.Navigation.NavigationService> ne stocke pas d’une instance d’un objet contenu dans l’historique de navigation. Au lieu de cela, <xref:System.Windows.Navigation.NavigationService> crée une nouvelle instance de l’objet de contenu chaque fois qu’il est faite par le biais de l’historique de navigation. Ce comportement est conçu pour éviter la consommation de mémoire excessive lorsque de nombreux et grands fragments de contenu sont cible de la navigation. Par conséquent, l’état du contenu n’est pas retenu d’une navigation à l’autre. Toutefois, WPF fournit plusieurs techniques par lequel vous pouvez stocker un morceau d’état pour un élément de contenu dans l’historique de navigation.  
  
 À l’aide de <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>, vous pouvez également retenir plusieurs ensembles d’états pour une instance de page unique.  
  
 <xref:System.Windows.Navigation.NavigationService> est un `sealed` classe et par conséquent ne peut pas être instanciée ; au lieu de cela, <xref:System.Windows.Navigation.NavigationService> est utilisé par les navigateurs pour activer la navigation. Dans WPF, il existe deux navigateurs : <xref:System.Windows.Navigation.NavigationWindow> et <xref:System.Windows.Controls.Frame>.  
  
 Visuellement, [!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)] utiliser [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] comme un navigateur, pour fournir une expérience utilisateur intégrée. Physiquement, toutefois, [!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)] réellement utiliser <xref:System.Windows.Navigation.NavigationWindow> en tant que le navigateur ; le <xref:System.Windows.Application.MainWindow%2A> propriété d’un [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)] en cours d’exécution [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] renvoie une référence à la <xref:System.Windows.Navigation.NavigationWindow>et l’historique de navigation qui est géré par le <xref:System.Windows.Navigation.NavigationWindow> est intégré à l’historique de navigation qui est géré par [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] comme suit :  
  
-   Lorsque le navigateur accède au contenu en appelant <xref:System.Windows.Navigation.NavigationService.Navigate%2A>, <xref:System.Windows.Navigation.NavigationService.GoBack%2A>, et <xref:System.Windows.Navigation.NavigationService.GoForward%2A> depuis un [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)] les entrées d’historique de navigation pertinentes sont également ajoutées à [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] l’historique de navigation.  
  
-   Lorsque entrées dans le [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] navigation [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] sont sélectionnés, [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] provoque <xref:System.Windows.Navigation.NavigationService> atteindre arrière ou en avant le contenu associé à ces entrées.  
  
> [!NOTE]
>  Un <xref:System.Windows.Controls.Frame> peut fournir son propre historique de navigation, ou utiliser l’historique de navigation du navigateur qui l’héberge. Si <xref:System.Windows.Controls.Frame> fournit son propre historique de navigation, il peut afficher son propre navigation [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] pour naviguer dans les entrées dans l’historique de navigation ; ces entrées ne sont pas ajoutées à l’historique de navigation du navigateur hôte (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>, [!INCLUDE[TLA2#tla_iegeneric](~/includes/tla2sharptla-iegeneric-md.md)]) et, par conséquent, ne peut pas être accédé à partir de la barre de navigation [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] de chacun d’eux (voir <xref:System.Windows.Controls.Frame.JournalOwnership%2A>).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBackEntry">
      <MemberSignature Language="C#" Value="public void AddBackEntry (System.Windows.Navigation.CustomContentState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBackEntry(class System.Windows.Navigation.CustomContentState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBackEntry (state As CustomContentState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBackEntry(System::Windows::Navigation::CustomContentState ^ state);" />
      <MemberSignature Language="F#" Value="member this.AddBackEntry : System.Windows.Navigation.CustomContentState -&gt; unit" Usage="navigationService.AddBackEntry state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Navigation.CustomContentState" />
      </Parameters>
      <Docs>
        <param name="state">A <see cref="T:System.Windows.Navigation.CustomContentState" /> object that represents application-defined state that is associated with a specific piece of content.</param>
        <summary>Adds an entry to back navigation history that contains a <see cref="T:System.Windows.Navigation.CustomContentState" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>, <xref:System.Windows.Navigation.CustomContentState>, et <xref:System.Windows.Navigation.IProvideCustomContentState> sont utilisés pour aider à mémoriser plusieurs jeux d’état pour le contenu actuel.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="state" /> is <see langword="null" />, and a <see cref="T:System.Windows.Navigation.CustomContentState" /> object isn't returned from <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" />.</exception>
        <altmember cref="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
      </Docs>
    </Member>
    <Member MemberName="CanGoBack">
      <MemberSignature Language="C#" Value="public bool CanGoBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CanGoBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoBack { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoBack : bool" Usage="System.Windows.Navigation.NavigationService.CanGoBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether there is at least one entry in back navigation history.</summary>
        <value>
          <see langword="true" /> s’il existe au moins une entrée dans l’historique de navigation arrière ; Sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> pour déterminer s’il existe au moins une entrée dans l’historique de navigation arrière. Cette propriété doit être évaluée avant d’appeler <xref:System.Windows.Navigation.NavigationService.GoBack%2A>; si <xref:System.Windows.Navigation.NavigationService.GoBack%2A> est appelée et il y a aucune entrée dans l’historique de navigation arrière, un <xref:System.InvalidOperationException> est levée.  
  
> [!NOTE]
>  que si l’historique de navigation est partagé par plusieurs navigateurs (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>), le meilleur entrée récente arrière l’historique de navigation ont ne peut-être pas été ajouté par le <xref:System.Windows.Navigation.NavigationService> pour le navigateur actuel.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoForward" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForward">
      <MemberSignature Language="C#" Value="public bool CanGoForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CanGoForward" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoForward As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoForward { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanGoForward : bool" Usage="System.Windows.Navigation.NavigationService.CanGoForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value that indicates whether there is at least one entry in forward navigation history.</summary>
        <value>
          <see langword="true" /> s’il existe au moins une entrée dans l’historique de navigation ; Sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> pour déterminer s’il existe au moins une entrée dans l’historique de navigation. Cette propriété doit être évaluée avant d’appeler <xref:System.Windows.Navigation.NavigationService.GoForward%2A>; si <xref:System.Windows.Navigation.NavigationService.GoForward%2A> est appelée et il y a aucune entrée dans l’historique de navigation, un <xref:System.InvalidOperationException> est levée.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoBack" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public object Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Content" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Content { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Content : obj with get, set" Usage="System.Windows.Navigation.NavigationService.Content" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a reference to the object that contains the current content.</summary>
        <value>Objet qui est une référence à l’objet qui contient le contenu actuel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Contenu peut être défini de deux manières :  
  
-   Directement, en lui affectant une référence à un objet.  
  
-   Indirectement, en appelant <xref:System.Windows.Navigation.NavigationService.Navigate%2A>, <xref:System.Windows.Navigation.NavigationService.GoBack%2A>, ou <xref:System.Windows.Navigation.NavigationService.GoForward%2A>.  
  
 Paramètre <xref:System.Windows.Navigation.NavigationService> lance une nouvelle navigation ; étant donné que la navigation est asynchrone, <xref:System.Windows.Navigation.NavigationService.Content%2A> ne retourne pas une valeur s’il est examiné immédiatement après avoir été défini.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Navigation.NavigationService.Navigate" />
      </Docs>
    </Member>
    <Member MemberName="CurrentSource">
      <MemberSignature Language="C#" Value="public Uri CurrentSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CurrentSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CurrentSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentSource As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ CurrentSource { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentSource : Uri" Usage="System.Windows.Navigation.NavigationService.CurrentSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the URI of the content that was last navigated to.</summary>
        <value>Un <see cref="T:System.Uri" /> pour le contenu cible de la dernière navigation, si navigué à l’aide d’un URI ; sinon, <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de la <xref:System.Windows.Navigation.NavigationService.CurrentSource%2A> propriété n’est pas modifiée jusqu'à ce que la navigation vers un autre URI est bien terminée.  
  
 <xref:System.Windows.Navigation.NavigationService.CurrentSource%2A> peut être défini avec un URI de fragments uniquement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FragmentNavigation">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FragmentNavigation As FragmentNavigationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::FragmentNavigationEventHandler ^ FragmentNavigation;" />
      <MemberSignature Language="F#" Value="member this.FragmentNavigation : System.Windows.Navigation.FragmentNavigationEventHandler " Usage="member this.FragmentNavigation : System.Windows.Navigation.FragmentNavigationEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.FragmentNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when navigation to a content fragment begins, which occurs immediately, if the desired fragment is in the current content, or after the source [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] content has been loaded, if the desired fragment is in different content.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, un fragment de contenu est contenu qui est contenue par une nommée <xref:System.Windows.UIElement>, qui est un <xref:System.Windows.UIElement> dont <xref:System.Windows.FrameworkElement.Name%2A> attribut est défini, par exemple :  
  
```  
<TextBlock Name="FragmentName">...</TextBlock>  
```  
  
 Vous accédez à un [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] fragment en fournissant un URI avec un suffixe au format suivant :  
  
 \#*FragmentName*  
  
 Voici un exemple d’un URI qui fait référence à un fragment de contenu :  
  
 `http://www.microsoft.com/targetpage.xaml#FragmentName`  
  
 Après que la page source (après <xref:System.Windows.Navigation.NavigationService.LoadCompleted> événement est déclenché), navigation de fragment commence et le <xref:System.Windows.Navigation.NavigationService> tente de localiser le [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] fragment. Si le [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] fragment est trouvé, <xref:System.Windows.Navigation.NavigationService> indique au navigateur de contenu (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) pour afficher le fragment. Si vous avez besoin modifier ce comportement, vous pouvez gérer <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> pour fournir votre propre comportement de navigation. <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> est passé un <xref:System.Windows.Navigation.FragmentNavigationEventArgs> paramètre qui expose les propriétés qui sont utiles à cet effet, y compris :  
  
-   Le navigateur auquel appartient ce service de navigation (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
-   Le nom du fragment.  
  
 Vous pouvez gérer <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> pour remplacer l’implémentation de fragment WPF par défaut par votre propre implémentation personnalisée. Si vous procédez ainsi, vous devez définir <xref:System.Windows.Navigation.FragmentNavigationEventArgs.Handled%2A> à `true`; sinon, le fragment WPF par défaut comportement de traitement est appliqué.  
  
 Vous devez éviter d’initialiser directement la navigation à partir d’un <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> Gestionnaire d’événements. Dans la mesure où <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> est déclenché pendant une navigation existante, lancer une nouvelle navigation à partir d’un <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> Gestionnaire d’événements crée une navigation imbriquée qui peut provoquer le <xref:System.ExecutionEngineException> levée. Au lieu de cela, vous pouvez initialiser indirectement la navigation en créant un travail asynchrone en utilisant le <xref:System.Windows.Threading.Dispatcher>.  
  
> [!NOTE]
>  Lorsque <xref:System.Windows.Navigation.NavigationService> déclenche <xref:System.Windows.Navigation.NavigationService.FragmentNavigation>, elle déclenche également <xref:System.Windows.Application.FragmentNavigation?displayProperty=nameWithType> événement sur le <xref:System.Windows.Application> objet.  
  
> [!IMPORTANT]
>  Navigation vers un fragment n'est pas pris en charge pour élargir [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] pages (balisage [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] fichiers avec `Page` comme élément racine) dans les cas suivants :  
>   
>  • Lors de la navigation vers un fragment dans libre [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] page.  
>   
>  • Lors de la navigation à partir d’un libre [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] page à un fragment dans une autre libre [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] page.  
>   
>  Toutefois, une faible [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] page peut naviguer vers ses propres fragments.  
  
   
  
## Examples  
 L’exemple suivant montre comment gérer <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> pour fournir le comportement de navigation personnalisés. Dans ce cas, l’exemple ouvre une erreur [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] page si le fragment dans la source [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] page est introuvable.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowfragmentnavigationcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowfragmentnavigationcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="GetNavigationService">
      <MemberSignature Language="C#" Value="public static System.Windows.Navigation.NavigationService GetNavigationService (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Navigation.NavigationService GetNavigationService(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Navigation::NavigationService ^ GetNavigationService(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberSignature Language="F#" Value="static member GetNavigationService : System.Windows.DependencyObject -&gt; System.Windows.Navigation.NavigationService" Usage="System.Windows.Navigation.NavigationService.GetNavigationService dependencyObject" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationService</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">The <see cref="T:System.Windows.DependencyObject" /> in content that is hosted by a navigator.</param>
        <summary>Gets a reference to the <see cref="T:System.Windows.Navigation.NavigationService" /> for the navigator whose content contains the specified <see cref="T:System.Windows.DependencyObject" />.</summary>
        <returns>A reference to the <see cref="T:System.Windows.Navigation.NavigationService" /> for the navigator whose content contains the specified <see cref="T:System.Windows.DependencyObject" />; can be <see langword="null" /> in some cases.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un navigateur a un <xref:System.Windows.Navigation.NavigationService> qui gère la navigation de contenu. WPF dispose de deux navigateurs : <xref:System.Windows.Navigation.NavigationWindow> et <xref:System.Windows.Controls.Frame>. Pour traiter les demandes de navigation et de gérer la durée de vie de navigation, un navigateur utilise le service de navigation de WPF, qui est implémenté en tant que la <xref:System.Windows.Navigation.NavigationService> classe. Contenu qui est hébergé par un navigateur peut obtenir une référence à du navigateur <xref:System.Windows.Navigation.NavigationService> en appelant le <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A> (méthode).  
  
 <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A> Retourne `null` lorsque le `dependencyObject`:  
  
-   Est un <xref:System.Windows.Navigation.NavigationWindow>.  
  
-   Est un <xref:System.Windows.Controls.Frame> qui :  
  
    1.  Hébergé par un autre navigateur.  
  
    2.  A son <xref:System.Windows.Controls.Frame.JournalOwnership%2A> propriété définie sur <xref:System.Windows.Navigation.JournalOwnership.UsesParentJournal>.  
  
-   Ne fait pas partie du contenu qui est hébergé par un navigateur.  
  
 WPF offre deux raccourcis pour acquérir une référence à la <xref:System.Windows.Navigation.NavigationService>:  
  
-   Le <xref:System.Windows.Navigation.NavigationService> qui a traité la navigation vers un <xref:System.Windows.Controls.Page> sont accessibles à partir de la <xref:System.Windows.Controls.Page> lui-même en obtenant la valeur de son <xref:System.Windows.Controls.Page.NavigationService%2A?displayProperty=nameWithType> propriété.  
  
-   Le <xref:System.Windows.Navigation.NavigationService> qui est utilisé par un <xref:System.Windows.Controls.Frame> pour traiter la navigation est accessible en obtenant la valeur de la <xref:System.Windows.Controls.Frame.NavigationService%2A> propriété.  
  
   
  
## Examples  
 L’exemple suivant montre comment un <xref:System.Windows.Controls.UserControl> peut récupérer un service de navigation en appelant <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A>.  
  
 [!code-csharp[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/CSharp/ContentUserControl.xaml.cs#getnavigationservicecode1)]
 [!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/visualbasic/contentusercontrol.xaml.vb#getnavigationservicecode1)]  
[!code-csharp[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/CSharp/ContentUserControl.xaml.cs#getnavigationservicecode2)]
[!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/visualbasic/contentusercontrol.xaml.vb#getnavigationservicecode2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="dependencyObject" /> parameter is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GoBack">
      <MemberSignature Language="C#" Value="public void GoBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GoBack" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoBack ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoBack();" />
      <MemberSignature Language="F#" Value="member this.GoBack : unit -&gt; unit" Usage="navigationService.GoBack " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Navigates to the most recent entry in back navigation history, if there is one.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Avant d’appeler <xref:System.Windows.Navigation.NavigationService.GoBack%2A>, le <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> propriété peut être inspectée pour déterminer s’il existe des entrées dans l’historique de navigation arrière.  
  
   
  
## Examples  
 L’exemple suivant accède à l’entrée la plus récente en retour l’historique de navigation, s’il en existe.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowBackCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowbackcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowBackCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowbackcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Windows.Navigation.NavigationService.GoBack" /> is called when there are no entries in back navigation history.</exception>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoForward" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="GoForward">
      <MemberSignature Language="C#" Value="public void GoForward ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoForward() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GoForward" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoForward ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoForward();" />
      <MemberSignature Language="F#" Value="member this.GoForward : unit -&gt; unit" Usage="navigationService.GoForward " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Navigate to the most recent entry in forward navigation history, if there is one.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Avant d’appeler <xref:System.Windows.Navigation.NavigationService.GoForward%2A>, le <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> propriété peut être inspectée pour déterminer s’il existe des entrées dans l’historique de navigation.  
  
   
  
## Examples  
 L’exemple suivant accède à l’entrée la plus récente dans l’historique de navigation, s’il en existe.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowForwardCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowforwardcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowForwardCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowforwardcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Windows.Navigation.NavigationService.GoForward" /> is called when there are no entries in forward navigation history.</exception>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoBack" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoadCompleted As LoadCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::LoadCompletedEventHandler ^ LoadCompleted;" />
      <MemberSignature Language="F#" Value="member this.LoadCompleted : System.Windows.Navigation.LoadCompletedEventHandler " Usage="member this.LoadCompleted : System.Windows.Navigation.LoadCompletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.LoadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when content that was navigated to has been loaded, parsed, and has begun rendering.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous gérez <xref:System.Windows.Navigation.NavigationService.LoadCompleted> si vous avez besoin découvrir des informations pertinentes concernant la requête de navigation à l’achèvement de la charge. Ces informations sont disponibles à partir de la <xref:System.Windows.Navigation.NavigationEventArgs> objet qui est passé à la <xref:System.Windows.Navigation.NavigationService.LoadCompleted> Gestionnaire d’événements et inclut :  
  
-   Le contenu et son URI.  
  
-   Le navigateur (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
-   Données supplémentaires, si la navigation a été lancée en appelant <xref:System.Windows.Navigation.NavigationService.Navigate%2A> ou <xref:System.Windows.Navigation.NavigationService.Navigate%2A>.  
  
-   Détails de la réponse (à l’aide un <xref:System.Net.WebResponse> objet).  
  
 <xref:System.Windows.Navigation.NavigationService.LoadCompleted> n’est pas déclenché lorsque la page source est introuvable ou chargée, auquel cas <xref:System.Windows.Navigation.NavigationService.NavigationFailed> est déclenché.  
  
> [!NOTE]
>  Lorsque <xref:System.Windows.Navigation.NavigationService> déclenche <xref:System.Windows.Navigation.NavigationService.LoadCompleted>, elle déclenche également <xref:System.Windows.Application.LoadCompleted?displayProperty=nameWithType> événement sur le <xref:System.Windows.Application> objet.  
  
   
  
## Examples  
 L’exemple suivant montre comment gérer <xref:System.Windows.Navigation.NavigationService.LoadCompleted>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowloadcompletedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowloadcompletedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Navigate asynchronously to the specified source content.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(object root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (root As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(System::Object ^ root);" />
      <MemberSignature Language="F#" Value="member this.Navigate : obj -&gt; bool" Usage="navigationService.Navigate root" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="root">An object that contains the content to navigate to.</param>
        <summary>Navigate asynchronously to content that is contained by an object.</summary>
        <returns>
          <see langword="true" /> if a navigation is not canceled; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.Navigate%2A> Permet d’accéder à la <xref:System.Object> spécifié par `root` si les conditions suivantes sont remplies :  
  
-   Le <xref:System.Windows.Navigation.NavigationService.Navigating> événement n’est pas annulé.  
  
-   Une requête web (consultez <xref:System.Windows.Navigation.NavigationService.Navigating>) peuvent être créés.  
  
 Si `root` est `null`, le contenu existant (<xref:System.Windows.Navigation.NavigationService.Content%2A>) est désactivée.  
  
> [!NOTE]
>  Lors du téléchargement de contenu Web, vous pouvez recevoir une exception Web (par exemple, 404 : fichier introuvable). Vous pouvez gérer ces exceptions à partir de <xref:System.Windows.Navigation.NavigationService.NavigationFailed>.  
  
   
  
## Examples  
 L’exemple suivant montre comment naviguer vers un <xref:System.Windows.Controls.Page> objet contenant l’arborescence de contenu source.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigateobjectcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigateobjectcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri -&gt; bool" Usage="navigationService.Navigate source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.Uri" /> object initialized with the URI for the desired content.</param>
        <summary>Navigate asynchronously to content that is specified by a URI.</summary>
        <returns>
          <see langword="true" /> if a navigation is not canceled; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de `source` peut être un site Web [!INCLUDE[TLA#tla_url](~/includes/tlasharptla-url-md.md)] ou un URI à en-tête pack valide (consultez [URI à en-tête Pack dans WPF](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md)).  
  
 <xref:System.Windows.Navigation.NavigationService.Navigate%2A> Permet d’accéder à l’URI spécifié par `source` si les conditions suivantes sont remplies :  
  
-   Le <xref:System.Windows.Navigation.NavigationService.Navigating> événement n’est pas annulé.  
  
-   Une requête web (consultez <xref:System.Windows.Navigation.NavigationService.Navigating>) peuvent être créés.  
  
 Si `source` est `null`, le contenu existant (<xref:System.Windows.Navigation.NavigationService.Content%2A>) est désactivée.  
  
> [!NOTE]
>  Lors du téléchargement de contenu Web, vous pouvez recevoir une exception Web (par exemple, 404 : fichier introuvable). Vous pouvez gérer ces exceptions à partir de <xref:System.Windows.Navigation.NavigationService.NavigationFailed>.  
  
 Vous pouvez utiliser <xref:System.Windows.Navigation.NavigationService.Navigate%2A> pour accéder à un fragment de contenu. Si le contenu identifié par l’URI est le contenu actuel, il n'est pas nouveau téléchargé.  
  
   
  
## Examples  
 L’exemple suivant montre comment naviguer vers un URI.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigateCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatecode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigateCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatecode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object root, object navigationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(object root, object navigationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (root As Object, navigationState As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(System::Object ^ root, System::Object ^ navigationState);" />
      <MemberSignature Language="F#" Value="member this.Navigate : obj * obj -&gt; bool" Usage="navigationService.Navigate (root, navigationState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Object" />
        <Parameter Name="navigationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="root">An object that contains the content to navigate to.</param>
        <param name="navigationState">An object that contains data to be used for processing during navigation.</param>
        <summary>Navigate asynchronously to content that is contained by an object, and pass an object that contains data to be used for processing during navigation.</summary>
        <returns>
          <see langword="true" /> if a navigation is not canceled; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode a le même comportement que <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>, même si un objet est passé au lieu d’un URI.  
  
   
  
## Examples  
 L’exemple suivant montre comment naviguer vers un <xref:System.Windows.Controls.Page> contenant le contenu source et passer l’état de navigation de l’objet.  
  
 [!code-csharp[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceNavigateObjectStateSnippets/CSharp/MainWindow.xaml.cs#mainwindowcode)]
 [!code-vb[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceNavigateObjectStateSnippets/visualbasic/mainwindow.xaml.vb#mainwindowcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object navigationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source, object navigationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri, navigationState As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source, System::Object ^ navigationState);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * obj -&gt; bool" Usage="navigationService.Navigate (source, navigationState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="navigationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.Uri" /> object initialized with the URI for the desired content.</param>
        <param name="navigationState">An object that contains data to be used for processing during navigation.</param>
        <summary>Navigate asynchronously to source content located at a URI, and pass an object that contains data to be used for processing during navigation.</summary>
        <returns>
          <see langword="true" /> if a navigation is not canceled; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans la mesure où les navigations sont asynchrones, il est possible que plusieurs navigations peuvent être en cours d’exécution en même temps. Par exemple, s’il existe deux frames enfants sur une seule page, les deux frames peuvent naviguer. Dans ce cas, les différents événements de navigation qui sont déclenchés par <xref:System.Windows.Navigation.NavigationService> peut être déclenché plusieurs fois, un pour chaque élément de contenu cible de la navigation, et pas nécessairement afin que les navigations ont été demandées. Par conséquent, si une requête de navigation particulière doit traiter les données qui sont spécifiques à la requête individuelle, il ne peut pas utiliser des données est disponibles pour toutes les demandes de navigation. Au lieu de cela, vous pouvez utiliser `navigationState` pour passer des données pour le traitement de la navigation est spécifique à une requête de navigation.  
  
 Les arguments d’événement ci-dessous donnent accès à l’état de navigation :  
  
-   <xref:System.Windows.Navigation.NavigatingCancelEventArgs.ExtraData%2A> (passé à la <xref:System.Windows.Navigation.NavigationService.Navigating> événement).  
  
-   <xref:System.Windows.Navigation.NavigationEventArgs.ExtraData%2A> (passé à la <xref:System.Windows.Navigation.NavigationService.Navigated>, <xref:System.Windows.Navigation.NavigationService.NavigationStopped>, <xref:System.Windows.Navigation.NavigationService.LoadCompleted> gestionnaires d’événements).  
  
   
  
## Examples  
 L’exemple suivant montre la navigation vers un URI et passer l’état de navigation.  
  
 [!code-csharp[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceNavigateUriStateSnippets/CSharp/MainWindow.xaml.cs#mainwindowcode)]
 [!code-vb[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceNavigateUriStateSnippets/visualbasic/mainwindow.xaml.vb#mainwindowcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object navigationState, bool sandboxExternalContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source, object navigationState, bool sandboxExternalContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri, navigationState As Object, sandboxExternalContent As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source, System::Object ^ navigationState, bool sandboxExternalContent);" />
      <MemberSignature Language="F#" Value="member this.Navigate : Uri * obj * bool -&gt; bool" Usage="navigationService.Navigate (source, navigationState, sandboxExternalContent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="navigationState" Type="System.Object" />
        <Parameter Name="sandboxExternalContent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">A <see cref="T:System.Uri" /> object initialized with the URI for the desired content.</param>
        <param name="navigationState">An object that contains data to be used for processing during navigation.</param>
        <param name="sandboxExternalContent">Download content into a partial trust security sandbox (with the default Internet zone set of permissions, if <see langword="true" />. The default is <see langword="false" />.</param>
        <summary>Navigate asynchronously to source content located at a URI, pass an object containing navigation state for processing during navigation, and sandbox the content.</summary>
        <returns>
          <see langword="true" /> if a navigation is not canceled; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est uniquement pour les applications autonomes et [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] contenu.  
  
 Cette méthode présente le même comportement que <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>, et l’étend en garantissant que le contenu qui est téléchargé est placé dans un bac à sable de sécurité de confiance partielle (avec le jeu de zones Internet par défaut d’autorisations - consultez [confiance partielle de WPF Sécurité](~/docs/framework/wpf/wpf-partial-trust-security.md)).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatedEventHandler Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatedEventHandler Navigated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.Navigated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigated As NavigatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatedEventHandler ^ Navigated;" />
      <MemberSignature Language="F#" Value="member this.Navigated : System.Windows.Navigation.NavigatedEventHandler " Usage="member this.Navigated : System.Windows.Navigation.NavigatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the content that is being navigated to has been found, and is available from the <see cref="P:System.Windows.Navigation.NavigationService.Content" /> property, although it may not have completed loading.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous gérez <xref:System.Windows.Navigation.NavigationService.Navigated> si vous avez besoin découvrir des informations pertinentes concernant la requête de navigation lorsque le téléchargement commence. Ces informations sont disponibles à partir de la <xref:System.Windows.Navigation.NavigationEventArgs> objet qui est passé à la <xref:System.Windows.Navigation.NavigationService.Navigated> Gestionnaire d’événements et inclut :  
  
-   La page source. Lorsque <xref:System.Windows.Navigation.NavigationService.Navigated> est déclenché, au moins une partie de la page source [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] arborescence a été analysée et attachée à un contrôle de contenu cible.  
  
-   L’URI demandé.  
  
-   Le navigateur (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
-   Données supplémentaires, si la navigation a été lancée en appelant <xref:System.Windows.Navigation.NavigationService.Navigate%2A> ou <xref:System.Windows.Navigation.NavigationService.Navigate%2A>.  
  
-   Détails de la réponse (à l’aide un <xref:System.Net.WebResponse> objet).  
  
 <xref:System.Windows.Navigation.NavigationService.Navigated> n’est pas déclenché lorsque la page source est introuvable ou chargée, auquel cas <xref:System.Windows.Navigation.NavigationService.NavigationFailed> est déclenché.  
  
> [!NOTE]
>  Lorsque <xref:System.Windows.Navigation.NavigationService> déclenche <xref:System.Windows.Navigation.NavigationService.NavigationFailed>, elle déclenche également <xref:System.Windows.Application.NavigationFailed?displayProperty=nameWithType> événement sur le <xref:System.Windows.Application> objet.  
  
   
  
## Examples  
 L’exemple suivant montre comment gérer <xref:System.Windows.Navigation.NavigationService.Navigated>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigatedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigatedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatingCancelEventHandler Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatingCancelEventHandler Navigating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.Navigating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigating As NavigatingCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatingCancelEventHandler ^ Navigating;" />
      <MemberSignature Language="F#" Value="member this.Navigating : System.Windows.Navigation.NavigatingCancelEventHandler " Usage="member this.Navigating : System.Windows.Navigation.NavigatingCancelEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatingCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when a new navigation is requested.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.Navigating> est déclenché lorsqu’une nouvelle navigation est demandée, mais avant de la source de contenu est demandé, y compris lorsque :  
  
-   La méthode <xref:System.Windows.Navigation.NavigationService.Navigate%2A> est appelée.  
  
-   <xref:System.Windows.Navigation.NavigationService.GoBack%2A> ou <xref:System.Windows.Navigation.NavigationService.GoForward%2A> est appelée (ou une entrée est sélectionnée à partir d’une navigation [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]).  
  
-   Un fragment de contenu est la cible de la navigation.  
  
 Vous gérez <xref:System.Windows.Navigation.NavigationService.Navigating> si vous avez besoin découvrir des informations pertinentes concernant la requête de navigation avant le démarrage de la navigation. Ces informations sont disponibles à partir de la <xref:System.Windows.Navigation.NavigatingCancelEventArgs> objet qui est passé à la <xref:System.Windows.Navigation.NavigationService.Navigating> Gestionnaire d’événements.  
  
 Un <xref:System.Net.WebRequest> pour le volet de navigation est créé et disponible à partir de l’objet le <xref:System.Windows.Navigation.NavigatingCancelEventArgs> paramètre ; car la demande réelle n’a pas été apportée à ce stade, vous pouvez reconfigurer le <xref:System.Net.WebRequest> de l’objet, si nécessaire.  
  
 Vous gérez également <xref:System.Windows.Navigation.NavigatingCancelEventArgs> pour annuler la navigation, si nécessaire, en définissant <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> sur true. Si vous annulez la navigation, aucun autre événement de navigation n’est déclenchés.  
  
> [!NOTE]
>  Si votre application est hébergée dans le navigateur, vous ne pouvez pas empêcher l’utilisateur vous obliger à quitter votre application en annulant le <xref:System.Windows.Navigation.NavigationService.Navigating> événement.  
  
 Après la première partie du contenu est accédée à par un navigateur (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>), chaque élément de contenu soit quitté est ajouté à l’historique de navigation. Si vous avez besoin enregistrer les informations d’état sur le contenu que vous quittez, vous pouvez ajouter l’état à l’entrée de journal pour que le contenu en définissant <xref:System.Windows.Navigation.NavigatingCancelEventArgs.ContentStateToSave%2A> avec un <xref:System.Windows.Navigation.CustomContentState> objet.  
  
> [!NOTE]
>  Lorsque <xref:System.Windows.Navigation.NavigationService> déclenche <xref:System.Windows.Navigation.NavigationService.Navigating>, elle déclenche également <xref:System.Windows.Application.Navigating?displayProperty=nameWithType> événement sur le <xref:System.Windows.Application> objet.  
  
   
  
## Examples  
 L’exemple suivant montre comment gérer <xref:System.Windows.Navigation.NavigationService.Navigating> pour détecter si une requête d’actualisation du contenu statique a été effectuée et, dans ce cas, pour annuler la demande.  
  
 <xref:System.Windows.Navigation.NavigationService.Navigating>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigatingCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatingcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigatingCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatingcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="NavigationFailed">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      <MemberSignature Language="VB.NET" Value="Public Event NavigationFailed As NavigationFailedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationFailedEventHandler ^ NavigationFailed;" />
      <MemberSignature Language="F#" Value="member this.NavigationFailed : System.Windows.Navigation.NavigationFailedEventHandler " Usage="member this.NavigationFailed : System.Windows.Navigation.NavigationFailedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationFailedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when an error occurs while navigating to the requested content.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque soit un <xref:System.Net.WebException> ou un <xref:System.IO.IOException> est levée pendant une navigation, le <xref:System.Windows.Navigation.NavigationService.NavigationFailed> événement est déclenché. <xref:System.Windows.Navigation.NavigationService.NavigationFailed> est passé un <xref:System.Windows.Navigation.NavigationFailedEventArgs> qui encapsule des informations sur l’exception et les détails de la barre de navigation qui a provoqué l’exception.  
  
 Quand une exception résulte de l’échec d’une navigation et n’est pas gérée, les événements suivants sont déclenchés dans l’ordre indiqué :  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=nameWithType>.  
  
-   <xref:System.Windows.Controls.Frame.NavigationFailed?displayProperty=nameWithType> ou <xref:System.Windows.Navigation.NavigationWindow.NavigationFailed?displayProperty=nameWithType>.  
  
-   <xref:System.Windows.Application.NavigationFailed?displayProperty=nameWithType>.  
  
-   <xref:System.Windows.Application.DispatcherUnhandledException>.  
  
 Si un navigateur (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) est hébergé par un ou plusieurs navigateurs, `NavigationFailed` n’est pas déclenché sur un d’eux.  
  
   
  
## Examples  
 L’exemple suivant montre comment gérer <xref:System.Windows.Navigation.NavigationService.NavigationFailed>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationfailedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationfailedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="NavigationProgress">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NavigationProgress As NavigationProgressEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationProgressEventHandler ^ NavigationProgress;" />
      <MemberSignature Language="F#" Value="member this.NavigationProgress : System.Windows.Navigation.NavigationProgressEventHandler " Usage="member this.NavigationProgress : System.Windows.Navigation.NavigationProgressEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationProgressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs periodically during a download to provide navigation progress information.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> est passé un <xref:System.Windows.Navigation.NavigationProgressEventArgs> qui expose les informations de progression suivantes :  
  
-   Nombre d’octets téléchargés jusqu'à présent (<xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A>).  
  
-   Nombre total d’octets à télécharger (<xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A>).  
  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> est déclenché une fois que tous les 1 024 octets de contenu téléchargé et une fois si le nombre d’octets restants est inférieur à 1 024 octets. Pour cette raison, gestion des <xref:System.Windows.Navigation.NavigationService.NavigationProgress> constitue un moyen utile pour suivre et afficher la progression d’un téléchargement en cours.  
  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> n’est pas déclenché dans certains cas, notamment lorsque la même partie du contenu est la cible de la navigation, ou lorsque le navigateur accède à un fragment de contenu sur le contenu qui est actuellement chargé (autrement dit, la valeur de la <xref:System.Windows.Navigation.NavigationService.Content%2A> propriété).  
  
 Lors de la navigation vers une ressource XAML compilée, le dernier <xref:System.Windows.Navigation.NavigationService.NavigationProgress> ne peut pas être déclenché. Cela signifie qu’à la fin du téléchargement, la dernière signalée <xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A> ne peut-être pas la valeur la <xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A> valeur. Gérer le <xref:System.Windows.Navigation.NavigationService.LoadCompleted> événement pour être averti lorsque la navigation est terminée.  
  
> [!NOTE]
>  Lorsque <xref:System.Windows.Navigation.NavigationService> déclenche <xref:System.Windows.Navigation.NavigationService.NavigationProgress>, elle déclenche également <xref:System.Windows.Application.NavigationProgress?displayProperty=nameWithType> événement sur le <xref:System.Windows.Application> objet.  
  
   
  
## Examples  
 L’exemple suivant montre comment gérer <xref:System.Windows.Navigation.NavigationService.NavigationProgress>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationprogresscode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationprogresscode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="NavigationStopped">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NavigationStopped As NavigationStoppedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationStoppedEventHandler ^ NavigationStopped;" />
      <MemberSignature Language="F#" Value="member this.NavigationStopped : System.Windows.Navigation.NavigationStoppedEventHandler " Usage="member this.NavigationStopped : System.Windows.Navigation.NavigationStoppedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationStoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Occurs when the <see cref="M:System.Windows.Navigation.NavigationService.StopLoading" /> method is called, or when a new navigation is requested while a current navigation is in progress.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous gérez <xref:System.Windows.Navigation.NavigationService.NavigationStopped> si vous avez besoin découvrir des informations pertinentes concernant la requête de navigation lorsque le téléchargement est arrêté. Ces informations sont disponibles à partir de la <xref:System.Windows.Navigation.NavigationEventArgs> objet qui est passé à la <xref:System.Windows.Navigation.NavigationService.NavigationStopped> Gestionnaire d’événements et inclut :  
  
-   L’URI demandé.  
  
-   Le navigateur (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
-   Données supplémentaires, si la navigation a été lancée en appelant <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType> ou <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Lorsque <xref:System.Windows.Navigation.NavigationService> déclenche <xref:System.Windows.Navigation.NavigationService.NavigationStopped>, elle déclenche également <xref:System.Windows.Application.NavigationStopped?displayProperty=nameWithType> événement sur le <xref:System.Windows.Application> objet.  
  
   
  
## Examples  
 L’exemple suivant montre comment gérer <xref:System.Windows.Navigation.NavigationService.NavigationStopped>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationstoppedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationstoppedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberSignature Language="F#" Value="member this.Refresh : unit -&gt; unit" Usage="navigationService.Refresh " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Reloads the current content.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le contenu actuel (spécifié par la valeur de la <xref:System.Windows.Navigation.NavigationService.Source%2A> propriété) cible à nouveau, <xref:System.Windows.Navigation.NavigationService> ne télécharge pas le contenu à nouveau. Pour forcer <xref:System.Windows.Navigation.NavigationService> pour accéder de nouveau au contenu, appelez <xref:System.Windows.Navigation.NavigationService.Refresh%2A>.  
  
 Notez que si le contenu actuel est parcouru là encore, que ce soit par appel <xref:System.Windows.Navigation.NavigationService.Navigate%2A> ou <xref:System.Windows.Navigation.NavigationService.Refresh%2A>, une nouvelle entrée n’est pas ajoutée à l’historique de navigation.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
      </Docs>
    </Member>
    <Member MemberName="RemoveBackEntry">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.JournalEntry RemoveBackEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Navigation.JournalEntry RemoveBackEntry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveBackEntry () As JournalEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Navigation::JournalEntry ^ RemoveBackEntry();" />
      <MemberSignature Language="F#" Value="member this.RemoveBackEntry : unit -&gt; System.Windows.Navigation.JournalEntry" Usage="navigationService.RemoveBackEntry " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.JournalEntry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Removes the most recent journal entry from back history.</summary>
        <returns>The most recent <see cref="T:System.Windows.Navigation.JournalEntry" /> in back navigation history, if there is one.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si deux ou plusieurs navigateurs (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) partagent le même historique de navigation, un navigateur peut utiliser <xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A> pour récupérer l’entrée de l’historique de navigation arrière pour une navigation a eu lieu dans un autre navigateur.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Source { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Source : Uri with get, set" Usage="System.Windows.Navigation.NavigationService.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the URI of the current content, or the URI of new content that is currently being navigated to.</summary>
        <value>Un <see cref="T:System.Uri" /> qui contient l’URI pour le contenu actuel ou le contenu est navigation en cours.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si vous définissez cette propriété sur un URI différent que celui actuellement affiché, le navigateur (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) accède à l’URI spécifié.  
  
 <xref:System.Windows.Navigation.NavigationService.Source%2A> est défini sur le contenu qui est chargé à partir de l’URI cible de la navigation, sauf si le volet de navigation est annulée.  
  
 <xref:System.Windows.Navigation.NavigationService.Source%2A> peut être définie avec un URI de fragments uniquement et peut être définie sur `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopLoading">
      <MemberSignature Language="C#" Value="public void StopLoading ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopLoading() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.StopLoading" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopLoading ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopLoading();" />
      <MemberSignature Language="F#" Value="member this.StopLoading : unit -&gt; unit" Usage="navigationService.StopLoading " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Stops further downloading of content for the current navigation request.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> peut être appelée dès que <xref:System.Windows.Navigation.NavigationService.Navigate%2A> retourne et arrête la navigation est en cours dans les frames enfants.  
  
 (<xref:System.Windows.Controls.Frame>).  
  
 Appel de la <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> méthode déclenche la <xref:System.Windows.Navigation.NavigationService.NavigationStopped> événement.  
  
> [!NOTE]
>  <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> doit être appelée sur le même thread qui a lancé la navigation.  
  
   
  
## Examples  
 L’exemple suivant montre comment arrêter le chargement.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowstoploadingcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowstoploadingcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Navigation.NavigationService.Navigate" />
      </Docs>
    </Member>
  </Members>
</Type>