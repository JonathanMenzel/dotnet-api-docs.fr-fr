<Type Name="CustomContentState" FullName="System.Windows.Navigation.CustomContentState">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="af97b6bced833ff05c3ecec8a2eb8f2bb52de7cc" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30668173" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class CustomContentState" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit CustomContentState extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Navigation.CustomContentState" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CustomContentState" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomContentState abstract" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.Windows.Navigation.CustomContentState" /> active la fonctionnalité pour naviguer à travers les différents états d'une seule portion de contenu source sans recharger le contenu source à chaque navigation suivante.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, <xref:System.Windows.Navigation.NavigationService> ne stocke pas d’une instance d’un objet contenu dans l’historique de navigation. Au lieu de cela, <xref:System.Windows.Navigation.NavigationService> crée une nouvelle instance de l’objet de contenu chaque fois qu’il est accédé à l’aide de l’historique de navigation. Ce comportement est conçu pour éviter la consommation de mémoire excessive lorsque de nombreux et grands fragments de contenu sont cible de la navigation. Par conséquent, l’état du contenu n’est pas retenu d’une navigation à l’autre. Toutefois, [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] offre la possibilité d’associer un morceau d’état personnalisé avec l’entrée de l’historique de navigation pour un élément de contenu.  
  
 Un état personnalisé qui est associé à une entrée de l’historique de navigation doit être une classe qui dérive de <xref:System.Windows.Navigation.CustomContentState>. Vous associez un <xref:System.Windows.Navigation.CustomContentState> objet avec une entrée de l’historique de navigation en utilisant l’une des techniques suivantes :  
  
-   Appel de **AddBackEntry**:  
  
    -   <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A?displayProperty=nameWithType>  
  
    -   <xref:System.Windows.Navigation.NavigationWindow.AddBackEntry%2A?displayProperty=nameWithType>  
  
    -   <xref:System.Windows.Controls.Frame.AddBackEntry%2A?displayProperty=nameWithType>.  
  
-   Paramètre <xref:System.Windows.Navigation.NavigatingCancelEventArgs.Content%2A?displayProperty=nameWithType> lorsque un des événements suivants sont déclenchés :  
  
    -   <xref:System.Windows.Navigation.NavigationService.Navigating?displayProperty=nameWithType>  
  
    -   <xref:System.Windows.Navigation.NavigationWindow.Navigating?displayProperty=nameWithType>  
  
    -   <xref:System.Windows.Controls.Frame.Navigating?displayProperty=nameWithType>  
  
    -   <xref:System.Windows.Navigation.NavigationWindow.Navigating?displayProperty=nameWithType>  
  
-   En implémentant <xref:System.Windows.Navigation.IProvideCustomContentState> sur la classe qui a un état personnalisé à associer avec lui.  
  
> [!NOTE]
>  Si vous appelez le **AddBackEntry** (méthode), vous devez gérer le **Navigating** événements ou implémenter <xref:System.Windows.Navigation.IProvideCustomContentState>.  
  
 Une fois que l’entrée de l’historique de navigation est accédée, [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] vérifie si une personnalisée <xref:System.Windows.Navigation.CustomContentState> objet lui est associé. Si, par conséquent, elle appelle <xref:System.Windows.Navigation.CustomContentState.Replay%2A> pour autoriser personnalisé <xref:System.Windows.Navigation.CustomContentState> objet pour appliquer l’état mémorisé de la navigation précédente.  
  
 Personnalisé <xref:System.Windows.Navigation.CustomContentState> classe peut substituer <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A> pour modifier le nom qui s’affiche pour l’entrée de l’historique de navigation auquel la <xref:System.Windows.Navigation.CustomContentState> est associé l’objet. La valeur qui <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A> retourne est visible dans le volet de navigation [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] de différents navigateurs ([!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)], <xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
 Une classe qui dérive de <xref:System.Windows.Navigation.CustomContentState> doit être sérialisable, ce qui signifie qu’il doit au moins être augmentée <xref:System.SerializableAttribute>et, éventuellement, <xref:System.Runtime.Serialization.ISerializable>.  
  
> [!IMPORTANT]
>  Lorsque vous stockez des informations dans un état de contenu personnalisé, vous ne pouvez pas stocker les références à l’instance de la page pour laquelle vous mémorisez l’état si ne voulez pas que le contenu doit être conservé en mémoire. Cela empêche [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] à partir de la libération de l’instance de la page et empêche l’objectif du comportement de l’historique de navigation par défaut. Si vous devez le faire, envisagez d’utiliser <xref:System.Windows.Controls.Page.KeepAlive%2A> à la place.  
  
   
  
## Examples  
 Voici un exemple d’un <xref:System.Windows.Navigation.CustomContentState> implémentation qui substitue <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A>.  
  
 [!code-csharp[CustomContentStateSnippets#MyCustomContentStateCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomContentStateSnippets/CSharp/MyCustomContentState.cs#mycustomcontentstatecode)]
 [!code-vb[CustomContentStateSnippets#MyCustomContentStateCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CustomContentStateSnippets/visualbasic/mycustomcontentstate.vb#mycustomcontentstatecode)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Navigation.NavigationService" />
    <altmember cref="T:System.Windows.Navigation.JournalEntry" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomContentState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.CustomContentState.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomContentState();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Navigation.CustomContentState" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="JournalEntryName">
      <MemberSignature Language="C#" Value="public virtual string JournalEntryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string JournalEntryName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.CustomContentState.JournalEntryName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property JournalEntryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ JournalEntryName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Nom pour le contenu stocké dans l'historique de navigation. La valeur de <see cref="P:System.Windows.Navigation.CustomContentState.JournalEntryName" /> s'affiche à partir de l'[!INCLUDE[TLA#tla_ie7](~/includes/tlasharptla-ie7-md.md)] de navigation de <see cref="T:System.Windows.Navigation.NavigationWindow" />, <see cref="T:System.Windows.Controls.Frame" /> et [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</summary>
        <value>Nom de <see cref="T:System.String" /> du contenu stocké dans l'historique de navigation.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entrées stockées dans l’historique de navigation vers l’avant et de sont généralement disponibles à l’arrière vers l’avant de liste déroulante des boutons de navigation dans le volet de navigation [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] du navigateur hôte, y compris <xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>, ou [!INCLUDE[TLA#tla_ie7](~/includes/tlasharptla-ie7-md.md)].  
  
 <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A> est le <xref:System.String> valeur s’affiche dans une liste déroulante de l’historique de navigation.  
  
 <xref:System.Windows.Navigation.CustomContentState.JournalEntryName%2A> ne doit pas être substituée ; Si ce n’est pas le cas, les éléments de données suivants sont utilisés pour construire automatiquement un nom de saisie de l’historique de navigation, par ordre de priorité :  
  
-   <xref:System.Windows.Controls.Page.Title%2A>.  
  
-   <xref:System.Windows.Controls.Page.WindowTitle%2A> et le [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] pour la page actuelle  
  
-   [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] pour la page active.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
        <altmember cref="T:System.Windows.Navigation.IProvideCustomContentState" />
      </Docs>
    </Member>
    <Member MemberName="Replay">
      <MemberSignature Language="C#" Value="public abstract void Replay (System.Windows.Navigation.NavigationService navigationService, System.Windows.Navigation.NavigationMode mode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Replay(class System.Windows.Navigation.NavigationService navigationService, valuetype System.Windows.Navigation.NavigationMode mode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.CustomContentState.Replay(System.Windows.Navigation.NavigationService,System.Windows.Navigation.NavigationMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Replay(System::Windows::Navigation::NavigationService ^ navigationService, System::Windows::Navigation::NavigationMode mode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="navigationService" Type="System.Windows.Navigation.NavigationService" />
        <Parameter Name="mode" Type="System.Windows.Navigation.NavigationMode" />
      </Parameters>
      <Docs>
        <param name="navigationService">
          <see cref="T:System.Windows.Navigation.NavigationService" /> possédé par le navigateur responsable du contenu auquel <see cref="T:System.Windows.Navigation.CustomContentState" /> est appliqué.</param>
        <param name="mode">
          <see cref="T:System.Windows.Navigation.NavigationMode" /> qui spécifie comment le contenu auquel <see cref="T:System.Windows.Navigation.CustomContentState" /> est appliqué a été la cible de la navigation.</param>
        <summary>Appelé pour réappliquer l'état à un morceau de contenu lorsque la navigation s'effectue.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.CustomContentState.Replay%2A> est appelé lorsqu’un élément dans l’historique de navigation qui est associé à un <xref:System.Windows.Navigation.CustomContentState> objet cible.  
  
 Lorsque vous dérivez d’abstraite <xref:System.Windows.Navigation.CustomContentState> (classe), <xref:System.Windows.Navigation.CustomContentState.Replay%2A> doit être substitué, bien que l’implémentation de substitution appelle seulement la base de <xref:System.Windows.Navigation.CustomContentState.Replay%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
        <altmember cref="T:System.Windows.Navigation.IProvideCustomContentState" />
      </Docs>
    </Member>
  </Members>
</Type>