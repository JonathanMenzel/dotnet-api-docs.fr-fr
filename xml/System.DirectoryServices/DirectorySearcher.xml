<Type Name="DirectorySearcher" FullName="System.DirectoryServices.DirectorySearcher">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3ba6ba0e31022b6d1426b1c6a831648e3b33a12d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30410453" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DirectorySearcher : System.ComponentModel.Component" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DirectorySearcher extends System.ComponentModel.Component" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.DirectorySearcher" />
  <TypeSignature Language="VB.NET" Value="Public Class DirectorySearcher&#xA;Inherits Component" />
  <TypeSignature Language="C++ CLI" Value="public ref class DirectorySearcher : System::ComponentModel::Component" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.DirectoryServices.DSDescription("DirectorySearcherDesc")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Effectue des requêtes sur des services de domaine Active Directory.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez un <xref:System.DirectoryServices.DirectorySearcher> objet à rechercher et exécuter des requêtes sur une hiérarchie de Services de domaine Active Directory à l’aide de LDAP Lightweight Directory Access Protocol (). LDAP est le seul système Active Directory Service Interfaces ADSI () fournisseur qui prend en charge la recherche. Un administrateur peut apporter, modifier et supprimer des objets sont trouvant dans la hiérarchie. Pour plus d’informations, consultez [Using System.DirectoryServices](http://msdn.microsoft.com/library/ffa2f003-3a9a-4e2a-815e-825c8ddd7949).  
  
 Lorsque vous créez une instance de <xref:System.DirectoryServices.DirectorySearcher>, vous spécifiez la racine que vous souhaitez récupérer et une liste facultative de propriétés à récupérer. Le <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A> propriété vous permet de définir des propriétés supplémentaires afin d’effectuer les tâches suivantes :  
  
-   Mettre en cache les résultats de recherche sur l’ordinateur local. Définir le <xref:System.DirectoryServices.DirectorySearcher.CacheResults%2A> propriété `true` pour stocker les informations de répertoire sur l’ordinateur local. Mises à jour sont effectuées sur ce cache local et validées dans les Services de domaine Active Directory uniquement lorsque le <xref:System.DirectoryServices.DirectoryEntry.CommitChanges%2A?displayProperty=nameWithType> méthode est appelée.  
  
-   Spécifiez la durée de la recherche, à l’aide de la <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> propriété.  
  
-   Récupérer les noms d’attributs. Définir le <xref:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly%2A> propriété `true` pour récupérer uniquement les noms des attributs auxquels des valeurs ont été assignées.  
  
-   Effectuer une recherche paginée. Définir le <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> propriété pour spécifier le nombre maximal d’objets retournés dans une recherche paginée. Si vous ne souhaitez pas effectuer une recherche paginée, définissez le <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> propriété à sa valeur par défaut zéro.  
  
-   Spécifiez le nombre maximal d’entrées à retourner, à l’aide de la <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A> propriété. Si vous définissez le <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A> propriété à sa valeur par défaut de zéro, la valeur par défaut déterminés par le serveur est de 1000 entrées.  
  
> [!NOTE]
>  Si le nombre maximal d’entrées retournées et les limites de temps dépasse les limites définies sur le serveur, les paramètres du serveur remplacent les paramètres de composant.  
  
 Pour obtenir la liste des valeurs de propriété initiales d'une instance de la classe <xref:System.DirectoryServices.DirectorySearcher>, consultez le constructeur <xref:System.DirectoryServices.DirectorySearcher.%23ctor>.  
  
> [!NOTE]
>  Il est supposé que vous avez une idée générale des Services de domaine Active Directory avant d’utiliser cette classe. Pour plus d’informations, consultez le <xref:System.DirectoryServices?displayProperty=nameWithType> vue d’ensemble.  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
      <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />
    </permission>
    <altmember cref="T:System.DirectoryServices.DirectoryEntries" />
    <altmember cref="T:System.DirectoryServices.DirectoryEntry" />
    <altmember cref="Overload:System.DirectoryServices.DirectorySearcher.#ctor" />
    <altmember cref="T:System.DirectoryServices.DirectorySearcher" />
    <altmember cref="T:System.DirectoryServices.PropertyCollection" />
    <altmember cref="T:System.DirectoryServices.PropertyValueCollection" />
    <altmember cref="T:System.DirectoryServices.ReferralChasingOption" />
    <altmember cref="T:System.DirectoryServices.SearchResultCollection" />
    <altmember cref="T:System.DirectoryServices.SearchResult" />
    <altmember cref="T:System.DirectoryServices.ResultPropertyValueCollection" />
    <altmember cref="T:System.DirectoryServices.SearchScope" />
    <altmember cref="T:System.DirectoryServices.SortDirection" />
    <altmember cref="T:System.DirectoryServices.SortOption" />
    <altmember cref="N:System.DirectoryServices" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.DirectoryServices.DirectorySearcher" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.DirectoryServices.DirectorySearcher" /> avec des valeurs par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant montre les valeurs initiales des propriétés de la <xref:System.DirectoryServices.DirectorySearcher> objet.  
  
|Property|Valeur initiale|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|Référence Null (`Nothing` en Visual Basic)|  
|<xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|"(objectClass=*)"|  
|<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|Objet <xref:System.Collections.Specialized.StringCollection> vide|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope.Subtree>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.DirectoryEntry searchRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (searchRoot As DirectoryEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::DirectoryServices::DirectoryEntry ^ searchRoot);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="searchRoot" Type="System.DirectoryServices.DirectoryEntry" />
      </Parameters>
      <Docs>
        <param name="searchRoot">Nœud de la hiérarchie des services de domaine Active Directory où la recherche démarre. La propriété <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" /> est initialisée à cette valeur.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.DirectoryServices.DirectorySearcher" /> à l'aide de la racine de recherche spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant montre les valeurs initiales des propriétés de la <xref:System.DirectoryServices.DirectorySearcher> objet.  
  
|Property|Valeur initiale|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.Filter%2A>|"(objectClass=*)"|  
|<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|Objet <xref:System.Collections.Specialized.StringCollection> vide|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope.Subtree>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (string filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::String ^ filter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filter">Chaîne de filtrage de recherche au format LDAP (Lightweight Directory Access Protocol). La propriété <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> est initialisée à cette valeur.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.DirectoryServices.DirectorySearcher" /> avec le filtre de recherche spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant montre les valeurs initiales des propriétés de la <xref:System.DirectoryServices.DirectorySearcher> objet.  
  
|Property|Valeur initiale|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|Référence Null (`Nothing` en Visual Basic)|  
|<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|Objet <xref:System.Collections.Specialized.StringCollection> vide|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope.Subtree>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.DirectoryEntry searchRoot, string filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (searchRoot As DirectoryEntry, filter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::DirectoryServices::DirectoryEntry ^ searchRoot, System::String ^ filter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="searchRoot" Type="System.DirectoryServices.DirectoryEntry" />
        <Parameter Name="filter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="searchRoot">Nœud de la hiérarchie des services de domaine Active Directory où la recherche démarre. La propriété <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" /> est initialisée à cette valeur.</param>
        <param name="filter">Chaîne de filtrage de recherche au format LDAP (Lightweight Directory Access Protocol). La propriété <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> est initialisée à cette valeur.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.DirectoryServices.DirectorySearcher" /> avec la racine et le filtre de recherche spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant montre les valeurs initiales des propriétés de la <xref:System.DirectoryServices.DirectorySearcher> objet.  
  
|Property|Valeur initiale|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.PropertiesToLoad%2A>|Objet <xref:System.Collections.Specialized.StringCollection> vide|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope.Subtree>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (string filter, string[] propertiesToLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filter, string[] propertiesToLoad) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filter As String, propertiesToLoad As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::String ^ filter, cli::array &lt;System::String ^&gt; ^ propertiesToLoad);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="propertiesToLoad" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="filter">Chaîne de filtrage de recherche au format LDAP (Lightweight Directory Access Protocol). La propriété <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> est initialisée à cette valeur.</param>
        <param name="propertiesToLoad">Ensemble de propriétés à récupérer durant la recherche. La propriété <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> est initialisée à cette valeur.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.DirectoryServices.DirectorySearcher" /> avec le filtre de recherche et les propriétés à récupérer spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant montre les valeurs initiales des propriétés de la <xref:System.DirectoryServices.DirectorySearcher> objet.  
  
|Property|Valeur initiale|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|Référence Null (`Nothing` en Visual Basic)|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope.Subtree>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (searchRoot As DirectoryEntry, filter As String, propertiesToLoad As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::DirectoryServices::DirectoryEntry ^ searchRoot, System::String ^ filter, cli::array &lt;System::String ^&gt; ^ propertiesToLoad);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="searchRoot" Type="System.DirectoryServices.DirectoryEntry" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="propertiesToLoad" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="searchRoot">Nœud de la hiérarchie des services de domaine Active Directory où la recherche démarre. La propriété <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" /> est initialisée à cette valeur.</param>
        <param name="filter">Chaîne de filtrage de recherche au format LDAP (Lightweight Directory Access Protocol). La propriété <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> est initialisée à cette valeur.</param>
        <param name="propertiesToLoad">Ensemble des propriétés récupérées durant la recherche. La propriété <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> est initialisée à cette valeur.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.DirectoryServices.DirectorySearcher" /> avec la racine de recherche, le filtre de recherche et les propriétés à récupérer spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant montre les valeurs initiales des propriétés de la <xref:System.DirectoryServices.DirectorySearcher> objet.  
  
|Property|Valeur initiale|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A>|<xref:System.DirectoryServices.SearchScope.Subtree>|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (string filter, string[] propertiesToLoad, System.DirectoryServices.SearchScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filter, string[] propertiesToLoad, valuetype System.DirectoryServices.SearchScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.String,System.String[],System.DirectoryServices.SearchScope)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filter As String, propertiesToLoad As String(), scope As SearchScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::String ^ filter, cli::array &lt;System::String ^&gt; ^ propertiesToLoad, System::DirectoryServices::SearchScope scope);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="propertiesToLoad" Type="System.String[]" />
        <Parameter Name="scope" Type="System.DirectoryServices.SearchScope" />
      </Parameters>
      <Docs>
        <param name="filter">Chaîne de filtrage de recherche au format LDAP (Lightweight Directory Access Protocol). La propriété <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> est initialisée à cette valeur.</param>
        <param name="propertiesToLoad">Ensemble de propriétés à récupérer durant la recherche. La propriété <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> est initialisée à cette valeur.</param>
        <param name="scope">Portée de la recherche observée par le serveur. La propriété <see cref="T:System.DirectoryServices.SearchScope" /> est initialisée à cette valeur.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.DirectoryServices.DirectorySearcher" /> avec le filtre de recherche, les propriétés à récupérer et la zone de recherche spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant montre les valeurs initiales des propriétés de la <xref:System.DirectoryServices.DirectorySearcher> objet.  
  
|Property|Valeur initiale|  
|--------------|-------------------|  
|<xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A>|Référence Null (`Nothing` en Visual Basic)|  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DirectorySearcher (System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad, System.DirectoryServices.SearchScope scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.DirectoryEntry searchRoot, string filter, string[] propertiesToLoad, valuetype System.DirectoryServices.SearchScope scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.#ctor(System.DirectoryServices.DirectoryEntry,System.String,System.String[],System.DirectoryServices.SearchScope)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (searchRoot As DirectoryEntry, filter As String, propertiesToLoad As String(), scope As SearchScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DirectorySearcher(System::DirectoryServices::DirectoryEntry ^ searchRoot, System::String ^ filter, cli::array &lt;System::String ^&gt; ^ propertiesToLoad, System::DirectoryServices::SearchScope scope);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="searchRoot" Type="System.DirectoryServices.DirectoryEntry" />
        <Parameter Name="filter" Type="System.String" />
        <Parameter Name="propertiesToLoad" Type="System.String[]" />
        <Parameter Name="scope" Type="System.DirectoryServices.SearchScope" />
      </Parameters>
      <Docs>
        <param name="searchRoot">Nœud de la hiérarchie des services de domaine Active Directory où la recherche démarre. La propriété <see cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" /> est initialisée à cette valeur.</param>
        <param name="filter">Chaîne de filtrage de recherche au format LDAP (Lightweight Directory Access Protocol). La propriété <see cref="P:System.DirectoryServices.DirectorySearcher.Filter" /> est initialisée à cette valeur.</param>
        <param name="propertiesToLoad">Ensemble de propriétés à récupérer durant la recherche. La propriété <see cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" /> est initialisée à cette valeur.</param>
        <param name="scope">Portée de la recherche observée par le serveur. La propriété <see cref="T:System.DirectoryServices.SearchScope" /> est initialisée à cette valeur.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.DirectoryServices.DirectorySearcher" /> avec la racine de recherche, le filtre de recherche, les propriétés à récupérer et la zone de recherche spécifiés.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.DirectoryServices.DirectoryServicesPermission">
          <see cref="F:System.Security.Permissions.SecurityAction.Demand" />
        </permission>
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.Filter" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName="Asynchronous">
      <MemberSignature Language="C#" Value="public bool Asynchronous { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Asynchronous" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.Asynchronous" />
      <MemberSignature Language="VB.NET" Value="Public Property Asynchronous As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Asynchronous { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSAsynchronous")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si la recherche est réalisée de manière asynchrone.</summary>
        <value>
          <see langword="true" /> si la recherche est asynchrone ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une recherche asynchrone peut afficher les résultats comme ils sont trouvés lors de la recherche simultanément les résultats supplémentaires. Cela est utile pour des tâches telles que le remplissage des zones de liste.  
  
 Le paramètre par défaut de cette propriété est `false`.  
  
   
  
## Examples  
 L’exemple c# suivant montre comment créer une recherche asynchrone.  
  
```csharp  
using System.DirectoryServices;  
...  
// Bind to the users container.  
DirectoryEntry entry = new DirectoryEntry("LDAP://CN=users,DC=fabrikam,DC=com");  
// Create a DirectorySearcher object.  
DirectorySearcher mySearcher = new DirectorySearcher(entry);  
//Set the Asynchronous property to true.  
src.Asynchronous = true;  
//Use the FindAll method to get search results.  
SearchResultCollection res = src.FindAll();  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AttributeScopeQuery">
      <MemberSignature Language="C#" Value="public string AttributeScopeQuery { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AttributeScopeQuery" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery" />
      <MemberSignature Language="VB.NET" Value="Public Property AttributeScopeQuery As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AttributeScopeQuery { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSAttributeQuery")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom complet LDAP de l'attribut de nom unique dans lequel effectuer une recherche. Un seul attribut peut être utilisé pour ce type de recherche.</summary>
        <value>Nom complet LDAP de l'attribut dans lequel effectuer la recherche ou chaîne vide si aucune requête de portée d'attribut n'est définie.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’attribut a la valeur de cette propriété doit être un attribut de nom unique, tel que le membre ou géré par. L’attribut peut être simple ou à valeurs multiples. Pour plus d’informations, consultez les rubriques adschema «[membre](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_member.asp)« et »[Managed By](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/adschema/adschema/a_managedby.asp)» dans MSDN Library à [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library).  
  
 La recherche est effectuée sur les objets qui sont identifiés par le nom unique qui est spécifié dans l’attribut de l’objet de base. Par exemple, si l’objet de base est une classe group adschema et <xref:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery%2A> est définie sur « membre », la recherche sera effectuée par rapport à tous les objets qui sont membres du groupe. Pour plus d’informations, consultez la rubrique de la classe « Groupe » adschema dans MSDN Library à [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library).  
  
 Lorsque le <xref:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery%2A> propriété est utilisée, le <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A> propriété doit être définie sur <xref:System.DirectoryServices.SearchScope.Base>. Si le <xref:System.DirectoryServices.DirectorySearcher.SearchScope%2A> est définie sur une autre valeur, en définissant le <xref:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery%2A> propriété lèvera une <xref:System.ArgumentException>.  
  
 Pour plus d’informations, consultez la rubrique « Exécution d’un Attribute Scope Query » dans MSDN Library à [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library)).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le <xref:System.DirectoryServices.DirectorySearcher.AttributeScopeQuery%2A> propriété avec l’attribut member pour obtenir les membres d’un groupe. Il imprime ensuite le premier et le nom des membres et leurs numéros de téléphone.  
  
```csharp  
using System.DirectoryServices;  
DirectoryEntry group = new DirectoryEntry("LDAP://CN=MyGroup, …");  
DirectorySearcher src = new DirectorySearcher(group "(&(objectClass=user)(objectCategory=Person))");  
src.AttributeScopedQuery = "member";  
src.PropertiesToLoad.Add("sn");  
src.PropertiesToLoad.Add("givenName");  
src.PropertiesToLoad.Add("telephoneNumber");  
foreach(SearchResult res in src.FindAll())  
{  
    Console.WriteLine("…");  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La propriété <see cref="P:System.DirectoryServices.DirectorySearcher.SearchScope" /> a une valeur différente de <see cref="F:System.DirectoryServices.SearchScope.Base" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CacheResults">
      <MemberSignature Language="C#" Value="public bool CacheResults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CacheResults" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.CacheResults" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheResults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CacheResults { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSCacheResults")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si le résultat est mis en cache sur l'ordinateur client.</summary>
        <value>
          <see langword="true" /> si le résultat est mis en cache sur l'ordinateur client ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la recherche retourne un jeu de résultats volumineux, la recherche sera plus efficace si cette propriété a la valeur `false` afin d’éviter le transfert du résultat défini sur l’ordinateur client.  Si vous le faites, toutefois, vous ne serez pas être en mesure d’énumérer les résultats à deux reprises, car le <xref:System.DirectoryServices.SearchResultCollection> objet crée un nouvel objet énumérateur chaque fois qu’elle est appelée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan ClientTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ClientTimeout" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.ClientTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ClientTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSClientTimeout")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le délai maximal durant lequel le client attend le retour des résultats par le serveur. Si le serveur ne répond pas avant l'expiration de ce délai, la recherche est abandonnée et aucun résultat n'est retourné.</summary>
        <value>Structure <see cref="T:System.TimeSpan" /> contenant le délai maximal durant lequel le client attend les résultats du serveur.  
  
 La valeur par défaut est -1 seconde, ce qui signifie que le client attend indéfiniment.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La résolution minimale de cette propriété est une seconde. Les fractions de secondes sont ignorées.  
  
 Si la <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> est atteinte avant que le client arrive à expiration, le serveur retourne les résultats et le client cesse d’attendre. La limite de durée maximale du serveur est de 120 secondes.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
      </Docs>
    </Member>
    <Member MemberName="DerefAlias">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DereferenceAlias DerefAlias { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.DereferenceAlias DerefAlias" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.DerefAlias" />
      <MemberSignature Language="VB.NET" Value="Public Property DerefAlias As DereferenceAlias" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DereferenceAlias DerefAlias { System::DirectoryServices::DereferenceAlias get(); void set(System::DirectoryServices::DereferenceAlias value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSDerefAlias")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DereferenceAlias</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant de quelle manière les alias d'objets qui sont trouvés au cours d'une recherche doivent être résolus.</summary>
        <value>Valeur <see cref="T:System.DirectoryServices.DereferenceAlias" /> qui spécifie les circonstances dans lesquelles les alias sont déréférencés. Le paramètre par défaut de cette propriété est <see cref="F:System.DirectoryServices.DereferenceAlias.Never" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple c# suivant montre comment définir la <xref:System.DirectoryServices.DirectorySearcher.DerefAlias%2A> propriété <xref:System.DirectoryServices.DereferenceAlias.Always> , afin qu’elle déréférence les alias lors de la recherche des subordonnés et de localisation des objets de base.  
  
```  
using System.DirectoryServices;  
...  
// Bind to the users container.  
DirectoryEntry entry = new DirectoryEntry("LDAP://CN=users,DC=fabrikam,DC=com");  
// Create a DirectorySearcher object.  
DirectorySearcher mySearcher = new DirectorySearcher(entry);  
// Set DerefAlias to Always.  
src.DerefAlias = DerefenceAlias.Always;  
//Use the FindAll method to get search results.  
SearchResultCollection res = src.FindAll();  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DirectoryServices.DereferenceAlias" />
      </Docs>
    </Member>
    <Member MemberName="DirectorySynchronization">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectorySynchronization DirectorySynchronization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.DirectorySynchronization DirectorySynchronization" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.DirectorySynchronization" />
      <MemberSignature Language="VB.NET" Value="Public Property DirectorySynchronization As DirectorySynchronization" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DirectorySynchronization ^ DirectorySynchronization { System::DirectoryServices::DirectorySynchronization ^ get(); void set(System::DirectoryServices::DirectorySynchronization ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSDirectorySynchronization")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectorySynchronization</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un objet qui représente le contrôle de synchronisation d'annuaires à utiliser avec la recherche.</summary>
        <value>Objet <see cref="T:System.DirectoryServices.DirectorySynchronization" /> de la recherche. <see langword="null" /> si le contrôle de synchronisation d'annuaires ne doit pas être utilisé.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le contrôle de synchronisation d’annuaires, communément appelé le contrôle DirSync, est un contrôle LDAP qui est utilisé pour rechercher des objets qui ont changé depuis un état antérieur.  
  
 Pour plus d’informations, consultez la rubrique «[d’interrogation pour les modifications apportées à l’aide du contrôle DirSync](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/ad/ad/polling_for_changes_using_the_dirsync_control.asp)» dans MSDN Library à [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <see langword="true" /> si cette méthode libère les ressources managées et non managées ; <see langword="false" /> si elle ne libère que les ressources non managées.</param>
        <summary>Libère les ressources managées utilisées par l'objet <see cref="T:System.DirectoryServices.DirectorySearcher" /> et libère éventuellement les ressources non managées.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtendedDN">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ExtendedDN ExtendedDN { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.ExtendedDN ExtendedDN" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.ExtendedDN" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtendedDN As ExtendedDN" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ExtendedDN ExtendedDN { System::DirectoryServices::ExtendedDN get(); void set(System::DirectoryServices::ExtendedDN value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSExtendedDn")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ExtendedDN</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique le format des noms uniques.</summary>
        <value>Une des valeurs de <see cref="T:System.DirectoryServices.ExtendedDN" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant montre comment retourner une collection de noms uniques au format hexadécimal.  
  
```csharp  
using System.DirectoryServices;  
...  
DirectorySearcher src = new DirectorySearcher("…");  
src.PropertiesToLoad = new string[] {ntSecurityDescriptor,…};  
src.ExtendedDN = ExtendedDN.HexString;  
SearchResultCollection res = src.FindAll();  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Filter">
      <MemberSignature Language="C#" Value="public string Filter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Filter" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.Filter" />
      <MemberSignature Language="VB.NET" Value="Public Property Filter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Filter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("(objectClass=*)")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Diagnostics.Design.StringValueConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSFilter")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant la chaîne de filtrage au format LDAP (Lightweight Directory Access Protocol).</summary>
        <value>Chaîne de filtrage de recherche au format LDAP, par exemple "(objectClass=user)". La chaîne par défaut est "(objectClass=*)", qui récupère tous les objets.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le filtre utilise les indications suivantes :  
  
1.  La chaîne doit être entre parenthèses.  
  
2.  Les expressions peuvent utiliser les opérateurs relationnels : <, \<=, =, > =, et >. Par exemple "(objectClass=user) ». Un autre exemple est « (lastName > = Davis) ».  
  
3.  Expressions composées contiennent les opérateurs préfixés & et &#124;. Par exemple « (&(objectClass=user) (lastName = Davis)) ». Un autre exemple est « (&(objectClass=Printer) (&#124;(building=42)(building=43))) ».  
  
 Si le filtre contient un attribut de type ADS_UTC_TIME, sa valeur doit être au format aaaammjjhhmmssZ où y, m, d, h, m et s correspondent à l’année, mois, jour, heure, minute et seconde, respectivement. La valeur des secondes (ss) est facultative. La dernière lettre Z signifie qu’il n’existe aucune heure différentielle. Dans ce format, « 10:20:00 du matin. Peut 13, 1999" devient « 19990513102000Z ». Notez que les Services de domaine Active Directory stocke la date et l’heure en tant que Coordinated Universal Time (heure de Greenwich). Si vous spécifiez une heure sans décalage horaire, vous spécifiez l’heure en heure GMT.  
  
 Si vous n’êtes pas dans le fuseau horaire de temps universel coordonné, vous pouvez ajouter une valeur différentielle à l’heure UTC (au lieu de les spécifier Z) pour spécifier une heure en fonction de votre fuseau horaire. La sauvegarde différentielle est basée sur les éléments suivants : différentiel = UTC - Local. Pour spécifier une sauvegarde différentielle, utilisez le format suivant : aaaammjjhhmmss [+/-] hhmm. Par exemple, « 8:52:58 P.M. Mars 23, 1999" Nouvelle-Zélande temps Standard (la sauvegarde différentielle est de 12 heures) est spécifié en tant que « 19990323205258.0 + 1200 ».  
  
 Pour plus d’informations sur le format de chaîne de recherche LDAP, consultez « Search Filter Syntax » dans MSDN Library à [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.SearchResultCollection FindAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.SearchResultCollection FindAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.FindAll" />
      <MemberSignature Language="VB.NET" Value="Public Function FindAll () As SearchResultCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::SearchResultCollection ^ FindAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.SearchResultCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Exécute la recherche et retourne une collection contenant les entrées trouvées.</summary>
        <returns>Objet <see cref="T:System.DirectoryServices.SearchResultCollection" /> qui contient les résultats de la recherche.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En raison de restrictions d’implémentation, la <xref:System.DirectoryServices.SearchResultCollection> classe ne peut pas libérer toutes ses ressources non managées lorsque vient le garbage collecté. Pour empêcher une fuite de mémoire, vous devez appeler la <xref:System.DirectoryServices.SearchResultCollection.Dispose%2A> méthode lorsque le <xref:System.DirectoryServices.SearchResultCollection> objet n’est plus nécessaire.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Le <see cref="T:System.DirectoryServices.DirectoryEntry" /> spécifié n'est pas un conteneur.</exception>
        <exception cref="T:System.NotSupportedException">La recherche n'est pas prise en charge par le fournisseur actuellement utilisé.</exception>
        <altmember cref="M:System.DirectoryServices.DirectorySearcher.FindOne" />
      </Docs>
    </Member>
    <Member MemberName="FindOne">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.SearchResult FindOne ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.SearchResult FindOne() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.DirectorySearcher.FindOne" />
      <MemberSignature Language="VB.NET" Value="Public Function FindOne () As SearchResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::SearchResult ^ FindOne();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.SearchResult</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Exécute la recherche et retourne uniquement la première entrée trouvée.</summary>
        <returns>Objet <see cref="T:System.DirectoryServices.SearchResult" /> contenant la première entrée trouvée durant la recherche.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si plus d’une entrée est trouvée pendant la recherche, seule la première entrée est retournée. Si aucune entrée n’a été trouvée aux critères de recherche, une référence null (`Nothing` en Visual Basic) est retournée.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.DirectoryServices.DirectorySearcher.FindAll" />
      </Docs>
    </Member>
    <Member MemberName="PageSize">
      <MemberSignature Language="C#" Value="public int PageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageSize" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.PageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property PageSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PageSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSPageSize")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant la taille de la page dans une recherche paginée.</summary>
        <value>Nombre maximal d'objets retournés par le serveur au cours d'une recherche paginée. La valeur par défaut est zéro, qui signifie que le serveur ne doit pas effectuer de recherche paginée.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une fois que le serveur a trouvé le nombre d’objets qui sont spécifiées par le <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> propriété, il arrête la recherche et retourner les résultats au client. Lorsque le client demande davantage de données, le serveur redémarre la recherche où il s’est arrêté.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La nouvelle valeur est inférieure à zéro.</exception>
      </Docs>
    </Member>
    <Member MemberName="PropertiesToLoad">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.StringCollection PropertiesToLoad { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringCollection PropertiesToLoad" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.PropertiesToLoad" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertiesToLoad As StringCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::StringCollection ^ PropertiesToLoad { System::Collections::Specialized::StringCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.StringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSPropertiesToLoad")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant la liste de propriétés à récupérer au cours de la recherche.</summary>
        <value>Objet <see cref="T:System.Collections.Specialized.StringCollection" /> qui contient le jeu de propriétés à récupérer au cours de la recherche.  
  
 La valeur par défaut est un <see cref="T:System.Collections.Specialized.StringCollection" /> vide qui récupère toutes les propriétés.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour récupérer des propriétés spécifiques, ajoutez-les à cette collection avant de commencer la recherche. Par exemple, `searcher.PropertiesToLoad.Add("phone");` ajoutera la propriété téléphone à la liste de propriétés à récupérer dans la recherche.  
  
 La propriété « ADsPath » est toujours récupéré lors de la recherche. Sur [!INCLUDE[Win2kFamily](~/includes/win2kfamily-md.md)] et les systèmes d’exploitation antérieurs, le compte qui exécute la recherche doit être membre du groupe Administrateurs pour récupérer la propriété ntSecurityDescriptor. Si ce n’est pas le cas, la valeur de propriété qui est retournée pour ntSecurityDescriptor sera `null`. Pour plus d’informations, consultez la rubrique « NT-Security-Descriptor » dans MSDN Library à [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.Specialized.StringCollection" />
      </Docs>
    </Member>
    <Member MemberName="PropertyNamesOnly">
      <MemberSignature Language="C#" Value="public bool PropertyNamesOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PropertyNamesOnly" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.PropertyNamesOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property PropertyNamesOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PropertyNamesOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSPropertyNamesOnly")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si la recherche récupère uniquement les noms des attributs auxquels des valeurs ont été assignées.</summary>
        <value>
          <see langword="true" /> si la recherche obtient uniquement les noms des attributs auxquels des valeurs ont été assignées ; <see langword="false" /> si la recherche obtient les noms et les valeurs de tous les attributs demandés. La valeur par défaut est <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferralChasing">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.ReferralChasingOption ReferralChasing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.ReferralChasingOption ReferralChasing" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.ReferralChasing" />
      <MemberSignature Language="VB.NET" Value="Public Property ReferralChasing As ReferralChasingOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::ReferralChasingOption ReferralChasing { System::DirectoryServices::ReferralChasingOption get(); void set(System::DirectoryServices::ReferralChasingOption value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSReferralChasing")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.ReferralChasingOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant comment les références sont repérées.</summary>
        <value>Une des valeurs de <see cref="T:System.DirectoryServices.ReferralChasingOption" />. La valeur par défaut est <see cref="F:System.DirectoryServices.ReferralChasingOption.External" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la recherche de racine n’est pas spécifiée dans le contexte d’appellation du serveur ou lorsque les résultats de recherche cross un contexte de nommage (par exemple, lorsque vous avez des domaines enfants et recherche dans le domaine parent), le serveur envoie un message de référence au client que le client peut soit  doivent être ignorées ou chase.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">La valeur ne fait pas partie des valeurs <see cref="T:System.DirectoryServices.ReferralChasingOption" />.</exception>
        <altmember cref="T:System.DirectoryServices.ReferralChasingOption" />
      </Docs>
    </Member>
    <Member MemberName="SearchRoot">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryEntry SearchRoot { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.DirectoryEntry SearchRoot" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.SearchRoot" />
      <MemberSignature Language="VB.NET" Value="Public Property SearchRoot As DirectoryEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DirectoryEntry ^ SearchRoot { System::DirectoryServices::DirectoryEntry ^ get(); void set(System::DirectoryServices::DirectoryEntry ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSSearchRoot")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique le nœud dans la hiérarchie des services de domaine Active Directory où la recherche démarre.</summary>
        <value>Objet <see cref="T:System.DirectoryServices.DirectoryEntry" /> de la hiérarchie des services de domaine Active Directory où la recherche démarre. La valeur par défaut est une référence Null (<see langword="Nothing" /> en Visual Basic).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si <xref:System.DirectoryServices.DirectorySearcher.SearchRoot%2A> est une référence null (`Nothing` en Visual Basic), la racine de recherche est définie à la racine du domaine que votre serveur utilise actuellement.  
  
 Il existe plusieurs façons d’effectuer une recherche dans le catalogue global :  
  
-   Énumérer le catalogue global et sélectionner le premier enfant.  
  
-   Spécifiez le nom du serveur. Utilisez la fonction DsGetDcName pour rechercher le catalogue global.  Pour plus d’informations sur la fonction DsGetDcName, consultez la rubrique « DsGetDcName » dans MSDN Library à [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library).  
  
-   Obtenez le RootDSE du catalogue global et demandez « rootNamingContext ».  
  
-   Utiliser le catalogue global, en spécifiant un chemin de recherche comme si l’utilisation de LDAP. Par exemple, « GC : / / OU =..., DC =..., DC =... ».  
  
-   Le code c# suivant montre comment énumérer le catalogue global et sélectionner le premier enfant.  
  
    ```csharp  
    DirectoryEntry entry = new DirectoryEntry("GC://forestname");  
    IEnumerator ie = entry.Children.GetEnumerator();  
    ie.MoveNext();  
    entry = (DirectoryEntry)ie.Current;  
    DirectorySearcher search = new DirectorySearcher(entry);  
    ```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SearchScope">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.SearchScope SearchScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.SearchScope SearchScope" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.SearchScope" />
      <MemberSignature Language="VB.NET" Value="Public Property SearchScope As SearchScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::SearchScope SearchScope { System::DirectoryServices::SearchScope get(); void set(System::DirectoryServices::SearchScope value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSSearchScope")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.SearchScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant la zone de recherche observée par le serveur.</summary>
        <value>Une des valeurs de <see cref="T:System.DirectoryServices.SearchScope" />. La valeur par défaut est <see cref="F:System.DirectoryServices.SearchScope.Subtree" />.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">La valeur ne fait pas partie des valeurs <see cref="T:System.DirectoryServices.SearchScope" />.</exception>
        <altmember cref="T:System.DirectoryServices.SearchScope" />
      </Docs>
    </Member>
    <Member MemberName="SecurityMasks">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.SecurityMasks SecurityMasks { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.SecurityMasks SecurityMasks" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.SecurityMasks" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityMasks As SecurityMasks" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::SecurityMasks SecurityMasks { System::DirectoryServices::SecurityMasks get(); void set(System::DirectoryServices::SecurityMasks value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSSecurityMasks")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.SecurityMasks</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant quelles informations d'accès de sécurité pour les attributs spécifiés doivent être retournées par la recherche.</summary>
        <value>Une des valeurs de <see cref="T:System.DirectoryServices.SecurityMasks" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
  
```csharp  
using System.DirectoryServices;  
...  
DirectorySearcher src = new DirectorySearcher("…");  
src.PropertiesToLoad = new string[] {ntSecurityDescriptor,…};  
src.SecurityMasks = SecurityMasks.Dacl | SecurityMasks.Owner;  
SearchResultCollection res = src.FindAll();  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.DirectoryServices.SecurityMasks" />
      </Docs>
    </Member>
    <Member MemberName="ServerPageTimeLimit">
      <MemberSignature Language="C#" Value="public TimeSpan ServerPageTimeLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ServerPageTimeLimit" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerPageTimeLimit As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ServerPageTimeLimit { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSServerPageTimeLimit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant la durée maximale pendant laquelle le serveur doit rechercher une page individuelle de résultats. Il ne s'agit pas du délai de la recherche entière.</summary>
        <value>
          <see cref="T:System.TimeSpan" /> représentant la durée pendant laquelle le serveur doit rechercher une page de résultats.  
  
 La valeur par défaut est -1 seconde, ce qui signifie que le client recherche indéfiniment.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La résolution minimale de cette propriété est une seconde. Les fractions de secondes sont ignorées.  
  
 Lorsque la limite de temps est atteinte, le serveur interrompt la recherche et retourne les résultats qui se sont accumulées jusqu'à ce stade, ainsi que d’un cookie contenant les informations sur l’emplacement de recherche doit reprendre.  
  
> [!NOTE]
>  Cette propriété s’applique uniquement aux recherches où <xref:System.DirectoryServices.DirectorySearcher.PageSize%2A> est définie sur une valeur qui n’est pas la valeur par défaut de -1.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.PageSize" />
      </Docs>
    </Member>
    <Member MemberName="ServerTimeLimit">
      <MemberSignature Language="C#" Value="public TimeSpan ServerTimeLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan ServerTimeLimit" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.ServerTimeLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property ServerTimeLimit As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan ServerTimeLimit { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSServerTimeLimit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>La propriété <see cref="P:System.DirectoryServices.DirectorySearcher.ServerTimeLimit" /> obtient ou définit une valeur indiquant la durée maximale de la recherche par le serveur. Une fois ce délai atteint, seules les entrées trouvées jusqu'à cet instant sont retournées.</summary>
        <value>
          <see cref="T:System.TimeSpan" /> représentant la durée pendant laquelle le serveur doit effectuer une recherche.  
  
 La valeur par défaut est -1 seconde, ce qui signifie que la valeur par défaut de 120 secondes déterminée par le serveur doit être utilisée.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La résolution minimale de cette propriété est une seconde. Les fractions de secondes sont ignorées.  
  
 Contrairement à la <xref:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit%2A> propriété, le <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> propriété indique la quantité totale de temps que le serveur sur une recherche. Lorsque la limite de temps est atteinte, le serveur interrompt la recherche et retourne les résultats qui se sont accumulées jusqu'à ce point.  
  
 Définissez <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> à-1 seconde à utiliser la valeur par défaut déterminée.  
  
> [!NOTE]
>  Si vous définissez <xref:System.DirectoryServices.DirectorySearcher.ServerTimeLimit%2A> à une valeur qui est supérieure à la valeur par défaut déterminée de 120 secondes, la valeur par défaut déterminés par le serveur est utilisé. Une fois atteinte la limite de temps du serveur, une recherche où il s’était arrêté ne peut pas se poursuivre.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.TimeSpan" />
        <altmember cref="P:System.DirectoryServices.DirectorySearcher.ServerPageTimeLimit" />
      </Docs>
    </Member>
    <Member MemberName="SizeLimit">
      <MemberSignature Language="C#" Value="public int SizeLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SizeLimit" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.SizeLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property SizeLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SizeLimit { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSSizeLimit")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant le nombre maximal d'objets retournés par le serveur au cours d'une recherche.</summary>
        <value>Nombre maximal d'objets retournés par le serveur durant une recherche. La valeur par défaut est zéro, ce qui signifie que la taille limite par défaut déterminée par le serveur doit être utilisée, à savoir 1000 entrées.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le serveur interrompt la recherche une fois la limite de taille est atteinte et retourne les résultats accumulées jusqu'à ce point.  
  
> [!NOTE]
>  Si vous définissez <xref:System.DirectoryServices.DirectorySearcher.SizeLimit%2A> à une valeur qui est supérieure à la valeur par défaut de 1000 entrées déterminée, la valeur par défaut déterminés par le serveur est utilisé.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La nouvelle valeur est inférieure à zéro.</exception>
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.SortOption Sort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.SortOption Sort" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.Sort" />
      <MemberSignature Language="VB.NET" Value="Public Property Sort As SortOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::SortOption ^ Sort { System::DirectoryServices::SortOption ^ get(); void set(System::DirectoryServices::SortOption ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ComponentModel.ExpandableObjectConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSSort")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.SortOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant la propriété sur laquelle les résultats sont stockés.</summary>
        <value>Objet <see cref="T:System.DirectoryServices.SortOption" /> qui spécifie la propriété et l'ordre selon lesquels les résultats de la recherche doivent être triés.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">La valeur de la propriété est <see langword="null" /> (Nothing en Visual Basic).</exception>
        <altmember cref="T:System.DirectoryServices.SortOption" />
      </Docs>
    </Member>
    <Member MemberName="Tombstone">
      <MemberSignature Language="C#" Value="public bool Tombstone { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Tombstone" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.Tombstone" />
      <MemberSignature Language="VB.NET" Value="Public Property Tombstone As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Tombstone { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSTombstone")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant si la recherche doit également retourner les objets supprimés qui correspondent au filtre de recherche.</summary>
        <value>
          <see langword="true" /> si les objets supprimés doivent être inclus dans la recherche ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple c# suivant montre comment définir la <xref:System.DirectoryServices.DirectorySearcher.Tombstone%2A> propriété `true`.  
  
```csharp  
using System.DirectoryServices;  
...  
// Create a DirectorySearcher object.  
DirectorySearcher src = new DirectorySearcher("(isDeleted=true)");  
//Set the Tombstone property to true.  
src.Tombstone = true;  
//Use the FindAll method to get search results.  
SearchResultCollection res = src.FindAll();  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualListView">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.DirectoryVirtualListView VirtualListView { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.DirectoryVirtualListView VirtualListView" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.DirectorySearcher.VirtualListView" />
      <MemberSignature Language="VB.NET" Value="Public Property VirtualListView As DirectoryVirtualListView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::DirectoryVirtualListView ^ VirtualListView { System::DirectoryServices::DirectoryVirtualListView ^ get(); void set(System::DirectoryServices::DirectoryVirtualListView ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.DirectoryServices.DSDescription("DSVirtualListView")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.DirectoryVirtualListView</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant les options de vue de liste virtuelle de la recherche.</summary>
        <value>Objet <see cref="T:System.DirectoryServices.DirectoryVirtualListView" /> qui contient les informations sur la recherche de vue de liste virtuelle. La valeur par défaut de cette propriété est <see langword="null" />, ce qui signifie que les options de recherche de vue de liste virtuelle ne doivent pas être utilisées.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.DirectoryServices.DirectoryVirtualListView" />
      </Docs>
    </Member>
  </Members>
</Type>