<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SchemaNameCollection.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54514be67400cc3ee435685c6c4a0dc358cb78ef2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4514be67400cc3ee435685c6c4a0dc358cb78ef2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.DirectoryServices.SchemaNameCollection">
          <source>Contains a list of the schema names that the <ph id="ph1">&lt;see cref="P:System.DirectoryServices.DirectoryEntries.SchemaFilter" /&gt;</ph> property of a <ph id="ph2">&lt;see cref="T:System.DirectoryServices.DirectoryEntries" /&gt;</ph> object can use.</source>
          <target state="translated">Contient une liste des noms de schémas que la propriété <ph id="ph1">&lt;see cref="P:System.DirectoryServices.DirectoryEntries.SchemaFilter" /&gt;</ph> d'un objet <ph id="ph2">&lt;see cref="T:System.DirectoryServices.DirectoryEntries" /&gt;</ph> peut utiliser.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.Add(System.String)">
          <source>The schema name to add to this collection.</source>
          <target state="translated">Nom de schéma à ajouter à cette collection.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.Add(System.String)">
          <source>Appends a specified schema name to this collection.</source>
          <target state="translated">Ajoute un nom de schéma spécifié à cette collection.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.Add(System.String)">
          <source>The zero-based index of the specified property value.</source>
          <target state="translated">Index de base zéro de la valeur de propriété spécifiée.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.Add(System.String)">
          <source>If the object is not found, the return value is -1.</source>
          <target state="translated">Si l'objet est introuvable, la valeur de retour est -1.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)">
          <source>A <ph id="ph1">&lt;see cref="T:System.DirectoryServices.SchemaNameCollection" /&gt;</ph> that contains the schema names to add.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.DirectoryServices.SchemaNameCollection" /&gt;</ph> contenant les noms de schémas à ajouter.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.DirectoryServices.SchemaNameCollection)">
          <source>Appends a set of specified schema names to this collection.</source>
          <target state="translated">Ajoute un ensemble de noms de schéma spécifiés à cette collection.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the schema names to add.</source>
          <target state="translated">Tableau de type <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> qui contient les noms de schémas à ajouter.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.AddRange(System.String[])">
          <source>Appends a set of specified schema names to this collection.</source>
          <target state="translated">Ajoute un ensemble de noms de schéma spécifiés à cette collection.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.Clear">
          <source>Removes all objects from this collection.</source>
          <target state="translated">Supprime tous les objets de cette collection.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.Contains(System.String)">
          <source>The schema name to search for.</source>
          <target state="translated">Nom de schéma à rechercher.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.Contains(System.String)">
          <source>Determines whether this collection contains a specified schema name.</source>
          <target state="translated">Détermine si cette collection contient un nom de schéma spécifié.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.Contains(System.String)">
          <source>The return value is <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified property belongs to this collection; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">La valeur de retour est <ph id="ph1">&lt;see langword="true" /&gt;</ph> si la propriété spécifiée appartient à cette collection ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.CopyTo(System.String[],System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that receives this collection's schema names.</source>
          <target state="translated">Tableau de type <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> recevant les noms de schémas de cette collection.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.CopyTo(System.String[],System.Int32)">
          <source>The zero-based array index at which to begin copying the schema names.</source>
          <target state="translated">Index de tableau de base zéro à partir duquel commencer la copie des noms de schémas.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.CopyTo(System.String[],System.Int32)">
          <source>Copies the schema names from this collection to an array, starting at a particular index of the array.</source>
          <target state="translated">Copie les noms de schémas de cette collection dans un tableau, en commençant à un index particulier du tableau.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SchemaNameCollection.Count">
          <source>The <ph id="ph1">&lt;see cref="P:System.DirectoryServices.SchemaNameCollection.Count" /&gt;</ph> property gets the number of objects in this collection.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;see cref="P:System.DirectoryServices.SchemaNameCollection.Count" /&gt;</ph> obtient le nombre d'objets de cette collection.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.Count">
          <source>The number of objects in this collection.</source>
          <target state="translated">Nombre d'objets de cette collection.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.GetEnumerator">
          <source>Returns an enumerator that you can use to iterate through this collection.</source>
          <target state="translated">Retourne un énumérateur que vous pouvez utiliser pour itérer au sein de cette collection.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.GetEnumerator">
          <source>An enumerator that you can used to iterate through this collection.</source>
          <target state="translated">Énumérateur que vous pouvez utiliser pour itérer au sein de cette collection.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.IndexOf(System.String)">
          <source>The schema name to search for.</source>
          <target state="translated">Nom de schéma à rechercher.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.IndexOf(System.String)">
          <source>Determines the index of a specified schema name in this collection.</source>
          <target state="translated">Détermine l'index d'un nom de schéma spécifié dans cette collection.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.IndexOf(System.String)">
          <source>The zero-based index of the specified schema name, or -1 if the schema name was not found in the collection.</source>
          <target state="translated">Index de base zéro du nom de schéma spécifié, ou -1 si le nom de schéma est introuvable dans la collection.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)">
          <source>The zero-based index into the collection at which to insert the schema name.</source>
          <target state="translated">Index de base zéro dans la collection auquel insérer le nom de schéma.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)">
          <source>The schema name to insert into this collection.</source>
          <target state="translated">Nom de schéma à insérer dans cette collection.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)">
          <source>Inserts a schema name into this collection at a specified index.</source>
          <target state="translated">Insère un nom de schéma dans cette collection, à un index spécifié.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SchemaNameCollection.Insert(System.Int32,System.String)">
          <source>If the <ph id="ph1">`index`</ph> parameter equals the number of items in the collection, this method appends the value to the end of the collection.</source>
          <target state="translated">Si le <ph id="ph1">`index`</ph> paramètre est égal au nombre d’éléments dans la collection, cette méthode ajoute la valeur à la fin de la collection.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SchemaNameCollection.Item(System.Int32)">
          <source>The zero-based index into the collection.</source>
          <target state="translated">Index de base zéro dans la collection.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SchemaNameCollection.Item(System.Int32)">
          <source>Gets or sets the object that exists at a specified index.</source>
          <target state="translated">Obtient ou définit l'objet existant au niveau de l'index spécifié.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.Item(System.Int32)">
          <source>The object that exists at the specified index.</source>
          <target state="translated">Objet qui existe à l'index spécifié.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.Item(System.Int32)">
          <source>In C#, this property is the indexer for the <ph id="ph1">&lt;xref:System.DirectoryServices.SchemaNameCollection&gt;</ph> class.</source>
          <target state="translated">En C#, cette propriété est l'indexeur correspondant à la classe <ph id="ph1">&lt;xref:System.DirectoryServices.SchemaNameCollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.Item(System.Int32)">
          <source>In JScript, you can use the default indexed properties defined by a type, but you cannot explicitly define your own.</source>
          <target state="translated">En JScript, vous pouvez utiliser les propriétés indexées par défaut définies par un type, mais vous ne pouvez pas définir les vôtres explicitement.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.Item(System.Int32)">
          <source>However, specifying the expando attribute on a class automatically provides a default indexed property whose type is Object and whose index type is <ph id="ph1">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">Toutefois, la spécification de l’attribut expando sur une classe automatiquement fournit une valeur par défaut dont le type est l’objet et le type d’index est le propriété indexée <ph id="ph1">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.Remove(System.String)">
          <source>The schema name to remove.</source>
          <target state="translated">Nom de schéma à supprimer.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.Remove(System.String)">
          <source>Removes a specified schema name from this collection.</source>
          <target state="translated">Supprime de cette collection un nom de schéma spécifié.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.RemoveAt(System.Int32)">
          <source>The zero-based index of the schema name to remove.</source>
          <target state="translated">Index de base zéro du nom de schéma à supprimer.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.RemoveAt(System.Int32)">
          <source>Removes the schema name that is at a specified index from this collection.</source>
          <target state="translated">Supprime de cette collection le nom de schéma à un index spécifié.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.RemoveAt(System.Int32)">
          <source>The zero-based index is either less than zero or equal to the size of the collection.</source>
          <target state="translated">L'index de base zéro est soit inférieur à zéro, soit égal à la taille de la collection.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> that is the destination of the elements copied from <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> unidimensionnel qui constitue la destination des éléments copiés à partir de <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> must have zero-based indexing.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Array" /&gt;</ph> doit avoir une indexation de base zéro.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Index de base zéro dans un <bpt id="p1">&lt;c&gt;</bpt>tableau<ept id="p1">&lt;/c&gt;</ept> auquel commencer la copie.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies the elements of the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, starting at a particular <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph> index.</source>
          <target state="translated">Copie les éléments de <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> dans <ph id="ph2">&lt;see cref="T:System.Array" /&gt;</ph>, à partir d'un index particulier de <ph id="ph3">&lt;see cref="T:System.Array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multidimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> est multidimensionnel.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is greater than the available space from <ph id="ph2">&lt;paramref name="index" /&gt;</ph> to the end of the destination <ph id="ph3">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Le nombre d’éléments dans le <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> source est supérieur à la quantité d’espace disponible entre <ph id="ph2">&lt;paramref name="index" /&gt;</ph> et la fin du <ph id="ph3">&lt;paramref name="array" /&gt;</ph> de destination.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> cannot be cast automatically to the type of the destination <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">Le type du <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> source ne peut pas être converti automatiquement en type du <ph id="ph2">&lt;paramref name="array" /&gt;</ph> de destination.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe).</source>
          <target state="translated">Obtient une valeur indiquant si l'accès à <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> est synchronisé (thread-safe).</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if access to the <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized (thread safe); otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'accès à <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> est synchronisé (thread-safe) ; sinon <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized">
          <source><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> returns an object, which can be used to synchronize access to the <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> retourne un objet qui peut être utilisé pour synchroniser l'accès à <ph id="ph2">&lt;xref:System.Collections.ICollection&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized">
          <source>Most collection classes in the <ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph> namespace also implement a Synchronized method, which provides a synchronized wrapper around the underlying collection.</source>
          <target state="translated">Collection de la plupart des classes dans le <ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph> espace de noms implémentent également une méthode synchronisée qui fournit un wrapper synchronisé autour de la collection sous-jacente.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized">
          <source>[Visual Basic, C#]</source>
          <target state="translated">(Visual Basic, c#)</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#IsSynchronized">
          <source>The following example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> during the entire enumeration:</source>
          <target state="translated">L’exemple suivant montre comment verrouiller la collection à l’aide de la <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> pendant l’énumération entière :</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Obtient un objet qui peut être utilisé pour synchroniser l'accès à <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>An object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Objet qui peut être utilisé pour synchroniser l'accès à <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>For collections with an underlying store is not publicly available, the expected implementation is to return the current instance.</source>
          <target state="translated">Pour les collections dont le magasin n’est pas disponible publiquement, l’implémentation attendue est de retourner l’instance actuelle.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>Note that the pointer to the current instance might not be sufficient for collections that wrap other collections; those should return the underlying collection's <ph id="ph1">`SyncRoot`</ph> property.</source>
          <target state="translated">Notez que le pointeur vers l’instance actuelle peut ne pas suffire pour les collections qui renvoient à d’autres collections ; celles-ci doivent retourner la collection sous-jacente <ph id="ph1">`SyncRoot`</ph> propriété.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>Most collection classes in the <ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph> namespace also implement a <ph id="ph2">`Synchronized`</ph> method, which provides a synchronized wrapper around the underlying collection.</source>
          <target state="translated">La plupart des classes de collection dans l'espace de noms <ph id="ph1">&lt;xref:System.Collections?displayProperty=nameWithType&gt;</ph> implémentent également une méthode <ph id="ph2">`Synchronized`</ph> qui fournit un wrapper synchronisé autour de la collection sous-jacente.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>However, derived classes can provide their own synchronized version of the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> property.</source>
          <target state="translated">Cependant, les classes dérivées peuvent produire leur propre version synchronisée de la collection à l'aide de la propriété <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>The synchronizing code must perform operations on the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> of the collection, not directly on the collection.</source>
          <target state="translated">Le code de synchronisation doit effectuer les opérations sur les <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> de la collection, et non directement sur la collection.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>This ensures proper operation of collections that are derived from other objects.</source>
          <target state="translated">Cela garantit un bon fonctionnement des collections dérivées d'autres objets.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection instance.</source>
          <target state="translated">Plus particulièrement, la synchronisation est assurée avec les autres threads qui pourraient modifier simultanément l’instance de la collection.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>In the absence of a <ph id="ph1">`Synchronized`</ph> method on a collection, the expected usage for <ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> looks like this:</source>
          <target state="translated">En l’absence d’un <ph id="ph1">`Synchronized`</ph> méthode sur une collection, l’utilisation attendue pour <ph id="ph2">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> ressemble à ceci :</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>Enumerating through a collection is intrinsically not a thread-safe procedure.</source>
          <target state="translated">L’énumération d’une collection n’est intrinsèquement pas une procédure thread-safe.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</source>
          <target state="translated">Même lorsqu'une collection est synchronisée, les autres threads peuvent toujours la modifier, ce qui entraîne la levée d'une exception par l'énumérateur.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</source>
          <target state="translated">Pour garantir la sécurité des threads au cours de l’énumération, vous pouvez verrouiller la collection pendant l’ensemble de l’énumération ou bien intercepter les exceptions résultant des modifications apportées par les autres threads.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>[Visual Basic, C#]</source>
          <target state="translated">(Visual Basic, c#)</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#ICollection#SyncRoot">
          <source>The following example shows how to lock the collection using the <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> during the entire enumeration:</source>
          <target state="translated">L’exemple suivant montre comment verrouiller la collection à l’aide de la <ph id="ph1">&lt;xref:System.Collections.ICollection.SyncRoot%2A&gt;</ph> pendant l’énumération entière :</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Add(System.Object)">
          <source>The item to add to the list.</source>
          <target state="translated">Élément à ajouter à la liste.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Add(System.Object)">
          <source>Adds an item to the list.</source>
          <target state="translated">Ajoute un élément à la liste.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Add(System.Object)">
          <source>The position into which the new item was inserted.</source>
          <target state="translated">Position à laquelle le nouvel élément a été inséré.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)">
          <source>The value to locate in the list.</source>
          <target state="translated">Valeur à localiser dans la liste.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)">
          <source>Determines whether the list contains a specified value.</source>
          <target state="translated">Détermine si la liste contient une valeur spécifiée.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value is found in the list, otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la valeur existe dans la liste ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the Equals and CompareTo methods of the objects in the collection to determine whether item exists.</source>
          <target state="translated">À compter de .NET Framework 2.0, cette méthode utilise égal CompareTo les méthodes et des objets dans la collection pour déterminer quel élément existe.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Contains(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the Equals and CompareTo methods of the item parameter on the objects in the collection.</source>
          <target state="translated">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de Equals et CompareTo méthodes du paramètre d’article sur les objets dans la collection.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)">
          <source>The item to locate in the list.</source>
          <target state="translated">Élément à situer dans la liste.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)">
          <source>Determines the index of a specified item in the list.</source>
          <target state="translated">Détermine l'index d'un élément spécifié dans la liste.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)">
          <source>The index of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> if found in the list; otherwise, -1.</source>
          <target state="translated">Index de <ph id="ph1">&lt;paramref name="value" /&gt;</ph> s'il figure dans la liste ; sinon, -1.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)">
          <source>Starting with the .NET Framework 2.0, this method uses the Equals and CompareTo methods of the objects in the collection to determine whether item exists.</source>
          <target state="translated">À compter de .NET Framework 2.0, cette méthode utilise égal CompareTo les méthodes et des objets dans la collection pour déterminer quel élément existe.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IndexOf(System.Object)">
          <source>In the earlier versions of the .NET Framework, this determination was made by using the Equals and CompareTo methods of the item parameter on the objects in the collection.</source>
          <target state="translated">Dans les versions antérieures du .NET Framework, cette détermination était effectuée à l’aide de Equals et CompareTo méthodes du paramètre d’article sur les objets dans la collection.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The zero-based index at which value should be inserted.</source>
          <target state="translated">Index de base zéro auquel la valeur doit être insérée.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>The item to insert into the list.</source>
          <target state="translated">Élément à insérer dans la liste.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>Inserts an item to the list at the specified index.</source>
          <target state="translated">Insère un élément dans la liste à l’index spécifié.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>If <ph id="ph1">`index`</ph> equals the number of items in the list, then <bpt id="p1">*</bpt>value<ept id="p1">*</ept> is appended to the end.</source>
          <target state="translated">Si <ph id="ph1">`index`</ph> égale le nombre d’éléments dans la liste, puis <bpt id="p1">*</bpt>valeur<ept id="p1">*</ept> est ajouté à la fin.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">Dans des collections d’éléments contigus, telles que les listes, les éléments qui suivent l’élément supprimé remontent pour occuper l’espace libéré.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Insert(System.Int32,System.Object)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Si la collection est indexée, les index des éléments déplacés sont également mis à jour.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsFixedSize">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> has a fixed size.</source>
          <target state="translated">Obtient une valeur indiquant si <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> est de taille fixe.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsFixedSize">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> has a fixed size; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> est de taille fixe ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsFixedSize">
          <source>A collection with a fixed size does not allow the addition or removal of elements after the collection is created, but it allows the modification of existing elements.</source>
          <target state="translated">Une collection de taille fixe ne permet pas l’ajout ou la suppression d’éléments après sa création, mais permet la modification des éléments existants.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsReadOnly">
          <source>Gets a value indicating whether the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> is read-only.</source>
          <target state="translated">Obtient une valeur indiquant si <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> est en lecture seule.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsReadOnly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> is read-only; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph> est en lecture seule ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#IsReadOnly">
          <source>A collection that is read-only does not allow the addition, removal, or modification of elements after the collection is created.</source>
          <target state="translated">Une collection en lecture seule n’autorise pas l’ajout, la suppression ou la modification d’éléments après sa création.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)">
          <source>The zero-based index of the element to get or set.</source>
          <target state="translated">Index de base zéro de l'élément à obtenir ou à définir.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)">
          <source>Gets or sets the element at the specified index.</source>
          <target state="translated">Obtient ou définit l'élément au niveau de l'index spécifié.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)">
          <source>The element at the specified index.</source>
          <target state="translated">Élément au niveau de l'index spécifié.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)">
          <source>This property provides the ability to access a specific element in the collection by using the following syntax: <ph id="ph1">`myCollection[index]`</ph>.</source>
          <target state="translated">Cette propriété permet d'accéder à un élément spécifique de la collection à l'aide de la syntaxe suivante : <ph id="ph1">`myCollection[index]`</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is not a valid index in the <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> n'est pas un index valide dans <ph id="ph2">&lt;see cref="T:System.Collections.IList" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="P:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Item(System.Int32)">
          <source>The property is set and the <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> is read-only.</source>
          <target state="translated">La propriété est définie et <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> est en lecture seule.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)">
          <source>The <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> to remove from the list.</source>
          <target state="translated">Valeur <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept> à supprimer de la liste.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)">
          <source>Removes the first occurrence of a specific <ph id="ph1">&lt;paramref name="value" /&gt;</ph> from the list.</source>
          <target state="translated">Supprime la première occurrence d'un <ph id="ph1">&lt;paramref name="value" /&gt;</ph> spécifique de la liste.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)">
          <source>In collections of contiguous elements, such as lists, the elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">Dans des collections d’éléments contigus, telles que les listes, les éléments qui suivent l’élément supprimé remontent pour occuper l’espace libéré.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.DirectoryServices.SchemaNameCollection.System#Collections#IList#Remove(System.Object)">
          <source>If the collection is indexed, the indexes of the elements that are moved are also updated.</source>
          <target state="translated">Si la collection est indexée, les index des éléments déplacés sont également mis à jour.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>