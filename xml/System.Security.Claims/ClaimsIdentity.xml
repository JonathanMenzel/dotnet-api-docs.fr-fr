<Type Name="ClaimsIdentity" FullName="System.Security.Claims.ClaimsIdentity">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3e406028690f68a7525afcb487cd6aa41086c0ab" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30490793" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClaimsIdentity : System.Security.Principal.IIdentity" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ClaimsIdentity extends System.Object implements class System.Security.Principal.IIdentity" />
  <TypeSignature Language="DocId" Value="T:System.Security.Claims.ClaimsIdentity" />
  <TypeSignature Language="VB.NET" Value="Public Class ClaimsIdentity&#xA;Implements IIdentity" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClaimsIdentity : System::Security::Principal::IIdentity" />
  <AssemblyInfo>
    <AssemblyName>System.Security.Claims</AssemblyName>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Security.Principal.IIdentity</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente une identité basée sur des revendications.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.Security.Claims.ClaimsIdentity> classe est une implémentation concrète d’une identité basée sur les revendications ; autrement dit, une identité décrite par une collection de revendications. Une revendication est une instruction sur une entité effectuée par un émetteur qui décrit une propriété, à droite, ou certaines autres qualité de cette entité. Une telle entité est dite devant faire l’objet de la revendication. Une revendication est représentée par la <xref:System.Security.Claims.Claim> classe. Les revendications contenues dans un <xref:System.Security.Claims.ClaimsIdentity> décrivent l’entité représentant l’identité correspondante et peut être utilisé pour prendre des décisions d’autorisation et d’authentification. Un modèle d’accès basé sur les revendications présente de nombreux avantages sur les modèles d’accès plus classiques qui reposent exclusivement sur des rôles. Par exemple, les revendications peuvent fournir plus d’informations plus détaillées sur l’identité qu’ils représentent et peuvent être évaluées pour l’authentification ou d’autorisation d’une manière beaucoup plus spécifique.  
  
 À compter de .NET Framework 4.5, Windows Identity Foundation (WIF) et l’identité basée sur les revendications ont été entièrement intégrées dans le .NET Framework. Cela signifie que de nombreuses classes qui représentent une identité dans le .NET Framework maintenant dérivent <xref:System.Security.Claims.ClaimsIdentity> et une description de leurs propriétés dans une collection de revendications. Cela est différent des versions précédentes du .NET Framework, dans lequel, ces classes implémentés la <xref:System.Security.Principal.IIdentity> interface directement. La collection de revendications qui décrivent l’identité est accessible via la <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> propriété. La <xref:System.Security.Claims.ClaimsIdentity> classe fournit plusieurs méthodes de recherche et modification des revendications et prend totalement en charge les requêtes en langage intégré (LINQ). Dans le code d’application, <xref:System.Security.Claims.ClaimsIdentity> objets sont généralement accessibles via <xref:System.Security.Claims.ClaimsPrincipal> objets ; par exemple, l’entité de sécurité renvoyé par <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Le <xref:System.Security.Claims.ClaimsPrincipal> classe a un <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> propriété également. Dans la plupart des cas, vous devez accéder à des revendications de l’utilisateur à travers le <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=nameWithType> collection plutôt que dans le <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection. Vous devez accéder aux revendications d’un individu <xref:System.Security.Claims.ClaimsIdentity> uniquement dans les cas où le principal contient plusieurs <xref:System.Security.Claims.ClaimsIdentity> et vous avez besoin évaluer ou de modifier une identité spécifique.  
  
> [!IMPORTANT]
>  Pour ajouter ou supprimer des revendications à partir de la <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection, un appelant doit avoir une confiance totale.  
  
 Dans le modèle basé sur les revendications, le <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> propriété et la <xref:System.Security.Principal.IPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType> méthode sont implémentés en évaluant les revendications contenues dans une identité. Les implémentations de base dans le modèle basé sur les revendications sont fournies par le <xref:System.Security.Claims.ClaimsIdentity.Name%2A?displayProperty=nameWithType> propriété et la <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A?displayProperty=nameWithType> (méthode). Le <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> et <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> propriétés vous permettent de spécifier un type de revendication qui doit être utilisé pour évaluer les revendications contenues par l’identité lorsque vous effectuez ces opérations.  
  
 Scénarios de délégation sont pris en charge par le biais du <xref:System.Security.Claims.ClaimsIdentity.Actor%2A> et <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> propriétés.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Security.Claims.Claim" />
    <altmember cref="T:System.Security.Claims.ClaimsPrincipal" />
    <altmember cref="T:System.Security.Principal.GenericIdentity" />
    <altmember cref="T:System.Security.Principal.WindowsIdentity" />
    <altmember cref="T:System.Web.Security.FormsIdentity" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Claims.ClaimsIdentity" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Claims.ClaimsIdentity" /> avec une collection de revendications vides.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant indique les valeurs initiales des propriétés d'une instance de la classe <xref:System.Security.Claims.ClaimsIdentity>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Une collection vide.|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|**Remarque :** lors de l’accès, la valeur de la <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> propriété est renvoyée en fonction de la valeur de la <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> propriété.|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|**Remarque :** lors de l’accès, la valeur de la <xref:System.Security.Claims.ClaimsIdentity.Name%2A> propriété est retournée selon le <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> et <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claims As IEnumerable(Of Claim))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="claims">Revendications servant à renseigner l'identité basée sur les revendications.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Claims.ClaimsIdentity" /> avec une collection énumérée d'objets <see cref="T:System.Security.Claims.Claim" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant indique les valeurs initiales des propriétés d'une instance de la classe <xref:System.Security.Claims.ClaimsIdentity>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Initialisé à partir de la `claims` paramètre.|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|**Remarque :** lors de l’accès, la valeur de la <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> propriété est renvoyée en fonction de la valeur de la <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> propriété.|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|**Remarque :** lors de l’accès, la valeur de la <xref:System.Security.Claims.ClaimsIdentity.Name%2A> propriété est retournée selon le <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> et <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (reader As BinaryReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::IO::BinaryReader ^ reader);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see cref="T:System.IO.BinaryReader" /> qui pointe vers un <see cref="T:System.Security.Claims.ClaimsIdentity" />.</param>
        <summary>Initialise une instance de la classe <see cref="T:System.Security.Claims.ClaimsIdentity" /> avec le <see cref="T:System.IO.BinaryReader" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Normalement, le lecteur est construit à partir de les octets renvoyés par <xref:System.Security.Claims.ClaimsIdentity.WriteTo%2A>. 
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClaimsIdentity (System.Runtime.Serialization.SerializationInfo info);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ClaimsIdentity(System::Runtime::Serialization::SerializationInfo ^ info);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
      </Parameters>
      <Docs>
        <param name="info">Données sérialisées.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Claims.ClaimsIdentity" /> à partir du flux sérialisé créé à l’aide de <see cref="T:System.Runtime.Serialization.ISerializable" />.</summary>
        <remarks></remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiert une confiance totale pour l’appelant immédiat. Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClaimsIdentity (System.Security.Claims.ClaimsIdentity other);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsIdentity other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Claims.ClaimsIdentity)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (other As ClaimsIdentity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ClaimsIdentity(System::Security::Claims::ClaimsIdentity ^ other);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="other" Type="System.Security.Claims.ClaimsIdentity" />
      </Parameters>
      <Docs>
        <param name="other">
          <see cref="T:System.Security.Claims.ClaimsIdentity" /> à copier.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Claims.ClaimsIdentity" /> à partir d’une instance <see cref="T:System.Security.Claims.ClaimsIdentity" /> existante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant montre les assignations de valeur de propriété d’une instance de la <xref:System.Security.Claims.ClaimsIdentity> classe à partir de la <xref:System.Security.Claims.ClaimsIdentity> fournie au constructeur.  
  
| Property | Value |
| -------- | ----- |
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|Si la valeur de la `other.Actor` propriété n’est pas `null`, le `other.Actor` <xref:System.Security.Claims.ClaimsIdentity> est cloné et affectée ; sinon, `null`.|
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|La valeur de la propriété `other.AuthenticationType`.|
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|La valeur de la propriété `other.BootstrapContext`.|
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Le `List<Claim>` de revendications, le cas échéant, dans le `other.Claims` propriété.|
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|La valeur de la propriété `other.Label`.|
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|La valeur de la propriété `other.NameClaimType`.|
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|La valeur de la propriété `other.RoleClaimType`.|
|<xref:System.Security.Claims.ClaimsIdentity.CustomSerializationData%2A>|Si `other.CustomSerializationData` n’est pas `null`, `other.CustomSerializationData` est cloné et affectée ; sinon, `null`.|
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="other" /> a la valeur **null**.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Security::Principal::IIdentity ^ identity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="identity">Identité sur laquelle baser l'identité de la nouvelle revendication.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Claims.ClaimsIdentity" /> à l'aide du nom et du type d'authentification du <see cref="T:System.Security.Principal.IIdentity" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant indique les valeurs initiales des propriétés d'une instance de la classe <xref:System.Security.Claims.ClaimsIdentity>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|Si `identity` ne peut être assigné à partir de <xref:System.Security.Claims.ClaimsIdentity>, la valeur de la `identity.Actor` propriété ; sinon, `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|La valeur de la `identity.AuthenticationType` (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>) propriété est utilisée.|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|Si `identity` ne peut être assigné à partir de <xref:System.Security.Claims.ClaimsIdentity>, la valeur de la `identity.BootStrapContext` propriété ; sinon, `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Si `identity` ne peut être assigné à partir de <xref:System.Security.Claims.ClaimsIdentity>, les revendications à partir de `identity` sont ajoutées à la nouvelle instance ; sinon, une collection vide.|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|**Remarque :** lors de l’accès, la valeur de la <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> propriété est renvoyée en fonction de la valeur de la <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> propriété.|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|Si `identity` ne peut être assigné à partir de <xref:System.Security.Claims.ClaimsIdentity>, la valeur de la `identity.Label` propriété ; sinon, `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|Si `identity` n’est pas attribuable à partir de <xref:System.Security.Claims.ClaimsIdentity>, n’est pas `null`et a une <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> propriété n’est pas `null`; une revendication de nom est ajoutée à la nouvelle instance à l’aide de la valeur de la <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> propriété. **Remarque :** lors de l’accès, la valeur de la <xref:System.Security.Claims.ClaimsIdentity.Name%2A> propriété est retournée selon le <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> et <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|Si `identity` ne peut être assigné à partir de <xref:System.Security.Claims.ClaimsIdentity>, la valeur de la `identity.NameClaimType` propriété est utilisée ; sinon, <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> est utilisé.|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|Si `identity` ne peut être assigné à partir de <xref:System.Security.Claims.ClaimsIdentity>, la valeur de la `identity.RoleClaimType` propriété est utilisée ; sinon, <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> est utilisé.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (authenticationType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::String ^ authenticationType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="authenticationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationType">Type d'authentification utilisé.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Claims.ClaimsIdentity" /> avec une collection de revendications vides et le type d'authentification spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant indique les valeurs initiales des propriétés d'une instance de la classe <xref:System.Security.Claims.ClaimsIdentity>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|Valeur du paramètre `authenticationType`. Si le `authenticationType` paramètre est `null` ou une chaîne vide, la propriété est définie `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Collection vide.|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|**Remarque :** lors de l’accès, la valeur de la <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> propriété est renvoyée en fonction de la valeur de la <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> propriété.|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|**Remarque :** lors de l’accès, la valeur de la <xref:System.Security.Claims.ClaimsIdentity.Name%2A> propriété est retournée selon le <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> et <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims, string authenticationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims, string authenticationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claims As IEnumerable(Of Claim), authenticationType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims, System::String ^ authenticationType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
        <Parameter Name="authenticationType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="claims">Revendications servant à renseigner l'identité basée sur les revendications.</param>
        <param name="authenticationType">Type d'authentification utilisé.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Claims.ClaimsIdentity" /> avec les revendications et le type d'authentification spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant indique les valeurs initiales des propriétés d'une instance de la classe <xref:System.Security.Claims.ClaimsIdentity>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|Valeur du paramètre `authenticationType`. Si le `authenticationType` paramètre est `null` ou une chaîne vide, la propriété est définie `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Initialisé à partir de la `claims` paramètre.|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|**Remarque :** lors de l’accès, la valeur de la <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> propriété est renvoyée en fonction de la valeur de la <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> propriété.|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|**Remarque :** lors de l’accès, la valeur de la <xref:System.Security.Claims.ClaimsIdentity.Name%2A> propriété est retournée selon le <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> et <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|<xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|<xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ClaimsIdentity (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ClaimsIdentity(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Données sérialisées.</param>
        <param name="context">Contexte de la sérialisation.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Claims.ClaimsIdentity" /> à partir du flux sérialisé créé à l’aide de <see cref="T:System.Runtime.Serialization.ISerializable" />.</summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="info" /> a la valeur **null**.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiert une confiance totale pour l’appelant immédiat. Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Security.Principal.IIdentity identity, System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity, claims As IEnumerable(Of Claim))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Security::Principal::IIdentity ^ identity, System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="identity">Identité sur laquelle baser l'identité de la nouvelle revendication.</param>
        <param name="claims">Revendications servant à renseigner l'identité basée sur les revendications.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Claims.ClaimsIdentity" /> à l'aide des revendications spécifiées et du <see cref="T:System.Security.Principal.IIdentity" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant indique les valeurs initiales des propriétés d'une instance de la classe <xref:System.Security.Claims.ClaimsIdentity>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|Si `identity` ne peut être assigné à partir de <xref:System.Security.Claims.ClaimsIdentity>, la valeur de la `identity.Actor` propriété ; sinon, `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|Paramètre `authenticationType`. Si le `authenticationType` paramètre est `null` ou une chaîne vide, la valeur de la `identity.AuthenticationType` (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>) propriété est utilisée.|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|Si `identity` ne peut être assigné à partir de <xref:System.Security.Claims.ClaimsIdentity>, la valeur de la `identity.BootStrapContext` propriété ; sinon, `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Initialisé à partir de la `claims` paramètre. Si `identity` ne peut être assigné à partir de <xref:System.Security.Claims.ClaimsIdentity>, les revendications à partir de `identity` sont ajoutés à la nouvelle instance avant celles spécifiées par le `claims` paramètre.|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|**Remarque :** lors de l’accès, la valeur de la <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> propriété est renvoyée en fonction de la valeur de la <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> propriété.|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|Si `identity` ne peut être assigné à partir de <xref:System.Security.Claims.ClaimsIdentity>, la valeur de la `identity.Label` propriété ; sinon, `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|Si `identity` n’est pas attribuable à partir de <xref:System.Security.Claims.ClaimsIdentity>, n’est pas `null`et a une <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> propriété n’est pas `null`; une revendication de nom est ajoutée à la nouvelle instance à l’aide de la valeur de la <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> propriété. **Remarque :** lors de l’accès, la valeur de la <xref:System.Security.Claims.ClaimsIdentity.Name%2A> propriété est retournée selon le <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> et <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|Si `identity` ne peut être assigné à partir de <xref:System.Security.Claims.ClaimsIdentity>, la valeur de la `identity.NameClaimType` propriété est utilisée ; sinon, <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> est utilisé.|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|Si `identity` ne peut être assigné à partir de <xref:System.Security.Claims.ClaimsIdentity>, la valeur de la `identity.RoleClaimType` propriété est utilisée ; sinon, <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> est utilisé.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (string authenticationType, string nameType, string roleType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string authenticationType, string nameType, string roleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (authenticationType As String, nameType As String, roleType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::String ^ authenticationType, System::String ^ nameType, System::String ^ roleType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="nameType" Type="System.String" />
        <Parameter Name="roleType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="authenticationType">Type d'authentification utilisé.</param>
        <param name="nameType">Type de revendication à utiliser pour les revendications de nom.</param>
        <param name="roleType">Type de revendication à utiliser pour les revendications de rôle.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Claims.ClaimsIdentity" /> avec le type d'authentification, le type de revendication de nom et le type de réclamation de rôle spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant indique les valeurs initiales des propriétés d'une instance de la classe <xref:System.Security.Claims.ClaimsIdentity>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|Valeur du paramètre `authenticationType`. Si le `authenticationType` paramètre est `null` ou une chaîne vide, la propriété est définie `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Collection vide.|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|**Remarque :** lors de l’accès, la valeur de la <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> propriété est renvoyée en fonction de la valeur de la <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> propriété.|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|**Remarque :** lors de l’accès, la valeur de la <xref:System.Security.Claims.ClaimsIdentity.Name%2A> propriété est retournée selon le <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> et <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|Valeur du paramètre `nameType`. Si le `nameType` paramètre a la valeur null ou une chaîne vide, la propriété est définie <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|Valeur du paramètre `roleType`. Si le `roleType` paramètre a la valeur null ou une chaîne vide, la propriété est définie <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims, string authenticationType, string nameType, string roleType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims, string authenticationType, string nameType, string roleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (claims As IEnumerable(Of Claim), authenticationType As String, nameType As String, roleType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims, System::String ^ authenticationType, System::String ^ nameType, System::String ^ roleType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="nameType" Type="System.String" />
        <Parameter Name="roleType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="claims">Revendications servant à renseigner l'identité basée sur les revendications.</param>
        <param name="authenticationType">Type d'authentification utilisé.</param>
        <param name="nameType">Type de revendication à utiliser pour les revendications de nom.</param>
        <param name="roleType">Type de revendication à utiliser pour les revendications de rôle.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Claims.ClaimsIdentity" /> avec les revendications, le type d’authentification, le type de revendication de nom et le type de réclamation de rôle spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant indique les valeurs initiales des propriétés d'une instance de la classe <xref:System.Security.Claims.ClaimsIdentity>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|Valeur du paramètre `authenticationType`. Si le `authenticationType` paramètre est `null` ou une chaîne vide, la propriété est définie `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Initialisé à partir de la `claims` paramètre.|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|**Remarque :** lors de l’accès, la valeur de la <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> propriété est renvoyée en fonction de la valeur de la <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> propriété.|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|`null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|**Remarque :** lors de l’accès, la valeur de la <xref:System.Security.Claims.ClaimsIdentity.Name%2A> propriété est retournée selon le <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> et <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|Valeur du paramètre `nameType`. Toutefois, si le `nameType` paramètre est `null` ou une chaîne vide, la propriété est définie <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|Valeur du paramètre `roleClaimType`. Toutefois, si le `roleClaimType` paramètre est `null` ou une chaîne vide, la propriété est définie <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClaimsIdentity (System.Security.Principal.IIdentity identity, System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims, string authenticationType, string nameType, string roleType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity, class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims, string authenticationType, string nameType, string roleType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity, claims As IEnumerable(Of Claim), authenticationType As String, nameType As String, roleType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClaimsIdentity(System::Security::Principal::IIdentity ^ identity, System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims, System::String ^ authenticationType, System::String ^ nameType, System::String ^ roleType);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
        <Parameter Name="authenticationType" Type="System.String" />
        <Parameter Name="nameType" Type="System.String" />
        <Parameter Name="roleType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identity">Identité sur laquelle baser l'identité de la nouvelle revendication.</param>
        <param name="claims">Revendications servant à renseigner la nouvelle identité basée sur les revendications.</param>
        <param name="authenticationType">Type d'authentification utilisé.</param>
        <param name="nameType">Type de revendication à utiliser pour les revendications de nom.</param>
        <param name="roleType">Type de revendication à utiliser pour les revendications de rôle.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Claims.ClaimsIdentity" /> à partir de l'<see cref="T:System.Security.Principal.IIdentity" /> spécifiée à l'aide des revendications, du type d'authentification, du type de revendication de nom, et du ype de revendication de rôle spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant indique les valeurs initiales des propriétés d'une instance de la classe <xref:System.Security.Claims.ClaimsIdentity>.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.Security.Claims.ClaimsIdentity.Actor%2A>|Si `identity` ne peut être assigné à partir de <xref:System.Security.Claims.ClaimsIdentity>, la valeur de la `identity.Actor` propriété ; sinon, `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>|Paramètre `authenticationType`. Si le `authenticationType` paramètre est `null` ou une chaîne vide, la valeur de la `identity.AuthenticationType` (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=nameWithType>) propriété est utilisée.|  
|<xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>|Si `identity` ne peut être assigné à partir de <xref:System.Security.Claims.ClaimsIdentity>, la valeur de la `identity.BootStrapContext` propriété ; sinon, `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Claims%2A>|Initialisé à partir de la `claims` paramètre. Si `identity` ne peut être assigné à partir de <xref:System.Security.Claims.ClaimsIdentity>, les revendications à partir de `identity` sont ajoutés à la nouvelle instance avant celles spécifiées par le `claims` paramètre.|  
|<xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>|**Remarque :** lors de l’accès, la valeur de la <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> propriété est renvoyée en fonction de la valeur de la <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> propriété.|  
|<xref:System.Security.Claims.ClaimsIdentity.Label%2A>|Si `identity` ne peut être assigné à partir de <xref:System.Security.Claims.ClaimsIdentity>, la valeur de la `identity.Label` propriété ; sinon, `null`.|  
|<xref:System.Security.Claims.ClaimsIdentity.Name%2A>|Si `identity` n’est pas attribuable à partir de <xref:System.Security.Claims.ClaimsIdentity>, n’est pas `null`et a une <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> propriété n’est pas `null`; une revendication de nom est ajoutée à la nouvelle instance à l’aide de la valeur de la <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=nameWithType> propriété. **Remarque :** lors de l’accès, la valeur de la <xref:System.Security.Claims.ClaimsIdentity.Name%2A> propriété est retournée selon le <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> et <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.|  
|<xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>|Valeur du paramètre `nameType`. Toutefois, si la valeur de la `nameType` paramètre est `null` ou une chaîne vide et `identity` ne peut être assigné à partir de <xref:System.Security.Claims.ClaimsIdentity>, la valeur de la `identity.NameClaimType` propriété est utilisée ; sinon, <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> est utilisé.|  
|<xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>|Valeur du paramètre `roleClaimType`. Toutefois, si la valeur de la `roleClaimType` paramètre est `null` ou une chaîne vide et l’identité ne peut être assigné à partir de <xref:System.Security.Claims.ClaimsIdentity>, la valeur de la `identity.RoleClaimType` propriété est utilisée ; sinon, <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> est utilisé.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Actor">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsIdentity Actor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsIdentity Actor" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.Actor" />
      <MemberSignature Language="VB.NET" Value="Public Property Actor As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Claims::ClaimsIdentity ^ Actor { System::Security::Claims::ClaimsIdentity ^ get(); void set(System::Security::Claims::ClaimsIdentity ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'identité de la partie appelante s'est vue accordée des droits de délégation.</summary>
        <value>Partie appelante qui s'est vue accorder des droits de délégation.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une application peut accéder à la chaîne de délégation qui a conduit à l’appel en cours, en examinant de manière récursive le <xref:System.Security.Claims.ClaimsIdentity.Actor%2A> propriété. Le jeton au nom duquel l’appel est délégué est accessible via la <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Tentative d'affecter la propriété à l'instance actuelle se produit.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddClaim">
      <MemberSignature Language="C#" Value="public virtual void AddClaim (System.Security.Claims.Claim claim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddClaim(class System.Security.Claims.Claim claim) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddClaim(System::Security::Claims::Claim ^ claim);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claim" Type="System.Security.Claims.Claim" />
      </Parameters>
      <Docs>
        <param name="claim">Revendication à ajouter.</param>
        <summary>Ajoute une revendication unique à cette identité des revendications.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La revendication est examinée et si l’objet est différent de celui cette revendications d’identité, le <xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=nameWithType> méthode est appelée avec cette identité de revendications en tant que paramètre à créer une nouvelle revendication dont l’objet est correct.  
  
 Cette méthode a le `SecurityCritical` attribut appliqué au contrôle les entités peuvent ajouter des revendications à l’identité. Plus bas le canal, les décisions d’autorisation sont effectuées en fonction des revendications qui sont présentes dans le <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="claim" /> est <see langword="null" />.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiert une confiance totale pour l’appelant immédiat. Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</permission>
      </Docs>
    </Member>
    <Member MemberName="AddClaims">
      <MemberSignature Language="C#" Value="public virtual void AddClaims (System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; claims);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddClaims(class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; claims) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddClaims (claims As IEnumerable(Of Claim))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddClaims(System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ claims);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="claims">Revendications à ajouter.</param>
        <summary>Ajoute une liste de revendications à cette identité de revendications.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Chaque revendication est examinée et si l’objet est différent de celui cette revendications d’identité, le <xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=nameWithType> méthode est appelée avec cette identité de revendications en tant que paramètre à créer une nouvelle revendication dont l’objet est correct.  
  
 Cette méthode a le `SecurityCritical` attribut appliqué au contrôle les entités peuvent ajouter des revendications à l’identité. Plus bas le canal, les décisions d’autorisation sont effectuées en fonction des revendications qui sont présentes dans le <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="claims" /> est <see langword="null" />.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiert une confiance totale pour l’appelant immédiat. Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</permission>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public virtual string AuthenticationType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AuthenticationType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.AuthenticationType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le type d'authentification.</summary>
        <value>Type d'authentification.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En général, une des valeurs définies par le <xref:System.Security.Claims.AuthenticationTypes> classe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BootstrapContext">
      <MemberSignature Language="C#" Value="public object BootstrapContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BootstrapContext" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.BootstrapContext" />
      <MemberSignature Language="VB.NET" Value="Public Property BootstrapContext As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ BootstrapContext { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le jeton qui a été utilisé pour créer cette identité basée sur les revendications.</summary>
        <value>Contexte de démarrage.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’objet sous-jacent est une instance de la <xref:System.IdentityModel.Tokens.BootstrapContext?displayProperty=nameWithType> classe.  
  
 Définir le `saveBootstrapContext` attribut soit le [ &lt;identityConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/identityconfiguration.md) ou [ &lt;securityTokenHandlerConfiguration&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/securitytokenhandlerconfiguration.md) élément dans un fichier de configuration pour spécifier si le jeton utilisé pour générer le <xref:System.Security.Claims.ClaimsIdentity> doivent être conservées dans le <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> propriété.  
  
 Si le <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> propriété n’est pas `null`, les applications peuvent accéder au jeton d’origine et les revendications, il produit via les propriétés et méthodes de la <xref:System.IdentityModel.Tokens.BootstrapContext?displayProperty=nameWithType> classe.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">Opération de jeu requiert une confiance totale pour l’appelant immédiat. Ce membre ne peut pas être défini par le code de confiance partielle ou transparent.</permission>
        <altmember cref="P:System.Security.Claims.ClaimsIdentity.Actor" />
      </Docs>
    </Member>
    <Member MemberName="Claims">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; Claims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; Claims" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.Claims" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Claims As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ Claims { System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les revendications associées à cette identité basée sur les revendications.</summary>
        <value>Collection des revendications associées à cette identité basée sur les revendications.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La collection peut contenir des entrées qui sont `null`.  
  
 Les revendications contenues dans le <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection décrivent essentiellement l’entité représentée par le <xref:System.Security.Claims.ClaimsIdentity>. Les revendications décrivent les propriétés et les droits détenus par l’entité et peuvent être examinées par les applications pour prendre des décisions concernant l’authentification et l’autorisation.  
  
> [!NOTE]
>  Le <xref:System.Security.Claims.ClaimsPrincipal> classe a un <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> propriété également. Dans la plupart des cas, vous devez accéder à des revendications de l’utilisateur à travers le <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=nameWithType> collection plutôt que dans le <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection. Vous devez accéder aux revendications d’un individu <xref:System.Security.Claims.ClaimsIdentity> uniquement dans les cas où le principal contient plusieurs <xref:System.Security.Claims.ClaimsIdentity> et vous avez besoin évaluer ou de modifier une identité spécifique.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Claims.ClaimsPrincipal.Claims" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.ClaimsIdentity Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.ClaimsIdentity Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As ClaimsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::ClaimsIdentity ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsIdentity</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une nouvelle <see cref="T:System.Security.Claims.ClaimsIdentity" /> copiée à partir de cette identité basée sur les revendications.</summary>
        <returns>Copie de l'instance actuelle.</returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateClaim">
      <MemberSignature Language="C#" Value="protected virtual System.Security.Claims.Claim CreateClaim (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Security.Claims.Claim CreateClaim(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateClaim (reader As BinaryReader) As Claim" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Security::Claims::Claim ^ CreateClaim(System::IO::BinaryReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <see cref="T:System.IO.BinaryReader" /> qui pointe vers la revendication.</param>
        <summary>Fournit un point d’extensibilité pour les types dérivés afin de créer un <see cref="T:System.Security.Claims.Claim" /> personnalisé.</summary>
        <returns>Nouveau <see cref="T:System.Security.Claims.Claim" />.</returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="reader" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CustomSerializationData">
      <MemberSignature Language="C#" Value="protected virtual byte[] CustomSerializationData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] CustomSerializationData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.CustomSerializationData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CustomSerializationData As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property cli::array &lt;System::Byte&gt; ^ CustomSerializationData { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Contient les données supplémentaires fournies par un type dérivé. En règle générale, définie au moment de l’appel de <see cref="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" />.</summary>
        <value>A <see cref="T:System.Byte" /> tableau représentant supplémentaire des données sérialisées.</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultIssuer">
      <MemberSignature Language="C#" Value="public const string DefaultIssuer;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultIssuer" />
      <MemberSignature Language="DocId" Value="F:System.Security.Claims.ClaimsIdentity.DefaultIssuer" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultIssuer As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultIssuer;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Émetteur par défaut ; « LOCAL AUTHORITY ».</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultNameClaimType">
      <MemberSignature Language="C#" Value="public const string DefaultNameClaimType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultNameClaimType" />
      <MemberSignature Language="DocId" Value="F:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultNameClaimType As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultNameClaimType;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Type de revendication de nom par défaut ; <see cref="F:System.Security.Claims.ClaimTypes.Name" />.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRoleClaimType">
      <MemberSignature Language="C#" Value="public const string DefaultRoleClaimType;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultRoleClaimType" />
      <MemberSignature Language="DocId" Value="F:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultRoleClaimType As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultRoleClaimType;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Type de revendication de rôle par défaut ; <see cref="F:System.Security.Claims.ClaimTypes.Role" />.</summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindAll">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Récupère toutes les revendications qui correspondent à une condition spécifiée.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; FindAll (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; FindAll(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindAll (match As Predicate(Of Claim)) As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ FindAll(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match">Fonction qui exécute la logique de correspondance.</param>
        <summary>Récupère toutes les revendications trouvées par le prédicat spécifié.</summary>
        <returns>Revendications correspondantes. La liste est en lecture seule.</returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="match" /> a la valeur **null**.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindAll">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt; FindAll (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Security.Claims.Claim&gt; FindAll(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.FindAll(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindAll (type As String) As IEnumerable(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Security::Claims::Claim ^&gt; ^ FindAll(System::String ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Type de revendication auquel les revendications doivent correspondre.</param>
        <summary>Récupère toutes les revendications qui ont le type de revendication spécifié.</summary>
        <returns>Revendications correspondantes. La liste est en lecture seule.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La comparaison est effectuée à l’aide de cas ordinales sensibles sur `type`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> a la valeur **null**.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindFirst">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Récupère la première revendication qui correspond à une condition spécifiée.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.Claim FindFirst (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.Claim FindFirst(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindFirst (match As Predicate(Of Claim)) As Claim" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::Claim ^ FindFirst(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match">Fonction qui exécute la logique de correspondance.</param>
        <summary>Récupère la première revendication trouvée par le prédicat spécifié.</summary>
        <returns>Première revendication correspondante ou <see langword="null" />, si aucune correspondance n'est trouvée.</returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="match" /> a la valeur **null**.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindFirst">
      <MemberSignature Language="C#" Value="public virtual System.Security.Claims.Claim FindFirst (string type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Claims.Claim FindFirst(string type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.FindFirst(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function FindFirst (type As String) As Claim" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Claims::Claim ^ FindFirst(System::String ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.Claim</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Type de revendication à rechercher.</param>
        <summary>Récupère la première revendication avec le type de revendication spécifié.</summary>
        <returns>Première revendication correspondante ou <see langword="null" />, si aucune correspondance n'est trouvée.</returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> a la valeur **null**.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Objet à remplir avec des données.</param>
        <param name="context">Destination de cette sérialisation. Peut être <see langword="null" />.</param>
        <summary>Renseigne des <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données nécessaires à la sérialisation de l'objet <see cref="T:System.Security.Claims.ClaimsIdentity" /> actuel.</summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="info" /> est <see langword="null" />.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiert une confiance totale pour l’appelant immédiat. Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="HasClaim">
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Détermine si l'identité des revendications possède une revendication qui corresponde aux conditions spécifiées.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HasClaim">
      <MemberSignature Language="C#" Value="public virtual bool HasClaim (Predicate&lt;System.Security.Claims.Claim&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasClaim(class System.Predicate`1&lt;class System.Security.Claims.Claim&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasClaim (match As Predicate(Of Claim)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasClaim(Predicate&lt;System::Security::Claims::Claim ^&gt; ^ match);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="match" Type="System.Predicate&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="match">Fonction qui exécute la logique de correspondance.</param>
        <summary>Détermine si cette identité des revendications a une revendication qui est mise en correspondance par l'attribut spécifié.</summary>
        <returns>
          <see langword="true" /> si une revendication correspondante existe ; sinon, <see langword="false" />.</returns>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="match" /> a la valeur **null**.</exception>
      </Docs>
    </Member>
    <Member MemberName="HasClaim">
      <MemberSignature Language="C#" Value="public virtual bool HasClaim (string type, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool HasClaim(string type, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function HasClaim (type As String, value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool HasClaim(System::String ^ type, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Type de la revendication à laquelle correspondre.</param>
        <param name="value">Valeur de la revendication à laquelle correspondre.</param>
        <summary>Détermine si cette identité des revendications a une revendication avec le type et la valeur de revendication spécifiques.</summary>
        <returns>
          <see langword="true" /> en cas de correspondance ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ne vérifie pas la <xref:System.Security.Claims.Claim.Issuer%2A> ou <xref:System.Security.Claims.Claim.OriginalIssuer%2A> propriétés. La comparaison est effectuée à l’aide d’Ordinal, respect de la casse sur une valeur ; cas dans basé sur le type.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="type" /> a la valeur **null**.  
  
 - ou -  
  
 <paramref name="value" /> a la valeur **null**.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsAuthenticated">
      <MemberSignature Language="C#" Value="public virtual bool IsAuthenticated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAuthenticated" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.IsAuthenticated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAuthenticated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAuthenticated { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.IsAuthenticated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique que l'identité a été authentifiée.</summary>
        <value>
          <see langword="true" /> Si l’identité a été authentifiée ; dans le cas contraire, **false**.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `true` Si le <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> propriété n’est pas `null` ou une chaîne vide.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Label">
      <MemberSignature Language="C#" Value="public string Label { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Label" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.Label" />
      <MemberSignature Language="VB.NET" Value="Public Property Label As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Label { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'étiquette de cette identité basée sur les revendications.</summary>
        <value>Étiquette.</value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Security.Principal.IIdentity.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom de cette identité basée sur les revendications.</summary>
        <value>Nom ou <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Retourne la valeur de la première revendication avec un type qui correspond au nom de la revendication de type défini dans le <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> propriété. Si aucune revendication de type de revendication de nom ne correspondant est trouvée, retourne `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Claims.ClaimsIdentity.NameClaimType" />
      </Docs>
    </Member>
    <Member MemberName="NameClaimType">
      <MemberSignature Language="C#" Value="public string NameClaimType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NameClaimType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.NameClaimType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameClaimType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NameClaimType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le type de revendication utilisé pour déterminer les revendications qui fournissent la valeur de la propriété <see cref="P:System.Security.Claims.ClaimsIdentity.Name" /> de cette identité basée sur les revendications.</summary>
        <value>Type de revendication de nom.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> propriété spécifie le type de revendication (<xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType>) qui est utilisé pour fournir le nom pour cette identité. Le nom est accessible via la <xref:System.Security.Claims.ClaimsIdentity.Name%2A> propriété.  
  
 Cette propriété est définie par le constructeur.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Security.Claims.ClaimsIdentity.Name" />
      </Docs>
    </Member>
    <Member MemberName="RemoveClaim">
      <MemberSignature Language="C#" Value="public virtual void RemoveClaim (System.Security.Claims.Claim claim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveClaim(class System.Security.Claims.Claim claim) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveClaim(System::Security::Claims::Claim ^ claim);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claim" Type="System.Security.Claims.Claim" />
      </Parameters>
      <Docs>
        <param name="claim">Revendication à supprimer.</param>
        <summary>Tente de supprimer une revendication dans l'identité basée sur les revendications.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il est possible que la revendication ne peut pas être supprimée, car il n’est pas détenu par l’identité. Par exemple, ce serait le cas pour les revendications de rôle qui appartiennent à l’entité de sécurité. Contrairement à la <xref:System.Security.Claims.ClaimsIdentity.TryRemoveClaim%2A> (méthode), qui retourne une valeur booléenne qui indique si la revendication a été supprimée, <xref:System.Security.Claims.ClaimsIdentity.RemoveClaim%2A> lève une exception si la revendication n’a pas pu être supprimée.  
  
 La revendication spécifiée est mis en correspondance par référence d’objet (<xref:System.Object.ReferenceEquals%2A>).  
  
 Cette méthode a le `SecurityCritical` attribut appliqué au contrôle les entités qui peuvent supprimer des revendications à partir de l’identité. Plus bas le canal, les décisions d’autorisation sont effectuées en fonction des revendications qui sont présentes dans le <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Impossible de supprimer la revendication.</exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiert une confiance totale pour l’appelant immédiat. Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</permission>
      </Docs>
    </Member>
    <Member MemberName="RoleClaimType">
      <MemberSignature Language="C#" Value="public string RoleClaimType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RoleClaimType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.ClaimsIdentity.RoleClaimType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoleClaimType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RoleClaimType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le type de revendication qui est interprétée comme un rôle .NET Framework entre les revendications dans cette identité basée sur les revendications.</summary>
        <value>Type de revendication du rôle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le type de revendication de rôle est le type de revendication (<xref:System.Security.Claims.Claim.Type%2A?displayProperty=nameWithType>) qui est utilisé lors de l’évaluation de cette identité pour le <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType> (méthode). Le <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=nameWithType> méthode est appelée pour déterminer si le principal actuel est dans un rôle spécifié. Le modèle basé sur les revendications étend cette case pour utiliser les revendications présentées par le principal. A <xref:System.Security.Claims.ClaimsPrincipal> objet peut contenir un ou plusieurs <xref:System.Security.Claims.ClaimsIdentity> objets et chaque objet d’identité peuvent contenir plusieurs <xref:System.Security.Claims.Claim> objets. Le <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> propriété spécifie le type de revendication de la revendication qui doit être utilisé pour fournir la valeur pour le rôle lors de l’évaluation de ce <xref:System.Security.Claims.ClaimsIdentity> objet. La propriété est définie par le constructeur. Une valeur commune est <xref:System.Security.Claims.ClaimTypes.Role?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Security.Claims.ClaimsPrincipal.IsInRole(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryRemoveClaim">
      <MemberSignature Language="C#" Value="public virtual bool TryRemoveClaim (System.Security.Claims.Claim claim);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryRemoveClaim(class System.Security.Claims.Claim claim) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryRemoveClaim(System::Security::Claims::Claim ^ claim);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="claim" Type="System.Security.Claims.Claim" />
      </Parameters>
      <Docs>
        <param name="claim">Revendication à supprimer.</param>
        <summary>Tente de supprimer une revendication dans l'identité basée sur les revendications.</summary>
        <returns>
          <see langword="true" /> si la revendication a été correctement supprimée ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il est possible que la revendication ne peut pas être supprimée, car il n’est pas détenu par l’identité. Par exemple, ce serait le cas pour les revendications de rôle qui appartiennent à l’entité de sécurité.  
  
 La revendication spécifiée est mis en correspondance par référence d’objet (<xref:System.Object.ReferenceEquals%2A>).  
  
 Cette méthode a le `SecurityCritical` attribut appliqué au contrôle les entités qui peuvent supprimer des revendications à partir de l’identité. Plus bas le canal, les décisions d’autorisation sont effectuées en fonction des revendications qui sont présentes dans le <xref:System.Security.Claims.ClaimsIdentity.Claims%2A> collection.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">requiert une confiance totale pour l’appelant immédiat. Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</permission>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public virtual void WriteTo (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteTo(class System.IO.BinaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteTo (writer As BinaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteTo(System::IO::BinaryWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Enregistreur à utiliser pour le stockage de données.</param>
        <summary>Sérialise à l’aide d’un <see cref="T:System.IO.BinaryWriter" />.</summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="writer" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="protected virtual void WriteTo (System.IO.BinaryWriter writer, byte[] userData);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WriteTo(class System.IO.BinaryWriter writer, unsigned int8[] userData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WriteTo (writer As BinaryWriter, userData As Byte())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WriteTo(System::IO::BinaryWriter ^ writer, cli::array &lt;System::Byte&gt; ^ userData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security.Claims</AssemblyName>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
        <Parameter Name="userData" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="writer">Enregistreur à utiliser pour le stockage de données.</param>
        <param name="userData">Données supplémentaires fournies par le type dérivé.</param>
        <summary>Sérialise à l’aide d’un <see cref="T:System.IO.BinaryWriter" />.</summary>
        <remarks></remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="writer" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>