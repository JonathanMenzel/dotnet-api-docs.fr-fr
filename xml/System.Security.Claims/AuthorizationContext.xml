<Type Name="AuthorizationContext" FullName="System.Security.Claims.AuthorizationContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a0c42052601230d7ab5b2f2e42dd4c87d0eed8c8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30489323" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AuthorizationContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthorizationContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Claims.AuthorizationContext" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthorizationContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthorizationContext" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit les informations de contexte d'un événement d'autorisation. Cela inclut le principal qui représente l'appelant, la ressource demandée et l'action exécutée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.Claims.AuthorizationContext> classe représente le contexte qui est utilisé par un gestionnaire d’autorisation de revendications, une implémentation de la <xref:System.Security.Claims.ClaimsAuthorizationManager> (classe), pour déterminer si une entité (objet) doit être autorisée à effectuer une action spécifiée sur une ressource donnée. Le Gestionnaire d’autorisations de revendications prend le contexte d’autorisation dans le <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A> méthode et soit refuse ou octroie l’accès basé sur les revendications présentées par le principal.  
  
 Le <xref:System.Security.Claims.AuthorizationContext.Principal%2A> propriété contient l’entité pour laquelle l’autorisation est demandée, le <xref:System.Security.Claims.AuthorizationContext.Resource%2A> propriété contient la ressource sur laquelle le principal est autorisé, et le <xref:System.Security.Claims.AuthorizationContext.Action%2A> propriété contient les actions que le principal a l’intention d’effectuer sur la ressource. La ressource et l’action sont représentées sous forme de collection de revendications ; Toutefois, dans la plupart des cas, chaque collection contient une seule revendication.  
  
   
  
## Examples  
 L’exemple de code qui est utilisé dans le <xref:System.Security.Claims.AuthorizationContext> rubrique provient de la `Claims Based Authorization` exemple. Cet exemple fournit un gestionnaire d’autorisation des revendications personnalisées qui peut autoriser des sujets basés sur une stratégie qui est spécifiée dans la configuration. Ce gestionnaire personnalisé se compose de trois composants de base : une classe dérivée de <xref:System.Security.Claims.ClaimsAuthorizationManager> qui implémente le gestionnaire, la `ResourceAction` classe qui associe une ressource et une action et un lecteur de stratégie qui lit et compile la stratégie qui est spécifié dans le fichier de configuration. Cette option compilé stratégie peut ensuite être utilisée par le Gestionnaire d’autorisation des revendications pour évaluer une entité de sécurité pour autoriser l’accès aux ressources. Tous les éléments sont illustrées par souci de concision. Pour plus d’informations sur cet exemple et d’autres exemples disponibles pour WIF et où les télécharger, consultez [exemple d’Index de Code WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
 Le code suivant illustre la <xref:System.Security.Claims.ClaimsAuthorizationManager.CheckAccess%2A> méthode pour le Gestionnaire d’autorisation des revendications personnalisées. Une fonction qui évalue l’entité de sécurité en fonction de la ressource et l’action spécifiée dans le <xref:System.Security.Claims.AuthorizationContext> est appelé. Cette fonction retourne `true` ou `false`, ce qui autorise ou refuse l’accès à l’entité de sécurité.  
  
 [!code-csharp[WifClaimsBasedAuthorization#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifclaimsbasedauthorization/cs/claimsauthorizationlibrary/myclaimsauthorizationmanager.cs#3)]  
[!code-csharp[WifClaimsBasedAuthorization#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifclaimsbasedauthorization/cs/claimsauthorizationlibrary/myclaimsauthorizationmanager.cs#5)]  
  
 Le code XML suivant montre un exemple de la stratégie d’autorisation qui a été spécifiée dans la configuration. Dans la première stratégie, le principal doit posséder une des revendications spécifiées afin d’effectuer l’action spécifiée sur la ressource spécifiée. Dans la deuxième stratégie, le principal doit posséder les deux revendications pour être en mesure d’effectuer l’action spécifiée sur la ressource spécifiée. Dans tous les autres, le principal a automatiquement accès indépendamment les revendications qu’il possède.  
  
```xml  
<system.identityModel>  
  <identityConfiguration>  
    <claimsAuthorizationManager type="ClaimsAuthorizationLibrary.MyClaimsAuthorizationManager, ClaimsAuthorizationLibrary">  
      <policy resource="http://localhost:28491/Developers.aspx" action="GET">  
        <or>  
          <claim claimType="http://schemas.microsoft.com/ws/2008/06/identity/claims/role" claimValue="developer" />  
          <claim claimType="http://schemas.xmlsoap.org/claims/Group" claimValue="Administrator" />  
        </or>  
      </policy>  
      <policy resource="http://localhost:28491/Administrators.aspx" action="GET">  
        <and>  
          <claim claimType="http://schemas.xmlsoap.org/claims/Group" claimValue="Administrator" />  
          <claim claimType="http://schemas.xmlsoap.org/ws/2005/05/identity/claims/country" claimValue="USA" />  
        </and>  
      </policy>  
      <policy resource="http://localhost:28491/Default.aspx" action="GET">  
      </policy>  
      <policy resource="http://localhost:28491/" action="GET">  
      </policy>  
      <policy resource="http://localhost:28491/Claims.aspx" action="GET">  
      </policy>  
    </claimsAuthorizationManager>  
  
    ...  
  
  </identityConfiguration>  
</system.identityModel>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Claims.AuthorizationContext" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthorizationContext (System.Security.Claims.ClaimsPrincipal principal, System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt; resource, System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal principal, class System.Collections.ObjectModel.Collection`1&lt;class System.Security.Claims.Claim&gt; resource, class System.Collections.ObjectModel.Collection`1&lt;class System.Security.Claims.Claim&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.AuthorizationContext.#ctor(System.Security.Claims.ClaimsPrincipal,System.Collections.ObjectModel.Collection{System.Security.Claims.Claim},System.Collections.ObjectModel.Collection{System.Security.Claims.Claim})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (principal As ClaimsPrincipal, resource As Collection(Of Claim), action As Collection(Of Claim))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthorizationContext(System::Security::Claims::ClaimsPrincipal ^ principal, System::Collections::ObjectModel::Collection&lt;System::Security::Claims::Claim ^&gt; ^ resource, System::Collections::ObjectModel::Collection&lt;System::Security::Claims::Claim ^&gt; ^ action);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="resource" Type="System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt;" />
        <Parameter Name="action" Type="System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt;" />
      </Parameters>
      <Docs>
        <param name="principal">Principal pour lequel l'autorisation doit être vérifiée.</param>
        <param name="resource">Collection de revendications qui représente la ressource pour laquelle l'entité de sécurité doit être autorisée. La collection contient généralement un élément unique.</param>
        <param name="action">Collection de revendications qui représente l'action à exécuter sur la ressource. La collection contient généralement un élément unique.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Claims.AuthorizationContext" /> avec le principal, la revendication de ressources et la revendication d'action spécifiés.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="principal" /> est <see langword="null" />.  
  
 - ou -  
  
 <paramref name="resource" /> est <see langword="null" />.  
  
 - ou -  
  
 <paramref name="action" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthorizationContext (System.Security.Claims.ClaimsPrincipal principal, string resource, string action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Claims.ClaimsPrincipal principal, string resource, string action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Claims.AuthorizationContext.#ctor(System.Security.Claims.ClaimsPrincipal,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (principal As ClaimsPrincipal, resource As String, action As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthorizationContext(System::Security::Claims::ClaimsPrincipal ^ principal, System::String ^ resource, System::String ^ action);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="principal" Type="System.Security.Claims.ClaimsPrincipal" />
        <Parameter Name="resource" Type="System.String" />
        <Parameter Name="action" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="principal">Principal pour lequel l'autorisation doit être vérifiée.</param>
        <param name="resource">Ressource pour laquelle l'entité de sécurité doit être autorisée. La ressource est spécifiée comme la valeur d'une revendication de nom.</param>
        <param name="action">Action à effectuer sur la ressource. L'action est spécifiée comme la valeur d'une revendication de nom.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Claims.AuthorizationContext" /> avec le principal, le nom de ressource et le nom d'action spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.Claims.AuthorizationContext.Action%2A> propriété est initialisée pour contenir une revendication de nom (<xref:System.Security.Claims.ClaimTypes.Name?displayProperty=nameWithType>) qui a la valeur spécifiée par la `action` paramètre. Le <xref:System.Security.Claims.AuthorizationContext.Resource%2A> propriété est initialisée pour contenir une revendication de nom qui a la valeur spécifiée par la `resource` paramètre.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="principal" /> est <see langword="null" />.  
  
 - ou -  
  
 <paramref name="resource" /> est <see langword="null" />.  
  
 - ou -  
  
 <paramref name="action" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt; Action { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Security.Claims.Claim&gt; Action" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.AuthorizationContext.Action" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Action As Collection(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Security::Claims::Claim ^&gt; ^ Action { System::Collections::ObjectModel::Collection&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'action pour laquelle l'entité doit être autorisée.</summary>
        <value>Collection de revendications qui représente les actions appropriées à la demande.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La collection contient généralement un élément unique.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Principal">
      <MemberSignature Language="C#" Value="public System.Security.Claims.ClaimsPrincipal Principal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Claims.ClaimsPrincipal Principal" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.AuthorizationContext.Principal" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Principal As ClaimsPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Claims::ClaimsPrincipal ^ Principal { System::Security::Claims::ClaimsPrincipal ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Claims.ClaimsPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le principal (objet) pour lequel l'autorisation est demandée.</summary>
        <value>Principal pour lequel l'autorisation est demandée.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resource">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt; Resource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Security.Claims.Claim&gt; Resource" />
      <MemberSignature Language="DocId" Value="P:System.Security.Claims.AuthorizationContext.Resource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Resource As Collection(Of Claim)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Security::Claims::Claim ^&gt; ^ Resource { System::Collections::ObjectModel::Collection&lt;System::Security::Claims::Claim ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Security.Claims.Claim&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la ressource sur laquelle le principal doit être autorisé.</summary>
        <value>Collection de revendications qui représente la ressource.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La collection contient généralement un élément unique.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>