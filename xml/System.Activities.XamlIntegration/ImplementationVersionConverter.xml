<Type Name="ImplementationVersionConverter" FullName="System.Activities.XamlIntegration.ImplementationVersionConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="12bbb39a3f37c90388056f6835025e9f8ff03a6d" />
    <Meta Name="ms.sourcegitcommit" Value="d0bb31ec8354fa58c62c2a646057eec11d3e2150" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/17/2018" />
    <Meta Name="ms.locfileid" Value="36718234" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ImplementationVersionConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImplementationVersionConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Activities.XamlIntegration.ImplementationVersionConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ImplementationVersionConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImplementationVersionConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type ImplementationVersionConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d0ae5-101">Représente un convertisseur pour versions d'implémentation.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d0ae5-101">Represents a converter for implementation versions.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImplementationVersionConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.ImplementationVersionConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImplementationVersionConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d0ae5-102">Initialise une nouvelle instance de la classe <see cref="T:System.Activities.XamlIntegration.ImplementationVersionConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ae5-102">Initializes a new instance of the <see cref="T:System.Activities.XamlIntegration.ImplementationVersionConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.ImplementationVersionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="implementationVersionConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="d0ae5-103">Informations de contexte utilisées pour la conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ae5-103">Context information that is used for conversion.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="d0ae5-104">Type à partir duquel effectuer la conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ae5-104">The type to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0ae5-105">Détermine si le type spécifié peut être converti vers son type source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ae5-105">Determines whether the specified type can be converted from.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0ae5-106">
            <see langword="True" /> s'il est possible d'effectuer la conversion à partir du type spécifié ; sinon  <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ae5-106">
              <see langword="True" /> if the specified type can be converted from; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.ImplementationVersionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="implementationVersionConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="d0ae5-107">Informations de contexte utilisées pour la conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ae5-107">Context information that is used for conversion.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="d0ae5-108">Type vers lequel effectuer la conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ae5-108">The type to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0ae5-109">Détermine si le type spécifié peut être converti vers son type cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ae5-109">Determines whether the specified type can be converted to.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0ae5-110">
            <see langword="True" /> s'il est possible d'effectuer la conversion vers le type spécifié ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ae5-110">
              <see langword="True" /> if the specified type can be converted to; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.ImplementationVersionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="implementationVersionConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="d0ae5-111">Informations de contexte utilisées pour la conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ae5-111">Context information that is used for conversion.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="d0ae5-112">Informations facultatives sur la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ae5-112">An optional culture information.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="d0ae5-113">Objet à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ae5-113">The object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0ae5-114">Convertit la valeur spécifiée en nouvelle représentation spécifiée par la classe dérivée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ae5-114">Converts the specified value to a new representation specified by the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0ae5-115">
            <see langword="True" /> si la valeur spécifiée pour une nouvelle représentation est convertie ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ae5-115">
              <see langword="True" /> if the specified value to a new representation is converted; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.ImplementationVersionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="implementationVersionConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="d0ae5-116">Informations de contexte utilisées pour la conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ae5-116">Context information that is used for conversion.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="d0ae5-117">Informations facultatives sur la culture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ae5-117">An optional culture information.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="d0ae5-118">Objet à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ae5-118">The object to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="d0ae5-119">Type vers lequel effectuer la conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ae5-119">The type to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d0ae5-120">Convertit l'objet de valeur spécifiée en représentation spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ae5-120">Converts the specified value to the specified representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d0ae5-121">
            <see langword="True" /> si la valeur spécifiée pour la représentation spécifiée est convertie ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d0ae5-121">
              <see langword="True" /> if the specified value to the specified representation is converted; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>