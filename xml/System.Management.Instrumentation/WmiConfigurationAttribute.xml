<Type Name="WmiConfigurationAttribute" FullName="System.Management.Instrumentation.WmiConfigurationAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d65bcc941740db09351d6850fbba46445a7682d9" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48601124" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class WmiConfigurationAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WmiConfigurationAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.WmiConfigurationAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WmiConfigurationAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class WmiConfigurationAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type WmiConfigurationAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Assembly)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>L’attribut WmiConfiguration indique qu’un assembly contient le code qui implémente un fournisseur WMI en utilisant le modèle d’extensions de fournisseur WMI.NET. L’attribut accepte les paramètres qui définissent la configuration de haut niveau du fournisseur WMI implémenté.  
  
Remarque : les bibliothèques .NET de WMI sont aujourd’hui considérées comme dans un état final et ne recevront plus de développements, d’améliorations ou de mises à jour en dehors des problèmes de sécurité qui affectent ces bibliothèques. Les [API MI](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) doivent être utilisées pour tout nouveau développement.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant répertorie les paramètres acceptés par cet attribut, ainsi que l’aspect de la configuration du fournisseur il permet de contrôler.  
  
|Paramètre|Configure|  
|---------------|----------------|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.Scope>|L’espace de noms dans lequel votre fournisseur expose des classes.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity>|-Sécurité (DACL) sur l’espace de noms utilisé.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel>|-Le modèle d’hébergement qui sera utilisé par le fournisseur.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel>|-Le mode d’emprunt d’identité du fournisseur.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup>|Le groupe d’hébergement auquel le fournisseur appartient. Ce paramètre s’applique uniquement aux fournisseurs in-process.|  
|<xref:System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction>|Sécurité (DACL) sur le fournisseur WMI.|  
  
   
  
## Examples  
  
```  
// Specify that this assembly contains code that implements a WMI  
// Provider. Use the assembly:WmiConfiguration attribute to define  
// the WMI namespace, the hosting model, and the impersonation mode  
// of the WMI provider.  
// The attribute below specifies that the class this provider  
// exposes to WMI will be in the root/MortgageCalc namespace, will  
// use the decoupled hosting model and will not allow the provider  
// to impersonate its callers.  
  
[assembly: WmiConfiguration("root/MortgageCalc",HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = false)]  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WmiConfigurationAttribute (string scope);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string scope) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.WmiConfigurationAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (scope As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WmiConfigurationAttribute(System::String ^ scope);" />
      <MemberSignature Language="F#" Value="new System.Management.Instrumentation.WmiConfigurationAttribute : string -&gt; System.Management.Instrumentation.WmiConfigurationAttribute" Usage="new System.Management.Instrumentation.WmiConfigurationAttribute scope" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="scope" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="scope">Espace de noms WMI dans lequel le fournisseur exposera des classes. Par exemple, "root\MyProviderNamespace".</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Management.Instrumentation.WmiConfigurationAttribute" /> qui spécifie l'espace de noms WMI dans lequel le fournisseur WMI exposera des classes.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un fournisseur WMI doit exposer ses classes dans un espace de noms. C’est pourquoi le constructeur requiert étendue en tant que paramètre.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostingGroup">
      <MemberSignature Language="C#" Value="public string HostingGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HostingGroup" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property HostingGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HostingGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HostingGroup : string with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le groupe d'hébergement pour le fournisseur WMI.</summary>
        <value>Valeur <see cref="T:System.String" /> qui indique le groupe d'hébergement pour le fournisseur WMI.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Groupes d’hébergement s’appliquent uniquement aux fournisseurs qui sont hébergés dans le processus. La valeur est ignorée pour les fournisseurs découplés.  
  
 Un groupe d’hébergement est un ensemble de fournisseurs in-process qui portent tous le même nom de groupe hôte. Le nom du groupe hôte est une chaîne que vous définissez afin de regrouper logiquement les fournisseurs. Tous les fournisseurs in-process dans le même groupe d’hébergement en cours d’exécution sous le même contexte de sécurité sont hébergés dans une seule instance du processus Wmiprvse.exe. Par conséquent, les fournisseurs qui partagent le même contexte groupe hébergement de sécurité partagent le même processus hôte de service.  
  
   
  
## Examples  
 Dans l’exemple suivant, le <xref:System.Management.Instrumentation.WmiConfigurationAttribute> est utilisé pour indiquer que l’assembly est contenu dans implémente un fournisseur in-process s’exécute sous le contexte de sécurité NetworkService et hébergé dans une instance du processus Wmiprvse.exe qui héberge également un autres fournisseurs in-process dans le même groupe d’hébergement qui s’exécutent également dans le contexte de sécurité NetworkService.  
  
```  
[assembly: WmiConfiguration("root\\NVPair", HostingModel = ManagementHostingModel.NetworkService), HostingGroup = "MyProviders"]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostingModel">
      <MemberSignature Language="C#" Value="public System.Management.Instrumentation.ManagementHostingModel HostingModel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Management.Instrumentation.ManagementHostingModel HostingModel" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel" />
      <MemberSignature Language="VB.NET" Value="Public Property HostingModel As ManagementHostingModel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Management::Instrumentation::ManagementHostingModel HostingModel { System::Management::Instrumentation::ManagementHostingModel get(); void set(System::Management::Instrumentation::ManagementHostingModel value); };" />
      <MemberSignature Language="F#" Value="member this.HostingModel : System.Management.Instrumentation.ManagementHostingModel with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Management.Instrumentation.ManagementHostingModel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le modèle d'hébergement pour le fournisseur WMI.</summary>
        <value>Valeur <see cref="T:System.Management.Instrumentation.ManagementHostingModel" /> qui indique le modèle d'hébergement du fournisseur WMI.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les fournisseurs WMI peuvent être hébergés par une application ou par le service WMI. Les fournisseurs WMI hébergés par une application sont appelés fournisseurs découplés. Ceux hébergés par le service WMI sont appelés fournisseurs in-process. La valeur de modèle hébergement détermine à la fois le modèle d’hébergement et, dans le cas de fournisseurs in-process, le compte (contexte de sécurité) sous lequel s’exécute le fournisseur. Pour plus d’informations sur les valeurs possibles de HostingModel, consultez <xref:System.Management.Instrumentation.ManagementHostingModel>.  
  
 Pour en savoir plus sur les modèles d’hébergement, consultez la [fournisseur d’hébergement et de sécurité](http://go.microsoft.com/fwlink/?LinkId=100075) rubrique dans le WMI SDK sur MSDN.  
  
   
  
## Examples  
 Dans l’exemple suivant, le <xref:System.Management.Instrumentation.WmiConfigurationAttribute> est utilisé pour indiquer que l’assembly est contenu dans implémente un fournisseur qui est exposé via l’espace de noms root\NVPair. Étant donné que le modèle d’hébergement n’est pas <xref:System.Management.Instrumentation.ManagementHostingModel.Decoupled>, il est un fournisseur in-process. La valeur <xref:System.Management.Instrumentation.ManagementHostingModel.NetworkService> indique que le fournisseur in-process s’exécute sous le contexte de sécurité NetworkService.  
  
```  
[assembly: WmiConfiguration("root\\NVPair", HostingModel = ManagementHostingModel.NetworkService)]  
```  
  
 Dans l’exemple suivant, le <xref:System.Management.Instrumentation.WmiConfigurationAttribute> est utilisé pour indiquer que l’assembly est contenu dans implémente un fournisseur qui est exposé via l’espace de noms root\NVPair. La valeur <xref:System.Management.Instrumentation.ManagementHostingModel.Decoupled> indique qu’il s’agit d’un fournisseur découplé.  
  
```  
[assembly: WmiConfiguration("root\\NVPair", HostingModel = ManagementHostingModel.Decoupled)]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IdentifyLevel">
      <MemberSignature Language="C#" Value="public bool IdentifyLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IdentifyLevel" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property IdentifyLevel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IdentifyLevel { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IdentifyLevel : bool with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui spécifie si le fournisseur WMI peut emprunter l'identité de ses appelants. Si la valeur est false, le fournisseur ne peut pas emprunter leur identité ; si la valeur est true, il peut le faire.</summary>
        <value>Valeur booléenne qui indique si un fournisseur peut ou ne peut pas emprunter l'identité de ses appelants. Si la valeur est false, le fournisseur ne peut pas emprunter leur identité ; si la valeur est true, il peut le faire.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations, consultez la rubrique « Fournisseur d’hébergement et sécurité » dans MSDN library en ligne à [ http://www.msdn.com ](http://www.msdn.com/).  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le paramètre IdentifyLevel pour indiquer que le fournisseur peut emprunter l’identité de ses appelants.  
  
```  
[assembly: WmiConfiguration("root/MyProv", HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = true]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NamespaceSecurity">
      <MemberSignature Language="C#" Value="public string NamespaceSecurity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NamespaceSecurity" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity" />
      <MemberSignature Language="VB.NET" Value="Public Property NamespaceSecurity As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NamespaceSecurity { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NamespaceSecurity : string with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une chaîne SDDL (Security Descriptor Definition Language) qui spécifie le descripteur de sécurité sur l'espace de noms dans lequel le fournisseur expose des objets de gestion.</summary>
        <value>Chaîne SDDL qui représente le descripteur de sécurité sur l'espace de noms dans lequel le fournisseur expose des objets de gestion.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations sur comment représenter les descripteurs de sécurité au format SDDL, consultez le [Format de chaîne de descripteur de sécurité](http://go.microsoft.com/fwlink/?LinkId=100763) rubrique dans MSDN library en ligne.  
  
   
  
## Examples  
 L’exemple suivant montre comment utiliser le paramètre NamespaceSecurity pour définir le descripteur de sécurité sur l’espace de noms racine/SDTest dans lequel le fournisseur implémenté dans cet assembly expose des classes WMI.  
  
```  
[assembly: WmiConfiguration("root/SDTest", HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = false, NamespaceSecurity = "O:BAG:BAD:(A;CI;0x60003;;;WD)")]  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Scope">
      <MemberSignature Language="C#" Value="public string Scope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Scope" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.Scope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scope As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Scope { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Scope : string" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.Scope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'espace de noms WMI dans lequel le fournisseur WMI expose des classes.</summary>
        <value>Valeur <see cref="T:System.String" /> qui indique l'espace de noms dans lequel le fournisseur WMI expose des classes.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un espace de noms WMI est une catégorie dans le référentiel WMI. L’espace de noms root/cimv2 utilisé communément héberge des classes qui décrivent le modèle CIM, Version 2, défini par le consortium Desktop Management Task Force (DMTF). Vous ne devez exposer vos fournisseurs dans cet espace de noms que si vous développez sur le modèle CIM de votre. Sinon, vous devez créer un espace de noms approprié explicite qui permettra aux utilisateurs le type de classes WMI qu'ils s’attendent à trouver dans l’espace de noms.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityRestriction">
      <MemberSignature Language="C#" Value="public string SecurityRestriction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SecurityRestriction" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction" />
      <MemberSignature Language="VB.NET" Value="Public Property SecurityRestriction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SecurityRestriction { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecurityRestriction : string with get, set" Usage="System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un descripteur de sécurité pour le fournisseur WMI. Pour plus d’informations, consultez les informations relatives à la propriété SecurityDescriptor dans la rubrique « __Win32Provider » de MSDN Online Library à l’adresse [http://www.msdn.com](http://www.msdn.com/).</summary>
        <value>Valeur <see cref="T:System.String" /> qui contient le descripteur de sécurité pour le fournisseur WMI.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>