<Type Name="ManagementEntityAttribute" FullName="System.Management.Instrumentation.ManagementEntityAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ecc50dbd0dfca3fba0fd567e0cc5017dc032a441" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55399797" /></Metadata><TypeSignature Language="C#" Value="public sealed class ManagementEntityAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManagementEntityAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Management.Instrumentation.ManagementEntityAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManagementEntityAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManagementEntityAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ManagementEntityAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c0aba-101">L’attribut ManagementEntity indique qu’une classe fournit des informations de gestion exposées via un fournisseur WMI.</span><span class="sxs-lookup"><span data-stu-id="c0aba-101">The ManagementEntity attribute indicates that a class provides management information exposed through a WMI provider.</span></span>  
  
<span data-ttu-id="c0aba-102">Remarque : les bibliothèques .NET de WMI sont aujourd’hui considérées comme dans un état final et ne recevront plus de développements, d’améliorations ou de mises à jour en dehors des problèmes de sécurité qui affectent ces bibliothèques.</span><span class="sxs-lookup"><span data-stu-id="c0aba-102">Note: the WMI .NET libraries are now considered in final state, and no further development, enhancements, or updates will be available for non-security related issues affecting these libraries.</span></span> <span data-ttu-id="c0aba-103">Les [API MI](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) doivent être utilisées pour tout nouveau développement.</span><span class="sxs-lookup"><span data-stu-id="c0aba-103">The [MI APIs](https://msdn.microsoft.com/library/jj152383%28v=vs.80%29.aspx) should be used for all new development.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-104">La classe marquée par cet attribut doit être publique.</span><span class="sxs-lookup"><span data-stu-id="c0aba-104">The class marked by this attribute must be public.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0aba-105">L’exemple suivant montre comment utiliser l’attribut ManagementEntity pour marquer une classe.</span><span class="sxs-lookup"><span data-stu-id="c0aba-105">The following example shows how to use the ManagementEntity attribute to mark a class.</span></span>  
  
```  
// Use the ManagementEntity attribute on the class to specify that this // class contains management information that is available from  
// provider.  
  
    [ManagementEntity(Name = "MortgageCalc")]  
    public class MortgageCalcWMIProvider  
    {  
    }  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ManagementEntityAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Management.Instrumentation.ManagementEntityAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ManagementEntityAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c0aba-106">Initialise une nouvelle instance de la classe <see cref="T:System.Management.Instrumentation.ManagementEntityAttribute" />.</span><span class="sxs-lookup"><span data-stu-id="c0aba-106">Initializes a new instance of the <see cref="T:System.Management.Instrumentation.ManagementEntityAttribute" /> class.</span></span> <span data-ttu-id="c0aba-107">Il s'agit du constructeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="c0aba-107">This is the default constructor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-108">Ce constructeur n’accepte pas un paramètre de nom.</span><span class="sxs-lookup"><span data-stu-id="c0aba-108">This constructor does not take a name parameter.</span></span> <span data-ttu-id="c0aba-109">Si vous ne spécifiez pas un nom à l’aide de le <xref:System.Management.Instrumentation.ManagementEntityAttribute.Name> paramètre, le nom de la classe WMI par défaut est le nom de la classe avec attributs.</span><span class="sxs-lookup"><span data-stu-id="c0aba-109">If you do not specify a name by using the <xref:System.Management.Instrumentation.ManagementEntityAttribute.Name> parameter, the name of the associated WMI class will default to the name of the attributed class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="External">
      <MemberSignature Language="C#" Value="public bool External { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool External" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementEntityAttribute.External" />
      <MemberSignature Language="VB.NET" Value="Public Property External As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool External { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.External : bool with get, set" Usage="System.Management.Instrumentation.ManagementEntityAttribute.External" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0aba-110">Obtient ou définit une valeur qui spécifie si la classe représente une classe WMI dans un fournisseur implémenté externe à l'assembly actuel.</span><span class="sxs-lookup"><span data-stu-id="c0aba-110">Gets or sets a value that specifies whether the class represents a WMI class in a provider implemented external to the current assembly.</span></span></summary>
        <value><span data-ttu-id="c0aba-111">Valeur booléenne true si la classe représente une classe WMI externe ; sinon, false.</span><span class="sxs-lookup"><span data-stu-id="c0aba-111">A boolean value that is true if the class represents an external WMI class and false otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-112">Il est utilisé lors de l’implémentation des fournisseurs qui implémentent les classes qui étendent des classes WMI abstraites existantes.</span><span class="sxs-lookup"><span data-stu-id="c0aba-112">This is used when implementing providers that implement classes that extend existing abstract WMI classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementEntityAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Management.Instrumentation.ManagementEntityAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0aba-113">Obtient ou définit le nom de la classe WMI.</span><span class="sxs-lookup"><span data-stu-id="c0aba-113">Gets or sets the name of the WMI class.</span></span></summary>
        <value><span data-ttu-id="c0aba-114">Chaîne qui contient le nom de la classe WMI.</span><span class="sxs-lookup"><span data-stu-id="c0aba-114">A string that contains the name of the WMI class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-115">Si vous ne spécifiez pas le nom de la classe WMI en définissant cette propriété, la classe WMI par défaut pour le nom de la classe avec attributs.</span><span class="sxs-lookup"><span data-stu-id="c0aba-115">If you do not specify the name of the WMI class by setting this property, the WMI class will default to the name of the attributed class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0aba-116">Dans l’exemple suivant, le paramètre Name est utilisé pour définir le nom de la classe WMI représentée par la classe MortgageCalcWMIProvider.</span><span class="sxs-lookup"><span data-stu-id="c0aba-116">In the following example, the Name parameter is used to set the name of the WMI class represented by the MortgageCalcWMIProvider class.</span></span> <span data-ttu-id="c0aba-117">Il définit le nom de valeur MortgageCalculator.</span><span class="sxs-lookup"><span data-stu-id="c0aba-117">It sets the name to MortgageCalculator.</span></span> <span data-ttu-id="c0aba-118">Si le nom de paramètre n’est pas utilisé, le nom de classe C# correspondant, MortgageCalcWMIProvider dans ce cas, est utilisé comme nom de classe WMI.</span><span class="sxs-lookup"><span data-stu-id="c0aba-118">If the Name parameter is not used, the corresponding C# class name, MortgageCalcWMIProvider in this case, is used as the WMI class name.</span></span>  
  
```  
[ManagementEntity(Name = "MortgageCalculator")]  
public class MortgageCalcWMIProvider  
{  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Singleton">
      <MemberSignature Language="C#" Value="public bool Singleton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Singleton" />
      <MemberSignature Language="DocId" Value="P:System.Management.Instrumentation.ManagementEntityAttribute.Singleton" />
      <MemberSignature Language="VB.NET" Value="Public Property Singleton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Singleton { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Singleton : bool with get, set" Usage="System.Management.Instrumentation.ManagementEntityAttribute.Singleton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c0aba-119">Spécifie si la classe associée représente une classe WMI singleton.</span><span class="sxs-lookup"><span data-stu-id="c0aba-119">Specifies whether the associated class represents a singleton WMI class.</span></span></summary>
        <value><span data-ttu-id="c0aba-120">Valeur booléenne true si la classe représente une classe WMI singleton ; sinon, false.</span><span class="sxs-lookup"><span data-stu-id="c0aba-120">A boolean value that is true if the class represents a singleton WMI class and false otherwise.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0aba-121">Une classe WMI singleton est un pour lesquels il peut uniquement être une instance unique.</span><span class="sxs-lookup"><span data-stu-id="c0aba-121">A singleton WMI class is one for which there can only ever be a single instance.</span></span> <span data-ttu-id="c0aba-122">Bien que vous pourriez coder la logique pour vous assurer qu’une seule instance d’une classe WMI est jamais créée, cet attribut de paramètre est fourni pour rendre la tâche aisée et cohérente.</span><span class="sxs-lookup"><span data-stu-id="c0aba-122">Although you could code the logic to ensure that only a single instance of a WMI class is ever created, this parameter attribute is provided to make the task easy and consistent.</span></span>  
  
 <span data-ttu-id="c0aba-123">Lorsque vous travaillez avec des classes WMI singleton, les applications clientes doivent utiliser une syntaxe spéciale.</span><span class="sxs-lookup"><span data-stu-id="c0aba-123">When working with singleton WMI classes, client applications must use special syntax.</span></span> <span data-ttu-id="c0aba-124">Pour plus d’informations, consultez la description une rubrique de chemin de l’objet Instance dans la bibliothèque en ligne MSDN sur [ http://www.msdn.com ](https://www.msdn.com/).</span><span class="sxs-lookup"><span data-stu-id="c0aba-124">For more information, see the Describing an Instance Object Path topic in the MSDN online library at [http://www.msdn.com](https://www.msdn.com/).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0aba-125">L’extrait de code suivant montre comment utiliser le paramètre Singleton pour indiquer qu’une classe C# correspond à une classe WMI singleton.</span><span class="sxs-lookup"><span data-stu-id="c0aba-125">The following code snippet demonstrates how to use the Singleton parameter to indicate that a C# class corresponds to a singleton WMI class.</span></span>  
  
```  
[ManagementEntity(Singleton=true)]  
public class SingletonSample  
```  
  
 <span data-ttu-id="c0aba-126">Pour obtenir un exemple complet, l’utilisation d’un fournisseur qui implémente une classe singleton, consultez [Comment : Créer un fournisseur découplé de base](https://msdn.microsoft.com/library/1dabd442-c1ff-40a1-bb0e-d7b3566c2300).</span><span class="sxs-lookup"><span data-stu-id="c0aba-126">For a complete, working example of a provider that implements a singleton class, see [How to: Create a Basic Decoupled Provider](https://msdn.microsoft.com/library/1dabd442-c1ff-40a1-bb0e-d7b3566c2300).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>