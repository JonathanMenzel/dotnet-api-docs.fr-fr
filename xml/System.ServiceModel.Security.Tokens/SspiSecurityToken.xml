<Type Name="SspiSecurityToken" FullName="System.ServiceModel.Security.Tokens.SspiSecurityToken">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="13ce599d5aae5a576abf19b5d664fad6c3f80cdb" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34312977" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SspiSecurityToken : System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SspiSecurityToken extends System.IdentityModel.Tokens.SecurityToken" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.Tokens.SspiSecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public Class SspiSecurityToken&#xA;Inherits SecurityToken" />
  <TypeSignature Language="C++ CLI" Value="public ref class SspiSecurityToken : System::IdentityModel::Tokens::SecurityToken" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Tokens.SecurityToken</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente un jeton de sécurité SSPI.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Security.Tokens.SspiSecurityToken" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SspiSecurityToken (System.Net.NetworkCredential networkCredential, bool extractGroupsForWindowsAccounts, bool allowUnauthenticatedCallers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.NetworkCredential networkCredential, bool extractGroupsForWindowsAccounts, bool allowUnauthenticatedCallers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SspiSecurityToken.#ctor(System.Net.NetworkCredential,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SspiSecurityToken(System::Net::NetworkCredential ^ networkCredential, bool extractGroupsForWindowsAccounts, bool allowUnauthenticatedCallers);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="networkCredential" Type="System.Net.NetworkCredential" />
        <Parameter Name="extractGroupsForWindowsAccounts" Type="System.Boolean" />
        <Parameter Name="allowUnauthenticatedCallers" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="networkCredential">
          <see cref="T:System.Net.NetworkCredential" />.</param>
        <param name="extractGroupsForWindowsAccounts">
          <see langword="true" /> si les groupes auxquels les comptes Windows appartiennent sont extraits ; sinon, <see langword="false" />.</param>
        <param name="allowUnauthenticatedCallers">
          <see langword="true" /> si les appelants non authentifiés (anonymes) sont autorisés ; sinon, <see langword="false" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Security.Tokens.SspiSecurityToken" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SspiSecurityToken (System.Security.Principal.TokenImpersonationLevel impersonationLevel, bool allowNtlm, System.Net.NetworkCredential networkCredential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Security.Principal.TokenImpersonationLevel impersonationLevel, bool allowNtlm, class System.Net.NetworkCredential networkCredential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Security.Tokens.SspiSecurityToken.#ctor(System.Security.Principal.TokenImpersonationLevel,System.Boolean,System.Net.NetworkCredential)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SspiSecurityToken(System::Security::Principal::TokenImpersonationLevel impersonationLevel, bool allowNtlm, System::Net::NetworkCredential ^ networkCredential);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="impersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
        <Parameter Name="allowNtlm" Type="System.Boolean" />
        <Parameter Name="networkCredential" Type="System.Net.NetworkCredential" />
      </Parameters>
      <Docs>
        <param name="impersonationLevel">
          <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</param>
        <param name="allowNtlm">
          <see langword="true" /> si l'authentification NTLM est autorisée ; <see langword="false" /> dans le cas contraire.</param>
        <param name="networkCredential">
          <see cref="T:System.Net.NetworkCredential" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Security.Tokens.SspiSecurityToken" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowNtlm">
      <MemberSignature Language="C#" Value="public bool AllowNtlm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowNtlm" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.AllowNtlm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowNtlm As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowNtlm { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique s'il faut autoriser l'authentification NTLM.</summary>
        <value>
          <see langword="true" /> si l'authentification NTLM est autorisée ; <see langword="false" /> dans le cas contraire.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'affectation de la valeur `true` à cette propriété permet de rétrograder l'authentification à NTLM si Kerberos n'est pas disponible.  
  
 Si cette propriété `false` provoque Windows Communication Foundation (WCF) pour effectuer un meilleur effort pour lever une exception si NTLM est utilisé. Notez que l'affectation de la valeur `false` à cette propriété peut ne pas empêcher la transmission des informations d'identification NTLM.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowUnauthenticatedCallers">
      <MemberSignature Language="C#" Value="public bool AllowUnauthenticatedCallers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowUnauthenticatedCallers" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.AllowUnauthenticatedCallers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowUnauthenticatedCallers As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowUnauthenticatedCallers { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique s'il faut autoriser des appelants anonymes.</summary>
        <value>
          <see langword="true" /> si les appelants anonymes sont autorisés ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExtractGroupsForWindowsAccounts">
      <MemberSignature Language="C#" Value="public bool ExtractGroupsForWindowsAccounts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExtractGroupsForWindowsAccounts" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.ExtractGroupsForWindowsAccounts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtractGroupsForWindowsAccounts As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExtractGroupsForWindowsAccounts { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique s'il faut extraire les groupes auxquels les comptes Windows appartiennent.</summary>
        <value>
          <see langword="true" /> si les groupes auxquels les comptes Windows appartiennent sont extraits ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public override string Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Id { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'ID du jeton.</summary>
        <value>ID du jeton.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel ImpersonationLevel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel ImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.ImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel ImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le niveau d'emprunt d'identité du jeton.</summary>
        <value>
          <see cref="T:System.Security.Principal.TokenImpersonationLevel" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NetworkCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential NetworkCredential { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkCredential NetworkCredential" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.NetworkCredential" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NetworkCredential As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkCredential ^ NetworkCredential { System::Net::NetworkCredential ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'information d'identification de réseau.</summary>
        <value>
          <see cref="T:System.Net.NetworkCredential" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityKeys">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Tokens.SecurityKey&gt; SecurityKeys" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.SecurityKeys" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SecurityKeys As ReadOnlyCollection(Of SecurityKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ SecurityKeys { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Tokens::SecurityKey ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Tokens.SecurityKey&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection de clés de sécurité.</summary>
        <value>Collection de <see cref="T:System.IdentityModel.Tokens.SecurityKey" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidFrom">
      <MemberSignature Language="C#" Value="public override DateTime ValidFrom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidFrom" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.ValidFrom" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValidFrom As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime ValidFrom { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la date de début effective du jeton.</summary>
        <value>
          <see cref="T:System.DateTime" /> qui représente la date de début effective du jeton.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidTo">
      <MemberSignature Language="C#" Value="public override DateTime ValidTo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ValidTo" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.Tokens.SspiSecurityToken.ValidTo" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ValidTo As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime ValidTo { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la date d'expiration du jeton.</summary>
        <value>
          <see cref="T:System.DateTime" /> qui représente la date d'expiration du jeton.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>