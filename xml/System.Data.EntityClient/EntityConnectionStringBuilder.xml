<Type Name="EntityConnectionStringBuilder" FullName="System.Data.EntityClient.EntityConnectionStringBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="05c31bdf4a99ff3a55dda148466f4692bc3cf2ef" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37681839" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EntityConnectionStringBuilder : System.Data.Common.DbConnectionStringBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EntityConnectionStringBuilder extends System.Data.Common.DbConnectionStringBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Data.EntityClient.EntityConnectionStringBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityConnectionStringBuilder&#xA;Inherits DbConnectionStringBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityConnectionStringBuilder sealed : System::Data::Common::DbConnectionStringBuilder" />
  <TypeSignature Language="F#" Value="type EntityConnectionStringBuilder = class&#xA;    inherit DbConnectionStringBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.DbConnectionStringBuilder</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ecd7e-101">Provides a simple way to create and manage the contents of connection strings used by the EntityClient.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ecd7e-101">Provides a simple way to create and manage the contents of connection strings used by the EntityClient.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd7e-102">Le générateur de chaînes de connexion permet aux développeurs de créer par programme des chaînes de connexion correctes du point de vue de la syntaxe, et d'analyser et régénérer des chaînes de connexion existantes, à l'aide de propriétés et de méthodes de la classe.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-102">The connection string builder lets developers programmatically create syntactically correct connection strings, and parse and rebuild existing connection strings, by using properties and methods of the class.</span></span> <span data-ttu-id="ecd7e-103">Le générateur de chaînes de connexion fournit des propriétés fortement typées correspondant aux paires mot clé/valeur connues.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-103">The connection string builder provides strongly typed properties corresponding to the known keyword/value pairs.</span></span> <span data-ttu-id="ecd7e-104">Les développeurs qui doivent créer des chaînes de connexion dans le cadre d'applications peuvent utiliser la classe <xref:System.Data.EntityClient.EntityConnectionStringBuilder> pour générer et modifier des chaînes de connexion.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-104">Developers who must create connection strings as part of applications can use the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> class to build and modify connection strings.</span></span>  
  
 <span data-ttu-id="ecd7e-105"><xref:System.Data.EntityClient.EntityConnectionStringBuilder> vérifie la validité des paires mot clé/valeur, chacune d'elles étant exposée sous la forme d'une valeur de propriété <xref:System.Data.EntityClient.EntityConnectionStringBuilder>.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-105">The <xref:System.Data.EntityClient.EntityConnectionStringBuilder> performs checks for valid keyword/value pairs, each of which is exposed as a <xref:System.Data.EntityClient.EntityConnectionStringBuilder> property value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ecd7e-106">La chaîne de connexion de la source de données sous-jacente est fournie par la propriété <xref:System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString%2A>.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-106">The connection string for the underlying data source is supplied by the <xref:System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString%2A> property.</span></span> <span data-ttu-id="ecd7e-107">La validité des paires mot clé/valeur de la chaîne de connexion de fournisseur spécifiée n'est pas vérifiée.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-107">The supplied provider connection string is not checked for valid keyword/value pairs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecd7e-108">L'exemple ci-dessous montre comment utiliser l'objet <xref:System.Data.EntityClient.EntityConnectionStringBuilder> avec un objet <xref:System.Data.SqlClient.SqlConnectionStringBuilder>.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-108">The following example demonstrates how to use the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> in conjunction with a <xref:System.Data.SqlClient.SqlConnectionStringBuilder>.</span></span>  
  
 [!code-csharp[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/csharp/VS_Snippets_Data/eSQLBasicExamples/CS/Program.cs#buildingconnectionstringwithentitycommand)]
 [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/visualbasic/VS_Snippets_Data/eSQLBasicExamples/VB/Program.vb#buildingconnectionstringwithentitycommand)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Data.EntityClient.EntityConnection" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ecd7e-109">Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-109">Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityConnectionStringBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityConnectionStringBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ecd7e-110">Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-110">Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ecd7e-111">L'exemple ci-dessous montre comment utiliser l'objet <xref:System.Data.EntityClient.EntityConnectionStringBuilder> avec un objet <xref:System.Data.SqlClient.SqlConnectionStringBuilder>.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-111">The following example demonstrates how to use the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> in conjunction with a <xref:System.Data.SqlClient.SqlConnectionStringBuilder>.</span></span> <span data-ttu-id="ecd7e-112">Le code définit les propriétés d’un `SqlConnectionStringBuilder` pour créer un <xref:System.Data.SqlClient.SqlConnection> chaîne de connexion qui fournit une partie de la chaîne de connexion du fournisseur sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-112">The code sets properties of a `SqlConnectionStringBuilder` to create a <xref:System.Data.SqlClient.SqlConnection> connection string that supplies part of the underlying provider connection string.</span></span> <span data-ttu-id="ecd7e-113">Notez que le nom du fournisseur ne peut pas être défini à l’aide de la `SqlConnectionStringBuilder` car il n’est pas valide `SqlConnection` syntaxe de chaîne de connexion.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-113">Note that the Provider name cannot be set using the `SqlConnectionStringBuilder` because it is not valid `SqlConnection` connection string syntax.</span></span> <span data-ttu-id="ecd7e-114">Le code crée la <xref:System.Data.EntityClient.EntityConnection> chaîne de connexion en définissant `EntityConnectionStringBuilder` propriétés.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-114">The code creates the <xref:System.Data.EntityClient.EntityConnection> connection string by setting `EntityConnectionStringBuilder` properties.</span></span>  
  
 [!code-csharp[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/csharp/VS_Snippets_Data/eSQLBasicExamples/CS/Program.cs#buildingconnectionstringwithentitycommand)]
 [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/visualbasic/VS_Snippets_Data/eSQLBasicExamples/VB/Program.vb#buildingconnectionstringwithentitycommand)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityConnectionStringBuilder (string connectionString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityConnectionStringBuilder(System::String ^ connectionString);" />
      <MemberSignature Language="F#" Value="new System.Data.EntityClient.EntityConnectionStringBuilder : string -&gt; System.Data.EntityClient.EntityConnectionStringBuilder" Usage="new System.Data.EntityClient.EntityConnectionStringBuilder connectionString" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">
          <span data-ttu-id="ecd7e-115">A provider-specific connection string to the underlying data source.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-115">A provider-specific connection string to the underlying data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecd7e-116">Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> class using the supplied connection string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-116">Initializes a new instance of the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> class using the supplied connection string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd7e-117">Fourni `connectionString` n’est pas activée pour les paires mot clé/valeur valide.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-117">The supplied `connectionString` is not checked for valid keyword/value pairs.</span></span> <span data-ttu-id="ecd7e-118">Pour connaître la syntaxe mot clé/valeur valide, voir <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-118">For valid keyword/value syntax, see <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span></span>  
  
 <span data-ttu-id="ecd7e-119">Le nom invariant du fournisseur doit être spécifié dans le `connectionString` paramètre.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-119">The invariant Provider name must be specified in the `connectionString` parameter.</span></span> <span data-ttu-id="ecd7e-120">Les fournisseurs pris en charge sont les suivants :</span><span class="sxs-lookup"><span data-stu-id="ecd7e-120">Supported providers include the following:</span></span>  
  
-   `System.Data.Odbc`  
  
-   `System.Data.OleDb`  
  
-   `System.Data.OracleClient`  
  
-   `System.Data.SqlClient`  
  
-   `Microsoft.SqlServerCe.Client`  
  
   
  
## Examples  
 <span data-ttu-id="ecd7e-121">L'exemple ci-dessous montre comment utiliser l'objet <xref:System.Data.EntityClient.EntityConnectionStringBuilder> avec un objet <xref:System.Data.SqlClient.SqlConnectionStringBuilder>.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-121">The following example demonstrates how to use the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> in conjunction with a <xref:System.Data.SqlClient.SqlConnectionStringBuilder>.</span></span> <span data-ttu-id="ecd7e-122">Le code définit les propriétés d’un `SqlConnectionStringBuilder` pour créer un <xref:System.Data.SqlClient.SqlConnection> chaîne de connexion qui fournit une partie de la chaîne de connexion du fournisseur sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-122">The code sets properties of a `SqlConnectionStringBuilder` to create a <xref:System.Data.SqlClient.SqlConnection> connection string that supplies part of the underlying provider connection string.</span></span> <span data-ttu-id="ecd7e-123">Notez que le nom du fournisseur ne peut pas être défini à l’aide de la `SqlConnectionStringBuilder` car il n’est pas valide `SqlConnection` syntaxe de chaîne de connexion.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-123">Note that the Provider name cannot be set using the `SqlConnectionStringBuilder` because it is not valid `SqlConnection` connection string syntax.</span></span> <span data-ttu-id="ecd7e-124">Le code crée la <xref:System.Data.EntityClient.EntityConnection> chaîne de connexion en définissant `EntityConnectionStringBuilder` propriétés.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-124">The code creates the <xref:System.Data.EntityClient.EntityConnection> connection string by setting `EntityConnectionStringBuilder` properties.</span></span> <span data-ttu-id="ecd7e-125">Il n’utilise pas le `connectionString` de surcharge.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-125">It does not use the `connectionString` overload.</span></span>  
  
 [!code-csharp[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/csharp/VS_Snippets_Data/eSQLBasicExamples/CS/Program.cs#buildingconnectionstringwithentitycommand)]
 [!code-vb[eSQLBasicExamples#BuildingConnectionStringWithEntityCommand](~/samples/snippets/visualbasic/VS_Snippets_Data/eSQLBasicExamples/VB/Program.vb#buildingconnectionstringwithentitycommand)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public override void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Clear();" />
      <MemberSignature Language="F#" Value="override this.Clear : unit -&gt; unit" Usage="entityConnectionStringBuilder.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ecd7e-126">Clears the contents of the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-126">Clears the contents of the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd7e-127">Le <xref:System.Data.EntityClient.EntityConnectionStringBuilder.Clear%2A> méthode supprime toutes les paires mot clé/valeur à partir de la <xref:System.Data.EntityClient.EntityConnectionStringBuilder> et réinitialise toutes les propriétés correspondantes sur null (`Nothing` en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="ecd7e-127">The <xref:System.Data.EntityClient.EntityConnectionStringBuilder.Clear%2A> method removes all keyword/value pairs from the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> and resets all corresponding properties to null (`Nothing` in Visual Basic).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public override bool ContainsKey (string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ContainsKey(string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ContainsKey (keyword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ContainsKey(System::String ^ keyword);" />
      <MemberSignature Language="F#" Value="override this.ContainsKey : string -&gt; bool" Usage="entityConnectionStringBuilder.ContainsKey keyword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">
          <span data-ttu-id="ecd7e-128">The key to locate in the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-128">The key to locate in the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecd7e-129">Determines whether the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> contains a specific key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-129">Determines whether the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> contains a specific key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ecd7e-130">Returns <see langword="true" /> if the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> contains an element that has the specified key; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-130">Returns <see langword="true" /> if the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> contains an element that has the specified key; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public override bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Data.EntityClient.EntityConnectionStringBuilder.IsFixedSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ecd7e-131">Gets a value that indicates whether the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> has a fixed size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-131">Gets a value that indicates whether the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ecd7e-132">Retourne <see langword="true" /> dans tous les cas, étant donné que le <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> fournit une collection de taille fixe de paires mot clé/valeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-132">Returns <see langword="true" /> in every case, because the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> supplies a fixed-size collection of keyword/value pairs.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[string keyword] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(keyword As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ keyword); void set(System::String ^ keyword, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Data.EntityClient.EntityConnectionStringBuilder.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">
          <span data-ttu-id="ecd7e-133">The key of the item to get or set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-133">The key of the item to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecd7e-134">Gets or sets the value associated with the specified key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-134">Gets or sets the value associated with the specified key.</span>
          </span>
          <span data-ttu-id="ecd7e-135">In C#, this property is the indexer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-135">In C#, this property is the indexer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ecd7e-136">Valeur associée à la clé spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-136">The value associated with the specified key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd7e-137">Dans la mesure où <xref:System.Data.EntityClient.EntityConnectionStringBuilder> contient un dictionnaire de taille fixe, la tentative d'ajout d'une clé qui n'existe pas dans le dictionnaire lève une exception <xref:System.Collections.Generic.KeyNotFoundException>.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-137">Because the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> contains a fixed-size dictionary, trying to add a key that does not exist in the dictionary throws a <xref:System.Collections.Generic.KeyNotFoundException>.</span></span>  
  
 <span data-ttu-id="ecd7e-138">Pour connaître la syntaxe mot clé/valeur valide, voir <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-138">For valid keyword/value syntax, see <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ecd7e-139">
            <paramref name="keyword" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-139">
              <paramref name="keyword" /> is a null reference (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.Collections.Generic.KeyNotFoundException">
          <span data-ttu-id="ecd7e-140">Tried to add a key that does not exist in the available keys.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-140">Tried to add a key that does not exist in the available keys.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="ecd7e-141">Invalid value in the connection string (specifically, a Boolean or numeric value was expected but not supplied).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-141">Invalid value in the connection string (specifically, a Boolean or numeric value was expected but not supplied).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public override System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.Keys" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Keys : System.Collections.ICollection" Usage="System.Data.EntityClient.EntityConnectionStringBuilder.Keys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ecd7e-142">Gets an <see cref="T:System.Collections.ICollection" /> that contains the keys in the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-142">Gets an <see cref="T:System.Collections.ICollection" /> that contains the keys in the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ecd7e-143">
            <see cref="T:System.Collections.ICollection" /> qui contient les clés de <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-143">An <see cref="T:System.Collections.ICollection" /> that contains the keys in the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd7e-144">Pour connaître la syntaxe mot clé/valeur valide, voir <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-144">For valid keyword/value syntax, see <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public string Metadata { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Metadata" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public Property Metadata As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Metadata { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Metadata : string with get, set" Usage="System.Data.EntityClient.EntityConnectionStringBuilder.Metadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Metadata")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ecd7e-145">Gets or sets the metadata locations in the connection string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-145">Gets or sets the metadata locations in the connection string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ecd7e-146">Obtient ou définit l'emplacement des métadonnées dans la chaîne de connexion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-146">Gets or sets the metadata locations in the connection string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd7e-147">Pour connaître la syntaxe mot clé/valeur valide, voir <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-147">For valid keyword/value syntax, see <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Data.EntityClient.EntityConnectionStringBuilder.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Name")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ecd7e-148">Gets or sets the name of a section as defined in a configuration file.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-148">Gets or sets the name of a section as defined in a configuration file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ecd7e-149">Nom d'une section dans un fichier de configuration.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-149">The name of a section in a configuration file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd7e-150">Pour connaître la syntaxe mot clé/valeur valide, voir <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-150">For valid keyword/value syntax, see <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Provider">
      <MemberSignature Language="C#" Value="public string Provider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Provider" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.Provider" />
      <MemberSignature Language="VB.NET" Value="Public Property Provider As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Provider { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Provider : string with get, set" Usage="System.Data.EntityClient.EntityConnectionStringBuilder.Provider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Provider")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ecd7e-151">Gets or sets the name of the underlying [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] data provider in the connection string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-151">Gets or sets the name of the underlying [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] data provider in the connection string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ecd7e-152">Le nom invariant de sous-jacent [ ! Fournisseur de données Include[dnprdnshort](~/Includes/dnprdnshort-MD.MD)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-152">The invariant name of the underlying [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] data provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd7e-153">Le nom invariant du fournisseur est utilisé pour récupérer l'objet <xref:System.Data.Common.DbProviderFactory> du fournisseur sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-153">The invariant provider name is used retrieve the <xref:System.Data.Common.DbProviderFactory> object for the underlying provider.</span></span>  
  
 <span data-ttu-id="ecd7e-154">Pour connaître la syntaxe mot clé/valeur valide, voir <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-154">For valid keyword/value syntax, see <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderConnectionString">
      <MemberSignature Language="C#" Value="public string ProviderConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Property ProviderConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderConnectionString : string with get, set" Usage="System.Data.EntityClient.EntityConnectionStringBuilder.ProviderConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DisplayName("Provider Connection String")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ecd7e-155">Gets or sets the inner, provider-specific connection string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-155">Gets or sets the inner, provider-specific connection string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ecd7e-156">Chaîne de connexion interne, spécifique au fournisseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-156">The inner, provider-specific connection string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd7e-157">La validité des paires mot clé/valeur n'est pas vérifiée dans la chaîne de connexion spécifique au fournisseur avant que celle-ci ne soit définie.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-157">The provider-specific connection string is not checked for valid keyword/value pairs before it is set.</span></span> <span data-ttu-id="ecd7e-158">Les développeurs peuvent créer des chaînes de connexion en utilisant une classe de générateur de chaînes de connexion fortement typées ou la classe <xref:System.Data.Common.DbConnectionStringBuilder>.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-158">Developers can create connection strings by using either a strongly typed connection string builder class, or they can use the <xref:System.Data.Common.DbConnectionStringBuilder> class.</span></span> <span data-ttu-id="ecd7e-159"><xref:System.Data.Common.DbConnectionStringBuilder> ne vérifie pas la validité des paires mot clé/valeur.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-159">The <xref:System.Data.Common.DbConnectionStringBuilder> performs no checks for valid keyword/value pairs.</span></span> <span data-ttu-id="ecd7e-160">Par conséquent, il est possible de créer à l'aide de cette classe des chaînes de connexion non valides.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-160">Therefore, it is possible using this class to create invalid connection strings.</span></span>  
  
 <span data-ttu-id="ecd7e-161">Pour connaître la syntaxe mot clé/valeur valide, voir <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-161">For valid keyword/value syntax, see <xref:System.Data.EntityClient.EntityConnection.ConnectionString%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public override bool Remove (string keyword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Remove(string keyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Remove (keyword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Remove(System::String ^ keyword);" />
      <MemberSignature Language="F#" Value="override this.Remove : string -&gt; bool" Usage="entityConnectionStringBuilder.Remove keyword" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keyword">
          <span data-ttu-id="ecd7e-162">The key of the keyword/value pair to be removed from the connection string in this <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-162">The key of the keyword/value pair to be removed from the connection string in this <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecd7e-163">Removes the entry with the specified key from the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-163">Removes the entry with the specified key from the <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ecd7e-164">Returns <see langword="true" /> if the key existed in the connection string and was removed; <see langword="false" /> if the key did not exist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-164">Returns <see langword="true" /> if the key existed in the connection string and was removed; <see langword="false" /> if the key did not exist.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd7e-165">Étant donné que le `Remove` méthode retourne une valeur qui indique sa réussite, il n’est pas nécessaire de rechercher une clé avant d’essayer de supprimer la paire mot clé/valeur à partir de la <xref:System.Data.EntityClient.EntityConnectionStringBuilder> instance.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-165">Because the `Remove` method returns a value that indicates its success, it is not required to look for a key before trying to remove the keyword/value pair from the <xref:System.Data.EntityClient.EntityConnectionStringBuilder> instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ecd7e-166">
            <paramref name="keyword" /> is null (<see langword="Nothing" /> in Visual Basic)</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-166">
              <paramref name="keyword" /> is null (<see langword="Nothing" /> in Visual Basic)</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public override bool TryGetValue (string keyword, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool TryGetValue(string keyword, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue(System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function TryGetValue (keyword As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool TryGetValue(System::String ^ keyword, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberSignature Language="F#" Value="override this.TryGetValue : string *  -&gt; bool" Usage="entityConnectionStringBuilder.TryGetValue (keyword, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyword" Type="System.String" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="keyword">
          <span data-ttu-id="ecd7e-167">The key of the item to retrieve.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-167">The key of the item to retrieve.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="ecd7e-168">The value corresponding to <c>keyword.</c></span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-168">The value corresponding to <c>keyword.</c></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecd7e-169">Retrieves a value corresponding to the supplied key from this <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-169">Retrieves a value corresponding to the supplied key from this <see cref="T:System.Data.EntityClient.EntityConnectionStringBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ecd7e-170">Returns <see langword="true" /> if <paramref name="keyword" /> was found in the connection string; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-170">Returns <see langword="true" /> if <paramref name="keyword" /> was found in the connection string; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecd7e-171">La méthode <xref:System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue%2A> permet aux développeurs de récupérer en toute sécurité une valeur à partir d'un <xref:System.Data.EntityClient.EntityConnectionStringBuilder> sans devoir vérifier que le nom de clé fourni est valide.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-171">The <xref:System.Data.EntityClient.EntityConnectionStringBuilder.TryGetValue%2A> method lets developers safely retrieve a value from a <xref:System.Data.EntityClient.EntityConnectionStringBuilder> without having to verify that the supplied key name is a valid key name.</span></span> <span data-ttu-id="ecd7e-172">`TryGetValue` ne lève pas d’exception lorsqu’elle est passée à une clé inexistante.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-172">`TryGetValue` does not raise an exception when it is passed a nonexistent key.</span></span> <span data-ttu-id="ecd7e-173">Appel `TryGetValue` avec une clé inexistante place la valeur null (`Nothing` en Visual Basic) dans le `value` paramètre.</span><span class="sxs-lookup"><span data-stu-id="ecd7e-173">Calling `TryGetValue` with a nonexistent key puts the value null (`Nothing` in Visual Basic) in the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ecd7e-174">
            <paramref name="keyword" /> contains a null value (<see langword="Nothing" /> in Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecd7e-174">
              <paramref name="keyword" /> contains a null value (<see langword="Nothing" /> in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>