<Type Name="ProviderBase" FullName="System.Configuration.Provider.ProviderBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5126e90dd435ebef49c5ec4e117fd9470d9e99eb" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51912561" /></Metadata><TypeSignature Language="C#" Value="public abstract class ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ProviderBase extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProviderBase abstract" />
  <TypeSignature Language="F#" Value="type ProviderBase = class" />
  <AssemblyInfo>
    <AssemblyName>System.Configuration</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit une implémentation de base pour le modèle de fournisseur extensible.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le modèle de fournisseur est conçu pour encapsuler tout ou partie de la fonctionnalité de plusieurs fonctionnalités ASP.NET, telles que l’appartenance, les profils et les configuration protégée. Il permet au développeur de créer des classes de prise en charge qui fournissent plusieurs implémentations de la fonctionnalité encapsulée. En outre, les développeurs peuvent écrire de nouvelles fonctionnalités à l’aide du modèle de fournisseur. Cela peut être un moyen efficace pour prendre en charge de plusieurs implémentations de la fonctionnalité fonctionnalité d’une sans dupliquer le code ni recoder la couche d’application si la méthode d’implémentation doit être modifiée.  
  
 Le <xref:System.Configuration.Provider.ProviderBase> classe est simple, contenant uniquement quelques méthodes de base et les propriétés qui sont communes à tous les fournisseurs. Les fournisseurs propres aux fonctionnalités (telles que <xref:System.Web.Security.MembershipProvider>) héritent <xref:System.Configuration.Provider.ProviderBase> et établir les méthodes nécessaires et les propriétés qui les fournisseurs spécifiques à l’implémentation de cette fonctionnalité doivent prendre en charge. Les fournisseurs spécifiques à l’implémentation (tels que <xref:System.Web.Security.SqlMembershipProvider>) héritent ensuite d’un fournisseur spécifique à la fonctionnalité (dans ce cas, <xref:System.Web.Security.MembershipProvider>).  
  
 L’aspect le plus important du modèle de fournisseur est que l’implémentation (par exemple, si les données sont conservées sous forme d’un fichier texte ou dans une base de données) est abstrait du code d’application. Le type du fournisseur spécifique à l’implémentation de la fonctionnalité donnée est désigné dans un fichier de configuration. Le fournisseur de niveau de fonctionnalité puis lit dans le type à partir du fichier de configuration et sert de fabrique au code. Le développeur d’applications permettre ensuite utiliser les classes de fonctionnalité dans le code d’application. Le type d’implémentation peut être échangé dans le fichier de configuration, éliminant la nécessité de réécrire le code pour prendre en compte la méthodologie d’implémentation différentes.  
  
 Les fournisseurs inclus avec ASP.NET sont essentiellement des abstractions d’implémentations de persistance des données de fonctionnalités telles que les profils ou l’appartenance. Toutefois, ce modèle peut être appliqué à n’importe quel autre type de fonctionnalité qui peut être soustraite et implémentée de plusieurs façons.  
  
   
  
## Examples  
 Pour obtenir un exemple montrant comment utiliser le <xref:System.Configuration.Provider.ProviderBase> de classe, consultez [exemple d’implémentation de fournisseur de profil](https://msdn.microsoft.com/library/c36e8a56-b416-40b7-95c1-c662cfb8f906).  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/c36e8a56-b416-40b7-95c1-c662cfb8f906">Exemple d’implémentation de fournisseur de profil</related>
    <related type="Article" href="https://msdn.microsoft.com/library/bfa00166-2e56-4234-a596-30cf9d197792">Exemple d’implémentation de fournisseur de Configuration protégée</related>
    <related type="Article" href="https://msdn.microsoft.com/library/4634e914-dcd1-48aa-914b-58aecfb86879">Comment : exemple d’implémentation de fournisseur d’appartenances</related>
    <related type="Article" href="https://msdn.microsoft.com/library/13efc440-bc9c-4c43-825f-dc38465d8bce">Comment : exemple d’implémentation de fournisseur de rôles</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ProviderBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Provider.ProviderBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ProviderBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Configuration.Provider.ProviderBase" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public virtual string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Provider.ProviderBase.Description" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Configuration.Provider.ProviderBase.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une description brève et conviviale qui peut s'afficher dans les outils d'administration ou d'autres interfaces utilisateur.</summary>
        <value>Description brève et conviviale qui peut s'afficher dans les outils d'administration ou d'autres interfaces utilisateur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un fournisseur configuré ne fournit pas une description, la valeur de la <xref:System.Configuration.Provider.ProviderBase.Name%2A> propriété est retournée en tant que valeur par défaut.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public virtual void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit&#xA;override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="providerBase.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Nom convivial du fournisseur.</param>
        <param name="config">Collection des paires nom/valeur qui représentent les attributs spécifiques au fournisseur spécifiés dans la configuration pour ce fournisseur.</param>
        <summary>Initialise le générateur de configuration.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’implémentation de classe de base suit en interne le nombre de fois où le fournisseur `Initialize` méthode a été appelée. Si un fournisseur est initialisé plusieurs fois, un `InvalidOperationException` est levée indiquant que le fournisseur est déjà initialisé.  
  
 Étant donné que la plupart des fournisseurs de fonctionnalités appellent <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> avant d’effectuer l’initialisation spécifique au fournisseur, cette méthode est un emplacement central pour empêcher l’initialisation double.  
  
   
  
## Examples  
 Pour obtenir un exemple montrant comment utiliser <xref:System.Configuration.Provider.ProviderBase.Initialize%2A>, consultez [exemple d’implémentation de fournisseur de profil](https://msdn.microsoft.com/library/c36e8a56-b416-40b7-95c1-c662cfb8f906).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le nom du fournisseur est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">La longueur du nom du fournisseur est égale à zéro.</exception>
        <exception cref="T:System.InvalidOperationException">Tentative d’appel de <see cref="M:System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> sur un fournisseur après que celui-ci a déjà été initialisé.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/c36e8a56-b416-40b7-95c1-c662cfb8f906">Exemple d’implémentation de fournisseur de profil</related>
        <related type="Article" href="https://msdn.microsoft.com/library/bfa00166-2e56-4234-a596-30cf9d197792">Exemple d’implémentation de fournisseur de Configuration protégée</related>
        <related type="Article" href="https://msdn.microsoft.com/library/4634e914-dcd1-48aa-914b-58aecfb86879">Comment : exemple d’implémentation de fournisseur d’appartenances</related>
        <related type="Article" href="https://msdn.microsoft.com/library/13efc440-bc9c-4c43-825f-dc38465d8bce">Comment : exemple d’implémentation de fournisseur de rôles</related>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Configuration.Provider.ProviderBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Configuration.Provider.ProviderBase.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Configuration</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Configuration.ConfigurationManager</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom convivial qui référence le fournisseur au cours de la configuration.</summary>
        <value>Nom convivial qui référence le fournisseur au cours de la configuration.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le modèle recommandé pour cette chaîne est : [*fournisseur créateur*] [*Type d’implémentation*] [*fonctionnalité*] fournisseur. Bien que le <xref:System.Configuration.Provider.ProviderBase.Description%2A> propriété fournit également une description conviviale, la <xref:System.Configuration.Provider.ProviderBase.Name%2A> propriété est utilisée comme identificateur pour le fournisseur.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>