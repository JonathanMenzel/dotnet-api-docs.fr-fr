<Type Name="IVsaSite" FullName="Microsoft.Vsa.IVsaSite">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7dc0f617f0bca54a933c825b701a256312725ee4" /><Meta Name="ms.sourcegitcommit" Value="d8bd5d494445ce3fcad1321267cb87548d23a45b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/15/2018" /><Meta Name="ms.locfileid" Value="53445724" /></Metadata><TypeSignature Language="C#" Value="public interface IVsaSite" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IVsaSite" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Vsa.IVsaSite" />
  <TypeSignature Language="VB.NET" Value="Public Interface IVsaSite" />
  <TypeSignature Language="C++ CLI" Value="public interface class IVsaSite" />
  <TypeSignature Language="F#" Value="type IVsaSite = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Vsa</AssemblyName>
    <AssemblyVersion>7.0.5000.0</AssemblyVersion>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Obsolete("Use of this type is not recommended because it is being deprecated in Visual Studio 2005; there will be no replacement for this feature. Please see the ICodeCompiler documentation for additional help.")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.Guid("E0C0FFE2-7eea-4ee2-b7e4-0080c7eb0b74")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d4fad-101">Permet la communication entre l'hôte et le moteur de script.</span><span class="sxs-lookup"><span data-stu-id="d4fad-101">Enables communication between the host and the script engine.</span></span> <span data-ttu-id="d4fad-102">Cette interface est implémentée par l'hôte.</span><span class="sxs-lookup"><span data-stu-id="d4fad-102">This interface is implemented by the host.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="GetCompiledState">
      <MemberSignature Language="C#" Value="public void GetCompiledState (out byte[] pe, out byte[] debugInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetCompiledState([out] unsigned int8[]&amp; pe, [out] unsigned int8[]&amp; debugInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaSite.GetCompiledState(System.Byte[]@,System.Byte[]@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetCompiledState (ByRef pe As Byte(), ByRef debugInfo As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetCompiledState([Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % pe, [Runtime::InteropServices::Out] cli::array &lt;System::Byte&gt; ^ % debugInfo);" />
      <MemberSignature Language="F#" Value="abstract member GetCompiledState :  *  -&gt; unit" Usage="iVsaSite.GetCompiledState (pe, debugInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pe" Type="System.Byte[]" RefType="out" />
        <Parameter Name="debugInfo" Type="System.Byte[]" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pe"><span data-ttu-id="d4fad-103">État compilé du moteur ; assembly sous forme d'octets.</span><span class="sxs-lookup"><span data-stu-id="d4fad-103">The compiled state of the engine; an assembly in byte form.</span></span></param>
        <param name="debugInfo"><span data-ttu-id="d4fad-104">Informations de débogage de l'assembly, ou référence null si ces informations n'existent pas ou ne sont pas disponibles.</span><span class="sxs-lookup"><span data-stu-id="d4fad-104">The debugging information for the assembly, or a null reference if such information does not exist or is not available.</span></span></param>
        <summary><span data-ttu-id="d4fad-105">Obtient l'état compilé d'un moteur de script et, éventuellement, les informations de débogage associées.</span><span class="sxs-lookup"><span data-stu-id="d4fad-105">Gets the compiled state of a script engine, and, optionally, associated debugging information.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEventSourceInstance">
      <MemberSignature Language="C#" Value="public object GetEventSourceInstance (string itemName, string eventSourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetEventSourceInstance(string itemName, string eventSourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaSite.GetEventSourceInstance(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEventSourceInstance (itemName As String, eventSourceName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetEventSourceInstance(System::String ^ itemName, System::String ^ eventSourceName);" />
      <MemberSignature Language="F#" Value="abstract member GetEventSourceInstance : string * string -&gt; obj" Usage="iVsaSite.GetEventSourceInstance (itemName, eventSourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemName" Type="System.String" />
        <Parameter Name="eventSourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemName"><span data-ttu-id="d4fad-106">Nom de l'élément spécifié.</span><span class="sxs-lookup"><span data-stu-id="d4fad-106">The specified item name.</span></span></param>
        <param name="eventSourceName"><span data-ttu-id="d4fad-107">Nom de la source d'événement spécifiée.</span><span class="sxs-lookup"><span data-stu-id="d4fad-107">The specified event source name.</span></span></param>
        <summary><span data-ttu-id="d4fad-108">Obtient une référence à une source d’événement précédemment ajoutée à un moteur de script à l’aide de la méthode AddEventSource.</span><span class="sxs-lookup"><span data-stu-id="d4fad-108">Gets a reference to an event source previously added to a script engine using the AddEventSource method.</span></span></summary>
        <returns><span data-ttu-id="d4fad-109">Source d’événement ajoutée au moteur.</span><span class="sxs-lookup"><span data-stu-id="d4fad-109">The event source to the engine.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlobalInstance">
      <MemberSignature Language="C#" Value="public object GetGlobalInstance (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetGlobalInstance(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaSite.GetGlobalInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGlobalInstance (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetGlobalInstance(System::String ^ name);" />
      <MemberSignature Language="F#" Value="abstract member GetGlobalInstance : string -&gt; obj" Usage="iVsaSite.GetGlobalInstance name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="d4fad-110">Obtient une référence à un élément global, tel que l'objet d'application fourni par l'hôte.</span><span class="sxs-lookup"><span data-stu-id="d4fad-110">Gets a reference to a global item, such as the host-provided application object.</span></span></param>
        <summary><span data-ttu-id="d4fad-111">Obtient une référence à un élément global, tel que l'objet d'application fourni par l'hôte.</span><span class="sxs-lookup"><span data-stu-id="d4fad-111">Gets a reference to a global item, such as the host-provided application object.</span></span></summary>
        <returns><span data-ttu-id="d4fad-112">Référence à l’objet global.</span><span class="sxs-lookup"><span data-stu-id="d4fad-112">A reference to the global object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Notify">
      <MemberSignature Language="C#" Value="public void Notify (string notify, object info);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Notify(string notify, object info) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaSite.Notify(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Notify (notify As String, info As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Notify(System::String ^ notify, System::Object ^ info);" />
      <MemberSignature Language="F#" Value="abstract member Notify : string * obj -&gt; unit" Usage="iVsaSite.Notify (notify, info)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="notify" Type="System.String" />
        <Parameter Name="info" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="notify"><span data-ttu-id="d4fad-113">Indique à l'hôte les événements générés par le moteur de script .NET.</span><span class="sxs-lookup"><span data-stu-id="d4fad-113">Notifies the host about events generated by the .NET script engine.</span></span></param>
        <param name="info"><span data-ttu-id="d4fad-114">Indique à l'hôte les événements générés par le moteur de script .NET.</span><span class="sxs-lookup"><span data-stu-id="d4fad-114">Notifies the host about events generated by the .NET script engine.</span></span></param>
        <summary><span data-ttu-id="d4fad-115">Indique à l'hôte les événements générés par le moteur de script .NET.</span><span class="sxs-lookup"><span data-stu-id="d4fad-115">Notifies the host about events generated by the .NET script engine.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCompilerError">
      <MemberSignature Language="C#" Value="public bool OnCompilerError (Microsoft.Vsa.IVsaError error);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool OnCompilerError(class Microsoft.Vsa.IVsaError error) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Vsa.IVsaSite.OnCompilerError(Microsoft.Vsa.IVsaError)" />
      <MemberSignature Language="VB.NET" Value="Public Function OnCompilerError (error As IVsaError) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool OnCompilerError(Microsoft::Vsa::IVsaError ^ error);" />
      <MemberSignature Language="F#" Value="abstract member OnCompilerError : Microsoft.Vsa.IVsaError -&gt; bool" Usage="iVsaSite.OnCompilerError error" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Vsa</AssemblyName>
        <AssemblyVersion>7.0.5000.0</AssemblyVersion>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="error" Type="Microsoft.Vsa.IVsaError" />
      </Parameters>
      <Docs>
        <param name="error"><span data-ttu-id="d4fad-116">Objet <see cref="T:Microsoft.Vsa.IVsaError" /> représentant l'erreur incriminée.</span><span class="sxs-lookup"><span data-stu-id="d4fad-116">The <see cref="T:Microsoft.Vsa.IVsaError" /> object representing the offending error.</span></span></param>
        <summary><span data-ttu-id="d4fad-117">Indique à l'hôte comment répondre aux erreurs de compilation rencontrées par le moteur de script.</span><span class="sxs-lookup"><span data-stu-id="d4fad-117">Notifies the host about how to respond to compiler errors encountered by the script engine.</span></span></summary>
        <returns><span data-ttu-id="d4fad-118"><see langword="true" /> si le compilateur est dirigé pour continuer à signaler d’autres erreurs à l’objet <see cref="T:Microsoft.Vsa.IVsaSite" /> ; <see langword="false" /> si le compilateur est dirigé pour arrêter de signaler d’autres erreurs à l’objet IVsaSite.</span><span class="sxs-lookup"><span data-stu-id="d4fad-118"><see langword="true" /> if the compiler is directed to continue reporting further errors to the <see cref="T:Microsoft.Vsa.IVsaSite" /> object; <see langword="false" /> if the compiler is directed to stop reporting further errors to the IVsaSite object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>