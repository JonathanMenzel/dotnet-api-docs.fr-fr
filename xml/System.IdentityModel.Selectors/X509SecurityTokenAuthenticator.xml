<Type Name="X509SecurityTokenAuthenticator" FullName="System.IdentityModel.Selectors.X509SecurityTokenAuthenticator">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c985d38d6c8e6deda32f3db3477b3389960f4b0" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32692581" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class X509SecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenAuthenticator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit X509SecurityTokenAuthenticator extends System.IdentityModel.Selectors.SecurityTokenAuthenticator" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" />
  <TypeSignature Language="VB.NET" Value="Public Class X509SecurityTokenAuthenticator&#xA;Inherits SecurityTokenAuthenticator" />
  <TypeSignature Language="C++ CLI" Value="public ref class X509SecurityTokenAuthenticator : System::IdentityModel::Selectors::SecurityTokenAuthenticator" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenAuthenticator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Authentifie un <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la classe <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> pour authentifier des jetons de sécurité <xref:System.IdentityModel.Tokens.X509SecurityToken>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenAuthenticator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenAuthenticator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque la méthode <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> est appelée pour authentifier le jeton, le certificat X.509 n'est pas mappé à une identité Windows et le certificat est validé à l'aide d'une chaîne de certificats.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Selectors.X509CertificateValidator validator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (validator As X509CertificateValidator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenAuthenticator(System::IdentityModel::Selectors::X509CertificateValidator ^ validator);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validator" Type="System.IdentityModel.Selectors.X509CertificateValidator" />
      </Parameters>
      <Docs>
        <param name="validator">
          <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> qui vérifie que le certificat est valide.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /> à l'aide du validateur de certificat spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La classe <xref:System.IdentityModel.Selectors.X509CertificateValidator> fournit un jeu de modèles de validation de certificat prédéfinis, tels que la propriété <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A>. Ces modèles de validation peuvent être passés au paramètre `validator`. Lorsqu'une application requiert une méthode de validation personnalisée, dérivez une classe de <xref:System.IdentityModel.Selectors.X509CertificateValidator> et substituez la méthode <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>. La méthode <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> est appelée par la méthode <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>.  
  
 Par défaut, le <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator> ne mappe pas le certificat X.509 à une identité Windows.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (validator As X509CertificateValidator, mapToWindows As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenAuthenticator(System::IdentityModel::Selectors::X509CertificateValidator ^ validator, bool mapToWindows);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validator" Type="System.IdentityModel.Selectors.X509CertificateValidator" />
        <Parameter Name="mapToWindows" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="validator">
          <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> qui vérifie que le certificat est valide.</param>
        <param name="mapToWindows">
          <see langword="true" /> pour mapper l'identité du certificat à une identité Windows ; sinon, <see langword="false" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /> à l'aide de la méthode de la validation de certificat spécifiée et indique si l'identité du certificat est mappée à une identité Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La classe <xref:System.IdentityModel.Selectors.X509CertificateValidator> fournit un jeu de modèles de validation de certificat prédéfinis, tels que la propriété <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A>. Ces modèles de validation peuvent être passés au paramètre `validator`. Lorsqu'une application requiert une méthode de validation personnalisée, dérivez une classe de <xref:System.IdentityModel.Selectors.X509CertificateValidator> et substituez la méthode <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>. La méthode <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> est appelée par la méthode <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>.  
  
 Lorsque la méthode <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> est appelée pour authentifier le jeton et que `mapToWindows` a la valeur `true`, le certificat X.509 est mappé à un compte Windows et les revendications sont ajoutées au <xref:System.IdentityModel.Policy.EvaluationContext> avec les groupes Windows auxquels l'utilisateur appartient. Le mode de mappage du certificat X.509 à un compte Windows dépend du type de jeton de sécurité :  
  
-   Lorsque le jeton de sécurité est de type <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>, le certificat X.509 est mappé à l'aide de la propriété <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A>.  
  
-   Lorsque le jeton de sécurité est de type `X509SecurityToken`, le certificat est mappé à un compte Windows à l'aide de son nom d'utilisateur principal (UPN).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows, bool includeWindowsGroups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows, bool includeWindowsGroups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (validator As X509CertificateValidator, mapToWindows As Boolean, includeWindowsGroups As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; X509SecurityTokenAuthenticator(System::IdentityModel::Selectors::X509CertificateValidator ^ validator, bool mapToWindows, bool includeWindowsGroups);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validator" Type="System.IdentityModel.Selectors.X509CertificateValidator" />
        <Parameter Name="mapToWindows" Type="System.Boolean" />
        <Parameter Name="includeWindowsGroups" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="validator">
          <see cref="T:System.IdentityModel.Selectors.X509CertificateValidator" /> qui vérifie que le certificat est valide.</param>
        <param name="mapToWindows">
          <see langword="true" /> pour mapper l'identité du certificat à une identité Windows ; sinon, <see langword="false" />.</param>
        <param name="includeWindowsGroups">
          <see langword="true" /> pour inclure les groupes auxquels l'utilisateur Windows appartient dans la propriété <see cref="P:System.IdentityModel.Policy.AuthorizationContext.ClaimSets" /> qui est construite tout au long du processus d'authentification ; sinon, <see langword="false" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator" /> à l'aide de la méthode de validation de certificat spécifiée et indique si l'identité du certificat est mappée à une identité Windows et aux groupes Windows auxquels l'utilisateur appartient.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Passez `false` au paramètre `includeWindowsGroups` lorsque les informations du groupe Windows ne sont pas requises pour améliorer la performance.  
  
 La classe <xref:System.IdentityModel.Selectors.X509CertificateValidator> a plusieurs propriétés statiques, telles que la propriété <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> qui peut être passée au paramètre `validator`. Ces propriétés fournissent des méthodes de validation communes pour les certificats X.509. Lorsqu'une méthode de validation personnalisée est requise, dérivez une classe de <xref:System.IdentityModel.Selectors.X509CertificateValidator> et substituez la méthode <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>. La méthode <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> est appelée par la méthode <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>.  
  
 Lorsque `true` est passé au paramètre `mapToWindows`, le certificat X.509 est mappé à un compte Windows et les revendications pertinentes sont ajoutées au <xref:System.IdentityModel.Policy.EvaluationContext>, tel que les groupes Windows auxquels l'utilisateur appartient. Lorsque le jeton de sécurité est de type <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>, la propriété <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A> utilise l'identité spécifiée dans le jeton ; sinon, le certificat X.509 est mappé à une identité Windows avec une ouverture de session Kerberos S4U basée sur l'extension SubjectAltNames du nom d'utilisateur principal du certificat X.509.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidateTokenCore">
      <MemberSignature Language="C#" Value="protected override bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool CanValidateTokenCore(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CanValidateTokenCore (token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool CanValidateTokenCore(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> à valider.</param>
        <summary>Obtient une valeur qui indique si le jeton de sécurité spécifié peut être validé par cet authentificateur de jeton de sécurité.</summary>
        <returns>
          <see langword="true" /> lorsque <paramref name="token" /> est un jeton de sécurité <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> ou une classe qui dérive de <see cref="T:System.IdentityModel.Tokens.X509SecurityToken" /> ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore%2A> n'authentifie pas le jeton de sécurité ; cette opération est effectuée par la méthode <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapCertificateToWindowsAccount">
      <MemberSignature Language="C#" Value="public bool MapCertificateToWindowsAccount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MapCertificateToWindowsAccount" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MapCertificateToWindowsAccount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MapCertificateToWindowsAccount { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si le certificat X.509 doit être mappé à un compte Windows.</summary>
        <value>
          <see langword="true" /> pour mapper le certificat X.509 à un compte Windows; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de la propriété <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount%2A> peut uniquement être définie dans un constructeur.  
  
 Si une sécurité transport de type HTTPS ou SSL est utilisée et que le mappage est déjà assuré par un canal de sécurité sous-jacent ou par Internet Information Services (IIS), le mappage s’applique alors sans validation de chaîne. Sinon, le certificat est validé à l'aide d'une chaîne de certificats avant de faire le mappage, et le certificat doit chaîner à une identité NT_AUTHORITY. La structure de chaîne utilisée correspond à la CERT_CHAIN_POLICY_NT_AUTH tel que défini dans le `CertVerifyCertificateChainPolicy` (fonction) (consultez la [CertVerifyCertificateChainPolicy](http://go.microsoft.com/fwlink/?LinkId=83570) fonction dans le Kit de développement de chiffrement). Ce comportement se produit uniquement en cas de mappage d'un certificat à un compte Windows.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateTokenCore">
      <MemberSignature Language="C#" Value="protected override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; ValidateTokenCore(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ValidateTokenCore (token As SecurityToken) As ReadOnlyCollection(Of IAuthorizationPolicy)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ ValidateTokenCore(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">
          <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> à valider.</param>
        <summary>Authentifie le jeton de sécurité spécifié et retourne le jeu de stratégies d'autorisation pour le jeton de sécurité.</summary>
        <returns>
          <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> qui contient le jeu de stratégies d'autorisation en vigueur pour cette application.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque la méthode <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> est substituée, respectez les indications suivantes :  
  
-   Lorsque le jeton de sécurité passé dans le paramètre `token` ne peut pas être validé, levez l'exception <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>.  
  
-   Lorsqu'aucune stratégie d'autorisation n'est en vigueur pour cette application, retournez une <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> vide de type <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.  
  
 Lorsque cette méthode retourne `null`, Windows Communication Foundation génère un <xref:System.IdentityModel.Tokens.SecurityTokenValidationException> exception.  
  
 La méthode <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> appelle la méthode <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> de la méthode de validation spécifiée dans le constructeur pour authentifier le paramètre `token`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>