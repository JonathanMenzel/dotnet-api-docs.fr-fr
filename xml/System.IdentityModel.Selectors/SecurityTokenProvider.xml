<Type Name="SecurityTokenProvider" FullName="System.IdentityModel.Selectors.SecurityTokenProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ed4d9e2cd73cf5456547060a0013d4b97e22f59b" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57948105" /></Metadata><TypeSignature Language="C#" Value="public abstract class SecurityTokenProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit SecurityTokenProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.SecurityTokenProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class SecurityTokenProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SecurityTokenProvider abstract" />
  <TypeSignature Language="F#" Value="type SecurityTokenProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente un fournisseur de jetons de sécurité qui gère des jetons de sécurité  pour un expéditeur de message SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la classe <xref:System.IdentityModel.Selectors.SecurityTokenProvider> lorsque des jetons de sécurité personnalisés sont requis. Le rôle d'un fournisseur de jetons de sécurité est d'obtenir un jeton de sécurité lorsqu'un message SOAP est envoyé par un client et qu'un jeton de sécurité est utilisé pour authentifier le client ou protéger le message SOAP. Plus précisément, la méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> est appelée pour obtenir un jeton de sécurité. Le fournisseur de jetons de sécurité peut également être appelé pour annuler et renouveler une sécurité à l'aide des méthodes <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A> et <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A>.  
  
 Les classes qui dérivent de la classe <xref:System.IdentityModel.Selectors.SecurityTokenManager> implémentent la méthode <xref:System.IdentityModel.Selectors.SecurityTokenManager.CreateSecurityTokenProvider%2A> pour déterminer quel fournisseur de jetons de sécurité est requis pour un jeton de sécurité donné.  
  
 Les classes <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager> et <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager> fournissent les implémentations par défaut pour les types de jetons de sécurité intégrés. Dans les scénarios de jetons de sécurité personnalisés, vous devez dériver une classe de l'une des classes <xref:System.IdentityModel.Selectors.SecurityTokenManager>, <xref:System.ServiceModel.ClientCredentialsSecurityTokenManager> ou <xref:System.ServiceModel.Security.ServiceCredentialsSecurityTokenManager> et programmer les fonctions chargées de créer le fournisseur de jetons de sécurité, l'authentificateur de jetons de sécurité et le sérialiseur de jeton de sécurité pour le jeton de sécurité personnalisé. Pour plus d’informations sur la création d’un jeton personnalisé, consultez [Comment : Créer un jeton personnalisé](~/docs/framework/wcf/extending/how-to-create-a-custom-token.md).  
  
   
  
## Examples  
 [!code-csharp[SecurityTokenProvider#0](~/samples/snippets/csharp/VS_Snippets_CFX/securitytokenprovider/cs/samlsecuritytokenprovider.cs#0)]
 [!code-vb[SecurityTokenProvider#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/securitytokenprovider/vb/samlsecuritytokenprovider.vb#0)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Selectors.SecurityTokenManager" />
    <altmember cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" />
    <related type="Article" href="https://msdn.microsoft.com/library/6d892973-1558-4115-a9e1-696777776125">Procédure : Créer un jeton personnalisé</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected SecurityTokenProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; SecurityTokenProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCancelToken">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCancelToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginCancelToken(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCancelToken (timeout As TimeSpan, token As SecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCancelToken(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginCancelToken : TimeSpan * System.IdentityModel.Tokens.SecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenProvider.BeginCancelToken (timeout, token, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><see cref="T:System.TimeSpan" /> qui spécifie la valeur du délai d'attente pour le message qui annule le jeton de sécurité.</param>
        <param name="token"><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> à annuler.</param>
        <param name="callback">Le délégué<see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone de fermeture.</param>
        <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération asynchrone de fermeture.</param>
        <summary>Commence une opération asynchrone pour annuler un jeton de sécurité.</summary>
        <returns><see cref="T:System.IAsyncResult" /> qui référence l'opération asynchrone de fermeture.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un jeton de sécurité qui peut être annulé, comme un jeton émis, permet à un client qui a demandé un jeton de sécurité de l'annuler lorsqu'il n'en a plus besoin.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>La méthode <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> est appelée par la méthode <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />.  
  
Les méthodes asynchrones, qui possèdent un préfixe de début et de fin, n'ont pas besoin d'être substituées dans les classes dérivées. La classe de base <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> fournit une implémentation asynchrone basée sur les méthodes synchrones.</para></block>
      </Docs>
    </Member>
    <Member MemberName="BeginCancelTokenCore">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginCancelTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginCancelTokenCore(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginCancelTokenCore (timeout As TimeSpan, token As SecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginCancelTokenCore(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCancelTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginCancelTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenProvider.BeginCancelTokenCore (timeout, token, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><see cref="T:System.TimeSpan" /> qui spécifie la valeur du délai d'attente pour le message qui annule le jeton de sécurité.</param>
        <param name="token"><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> à annuler.</param>
        <param name="callback">Le délégué<see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone de fermeture.</param>
        <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération asynchrone de fermeture.</param>
        <summary>Commence une opération asynchrone pour annuler un jeton de sécurité.</summary>
        <returns><see cref="T:System.IAsyncResult" /> qui référence l'opération asynchrone de fermeture.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un jeton de sécurité qui peut être annulé, comme un jeton émis, permet à un client qui a demandé un jeton de sécurité de l'annuler lorsqu'il n'en a plus besoin.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Lorsque vous héritez de la classe <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" />, vous n'êtes pas tenu de substituer les méthodes asynchrones, étant donné que la classe de base <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> fournit la prise en charge asynchrone basée sur les méthodes synchrones. Par conséquent, vous n'êtes pas tenu de substituer la méthode <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />, à moins que vous deviez fournir votre propre implémentation asynchrone.  
  
La méthode <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" /> est appelée par la méthode <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />.  
  
Les méthodes asynchrones, qui possèdent un préfixe de début et de fin, n'ont pas besoin d'être substituées dans les classes dérivées. La classe de base <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> fournit une implémentation asynchrone basée sur les méthodes synchrones.</para></block>
      </Docs>
    </Member>
    <Member MemberName="BeginGetToken">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginGetToken (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginGetToken(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginGetToken (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginGetToken(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginGetToken : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenProvider.BeginGetToken (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><see cref="T:System.TimeSpan" /> qui spécifie la valeur du délai d'attente pour le message qui obtient le jeton de sécurité.</param>
        <param name="callback">Le délégué<see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone de fermeture.</param>
        <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération asynchrone de fermeture.</param>
        <summary>Commence une opération asynchrone pour obtenir un jeton de sécurité.</summary>
        <returns><see cref="T:System.IAsyncResult" /> qui référence l'opération de fermeture asynchrone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A> appelle la méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Les méthodes asynchrones, qui possèdent un préfixe de début et de fin, n'ont pas besoin d'être substituées dans les classes dérivées. La classe de base <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> fournit une implémentation asynchrone basée sur les méthodes synchrones.</para></block>
      </Docs>
    </Member>
    <Member MemberName="BeginGetTokenCore">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginGetTokenCore (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginGetTokenCore(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginGetTokenCore (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginGetTokenCore(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginGetTokenCore : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginGetTokenCore : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenProvider.BeginGetTokenCore (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><see cref="T:System.TimeSpan" /> qui spécifie la valeur du délai d'attente pour le message qui obtient le jeton de sécurité.</param>
        <param name="callback">Le délégué<see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone de fermeture.</param>
        <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération asynchrone de fermeture.</param>
        <summary>Commence une opération asynchrone pour obtenir un jeton de sécurité.</summary>
        <returns><see cref="T:System.IAsyncResult" /> qui référence l'opération asynchrone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous héritez de la classe <xref:System.IdentityModel.Selectors.SecurityTokenProvider>, vous n’êtes pas tenu de substituer les méthodes asynchrones, étant donné que la classe de base <xref:System.IdentityModel.Selectors.SecurityTokenProvider> fournit la prise en charge asynchrone basée sur les méthodes synchrones. Par conséquent, vous n'êtes pas tenu de substituer la méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A>, à moins que vous deviez fournir votre propre implémentation asynchrone.  
  
 La méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken%2A> appelle la méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Les méthodes asynchrones, qui possèdent un préfixe de début et de fin, n'ont pas besoin d'être substituées dans les classes dérivées. La classe de base <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> fournit une implémentation asynchrone basée sur les méthodes synchrones.</para></block>
      </Docs>
    </Member>
    <Member MemberName="BeginRenewToken">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed, AsyncCallback callback, object state);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginRenewToken(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRenewToken (timeout As TimeSpan, tokenToBeRenewed As SecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRenewToken(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ tokenToBeRenewed, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginRenewToken(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginRenewToken (timeout As TimeSpan, token As SecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRenewToken(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginRenewToken : TimeSpan * System.IdentityModel.Tokens.SecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenProvider.BeginRenewToken (timeout, tokenToBeRenewed, callback, state)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.BeginRenewToken : TimeSpan * System.IdentityModel.Tokens.SecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenProvider.BeginRenewToken (timeout, token, callback, state)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" />
        <Parameter Name="tokenToBeRenewed" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="2" />
        <Parameter Name="state" Type="System.Object" Index="3" />
      </Parameters>
      <Docs>
        <param name="timeout"><see cref="T:System.TimeSpan" /> qui spécifie la valeur du délai d'attente pour le message qui renouvelle le jeton de sécurité.</param>
        <param name="tokenToBeRenewed"><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> à renouveler.</param>
        <param name="token"><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> à renouveler.</param>
        <param name="callback">Le délégué<see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone de fermeture.</param>
        <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération asynchrone de fermeture.</param>
        <summary>Commence une opération asynchrone qui renouvelle un jeton de sécurité.</summary>
        <returns><see cref="T:System.IAsyncResult" /> qui référence l'opération asynchrone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A> appelle la méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Les méthodes asynchrones, qui possèdent un préfixe de début et de fin, n'ont pas besoin d'être substituées dans les classes dérivées. La classe de base <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> fournit une implémentation asynchrone basée sur les méthodes synchrones.</para></block>
      </Docs>
    </Member>
    <Member MemberName="BeginRenewTokenCore">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginRenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed, AsyncCallback callback, object state);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginRenewTokenCore(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginRenewTokenCore (timeout As TimeSpan, tokenToBeRenewed As SecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginRenewTokenCore(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ tokenToBeRenewed, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult BeginRenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token, AsyncCallback callback, object state);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult BeginRenewTokenCore(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token, class System.AsyncCallback callback, object state) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function BeginRenewTokenCore (timeout As TimeSpan, token As SecurityToken, callback As AsyncCallback, state As Object) As IAsyncResult" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ BeginRenewTokenCore(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token, AsyncCallback ^ callback, System::Object ^ state);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member BeginRenewTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginRenewTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenProvider.BeginRenewTokenCore (timeout, tokenToBeRenewed, callback, state)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member BeginRenewTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginRenewTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken * AsyncCallback * obj -&gt; IAsyncResult" Usage="securityTokenProvider.BeginRenewTokenCore (timeout, token, callback, state)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" />
        <Parameter Name="tokenToBeRenewed" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="xamarinmac-3.0" />
        <Parameter Name="callback" Type="System.AsyncCallback" Index="2" />
        <Parameter Name="state" Type="System.Object" Index="3" />
      </Parameters>
      <Docs>
        <param name="timeout"><see cref="T:System.TimeSpan" /> qui spécifie la valeur du délai d'attente pour le message qui renouvelle le jeton de sécurité.</param>
        <param name="tokenToBeRenewed"><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> à renouveler.</param>
        <param name="token"><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> à renouveler.</param>
        <param name="callback">Le délégué<see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone de fermeture.</param>
        <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération asynchrone de fermeture.</param>
        <summary>Commence une opération asynchrone qui renouvelle un jeton de sécurité.</summary>
        <returns><see cref="T:System.IAsyncResult" /> qui référence l'opération asynchrone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous héritez de la classe <xref:System.IdentityModel.Selectors.SecurityTokenProvider>, vous n’êtes pas tenu de substituer les méthodes asynchrones, étant donné que la classe de base <xref:System.IdentityModel.Selectors.SecurityTokenProvider> fournit la prise en charge asynchrone basée sur les méthodes synchrones. Par conséquent, vous n'êtes pas tenu de substituer la méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A>, à moins que vous deviez fournir votre propre implémentation asynchrone.  
  
 La méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken%2A> appelle la méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelToken">
      <MemberSignature Language="C#" Value="public void CancelToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CancelToken(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CancelToken (timeout As TimeSpan, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CancelToken(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="member this.CancelToken : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="securityTokenProvider.CancelToken (timeout, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="timeout"><see cref="T:System.TimeSpan" /> qui spécifie la valeur du délai d'attente pour le message qui annule le jeton de sécurité.</param>
        <param name="token"><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> à annuler.</param>
        <summary>Annule un jeton de sécurité.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un jeton de sécurité qui peut être annulé, comme un jeton émis, permet à un client qui a demandé un jeton de sécurité de l'annuler lorsqu'il n'en a plus besoin.  
  
 La méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A> appelle la méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelTokenCore">
      <MemberSignature Language="C#" Value="protected virtual void CancelTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CancelTokenCore(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CancelTokenCore (timeout As TimeSpan, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CancelTokenCore(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member CancelTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; unit&#xA;override this.CancelTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; unit" Usage="securityTokenProvider.CancelTokenCore (timeout, token)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="timeout"><see cref="T:System.TimeSpan" /> qui spécifie la valeur du délai d'attente pour le message qui annule le jeton de sécurité.</param>
        <param name="token"><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> à annuler.</param>
        <summary>Annule un jeton de sécurité.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un jeton de sécurité qui peut être annulé, comme un jeton émis, permet à un client qui a demandé un jeton de sécurité de l'annuler lorsqu'il n'en a plus besoin.  
  
 La méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelToken%2A> appelle la méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A>.  
  
 Lorsque la méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.CancelTokenCore%2A> est substituée et que le jeton de sécurité passé dans le paramètre de jeton ne peut pas être annulé, levez l'exception <xref:System.IdentityModel.Tokens.SecurityTokenException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndCancelToken">
      <MemberSignature Language="C#" Value="public void EndCancelToken (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndCancelToken(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCancelToken (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCancelToken(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndCancelToken : IAsyncResult -&gt; unit" Usage="securityTokenProvider.EndCancelToken result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Objet <see cref="T:System.IAsyncResult" /> qui est retourné par un appel à la méthode <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />.</param>
        <summary>Termine une opération asynchrone pour annuler un jeton de sécurité.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un jeton de sécurité qui peut être annulé, comme un jeton émis, permet à un client qui a demandé un jeton de sécurité de l'annuler lorsqu'il n'en a plus besoin.  
  
 La méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A> appelle la méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Les méthodes asynchrones, qui possèdent un préfixe de début et de fin, n'ont pas besoin d'être substituées dans les classes dérivées. La classe de base <see cref="T:System.IdentityModel.Selectors.SecurityTokenProvider" /> fournit une implémentation asynchrone basée sur les méthodes synchrones.</para></block>
      </Docs>
    </Member>
    <Member MemberName="EndCancelTokenCore">
      <MemberSignature Language="C#" Value="protected virtual void EndCancelTokenCore (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void EndCancelTokenCore(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub EndCancelTokenCore (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void EndCancelTokenCore(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndCancelTokenCore : IAsyncResult -&gt; unit&#xA;override this.EndCancelTokenCore : IAsyncResult -&gt; unit" Usage="securityTokenProvider.EndCancelTokenCore result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Objet <see cref="T:System.IAsyncResult" /> qui est retourné par un appel à la méthode <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginCancelTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />.</param>
        <summary>Termine une opération asynchrone pour annuler un jeton de sécurité.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un jeton de sécurité qui peut être annulé, comme un jeton émis, permet à un client qui a demandé un jeton de sécurité de l'annuler lorsqu'il n'en a plus besoin.  
  
 Lorsque vous héritez de la classe <xref:System.IdentityModel.Selectors.SecurityTokenProvider>, vous n’êtes pas tenu de substituer les méthodes asynchrones, étant donné que la classe de base <xref:System.IdentityModel.Selectors.SecurityTokenProvider> fournit la prise en charge asynchrone basée sur les méthodes synchrones. Par conséquent, vous n'êtes pas tenu de substituer la méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A>, à moins que vous deviez fournir votre propre implémentation asynchrone.  
  
 La méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelToken%2A> appelle la méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndCancelTokenCore%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken EndGetToken (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken EndGetToken(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndGetToken (result As IAsyncResult) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ EndGetToken(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndGetToken : IAsyncResult -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.EndGetToken result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Objet <see cref="T:System.IAsyncResult" /> qui est retourné par un appel à la méthode <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetToken(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
        <summary>Termine une opération asynchrone pour obtenir un jeton de sécurité.</summary>
        <returns><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> qui représente le jeton de sécurité.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A> appelle la méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndGetTokenCore">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityToken EndGetTokenCore (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken EndGetTokenCore(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EndGetTokenCore (result As IAsyncResult) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ EndGetTokenCore(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndGetTokenCore : IAsyncResult -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.EndGetTokenCore : IAsyncResult -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.EndGetTokenCore result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Objet <see cref="T:System.IAsyncResult" /> qui est retourné par un appel à la méthode <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginGetTokenCore(System.TimeSpan,System.AsyncCallback,System.Object)" />.</param>
        <summary>Termine une opération asynchrone pour obtenir un jeton de sécurité.</summary>
        <returns><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> qui représente le jeton de sécurité.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous héritez de la classe <xref:System.IdentityModel.Selectors.SecurityTokenProvider>, vous n’êtes pas tenu de substituer les méthodes asynchrones, étant donné que la classe de base <xref:System.IdentityModel.Selectors.SecurityTokenProvider> fournit la prise en charge asynchrone basée sur les méthodes synchrones. Par conséquent, vous n'êtes pas tenu de substituer la méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A>, à moins que vous deviez fournir votre propre implémentation asynchrone.  
  
 La méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetToken%2A> appelle la méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndGetTokenCore%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRenewToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken EndRenewToken (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken EndRenewToken(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndRenewToken (result As IAsyncResult) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ EndRenewToken(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndRenewToken : IAsyncResult -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.EndRenewToken result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Objet <see cref="T:System.IAsyncResult" /> qui est retourné par un appel à la méthode <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />.</param>
        <summary>Termine une opération asynchrone pour renouveler un jeton de sécurité.</summary>
        <returns><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> qui représente le jeton de sécurité renouvelé.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A> appelle la méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndRenewTokenCore">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityToken EndRenewTokenCore (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken EndRenewTokenCore(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EndRenewTokenCore (result As IAsyncResult) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ EndRenewTokenCore(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndRenewTokenCore : IAsyncResult -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.EndRenewTokenCore : IAsyncResult -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.EndRenewTokenCore result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Objet <see cref="T:System.IAsyncResult" /> qui est retourné par un appel à la méthode <see cref="M:System.IdentityModel.Selectors.SecurityTokenProvider.BeginRenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken,System.AsyncCallback,System.Object)" />.</param>
        <summary>Termine une opération asynchrone pour renouveler le jeton de sécurité.</summary>
        <returns><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> qui représente le jeton de sécurité renouvelé.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous héritez de la classe <xref:System.IdentityModel.Selectors.SecurityTokenProvider>, vous n’êtes pas tenu de substituer les méthodes asynchrones, étant donné que la classe de base <xref:System.IdentityModel.Selectors.SecurityTokenProvider> fournit la prise en charge asynchrone basée sur les méthodes synchrones. Par conséquent, vous n'êtes pas tenu de substituer la méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A>, à moins que vous deviez fournir votre propre implémentation asynchrone.  
  
 La méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewToken%2A> appelle la méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.EndRenewTokenCore%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken GetToken (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken GetToken(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetToken (timeout As TimeSpan) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ GetToken(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="member this.GetToken : TimeSpan -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.GetToken timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><see cref="T:System.TimeSpan" /> qui spécifie la valeur du délai d'attente pour le message qui obtient le jeton de sécurité.</param>
        <summary>Obtient un jeton de sécurité.</summary>
        <returns><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> qui représente le jeton de sécurité à obtenir.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> est appelée par la classe <xref:System.ServiceModel.Description.ClientCredentials> lorsqu'un client envoie un message SOAP et qu'un jeton de sécurité est requis.  
  
 La méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> appelle la méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A>.  
  
 Dans la plupart des cas, le paramètre `timeout` n'est pas utilisé par les classes dérivées de <xref:System.IdentityModel.Selectors.SecurityTokenProvider> telles que <xref:System.IdentityModel.Selectors.UserNameSecurityTokenProvider>. Toutefois, la récupération d'un jeton de sécurité implique parfois la distribution de messages. C'est le cas par exemple de <xref:System.ServiceModel.Security.Tokens.IssuedSecurityTokenProvider> utilisé dans un service fédéré. Le paramètre `timeout` permet alors d'éviter les exceptions provoquées par les problèmes réseau, la perte de messages et d'autres erreurs.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTokenCore">
      <MemberSignature Language="C#" Value="protected abstract System.IdentityModel.Tokens.SecurityToken GetTokenCore (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetTokenCore(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetTokenCore (timeout As TimeSpan) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::IdentityModel::Tokens::SecurityToken ^ GetTokenCore(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member GetTokenCore : TimeSpan -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.GetTokenCore timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><see cref="T:System.TimeSpan" /> qui spécifie la valeur du délai d'attente pour le message qui obtient le jeton de sécurité.</param>
        <summary>Obtient un jeton de sécurité.</summary>
        <returns><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> qui représente le jeton de sécurité à obtenir.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque la méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A> est substituée et que le jeton de sécurité passé dans le paramètre de jeton ne peut pas être obtenu, levez l'exception <xref:System.IdentityModel.Tokens.SecurityTokenException>.  
  
 La méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> est appelée par la classe <xref:System.ServiceModel.Description.ClientCredentials> lorsqu'un client envoie un message SOAP et qu'un jeton de sécurité est requis.  
  
 La méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetToken%2A> appelle la méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.GetTokenCore%2A>.  
  
   
  
## Examples  
 [!code-csharp[SecurityTokenProvider#1](~/samples/snippets/csharp/VS_Snippets_CFX/securitytokenprovider/cs/samlsecuritytokenprovider.cs#1)]
 [!code-vb[SecurityTokenProvider#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/securitytokenprovider/vb/samlsecuritytokenprovider.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken RenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken RenewToken(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Function RenewToken (timeout As TimeSpan, tokenToBeRenewed As SecurityToken) As SecurityToken" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ RenewToken(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ tokenToBeRenewed);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken RenewToken (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Tokens.SecurityToken RenewToken(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Function RenewToken (timeout As TimeSpan, token As SecurityToken) As SecurityToken" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Tokens::SecurityToken ^ RenewToken(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.RenewToken : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.RenewToken (timeout, tokenToBeRenewed)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.RenewToken : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.RenewToken (timeout, token)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" />
        <Parameter Name="tokenToBeRenewed" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="timeout"><see cref="T:System.TimeSpan" /> qui spécifie la valeur du délai d'attente pour le message qui renouvelle le jeton de sécurité.</param>
        <param name="tokenToBeRenewed"><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> à renouveler.</param>
        <param name="token"><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> à renouveler.</param>
        <summary>Renouvelle un jeton de sécurité.</summary>
        <returns><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> qui représente le jeton de sécurité renouvelé.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un jeton de sécurité émis renouvelable permet à un client de le renouveler lorsqu'il a expiré ou est sur le point d'expirer.  
  
 La méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A> appelle la méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewTokenCore">
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityToken RenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken RenewTokenCore(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken tokenToBeRenewed) cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenewTokenCore (timeout As TimeSpan, tokenToBeRenewed As SecurityToken) As SecurityToken" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ RenewTokenCore(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ tokenToBeRenewed);" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.8" />
      <MemberSignature Language="C#" Value="protected virtual System.IdentityModel.Tokens.SecurityToken RenewTokenCore (TimeSpan timeout, System.IdentityModel.Tokens.SecurityToken token);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken RenewTokenCore(valuetype System.TimeSpan timeout, class System.IdentityModel.Tokens.SecurityToken token) cil managed" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenewTokenCore (timeout As TimeSpan, token As SecurityToken) As SecurityToken" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ RenewTokenCore(TimeSpan timeout, System::IdentityModel::Tokens::SecurityToken ^ token);" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member RenewTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.RenewTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.RenewTokenCore (timeout, tokenToBeRenewed)" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore(System.TimeSpan,System.IdentityModel.Tokens.SecurityToken)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member RenewTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.RenewTokenCore : TimeSpan * System.IdentityModel.Tokens.SecurityToken -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="securityTokenProvider.RenewTokenCore (timeout, token)" FrameworkAlternate="xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" Index="0" />
        <Parameter Name="tokenToBeRenewed" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" Index="1" FrameworkAlternate="xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="timeout"><see cref="T:System.TimeSpan" /> qui spécifie la valeur du délai d'attente pour le message qui renouvelle le jeton de sécurité.</param>
        <param name="tokenToBeRenewed"><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> à renouveler.</param>
        <param name="token"><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> à renouveler.</param>
        <summary>Renouvelle un jeton de sécurité.</summary>
        <returns><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> qui représente le jeton de sécurité renouvelé.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un jeton de sécurité émis renouvelable permet à un client de le renouveler lorsqu'il a expiré ou est sur le point d'expirer.  
  
 Lorsque la méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A> est substituée et que le jeton de sécurité passé dans le paramètre de jeton ne peut pas être renouvelée, levez l'exception <xref:System.IdentityModel.Tokens.SecurityTokenException>.  
  
 La méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewToken%2A> appelle la méthode <xref:System.IdentityModel.Selectors.SecurityTokenProvider.RenewTokenCore%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsTokenCancellation">
      <MemberSignature Language="C#" Value="public virtual bool SupportsTokenCancellation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsTokenCancellation" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsTokenCancellation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsTokenCancellation { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsTokenCancellation : bool" Usage="System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenCancellation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si le jeton de sécurité peut être annulé.</summary>
        <value><see langword="true" /> si le jeton de sécurité peut être annulé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un jeton de sécurité qui peut être annulé, comme un jeton émis, permet à un client qui a demandé un jeton de sécurité de l'annuler lorsqu'il n'en a plus besoin.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsTokenRenewal">
      <MemberSignature Language="C#" Value="public virtual bool SupportsTokenRenewal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsTokenRenewal" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsTokenRenewal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsTokenRenewal { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsTokenRenewal : bool" Usage="System.IdentityModel.Selectors.SecurityTokenProvider.SupportsTokenRenewal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si le jeton de sécurité est renouvelable.</summary>
        <value><see langword="true" /> si le jeton de sécurité peut être renouvelé ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un jeton de sécurité émis renouvelable permet à un client de le renouveler lorsqu'il a expiré ou est sur le point d'expirer.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>