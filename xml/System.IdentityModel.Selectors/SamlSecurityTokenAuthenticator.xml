<Type Name="SamlSecurityTokenAuthenticator" FullName="System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b96bdf35ca0364b52770c874736e366cc91db77e" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="37758603" /></Metadata><TypeSignature Language="C#" Value="public class SamlSecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenAuthenticator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SamlSecurityTokenAuthenticator extends System.IdentityModel.Selectors.SecurityTokenAuthenticator" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" />
  <TypeSignature Language="VB.NET" Value="Public Class SamlSecurityTokenAuthenticator&#xA;Inherits SecurityTokenAuthenticator" />
  <TypeSignature Language="C++ CLI" Value="public ref class SamlSecurityTokenAuthenticator : System::IdentityModel::Selectors::SecurityTokenAuthenticator" />
  <TypeSignature Language="F#" Value="type SamlSecurityTokenAuthenticator = class&#xA;    inherit SecurityTokenAuthenticator" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Selectors.SecurityTokenAuthenticator</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Authentifie un jeton de sécurité <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la classe <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator> pour authentifier des jetons de sécurité <xref:System.IdentityModel.Tokens.SamlSecurityToken>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SamlSecurityTokenAuthenticator (System.Collections.Generic.IList&lt;System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt; supportingAuthenticators);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;class System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt; supportingAuthenticators) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (supportingAuthenticators As IList(Of SecurityTokenAuthenticator))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SamlSecurityTokenAuthenticator(System::Collections::Generic::IList&lt;System::IdentityModel::Selectors::SecurityTokenAuthenticator ^&gt; ^ supportingAuthenticators);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator : System.Collections.Generic.IList&lt;System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt; -&gt; System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" Usage="new System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator supportingAuthenticators" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="supportingAuthenticators" Type="System.Collections.Generic.IList&lt;System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;" />
      </Parameters>
      <Docs>
        <param name="supportingAuthenticators"><see cref="T:System.Collections.Generic.IList`1" /> de <see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" /> qui contient les authentificateur utilisés pour authentifier les jetons de sécurité <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> de l'émetteur.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" /> à l'aide de l'ensemble d'authentificateurs spécifié.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SamlSecurityTokenAuthenticator (System.Collections.Generic.IList&lt;System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt; supportingAuthenticators, TimeSpan maxClockSkew);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;class System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt; supportingAuthenticators, valuetype System.TimeSpan maxClockSkew) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.#ctor(System.Collections.Generic.IList{System.IdentityModel.Selectors.SecurityTokenAuthenticator},System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (supportingAuthenticators As IList(Of SecurityTokenAuthenticator), maxClockSkew As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SamlSecurityTokenAuthenticator(System::Collections::Generic::IList&lt;System::IdentityModel::Selectors::SecurityTokenAuthenticator ^&gt; ^ supportingAuthenticators, TimeSpan maxClockSkew);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator : System.Collections.Generic.IList&lt;System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt; * TimeSpan -&gt; System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" Usage="new System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator (supportingAuthenticators, maxClockSkew)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="supportingAuthenticators" Type="System.Collections.Generic.IList&lt;System.IdentityModel.Selectors.SecurityTokenAuthenticator&gt;" />
        <Parameter Name="maxClockSkew" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="supportingAuthenticators"><see cref="T:System.Collections.Generic.IList`1" /> de <see cref="T:System.IdentityModel.Selectors.SecurityTokenAuthenticator" /> qui contient les authentificateur utilisés pour authentifier les jetons de sécurité <see cref="T:System.IdentityModel.Tokens.SecurityToken" /> de l'émetteur.</param>
        <param name="maxClockSkew"><see cref="T:System.TimeSpan" /> qui représente la différence maximale autorisée entre les horloges de l'expéditeur et récepteur.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" /> à l'aide de l'ensemble d'authentificateurs spécifié et de la différence maximale autorisée entre les horloges de l'expéditeur et du récepteur.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowedAudienceUris">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; AllowedAudienceUris { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; AllowedAudienceUris" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedAudienceUris As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::String ^&gt; ^ AllowedAudienceUris { System::Collections::Generic::IList&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllowedAudienceUris : System.Collections.Generic.IList&lt;string&gt;" Usage="System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le jeu d'URI cibles pour lesquels le jeton de sécurité <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> peut faire l'objet de la cible afin d'être considéré comme valide par l'instance <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" />.</summary>
        <value><see cref="T:System.Collections.Generic.IList`1" /> de type <see cref="T:System.String" /> qui contient les URI cibles pour lesquels le jeton de sécurité <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> peut être visé pour être considéré comme valide par l'authentificateur de ce jeton de sécurité.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la propriété <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A> dans une application fédérée qui utilise un service de jetons de sécurité (STS) qui émet des jetons de sécurité <xref:System.IdentityModel.Tokens.SamlSecurityToken>. Lorsque le STS émet le jeton de sécurité, il peut spécifier l'URI des services Web pour lesquels le jeton de sécurité est prévu en ajoutant un <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> au jeton de sécurité. Cela permet au <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator> du service Web destinataire de vérifier que le jeton de sécurité émis est prévu pour ce service Web en spécifiant que ce contrôle doit arriver en effectuant les opérations suivantes :  
  
-   Attribuer à la propriété <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A> la valeur <xref:System.IdentityModel.Selectors.AudienceUriMode.Always> ou <xref:System.IdentityModel.Selectors.AudienceUriMode.BearerKeyOnly>.  
  
-   Spécifier le jeu d'URI valides, en ajoutant les URI à la collection <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A>.  
  
-   Facultativement, substituer la méthode <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A> pour spécifier l'algorithme de validation à utiliser pour l'URI autorisé.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AudienceUriMode">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Selectors.AudienceUriMode AudienceUriMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IdentityModel.Selectors.AudienceUriMode AudienceUriMode" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode" />
      <MemberSignature Language="VB.NET" Value="Public Property AudienceUriMode As AudienceUriMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Selectors::AudienceUriMode AudienceUriMode { System::IdentityModel::Selectors::AudienceUriMode get(); void set(System::IdentityModel::Selectors::AudienceUriMode value); };" />
      <MemberSignature Language="F#" Value="member this.AudienceUriMode : System.IdentityModel.Selectors.AudienceUriMode with get, set" Usage="System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.AudienceUriMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un <see cref="T:System.IdentityModel.Selectors.AudienceUriMode" /> qui spécifie si l'objet <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> du jeton de sécurité  <see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /> doit être validé.</summary>
        <value><see cref="T:System.IdentityModel.Selectors.AudienceUriMode" /> qui spécifie si la <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> du jeton de sécurité <see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /> doit être validé.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la propriété <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A> dans une application fédérée qui utilise un service de jetons de sécurité (STS) qui émet des jetons de sécurité <xref:System.IdentityModel.Tokens.SamlSecurityToken>. Lorsque le STS émet le jeton de sécurité, il peut spécifier l'URI des services Web pour lesquels le jeton de sécurité est prévu en ajoutant un <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> au jeton de sécurité. Cela permet au <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator> du service Web destinataire de vérifier que le jeton de sécurité émis est prévu pour ce service Web en spécifiant que ce contrôle doit arriver en effectuant les opérations suivantes :  
  
-   Attribuer à la propriété <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A> la valeur <xref:System.IdentityModel.Selectors.AudienceUriMode.Always> ou <xref:System.IdentityModel.Selectors.AudienceUriMode.BearerKeyOnly>.  
  
-   Spécifier le jeu d'URI valides, en ajoutant les URI à la collection <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A>.  
  
> [!NOTE]
>  Lorsque la propriété <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A> a la valeur <xref:System.IdentityModel.Selectors.AudienceUriMode.BearerKeyOnly>, un <xref:System.IdentityModel.Tokens.SamlSecurityToken> de non-approbation entrant doit contenir une <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition> et la collection <xref:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.Audiences%2A> doit contenir un URI correspondant à l'un des URI valides spécifiés dans la collection <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris%2A>. Un jeton de non-approbation ou au porteur est un jeton de sécurité qui est inclus dans le message sans servir à signer la moindre partie du message.  
  
-   Facultativement, substituer la méthode <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A> pour spécifier l'algorithme de validation à utiliser pour l'URI autorisé.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanValidateTokenCore">
      <MemberSignature Language="C#" Value="protected override bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool CanValidateTokenCore(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CanValidateTokenCore (token As SecurityToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool CanValidateTokenCore(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="override this.CanValidateTokenCore : System.IdentityModel.Tokens.SecurityToken -&gt; bool" Usage="samlSecurityTokenAuthenticator.CanValidateTokenCore token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> à valider.</param>
        <summary>Obtient une valeur qui indique si le jeton de sécurité spécifié peut être validé par cet authentificateur de jeton de sécurité.</summary>
        <returns><see langword="true" /> lorsque <paramref name="token" /> est un jeton de sécurité <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.CanValidateTokenCore%2A> n'authentifie pas le jeton de sécurité ; cette opération est effectuée par la méthode <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolveClaimSet">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Résout l'identité associée au jeton de sécurité spécifié ou à l'identificateur de clé et la retourne comme <see cref="T:System.IdentityModel.Claims.ClaimSet" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolveClaimSet">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Claims.ClaimSet ResolveClaimSet (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Claims.ClaimSet ResolveClaimSet(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveClaimSet (keyIdentifier As SecurityKeyIdentifier) As ClaimSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Claims::ClaimSet ^ ResolveClaimSet(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier);" />
      <MemberSignature Language="F#" Value="abstract member ResolveClaimSet : System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; System.IdentityModel.Claims.ClaimSet&#xA;override this.ResolveClaimSet : System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; System.IdentityModel.Claims.ClaimSet" Usage="samlSecurityTokenAuthenticator.ResolveClaimSet keyIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Claims.ClaimSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> servant à obtenir l'identité.</param>
        <summary>Résout l'identité associée à l'identificateur de clé spécifié à l'aide des authentificateurs de sécurité de prise en charge fournis lors de la création de l'instance <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" /> et la retourne comme <see cref="T:System.IdentityModel.Claims.ClaimSet" />.</summary>
        <returns><see cref="T:System.IdentityModel.Claims.ClaimSet" /> qui représente l'identité de l'identificateur de clé spécifié.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveClaimSet">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Claims.ClaimSet ResolveClaimSet (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Claims.ClaimSet ResolveClaimSet(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveClaimSet(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveClaimSet (token As SecurityToken) As ClaimSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Claims::ClaimSet ^ ResolveClaimSet(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member ResolveClaimSet : System.IdentityModel.Tokens.SecurityToken -&gt; System.IdentityModel.Claims.ClaimSet&#xA;override this.ResolveClaimSet : System.IdentityModel.Tokens.SecurityToken -&gt; System.IdentityModel.Claims.ClaimSet" Usage="samlSecurityTokenAuthenticator.ResolveClaimSet token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Claims.ClaimSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> servant à obtenir l'identité.</param>
        <summary>Résout l'identité associée au jeton de sécurité spécifié à l'aide des authentificateurs de jetons de prise en charge fournis lors de la création de l'instance <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" /> et la retourne comme <see cref="T:System.IdentityModel.Claims.ClaimSet" />.</summary>
        <returns><see cref="T:System.IdentityModel.Claims.ClaimSet" /> qui représente l'identité du jeton de sécurité spécifié.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ResolveIdentity">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Résout l'identité associée au jeton de sécurité passé ou à l'identificateur de clé de sécurité à l'aide des authentificateurs de jetons de prise en charge spécifiés lors de la création de l'instance <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" />, puis la renvoie sous forme d'interface <see cref="T:System.Security.Principal.IIdentity" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ResolveIdentity">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IIdentity ResolveIdentity (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Principal.IIdentity ResolveIdentity(class System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveIdentity (keyIdentifier As SecurityKeyIdentifier) As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Principal::IIdentity ^ ResolveIdentity(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ keyIdentifier);" />
      <MemberSignature Language="F#" Value="abstract member ResolveIdentity : System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; System.Security.Principal.IIdentity&#xA;override this.ResolveIdentity : System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; System.Security.Principal.IIdentity" Usage="samlSecurityTokenAuthenticator.ResolveIdentity keyIdentifier" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keyIdentifier" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="keyIdentifier"><see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> servant à obtenir l'identité.</param>
        <summary>Résout l'identité associée à l'identificateur de clé spécifié à l'aide des authentificateurs de jetons de prise en charge fournis lors de la création de l'instance <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" /> et la retourne comme <see cref="T:System.Security.Principal.IIdentity" />.</summary>
        <returns><see cref="T:System.Security.Principal.IIdentity" /> qui représente l'identité de l'identificateur de clé spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les jetons de sécurité <xref:System.IdentityModel.Tokens.SamlSecurityToken> sont mis en cache à l'aide de leur identificateur de clé.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResolveIdentity">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IIdentity ResolveIdentity (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Security.Principal.IIdentity ResolveIdentity(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ResolveIdentity(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ResolveIdentity (token As SecurityToken) As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Security::Principal::IIdentity ^ ResolveIdentity(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="abstract member ResolveIdentity : System.IdentityModel.Tokens.SecurityToken -&gt; System.Security.Principal.IIdentity&#xA;override this.ResolveIdentity : System.IdentityModel.Tokens.SecurityToken -&gt; System.Security.Principal.IIdentity" Usage="samlSecurityTokenAuthenticator.ResolveIdentity token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> servant à obtenir l'identité.</param>
        <summary>Résout l'identité associée au jeton de sécurité spécifié à l'aide des authentificateurs de jetons de prise en charge fournis lors de la création de l'instance <see cref="T:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator" /> et la retourne comme <see cref="T:System.Security.Principal.IIdentity" />.</summary>
        <returns><see cref="T:System.Security.Principal.IIdentity" /> qui représente l'identité du jeton de sécurité spécifié.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateAudienceRestriction">
      <MemberSignature Language="C#" Value="protected virtual bool ValidateAudienceRestriction (System.IdentityModel.Tokens.SamlAudienceRestrictionCondition audienceRestrictionCondition);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool ValidateAudienceRestriction(class System.IdentityModel.Tokens.SamlAudienceRestrictionCondition audienceRestrictionCondition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction(System.IdentityModel.Tokens.SamlAudienceRestrictionCondition)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ValidateAudienceRestriction (audienceRestrictionCondition As SamlAudienceRestrictionCondition) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool ValidateAudienceRestriction(System::IdentityModel::Tokens::SamlAudienceRestrictionCondition ^ audienceRestrictionCondition);" />
      <MemberSignature Language="F#" Value="abstract member ValidateAudienceRestriction : System.IdentityModel.Tokens.SamlAudienceRestrictionCondition -&gt; bool&#xA;override this.ValidateAudienceRestriction : System.IdentityModel.Tokens.SamlAudienceRestrictionCondition -&gt; bool" Usage="samlSecurityTokenAuthenticator.ValidateAudienceRestriction audienceRestrictionCondition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="audienceRestrictionCondition" Type="System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" />
      </Parameters>
      <Docs>
        <param name="audienceRestrictionCondition"><see cref="T:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition" /> qui spécifie le jeu de services Web cibles pour lesquels le jeton de sécurité <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> est prévu.</param>
        <summary>Valide que le jeton de sécurité <see cref="T:System.IdentityModel.Tokens.SamlSecurityToken" /> était prévu pour ce service Web.</summary>
        <returns><see langword="true" /> si la propriété <see cref="P:System.IdentityModel.Tokens.SamlAudienceRestrictionCondition.Audiences" /> du paramètre <paramref name="audienceRestrictionCondition" /> se trouve dans la collection <see cref="P:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AllowedAudienceUris" /> ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateAudienceRestriction%2A> est appelée par la méthode <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore%2A> lorsque la propriété <xref:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.AudienceUriMode%2A> a la valeur <xref:System.IdentityModel.Selectors.AudienceUriMode.Always> ou <xref:System.IdentityModel.Selectors.AudienceUriMode.BearerKeyOnly>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateTokenCore">
      <MemberSignature Language="C#" Value="protected override System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt; ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.IdentityModel.Policy.IAuthorizationPolicy&gt; ValidateTokenCore(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Selectors.SamlSecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ValidateTokenCore (token As SecurityToken) As ReadOnlyCollection(Of IAuthorizationPolicy)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ObjectModel::ReadOnlyCollection&lt;System::IdentityModel::Policy::IAuthorizationPolicy ^&gt; ^ ValidateTokenCore(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="override this.ValidateTokenCore : System.IdentityModel.Tokens.SecurityToken -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;" Usage="samlSecurityTokenAuthenticator.ValidateTokenCore token" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.IdentityModel.Policy.IAuthorizationPolicy&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token"><see cref="T:System.IdentityModel.Tokens.SecurityToken" /> à valider.</param>
        <summary>Authentifie le jeton de sécurité spécifié et retourne le jeu de stratégies d'autorisation pour le jeton de sécurité.</summary>
        <returns><see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> de type <see cref="T:System.IdentityModel.Policy.IAuthorizationPolicy" /> qui contient l'ensemble de stratégies d'autorisation qui découle de l'authentification du jeton de sécurité.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>