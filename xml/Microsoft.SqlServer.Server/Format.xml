<Type Name="Format" FullName="Microsoft.SqlServer.Server.Format">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="47e4dab9d856ebe69698fe43c3c05d675bcb0726" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30338323" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum Format" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Format extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.Format" />
  <TypeSignature Language="VB.NET" Value="Public Enum Format" />
  <TypeSignature Language="C++ CLI" Value="public enum class Format" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Utilisé par <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> et <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> pour indiquer le format de sérialisation d'un type défini par l'utilisateur ou d'un agrégat.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisé par <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> et <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> pour indiquer le format de sérialisation d'un type défini par l'utilisateur ou d'un agrégat.  
  
   
  
## Examples  
 L’exemple suivant illustre la `UserDefinedType` attribut de l’UDT Point.  L’UDT est l’ordre d’octets est appelé « Point », a une méthode de validation nommée « ValidatePoint » et utilise le format de sérialisation native.  
  
 [!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Native">
      <MemberSignature Language="C#" Value="Native" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Native = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Native" />
      <MemberSignature Language="VB.NET" Value="Native" />
      <MemberSignature Language="C++ CLI" Value="Native" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Le format de sérialisation <see langword="Native" /> utilise un algorithme très simple qui permet à SQL Server de stocker une représentation efficace du type défini par l'utilisateur sur le disque. Les types marqués pour la sérialisation <see langword="Native" /> peuvent avoir uniquement des types valeur (structs en Microsoft Visual C# et structures en Microsoft Visual Basic .NET) comme membres. Les membres de types référence (tels que les classes en Visual C# et Visual Basic), soit définis par l'utilisateur, soit ceux qui existent dans l'infrastructure (tels que <see cref="T:System.String" />), ne sont pas pris en charge.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La configuration requise pour ce format est :  
  
-   Le `StructLayout.LayoutKindSequential` attribut doit être appliqué à l’agrégat ou UDT si elle est définie dans une classe et non dans une structure. Contrôle la disposition physique des champs de données, il est utilisé pour contraindre les membres doivent être disposées séquentiellement dans l’ordre de qu'apparition. SQL Server utilise cet attribut pour déterminer l’ordre des champs des UDT avec plusieurs champs.  
  
-   Le type doit contenir au moins un membre (les valeurs sérialisées ne peut pas être de taille zéro octet).  
  
-   Tous les champs de l’agrégat doivent être *blittables*, autrement dit, ils doivent avoir une représentation commune dans la mémoire managée et non managée et pas nécessitent un traitement particulier par le marshaleur d’interopérabilité.  
  
-   Tous les champs de l’UDT doivent être l’un des types suivants qui peuvent être sérialisés : `bool`, `byte`, `sbyte`, `short`, `ushort`, `int`, `uint`, `long`, `ulong`, `float` , `double`, <xref:System.Data.SqlTypes.SqlByte>, <xref:System.Data.SqlTypes.SqlInt16>, <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.SqlTypes.SqlInt64>, <xref:System.Data.SqlTypes.SqlDateTime>, <xref:System.Data.SqlTypes.SqlSingle>, <xref:System.Data.SqlTypes.SqlDouble>, <xref:System.Data.SqlTypes.SqlMoney>, ou d’autres types valeur définis par l’utilisateur qui contiennent des champs de l’un de ces types.  
  
-   L’agrégat ne doit pas spécifier une valeur pour `MaxByteSize`.  
  
-   L’agrégat ne doit pas avoir de tous les champs [NonSerialized].  
  
-   Les champs ne doivent pas être marquées comme une disposition explicite (<xref:System.Runtime.InteropServices.StructLayoutAttribute>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Unknown = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="C++ CLI" Value="Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Le format de sérialisation est inconnu.</summary>
      </Docs>
    </Member>
    <Member MemberName="UserDefined">
      <MemberSignature Language="C#" Value="UserDefined" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format UserDefined = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberSignature Language="VB.NET" Value="UserDefined" />
      <MemberSignature Language="C++ CLI" Value="UserDefined" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Le format de sérialisation <see langword="UserDefined" /> permet au développeur une maîtrise totale du format binaire par le biais des méthodes <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Write" /> et <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Read" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’agrégat doit spécifier une valeur pour `MaxByteSize`.  
  
 Spécifier la <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> la propriété d’attribut. La valeur par défaut est false.  
  
 Si vous omettez un champ dans le <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> ou <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> méthodes, l’état de ce champ n’est pas sérialisé.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>