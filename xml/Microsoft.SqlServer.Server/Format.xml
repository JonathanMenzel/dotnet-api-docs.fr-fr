<Type Name="Format" FullName="Microsoft.SqlServer.Server.Format">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b5cdac326672d175a2dba7e191c1395d8db66b27" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52912596" /></Metadata><TypeSignature Language="C#" Value="public enum Format" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Format extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.Format" />
  <TypeSignature Language="VB.NET" Value="Public Enum Format" />
  <TypeSignature Language="C++ CLI" Value="public enum class Format" />
  <TypeSignature Language="F#" Value="type Format = " />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Utilisé par <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> et <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> pour indiquer le format de sérialisation d'un type défini par l'utilisateur ou d'un agrégat.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisé par <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> et <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> pour indiquer le format de sérialisation d'un type défini par l'utilisateur ou d'un agrégat.  
  
   
  
## Examples  
 L’exemple suivant montre le `UserDefinedType` attribut de l’UDT Point.  L’UDT est l’ordre d’octets est appelé « Point », a une méthode de validation nommée « ValidatePoint » et utilise le format de sérialisation native.  
  
 [!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Native">
      <MemberSignature Language="C#" Value="Native" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Native = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Native" />
      <MemberSignature Language="VB.NET" Value="Native" />
      <MemberSignature Language="C++ CLI" Value="Native" />
      <MemberSignature Language="F#" Value="Native = 1" Usage="Microsoft.SqlServer.Server.Format.Native" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Le format de sérialisation <see langword="Native" /> utilise un algorithme très simple qui permet à SQL Server de stocker une représentation efficace du type défini par l'utilisateur sur le disque. Les types marqués pour la sérialisation <see langword="Native" /> peuvent avoir uniquement des types valeur (structs en Microsoft Visual C# et structures en Microsoft Visual Basic .NET) comme membres. Les membres de types référence (tels que les classes en Visual C# et Visual Basic), soit définis par l'utilisateur, soit ceux qui existent dans l'infrastructure (tels que <see cref="T:System.String" />), ne sont pas pris en charge.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La configuration requise pour ce format est :  
  
-   Le `StructLayout.LayoutKindSequential` attribut doit être appliqué à l’agrégat ou UDT si elle est définie dans une classe et non une structure. Cela contrôle la disposition physique des champs de données et est utilisé pour contraindre les membres à être disposés séquentiellement dans l’ordre de qu'apparition. SQL Server utilise cet attribut pour déterminer l’ordre des champs pour les UDT avec plusieurs champs.  
  
-   Le type doit contenir au moins un membre (valeurs sérialisées ne peut pas être de taille zéro octet).  
  
-   Tous les champs de l’agrégat doivent être *blittables*, autrement dit, ils doivent avoir une représentation commune dans la mémoire à la fois managée et non managées et pas nécessitent un traitement particulier par le marshaleur d’interopérabilité.  
  
-   Tous les champs de l’UDT doivent être l’un des types suivants qui peuvent être sérialisés : `bool`, `byte`, `sbyte`, `short`, `ushort`, `int`, `uint`, `long`, `ulong`, `float` , `double`, <xref:System.Data.SqlTypes.SqlByte>, <xref:System.Data.SqlTypes.SqlInt16>, <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.SqlTypes.SqlInt64>, <xref:System.Data.SqlTypes.SqlDateTime>, <xref:System.Data.SqlTypes.SqlSingle>, <xref:System.Data.SqlTypes.SqlDouble>, <xref:System.Data.SqlTypes.SqlMoney>, ou d’autres types valeur définis par l’utilisateur qui contiennent des champs d’un de ces types.  
  
-   L’agrégat ne doit pas spécifier une valeur pour `MaxByteSize`.  
  
-   L’agrégat ne doit pas avoir tous les champs [NonSerialized].  
  
-   Champs ne doivent pas être marqués comme une disposition explicite (<xref:System.Runtime.InteropServices.StructLayoutAttribute>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Unknown = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="C++ CLI" Value="Unknown" />
      <MemberSignature Language="F#" Value="Unknown = 0" Usage="Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Le format de sérialisation est inconnu.</summary>
      </Docs>
    </Member>
    <Member MemberName="UserDefined">
      <MemberSignature Language="C#" Value="UserDefined" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format UserDefined = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberSignature Language="VB.NET" Value="UserDefined" />
      <MemberSignature Language="C++ CLI" Value="UserDefined" />
      <MemberSignature Language="F#" Value="UserDefined = 2" Usage="Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Le format de sérialisation <see langword="UserDefined" /> permet au développeur une maîtrise totale du format binaire par le biais des méthodes <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Write" /> et <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Read" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’agrégat doit spécifier une valeur pour `MaxByteSize`.  
  
 Spécifiez le <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> propriété d’attribut. La valeur par défaut est false.  
  
 Si vous omettez un champ dans le <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> ou <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> méthodes, l’état de ce champ n’est pas sérialisé.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>