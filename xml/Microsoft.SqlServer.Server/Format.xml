<Type Name="Format" FullName="Microsoft.SqlServer.Server.Format">
  <TypeSignature Language="C#" Value="public enum Format" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Format extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.Format" />
  <TypeSignature Language="VB.NET" Value="Public Enum Format" />
  <TypeSignature Language="C++ CLI" Value="public enum class Format" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="85c41-101">Utilisé par <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> et <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> pour indiquer le format de sérialisation d'un type défini par l'utilisateur ou d'un agrégat.</span><span class="sxs-lookup"><span data-stu-id="85c41-101">Used by <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> and <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> to indicate the serialization format of a user-defined type (UDT) or aggregate.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85c41-102">Utilisé par <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> et <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> pour indiquer le format de sérialisation d'un type défini par l'utilisateur ou d'un agrégat.</span><span class="sxs-lookup"><span data-stu-id="85c41-102">Used by <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> and <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> to indicate the serialization format of a user-defined type (UDT) or aggregate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="85c41-103">L’exemple suivant illustre la `UserDefinedType` attribut de l’UDT Point.</span><span class="sxs-lookup"><span data-stu-id="85c41-103">The following example shows the `UserDefinedType` attribute of the Point UDT.</span></span>  <span data-ttu-id="85c41-104">L’UDT est l’ordre d’octets est appelé « Point », a une méthode de validation nommée « ValidatePoint » et utilise le format de sérialisation native.</span><span class="sxs-lookup"><span data-stu-id="85c41-104">The UDT is byte-ordered, is named "Point", has a validation method named "ValidatePoint", and uses the native serialization format.</span></span>  
  
 [!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Native">
      <MemberSignature Language="C#" Value="Native" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Native = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Native" />
      <MemberSignature Language="VB.NET" Value="Native" />
      <MemberSignature Language="C++ CLI" Value="Native" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="85c41-105">Le format de sérialisation <see langword="Native" /> utilise un algorithme très simple qui permet à SQL Server de stocker une représentation efficace du type défini par l'utilisateur sur le disque.</span><span class="sxs-lookup"><span data-stu-id="85c41-105">The <see langword="Native" /> serialization format uses a very simple algorithm that enables SQL Server to store an efficient representation of the UDT on disk.</span></span> <span data-ttu-id="85c41-106">Les types marqués pour la sérialisation <see langword="Native" /> peuvent avoir uniquement des types valeur (structs en Microsoft Visual C# et structures en Microsoft Visual Basic .NET) comme membres.</span><span class="sxs-lookup"><span data-stu-id="85c41-106">Types marked for <see langword="Native" /> serialization can only have value types (structs in Microsoft Visual C# and structures in Microsoft Visual Basic .NET) as members.</span></span> <span data-ttu-id="85c41-107">Les membres de types référence (tels que les classes en Visual C# et Visual Basic), soit définis par l'utilisateur, soit ceux qui existent dans l'infrastructure (tels que <see cref="T:System.String" />), ne sont pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="85c41-107">Members of reference types (such as classes in Visual C# and Visual Basic), either user-defined or those existing in the framework (such as <see cref="T:System.String" />), are not supported.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85c41-108">La configuration requise pour ce format est :</span><span class="sxs-lookup"><span data-stu-id="85c41-108">The requirements for this format are:</span></span>  
  
-   <span data-ttu-id="85c41-109">Le `StructLayout.LayoutKindSequential` attribut doit être appliqué à l’agrégat ou UDT si elle est définie dans une classe et non dans une structure.</span><span class="sxs-lookup"><span data-stu-id="85c41-109">The `StructLayout.LayoutKindSequential` attribute must be applied to the aggregate or UDT if it is defined in a class and not a structure.</span></span> <span data-ttu-id="85c41-110">Contrôle la disposition physique des champs de données, il est utilisé pour contraindre les membres doivent être disposées séquentiellement dans l’ordre de qu'apparition.</span><span class="sxs-lookup"><span data-stu-id="85c41-110">This controls the physical layout of the data fields, and is used to force the members to be laid out sequentially in the order they appear.</span></span> <span data-ttu-id="85c41-111">SQL Server utilise cet attribut pour déterminer l’ordre des champs des UDT avec plusieurs champs.</span><span class="sxs-lookup"><span data-stu-id="85c41-111">SQL Server uses this attribute to determine the field order for UDTs with multiple fields.</span></span>  
  
-   <span data-ttu-id="85c41-112">Le type doit contenir au moins un membre (les valeurs sérialisées ne peut pas être de taille zéro octet).</span><span class="sxs-lookup"><span data-stu-id="85c41-112">The type must contain at least one member (serialized values cannot be zero bytes in size).</span></span>  
  
-   <span data-ttu-id="85c41-113">Tous les champs de l’agrégat doivent être *blittables*, autrement dit, ils doivent avoir une représentation commune dans la mémoire managée et non managée et pas nécessitent un traitement particulier par le marshaleur d’interopérabilité.</span><span class="sxs-lookup"><span data-stu-id="85c41-113">All the fields of the aggregate must be *blittable*, that is, they must have a common representation in both managed and unmanaged memory and not require special handling by the interop marshaler.</span></span>  
  
-   <span data-ttu-id="85c41-114">Tous les champs de l’UDT doivent être l’un des types suivants qui peuvent être sérialisés : `bool`, `byte`, `sbyte`, `short`, `ushort`, `int`, `uint`, `long`, `ulong`, `float` , `double`, <xref:System.Data.SqlTypes.SqlByte>, <xref:System.Data.SqlTypes.SqlInt16>, <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.SqlTypes.SqlInt64>, <xref:System.Data.SqlTypes.SqlDateTime>, <xref:System.Data.SqlTypes.SqlSingle>, <xref:System.Data.SqlTypes.SqlDouble>, <xref:System.Data.SqlTypes.SqlMoney>, ou d’autres types valeur définis par l’utilisateur qui contiennent des champs de l’un de ces types.</span><span class="sxs-lookup"><span data-stu-id="85c41-114">All the fields of the UDT should be of one of the following types that can be serialized: `bool`, `byte`, `sbyte`, `short`, `ushort`, `int`, `uint`, `long`, `ulong`, `float`, `double`, <xref:System.Data.SqlTypes.SqlByte>, <xref:System.Data.SqlTypes.SqlInt16>, <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.SqlTypes.SqlInt64>, <xref:System.Data.SqlTypes.SqlDateTime>, <xref:System.Data.SqlTypes.SqlSingle>, <xref:System.Data.SqlTypes.SqlDouble>, <xref:System.Data.SqlTypes.SqlMoney>, or other value types defined by the user that contain fields of one of these types.</span></span>  
  
-   <span data-ttu-id="85c41-115">L’agrégat ne doit pas spécifier une valeur pour `MaxByteSize`.</span><span class="sxs-lookup"><span data-stu-id="85c41-115">The aggregate must not specify a value for `MaxByteSize`.</span></span>  
  
-   <span data-ttu-id="85c41-116">L’agrégat ne doit pas avoir de tous les champs [NonSerialized].</span><span class="sxs-lookup"><span data-stu-id="85c41-116">The aggregate must not have any [NonSerialized] fields.</span></span>  
  
-   <span data-ttu-id="85c41-117">Les champs ne doivent pas être marquées comme une disposition explicite (<xref:System.Runtime.InteropServices.StructLayoutAttribute>).</span><span class="sxs-lookup"><span data-stu-id="85c41-117">Fields must not be marked as an explicit layout (<xref:System.Runtime.InteropServices.StructLayoutAttribute>).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Unknown = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="C++ CLI" Value="Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="85c41-118">Le format de sérialisation est inconnu.</span><span class="sxs-lookup"><span data-stu-id="85c41-118">The serialization format is unknown.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="UserDefined">
      <MemberSignature Language="C#" Value="UserDefined" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format UserDefined = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberSignature Language="VB.NET" Value="UserDefined" />
      <MemberSignature Language="C++ CLI" Value="UserDefined" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="85c41-119">Le format de sérialisation <see langword="UserDefined" /> permet au développeur une maîtrise totale du format binaire par le biais des méthodes <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Write" /> et <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Read" />.</span><span class="sxs-lookup"><span data-stu-id="85c41-119">The <see langword="UserDefined" /> serialization format gives the developer full control over the binary format through the <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Write" /> and <see cref="T:Microsoft.SqlServer.Server.IBinarySerialize" /><see langword=".Read" /> methods.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85c41-120">L’agrégat doit spécifier une valeur pour `MaxByteSize`.</span><span class="sxs-lookup"><span data-stu-id="85c41-120">The aggregate must specify a value for `MaxByteSize`.</span></span>  
  
 <span data-ttu-id="85c41-121">Spécifier la <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> la propriété d’attribut.</span><span class="sxs-lookup"><span data-stu-id="85c41-121">Specify the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> attribute property.</span></span> <span data-ttu-id="85c41-122">La valeur par défaut est false.</span><span class="sxs-lookup"><span data-stu-id="85c41-122">The default value is false.</span></span>  
  
 <span data-ttu-id="85c41-123">Si vous omettez un champ dans le <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> ou <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> méthodes, l’état de ce champ n’est pas sérialisé.</span><span class="sxs-lookup"><span data-stu-id="85c41-123">If you omit any field in the <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> or <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> methods, the state of that field is not serialized.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>