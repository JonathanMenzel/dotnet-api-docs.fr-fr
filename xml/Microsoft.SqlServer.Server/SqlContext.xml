<Type Name="SqlContext" FullName="Microsoft.SqlServer.Server.SqlContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="925c62c41e322e116fd365bf090d9efd2a63835d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36730212" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlContext sealed" />
  <TypeSignature Language="F#" Value="type SqlContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente une abstraction du contexte de l'appelant, qui fournit l'accès aux objets <see cref="T:Microsoft.SqlServer.Server.SqlPipe" />, <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" /> et <see cref="T:System.Security.Principal.WindowsIdentity" />. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:Microsoft.SqlServer.Server.SqlContext> objet peut être utilisé pour obtenir le contexte de déclencheur (pour l’exécution de code dans un déclencheur) et l’objet de canal (le cas échéant, comme dans les procédures stockées). Il peut également être utilisé pour obtenir un <xref:System.Security.Principal.WindowsIdentity> objet qui représente l’identité Microsoft Windows du client appelant, si le client authentifié avec le serveur à l’aide de l’authentification intégrée.  
  
   
  
## Examples  
 L’exemple suivant crée un nouveau <xref:Microsoft.SqlServer.Server.SqlDataRecord> et son <xref:Microsoft.SqlServer.Server.SqlMetaData>. L’exemple marque ensuite le début d’un jeu de résultats le <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> méthode, envoie des enregistrements avec les données d’exemple au client à l’aide de la <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> (méthode) et marque la fin du résultat définie avec la <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> (méthode).  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public static bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.IsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAvailable : bool" Usage="Microsoft.SqlServer.Server.SqlContext.IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Spécifie si le code appelant s'exécute au sein de SQL Server et si la "context connection" est accessible.</summary>
        <value>
          <see langword="True" /> si la "context connection" est disponible et que les autres membres <see cref="T:Microsoft.SqlServer.Server.SqlContext" /> sont accessibles.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si cette propriété retourne la valeur false, tous les autres <xref:Microsoft.SqlServer.Server.SqlContext> membres lèvent une <xref:System.InvalidOperationException> si utilisé.  
  
 Si cette propriété retourne la valeur false, toute tentative d’ouvrir un objet de connexion qui a « connexion contextuelle = true » dans la chaîne de connexion échoue.  
  
 Cette propriété est en lecture seule.  
  
 Lorsque vous utilisez ADO.NET pour accéder aux données, si une partie du code peut s’exécuter au sein de SQL Server (à l’aide d’intégration du common language runtime) et en dehors de SQL Server, cette propriété peut être utilisée pour vérifier si la connexion contextuelle est disponible.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipe">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Server.SqlPipe Pipe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.SqlServer.Server.SqlPipe Pipe" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.Pipe" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Pipe As SqlPipe" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::SqlServer::Server::SqlPipe ^ Pipe { Microsoft::SqlServer::Server::SqlPipe ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Pipe : Microsoft.SqlServer.Server.SqlPipe" Usage="Microsoft.SqlServer.Server.SqlContext.Pipe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.SqlPipe</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'objet de canal qui permet à l'appelant d'envoyer des jeux de résultats, des messages et les résultats de l'exécution de commandes vers le client.</summary>
        <value>Instance de <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> si un canal est disponible, ou <see langword="null" /> si elle est appelée dans un contexte où le canal n'est pas disponible (par exemple, dans une fonction définie par l'utilisateur).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si elle est appelée à partir de l’extérieur de SQL Server, un <xref:System.NotSupportedException> est levée.  
  
 Cette propriété est en lecture seule.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TriggerContext">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.TriggerContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TriggerContext As SqlTriggerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::SqlServer::Server::SqlTriggerContext ^ TriggerContext { Microsoft::SqlServer::Server::SqlTriggerContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TriggerContext : Microsoft.SqlServer.Server.SqlTriggerContext" Usage="Microsoft.SqlServer.Server.SqlContext.TriggerContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.SqlTriggerContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le contexte de déclencheur permettant de fournir à l'appelant des informations concernant ce qui a activé le déclencheur, ainsi qu'un mappage des colonnes qui ont été mises à jour.</summary>
        <value>Instance de <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" /> si un contexte de déclencheur est disponible ou <see langword="null" /> si appelée en dehors d'un appel de déclencheur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:Microsoft.SqlServer.Server.SqlTriggerContext> objet peut être récupéré uniquement à partir d’un déclencheur de common language runtime.  
  
 Si le <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> propriété est accessible en dehors de SQL Server, un <xref:System.NotSupportedException> est levée.  
  
 Cette propriété est en lecture seule.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsIdentity">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity WindowsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Principal.WindowsIdentity WindowsIdentity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.WindowsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property WindowsIdentity As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Principal::WindowsIdentity ^ WindowsIdentity { System::Security::Principal::WindowsIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WindowsIdentity : System.Security.Principal.WindowsIdentity" Usage="Microsoft.SqlServer.Server.SqlContext.WindowsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Identité Microsoft Windows de l'appelant.</summary>
        <value>Instance de <see cref="T:System.Security.Principal.WindowsIdentity" /> représentant l'identité Windows de l'appelant ou <see langword="null" /> si le client a été authentifié par le biais de l'authentification SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le code du Common language runtime (CLR) dans SQL Server est toujours appelé dans le contexte du compte du processus. S’il est nécessaire pour le code à exécuter une action à l’aide d’identité de l’utilisateur appelant plutôt que l’identité du processus SQL Server, un jeton d’emprunt d’identité doit être obtenu via cette propriété. Après obtention de l'objet <xref:System.Security.Principal.WindowsIdentity>, les appelants peuvent emprunter l'identité du compte du client et exécuter des actions pour son compte.  
  
 Si elle est appelée à partir de l’extérieur de SQL Server, un <xref:System.NotSupportedException> est levée.  
  
 Seuls les assemblys marqués à l'aide d'autorisations `EXTERNAL_ACCESS` ou `UNSAFE` peuvent accéder à cette propriété.  
  
 Cette propriété est en lecture seule.  
  
   
  
## Examples  
 L’exemple suivant montre comment obtenir l’identité Windows du client appelant et emprunter l’identité du client. Consultez « Exemple d’emprunt d’identité » dans la documentation en ligne de SQL Server pour obtenir un exemple d’utilisation de l’emprunt d’identité la <xref:Microsoft.SqlServer.Server.SqlContext.WindowsIdentity%2A> propriété.  
  
 [!code-csharp[DataWorks SqlContext.WindowsIdentity Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlContext.WindowsIdentity Sample/CS/source.cs#1)]
 [!code-vb[DataWorks SqlContext.WindowsIdentity Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlContext.WindowsIdentity Sample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>