<Type Name="SqlUserDefinedTypeAttribute" FullName="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="495de4c2fb751291a79b12aadbe46efaa0815a03" /><Meta Name="ms.sourcegitcommit" Value="220917117f9d774aaa482439aa7324e39dc1f5b6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="02/25/2019" /><Meta Name="ms.locfileid" Value="56792588" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlUserDefinedTypeAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlUserDefinedTypeAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlUserDefinedTypeAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlUserDefinedTypeAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type SqlUserDefinedTypeAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.1;netcore-2.2;netcore-3.0;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="448d2-101">Permet de marquer une définition de type dans un assembly comme étant un type défini par l'utilisateur dans SQL Server.</span><span class="sxs-lookup"><span data-stu-id="448d2-101">Used to mark a type definition in an assembly as a user-defined type (UDT) in SQL Server.</span></span> <span data-ttu-id="448d2-102">Les propriétés de l'attribut reflètent les caractéristiques physiques utilisées lorsque le type est enregistré avec SQL Server.</span><span class="sxs-lookup"><span data-stu-id="448d2-102">The properties on the attribute reflect the physical characteristics used when the type is registered with SQL Server.</span></span> <span data-ttu-id="448d2-103">Cette classe ne peut pas être héritée.</span><span class="sxs-lookup"><span data-stu-id="448d2-103">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448d2-104">SQL Server crée un type défini par l’utilisateur qui est lié à la définition de type qui a le <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> attribut personnalisé.</span><span class="sxs-lookup"><span data-stu-id="448d2-104">SQL Server creates a user-defined type that is bound to the type definition that has the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> custom attribute.</span></span> <span data-ttu-id="448d2-105">Chaque UDT doit être annoté avec cet attribut.</span><span class="sxs-lookup"><span data-stu-id="448d2-105">Every UDT must be annotated with this attribute.</span></span> <span data-ttu-id="448d2-106">Consultez [les Types](https://go.microsoft.com/fwlink/?LinkId=128028) pour plus d’informations sur les types UDT, y compris un exemple d’un UDT.</span><span class="sxs-lookup"><span data-stu-id="448d2-106">See [CLR User-Defined Types](https://go.microsoft.com/fwlink/?LinkId=128028) for more information about UDTs, including an example of a UDT.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="448d2-107">L’exemple suivant montre le `UserDefinedType` attribut de l’UDT Point.</span><span class="sxs-lookup"><span data-stu-id="448d2-107">The following example shows the `UserDefinedType` attribute of the Point UDT.</span></span>  <span data-ttu-id="448d2-108">L’UDT est l’ordre d’octets est appelé « Point », a une méthode de validation nommée « ValidatePoint » et utilise le format de sérialisation native.</span><span class="sxs-lookup"><span data-stu-id="448d2-108">The UDT is byte-ordered, is named "Point", has a validation method named "ValidatePoint", and uses the native serialization format.</span></span>  
  
 [!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
 [!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlUserDefinedTypeAttribute (Microsoft.SqlServer.Server.Format format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype Microsoft.SqlServer.Server.Format format) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.#ctor(Microsoft.SqlServer.Server.Format)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlUserDefinedTypeAttribute(Microsoft::SqlServer::Server::Format format);" />
      <MemberSignature Language="F#" Value="new Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute : Microsoft.SqlServer.Server.Format -&gt; Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" Usage="new Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute format" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="format" Type="Microsoft.SqlServer.Server.Format" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="448d2-109">Une des valeurs <see cref="T:Microsoft.SqlServer.Server.Format" /> représentant le format de sérialisation du type.</span><span class="sxs-lookup"><span data-stu-id="448d2-109">One of the <see cref="T:Microsoft.SqlServer.Server.Format" /> values representing the serialization format of the type.</span></span></param>
        <summary><span data-ttu-id="448d2-110">Attribut requis d'un type défini par l'utilisateur permettant de confirmer que le type donné est défini par l'utilisateur et d'en indiquer le format de stockage.</span><span class="sxs-lookup"><span data-stu-id="448d2-110">A required attribute on a user-defined type (UDT), used to confirm that the given type is a UDT and to indicate the storage format of the UDT.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448d2-111">L’exemple suivant spécifie que le `Format` du type défini par l’utilisateur est `SerializedDataWithMetadata` et `MaxByteSize` de 8 000 octets.</span><span class="sxs-lookup"><span data-stu-id="448d2-111">The following example specifies that the `Format` of the user-defined type is `SerializedDataWithMetadata` and the `MaxByteSize` is 8000 bytes.</span></span>  
  
   
  
## Examples  
 [!code-csharp[VbRaddataSQLObjects#12](~/samples/snippets/csharp/VS_Snippets_VBCSharp/VbRaddataSQLObjects/CS/Type1.cs#12)]
 [!code-vb[VbRaddataSQLObjects#12](~/samples/snippets/visualbasic/VS_Snippets_VBCSharp/VbRaddataSQLObjects/VB/Type1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Server.Format Format { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Server.Format Format" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Format As Format" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SqlServer::Server::Format Format { Microsoft::SqlServer::Server::Format get(); };" />
      <MemberSignature Language="F#" Value="member this.Format : Microsoft.SqlServer.Server.Format" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Format" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="448d2-112">Format de sérialisation en tant que <see cref="T:Microsoft.SqlServer.Server.Format" />.</span><span class="sxs-lookup"><span data-stu-id="448d2-112">The serialization format as a <see cref="T:Microsoft.SqlServer.Server.Format" />.</span></span></summary>
        <value><span data-ttu-id="448d2-113">Valeur <see cref="T:Microsoft.SqlServer.Server.Format" /> représentant le format de sérialisation.</span><span class="sxs-lookup"><span data-stu-id="448d2-113">A <see cref="T:Microsoft.SqlServer.Server.Format" /> value representing the serialization format.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsByteOrdered">
      <MemberSignature Language="C#" Value="public bool IsByteOrdered { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsByteOrdered" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered" />
      <MemberSignature Language="VB.NET" Value="Public Property IsByteOrdered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsByteOrdered { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsByteOrdered : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="448d2-114">Indique si les octets du type défini par l'utilisateur sont classés.</span><span class="sxs-lookup"><span data-stu-id="448d2-114">Indicates whether the user-defined type is byte ordered.</span></span></summary>
        <value><span data-ttu-id="448d2-115"><see langword="true" /> si les octets du type défini par l'utilisateur sont classés ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="448d2-115"><see langword="true" /> if the user-defined type is byte ordered; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448d2-116">Lorsque la valeur `true`, le <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> propriété garantit que les données binaires sérialisées peuvent être utilisées pour le classement sémantique des informations.</span><span class="sxs-lookup"><span data-stu-id="448d2-116">When set to `true`, the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> property in effect guarantees that the serialized binary data can be used for semantic ordering of the information.</span></span> <span data-ttu-id="448d2-117">Par conséquent, chaque instance d’un objet UDT ordonné par octet ne peut avoir une seule représentation sérialisée.</span><span class="sxs-lookup"><span data-stu-id="448d2-117">Thus, each instance of a byte-ordered UDT object can only have one serialized representation.</span></span> <span data-ttu-id="448d2-118">Lorsqu’une opération de comparaison est effectuée dans SQL Server sur les octets sérialisés, ses résultats doivent être les mêmes que si la même opération de comparaison avait eu lieu dans le code managé.</span><span class="sxs-lookup"><span data-stu-id="448d2-118">When a comparison operation is performed in SQL Server on the serialized bytes, its results should be the same as if the same comparison operation had taken place in managed code.</span></span>  
  
 <span data-ttu-id="448d2-119">Les fonctionnalités suivantes sont prises en charge lorsque <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> est défini sur `true`:</span><span class="sxs-lookup"><span data-stu-id="448d2-119">The following features are supported when <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> is set to `true`:</span></span>  
  
-   <span data-ttu-id="448d2-120">La possibilité de créer des index sur des colonnes de ce type.</span><span class="sxs-lookup"><span data-stu-id="448d2-120">The ability to create indexes on columns of this type.</span></span>  
  
-   <span data-ttu-id="448d2-121">La possibilité de créer des clés primaires et étrangères, ainsi que des contraintes CHECK et UNIQUE sur des colonnes de ce type.</span><span class="sxs-lookup"><span data-stu-id="448d2-121">The ability to create primary and foreign keys as well as CHECK and UNIQUE constraints on columns of this type.</span></span>  
  
-   <span data-ttu-id="448d2-122">La possibilité d’utiliser des clauses Transact-SQL ORDER BY, GROUP BY et PARTITION BY.</span><span class="sxs-lookup"><span data-stu-id="448d2-122">The ability to use Transact-SQL ORDER BY, GROUP BY, and PARTITION BY clauses.</span></span> <span data-ttu-id="448d2-123">Dans ce cas, la représentation binaire du type est utilisée pour déterminer l’ordre.</span><span class="sxs-lookup"><span data-stu-id="448d2-123">In these cases, the binary representation of the type is used to determine the order.</span></span>  
  
-   <span data-ttu-id="448d2-124">La possibilité d’utiliser des opérateurs de comparaison dans les instructions Transact-SQL.</span><span class="sxs-lookup"><span data-stu-id="448d2-124">The ability to use comparison operators in Transact-SQL statements.</span></span>  
  
-   <span data-ttu-id="448d2-125">La possibilité de rendre persistantes des colonnes calculées de ce type.</span><span class="sxs-lookup"><span data-stu-id="448d2-125">The ability to persist computed columns of this type.</span></span>  
  
 <span data-ttu-id="448d2-126">Notez qu’à la fois le `Native` et `UserDefined` formats de sérialisation prennent en charge les opérateurs de comparaison suivants lorsque <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> est défini sur `true`:</span><span class="sxs-lookup"><span data-stu-id="448d2-126">Note that both the `Native` and `UserDefined` serialization formats support the following comparison operators when <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A> is set to `true`:</span></span>  
  
-   <span data-ttu-id="448d2-127">Égal à (=)</span><span class="sxs-lookup"><span data-stu-id="448d2-127">Equal to (=)</span></span>  
  
-   <span data-ttu-id="448d2-128">Différent de (!=)</span><span class="sxs-lookup"><span data-stu-id="448d2-128">Not equal to (!=)</span></span>  
  
-   <span data-ttu-id="448d2-129">Supérieur à (>)</span><span class="sxs-lookup"><span data-stu-id="448d2-129">Greater than (>)</span></span>  
  
-   <span data-ttu-id="448d2-130">Inférieur à (\<)</span><span class="sxs-lookup"><span data-stu-id="448d2-130">Less than (\<)</span></span>  
  
-   <span data-ttu-id="448d2-131">Supérieur ou égal à (>=)</span><span class="sxs-lookup"><span data-stu-id="448d2-131">Greater than or equal to (>=)</span></span>  
  
-   <span data-ttu-id="448d2-132">Inférieur ou égal à (<=)</span><span class="sxs-lookup"><span data-stu-id="448d2-132">Less than or equal to (<=)</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedLength">
      <MemberSignature Language="C#" Value="public bool IsFixedLength { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedLength" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength" />
      <MemberSignature Language="VB.NET" Value="Public Property IsFixedLength As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedLength { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedLength : bool with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsFixedLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="448d2-133">Indique si toutes les instances de ce type défini par l'utilisateur ont la même longueur.</span><span class="sxs-lookup"><span data-stu-id="448d2-133">Indicates whether all instances of this user-defined type are the same length.</span></span></summary>
        <value><span data-ttu-id="448d2-134"><see langword="true" /> si toutes les instances de ce type sont de la même longueur ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="448d2-134"><see langword="true" /> if all instances of this type are the same length; otherwise <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448d2-135">Si la valeur `true`, toutes les instances d’UDT correspondant à ce type de common language runtime (CLR) doivent avoir une longueur en octets exactement égales à <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="448d2-135">If set to `true`, all instances of UDTs corresponding to this common language runtime (CLR) type must have a length in bytes exactly equal to <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>.</span></span> <span data-ttu-id="448d2-136">Cet attribut est uniquement pertinent pour les UDT avec `UserDefined` sérialisation <xref:Microsoft.SqlServer.Server.Format>.</span><span class="sxs-lookup"><span data-stu-id="448d2-136">This attribute is only relevant for UDTs with `UserDefined` serialization <xref:Microsoft.SqlServer.Server.Format>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxByteSize">
      <MemberSignature Language="C#" Value="public int MaxByteSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxByteSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxByteSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxByteSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxByteSize : int with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="448d2-137">Taille maximale de l'instance, en octets.</span><span class="sxs-lookup"><span data-stu-id="448d2-137">The maximum size of the instance, in bytes.</span></span></summary>
        <value><span data-ttu-id="448d2-138">Valeur <see cref="T:System.Int32" /> représentant la taille maximale de l'instance.</span><span class="sxs-lookup"><span data-stu-id="448d2-138">An <see cref="T:System.Int32" /> value representing the maximum size of the instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448d2-139">Vous devez spécifier le <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> propriété avec le `UserDefined` sérialisation <xref:Microsoft.SqlServer.Server.Format>.</span><span class="sxs-lookup"><span data-stu-id="448d2-139">You must specify the <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> property with the `UserDefined` serialization <xref:Microsoft.SqlServer.Server.Format>.</span></span>  
  
 <span data-ttu-id="448d2-140">Lors de la connexion à SQL Server 2005 ou version antérieure, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> doit être comprise entre 1 et 8 000.</span><span class="sxs-lookup"><span data-stu-id="448d2-140">When connecting to SQL Server 2005 or earlier, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> must be between 1 and 8000.</span></span>  
  
 <span data-ttu-id="448d2-141">Lors de la connexion à SQL Server 2008 ou version ultérieure, définissez <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> comprise entre 1 et 8000, pour un type dont les instances sont toujours 8 000 octets ou moins.</span><span class="sxs-lookup"><span data-stu-id="448d2-141">When connecting to SQL Server 2008 or later, set <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> between 1 and 8000, for a type whose instances are always 8,000 bytes or less.</span></span> <span data-ttu-id="448d2-142">Pour les types qui peuvent avoir des instances supérieure à 8000, spécifiez -1.</span><span class="sxs-lookup"><span data-stu-id="448d2-142">For types that can have instances larger than 8000, specify -1.</span></span>  
  
 <span data-ttu-id="448d2-143">Pour un type UDT avec la sérialisation définie par l’utilisateur spécifié, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> fait référence à la taille totale de l’UDT dans sa forme sérialisée, tel que défini par l’utilisateur.</span><span class="sxs-lookup"><span data-stu-id="448d2-143">For a UDT with user-defined serialization specified, <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A> refers to the total size of the UDT in its serialized form as defined by the user.</span></span> <span data-ttu-id="448d2-144">Envisagez un UDT doté d’une propriété d’une chaîne de 10 caractères (<xref:System.Char>).</span><span class="sxs-lookup"><span data-stu-id="448d2-144">Consider a UDT with a property of a string of 10 characters (<xref:System.Char>).</span></span> <span data-ttu-id="448d2-145">Lors de l’UDT est sérialisé à l’aide un <xref:System.IO.BinaryWriter>, la taille totale de la chaîne sérialisée est de 22 octets : 2 octets par caractère Unicode UTF-16, multiplié par le nombre maximal de caractères de plus de contrôle 2 octets de surcharge induite par la sérialisation d’un flux binaire.</span><span class="sxs-lookup"><span data-stu-id="448d2-145">When the UDT is serialized using a <xref:System.IO.BinaryWriter>, the total size of the serialized string is 22 bytes: 2 bytes per Unicode UTF-16 character, multiplied by the maximum number of characters, plus 2 control bytes of overhead incurred from serializing a binary stream.</span></span> <span data-ttu-id="448d2-146">Par conséquent, lors de la détermination de la valeur de <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>, la taille totale de l’UDT sérialisé doit être pris en compte : la taille des données sérialisées sous forme binaire, plus la charge mémoire générée par la sérialisation.</span><span class="sxs-lookup"><span data-stu-id="448d2-146">So, when determining the value of <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.MaxByteSize%2A>, the total size of the serialized UDT must be considered: the size of the data serialized in binary form plus the overhead incurred by serialization.</span></span>  
  
 <span data-ttu-id="448d2-147">Cette propriété ne doit pas être utilisée avec `Native` sérialisation <xref:Microsoft.SqlServer.Server.Format>.</span><span class="sxs-lookup"><span data-stu-id="448d2-147">This property should not be used with `Native` serialization <xref:Microsoft.SqlServer.Server.Format>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="448d2-148">Nom SQL Server du type défini par l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="448d2-148">The SQL Server name of the user-defined type.</span></span></summary>
        <value><span data-ttu-id="448d2-149">Valeur <see cref="T:System.String" /> représentant le nom SQL Server du type défini par l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="448d2-149">A <see cref="T:System.String" /> value representing the SQL Server name of the user-defined type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448d2-150">Le <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name%2A> propriété n’est pas utilisée dans SQL Server, mais qu’il est utilisée par l’environnement de développement intégré (IDE) Microsoft Visual Studio .NET.</span><span class="sxs-lookup"><span data-stu-id="448d2-150">The <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.Name%2A> property is not used within SQL Server, but is used by the Microsoft Visual Studio .NET Integrated Development Environment (IDE).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationMethodName">
      <MemberSignature Language="C#" Value="public string ValidationMethodName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationMethodName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidationMethodName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValidationMethodName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidationMethodName : string with get, set" Usage="Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.ValidationMethodName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="448d2-151">Nom de la méthode utilisée pour valider des instances du type défini par l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="448d2-151">The name of the method used to validate instances of the user-defined type.</span></span></summary>
        <value><span data-ttu-id="448d2-152"><see cref="T:System.String" /> représentant le nom de la méthode utilisée pour valider des instances du type défini par l'utilisateur.</span><span class="sxs-lookup"><span data-stu-id="448d2-152">A <see cref="T:System.String" /> representing the name of the method used to validate instances of the user-defined type.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="448d2-153">La méthode spécifiée par cet attribut valide des instances du type UDT lors de l’UDT a été désérialisé à partir d’une valeur binaire qui n’est pas approuvée.</span><span class="sxs-lookup"><span data-stu-id="448d2-153">The method specified by this attribute validates instances of the UDT when the UDT has been deserialized from a binary value that is not trusted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>