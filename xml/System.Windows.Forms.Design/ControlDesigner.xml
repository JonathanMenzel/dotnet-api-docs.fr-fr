<Type Name="ControlDesigner" FullName="System.Windows.Forms.Design.ControlDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0d2357ea53da7dd0dc1ee03a200110254b50e684" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ControlDesigner : System.ComponentModel.Design.ComponentDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlDesigner extends System.ComponentModel.Design.ComponentDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Design.ControlDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlDesigner&#xA;Inherits ComponentDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlDesigner : System::ComponentModel::Design::ComponentDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Design.ComponentDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7f2d2-101">Étend le comportement en mode design de <see cref="T:System.Windows.Forms.Control" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7f2d2-101">Extends the design mode behavior of a <see cref="T:System.Windows.Forms.Control" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d2-102"><xref:System.Windows.Forms.Design.ControlDesigner> Fournit une classe de base pour les concepteurs de composants qui dérivent <xref:System.Windows.Forms.Control>.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-102"><xref:System.Windows.Forms.Design.ControlDesigner> provides a base class for designers of components that derive from <xref:System.Windows.Forms.Control>.</span></span> <span data-ttu-id="7f2d2-103">Outre les méthodes et la fonctionnalité héritées de la <xref:System.ComponentModel.Design.ComponentDesigner> (classe), <xref:System.Windows.Forms.Design.ControlDesigner> fournit des méthodes supplémentaires pour prendre en charge d’extension et la modification du comportement d’un <xref:System.Windows.Forms.Control> au moment du design.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-103">In addition to the methods and functionality inherited from the <xref:System.ComponentModel.Design.ComponentDesigner> class, <xref:System.Windows.Forms.Design.ControlDesigner> provides additional methods to support extending and altering the behavior of an associated <xref:System.Windows.Forms.Control> at design time.</span></span>  
  
 <span data-ttu-id="7f2d2-104">Vous pouvez associer un concepteur avec un type en utilisant un <xref:System.ComponentModel.DesignerAttribute>.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-104">You can associate a designer with a type using a <xref:System.ComponentModel.DesignerAttribute>.</span></span> <span data-ttu-id="7f2d2-105">Pour une vue d’ensemble de la personnalisation du comportement au moment du design, consultez [étendre la prise en charge au moment du Design](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2).</span><span class="sxs-lookup"><span data-stu-id="7f2d2-105">For an overview of customizing design time behavior, see [Extending Design-Time Support](http://msdn.microsoft.com/library/d6ac8a6a-42fd-4bc8-bf33-b212811297e2).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7f2d2-106">L’exemple suivant <xref:System.Windows.Forms.Design.ControlDesigner> implémentation illustre la gestion `MouseEnter` et `MouseLeave` événements, sur un contrôle de dessin du concepteur et à l’aide de la partie de la <xref:System.ComponentModel.Design.IDesignerFilter> interface pour ajouter une propriété pour le contrôle au moment du design.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-106">The following example <xref:System.Windows.Forms.Design.ControlDesigner> implementation demonstrates handling `MouseEnter` and `MouseLeave` events, drawing on a control from designer code, and using part of the <xref:System.ComponentModel.Design.IDesignerFilter> interface to add a property for the control at design time.</span></span> <span data-ttu-id="7f2d2-107">L’exemple de code suivant contient un concepteur et un exemple de contrôle utilisateur associé au concepteur.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-107">The following sample code contains a designer and a sample user control associated with the designer.</span></span> <span data-ttu-id="7f2d2-108">Pour générer cet exemple, compilez-le dans une bibliothèque de classes, ajoutez une référence à la bibliothèque à un projet Windows Forms, ajouter le contrôle à la boîte à outils et ajoutez une instance du contrôle à votre formulaire.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-108">To build this sample, compile the sample into a class library, add a reference to the library to a Windows Forms project, add the control to the Toolbox, and add an instance of the control to your form.</span></span> <span data-ttu-id="7f2d2-109">Lorsque vous pointez sur le contrôle, le contour interne du périmètre du contrôle est mis en surbrillance, et la couleur utilisée pour dessiner le contour correspond à la `OutlineColor` propriété le concepteur a ajouté aux propriétés répertoriées pour le contrôle.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-109">When you point to the control, the inner outline of the perimeter of the control is highlighted, and the color used to draw the outline corresponds to the `OutlineColor` property that the designer has added to the properties listed for the control.</span></span>  
  
 <span data-ttu-id="7f2d2-110">Ajoutez une référence à l’assembly System.Design pour compiler l’exemple de code.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-110">Add a reference to the System.Design assembly to compile the code example.</span></span>  
  
 [!code-cpp[ControlDesignerExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ControlDesignerExample/CPP/controldesignerexample.cpp#1)]
 [!code-csharp[ControlDesignerExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ControlDesignerExample/CS/controldesignerexample.cs#1)]
 [!code-vb[ControlDesignerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ControlDesignerExample/VB/controldesignerexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.Design.ComponentDesigner" />
    <altmember cref="T:System.ComponentModel.Design.IDesigner" />
    <altmember cref="T:System.ComponentModel.DesignerAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7f2d2-111">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-111">Initializes a new instance of the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="accessibilityObj">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.AccessibleObject accessibilityObj;" />
      <MemberSignature Language="ILAsm" Value=".field family class System.Windows.Forms.AccessibleObject accessibilityObj" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.Design.ControlDesigner.accessibilityObj" />
      <MemberSignature Language="VB.NET" Value="Protected accessibilityObj As AccessibleObject " />
      <MemberSignature Language="C++ CLI" Value="protected: System::Windows::Forms::AccessibleObject ^ accessibilityObj;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7f2d2-112">Spécifie l'objet d'accessibilité pour le concepteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-112">Specifies the accessibility object for the designer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d2-113">La valeur par défaut est `null`.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-113">The default value is `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="AccessibilityObject">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.AccessibleObject AccessibilityObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject AccessibilityObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.AccessibilityObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AccessibilityObject As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleObject ^ AccessibilityObject { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7f2d2-114">Obtient le <see cref="T:System.Windows.Forms.AccessibleObject" /> assigné au contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-114">Gets the <see cref="T:System.Windows.Forms.AccessibleObject" /> assigned to the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7f2d2-115">
            <see cref="T:System.Windows.Forms.AccessibleObject" /> assigné au contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-115">The <see cref="T:System.Windows.Forms.AccessibleObject" /> assigned to the control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d2-116">Pour plus d'informations sur les objets accessibles, consultez la section Active Accessibility de MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-116">For more information about accessible objects, see the Active Accessibility section of the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.AccessibleObject" />
      </Docs>
    </Member>
    <Member MemberName="AssociatedComponents">
      <MemberSignature Language="C#" Value="public override System.Collections.ICollection AssociatedComponents { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection AssociatedComponents" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.AssociatedComponents" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AssociatedComponents As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ AssociatedComponents { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7f2d2-117">Obtient la collection de composants associés au composant géré par le concepteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-117">Gets the collection of components associated with the component managed by the designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7f2d2-118">Composants associés au composant géré par le concepteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-118">The components that are associated with the component managed by the designer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d2-119">Cette propriété indique tous les composants pour copier ou déplacer, ainsi que le composant géré par le concepteur lors d’une copie, faites glisser, ou l’opération de déplacement.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-119">This property indicates any components to copy or move along with the component managed by the designer during a copy, drag, or move operation.</span></span>  
  
 <span data-ttu-id="7f2d2-120">Si cette collection contient des références à d’autres composants dans le document en mode design en cours, ces composants seront copiés en même temps que le composant géré par le concepteur durant une opération de copie.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-120">If this collection contains references to other components in the current design mode document, those components will be copied along with the component managed by the designer during a copy operation.</span></span>  
  
 <span data-ttu-id="7f2d2-121">Lorsque le composant géré par le concepteur est sélectionné, cette collection est remplie avec tous les contrôles imbriqués.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-121">When the component managed by the designer is selected, this collection is filled with any nested controls.</span></span> <span data-ttu-id="7f2d2-122">Cette collection peut également inclure d’autres composants, tels que les boutons des barres d’outils.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-122">This collection can also include other components, such as the buttons of a toolbar.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoResizeHandles">
      <MemberSignature Language="C#" Value="public bool AutoResizeHandles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoResizeHandles" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.AutoResizeHandles" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoResizeHandles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoResizeHandles { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7f2d2-123">Obtient ou définit une valeur indiquant si l'allocation de poignée de redimensionnement dépend de la valeur de la propriété <see cref="P:System.Windows.Forms.Control.AutoSize" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-123">Gets or sets a value indicating whether resize handle allocation depends on the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7f2d2-124">
            <see langword="true" /> si l'allocation de poignée de redimensionnement dépend de la valeur des propriétés <see cref="P:System.Windows.Forms.Control.AutoSize" /> et <see langword="AutoSizeMode" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-124">
              <see langword="true" /> if resize handle allocation depends on the value of the <see cref="P:System.Windows.Forms.Control.AutoSize" /> and <see langword="AutoSizeMode" /> properties; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7f2d2-125">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-125">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseWndProc">
      <MemberSignature Language="C#" Value="protected void BaseWndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void BaseWndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.BaseWndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub BaseWndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void BaseWndProc(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="7f2d2-126">
            <see cref="T:System.Windows.Forms.Message" /> à traiter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-126">The <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-127">Traite les messages Windows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-127">Processes Windows messages.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d2-128">Cette méthode provoque le message à traiter par Windows, en ignorant le contrôle.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-128">This method causes the message to be processed by Windows, skipping the control.</span></span> <span data-ttu-id="7f2d2-129">Cela est utile si vous souhaitez bloquer le message à partir de la mise en route pour le contrôle, mais vous ne souhaitez pas bloquer l’accès au Windows lui-même, car il peut provoquer la génération des autres messages.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-129">This is useful if you want to block the message from getting to the control, but you do not want to block it from getting to Windows itself because it can cause other messages to be generated.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BehaviorService">
      <MemberSignature Language="C#" Value="protected System.Windows.Forms.Design.Behavior.BehaviorService BehaviorService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Design.Behavior.BehaviorService BehaviorService" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.BehaviorService" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property BehaviorService As BehaviorService" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Windows::Forms::Design::Behavior::BehaviorService ^ BehaviorService { System::Windows::Forms::Design::Behavior::BehaviorService ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.Behavior.BehaviorService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7f2d2-130">Obtient le <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> de l'environnement de design.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-130">Gets the <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> from the design environment.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7f2d2-131">
            <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" /> ou <see langword="null" /> si le service n'est pas disponible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-131">The <see cref="T:System.Windows.Forms.Design.Behavior.BehaviorService" />, or <see langword="null" /> if the service is unavailable.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBeParentedTo">
      <MemberSignature Language="C#" Value="public virtual bool CanBeParentedTo (System.ComponentModel.Design.IDesigner parentDesigner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanBeParentedTo(class System.ComponentModel.Design.IDesigner parentDesigner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.CanBeParentedTo(System.ComponentModel.Design.IDesigner)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanBeParentedTo (parentDesigner As IDesigner) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanBeParentedTo(System::ComponentModel::Design::IDesigner ^ parentDesigner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parentDesigner" Type="System.ComponentModel.Design.IDesigner" />
      </Parameters>
      <Docs>
        <param name="parentDesigner">
          <span data-ttu-id="7f2d2-132">
            <see cref="T:System.ComponentModel.Design.IDesigner" /> qui gère le contrôle à vérifier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-132">The <see cref="T:System.ComponentModel.Design.IDesigner" /> that manages the control to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-133">Indique si le contrôle de ce concepteur peut être apparenté au contrôle du concepteur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-133">Indicates if this designer's control can be parented by the control of the specified designer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f2d2-134">
            <see langword="true" /> si le contrôle géré par le concepteur spécifié peut être apparenté au contrôle géré par ce concepteur, sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-134">
              <see langword="true" /> if the control managed by the specified designer can parent the control managed by this designer; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d2-135">Cette méthode est utile pour vérifier si un contrôle peut être apparenté à un type particulier de parent.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-135">This method is useful for testing whether a control can be parented by a particular type of parent.</span></span> <span data-ttu-id="7f2d2-136">Par exemple, <xref:System.Windows.Forms.TabPage> contrôles peuvent uniquement être apparentés à <xref:System.Windows.Forms.TabControl> contrôles.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-136">For example, <xref:System.Windows.Forms.TabPage> controls can only be parented by <xref:System.Windows.Forms.TabControl> controls.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7f2d2-137">Cette méthode n’est pas appelée lorsqu’un élément est déplacé de la **boîte à outils** sur l’aire de conception.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-137">This method is not called when an item is dragged from the **Toolbox** onto the design surface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Control">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Control Control { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control Control" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.Control" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Control As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Control ^ Control { System::Windows::Forms::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7f2d2-138">Obtient le contrôle qui est créé par le concepteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-138">Gets the control that the designer is designing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7f2d2-139">Contrôle qui est créé par le concepteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-139">The control that the designer is designing.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefWndProc">
      <MemberSignature Language="C#" Value="protected void DefWndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DefWndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.DefWndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DefWndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DefWndProc(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="7f2d2-140">
            <see cref="T:System.Windows.Forms.Message" /> à traiter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-140">The <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-141">Fournit le traitement par défaut pour les messages Windows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-141">Provides default processing for Windows messages.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d2-142">Cette méthode provoque le message à traiter par le contrôle, plutôt que par le concepteur.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-142">This method causes the message to be processed by the control, rather than by the designer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Design.ControlDesigner.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="DisplayError">
      <MemberSignature Language="C#" Value="protected void DisplayError (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DisplayError(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.DisplayError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DisplayError (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DisplayError(Exception ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7f2d2-143">
            <see cref="T:System.Exception" /> à afficher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-143">The <see cref="T:System.Exception" /> to display.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-144">Affiche des informations sur l'exception spécifiée pour l'utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-144">Displays information about the specified exception to the user.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="7f2d2-145">
            <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour ne libérer que les ressources non managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-145">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-146">Libère les ressources non managées utilisées par <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> et libère éventuellement les ressources managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-146">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d2-147">Cette méthode est appelée par le public `Dispose()` (méthode) et le <xref:System.Object.Finalize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="7f2d2-147">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="7f2d2-148">`Dispose()` appelle la méthode protégée `Dispose(Boolean)` méthode avec la `disposing` paramètre la valeur `true`.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-148">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="7f2d2-149"><xref:System.Object.Finalize%2A> appelle `Dispose` avec `disposing` la valeur `false`.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-149"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="7f2d2-150">Si le paramètre `disposing` a la valeur `true`, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <xref:System.Windows.Forms.Design.ControlDesigner>.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-150">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.Design.ControlDesigner> references.</span></span> <span data-ttu-id="7f2d2-151">Cette méthode appelle la méthode `Dispose()` de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-151">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="7f2d2-152">
              <see langword="Dispose" /> peut être appelée plusieurs fois par d'autres objets.</span>
            <span class="sxs-lookup">
              <span data-stu-id="7f2d2-152">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="7f2d2-153">Lors de la substitution <see langword="Dispose(Boolean)" />, veillez à ne pas référencer des objets qui ont été préalablement supprimés lors d’un appel antérieur à <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="7f2d2-153">When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="7f2d2-154">Pour plus d’informations sur l’implémentation <see langword="Dispose(Boolean)" />, consultez [implémentant une méthode de suppression](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="7f2d2-154">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="7f2d2-155">Pour plus d’informations sur <see langword="Dispose" /> et <see cref="M:System.Object.Finalize" />, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [substitution de la méthode Finalize](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            <span class="sxs-lookup">
              <span data-stu-id="7f2d2-155">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="EnableDesignMode">
      <MemberSignature Language="C#" Value="protected bool EnableDesignMode (System.Windows.Forms.Control child, string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool EnableDesignMode(class System.Windows.Forms.Control child, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode(System.Windows.Forms.Control,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EnableDesignMode (child As Control, name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool EnableDesignMode(System::Windows::Forms::Control ^ child, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.Forms.Control" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="7f2d2-156">Le contrôle enfant pour lequel le mode Design sera activé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-156">The child control for which design mode will be enabled.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="7f2d2-157">Nom de l’<c>enfant</c> tel qu'il est exposé à l'utilisateur final.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-157">The name of <c>child</c> as exposed to the end user.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-158">Active les fonctionnalités de design pour un contrôle enfant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-158">Enables design time functionality for a child control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f2d2-159">
            <see langword="true" /> si le contrôle enfant a pu être activé pour le design ; <see langword="false" /> si l'infrastructure d'hébergement ne le prend pas en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-159">
              <see langword="true" /> if the child control could be enabled for design time; <see langword="false" /> if the hosting infrastructure does not support it.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d2-160">Le contrôle enfant spécifié par `child` est un enfant du contrôles contrôle de ce concepteur de.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-160">The child control specified by `child` is a child of this control designer's control.</span></span> <span data-ttu-id="7f2d2-161">L’enfant ne participe pas directement dans la persistance, mais si elle est exposée en tant que propriété du contrôle principal.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-161">The child does not directly participate in persistence, but it will if it is exposed as a property of the main control.</span></span> <span data-ttu-id="7f2d2-162">Prenons un contrôle tel que le <xref:System.Windows.Forms.SplitContainer>: il a deux panneaux, `Panel1` et `Panel2`.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-162">Consider a control like the <xref:System.Windows.Forms.SplitContainer>: it has two panels, `Panel1` and `Panel2`.</span></span> <span data-ttu-id="7f2d2-163">Ces panneaux sont exposés via l’accès en lecture seule <xref:System.Windows.Forms.SplitContainer.Panel1%2A> et <xref:System.Windows.Forms.SplitContainer.Panel2%2A> propriétés sur le <xref:System.Windows.Forms.SplitContainer> contrôle.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-163">These panels are exposed through read only <xref:System.Windows.Forms.SplitContainer.Panel1%2A> and <xref:System.Windows.Forms.SplitContainer.Panel2%2A> properties on the <xref:System.Windows.Forms.SplitContainer> control.</span></span> <span data-ttu-id="7f2d2-164">Le <xref:System.Windows.Forms.SplitContainer> appels de concepteur du contrôle <xref:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode%2A> pour chaque panneau, qui permet d’autres composants à supprimer sur ces derniers.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-164">The <xref:System.Windows.Forms.SplitContainer> control's designer calls <xref:System.Windows.Forms.Design.ControlDesigner.EnableDesignMode%2A> for each panel, which allows other components to be dropped on them.</span></span> <span data-ttu-id="7f2d2-165">Mais, dans l’ordre pour le contenu de <xref:System.Windows.Forms.SplitContainer.Panel1%2A> et <xref:System.Windows.Forms.SplitContainer.Panel2%2A> doit être enregistré, le <xref:System.Windows.Forms.SplitContainer> contrôle lui-même doit exposer les panneaux en tant que propriétés publiques.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-165">But, in order for the contents of <xref:System.Windows.Forms.SplitContainer.Panel1%2A> and <xref:System.Windows.Forms.SplitContainer.Panel2%2A> to be saved, the <xref:System.Windows.Forms.SplitContainer> control itself must expose the panels as public properties.</span></span>  
  
 <span data-ttu-id="7f2d2-166">Les noms de contrôle doivent être uniques au sein d’un concepteur de contrôles, mais ils ne sont pas nécessairement être unique parmi les enfants d’autres concepteurs de contrôles.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-166">Control names must be unique within a control designer, but they are not required to be unique with respect to the children of other control designers.</span></span>  
  
 <span data-ttu-id="7f2d2-167">Pour prendre en charge cette fonctionnalité, l’infrastructure d’hébergement doit exposer la <xref:System.ComponentModel.INestedContainer> classe en tant que service sur le site.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-167">To support this feature, the hosting infrastructure must expose the <xref:System.ComponentModel.INestedContainer> class as a service through the site.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7f2d2-168">
            <paramref name="child" /> ou <paramref name="name" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-168">
              <paramref name="child" /> or <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EnableDragDrop">
      <MemberSignature Language="C#" Value="protected void EnableDragDrop (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnableDragDrop(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.EnableDragDrop(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnableDragDrop (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnableDragDrop(bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7f2d2-169">
            <see langword="true" /> pour activer la prise en charge de la fonctionnalité glisser-déplacer pour le contrôle ; <see langword="false" /> si le contrôle ne doit pas prendre en charge la fonctionnalité glisser-déplacer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-169">
              <see langword="true" /> to enable drag-and-drop support for the control; <see langword="false" /> if the control should not have drag-and-drop support.</span>
          </span>
          <span data-ttu-id="7f2d2-170">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-170">The default is <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-171">Active ou désactive la prise en charge de la fonctionnalité glisser-déplacer pour le contrôle en cours de création.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-171">Enables or disables drag-and-drop support for the control being designed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d2-172">La valeur par défaut `false` Spécifie qu’un contrôle ne peut pas avoir d’enfants déplacés au moment du design.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-172">The default value of `false` specifies that a control cannot have children dragged onto it at design time.</span></span> <span data-ttu-id="7f2d2-173">Pour permettre à un contrôle vers le parent d’autres contrôles au moment du design, associez-le à un concepteur qui dérive de <xref:System.Windows.Forms.Design.ParentControlDesigner>.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-173">To allow a control to parent other controls at design time, associate it with a designer that derives from <xref:System.Windows.Forms.Design.ParentControlDesigner>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDragRect">
      <MemberSignature Language="C#" Value="protected virtual bool EnableDragRect { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDragRect" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.EnableDragRect" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property EnableDragRect As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool EnableDragRect { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7f2d2-174">Obtient une valeur indiquant si des rectangles de déplacement peuvent être dessinés sur ce composant de concepteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-174">Gets a value indicating whether drag rectangles can be drawn on this designer component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7f2d2-175">
            <see langword="true" /> si des rectangles de déplacement peuvent être dessinés sur le composant de concepteur ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-175">
              <see langword="true" /> if drag rectangles can be drawn; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetControlGlyph">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Forms.Design.Behavior.ControlBodyGlyph GetControlGlyph (System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Forms.Design.Behavior.ControlBodyGlyph GetControlGlyph(valuetype System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.GetControlGlyph(System.Windows.Forms.Design.Behavior.GlyphSelectionType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetControlGlyph (selectionType As GlyphSelectionType) As ControlBodyGlyph" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Forms::Design::Behavior::ControlBodyGlyph ^ GetControlGlyph(System::Windows::Forms::Design::Behavior::GlyphSelectionType selectionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.Behavior.ControlBodyGlyph</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectionType" Type="System.Windows.Forms.Design.Behavior.GlyphSelectionType" />
      </Parameters>
      <Docs>
        <param name="selectionType">
          <span data-ttu-id="7f2d2-176">Valeur <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> qui spécifie l'état de sélection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-176">A <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> value that specifies the selection state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-177">Retourne un <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> représentant les limites de ce contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-177">Returns a <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> representing the bounds of this control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f2d2-178">
            <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> représentant les limites de ce contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-178">A <see cref="T:System.Windows.Forms.Design.Behavior.ControlBodyGlyph" /> representing the bounds of this control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetGlyphs">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Design.Behavior.GlyphCollection GetGlyphs (System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.Design.Behavior.GlyphCollection GetGlyphs(valuetype System.Windows.Forms.Design.Behavior.GlyphSelectionType selectionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.GetGlyphs(System.Windows.Forms.Design.Behavior.GlyphSelectionType)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlyphs (selectionType As GlyphSelectionType) As GlyphCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::Design::Behavior::GlyphCollection ^ GetGlyphs(System::Windows::Forms::Design::Behavior::GlyphSelectionType selectionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.Behavior.GlyphCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="selectionType" Type="System.Windows.Forms.Design.Behavior.GlyphSelectionType" />
      </Parameters>
      <Docs>
        <param name="selectionType">
          <span data-ttu-id="7f2d2-179">Valeur <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> qui spécifie l'état de sélection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-179">A <see cref="T:System.Windows.Forms.Design.Behavior.GlyphSelectionType" /> value that specifies the selection state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-180">Obtient une collection d'objets <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> qui représentent les bordures de sélection et les poignées de manipulation d'un contrôle standard.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-180">Gets a collection of <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects representing the selection borders and grab handles for a standard control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f2d2-181">Collection d'objets <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-181">A collection of <see cref="T:System.Windows.Forms.Design.Behavior.Glyph" /> objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d2-182">Notez que selon `selectionType`, le <xref:System.Windows.Forms.Design.Behavior.Glyph> les objets retournés représentent un des États de sélection suivants :</span><span class="sxs-lookup"><span data-stu-id="7f2d2-182">Note that based on `selectionType`, the <xref:System.Windows.Forms.Design.Behavior.Glyph> objects returned will represent one of these selection states:</span></span>  
  
-   <span data-ttu-id="7f2d2-183">Une bordure de sélection complètement redimensionnable avec poignées de manipulation ;</span><span class="sxs-lookup"><span data-stu-id="7f2d2-183">A fully resizable selection border with grab handles;</span></span>  
  
-   <span data-ttu-id="7f2d2-184">Une bordure de sélection verrouillée ;</span><span class="sxs-lookup"><span data-stu-id="7f2d2-184">A locked selection border;</span></span>  
  
-   <span data-ttu-id="7f2d2-185">Une seule sélection 'hidden' <xref:System.Windows.Forms.Design.Behavior.Glyph>.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-185">A single 'hidden' selection <xref:System.Windows.Forms.Design.Behavior.Glyph>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHitTest">
      <MemberSignature Language="C#" Value="protected virtual bool GetHitTest (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool GetHitTest(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.GetHitTest(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool GetHitTest(System::Drawing::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">
          <span data-ttu-id="7f2d2-186">
            <see cref="T:System.Drawing.Point" /> qui indique l'emplacement où un clic de souris a été effectué, en coordonnées d'écran.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-186">A <see cref="T:System.Drawing.Point" /> indicating the position at which the mouse was clicked, in screen coordinates.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-187">Indique si le contrôle doit gérer un clic de souris à un emplacement spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-187">Indicates whether a mouse click at the specified point should be handled by the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f2d2-188">
            <see langword="true" /> si le contrôle doit gérer un clic à un emplacement spécifié ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-188">
              <see langword="true" /> if a click at the specified point is to be handled by the control; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d2-189">Le <xref:System.Windows.Forms.Design.ControlDesigner.GetHitTest%2A> méthode détermine si un clic au point spécifié doit être passé au contrôle, tandis que le contrôle est en mode design.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-189">The <xref:System.Windows.Forms.Design.ControlDesigner.GetHitTest%2A> method determines whether a click at the specified point should be passed to the control, while the control is in design mode.</span></span> <span data-ttu-id="7f2d2-190">Vous pouvez substituer et implémenter cette méthode pour permettre le contrôle de recevoir les clics dans l’environnement au moment du design.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-190">You can override and implement this method to enable your control to receive clicks in the design-time environment.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7f2d2-191">Vous pouvez passer un point en coordonnées d’écran à la <xref:System.Windows.Forms.Control.PointToClient%2A> méthode de la <xref:System.Windows.Forms.Control> classe pour obtenir les coordonnées du point par rapport à l’angle supérieur gauche du contrôle.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-191">You can pass a point in screen coordinates to the <xref:System.Windows.Forms.Control.PointToClient%2A> method of the <xref:System.Windows.Forms.Control> class to obtain the coordinates of the point relative to the upper-left corner of the control.</span></span>  
  
 <span data-ttu-id="7f2d2-192">Le <xref:System.Windows.Forms.Design.ControlDesigner.GetHitTest%2A> méthode est appelée en réponse au message WM_NCHITTEST, elle est appelée à chaque déplacement de la souris.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-192">The <xref:System.Windows.Forms.Design.ControlDesigner.GetHitTest%2A> method is called in response to the WM_NCHITTEST message, so it is called on each mouse move.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HookChildControls">
      <MemberSignature Language="C#" Value="protected void HookChildControls (System.Windows.Forms.Control firstChild);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void HookChildControls(class System.Windows.Forms.Control firstChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.HookChildControls(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub HookChildControls (firstChild As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void HookChildControls(System::Windows::Forms::Control ^ firstChild);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstChild" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="firstChild">
          <span data-ttu-id="7f2d2-193">Premier <see cref="T:System.Windows.Forms.Control" /> enfant à traiter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-193">The first child <see cref="T:System.Windows.Forms.Control" /> to process.</span>
          </span>
          <span data-ttu-id="7f2d2-194">Cette méthode peut s'appeler elle-même de manière récursive pour les enfants du contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-194">This method may recursively call itself for children of the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-195">Achemine les messages à partir des contrôles enfants du contrôle spécifié vers le concepteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-195">Routes messages from the child controls of the specified control to the designer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceAttribute">
      <MemberSignature Language="C#" Value="protected override System.ComponentModel.InheritanceAttribute InheritanceAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.InheritanceAttribute InheritanceAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.InheritanceAttribute" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property InheritanceAttribute As InheritanceAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::InheritanceAttribute ^ InheritanceAttribute { System::ComponentModel::InheritanceAttribute ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.InheritanceAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7f2d2-196">Obtient le <see cref="T:System.ComponentModel.InheritanceAttribute" /> du concepteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-196">Gets the <see cref="T:System.ComponentModel.InheritanceAttribute" /> of the designer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7f2d2-197">
            <see cref="F:System.ComponentModel.InheritanceAttribute.Inherited" /> si le concepteur est un concepteur racine ; sinon, la valeur de la propriété <see cref="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" /> du concepteur parent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-197">
              <see cref="F:System.ComponentModel.InheritanceAttribute.Inherited" /> if the designer is a root designer; otherwise, the value of the parent designer's <see cref="P:System.ComponentModel.Design.ComponentDesigner.InheritanceAttribute" /> property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">
          <span data-ttu-id="7f2d2-198">
            <see cref="T:System.ComponentModel.IComponent" /> à associer au concepteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-198">The <see cref="T:System.ComponentModel.IComponent" /> to associate the designer with.</span>
          </span>
          <span data-ttu-id="7f2d2-199">Ce composant doit toujours être une instance de <see cref="T:System.Windows.Forms.Control" />, ou en dériver.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-199">This component must always be an instance of, or derive from, <see cref="T:System.Windows.Forms.Control" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-200">Initialise le concepteur avec le composant spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-200">Initializes the designer with the specified component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d2-201">Cette méthode est appelée par l’hôte du concepteur pour initialiser le concepteur.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-201">This method is called by the designer host to initialize the designer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="InitializeExistingComponent">
      <MemberSignature Language="C#" Value="public override void InitializeExistingComponent (System.Collections.IDictionary defaultValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeExistingComponent(class System.Collections.IDictionary defaultValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.InitializeExistingComponent(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeExistingComponent (defaultValues As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeExistingComponent(System::Collections::IDictionary ^ defaultValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="defaultValues">
          <span data-ttu-id="7f2d2-202">Dictionnaire de noms/valeurs de valeurs par défaut à appliquer aux propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-202">A name/value dictionary of default values to apply to properties.</span>
          </span>
          <span data-ttu-id="7f2d2-203">Peut être <see langword="null" /> si aucune valeur par défaut n'est spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-203">May be <see langword="null" /> if no default values are specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-204">Réinitialise un composant existant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-204">Re-initializes an existing component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d2-205">La <xref:System.Windows.Forms.Design.ControlDesigner> classe substitue cette méthode pour gérer les cas après déplacement.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-205">The <xref:System.Windows.Forms.Design.ControlDesigner> class overrides this method to handle after-drop cases.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.InitializeExistingComponent(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeNewComponent">
      <MemberSignature Language="C#" Value="public override void InitializeNewComponent (System.Collections.IDictionary defaultValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeNewComponent(class System.Collections.IDictionary defaultValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.InitializeNewComponent(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeNewComponent (defaultValues As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeNewComponent(System::Collections::IDictionary ^ defaultValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="defaultValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="defaultValues">
          <span data-ttu-id="7f2d2-206">Dictionnaire de noms/valeurs de valeurs par défaut à appliquer aux propriétés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-206">A name/value dictionary of default values to apply to properties.</span>
          </span>
          <span data-ttu-id="7f2d2-207">Peut être <see langword="null" /> si aucune valeur par défaut n'est spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-207">May be <see langword="null" /> if no default values are specified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-208">Initialise un composant nouvellement créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-208">Initializes a newly created component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d2-209">La <xref:System.Windows.Forms.Design.ControlDesigner> classe substitue cette méthode.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-209">The <xref:System.Windows.Forms.Design.ControlDesigner> class overrides this method.</span></span> <span data-ttu-id="7f2d2-210">Il regardera au niveau de la propriété par défaut pour le contrôle et, si elle est de type `string`, elle définit la valeur de cette propriété pour le nom du composant.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-210">It will look at the default property for the control and, if it is of type `string`, it will set this property's value to the name of the component.</span></span> <span data-ttu-id="7f2d2-211">Il procède uniquement si le concepteur a été configuré avec cette option dans le service d’options.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-211">It only does this if the designer has been configured with this option in the options service.</span></span> <span data-ttu-id="7f2d2-212">Cette méthode est également connecte le contrôle à son parent et positionne.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-212">This method also connects the control to its parent and positions it.</span></span> <span data-ttu-id="7f2d2-213">Si vous substituez cette méthode, vous devez toujours appeler base.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-213">If you override this method, you should always call base.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.InitializeNewComponent(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="InternalControlDesigner">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Design.ControlDesigner InternalControlDesigner (int internalControlIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.Design.ControlDesigner InternalControlDesigner(int32 internalControlIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.InternalControlDesigner(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function InternalControlDesigner (internalControlIndex As Integer) As ControlDesigner" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::Design::ControlDesigner ^ InternalControlDesigner(int internalControlIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.ControlDesigner</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="internalControlIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="internalControlIndex">
          <span data-ttu-id="7f2d2-214">Index spécifié pour sélectionner le Concepteur de contrôles internes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-214">A specified index to select the internal control designer.</span>
          </span>
          <span data-ttu-id="7f2d2-215">Cet index est en base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-215">This index is zero-based.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-216">Retourne le Concepteur de contrôles internes avec l'index spécifié dans <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-216">Returns the internal control designer with the specified index in the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f2d2-217">
            <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> à l'index spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-217">A <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> at the specified index.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d2-218">Un contrôle interne est un contrôle qui n’est pas le <xref:System.ComponentModel.IContainer.Components%2A> collection de la <xref:System.ComponentModel.Design.IDesignerHost.Container%2A>.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-218">An internal control is a control that is not in the <xref:System.ComponentModel.IContainer.Components%2A> collection of the <xref:System.ComponentModel.Design.IDesignerHost.Container%2A>.</span></span> <span data-ttu-id="7f2d2-219"><xref:System.Windows.Forms.SplitterPanel> est un exemple de ce genre de contrôle.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-219"><xref:System.Windows.Forms.SplitterPanel> is an example of one such control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvalidPoint">
      <MemberSignature Language="C#" Value="protected static readonly System.Drawing.Point InvalidPoint;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly valuetype System.Drawing.Point InvalidPoint" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.Design.ControlDesigner.InvalidPoint" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly InvalidPoint As Point " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::Drawing::Point InvalidPoint;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7f2d2-220">Définit un objet <see cref="T:System.Drawing.Point" /> local qui représente les valeurs d'un objet <see cref="T:System.Drawing.Point" /> non valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-220">Defines a local <see cref="T:System.Drawing.Point" /> that represents the values of an invalid <see cref="T:System.Drawing.Point" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d2-221"><xref:System.Windows.Forms.Design.ControlDesigner.InvalidPoint> a un <xref:System.Drawing.Point.X%2A> et <xref:System.Drawing.Point.Y%2A> propriété définie sur la valeur minimale pour le type de données integer.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-221"><xref:System.Windows.Forms.Design.ControlDesigner.InvalidPoint> has an <xref:System.Drawing.Point.X%2A> and <xref:System.Drawing.Point.Y%2A> property set to the minimum value for the integer data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NumberOfInternalControlDesigners">
      <MemberSignature Language="C#" Value="public virtual int NumberOfInternalControlDesigners ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 NumberOfInternalControlDesigners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.NumberOfInternalControlDesigners" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function NumberOfInternalControlDesigners () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int NumberOfInternalControlDesigners();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7f2d2-222">Retourne le nombre de Concepteurs de contrôles internes dans <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-222">Returns the number of internal control designers in the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f2d2-223">Nombre de Concepteurs de contrôles internes dans <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-223">The number of internal control designers in the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d2-224">Un contrôle interne est un contrôle qui n’est pas le <xref:System.ComponentModel.IContainer.Components%2A> collection de la <xref:System.ComponentModel.Design.IDesignerHost.Container%2A>.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-224">An internal control is a control that is not in the <xref:System.ComponentModel.IContainer.Components%2A> collection of the <xref:System.ComponentModel.Design.IDesignerHost.Container%2A>.</span></span> <span data-ttu-id="7f2d2-225"><xref:System.Windows.Forms.SplitterPanel> est un exemple de ce genre de contrôle.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-225"><xref:System.Windows.Forms.SplitterPanel> is an example of one such control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenu">
      <MemberSignature Language="C#" Value="protected virtual void OnContextMenu (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextMenu(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnContextMenu(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextMenu (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextMenu(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="7f2d2-226">Coordonnée x à laquelle le menu contextuel doit être affiché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-226">The x coordinate at which to display the context menu.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="7f2d2-227">Coordonnée y à laquelle le menu contextuel doit être affiché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-227">The y coordinate at which to display the context menu.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-228">Affiche le menu contextuel et fournit une possibilité de traitement supplémentaire lorsque le menu contextuel est sur le point d'être affiché.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-228">Shows the context menu and provides an opportunity to perform additional processing when the context menu is about to be displayed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateHandle">
      <MemberSignature Language="C#" Value="protected virtual void OnCreateHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCreateHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnCreateHandle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCreateHandle ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCreateHandle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7f2d2-229">Fournit une possibilité de traitement supplémentaire immédiatement après la création du handle du contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-229">Provides an opportunity to perform additional processing immediately after the control handle has been created.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnDragComplete (System.Windows.Forms.DragEventArgs de);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragComplete(class System.Windows.Forms.DragEventArgs de) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnDragComplete(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragComplete (de As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragComplete(System::Windows::Forms::DragEventArgs ^ de);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="de" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="de">
          <span data-ttu-id="7f2d2-230">
            <see cref="T:System.Windows.Forms.DragEventArgs" /> qui fournit des données pour l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-230">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-231">Reçoit un appel pour nettoyer une opération glisser-déplacer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-231">Receives a call to clean up a drag-and-drop operation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragDrop">
      <MemberSignature Language="C#" Value="protected virtual void OnDragDrop (System.Windows.Forms.DragEventArgs de);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragDrop(class System.Windows.Forms.DragEventArgs de) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnDragDrop(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragDrop (de As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragDrop(System::Windows::Forms::DragEventArgs ^ de);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="de" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="de">
          <span data-ttu-id="7f2d2-232">
            <see cref="T:System.Windows.Forms.DragEventArgs" /> qui fournit des données pour l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-232">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-233">Reçoit un appel lorsqu'un objet glissé est déplacé sur la vue de Concepteur de contrôles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-233">Receives a call when a drag-and-drop object is dropped onto the control designer view.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnDragEnter (System.Windows.Forms.DragEventArgs de);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragEnter(class System.Windows.Forms.DragEventArgs de) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnDragEnter(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragEnter (de As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragEnter(System::Windows::Forms::DragEventArgs ^ de);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="de" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="de">
          <span data-ttu-id="7f2d2-234">
            <see cref="T:System.Windows.Forms.DragEventArgs" /> qui fournit des données pour l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-234">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-235">Reçoit un appel lorsqu'une opération glisser-déplacer entre dans la vue de Concepteur de contrôles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-235">Receives a call when a drag-and-drop operation enters the control designer view.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnDragLeave (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragLeave(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnDragLeave(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragLeave (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragLeave(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7f2d2-236">
            <see cref="T:System.EventArgs" /> qui fournit des données pour l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-236">An <see cref="T:System.EventArgs" /> that provides data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-237">Reçoit un appel lorsqu'une opération glisser-déplacer quitte la vue de Concepteur de contrôles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-237">Receives a call when a drag-and-drop operation leaves the control designer view.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected virtual void OnDragOver (System.Windows.Forms.DragEventArgs de);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDragOver(class System.Windows.Forms.DragEventArgs de) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnDragOver(System.Windows.Forms.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDragOver (de As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDragOver(System::Windows::Forms::DragEventArgs ^ de);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="de" Type="System.Windows.Forms.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="de">
          <span data-ttu-id="7f2d2-238">
            <see cref="T:System.Windows.Forms.DragEventArgs" /> qui fournit des données pour l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-238">A <see cref="T:System.Windows.Forms.DragEventArgs" /> that provides data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-239">Reçoit un appel lorsqu'un objet glissé est déplacé au-dessus de la vue de Concepteur de contrôles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-239">Receives a call when a drag-and-drop object is dragged over the control designer view.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected virtual void OnGiveFeedback (System.Windows.Forms.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnGiveFeedback(class System.Windows.Forms.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnGiveFeedback(System::Windows::Forms::GiveFeedbackEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="7f2d2-240">
            <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> qui fournit des données pour l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-240">A <see cref="T:System.Windows.Forms.GiveFeedbackEventArgs" /> that provides data for the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-241">Reçoit un appel durant une opération glisser-déplacer pour fournir des indications visuelles en fonction de la position du curseur de la souris tandis que l'opération glisser est en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-241">Receives a call when a drag-and-drop operation is in progress to provide visual cues based on the location of the mouse while a drag operation is in progress.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d2-242">L’hôte de concepteur appelle cette méthode lorsqu’un événement de glissement OLE se produit.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-242">The designer host calls this method when an OLE drag event occurs.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragBegin">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDragBegin (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDragBegin(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragBegin(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDragBegin (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDragBegin(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="7f2d2-243">Coordonnée x, en coordonnées d'écran, du pointeur de la souris.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-243">The x position of the mouse in screen coordinates.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="7f2d2-244">Coordonnée y, en coordonnées d'écran, du pointeur de la souris.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-244">The y position of the mouse in screen coordinates.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-245">Reçoit un appel lorsque le bouton gauche de la souris est maintenu enfoncé au-dessus du composant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-245">Receives a call in response to the left mouse button being pressed and held while over the component.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d2-246">Cette méthode est appelée au début d’une opération de glisser-déplacer.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-246">This method is called at the start of a drag-and-drop operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7f2d2-247">Vous pouvez passer un point en coordonnées d’écran à la <xref:System.Windows.Forms.Control.PointToClient%2A> méthode de la <xref:System.Windows.Forms.Control> classe pour obtenir les coordonnées du point par rapport à l’angle supérieur gauche du contrôle.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-247">You can pass a point in screen coordinates to the <xref:System.Windows.Forms.Control.PointToClient%2A> method of the <xref:System.Windows.Forms.Control> class to obtain the coordinates of the point relative to the upper-left corner of the control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragEnd">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDragEnd (bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDragEnd(bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragEnd(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDragEnd (cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDragEnd(bool cancel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancel">
          <span data-ttu-id="7f2d2-248">
            <see langword="true" /> pour annuler l'opération glisser ; <see langword="false" /> pour la valider.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-248">
              <see langword="true" /> to cancel the drag; <see langword="false" /> to commit it.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-249">Reçoit un appel à la fin d'une opération glisser-déplacer pour terminer ou annuler l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-249">Receives a call at the end of a drag-and-drop operation to complete or cancel the operation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDragMove">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseDragMove (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseDragMove(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseDragMove(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseDragMove (x As Integer, y As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseDragMove(int x, int y);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">
          <span data-ttu-id="7f2d2-250">Coordonnée x, en coordonnées d'écran, du pointeur de la souris.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-250">The x position of the mouse in screen coordinates.</span>
          </span>
        </param>
        <param name="y">
          <span data-ttu-id="7f2d2-251">Coordonnée y, en coordonnées d'écran, du pointeur de la souris.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-251">The y position of the mouse in screen coordinates.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-252">Reçoit un appel pour chaque mouvement de la souris pendant une opération glisser-déplacer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-252">Receives a call for each movement of the mouse during a drag-and-drop operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="7f2d2-253">Vous pouvez passer un point en coordonnées d’écran à la <xref:System.Windows.Forms.Control.PointToClient%2A> méthode de la <xref:System.Windows.Forms.Control> classe pour obtenir les coordonnées du point par rapport à l’angle supérieur gauche du contrôle.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-253">You can pass a point in screen coordinates to the <xref:System.Windows.Forms.Control.PointToClient%2A> method of the <xref:System.Windows.Forms.Control> class to obtain the coordinates of the point relative to the upper-left corner of the control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseEnter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseEnter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseEnter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseEnter ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseEnter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7f2d2-254">Reçoit un appel lorsque la souris entre initialement dans le contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-254">Receives a call when the mouse first enters the control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseHover">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseHover ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseHover() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseHover" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseHover ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseHover();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7f2d2-255">Reçoit un appel après que la souris pointe sur le contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-255">Receives a call after the mouse hovers over the control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected virtual void OnMouseLeave ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnMouseLeave() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnMouseLeave" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnMouseLeave ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnMouseLeave();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7f2d2-256">Reçoit un appel lorsque la souris entre initialement dans le contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-256">Receives a call when the mouse first enters the control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaintAdornments">
      <MemberSignature Language="C#" Value="protected virtual void OnPaintAdornments (System.Windows.Forms.PaintEventArgs pe);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaintAdornments(class System.Windows.Forms.PaintEventArgs pe) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnPaintAdornments(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaintAdornments (pe As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaintAdornments(System::Windows::Forms::PaintEventArgs ^ pe);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pe" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="pe">
          <span data-ttu-id="7f2d2-257">
            <see cref="T:System.Windows.Forms.PaintEventArgs" /> que le concepteur peut utiliser pour dessiner sur le contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-257">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> the designer can use to draw on the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-258">Reçoit un appel lorsque le contrôle que le concepteur manage a peint sa surface de sorte que le concepteur puisse peindre d'autres motifs par-dessus le contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-258">Receives a call when the control that the designer is managing has painted its surface so the designer can paint any additional adornments on top of the control.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSetComponentDefaults">
      <MemberSignature Language="C#" Value="public override void OnSetComponentDefaults ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnSetComponentDefaults() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnSetComponentDefaults" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnSetComponentDefaults ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnSetComponentDefaults();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This method has been deprecated. Use InitializeNewComponent instead.  http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7f2d2-259">Appelée lorsque le concepteur est initialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-259">Called when the designer is intialized.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSetCursor">
      <MemberSignature Language="C#" Value="protected virtual void OnSetCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSetCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.OnSetCursor" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSetCursor ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSetCursor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7f2d2-260">Reçoit un appel chaque fois que le curseur doit être défini.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-260">Receives a call each time the cursor needs to be set.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d2-261">Cette méthode gère la redirection et la gestion de l’événement de curseur de jeu.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-261">This method handles redirection and handling of the set cursor event.</span></span> <span data-ttu-id="7f2d2-262">Si le service de boîte à outils contient un outil sélectionné, cette méthode permettra au service de boîte à outils définir le curseur.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-262">If the toolbox service has a tool selected, this method will allow the toolbox service to set the cursor.</span></span> <span data-ttu-id="7f2d2-263">Si la sélection du service de l’interface utilisateur de sélection est verrouillée, ou si aucune propriété d’emplacement est sur le contrôle, le pointeur par défaut est défini.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-263">If the selection UI service has a locked selection, or if there is no location property on the control, the default arrow cursor will be set.</span></span> <span data-ttu-id="7f2d2-264">Si un utilisateur fait glisser un composant, définira le curseur en croix.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-264">If a user is dragging a component, the crosshair cursor will be set.</span></span> <span data-ttu-id="7f2d2-265">Dans le cas contraire, un curseur flèche à quatre pointes est activé pour indiquer que le composant peut être un clic sur et déplacé.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-265">Otherwise, a four headed arrow cursor will be set to indicate that the component can be clicked and moved.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentComponent">
      <MemberSignature Language="C#" Value="protected override System.ComponentModel.IComponent ParentComponent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.IComponent ParentComponent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.ParentComponent" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ParentComponent As IComponent" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::ComponentModel::IComponent ^ ParentComponent { System::ComponentModel::IComponent ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.IComponent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7f2d2-266">Obtient le composant parent de <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-266">Gets the parent component for the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7f2d2-267">Composant parent de <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> ; sinon, <see langword="null" /> s'il n'y a aucun composant parent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-267">The parent component for the <see cref="T:System.Windows.Forms.Design.ControlDesigner" />; otherwise, <see langword="null" /> if there is no parent component.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d2-268">L’implémentation par défaut vérifie simplement si le composant en cours de conception est un contrôle et s’il s’agit, <xref:System.Windows.Forms.Design.ControlDesigner.ParentComponent%2A> retourne son parent.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-268">The default implementation simply checks to see if the component being designed is a control and if it is, <xref:System.Windows.Forms.Design.ControlDesigner.ParentComponent%2A> returns its parent.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParticipatesWithSnapLines">
      <MemberSignature Language="C#" Value="public virtual bool ParticipatesWithSnapLines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ParticipatesWithSnapLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.ParticipatesWithSnapLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ParticipatesWithSnapLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ParticipatesWithSnapLines { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7f2d2-269">Obtient une valeur indiquant si le <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> doit autoriser l'alignement sur les lignes d'alignement (SnapLines) pendant une opération glisser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-269">Gets a value indicating whether the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> will allow snapline alignment during a drag operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7f2d2-270">
            <see langword="true" /> si <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> doit autoriser l'alignement sur les lignes d'alignement (SnapLines) pendant une opération glisser lorsque le contrôle de glissement principal se trouve sur ce concepteur ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-270">
              <see langword="true" /> if the <see cref="T:System.Windows.Forms.Design.ControlDesigner" /> will allow snapline alignment during a drag operation when the primary drag control is over this designer; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="7f2d2-271">L'implémentation par défaut retourne toujours <see langword="true" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="7f2d2-271">The default implementation always returns <see langword="true" />.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected override void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">
          <span data-ttu-id="7f2d2-272">
            <see cref="T:System.Collections.IDictionary" /> contenant les propriétés de la classe de composant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-272">An <see cref="T:System.Collections.IDictionary" /> containing the properties for the class of the component.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-273">Ajuste le jeu de propriétés exposées par le composant à l'aide de <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-273">Adjusts the set of properties the component exposes through a <see cref="T:System.ComponentModel.TypeDescriptor" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d2-274">Cela <xref:System.ComponentModel.Design.IDesignerFilter> substitution de méthode d’interface ajoute un ensemble de propriétés de composant de ce concepteur au moment du design.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-274">This <xref:System.ComponentModel.Design.IDesignerFilter> interface method override adds a set of properties to this designer's component at design time.</span></span> <span data-ttu-id="7f2d2-275">Cette méthode ajoute les propriétés navigables suivantes : `Visible`, `Enabled`, `ContextMenu`, `AllowDrop`, `Location`, `Name`, `Controls`, et `Locked`.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-275">This method adds the following browsable properties: `Visible`, `Enabled`, `ContextMenu`, `AllowDrop`, `Location`, `Name`, `Controls`, and `Locked`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesignerFilter" />
      </Docs>
    </Member>
    <Member MemberName="SelectionRules">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.Design.SelectionRules SelectionRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Design.SelectionRules SelectionRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.SelectionRules" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectionRules As SelectionRules" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::Design::SelectionRules SelectionRules { System::Windows::Forms::Design::SelectionRules get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Design.SelectionRules</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7f2d2-276">Obtient les règles de sélection qui indiquent les possibilités de mouvement d'un composant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-276">Gets the selection rules that indicate the movement capabilities of a component.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7f2d2-277">Combinaison d'opérations de bits de valeurs <see cref="T:System.Windows.Forms.Design.SelectionRules" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-277">A bitwise combination of <see cref="T:System.Windows.Forms.Design.SelectionRules" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d2-278">Si aucun concepteur ne fournit des règles pour un composant, le composant n’obtiendra pas tous les services de l’interface utilisateur.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-278">If no designer provides rules for a component, the component will not get any UI services.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Design.SelectionRules" />
      </Docs>
    </Member>
    <Member MemberName="SnapLines">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IList SnapLines { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IList SnapLines" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Design.ControlDesigner.SnapLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SnapLines As IList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IList ^ SnapLines { System::Collections::IList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7f2d2-279">Obtient une liste d'objets <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> qui représentent des points d'alignement significatifs pour ce contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-279">Gets a list of <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> objects representing significant alignment points for this control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7f2d2-280">Liste d'objets <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> qui représentent des points d'alignement significatifs pour ce contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-280">A list of <see cref="T:System.Windows.Forms.Design.Behavior.SnapLine" /> objects representing significant alignment points for this control.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d2-281">Vous pouvez utiliser le proposé <xref:System.Windows.Forms.Design.Behavior.SnapLine> objets pour aider à positionner le contrôle sur une aire de conception.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-281">You can use the offered <xref:System.Windows.Forms.Design.Behavior.SnapLine> objects to assist in positioning the control on a design surface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnhookChildControls">
      <MemberSignature Language="C#" Value="protected void UnhookChildControls (System.Windows.Forms.Control firstChild);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void UnhookChildControls(class System.Windows.Forms.Control firstChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.UnhookChildControls(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub UnhookChildControls (firstChild As Control)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void UnhookChildControls(System::Windows::Forms::Control ^ firstChild);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="firstChild" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="firstChild">
          <span data-ttu-id="7f2d2-282">Premier <see cref="T:System.Windows.Forms.Control" /> enfant à traiter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-282">The first child <see cref="T:System.Windows.Forms.Control" /> to process.</span>
          </span>
          <span data-ttu-id="7f2d2-283">Cette méthode peut s'appeler elle-même de manière récursive pour les enfants du contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-283">This method may recursively call itself for children of the control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-284">Achemine les messages pour les enfants du contrôle spécifié vers chaque contrôle plutôt que vers un concepteur parent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-284">Routes messages for the children of the specified control to each control rather than to a parent designer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected virtual void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Design.ControlDesigner.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WndProc(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="7f2d2-285">
            <see cref="T:System.Windows.Forms.Message" /> à traiter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-285">The <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2d2-286">Traite les messages Windows et les achemine éventuellement vers le contrôle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2d2-286">Processes Windows messages and optionally routes them to the control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2d2-287">Cette méthode est appelée pour chaque message que habituellement reçu le contrôle.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-287">This method is called for each message the control would usually receive.</span></span> <span data-ttu-id="7f2d2-288">Cela permet au Concepteur de prétraiter les messages avant de les acheminer éventuellement vers le contrôle.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-288">This allows the designer to preprocess messages before optionally routing them to the control.</span></span>  
  
 <span data-ttu-id="7f2d2-289">Pour envoyer le message du contrôle <xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=nameWithType> (méthode), appel <xref:System.Windows.Forms.Design.ControlDesigner.WndProc%2A> sur le concepteur du contrôle.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-289">To send the message to the control’s <xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=nameWithType> method, call <xref:System.Windows.Forms.Design.ControlDesigner.WndProc%2A> on the control's designer.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7f2d2-290">Le Concepteur de filtre de messages, certains messages ne seront pas envoyés au contrôle.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-290">The designer filters messages, so some messages will not be sent to the control.</span></span> <span data-ttu-id="7f2d2-291">Par exemple, les messages de la souris sont interceptés par le concepteur.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-291">For example, mouse messages are intercepted by the designer.</span></span> <span data-ttu-id="7f2d2-292">Si ce n’est pas le comportement souhaité, appelez <xref:System.Windows.Forms.Design.ControlDesigner.DefWndProc%2A> à la place.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-292">If this is not the behavior you want, call <xref:System.Windows.Forms.Design.ControlDesigner.DefWndProc%2A> instead.</span></span>  
  
 <span data-ttu-id="7f2d2-293">Passer `m` en tant que paramètre.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-293">Pass `m` as a parameter.</span></span> <span data-ttu-id="7f2d2-294">Si vous le souhaitez, vous pouvez modifier ou créer un nouveau <xref:System.Windows.Forms.Message?displayProperty=nameWithType> à passer à la méthode du contrôle.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-294">Optionally, you can alter or create a new <xref:System.Windows.Forms.Message?displayProperty=nameWithType> to pass to the control's method.</span></span>  
  
 <span data-ttu-id="7f2d2-295">Le tableau suivant illustre le flux de messages.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-295">The following table shows the flow of messages.</span></span>  
  
|<span data-ttu-id="7f2d2-296">Sans un concepteur</span><span class="sxs-lookup"><span data-stu-id="7f2d2-296">Without a designer</span></span>|<span data-ttu-id="7f2d2-297">Avec un concepteur</span><span class="sxs-lookup"><span data-stu-id="7f2d2-297">With a designer</span></span>|  
|------------------------|---------------------|  
|<span data-ttu-id="7f2d2-298">USER32</span><span class="sxs-lookup"><span data-stu-id="7f2d2-298">USER32</span></span><br /><br /> <xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=nameWithType><br /><br /> <xref:System.Windows.Forms.Control.DefWndProc%2A?displayProperty=nameWithType><br /><br /> <span data-ttu-id="7f2d2-299">USER32</span><span class="sxs-lookup"><span data-stu-id="7f2d2-299">USER32</span></span>|<span data-ttu-id="7f2d2-300">USER32</span><span class="sxs-lookup"><span data-stu-id="7f2d2-300">USER32</span></span><br /><br /> <span data-ttu-id="7f2d2-301">`Control.Designer.` <xref:System.Windows.Forms.Design.ControlDesigner.WndProc%2A></span><span class="sxs-lookup"><span data-stu-id="7f2d2-301">`Control.Designer.` <xref:System.Windows.Forms.Design.ControlDesigner.WndProc%2A></span></span><br /><br /> <xref:System.Windows.Forms.Design.ControlDesigner.DefWndProc%2A><br /><br /> <xref:System.Windows.Forms.Control.WndProc%2A?displayProperty=nameWithType><br /><br /> <xref:System.Windows.Forms.Control.DefWndProc%2A?displayProperty=nameWithType><br /><br /> <span data-ttu-id="7f2d2-302">USER32</span><span class="sxs-lookup"><span data-stu-id="7f2d2-302">USER32</span></span>|  
  
 <span data-ttu-id="7f2d2-303">Le concepteur intercepte des messages en remplaçant le <xref:System.Windows.Forms.Control.WindowTarget%2A?displayProperty=nameWithType> propriété sur le contrôle.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-303">The designer intercepts messages by replacing the <xref:System.Windows.Forms.Control.WindowTarget%2A?displayProperty=nameWithType> property on the control.</span></span> <span data-ttu-id="7f2d2-304">En règle générale, <xref:System.Windows.Forms.Control.WindowTarget%2A> pointe vers le <xref:System.Windows.Forms.NativeWindow> contenus dans le contrôle.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-304">Usually, <xref:System.Windows.Forms.Control.WindowTarget%2A> points to the <xref:System.Windows.Forms.NativeWindow> contained within the control.</span></span> <span data-ttu-id="7f2d2-305">Au moment du design, le concepteur remplace ce nom par sa propre cible de fenêtre et met en cache la valeur d’origine.</span><span class="sxs-lookup"><span data-stu-id="7f2d2-305">During design time, the designer replaces this with its own window target, and caches the original value.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Design.ControlDesigner.DefWndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>