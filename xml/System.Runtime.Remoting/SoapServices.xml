<Type Name="SoapServices" FullName="System.Runtime.Remoting.SoapServices">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bdb11358afe1c6469f61683e16348f99d976133e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30490573" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SoapServices" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SoapServices extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.SoapServices" />
  <TypeSignature Language="VB.NET" Value="Public Class SoapServices" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapServices" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fournit plusieurs méthodes pour l'utilisation et la publication d'objets distants au format SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette classe effectue une demande de liaison. Une exception de sécurité est levée si l’appelant immédiat n’a pas d’autorisation d’infrastructure. Consultez [les demandes de liaison](~/docs/framework/misc/link-demands.md) pour plus d’informations.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser les membres de la <xref:System.Runtime.Remoting.SoapServices> classe pour effectuer une conversion entre un <xref:System.Type> objet et un type XML.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#100](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#100)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#100](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#100)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />; Valeur d’autorisation : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
  </Docs>
  <Members>
    <Member MemberName="CodeXmlNamespaceForClrTypeNamespace">
      <MemberSignature Language="C#" Value="public static string CodeXmlNamespaceForClrTypeNamespace (string typeNamespace, string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string CodeXmlNamespaceForClrTypeNamespace(string typeNamespace, string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.CodeXmlNamespaceForClrTypeNamespace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CodeXmlNamespaceForClrTypeNamespace (typeNamespace As String, assemblyName As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ CodeXmlNamespaceForClrTypeNamespace(System::String ^ typeNamespace, System::String ^ assemblyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeNamespace" Type="System.String" />
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeNamespace">Espace de noms à encoder.</param>
        <param name="assemblyName">Nom de l'assembly à encoder.</param>
        <summary>Retourne le nom d'espace de noms de type Common Language Runtime à partir des noms d'espaces de noms et d'assemblys fournis.</summary>
        <returns>Nom d'espace de noms de type Common Language Runtime à partir des noms d'espaces de noms et d'assemblys fournis.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode actuelle est utilisée par le .NET Framework et l’outil SoapSuds pour créer un nom d’espace de noms XML pour un type d’objet du common language runtime.  
  
 Pour plus d’informations sur SoapSuds, consultez [Soapsuds Tool (Soapsuds.exe)](http://msdn.microsoft.com/library/40f6f8c8-b80c-4e9f-a920-31bcd0cf45c5).  
  
   
  
## Examples  
 L'exemple de code suivant montre comment utiliser cette méthode. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Runtime.Remoting.SoapServices> classe.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#101](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#101)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#101](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#101)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Les paramètres <paramref name="assemblyName" /> et <paramref name="typeNamespace" /> sont tous les deux <see langword="null" /> ou vides.</exception>
        <exception cref="T:System.Security.SecurityException">L'appelant immédiat n'a pas d'autorisation d'accès à l'infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="DecodeXmlNamespaceForClrTypeNamespace">
      <MemberSignature Language="C#" Value="public static bool DecodeXmlNamespaceForClrTypeNamespace (string inNamespace, out string typeNamespace, out string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool DecodeXmlNamespaceForClrTypeNamespace(string inNamespace, [out] string&amp; typeNamespace, [out] string&amp; assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.DecodeXmlNamespaceForClrTypeNamespace(System.String,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DecodeXmlNamespaceForClrTypeNamespace (inNamespace As String, ByRef typeNamespace As String, ByRef assemblyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool DecodeXmlNamespaceForClrTypeNamespace(System::String ^ inNamespace, [Runtime::InteropServices::Out] System::String ^ % typeNamespace, [Runtime::InteropServices::Out] System::String ^ % assemblyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inNamespace" Type="System.String" />
        <Parameter Name="typeNamespace" Type="System.String&amp;" RefType="out" />
        <Parameter Name="assemblyName" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="inNamespace">Espace de noms du Common Language Runtime.</param>
        <param name="typeNamespace">Lorsque cette méthode est retournée, contient un <see cref="T:System.String" /> contenant le nom de l'espace de noms décodé. Ce paramètre est passé sans être initialisé.</param>
        <param name="assemblyName">Lorsque cette méthode est retournée, contient un <see cref="T:System.String" /> comportant le nom d'assembly décodé. Ce paramètre est passé sans être initialisé.</param>
        <summary>Décode les noms d'espaces de noms et d'assemblys XML à partir de l'espace de noms Common Language Runtime fourni.</summary>
        <returns>
          <see langword="true" /> si les noms de l'espace de noms et de l'assembly ont été correctement décodés ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le .NET Framework est l’analyse d’un flux XML, il doit savoir comment convertir le code XML lu à partir du flux dans les types common language runtime. Les informations qui spécifient comment le .NET Framework doit générer un flux XML est stocké dans les attributs personnalisés qui sont trouvent dans l’analyse du <xref:System.Runtime.Remoting.Metadata> espace de noms. Il existe deux façons de spécifier ces informations dans un fichier de configuration : soit en spécifiant explicitement les mappages, soit en spécifiant les types d’objets pour le préchargement. La méthode actuelle prend en charge la récupération de ces mappages.  
  
   
  
## Examples  
 L'exemple de code suivant montre comment utiliser cette méthode. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Runtime.Remoting.SoapServices> classe.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#102](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#102)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#102](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#102)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="inNamespace" /> a la valeur <see langword="null" /> ou est vide.</exception>
        <exception cref="T:System.Security.SecurityException">L'appelant immédiat n'a pas d'autorisation d'accès à l'infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetInteropFieldTypeAndNameFromXmlAttribute">
      <MemberSignature Language="C#" Value="public static void GetInteropFieldTypeAndNameFromXmlAttribute (Type containingType, string xmlAttribute, string xmlNamespace, out Type type, out string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetInteropFieldTypeAndNameFromXmlAttribute(class System.Type containingType, string xmlAttribute, string xmlNamespace, [out] class System.Type&amp; type, [out] string&amp; name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlAttribute(System.Type,System.String,System.String,System.Type@,System.String@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GetInteropFieldTypeAndNameFromXmlAttribute(Type ^ containingType, System::String ^ xmlAttribute, System::String ^ xmlNamespace, [Runtime::InteropServices::Out] Type ^ % type, [Runtime::InteropServices::Out] System::String ^ % name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingType" Type="System.Type" />
        <Parameter Name="xmlAttribute" Type="System.String" />
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="type" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="name" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="containingType">
          <see cref="T:System.Type" /> de l'objet contenant le champ.</param>
        <param name="xmlAttribute">Nom d'attribut XML du type de champ.</param>
        <param name="xmlNamespace">Espace de noms XML du type de champ.</param>
        <param name="type">Lorsque cette méthode est retournée, contient un <see cref="T:System.Type" /> du champ. Ce paramètre est passé sans être initialisé.</param>
        <param name="name">Lorsque cette méthode est retournée, contient un <see cref="T:System.String" /> comportant le nom du champ. Ce paramètre est passé sans être initialisé.</param>
        <summary>Récupère le type de champ à partir du nom d'attribut et de l'espace de noms XML ainsi que du <see cref="T:System.Type" /> de l'objet contenant.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Étant donné le type de l’objet conteneur et l’attribut XML et l’espace de noms XML lu par le .NET Framework, la méthode en cours retourne le nom de champ réel du common language runtime et le type du champ. Le .NET Framework utilise ensuite ces informations pour remplir ce champ avec les données lues dans le flux XML.  
  
   
  
## Examples  
 L'exemple de code suivant montre comment utiliser cette méthode. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Runtime.Remoting.SoapServices> classe.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#150](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#150)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#150](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#150)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L'appelant immédiat n'a pas d'autorisation d'accès à l'infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetInteropFieldTypeAndNameFromXmlElement">
      <MemberSignature Language="C#" Value="public static void GetInteropFieldTypeAndNameFromXmlElement (Type containingType, string xmlElement, string xmlNamespace, out Type type, out string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void GetInteropFieldTypeAndNameFromXmlElement(class System.Type containingType, string xmlElement, string xmlNamespace, [out] class System.Type&amp; type, [out] string&amp; name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement(System.Type,System.String,System.String,System.Type@,System.String@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void GetInteropFieldTypeAndNameFromXmlElement(Type ^ containingType, System::String ^ xmlElement, System::String ^ xmlNamespace, [Runtime::InteropServices::Out] Type ^ % type, [Runtime::InteropServices::Out] System::String ^ % name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingType" Type="System.Type" />
        <Parameter Name="xmlElement" Type="System.String" />
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="type" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="name" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="containingType">
          <see cref="T:System.Type" /> de l'objet contenant le champ.</param>
        <param name="xmlElement">Nom d'élément XML du champ.</param>
        <param name="xmlNamespace">Espace de noms XML du type de champ.</param>
        <param name="type">Lorsque cette méthode est retournée, contient un <see cref="T:System.Type" /> du champ. Ce paramètre est passé sans être initialisé.</param>
        <param name="name">Lorsque cette méthode est retournée, contient un <see cref="T:System.String" /> comportant le nom du champ. Ce paramètre est passé sans être initialisé.</param>
        <summary>Récupère le <see cref="T:System.Type" /> et le nom d'un champ à partir du nom d'élément et de l'espace de noms XML ainsi que du type conteneur fournis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Étant donné le type de l’objet conteneur et l’élément XML et l’espace de noms XML lu par le .NET Framework, cette méthode retourne le nom de champ réel du common language runtime et le type du champ. Le .NET Framework utilise ensuite ces informations pour remplir ce champ avec les données lues dans le flux XML.  
  
   
  
## Examples  
 L'exemple de code suivant montre comment utiliser cette méthode. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Runtime.Remoting.SoapServices> classe.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#150](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#150)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#150](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#150)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L'appelant immédiat n'a pas d'autorisation d'accès à l'infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetInteropTypeFromXmlElement">
      <MemberSignature Language="C#" Value="public static Type GetInteropTypeFromXmlElement (string xmlElement, string xmlNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetInteropTypeFromXmlElement(string xmlElement, string xmlNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlElement(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInteropTypeFromXmlElement (xmlElement As String, xmlNamespace As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetInteropTypeFromXmlElement(System::String ^ xmlElement, System::String ^ xmlNamespace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlElement" Type="System.String" />
        <Parameter Name="xmlNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlElement">Nom d'élément XML du type d'objet inconnu.</param>
        <param name="xmlNamespace">Espace de noms XML du type d'objet inconnu.</param>
        <summary>Récupère le <see cref="T:System.Type" /> à utiliser durant la désérialisation d'un type d'objet non reconnu à l'aide du nom d'élément et de l'espace de noms XML donnés.</summary>
        <returns>
          <see cref="T:System.Type" /> d'objet associé aux noms d'éléments et d'espaces de noms XML spécifiés.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode en cours retourne des valeurs définies par le biais <xref:System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement%2A> et <xref:System.Runtime.Remoting.SoapServices.PreLoad%2A>.  
  
   
  
## Examples  
 L'exemple de code suivant montre comment utiliser cette méthode. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Runtime.Remoting.SoapServices> classe.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#160](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#160)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#160](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#160)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L'appelant immédiat n'a pas d'autorisation d'accès à l'infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetInteropTypeFromXmlType">
      <MemberSignature Language="C#" Value="public static Type GetInteropTypeFromXmlType (string xmlType, string xmlTypeNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetInteropTypeFromXmlType(string xmlType, string xmlTypeNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.GetInteropTypeFromXmlType(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetInteropTypeFromXmlType (xmlType As String, xmlTypeNamespace As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetInteropTypeFromXmlType(System::String ^ xmlType, System::String ^ xmlTypeNamespace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlType" Type="System.String" />
        <Parameter Name="xmlTypeNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlType">Type XML du type d'objet inconnu.</param>
        <param name="xmlTypeNamespace">Espace de noms du type XML du type d'objet inconnu.</param>
        <summary>Récupère le <see cref="T:System.Type" /> d'objet à utiliser durant la désérialisation d'un type d'objet non reconnu à l'aide du nom de type et de l'espace de noms XML donnés.</summary>
        <returns>
          <see cref="T:System.Type" /> d'objet associé aux noms de types et espace de noms XML spécifiés.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode en cours retourne des valeurs définies par le biais <xref:System.Runtime.Remoting.SoapServices.RegisterInteropXmlType%2A> et <xref:System.Runtime.Remoting.SoapServices.PreLoad%2A>.  
  
   
  
## Examples  
 L'exemple de code suivant montre comment utiliser cette méthode. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Runtime.Remoting.SoapServices> classe.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#160](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#160)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#160](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#160)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L'appelant immédiat n'a pas d'autorisation d'accès à l'infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetSoapActionFromMethodBase">
      <MemberSignature Language="C#" Value="public static string GetSoapActionFromMethodBase (System.Reflection.MethodBase mb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetSoapActionFromMethodBase(class System.Reflection.MethodBase mb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.GetSoapActionFromMethodBase(System.Reflection.MethodBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetSoapActionFromMethodBase (mb As MethodBase) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetSoapActionFromMethodBase(System::Reflection::MethodBase ^ mb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mb" Type="System.Reflection.MethodBase" />
      </Parameters>
      <Docs>
        <param name="mb">
          <see cref="T:System.Reflection.MethodBase" /> contenant la méthode pour laquelle un SOAPAction est demandé.</param>
        <summary>Retourne la valeur SOAPAction associée à la méthode spécifiée dans le <see cref="T:System.Reflection.MethodBase" /> donné.</summary>
        <returns>Valeur SOAPAction associée à la méthode spécifiée dans le <see cref="T:System.Reflection.MethodBase" /> donné.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la donnée <xref:System.Reflection.MethodBase> n’a pas été inscrit avec une valeur SOAPAction, la <xref:System.Runtime.Remoting.SoapServices.GetSoapActionFromMethodBase%2A> méthode retourne la valeur SOAPAction automatiquement mis en cache avec le <xref:System.Reflection.MethodBase>.  
  
   
  
## Examples  
 L'exemple de code suivant montre comment utiliser cette méthode. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Runtime.Remoting.SoapServices> classe.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#140](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#140)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#140](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#140)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L'appelant immédiat n'a pas d'autorisation d'accès à l'infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetTypeAndMethodNameFromSoapAction">
      <MemberSignature Language="C#" Value="public static bool GetTypeAndMethodNameFromSoapAction (string soapAction, out string typeName, out string methodName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetTypeAndMethodNameFromSoapAction(string soapAction, [out] string&amp; typeName, [out] string&amp; methodName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.GetTypeAndMethodNameFromSoapAction(System.String,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTypeAndMethodNameFromSoapAction (soapAction As String, ByRef typeName As String, ByRef methodName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetTypeAndMethodNameFromSoapAction(System::String ^ soapAction, [Runtime::InteropServices::Out] System::String ^ % typeName, [Runtime::InteropServices::Out] System::String ^ % methodName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="soapAction" Type="System.String" />
        <Parameter Name="typeName" Type="System.String&amp;" RefType="out" />
        <Parameter Name="methodName" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="soapAction">SOAPAction de la méthode pour laquelle les noms de types et de méthodes ont été demandés.</param>
        <param name="typeName">Lorsque cette méthode est retournée, contient un <see cref="T:System.String" /> contenant le nom de type de la méthode concernée. Ce paramètre est passé sans être initialisé.</param>
        <param name="methodName">Lorsque cette méthode est retournée, contient un <see cref="T:System.String" /> comportant le nom de la méthode concernée. Ce paramètre est passé sans être initialisé.</param>
        <summary>Détermine le type et le nom de la méthode associée à la valeur SOAPAction spécifiée.</summary>
        <returns>
          <see langword="true" /> si le type et le nom de méthode ont été correctement extraits ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `true` Si les recherches de nom de type et de méthode ont réussi ; dans le cas contraire, `false`.  
  
   
  
## Examples  
 L'exemple de code suivant montre comment utiliser cette méthode. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Runtime.Remoting.SoapServices> classe.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#140](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#140)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#140](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#140)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Runtime.Remoting.RemotingException">La valeur SOAPAction ne comporte pas de guillemets ouvrants et fermants.</exception>
        <exception cref="T:System.Security.SecurityException">L'appelant immédiat n'a pas d'autorisation d'accès à l'infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetXmlElementForInteropType">
      <MemberSignature Language="C#" Value="public static bool GetXmlElementForInteropType (Type type, out string xmlElement, out string xmlNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetXmlElementForInteropType(class System.Type type, [out] string&amp; xmlElement, [out] string&amp; xmlNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.GetXmlElementForInteropType(System.Type,System.String@,System.String@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetXmlElementForInteropType(Type ^ type, [Runtime::InteropServices::Out] System::String ^ % xmlElement, [Runtime::InteropServices::Out] System::String ^ % xmlNamespace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="xmlElement" Type="System.String&amp;" RefType="out" />
        <Parameter Name="xmlNamespace" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Type" /> d'objets pour lequel les noms d'élément et d'espaces de noms XML ont été demandés.</param>
        <param name="xmlElement">Lorsque cette méthode est retournée, contient un <see cref="T:System.String" /> contenant le nom d'élément XML du type d'objet spécifié. Ce paramètre est passé sans être initialisé.</param>
        <param name="xmlNamespace">Lorsque cette méthode est retournée, contient un <see cref="T:System.String" /> contenant le nom d'espace de noms XML du type d'objet spécifié. Ce paramètre est passé sans être initialisé.</param>
        <summary>Retourne des informations sur l'élément XML à utiliser pour la sérialisation du type donné.</summary>
        <returns>
          <see langword="true" /> si les valeurs demandées ont été marquées à l'aide de <see cref="T:System.Runtime.Remoting.Metadata.SoapTypeAttribute" /> ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'exemple de code suivant montre comment utiliser cette méthode. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Runtime.Remoting.SoapServices> classe.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#103](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#103)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#103](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#103)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L'appelant immédiat n'a pas d'autorisation d'accès à l'infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
        <altmember cref="M:System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement(System.Type,System.String,System.String,System.Type@,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="GetXmlNamespaceForMethodCall">
      <MemberSignature Language="C#" Value="public static string GetXmlNamespaceForMethodCall (System.Reflection.MethodBase mb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetXmlNamespaceForMethodCall(class System.Reflection.MethodBase mb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodCall(System.Reflection.MethodBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetXmlNamespaceForMethodCall (mb As MethodBase) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetXmlNamespaceForMethodCall(System::Reflection::MethodBase ^ mb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mb" Type="System.Reflection.MethodBase" />
      </Parameters>
      <Docs>
        <param name="mb">
          <see cref="T:System.Reflection.MethodBase" /> de la méthode pour laquelle l'espace de noms XML a été demandé.</param>
        <summary>Récupère l'espace de noms XML utilisé durant les appels distants à la méthode spécifiée dans le <see cref="T:System.Reflection.MethodBase" /> donné.</summary>
        <returns>Espace de noms XML utilisé durant les appels distants de la méthode spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'exemple de code suivant montre comment utiliser cette méthode. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Runtime.Remoting.SoapServices> classe.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#105](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#105)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#105](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#105)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L'appelant immédiat n'a pas d'autorisation d'accès à l'infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetXmlNamespaceForMethodResponse">
      <MemberSignature Language="C#" Value="public static string GetXmlNamespaceForMethodResponse (System.Reflection.MethodBase mb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetXmlNamespaceForMethodResponse(class System.Reflection.MethodBase mb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.GetXmlNamespaceForMethodResponse(System.Reflection.MethodBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetXmlNamespaceForMethodResponse (mb As MethodBase) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetXmlNamespaceForMethodResponse(System::Reflection::MethodBase ^ mb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mb" Type="System.Reflection.MethodBase" />
      </Parameters>
      <Docs>
        <param name="mb">
          <see cref="T:System.Reflection.MethodBase" /> de la méthode pour laquelle l'espace de noms XML a été demandé.</param>
        <summary>Récupère l'espace de noms XML utilisé durant la génération de réponses à l'appel distant à la méthode spécifiée dans le <see cref="T:System.Reflection.MethodBase" /> donné.</summary>
        <returns>Espace de noms XML utilisé durant la génération de réponses à l'appel distant à une méthode.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'exemple de code suivant montre comment utiliser cette méthode. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Runtime.Remoting.SoapServices> classe.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#105](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#105)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#105](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#105)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L'appelant immédiat n'a pas d'autorisation d'accès à l'infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetXmlTypeForInteropType">
      <MemberSignature Language="C#" Value="public static bool GetXmlTypeForInteropType (Type type, out string xmlType, out string xmlTypeNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetXmlTypeForInteropType(class System.Type type, [out] string&amp; xmlType, [out] string&amp; xmlTypeNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.GetXmlTypeForInteropType(System.Type,System.String@,System.String@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetXmlTypeForInteropType(Type ^ type, [Runtime::InteropServices::Out] System::String ^ % xmlType, [Runtime::InteropServices::Out] System::String ^ % xmlTypeNamespace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="xmlType" Type="System.String&amp;" RefType="out" />
        <Parameter Name="xmlTypeNamespace" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Type" /> d'objets pour lequel les noms d'élément et d'espaces de noms XML ont été demandés.</param>
        <param name="xmlType">Type XML du <see cref="T:System.Type" /> d'objets spécifié.</param>
        <param name="xmlTypeNamespace">Espace de noms du type XML du <see cref="T:System.Type" /> d'objets spécifié.</param>
        <summary>Retourne des informations de type XML à utiliser pour la sérialisation du <see cref="T:System.Type" /> donné.</summary>
        <returns>
          <see langword="true" /> si les valeurs demandées ont été marquées à l'aide de <see cref="T:System.Runtime.Remoting.Metadata.SoapTypeAttribute" /> ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'exemple de code suivant montre comment utiliser cette méthode. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Runtime.Remoting.SoapServices> classe.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#104](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#104)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#104](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#104)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L'appelant immédiat n'a pas d'autorisation d'accès à l'infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
        <altmember cref="M:System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement(System.Type,System.String,System.String,System.Type@,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="IsClrTypeNamespace">
      <MemberSignature Language="C#" Value="public static bool IsClrTypeNamespace (string namespaceString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsClrTypeNamespace(string namespaceString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.IsClrTypeNamespace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsClrTypeNamespace (namespaceString As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsClrTypeNamespace(System::String ^ namespaceString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="namespaceString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="namespaceString">Espace de noms à vérifier dans le Common Language Runtime.</param>
        <summary>Retourne une valeur Boolean qui indique si l'espace de noms spécifié est un espace de noms natif du Common Language Runtime.</summary>
        <returns>
          <see langword="true" /> si l'espace de noms donné est un espace de noms natif du Common Language Runtime ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode actuelle est utilisée par l’outil SoapSuds pour déterminer si un espace de noms XML représente un type de common language runtime ou un type à partir d’un système d’autre que le common language runtime.  
  
 Pour plus d’informations sur SoapSuds, consultez [Soapsuds Tool (Soapsuds.exe)](http://msdn.microsoft.com/library/40f6f8c8-b80c-4e9f-a920-31bcd0cf45c5).  
  
   
  
## Examples  
 L'exemple de code suivant montre comment utiliser cette méthode. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Runtime.Remoting.SoapServices> classe.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#106](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#106)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#106](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#106)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L'appelant immédiat n'a pas d'autorisation d'accès à l'infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="IsSoapActionValidForMethodBase">
      <MemberSignature Language="C#" Value="public static bool IsSoapActionValidForMethodBase (string soapAction, System.Reflection.MethodBase mb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsSoapActionValidForMethodBase(string soapAction, class System.Reflection.MethodBase mb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.IsSoapActionValidForMethodBase(System.String,System.Reflection.MethodBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsSoapActionValidForMethodBase (soapAction As String, mb As MethodBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsSoapActionValidForMethodBase(System::String ^ soapAction, System::Reflection::MethodBase ^ mb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="soapAction" Type="System.String" />
        <Parameter Name="mb" Type="System.Reflection.MethodBase" />
      </Parameters>
      <Docs>
        <param name="soapAction">SOAPAction à vérifier pour le <see cref="T:System.Reflection.MethodBase" /> donné.</param>
        <param name="mb">
          <see cref="T:System.Reflection.MethodBase" /> pour lequel le SOAPAction spécifié est vérifié.</param>
        <summary>Détermine si le SOAPAction spécifié est valide pour un <see cref="T:System.Reflection.MethodBase" /> donné.</summary>
        <returns>
          <see langword="true" /> si le SOAPAction spécifié est valide pour un <see cref="T:System.Reflection.MethodBase" /> donné ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'exemple de code suivant montre comment utiliser cette méthode. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Runtime.Remoting.SoapServices> classe.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#140](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#140)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#140](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#140)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L'appelant immédiat n'a pas d'autorisation d'accès à l'infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="PreLoad">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Précharge les types spécifiés en fonction des valeurs définies dans le <see cref="T:System.Runtime.Remoting.Metadata.SoapTypeAttribute" /> appliqué aux types.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PreLoad">
      <MemberSignature Language="C#" Value="public static void PreLoad (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PreLoad(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.PreLoad(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PreLoad(System::Reflection::Assembly ^ assembly);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly">
          <see cref="T:System.Reflection.Assembly" /> pour chaque type pour lequel appeler <see cref="M:System.Runtime.Remoting.SoapServices.PreLoad(System.Type)" />.</param>
        <summary>Précharge chaque <see cref="T:System.Type" /> trouvé dans le <see cref="T:System.Reflection.Assembly" /> spécifié à partir des informations figurant dans le <see cref="T:System.Runtime.Remoting.Metadata.SoapTypeAttribute" /> associé à chaque type.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le .NET Framework est l’analyse d’un flux XML, il doit savoir comment convertir le code XML lu à partir du flux dans les types common language runtime. Les informations qui spécifient comment le .NET Framework doit générer un flux XML est stocké dans les attributs personnalisés qui sont trouvent dans l’analyse du <xref:System.Runtime.Remoting.Metadata> espace de noms. Il existe deux façons de spécifier ces informations dans un fichier de configuration : soit en spécifiant explicitement les mappages, soit en spécifiant les types d’objets pour le préchargement. Les attributs personnalisés sont lus au cours du processus de préchargement et les informations contenues dans les sont mis à disposition l’analyseur SOAP.  
  
   
  
## Examples  
 L'exemple de code suivant montre comment utiliser cette méthode. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Runtime.Remoting.SoapServices> classe.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#120](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#120)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#120](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#120)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L'appelant immédiat n'a pas d'autorisation d'accès à l'infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="PreLoad">
      <MemberSignature Language="C#" Value="public static void PreLoad (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void PreLoad(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.PreLoad(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void PreLoad(Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Type" /> à précharger.</param>
        <summary>Précharge le <see cref="T:System.Type" /> donné en fonction des valeurs définies dans un <see cref="T:System.Runtime.Remoting.Metadata.SoapTypeAttribute" /> sur le type.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le .NET Framework est l’analyse d’un flux XML, il doit savoir comment convertir le code XML lu à partir du flux dans les types common language runtime. Les informations qui spécifient comment le .NET Framework doit générer un flux XML est stocké dans les attributs personnalisés qui sont trouvent dans l’analyse du <xref:System.Runtime.Remoting.Metadata> espace de noms. Il existe deux façons de spécifier ces informations dans un fichier de configuration : soit en spécifiant explicitement les mappages, soit en spécifiant les types d’objets pour le préchargement. Les attributs personnalisés sont lus au cours du processus de préchargement et les informations contenues dans les sont mis à disposition l’analyseur SOAP.  
  
   
  
## Examples  
 L'exemple de code suivant montre comment utiliser cette méthode. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Runtime.Remoting.SoapServices> classe.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#121](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#121)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#121](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#121)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L'appelant immédiat n'a pas d'autorisation d'accès à l'infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="RegisterInteropXmlElement">
      <MemberSignature Language="C#" Value="public static void RegisterInteropXmlElement (string xmlElement, string xmlNamespace, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterInteropXmlElement(string xmlElement, string xmlNamespace, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.RegisterInteropXmlElement(System.String,System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterInteropXmlElement(System::String ^ xmlElement, System::String ^ xmlNamespace, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlElement" Type="System.String" />
        <Parameter Name="xmlNamespace" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="xmlElement">Nom d'élément XML à utiliser durant la désérialisation.</param>
        <param name="xmlNamespace">Espace de noms XML à utiliser durant la désérialisation.</param>
        <param name="type">
          <see cref="T:System.Type" /> du runtime à utiliser durant la désérialisation.</param>
        <summary>Associe le nom d'élément et l'espace de noms XML à un type du runtime à utiliser durant la désérialisation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'exemple de code suivant montre comment utiliser cette méthode. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Runtime.Remoting.SoapServices> classe.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#180](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#180)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#180](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#180)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L'appelant immédiat n'a pas d'autorisation d'accès à l'infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
        <altmember cref="M:System.Runtime.Remoting.SoapServices.GetInteropFieldTypeAndNameFromXmlElement(System.Type,System.String,System.String,System.Type@,System.String@)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterInteropXmlType">
      <MemberSignature Language="C#" Value="public static void RegisterInteropXmlType (string xmlType, string xmlTypeNamespace, Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterInteropXmlType(string xmlType, string xmlTypeNamespace, class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.RegisterInteropXmlType(System.String,System.String,System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterInteropXmlType(System::String ^ xmlType, System::String ^ xmlTypeNamespace, Type ^ type);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlType" Type="System.String" />
        <Parameter Name="xmlTypeNamespace" Type="System.String" />
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="xmlType">Type XML à utiliser durant la désérialisation.</param>
        <param name="xmlTypeNamespace">Espace de noms XML à utiliser durant la désérialisation.</param>
        <param name="type">
          <see cref="T:System.Type" /> du runtime à utiliser durant la désérialisation.</param>
        <summary>Associe le nom de type et l'espace de noms XML donnés au type du runtime à utiliser durant la désérialisation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'exemple de code suivant montre comment utiliser cette méthode. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Runtime.Remoting.SoapServices> classe.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#190](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#190)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#190](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#190)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L'appelant immédiat n'a pas d'autorisation d'accès à l'infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterSoapActionForMethodBase">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Associe une valeur SOAPAction au <see cref="T:System.Reflection.MethodBase" /> fourni.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterSoapActionForMethodBase">
      <MemberSignature Language="C#" Value="public static void RegisterSoapActionForMethodBase (System.Reflection.MethodBase mb);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterSoapActionForMethodBase(class System.Reflection.MethodBase mb) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(System.Reflection.MethodBase)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterSoapActionForMethodBase (mb As MethodBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterSoapActionForMethodBase(System::Reflection::MethodBase ^ mb);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mb" Type="System.Reflection.MethodBase" />
      </Parameters>
      <Docs>
        <param name="mb">
          <see cref="T:System.Reflection.MethodBase" /> de la méthode à associer au SOAPAction mis en cache avec celui-ci.</param>
        <summary>Associe le <see cref="T:System.Reflection.MethodBase" /> spécifié au SOAPAction mis en cache avec celui-ci.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le SOAPAction de la méthode spécifiée est contenu dans le <xref:System.Runtime.Remoting.Metadata.SoapMethodAttribute.SoapAction%2A?displayProperty=nameWithType> propriété, ou est en lecture du câble. La méthode en cours associe le SOAPAction avec le <xref:System.Reflection.MethodBase> pour une utilisation dans les récepteurs de canal.  
  
 Le champ d’en-tête de demande HTTP SOAPAction indique l’objectif de la demande HTTP SOAP. La valeur est un URI identifiant l’objectif. SOAP n’impose aucune restriction sur le format ou la spécificité de l’URI ou qu’il ne peut être résolu. Un client HTTP doit utiliser ce champ d’en-tête lors de l’émission d’une demande HTTP SOAP.  
  
   
  
## Examples  
 L'exemple de code suivant montre comment utiliser cette méthode. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Runtime.Remoting.SoapServices> classe.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#170](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#170)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#170](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#170)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L'appelant immédiat n'a pas d'autorisation d'accès à l'infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="RegisterSoapActionForMethodBase">
      <MemberSignature Language="C#" Value="public static void RegisterSoapActionForMethodBase (System.Reflection.MethodBase mb, string soapAction);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterSoapActionForMethodBase(class System.Reflection.MethodBase mb, string soapAction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.SoapServices.RegisterSoapActionForMethodBase(System.Reflection.MethodBase,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterSoapActionForMethodBase (mb As MethodBase, soapAction As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterSoapActionForMethodBase(System::Reflection::MethodBase ^ mb, System::String ^ soapAction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mb" Type="System.Reflection.MethodBase" />
        <Parameter Name="soapAction" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="mb">
          <see cref="T:System.Reflection.MethodBase" /> à associer au SOAPAction fourni.</param>
        <param name="soapAction">Valeur SOAPAction à associer au <see cref="T:System.Reflection.MethodBase" /> donné.</param>
        <summary>Associe la valeur SOAPAction fournie au <see cref="T:System.Reflection.MethodBase" /> donné à utiliser dans les récepteurs de canaux.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le champ d’en-tête de demande HTTP SOAPAction indique l’objectif de la demande HTTP SOAP. La valeur est un URI identifiant l’objectif. SOAP n’impose aucune restriction sur le format ou la spécificité de l’URI ou qu’il ne peut être résolu. Un client HTTP doit utiliser ce champ d’en-tête lors de l’émission d’une demande HTTP SOAP.  
  
   
  
## Examples  
 L'exemple de code suivant montre comment utiliser cette méthode. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Runtime.Remoting.SoapServices> classe.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#170](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#170)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#170](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#170)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L'appelant immédiat n'a pas d'autorisation d'accès à l'infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="XmlNsForClrType">
      <MemberSignature Language="C#" Value="public static string XmlNsForClrType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string XmlNsForClrType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.SoapServices.XmlNsForClrType" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property XmlNsForClrType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ XmlNsForClrType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le préfixe d'espace de noms XML pour les types du Common Language Runtime.</summary>
        <value>Préfixe d'espace de noms XML pour les types du Common Language Runtime.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Protocoles WSDL et SOAP Encoder classes common language runtime dans les espaces de noms XML. La propriété actuelle spécifie le format pour les espaces de noms XML. Tous les espaces de noms XML pour une classe du common language runtime commencent par le <xref:System.String> renvoyé par la propriété actuelle.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser cette propriété. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Runtime.Remoting.SoapServices> classe.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#130](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#130)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#130](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#130)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L'appelant immédiat n'a pas d'autorisation d'accès à l'infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="XmlNsForClrTypeWithAssembly">
      <MemberSignature Language="C#" Value="public static string XmlNsForClrTypeWithAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string XmlNsForClrTypeWithAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property XmlNsForClrTypeWithAssembly As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ XmlNsForClrTypeWithAssembly { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le préfixe d'espace de noms XML par défaut à utiliser pour l'encodage XML d'une classe du Common Language Runtime qui a un assembly mais pas d'espace de noms natif.</summary>
        <value>Préfixe d'espace de noms XML par défaut à utiliser pour l'encodage XML d'une classe du Common Language Runtime qui a un assembly mais pas d'espace de noms natif.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Protocoles WSDL et SOAP Encoder classes common language runtime dans les espaces de noms XML. La propriété actuelle spécifie le format pour les espaces de noms XML. Si une classe du common language runtime a un assembly, mais aucun espace de noms, la propriété en cours retourne l’espace de noms XML par défaut est utilisé.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser cette propriété. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Runtime.Remoting.SoapServices> classe.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#131](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#131)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#131](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#131)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L'appelant immédiat n'a pas d'autorisation d'accès à l'infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="XmlNsForClrTypeWithNs">
      <MemberSignature Language="C#" Value="public static string XmlNsForClrTypeWithNs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string XmlNsForClrTypeWithNs" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNs" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property XmlNsForClrTypeWithNs As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ XmlNsForClrTypeWithNs { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le préfixe d'espace de noms XML à utiliser pour l'encodage XML d'une classe du Common Language Runtime qui fait partie du fichier mscorlib.dll.</summary>
        <value>Préfixe d'espace de noms XML à utiliser pour l'encodage XML d'une classe du Common Language Runtime qui fait partie du fichier mscorlib.dll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Protocoles WSDL et SOAP Encoder classes common language runtime dans les espaces de noms XML. La propriété actuelle spécifie le format pour les espaces de noms XML. Si une classe du common language runtime fait partie de l’assembly mscorlib, l’espace de noms XML retourné par la propriété en cours est utilisé.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser cette propriété. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Runtime.Remoting.SoapServices> classe.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#132](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#132)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#132](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#132)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L'appelant immédiat n'a pas d'autorisation d'accès à l'infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
    <Member MemberName="XmlNsForClrTypeWithNsAndAssembly">
      <MemberSignature Language="C#" Value="public static string XmlNsForClrTypeWithNsAndAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string XmlNsForClrTypeWithNsAndAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.SoapServices.XmlNsForClrTypeWithNsAndAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property XmlNsForClrTypeWithNsAndAssembly As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ XmlNsForClrTypeWithNsAndAssembly { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le préfixe d'espace de noms XML par défaut à utiliser pour l'encodage XML d'une classe du Common Language Runtime qui a à la fois un espace de noms du Common Language Runtime et un assembly.</summary>
        <value>Préfixe d'espace de noms XML par défaut à utiliser pour l'encodage XML d'une classe du Common Language Runtime qui a à la fois un espace de noms du Common Language Runtime et un assembly.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Protocoles WSDL et SOAP Encoder classes common language runtime dans les espaces de noms XML. La propriété actuelle spécifie le format pour les espaces de noms XML. Si une classe du common language runtime a un assembly et un espace de noms du common language runtime, la propriété en cours retourne l’espace de noms XML par défaut est utilisé.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser cette propriété. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Runtime.Remoting.SoapServices> classe.  
  
 [!code-cpp[System.Runtime.Remoting.SoapServices#133](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CPP/demo.cpp#133)]
 [!code-csharp[System.Runtime.Remoting.SoapServices#133](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.SoapServices/CS/demo.cs#133)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">L'appelant immédiat n'a pas d'autorisation d'accès à l'infrastructure.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour opérer avec le code d’infrastructure. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>