<Type Name="UCOMIRunningObjectTable" FullName="System.Runtime.InteropServices.UCOMIRunningObjectTable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d8ed3a5de90daf7c175e751fe223639ddf4c33ba" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48662564" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface UCOMIRunningObjectTable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract UCOMIRunningObjectTable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.UCOMIRunningObjectTable" />
  <TypeSignature Language="VB.NET" Value="Public Interface UCOMIRunningObjectTable" />
  <TypeSignature Language="C++ CLI" Value="public interface class UCOMIRunningObjectTable" />
  <TypeSignature Language="F#" Value="type UCOMIRunningObjectTable = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Obsolete</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.Guid("00000010-0000-0000-c000-000000000046")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("00000010-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("Use System.Runtime.InteropServices.ComTypes.IRunningObjectTable instead. http://go.microsoft.com/fwlink/?linkid=14202", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Utilisez plutôt <see cref="T:System.Runtime.InteropServices.ComTypes.IRunningObjectTable" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations, consultez la documentation existante pour `IRunningObjectTable` dans le sous-dossier com de MSDN library.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="EnumRunning">
      <MemberSignature Language="C#" Value="public void EnumRunning (out System.Runtime.InteropServices.UCOMIEnumMoniker ppenumMoniker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnumRunning([out] class System.Runtime.InteropServices.UCOMIEnumMoniker&amp; ppenumMoniker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.EnumRunning(System.Runtime.InteropServices.UCOMIEnumMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnumRunning (ByRef ppenumMoniker As UCOMIEnumMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumRunning([Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIEnumMoniker ^ % ppenumMoniker);" />
      <MemberSignature Language="F#" Value="abstract member EnumRunning :  -&gt; unit" Usage="uCOMIRunningObjectTable.EnumRunning ppenumMoniker" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppenumMoniker" Type="System.Runtime.InteropServices.UCOMIEnumMoniker" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppenumMoniker">Lors d'un retour, nouvel énumérateur pour la table ROT (Running Object Table).</param>
        <summary>Énumère les objets actuellement inscrits comme en cours d'exécution.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations, consultez la documentation existante pour `IRunningObjectTable::EnumRunning` dans MSDN library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObject">
      <MemberSignature Language="C#" Value="public void GetObject (System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, out object ppunkObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObject(class System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, [out] object&amp; ppunkObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.GetObject(System.Runtime.InteropServices.UCOMIMoniker,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObject (pmkObjectName As UCOMIMoniker, ByRef ppunkObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetObject(System::Runtime::InteropServices::UCOMIMoniker ^ pmkObjectName, [Runtime::InteropServices::Out] System::Object ^ % ppunkObject);" />
      <MemberSignature Language="F#" Value="abstract member GetObject : System.Runtime.InteropServices.UCOMIMoniker *  -&gt; unit" Usage="uCOMIRunningObjectTable.GetObject (pmkObjectName, ppunkObject)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkObjectName" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="ppunkObject" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pmkObjectName">Référence au moniker à rechercher dans la table ROT (Running Object Table).</param>
        <param name="ppunkObject">Lors d'un retour, contient l'objet en cours d'exécution demandé.</param>
        <summary>Retourne l'objet inscrit si le nom d'objet fourni est inscrit comme en cours d'exécution.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations, consultez la documentation existante pour `IRunningObjectTable::GetObject` dans MSDN library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTimeOfLastChange">
      <MemberSignature Language="C#" Value="public void GetTimeOfLastChange (System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, out System.Runtime.InteropServices.FILETIME pfiletime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTimeOfLastChange(class System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, [out] valuetype System.Runtime.InteropServices.FILETIME&amp; pfiletime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.GetTimeOfLastChange(System.Runtime.InteropServices.UCOMIMoniker,System.Runtime.InteropServices.FILETIME@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTimeOfLastChange (pmkObjectName As UCOMIMoniker, ByRef pfiletime As FILETIME)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTimeOfLastChange(System::Runtime::InteropServices::UCOMIMoniker ^ pmkObjectName, [Runtime::InteropServices::Out] System::Runtime::InteropServices::FILETIME % pfiletime);" />
      <MemberSignature Language="F#" Value="abstract member GetTimeOfLastChange : System.Runtime.InteropServices.UCOMIMoniker *  -&gt; unit" Usage="uCOMIRunningObjectTable.GetTimeOfLastChange (pmkObjectName, pfiletime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkObjectName" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="pfiletime" Type="System.Runtime.InteropServices.FILETIME" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pmkObjectName">Référence au moniker à rechercher dans la table ROT (Running Object Table).</param>
        <param name="pfiletime">Lors d'un retour, contient l'heure de la dernière modification de l'objet.</param>
        <summary>Recherche ce moniker dans la table ROT (Running Object Table) et indique l'heure de modification consignée, le cas échéant.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations, consultez la documentation existante pour `IRunningObjectTable::GetTimeOfLastChange` dans MSDN library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public void IsRunning (System.Runtime.InteropServices.UCOMIMoniker pmkObjectName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IsRunning(class System.Runtime.InteropServices.UCOMIMoniker pmkObjectName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.IsRunning(System.Runtime.InteropServices.UCOMIMoniker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IsRunning (pmkObjectName As UCOMIMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IsRunning(System::Runtime::InteropServices::UCOMIMoniker ^ pmkObjectName);" />
      <MemberSignature Language="F#" Value="abstract member IsRunning : System.Runtime.InteropServices.UCOMIMoniker -&gt; unit" Usage="uCOMIRunningObjectTable.IsRunning pmkObjectName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkObjectName" Type="System.Runtime.InteropServices.UCOMIMoniker" />
      </Parameters>
      <Docs>
        <param name="pmkObjectName">Référence au moniker à rechercher dans la table ROT (Running Object Table).</param>
        <summary>Détermine si le moniker spécifié est inscrit dans la table ROT (Running Object Table) actuellement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations, consultez la documentation existante pour `IRunningObjectTable::IsRunning` dans MSDN library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoteChangeTime">
      <MemberSignature Language="C#" Value="public void NoteChangeTime (int dwRegister, ref System.Runtime.InteropServices.FILETIME pfiletime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void NoteChangeTime(int32 dwRegister, valuetype System.Runtime.InteropServices.FILETIME&amp; pfiletime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.FILETIME@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub NoteChangeTime (dwRegister As Integer, ByRef pfiletime As FILETIME)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void NoteChangeTime(int dwRegister, System::Runtime::InteropServices::FILETIME % pfiletime);" />
      <MemberSignature Language="F#" Value="abstract member NoteChangeTime : int *  -&gt; unit" Usage="uCOMIRunningObjectTable.NoteChangeTime (dwRegister, pfiletime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwRegister" Type="System.Int32" />
        <Parameter Name="pfiletime" Type="System.Runtime.InteropServices.FILETIME" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="dwRegister">Entrée de la table ROT (Running Object Table) correspondant à l'objet modifié.</param>
        <param name="pfiletime">Référence à l'heure de la dernière modification de l'objet.</param>
        <summary>Consigne l'heure à laquelle un objet spécifique a été modifié pour que <see langword="IMoniker::GetTimeOfLastChange" /> indique l'heure de modification appropriée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations, consultez la documentation existante pour `IRunningObjectTable::NoteChangeTime` dans MSDN library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Register">
      <MemberSignature Language="C#" Value="public void Register (int grfFlags, object punkObject, System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, out int pdwRegister);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Register(int32 grfFlags, object punkObject, class System.Runtime.InteropServices.UCOMIMoniker pmkObjectName, [out] int32&amp; pdwRegister) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.Register(System.Int32,System.Object,System.Runtime.InteropServices.UCOMIMoniker,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Register (grfFlags As Integer, punkObject As Object, pmkObjectName As UCOMIMoniker, ByRef pdwRegister As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Register(int grfFlags, System::Object ^ punkObject, System::Runtime::InteropServices::UCOMIMoniker ^ pmkObjectName, [Runtime::InteropServices::Out] int % pdwRegister);" />
      <MemberSignature Language="F#" Value="abstract member Register : int * obj * System.Runtime.InteropServices.UCOMIMoniker *  -&gt; unit" Usage="uCOMIRunningObjectTable.Register (grfFlags, punkObject, pmkObjectName, pdwRegister)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="grfFlags" Type="System.Int32" />
        <Parameter Name="punkObject" Type="System.Object" />
        <Parameter Name="pmkObjectName" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="pdwRegister" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="grfFlags">Spécifie si la référence de la table ROT (Running Object Table) à <c>punkObject</c> est faible ou forte et contrôle l’accès à l’objet via l’entrée correspondante dans la table ROT.</param>
        <param name="punkObject">Référence à l'objet inscrit comme en cours d'exécution.</param>
        <param name="pmkObjectName">Référence au moniker qui identifie <c>punkObject</c>.</param>
        <param name="pdwRegister">Référence à une valeur 32 bits qui peut être utilisée pour identifier cette entrée de la table ROT (Running Object Table) dans des appels ultérieurs à <see cref="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke(System.Int32)" /> ou <see cref="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.NoteChangeTime(System.Int32,System.Runtime.InteropServices.FILETIME@)" />.</param>
        <summary>Inscrit que l'objet fourni est en état d'exécution.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations, consultez la documentation existante pour `IRunningObjectTable::Register` dans MSDN library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Revoke">
      <MemberSignature Language="C#" Value="public void Revoke (int dwRegister);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Revoke(int32 dwRegister) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIRunningObjectTable.Revoke(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Revoke (dwRegister As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Revoke(int dwRegister);" />
      <MemberSignature Language="F#" Value="abstract member Revoke : int -&gt; unit" Usage="uCOMIRunningObjectTable.Revoke dwRegister" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dwRegister" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dwRegister">Entrée à révoquer dans la table ROT (Running Object Table).</param>
        <summary>Annule l'inscription de l'objet spécifié dans la table ROT (Running Object Table).</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations, consultez la documentation existante pour `IRunningObjectTable::Revoke` dans MSDN library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>