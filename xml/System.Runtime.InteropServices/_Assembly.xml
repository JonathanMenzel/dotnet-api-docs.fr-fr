<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="_Assembly.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac539657d58b49ae78bfde43ae0d91e335f0dca15e6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">39657d58b49ae78bfde43ae0d91e335f0dca15e6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Assembly">
          <source>Exposes the public members of the <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> class to unmanaged code.</source>
          <target state="translated">Expose les membres publics de la classe <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> au code non managé.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>This interface is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette interface permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>This interface preserves the vtable order of the <ph id="ph1">&lt;xref:System.Reflection.Assembly?displayProperty=nameWithType&gt;</ph> class members that can be accessed by unmanaged COM objects.</source>
          <target state="translated">Cette interface conserve l’ordre vtable de la <ph id="ph1">&lt;xref:System.Reflection.Assembly?displayProperty=nameWithType&gt;</ph> classe les membres qui sont accessibles par les objets COM non managés.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Assembly.CodeBase">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.CodeBase" /&gt;</ph> property.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la propriété <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.CodeBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.CodeBase">
          <source>The location of the assembly as specified originally.</source>
          <target state="translated">Emplacement de l'assembly tel qu'il a été spécifié à l'origine.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.CodeBase">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.CodeBase">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=nameWithType&gt;</ph> property gets the location of the assembly as specified originally, for example, in an <ph id="ph2">&lt;xref:System.Reflection.AssemblyName&gt;</ph> object.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.CodeBase%2A?displayProperty=nameWithType&gt;</ph> propriété obtient l’emplacement de l’assembly tel que spécifié à l’origine, par exemple, dans un <ph id="ph2">&lt;xref:System.Reflection.AssemblyName&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Assembly">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.CreateInstance" /&gt;</ph> methods.</source>
          <target state="translated">Fournit aux objets COM un accès indépendant à la version aux méthodes <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.CreateInstance" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.CreateInstance%2A&gt;</ph> methods locate a type from this assembly and create an instance of it using the system activator.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.CreateInstance%2A&gt;</ph> méthodes localiser un type à partir de cet assembly et créer une instance d’à l’aide de l’activateur système.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Type.FullName" /&gt;</ph> of the type to locate.</source>
          <target state="translated">Propriété <ph id="ph1">&lt;see cref="P:System.Type.FullName" /&gt;</ph> du type à rechercher.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.CreateInstance(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.CreateInstance(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the type, with culture, arguments, binder, and activation attributes set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>, and <ph id="ph3">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> set to Public or Instance, or <ph id="ph4">&lt;see langword="null" /&gt;</ph> if <ph id="ph5">&lt;paramref name="typeName" /&gt;</ph> is not found.</source>
          <target state="translated">Instance de <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> représentant le type, dont la culture, les arguments, le binder ainsi que les attributs d'activation ont la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>, et <ph id="ph3">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> a la valeur Public ou Instance ou encore <ph id="ph4">&lt;see langword="null" /&gt;</ph> si <ph id="ph5">&lt;paramref name="typeName" /&gt;</ph> est introuvable.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.CreateInstance%2A&gt;</ph> method locates the specified type from this assembly and creates an instance of it using the system activator, using case-sensitive search.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.CreateInstance%2A&gt;</ph> méthode recherche le type spécifié dans cet assembly et crée une instance d’à l’aide de l’activateur système, à l’aide de la recherche respectant la casse.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="P:System.Type.FullName" /&gt;</ph> of the type to locate.</source>
          <target state="translated">Propriété <ph id="ph1">&lt;see cref="P:System.Type.FullName" /&gt;</ph> du type à rechercher.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore the case of the type name; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour ignorer la casse du nom de type ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean)">
          <source>An instance of <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> representing the type, with culture, arguments, binder, and activation attributes set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>, and <ph id="ph3">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> set to Public or Instance, or <ph id="ph4">&lt;see langword="null" /&gt;</ph> if <ph id="ph5">&lt;paramref name="typeName" /&gt;</ph> is not found.</source>
          <target state="translated">Instance de <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> représentant le type, dont la culture, les arguments, le binder ainsi que les attributs d'activation ont la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>, et <ph id="ph3">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> a la valeur Public ou Instance ou encore <ph id="ph4">&lt;see langword="null" /&gt;</ph> si <ph id="ph5">&lt;paramref name="typeName" /&gt;</ph> est introuvable.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.CreateInstance%2A&gt;</ph> method locates the specified type from this assembly and creates an instance of it using the system activator, with optional case-sensitive search.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.CreateInstance%2A&gt;</ph> méthode recherche le type spécifié dans cet assembly et crée une instance d’à l’aide de l’activateur système, avec une recherche facultative respectant la casse.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The <ph id="ph1">&lt;see cref="P:System.Type.FullName" /&gt;</ph> of the type to locate.</source>
          <target state="translated">Propriété <ph id="ph1">&lt;see cref="P:System.Type.FullName" /&gt;</ph> du type à rechercher.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore the case of the type name; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour ignorer la casse du nom de type ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>A bitmask that affects how the search is conducted.</source>
          <target state="translated">Masque de bits qui affecte le mode d'exécution de la recherche.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The value is a combination of bit flags from <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>.</source>
          <target state="translated">La valeur est une combinaison de bits indicateurs de <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <ph id="ph1">&lt;see langword="MemberInfo" /&gt;</ph> objects via reflection.</source>
          <target state="translated">Objet qui active la liaison, la contrainte de types d'arguments, l'appel des membres et la récupération d'objets <ph id="ph1">&lt;see langword="MemberInfo" /&gt;</ph> par le biais de la réflexion.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>binder<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the default binder is used.</source>
          <target state="translated">Si <bpt id="p1">&lt;c&gt;</bpt>binder<ept id="p1">&lt;/c&gt;</ept> a la valeur <ph id="ph1">&lt;see langword="null" /&gt;</ph>, le binder par défaut est utilisé.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An array of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph> containing the arguments to be passed to the constructor.</source>
          <target state="translated">Tableau de type <ph id="ph1">&lt;see langword="Object" /&gt;</ph> contenant les arguments à passer au constructeur.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>This array of arguments must match in number, order, and type the parameters of the constructor to be invoked.</source>
          <target state="translated">Ce tableau d'arguments doit posséder les mêmes nombres, ordre et type que les paramètres du constructeur à appeler.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If the default constructor is desired, <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> must be an empty array or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Si vous souhaitez utiliser le constructeur par défaut, <bpt id="p1">&lt;c&gt;</bpt>args<ept id="p1">&lt;/c&gt;</ept> doit être un tableau vide ou <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An instance of <ph id="ph1">&lt;see langword="CultureInfo" /&gt;</ph> used to govern the coercion of types.</source>
          <target state="translated">Instance de <ph id="ph1">&lt;see langword="CultureInfo" /&gt;</ph> utilisée pour régir la contrainte des types.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>If this is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the <ph id="ph2">&lt;see langword="CultureInfo" /&gt;</ph> for the current thread is used.</source>
          <target state="translated">Si la valeur est <ph id="ph1">&lt;see langword="null" /&gt;</ph>, le <ph id="ph2">&lt;see langword="CultureInfo" /&gt;</ph> du thread actuel est utilisé.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>(This is necessary to convert a <ph id="ph1">&lt;see langword="String" /&gt;</ph> that represents 1000 to a <ph id="ph2">&lt;see langword="Double" /&gt;</ph> value, for example, since 1000 is represented differently by different cultures.)</source>
          <target state="translated">(Par exemple, cela est nécessaire pour convertir un <ph id="ph1">&lt;see langword="String" /&gt;</ph> représentant 1000 en valeur <ph id="ph2">&lt;see langword="Double" /&gt;</ph>, car 1000 est représenté de différentes manières selon la culture.)</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An array of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph> containing one or more activation attributes that can participate in the activation.</source>
          <target state="translated">Tableau de type <ph id="ph1">&lt;see langword="Object" /&gt;</ph> contenant un ou plusieurs attributs d'activation qui peuvent participer à l'activation.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An example of an activation attribute is:</source>
          <target state="translated">Exemple d'attribut d'activation :</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>URLAttribute(<ph id="ph1">http://hostname/appname/objectURI)</ph></source>
          <target state="translated">URLAttribute(<ph id="ph1">http://hostname/appname/objectURI)</ph></target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>An instance of <ph id="ph1">&lt;see langword="Object" /&gt;</ph> representing the type and matching the specified criteria, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if <ph id="ph3">&lt;paramref name="typeName" /&gt;</ph> is not found.</source>
          <target state="translated">Instance de <ph id="ph1">&lt;see langword="Object" /&gt;</ph> représentant le type et correspondant aux critères spécifiés, ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> si <ph id="ph3">&lt;paramref name="typeName" /&gt;</ph> est introuvable.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.CreateInstance(System.String,System.Boolean,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.CreateInstance%2A&gt;</ph> method locates the specified type from this assembly and creates an instance of it using the system activator, with optional case-sensitive search and having the specified culture, arguments, and binding and activation attributes.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.CreateInstance%2A&gt;</ph> méthode recherche le type spécifié dans cet assembly et crée une instance de celui-ci à l’aide de l’activateur système, avec une recherche facultative respectant la casse et dont la culture spécifiée, les arguments et les attributs de liaison et d’activation.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Assembly.EntryPoint">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.EntryPoint" /&gt;</ph> property.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la propriété <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.EntryPoint" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.EntryPoint">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object that represents the entry point of this assembly.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> qui représente le point d'entrée de cet assembly.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.EntryPoint">
          <source>If no entry point is found (for example, the assembly is a DLL), <ph id="ph1">&lt;see langword="null" /&gt;</ph> is returned.</source>
          <target state="translated">Si aucun point d'entrée n'est détecté (par exemple, si l'assembly est une DLL), <ph id="ph1">&lt;see langword="null" /&gt;</ph> est retourné.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.EntryPoint">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.EntryPoint">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.EntryPoint%2A&gt;</ph> property gets the entry point of this assembly.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.EntryPoint%2A&gt;</ph> propriété obtient le point d’entrée de cet assembly.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to compare with the current <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> à comparer avec l'objet <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.Equals(System.Object)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Object.Equals(System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Object.Equals(System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> is equal to the current <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> spécifié est égal au <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph> actuel ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.Equals(System.Object)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> method determines whether the specified <ph id="ph2">&lt;xref:System.Object&gt;</ph> is equal to the current <ph id="ph3">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph> méthode détermine si le texte spécifié <ph id="ph2">&lt;xref:System.Object&gt;</ph> est égal à le <ph id="ph3">&lt;xref:System.Object&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Assembly.EscapedCodeBase">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.EscapedCodeBase" /&gt;</ph> property.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la propriété <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.EscapedCodeBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.EscapedCodeBase">
          <source>A Uniform Resource Identifier (URI) with escape characters.</source>
          <target state="translated">Référence d'URI (Uniform Resource Identifier) avec caractères d'échappement.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.EscapedCodeBase">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.EscapedCodeBase">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.EscapedCodeBase%2A&gt;</ph> property gets the URI, including escape characters, that represents the codebase.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.EscapedCodeBase%2A&gt;</ph> propriété obtient l’URI, y compris les caractères d’échappement, qui représente le code base.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Assembly.Evidence">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.Evidence" /&gt;</ph> property.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la propriété <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.Evidence" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.Evidence">
          <source>An <ph id="ph1">&lt;see cref="T:System.Security.Policy.Evidence" /&gt;</ph> object for this assembly.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Security.Policy.Evidence" /&gt;</ph> pour cet assembly.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.Evidence">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.Evidence">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.Evidence%2A&gt;</ph> property gets the evidence for this assembly.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.Evidence%2A&gt;</ph> propriété obtient la preuve pour cet assembly.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Assembly.FullName">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.FullName" /&gt;</ph> property.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la propriété <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.FullName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.FullName">
          <source>The display name of the assembly.</source>
          <target state="translated">Nom complet de l'assembly.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.FullName">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.FullName">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.FullName%2A&gt;</ph> property gets the display name of the assembly.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.FullName%2A&gt;</ph> propriété obtient le nom complet de l’assembly.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Assembly">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetCustomAttributes" /&gt;</ph> methods.</source>
          <target state="translated">Fournit aux objets COM un accès indépendant à la version aux méthodes <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetCustomAttributes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A&gt;</ph> methods get the custom attributes for this assembly.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A&gt;</ph> méthodes obtiennent les attributs personnalisés pour cet assembly.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Boolean)">
          <source>This argument is ignored for objects of type <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>.</source>
          <target state="translated">Cet argument est ignoré pour les objets de type <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Boolean)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Boolean)">
          <source>An array of type <ph id="ph1">&lt;see langword="Object" /&gt;</ph> containing the custom attributes for this assembly.</source>
          <target state="translated">Tableau de type <ph id="ph1">&lt;see langword="Object" /&gt;</ph> contenant les attributs personnalisés pour cet assembly.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A&gt;</ph> method gets all the custom attributes for this assembly.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A&gt;</ph> méthode obtient tous les attributs personnalisés pour cet assembly.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Type,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> for which the custom attributes are to be returned.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> pour lequel les attributs personnalisés doivent être retournés.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Type,System.Boolean)">
          <source>This argument is ignored for objects of type <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>.</source>
          <target state="translated">Cet argument est ignoré pour les objets de type <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Type,System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetCustomAttributes(System.Type,System.Boolean)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Type,System.Boolean)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> containing the custom attributes for this assembly as specified by <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph>.</source>
          <target state="translated">Tableau de type <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> contenant les attributs personnalisés pour cet assembly, tels qu'ils sont spécifiés par <ph id="ph2">&lt;paramref name="attributeType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Type,System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetCustomAttributes(System.Type,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A&gt;</ph> method gets all the custom attributes for this assembly.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A&gt;</ph> méthode obtient tous les attributs personnalisés pour cet assembly.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetExportedTypes">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetExportedTypes" /&gt;</ph> property.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la propriété <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetExportedTypes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetExportedTypes">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> objects that represent the types defined in this assembly that are visible outside the assembly.</source>
          <target state="translated">Tableau d'objets <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> qui représentent les types définis dans cet assembly qui sont visibles à l'extérieur de l'assembly.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetExportedTypes">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetExportedTypes">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetExportedTypes%2A&gt;</ph> property gets the exported types defined in this assembly that are visible outside the assembly.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetExportedTypes%2A&gt;</ph> propriété obtient les types exportés définis dans cet assembly qui sont visibles en dehors de l’assembly.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetFile(System.String)">
          <source>The name of the specified file.</source>
          <target state="translated">Nom du fichier spécifié.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetFile(System.String)">
          <source>Do not include the path to the file.</source>
          <target state="translated">N’incluez pas le chemin d’accès au fichier.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetFile(System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetFile(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetFile(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetFile(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> for the specified file, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the file is not found.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> du fichier spécifié, ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> si le fichier est introuvable.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetFile(System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetFile(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetFile%2A&gt;</ph> method gets a <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> for the specified file in the file table of the manifest of this assembly.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetFile%2A&gt;</ph> méthode obtient un <ph id="ph2">&lt;xref:System.IO.FileStream&gt;</ph> pour le fichier spécifié dans la table de fichiers du manifeste de cet assembly.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Assembly">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetFiles" /&gt;</ph> methods.</source>
          <target state="translated">Fournit aux objets COM un accès indépendant à la version aux méthodes <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetFiles" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetFiles%2A&gt;</ph> methods get the files in the file table of an assembly manifest.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetFiles%2A&gt;</ph> méthodes obtiennent les fichiers de la table de fichiers d’un manifeste d’assembly.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetFiles">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetFiles" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetFiles" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetFiles">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> objects.</source>
          <target state="translated">Tableau d'objets <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetFiles">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetFiles">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetFiles%2A&gt;</ph> method gets the files in the file table of an assembly manifest.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetFiles%2A&gt;</ph> méthode obtient les fichiers de la table de fichiers d’un manifeste d’assembly.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetFiles(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include resource modules; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour inclure des modules de ressources ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetFiles(System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetFiles(System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetFiles(System.Boolean)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetFiles(System.Boolean)">
          <source>An array of <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph> objects.</source>
          <target state="translated">Tableau d'objets <ph id="ph1">&lt;see cref="T:System.IO.FileStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetFiles(System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetFiles(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetFiles%2A&gt;</ph> method gets the files in the file table of an assembly manifest, specifying whether to include resource modules.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetFiles%2A&gt;</ph> méthode obtient les fichiers de la table de fichiers d’un manifeste d’assembly, en spécifiant s’il faut inclure des modules de ressources.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetHashCode">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Object.GetHashCode" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Object.GetHashCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetHashCode">
          <source>A hash code for the current <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">Code de hachage du <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> actuel.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetHashCode">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetHashCode">
          <source>The <ph id="ph1">&lt;xref:System.Object.GetHashCode%2A&gt;</ph> method serves as a hash function for a particular type.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Object.GetHashCode%2A&gt;</ph> méthode sert de fonction de hachage pour un type particulier.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetHashCode">
          <source><ph id="ph1">&lt;xref:System.Object.GetHashCode%2A&gt;</ph> is suitable for use in hashing algorithms and data structures like a hash table.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.GetHashCode%2A&gt;</ph> peut être utilisée dans des algorithmes de hachage et des structures de données telles qu'une table de hachage.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Assembly">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetLoadedModules" /&gt;</ph> methods.</source>
          <target state="translated">Fournit aux objets COM un accès indépendant à la version aux méthodes <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetLoadedModules" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetLoadedModules%2A&gt;</ph> methods get all the loaded modules that are part of this assembly.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetLoadedModules%2A&gt;</ph> méthodes obtiennent tous les modules chargés qui appartiennent à cet assembly.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetLoadedModules">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetLoadedModules" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetLoadedModules" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetLoadedModules">
          <source>An array of modules.</source>
          <target state="translated">Tableau de modules.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetLoadedModules">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetLoadedModules">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetLoadedModules%2A&gt;</ph> method gets all the loaded modules that are part of this assembly.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetLoadedModules%2A&gt;</ph> méthode obtient tous les modules chargés qui appartiennent à cet assembly.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetLoadedModules(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include resource modules; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour inclure des modules de ressources ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetLoadedModules(System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetLoadedModules(System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetLoadedModules(System.Boolean)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetLoadedModules(System.Boolean)">
          <source>An array of modules.</source>
          <target state="translated">Tableau de modules.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetLoadedModules(System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetLoadedModules(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetLoadedModules%2A&gt;</ph> method gets all the loaded modules that are part of this assembly, specifying whether to include resource modules.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetLoadedModules%2A&gt;</ph> méthode obtient tous les modules chargés qui appartiennent à cet assembly, en spécifiant s’il faut inclure des modules de ressources.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceInfo(System.String)">
          <source>The case-sensitive name of the resource.</source>
          <target state="translated">Nom de la ressource respectant la casse.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceInfo(System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetManifestResourceInfo(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetManifestResourceInfo(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceInfo(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Reflection.ManifestResourceInfo" /&gt;</ph> object populated with information about the resource's topology, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the resource is not found.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Reflection.ManifestResourceInfo" /&gt;</ph> rempli d'informations sur la topologie de la ressource, ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> si la ressource est introuvable.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceInfo(System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceInfo(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetManifestResourceInfo%2A&gt;</ph> method returns information about how the given resource has been persisted.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetManifestResourceInfo%2A&gt;</ph> méthode retourne des informations sur la manière dont la ressource donnée a été persistante.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceNames">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetManifestResourceNames" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetManifestResourceNames" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceNames">
          <source>An array of type <ph id="ph1">&lt;see langword="String" /&gt;</ph> containing the names of all the resources.</source>
          <target state="translated">Un tableau de type <ph id="ph1">&lt;see langword="String" /&gt;</ph> qui contient les noms de toutes les ressources.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceNames">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceNames">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetManifestResourceNames%2A&gt;</ph> method returns the names of all the resources in this assembly.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetManifestResourceNames%2A&gt;</ph> méthode retourne les noms de toutes les ressources de cet assembly.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Assembly">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetManifestResourceStream" /&gt;</ph> methods.</source>
          <target state="translated">Fournit aux objets COM un accès indépendant à la version aux méthodes <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetManifestResourceStream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetManifestResourceStream%2A&gt;</ph> methods load the specified manifest resource from this assembly.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetManifestResourceStream%2A&gt;</ph> méthodes chargent la ressource de manifeste spécifiée à partir de cet assembly.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.String)">
          <source>The case-sensitive name of the manifest resource being requested.</source>
          <target state="translated">Nom de la ressource de manifeste demandée respectant la casse.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> representing this manifest resource.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> représentant cette ressource de manifeste.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetManifestResourceStream%2A&gt;</ph> method loads the specified manifest resource from this assembly.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetManifestResourceStream%2A&gt;</ph> méthode charge de la ressource de manifeste spécifiée à partir de cet assembly.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.Type,System.String)">
          <source>The type whose namespace is used to scope the manifest resource name.</source>
          <target state="translated">Type dont l'espace de noms définit la portée du nom de la ressource de manifeste.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.Type,System.String)">
          <source>The case-sensitive name of the manifest resource being requested.</source>
          <target state="translated">Nom de la ressource de manifeste demandée respectant la casse.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.Type,System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetManifestResourceStream(System.Type,System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.Type,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> representing this manifest resource.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> représentant cette ressource de manifeste.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.Type,System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetManifestResourceStream(System.Type,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetManifestResourceStream%2A&gt;</ph> method loads the specified manifest resource, scoped by the namespace of the specified type, from this assembly.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetManifestResourceStream%2A&gt;</ph> méthode charge de la ressource de manifeste spécifiée, la portée définie par l’espace de noms du type spécifié, à partir de cet assembly.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetModule(System.String)">
          <source>The name of the module being requested.</source>
          <target state="translated">Nom du module demandé.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetModule(System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetModule(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetModule(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetModule(System.String)">
          <source>The module being requested, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> if the module is not found.</source>
          <target state="translated">Module demandé, ou <ph id="ph1">&lt;see langword="null" /&gt;</ph> si le module est introuvable.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetModule(System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetModule(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetModule%2A&gt;</ph> method gets the specified module in this assembly.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetModule%2A&gt;</ph> méthode obtient le module spécifié dans cet assembly.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Assembly">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetModules" /&gt;</ph> methods.</source>
          <target state="translated">Fournit aux objets COM un accès indépendant à la version aux méthodes <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetModules" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetModules%2A&gt;</ph> methods get all the modules that are part of this assembly.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetModules%2A&gt;</ph> méthodes obtiennent tous les modules qui appartiennent à cet assembly.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetModules">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetModules" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetModules" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetModules">
          <source>An array of modules.</source>
          <target state="translated">Tableau de modules.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetModules">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetModules">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetModules%2A&gt;</ph> method gets all the modules that are part of this assembly.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetModules%2A&gt;</ph> méthode obtient tous les modules qui appartiennent à cet assembly.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetModules(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include resource modules; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour inclure des modules de ressources ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetModules(System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetModules(System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetModules(System.Boolean)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetModules(System.Boolean)">
          <source>An array of modules.</source>
          <target state="translated">Tableau de modules.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetModules(System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetModules(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetModules%2A&gt;</ph> method gets all the modules that are part of this assembly, specifying whether to include resource modules.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetModules%2A&gt;</ph> méthode obtient tous les modules qui appartiennent à cet assembly, en spécifiant s’il faut inclure des modules de ressources.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Assembly">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetName" /&gt;</ph> methods.</source>
          <target state="translated">Fournit aux objets COM un accès indépendant à la version aux méthodes <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetName%2A&gt;</ph> methods get an <ph id="ph2">&lt;xref:System.Reflection.AssemblyName&gt;</ph> for this assembly.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetName%2A&gt;</ph> méthodes obtiennent un <ph id="ph2">&lt;xref:System.Reflection.AssemblyName&gt;</ph> pour cet assembly.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetName">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetName" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetName">
          <source>An <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> for this assembly.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> pour cet assembly.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetName">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetName">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetName%2A&gt;</ph> method gets an <ph id="ph2">&lt;xref:System.Reflection.AssemblyName&gt;</ph> for this assembly.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetName%2A&gt;</ph> méthode obtient un <ph id="ph2">&lt;xref:System.Reflection.AssemblyName&gt;</ph> pour cet assembly.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetName(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to set the <ph id="ph2">&lt;see cref="P:System.Reflection.Assembly.CodeBase" /&gt;</ph> to the location of the assembly after it was shadow copied; <ph id="ph3">&lt;see langword="false" /&gt;</ph> to set <ph id="ph4">&lt;see cref="P:System.Reflection.Assembly.CodeBase" /&gt;</ph> to the original location.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour affecter à <ph id="ph2">&lt;see cref="P:System.Reflection.Assembly.CodeBase" /&gt;</ph> l'emplacement de l'assembly une fois qu'il est devenu un cliché instantané ; <ph id="ph3">&lt;see langword="false" /&gt;</ph> pour affecter un emplacement d'origine à <ph id="ph4">&lt;see cref="P:System.Reflection.Assembly.CodeBase" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetName(System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetName(System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetName(System.Boolean)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetName(System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> for this assembly.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> pour cet assembly.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetName(System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetName(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetName%2A&gt;</ph> method gets an <ph id="ph2">&lt;xref:System.Reflection.AssemblyName&gt;</ph> for this assembly, setting the codebase as specified by the <ph id="ph3">`copiedName`</ph> parameter.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetName%2A&gt;</ph> méthode obtient un <ph id="ph2">&lt;xref:System.Reflection.AssemblyName&gt;</ph> pour cet assembly, en définissant le code base tel que spécifié par le <ph id="ph3">`copiedName`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object to be populated with serialization information.</source>
          <target state="translated">Objet à remplir à l'aide des informations de sérialisation.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The destination context of the serialization.</source>
          <target state="translated">Contexte de destination de la sérialisation.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetObjectData%2A&gt;</ph> method gets serialization information with all of the data needed to reinstantiate this assembly.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetObjectData%2A&gt;</ph> méthode obtient les informations de sérialisation avec toutes les données nécessaires pour réinstancier cet assembly.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">requiert une confiance totale pour l’appelant immédiat.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetReferencedAssemblies">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetReferencedAssemblies" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetReferencedAssemblies" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetReferencedAssemblies">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> containing all the assemblies referenced by this assembly.</source>
          <target state="translated">Tableau de type <ph id="ph1">&lt;see cref="T:System.Reflection.AssemblyName" /&gt;</ph> contenant tous les assemblys référencés par cet assembly.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetReferencedAssemblies">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetReferencedAssemblies">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetReferencedAssemblies%2A&gt;</ph> method gets the <ph id="ph2">&lt;xref:System.Reflection.AssemblyName&gt;</ph> objects for all the assemblies referenced by this assembly.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetReferencedAssemblies%2A&gt;</ph> méthode obtient le <ph id="ph2">&lt;xref:System.Reflection.AssemblyName&gt;</ph> objets de tous les assemblys référencés par cet assembly.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Assembly">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetSatelliteAssembly" /&gt;</ph> methods.</source>
          <target state="translated">Fournit aux objets COM un accès indépendant à la version aux méthodes <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetSatelliteAssembly" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetSatelliteAssembly%2A&gt;</ph> methods get the satellite assembly.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetSatelliteAssembly%2A&gt;</ph> méthodes obtiennent l’assembly satellite.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)">
          <source>The specified culture.</source>
          <target state="translated">Culture spécifiée.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)">
          <source>The specified satellite assembly.</source>
          <target state="translated">Assembly satellite spécifié.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetSatelliteAssembly%2A&gt;</ph> method gets the satellite assembly for the specified culture.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetSatelliteAssembly%2A&gt;</ph> méthode obtient l’assembly satellite pour la culture spécifiée.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)">
          <source>The specified culture.</source>
          <target state="translated">Culture spécifiée.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)">
          <source>The version of the satellite assembly.</source>
          <target state="translated">Version de l'assembly satellite.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)">
          <source>The specified satellite assembly.</source>
          <target state="translated">Assembly satellite spécifié.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetSatelliteAssembly%2A&gt;</ph> method gets the specified version of the satellite assembly for the specified culture.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetSatelliteAssembly%2A&gt;</ph> méthode obtient la version spécifiée de l’assembly satellite pour la culture spécifiée.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Assembly">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetType" /&gt;</ph> methods.</source>
          <target state="translated">Fournit aux objets COM un accès indépendant à la version aux méthodes <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.GetType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetType%2A&gt;</ph> methods get the <ph id="ph2">&lt;xref:System.Type&gt;</ph> object that represents the specified type.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetType%2A&gt;</ph> méthodes obtiennent le <ph id="ph2">&lt;xref:System.Type&gt;</ph> objet qui représente le type spécifié.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Object.GetType" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Object.GetType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetType">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetType">
          <source>The <ph id="ph1">&lt;xref:System.Object.GetType%2A&gt;</ph> method gets the type of the current instance.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Object.GetType%2A&gt;</ph> méthode obtient le type de l’instance actuelle.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String)">
          <source>The full name of the type.</source>
          <target state="translated">Nom complet du type.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetType(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetType(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object that represents the specified class, or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if the class is not found.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> qui représente la classe spécifiée ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> si la classe est introuvable.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetType%2A&gt;</ph> method gets the <ph id="ph2">&lt;xref:System.Type&gt;</ph> object with the specified name in the assembly instance.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetType%2A&gt;</ph> méthode obtient le <ph id="ph2">&lt;xref:System.Type&gt;</ph> objet portant le nom spécifié dans l’instance de l’assembly.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean)">
          <source>The full name of the type.</source>
          <target state="translated">Nom complet du type.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to throw an exception if the type is not found; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to return <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour lever une exception si le type est introuvable ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour retourner la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object that represents the specified class.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> qui représente la classe spécifiée.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetType%2A&gt;</ph> method gets the <ph id="ph2">&lt;xref:System.Type&gt;</ph> object with the specified name in the assembly instance and optionally throws an exception if the type is not found.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetType%2A&gt;</ph> méthode obtient le <ph id="ph2">&lt;xref:System.Type&gt;</ph> objet portant le nom spécifié dans l’instance de l’assembly et éventuellement lève une exception si le type est introuvable.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean,System.Boolean)">
          <source>The full name of the type.</source>
          <target state="translated">Nom complet du type.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to throw an exception if the type is not found; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to return <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour lever une exception si le type est introuvable ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour retourner la valeur <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore the case of the type name; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour ignorer la casse du nom de type ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean,System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetType(System.String,System.Boolean,System.Boolean)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object that represents the specified class.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> qui représente la classe spécifiée.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean,System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetType(System.String,System.Boolean,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetType%2A&gt;</ph> method gets the <ph id="ph2">&lt;xref:System.Type&gt;</ph> object with the specified name in the assembly instance, with the options of ignoring the case, and of throwing an exception if the type is not found.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetType%2A&gt;</ph> méthode obtient le <ph id="ph2">&lt;xref:System.Type&gt;</ph> objet portant le nom spécifié dans l’instance de l’assembly, avec les options d’ignorer la casse et de lever une exception si le type est introuvable.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetTypes">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetTypes" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.GetTypes" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.GetTypes">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> containing objects for all the types defined in this assembly.</source>
          <target state="translated">Tableau de type <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> contenant des objets pour tous les types définis dans cet assembly.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetTypes">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.GetTypes">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetTypes%2A&gt;</ph> method gets the types defined in this assembly.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GetTypes%2A&gt;</ph> méthode obtient les types définis dans cet assembly.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Assembly.GlobalAssemblyCache">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.GlobalAssemblyCache" /&gt;</ph> property.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la propriété <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.GlobalAssemblyCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.GlobalAssemblyCache">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the assembly was loaded from the global assembly cache; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'assembly a été chargé à partir du Global Assembly Cache ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.GlobalAssemblyCache">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.GlobalAssemblyCache">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.GlobalAssemblyCache%2A&gt;</ph> property gets a value indicating whether the assembly was loaded from the global assembly cache.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.GlobalAssemblyCache%2A&gt;</ph> propriété obtient une valeur qui indique si l’assembly a été chargé à partir du global assembly cache.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.IsDefined(System.Type,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> of the custom attribute to be checked for this assembly.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> de l'attribut personnalisé à vérifier pour cet assembly.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.IsDefined(System.Type,System.Boolean)">
          <source>This argument is ignored for objects of this type.</source>
          <target state="translated">Cet argument est ignoré pour les objets de ce type.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.IsDefined(System.Type,System.Boolean)">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.IsDefined(System.Type,System.Boolean)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.IsDefined(System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a custom attribute identified by the specified <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> is defined; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si un attribut personnalisé identifié par le <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> spécifié est défini ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.IsDefined(System.Type,System.Boolean)">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.IsDefined(System.Type,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.IsDefined%2A&gt;</ph> method indicates whether a custom attribute identified by the specified <ph id="ph2">&lt;xref:System.Type&gt;</ph> is defined.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.IsDefined%2A&gt;</ph> méthode indique si un attribut personnalisé identifié par l’objet <ph id="ph2">&lt;xref:System.Type&gt;</ph> est défini.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices._Assembly">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.LoadModule" /&gt;</ph> members.</source>
          <target state="translated">Fournit aux objets COM un accès indépendant à la version aux membres <ph id="ph1">&lt;see cref="Overload:System.Reflection.Assembly.LoadModule" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices._Assembly">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadModule%2A&gt;</ph> members load the module internal to this assembly.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadModule%2A&gt;</ph> membres chargent le module interne à cet assembly.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[])">
          <source>Name of the module.</source>
          <target state="translated">Nom du module.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[])">
          <source>Must correspond to a file name in this assembly's manifest.</source>
          <target state="translated">Doit correspondre à un nom de fichier du manifeste de cet assembly.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[])">
          <source>A byte array that is a COFF-based image containing an emitted module, or a resource.</source>
          <target state="translated">Tableau d'octets qui est une image COFF contenant un module émis ou une ressource.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[])" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[])">
          <source>The loaded Module.</source>
          <target state="translated">Module chargé.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadModule%2A&gt;</ph> method loads the module, internal to this assembly, with a Common Object File Format (COFF)-based image containing an emitted module, or a resource file.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadModule%2A&gt;</ph> méthode charge le module, interne à cet assembly, avec une image COFF Common Object File Format contenant un module émis ou un fichier de ressources.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])">
          <source>Name of the module.</source>
          <target state="translated">Nom du module.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])">
          <source>Must correspond to a file name in this assembly's manifest.</source>
          <target state="translated">Doit correspondre à un nom de fichier du manifeste de cet assembly.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])">
          <source>A byte array that is a COFF-based image containing an emitted module, or a resource.</source>
          <target state="translated">Tableau d'octets qui est une image COFF contenant un module émis ou une ressource.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])">
          <source>A byte array containing the raw bytes representing the symbols for the module.</source>
          <target state="translated">Tableau d'octets contenant les octets bruts représentant les symboles du module.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])">
          <source>Must be <ph id="ph1">&lt;see langword="null" /&gt;</ph> if this is a resource file.</source>
          <target state="translated">Doit avoir la valeur <ph id="ph1">&lt;see langword="null" /&gt;</ph> s'il s'agit d'un fichier de ressources.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.LoadModule(System.String,System.Byte[],System.Byte[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])">
          <source>The loaded module.</source>
          <target state="translated">Module chargé.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadModule%2A&gt;</ph> method loads the module, internal to this assembly, with a Common Object File Format (COFF)-based image containing an emitted module, or a resource file.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.LoadModule%2A&gt;</ph> méthode charge le module, interne à cet assembly, avec une image COFF Common Object File Format contenant un module émis ou un fichier de ressources.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.LoadModule(System.String,System.Byte[],System.Byte[])">
          <source>The raw bytes representing the symbols for the module are also loaded.</source>
          <target state="translated">Les octets bruts représentant les symboles du module sont également chargés.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices._Assembly.Location">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.Location" /&gt;</ph> property.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la propriété <ph id="ph1">&lt;see cref="P:System.Reflection.Assembly.Location" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.Location">
          <source>The location of the loaded file that contains the manifest.</source>
          <target state="translated">Emplacement du fichier chargé qui contient le manifeste.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.Location">
          <source>If the loaded file was shadow-copied, the location is that of the file after being shadow-copied.</source>
          <target state="translated">Si le fichier chargé était une copie fantôme, l'emplacement est celui du fichier après qu'il soit une copie fantôme.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.Location">
          <source>If the assembly is loaded from a byte array, such as when using the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.Load(System.Byte[])" /&gt;</ph> method overload, the value returned is an empty string ("").</source>
          <target state="translated">Si l'assembly est chargé à partir d'un tableau d'octets, par exemple lors de l'utilisation de la surcharge de méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.Load(System.Byte[])" /&gt;</ph>, la valeur retournée est une chaîne vide ("").</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.Location">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices._Assembly.Location">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.Location%2A&gt;</ph> property gets the path or Universal Naming Convention (UNC) location of the loaded file that contains the manifest.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.Location%2A&gt;</ph> propriété obtient le chemin d’accès ou l’emplacement UNC Universal Naming Convention () du fichier chargé qui contient le manifeste.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="E:System.Runtime.InteropServices._Assembly.ModuleResolve">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="E:System.Reflection.Assembly.ModuleResolve" /&gt;</ph> event.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à l'événement <ph id="ph1">&lt;see cref="E:System.Reflection.Assembly.ModuleResolve" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Runtime.InteropServices._Assembly.ModuleResolve">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Runtime.InteropServices._Assembly.ModuleResolve">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.ModuleResolve&gt;</ph> event occurs when the common language runtime class loader cannot resolve a reference to an internal module of an assembly through normal means.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.ModuleResolve&gt;</ph> événement se produit lorsque le chargeur de classe du common language runtime ne peut pas résoudre une référence à un module interne d’un assembly à l’aide des moyens normaux.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Runtime.InteropServices._Assembly.ModuleResolve">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">requiert une confiance totale pour l’appelant immédiat.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Runtime.InteropServices._Assembly.ModuleResolve">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.ToString">
          <source>Provides COM objects with version-independent access to the <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.ToString" /&gt;</ph> method.</source>
          <target state="translated">Fournit des objets COM avec un accès indépendant de la version à la méthode <ph id="ph1">&lt;see cref="M:System.Reflection.Assembly.ToString" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices._Assembly.ToString">
          <source>The full name of the assembly, or the class name if the full name of the assembly cannot be determined.</source>
          <target state="translated">Nom complet de l'assembly, ou nom de la classe si le nom complet de l'assembly ne peut pas être déterminé.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.ToString">
          <source>This method is for access to managed classes from unmanaged code, and should not be called from managed code.</source>
          <target state="translated">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices._Assembly.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Reflection.Assembly.ToString%2A&gt;</ph> method returns the full name of the assembly, also known as the display name.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Reflection.Assembly.ToString%2A&gt;</ph> méthode retourne le nom complet de l’assembly, également connu sous le nom d’affichage.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>