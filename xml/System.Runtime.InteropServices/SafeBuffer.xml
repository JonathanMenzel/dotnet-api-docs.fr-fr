<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SafeBuffer.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac575b109650bc09c5660bda32818a0982011ca6ad0.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">75b109650bc09c5660bda32818a0982011ca6ad0</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.SafeBuffer">
          <source>Provides a controlled memory buffer that can be used for reading and writing.</source>
          <target state="translated">Fournit une mémoire tampon contrôlée qui peut être utilisée pour la lecture et l'écriture.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.SafeBuffer">
          <source>Attempts to access memory outside the controlled buffer (underruns and overruns) raise exceptions.</source>
          <target state="translated">Toute tentative d'accès à la mémoire en dehors de la mémoire tampon contrôlée (sous-utilisation et dépassement) entraîne la levée d'exceptions.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.SafeBuffer">
          <source>You must call the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeBuffer.Initialize%2A?displayProperty=nameWithType&gt;</ph> method before you use any instance of <ph id="ph2">&lt;xref:System.Runtime.InteropServices.SafeBuffer&gt;</ph>.</source>
          <target state="translated">Vous devez appeler la <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeBuffer.Initialize%2A?displayProperty=nameWithType&gt;</ph> avant n’importe quelle instance de la méthode <ph id="ph2">&lt;xref:System.Runtime.InteropServices.SafeBuffer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.SafeBuffer">
          <source>To avoid races when you store an instance of a <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeBuffer&gt;</ph> object in a static variable, you should use one of the following approaches:</source>
          <target state="translated">Pour éviter des courses lorsque vous stockez une instance d’un <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeBuffer&gt;</ph> de l’objet dans une variable statique, vous devez utiliser une des approches suivantes :</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.SafeBuffer">
          <source>Create a lock when publishing the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeBuffer&gt;</ph>.</source>
          <target state="translated">Créez un verrouillage lors de la publication du <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeBuffer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.SafeBuffer">
          <source>Create a local variable, initialize the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeBuffer&gt;</ph>, and then assign the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.SafeBuffer&gt;</ph> to the static variable, for example, by using the <ph id="ph3">&lt;xref:System.Threading.Interlocked.CompareExchange%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Créer une variable locale, initialisez le <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeBuffer&gt;</ph>, puis attribuez les <ph id="ph2">&lt;xref:System.Runtime.InteropServices.SafeBuffer&gt;</ph> à la variable statique, par exemple, en utilisant le <ph id="ph3">&lt;xref:System.Threading.Interlocked.CompareExchange%2A?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.SafeBuffer">
          <source>Assignments in a static class constructor are implicitly locked.</source>
          <target state="translated">Les affectations dans un constructeur de classe statique sont verrouillées implicitement.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.SafeBuffer">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">requiert une confiance totale pour l’appelant immédiat.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.SafeBuffer">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.#ctor(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to reliably release the handle during the finalization phase; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to prevent reliable release (not recommended).</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour libérer de manière fiable le handle pendant la phase de finalisation ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour empêcher une libération fiable (déconseillé).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.#ctor(System.Boolean)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.SafeBuffer" /&gt;</ph> class, and specifies whether the buffer handle is to be reliably released.</source>
          <target state="translated">Crée une instance de la classe <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.SafeBuffer" /&gt;</ph> et spécifie si le handle de tampon doit être libéré de manière fiable.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SafeBuffer.#ctor(System.Boolean)">
          <source>requires full trust for the immediate caller.</source>
          <target state="translated">requiert une confiance totale pour l’appelant immédiat.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SafeBuffer.#ctor(System.Boolean)">
          <source>This member cannot be used by partially trusted or transparent code.</source>
          <target state="translated">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)">
          <source>A byte pointer, passed by reference, to receive the pointer from within the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.SafeBuffer" /&gt;</ph> object.</source>
          <target state="translated">Pointeur d'octet, passé par référence, pour recevoir le pointeur à partir de l'objet <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.SafeBuffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)">
          <source>You must set this pointer to <ph id="ph1">&lt;see langword="null" /&gt;</ph> before you call this method.</source>
          <target state="translated">Vous devez affecter la valeur <ph id="ph1">&lt;see langword="null" /&gt;</ph> à ce pointeur avant d'appeler cette méthode.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)">
          <source>Obtains a pointer from a <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.SafeBuffer" /&gt;</ph> object for a block of memory.</source>
          <target state="translated">Obtient un pointeur à partir d'un objet <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.SafeBuffer" /&gt;</ph> pour un bloc de mémoire.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)">
          <source>When <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeBuffer.AcquirePointer%2A&gt;</ph> returns, you should perform bounds checking by verifying that the <ph id="ph2">`pointer`</ph> parameter is <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Lorsque <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeBuffer.AcquirePointer%2A&gt;</ph> est retournée, vous devez effectuer la vérification de limites en vérifiant que le <ph id="ph2">`pointer`</ph> paramètre est <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)">
          <source>If it is not <ph id="ph1">`null`</ph>, you must call the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.SafeBuffer.ReleasePointer%2A?displayProperty=nameWithType&gt;</ph> method in a constrained execution region (CER).</source>
          <target state="translated">Si elle n’est pas <ph id="ph1">`null`</ph>, vous devez appeler la <ph id="ph2">&lt;xref:System.Runtime.InteropServices.SafeBuffer.ReleasePointer%2A?displayProperty=nameWithType&gt;</ph> méthode dans une région d’exécution limitée (CER).</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeBuffer.AcquirePointer%2A&gt;</ph> calls the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A?displayProperty=nameWithType&gt;</ph> method and exposes the pointer.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeBuffer.AcquirePointer%2A&gt;</ph> appelle la <ph id="ph2">&lt;xref:System.Runtime.InteropServices.SafeHandle.DangerousAddRef%2A?displayProperty=nameWithType&gt;</ph> méthode et expose le pointeur.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)">
          <source>Unlike the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeBuffer.Read%2A&gt;</ph> method, it does not change the current position of the pointer.</source>
          <target state="translated">Contrairement à la <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeBuffer.Read%2A&gt;</ph> (méthode), il ne modifie pas la position actuelle du pointeur.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)">
          <source>The following exampledemonstrates how to use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeBuffer.AcquirePointer%2A&gt;</ph> method:</source>
          <target state="translated">L’exampledemonstrates suivant l’utilisation de la <ph id="ph1">&lt;xref:System.Runtime.InteropServices.SafeBuffer.AcquirePointer%2A&gt;</ph> méthode :</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)">
          <source>If you cast <ph id="ph1">`pointer`</ph> (which is a pointer to a byte) as a pointer to a different type (T*), you may have pointer alignment issues.</source>
          <target state="translated">Si vous effectuez un cast <ph id="ph1">`pointer`</ph> (qui est un pointeur vers un octet) comme un pointeur vers un type différent (T *), vous avez peut-être des problèmes d’alignement du pointeur.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)">
          <source>You must take responsibility for all bounds checking with this pointer.</source>
          <target state="translated">Vous devez prendre la responsabilité de toutes les vérifications de limites avec ce pointeur.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /&gt;</ph> method has not been called.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /&gt;</ph> n'a pas été appelée.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices.SafeBuffer.ByteLength">
          <source>Gets the size of the buffer, in bytes.</source>
          <target state="translated">Obtient la taille du tampon, en octets.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.SafeBuffer.ByteLength">
          <source>The number of bytes in the memory buffer.</source>
          <target state="translated">Nombre d'octets dans le tampon de mémoire.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices.SafeBuffer.ByteLength">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /&gt;</ph> method has not been called.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /&gt;</ph> n'a pas été appelée.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.SafeBuffer">
          <source>Specifies the size of the memory buffer to allocate.</source>
          <target state="translated">Spécifie la taille du tampon de mémoire à allouer.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.SafeBuffer">
          <source>You must call this method before you use the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.SafeBuffer" /&gt;</ph> instance.</source>
          <target state="translated">Vous devez appeler cette méthode avant d'utiliser l'instance <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.SafeBuffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt64)">
          <source>The number of bytes in the buffer.</source>
          <target state="translated">Nombre d'octets dans la mémoire tampon.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt64)">
          <source>Defines the allocation size of the memory region in bytes.</source>
          <target state="translated">Définit la taille d'allocation de la région de mémoire en octets.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt64)">
          <source>You must call this method before you use the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.SafeBuffer" /&gt;</ph> instance.</source>
          <target state="translated">Vous devez appeler cette méthode avant d'utiliser l'instance <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.SafeBuffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt64)">
          <source><ph id="ph1">&lt;paramref name="numBytes" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="numBytes" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt64)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt64)">
          <source><ph id="ph1">&lt;paramref name="numBytes" /&gt;</ph> is greater than the available address space.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="numBytes" /&gt;</ph> est supérieur à l'espace d'adressage disponible.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32,System.UInt32)">
          <source>The number of elements in the buffer.</source>
          <target state="translated">Nombre d'éléments contenus dans la mémoire tampon.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32,System.UInt32)">
          <source>The size of each element in the buffer.</source>
          <target state="translated">Taille de chaque élément dans le tampon.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32,System.UInt32)">
          <source>Specifies the allocation size of the memory buffer by using the specified number of elements and element size.</source>
          <target state="translated">Spécifie la taille d'allocation du tampon de mémoire à l'aide du nombre spécifié d'éléments et de la taille des éléments.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32,System.UInt32)">
          <source>You must call this method before you use the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.SafeBuffer" /&gt;</ph> instance.</source>
          <target state="translated">Vous devez appeler cette méthode avant d'utiliser l'instance <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.SafeBuffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32,System.UInt32)">
          <source>This method defines the required size of the memory region as the number of elements in an array multiplied by the size of each element.</source>
          <target state="translated">Cette méthode définit la taille requise de la région de mémoire en tant que le nombre d’éléments dans un tableau multiplié par la taille de chaque élément.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32,System.UInt32)">
          <source><ph id="ph1">&lt;paramref name="numElements" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="numElements" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32,System.UInt32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32,System.UInt32)">
          <source><ph id="ph1">&lt;paramref name="sizeOfEachElement" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="sizeOfEachElement" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32,System.UInt32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Initialize(System.UInt32,System.UInt32)">
          <source><ph id="ph1">&lt;paramref name="numElements" /&gt;</ph> multiplied by <ph id="ph2">&lt;paramref name="sizeOfEachElement" /&gt;</ph> is greater than the available address space.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="numElements" /&gt;</ph> multiplié par <ph id="ph2">&lt;paramref name="sizeOfEachElement" /&gt;</ph> est supérieur à l'espace d'adressage disponible.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SafeBuffer.Initialize``1(System.UInt32)">
          <source>The value type to allocate memory for.</source>
          <target state="translated">Type valeur pour lequel il faut allouer de la mémoire.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Initialize``1(System.UInt32)">
          <source>The number of elements of the value type to allocate memory for.</source>
          <target state="translated">Nombre d'éléments du type valeur pour lequel il faut allouer de la mémoire.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Initialize``1(System.UInt32)">
          <source>Defines the allocation size of the memory region by specifying the number of value types.</source>
          <target state="translated">Définit la taille d'allocation de la région de mémoire en spécifiant le nombre de types valeur.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Initialize``1(System.UInt32)">
          <source>You must call this method before you use the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.SafeBuffer" /&gt;</ph> instance.</source>
          <target state="translated">Vous devez appeler cette méthode avant d'utiliser l'instance <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.SafeBuffer" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Initialize``1(System.UInt32)">
          <source><ph id="ph1">&lt;paramref name="numElements" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="numElements" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Initialize``1(System.UInt32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Initialize``1(System.UInt32)">
          <source><ph id="ph1">&lt;paramref name="numElements" /&gt;</ph> multiplied by the size of each element is greater than the available address space.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="numElements" /&gt;</ph> multiplié par la taille de chaque élément est supérieur à l'espace d'adressage disponible.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SafeBuffer.Read``1(System.UInt64)">
          <source>The value type to read.</source>
          <target state="translated">Type valeur à lire.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Read``1(System.UInt64)">
          <source>The location from which to read the value type.</source>
          <target state="translated">Emplacement à partir duquel le type valeur doit être lu.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Read``1(System.UInt64)">
          <source>You may have to consider alignment issues.</source>
          <target state="translated">Vous devrez peut-être tenir compte des problèmes d'alignement.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Read``1(System.UInt64)">
          <source>Reads a value type from memory at the specified offset.</source>
          <target state="translated">Lit un type valeur dans la mémoire à l'offset spécifié.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Read``1(System.UInt64)">
          <source>The value type that was read from memory.</source>
          <target state="translated">Type valeur lu dans la mémoire.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Read``1(System.UInt64)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /&gt;</ph> method has not been called.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /&gt;</ph> n'a pas été appelée.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
          <source>The value type to read.</source>
          <target state="translated">Type valeur à lire.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
          <source>The location from which to start reading.</source>
          <target state="translated">Emplacement de démarrage de la lecture.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
          <source>The output array to write to.</source>
          <target state="translated">Tableau de sortie où écrire.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
          <source>The location in the output array to begin writing to.</source>
          <target state="translated">Emplacement de démarrage de l'écriture dans le tableau de sortie.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
          <source>The number of value types to read from the input array and to write to the output array.</source>
          <target state="translated">Nombre de types valeur à lire dans le tableau d'entrée et à écrire dans le tableau de sortie.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
          <source>Reads the specified number of value types from memory starting at the offset, and writes them into an array starting at the index.</source>
          <target state="translated">Lit le nombre spécifié de types valeur dans la mémoire à partir de l'offset indiqué, puis les écrit dans un tableau à partir de l'index indiqué.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="count" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
          <source>The length of the array minus the index is less than <ph id="ph1">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">La longueur du tableau moins l'index est inférieure à <ph id="ph1">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.ReadArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /&gt;</ph> method has not been called.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /&gt;</ph> n'a pas été appelée.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.ReleasePointer">
          <source>Releases a pointer that was obtained by the <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)" /&gt;</ph> method.</source>
          <target state="translated">Libère un pointeur obtenu par la méthode <ph id="ph1">&lt;see cref="M:System.Runtime.InteropServices.SafeBuffer.AcquirePointer(System.Byte*@)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SafeBuffer.ReleasePointer">
          <source>After this method returns, the pointer cannot be used.</source>
          <target state="translated">Une fois que cette méthode retourne le pointeur ne peut pas être utilisé.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.ReleasePointer">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /&gt;</ph> method has not been called.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /&gt;</ph> n'a pas été appelée.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)">
          <source>The value type to write.</source>
          <target state="translated">Type valeur à écrire.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)">
          <source>The location at which to start writing.</source>
          <target state="translated">Emplacement où démarrer l'écriture.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)">
          <source>You may have to consider alignment issues.</source>
          <target state="translated">Vous devrez peut-être tenir compte des problèmes d'alignement.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)">
          <source>The value to write.</source>
          <target state="translated">Valeur à écrire.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)">
          <source>Writes a value type to memory at the given location.</source>
          <target state="translated">Écrit un type valeur dans la mémoire à l'emplacement donné.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)">
          <source>This method is equivalent to the following code:</source>
          <target state="translated">Cette méthode équivaut au code suivant :</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.Write``1(System.UInt64,``0)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /&gt;</ph> method has not been called.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /&gt;</ph> n'a pas été appelée.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
          <source>The value type to write.</source>
          <target state="translated">Type valeur à écrire.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
          <source>The location in memory to write to.</source>
          <target state="translated">Emplacement où écrire dans la mémoire.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
          <source>The input array.</source>
          <target state="translated">Tableau d'entrée.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
          <source>The offset in the array to start reading from.</source>
          <target state="translated">Offset de démarrage de la lecture dans le tableau.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
          <source>The number of value types to write.</source>
          <target state="translated">Nombre de types valeur à écrire.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
          <source>Writes the specified number of value types to a memory location by reading bytes starting from the specified location in the input array.</source>
          <target state="translated">Écrit le nombre spécifié de types valeur dans un emplacement de mémoire en lisant les octets qui commencent à partir de l'emplacement spécifié dans le tableau d'entrée.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
          <source>Each element in the input array consists of the generic value type of the class.</source>
          <target state="translated">Chaque élément du tableau d’entrée se compose du type valeur générique de la classe.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> or <ph id="ph2">&lt;paramref name="count" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> ou <ph id="ph2">&lt;paramref name="count" /&gt;</ph> est inférieur à zéro.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
          <source>The length of the input array minus <ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</source>
          <target state="translated">La longueur du tableau d'entrée moins <ph id="ph1">&lt;paramref name="index" /&gt;</ph> est inférieure à <ph id="ph2">&lt;paramref name="count" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.SafeBuffer.WriteArray``1(System.UInt64,``0[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /&gt;</ph> method has not been called.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;see cref="Overload:System.Runtime.InteropServices.SafeBuffer.Initialize" /&gt;</ph> n'a pas été appelée.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>