<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ICustomMarshaler.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac596e612f036008e38d852a9b63135ce9093ba596a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">96e612f036008e38d852a9b63135ce9093ba596a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Provides custom wrappers for handling method calls.</source>
          <target state="translated">Fournit des wrappers personnalisés permettant de gérer les appels de méthodes.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>A marshaler provides a bridge between the functionality of old and new interfaces.</source>
          <target state="translated">Un marshaleur établit un pont entre les fonctionnalités de l’ancienne et les nouvelles interfaces.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Custom marshaling provides the following benefits:</source>
          <target state="translated">Le marshaling personnalisé offre les avantages suivants :</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>It enables client applications that were designed to work with an old interface to also work with servers that implement a new interface.</source>
          <target state="translated">Il permet aux applications clientes ont été conçues pour fonctionner avec une interface ancienne fonctionnent également avec les serveurs qui implémentent une nouvelle interface.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>It enables client applications built to work with a new interface to work with servers that implement an old interface.</source>
          <target state="translated">Il permet aux applications clientes conçues pour fonctionner avec une nouvelle interface fonctionnent avec les serveurs qui implémentent une interface ancienne.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>If you have an interface that introduces different marshaling behavior or that is exposed to the Component Object Model (COM) in a different way, you can design a custom marshaler instead of using the interop marshaler.</source>
          <target state="translated">Si vous avez une interface qui introduit un comportement de marshaling différent ou qui est exposé pour le modèle COM (Component Object) d’une autre façon, vous pouvez concevoir un marshaleur personnalisé au lieu d’utiliser le marshaleur d’interopérabilité.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>By using a custom marshaler, you can minimize the distinction between new .NET Framework components and existing COM components.</source>
          <target state="translated">En utilisant un marshaleur personnalisé, vous pouvez réduire la distinction entre les nouveaux composants .NET Framework et les composants COM existants.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>For example, suppose that you are developing a managed interface called <ph id="ph1">`INew`</ph>.</source>
          <target state="translated">Par exemple, supposons que vous développiez une interface managée appelée <ph id="ph1">`INew`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>When this interface is exposed to COM through a standard COM callable wrapper (CCW), it has the same methods as the managed interface and uses the marshaling rules built into the interop marshaler.</source>
          <target state="translated">Lorsque cette interface est exposée à COM via un standard callable wrapper CCW (COM), il a les mêmes méthodes que l’interface managée et utilise les règles de marshaling intégrées au marshaleur d’interopérabilité.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Now suppose that a well-known COM interface called <ph id="ph1">`IOld`</ph> already provides the same functionality as the <ph id="ph2">`INew`</ph> interface.</source>
          <target state="translated">Supposons maintenant qu’une interface COM connue appelée <ph id="ph1">`IOld`</ph> fournit déjà les mêmes fonctionnalités que le <ph id="ph2">`INew`</ph> interface.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>By designing a custom marshaler, you can provide an unmanaged implementation of <ph id="ph1">`IOld`</ph> that simply delegates the calls to the managed implementation of the <ph id="ph2">`INew`</ph> interface.</source>
          <target state="translated">En concevant un marshaleur personnalisé, vous pouvez fournir une implémentation non managée de <ph id="ph1">`IOld`</ph> qui délègue simplement les appels à l’implémentation managée de le <ph id="ph2">`INew`</ph> interface.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Therefore, the custom marshaler acts as a bridge between the managed and unmanaged interfaces.</source>
          <target state="translated">Par conséquent, le marshaleur personnalisé joue le rôle de pont entre les interfaces managées et non managées.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Custom marshalers are not invoked when calling from managed code to unmanaged code on a dispatch-only interface.</source>
          <target state="translated">Les marshaleurs personnalisés ne sont pas appelées lors de l’appel du code managé au code non managé sur une interface de dispatch.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Defining the Marshaling Type</source>
          <target state="translated">Définition du type de marshaling</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Before you can build a custom marshaler, you must define the managed and unmanaged interfaces that will be marshaled.</source>
          <target state="translated">Avant de pouvoir créer un marshaleur personnalisé, vous devez définir les interfaces managées et non managées qui doivent être marshalées.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>These interfaces commonly perform the same function but are exposed differently to managed and unmanaged objects.</source>
          <target state="translated">Ces interfaces couramment remplissent la même fonction, mais sont exposées différemment aux objets managés et non managés.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>A managed compiler produces a managed interface from metadata, and the resulting interface looks like any other managed interface.</source>
          <target state="translated">Un compilateur managé produit une interface managée à partir des métadonnées, et l’interface résultante ressemble à n’importe quel autre interface managée.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The following example shows a typical interface.</source>
          <target state="translated">L’exemple suivant montre une interface par défaut.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>You define the unmanaged type in Interface Definition Language (IDL) and compile it with the Microsoft Interface Definition Language (MIDL) compiler.</source>
          <target state="translated">Vous définissez le type non managé en langage IDL (Interface Definition) et le compilez avec le compilateur MIDL Microsoft Interface Definition Language ().</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>You define the interface within a library statement and assign it an interface ID with the universal unique identifier (UUID) attribute, as the following example demonstrates.</source>
          <target state="translated">Vous définissez l’interface dans une instruction de bibliothèque et affectez un ID d’interface avec l’attribut d’identificateur unique universel (UUID), comme illustré dans l’exemple suivant.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The MIDL compiler produces several output files.</source>
          <target state="translated">Le compilateur MIDL produit plusieurs fichiers de sortie.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>If the interface is defined in Old.idl, the output file Old_i.c defines a <ph id="ph1">`const`</ph> variable with the interface identifier (IID) of the interface, as the following example demonstrates.</source>
          <target state="translated">Si l’interface est définie dans Old.idl, le fichier de sortie Old_i.c définit un <ph id="ph1">`const`</ph> variable avec l’identificateur d’interface (IID) de l’interface, comme illustré dans l’exemple suivant.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The Old.h file is also produced by MIDL.</source>
          <target state="translated">Le fichier Old.h est également généré par MIDL.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>It contains a C++ definition of the interface that can be included in your C++ source code.</source>
          <target state="translated">Il contient une définition C++ de l’interface qui peut être inclus dans votre code source C++.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Implementing the ICustomMarshaler Interface</source>
          <target state="translated">Implémentation de l'interface ICustomMarshaler</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Your custom marshaler must implement the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph> interface to provide the appropriate wrappers to the runtime.</source>
          <target state="translated">Votre marshaleur personnalisé doit implémenter la <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph> interface afin de fournir les wrappers appropriés au runtime.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The following C# code displays the base interface that must be implemented by all custom marshalers.</source>
          <target state="translated">Le code c# suivant affiche l’interface de base qui doit être implémentée par tous les marshaleurs personnalisés.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph> interface includes methods that provide conversion support, cleanup support, and information about the data to be marshaled.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph> interface inclut des méthodes qui fournissent la prise en charge de la conversion en charge le nettoyage et informations sur les données à marshaler.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Type of operation</source>
          <target state="translated">Type d’opération</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>ICustomMarshaler method</source>
          <target state="translated">Méthode ICustomMarshaler</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Description</source>
          <target state="translated">Description </target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Conversion (from native to managed code)</source>
          <target state="translated">Conversion (du code natif au code managé)</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Marshals a pointer to native data into a managed object.</source>
          <target state="translated">Marshale un pointeur vers les données natives dans un objet managé.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>This method returns a custom runtime callable wrapper (RCW) that can marshal the unmanaged interface that is passed as an argument.</source>
          <target state="translated">Cette méthode retourne un personnalisé callable wrapper RCW (runtime) qui puisse marshaler l’interface non managée est passée en tant qu’argument.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The marshaler should return an instance of the custom RCW for that type.</source>
          <target state="translated">Le marshaleur doit retourner une instance du wrapper RCW personnalisé pour ce type.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Conversion (from managed to native code)</source>
          <target state="translated">Conversion (depuis du code managé en mode natif)</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Marshals a managed object into a pointer to native data.</source>
          <target state="translated">Marshale un objet managé dans un pointeur vers les données natives.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>This method returns a custom COM callable wrapper (CCW) that can marshal the managed interface that is passed as an argument.</source>
          <target state="translated">Cette méthode retourne un personnalisé callable wrapper CCW (COM) qui puisse marshaler l’interface managée est passée en tant qu’argument.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The marshaler should return an instance of the custom CCW for that type.</source>
          <target state="translated">Le marshaleur doit retourner une instance du wrapper CCW personnalisé pour ce type.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Cleanup (of native code)</source>
          <target state="translated">Nettoyage (de code natif)</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Enables the marshaler to clean up the native data (the CCW) that is returned by the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;</ph> method.</source>
          <target state="translated">Permet au marshaleur de nettoyer les données natives (CCW) sont retournées par la <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Cleanup (of managed code)</source>
          <target state="translated">Nettoyage (de code managé)</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Enables the marshaler to clean up the managed data (the RCW) that is returned by the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;</ph> method.</source>
          <target state="translated">Permet au marshaleur de nettoyer les données managées (RCW) sont retournées par la <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Information (about native code)</source>
          <target state="translated">Informations (code natif)</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Returns the size of the unmanaged data to be marshaled.</source>
          <target state="translated">Retourne la taille des données non managées à marshaler.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Conversion</source>
          <target state="translated">Conversion</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Marshals a pointer to native data into a managed object.</source>
          <target state="translated">Marshale un pointeur vers les données natives dans un objet managé.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>This method returns a custom runtime callable wrapper (RCW) that can marshal the unmanaged interface that is passed as an argument.</source>
          <target state="translated">Cette méthode retourne un personnalisé callable wrapper RCW (runtime) qui puisse marshaler l’interface non managée est passée en tant qu’argument.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The marshaler should return an instance of the custom RCW for that type.</source>
          <target state="translated">Le marshaleur doit retourner une instance du wrapper RCW personnalisé pour ce type.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Marshals a managed object into a pointer to native data.</source>
          <target state="translated">Marshale un objet managé dans un pointeur vers les données natives.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>This method returns a custom COM callable wrapper (CCW) that can marshal the managed interface that is passed as an argument.</source>
          <target state="translated">Cette méthode retourne un personnalisé callable wrapper CCW (COM) qui puisse marshaler l’interface managée est passée en tant qu’argument.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The marshaler should return an instance of the custom CCW for that type.</source>
          <target state="translated">Le marshaleur doit retourner une instance du wrapper CCW personnalisé pour ce type.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Cleanup</source>
          <target state="translated">Nettoyage</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Enables the marshaler to clean up the native data (the CCW) that is returned by the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;</ph> method.</source>
          <target state="translated">Permet au marshaleur de nettoyer les données natives (CCW) sont retournées par la <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Enables the marshaler to clean up the managed data (the RCW) that is returned by the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;</ph> method.</source>
          <target state="translated">Permet au marshaleur de nettoyer les données managées (RCW) sont retournées par la <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Size Information</source>
          <target state="translated">Informations sur la taille</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Returns the size of the unmanaged data to be marshaled.</source>
          <target state="translated">Retourne la taille des données non managées à marshaler.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Implementing the GetInstance Method</source>
          <target state="translated">Implémentation de la méthode GetInstance</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>In addition to implementing the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph> interface, custom marshalers must implement a <ph id="ph2">`static`</ph> method called <ph id="ph3">`GetInstance`</ph> that accepts a <ph id="ph4">&lt;xref:System.String&gt;</ph> as a parameter and has a return type of <ph id="ph5">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph>.</source>
          <target state="translated">En plus d’implémenter la <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph> interface marshaleurs personnalisés doivent implémenter une <ph id="ph2">`static`</ph> méthode appelée <ph id="ph3">`GetInstance`</ph> qui accepte un <ph id="ph4">&lt;xref:System.String&gt;</ph> en tant que paramètre et a un type de retour de <ph id="ph5">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>This <ph id="ph1">`static`</ph> method is called by the common language runtime's COM interop layer to instantiate an instance of the custom marshaler.</source>
          <target state="translated">Cela <ph id="ph1">`static`</ph> méthode est appelée par la couche d’interopérabilité COM du common language runtime pour instancier une instance du marshaleur personnalisé.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The string that is passed to <ph id="ph1">`GetInstance`</ph> is a cookie that the method can use to customize the returned custom marshaler.</source>
          <target state="translated">La chaîne qui est passée à <ph id="ph1">`GetInstance`</ph> est un cookie que la méthode peut utiliser pour personnaliser le marshaleur personnalisé retourné.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Applying MarshalAsAttribute</source>
          <target state="translated">Application de MarshalAsAttribute</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>To use a custom marshaler, you must apply the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribute to the parameter or field that is being marshaled.</source>
          <target state="translated">Pour utiliser un marshaleur personnalisé, vous devez appliquer le <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribut au paramètre ou au champ qui est marshalé.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>You must also pass the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType&gt;</ph> enumeration value to the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> constructor.</source>
          <target state="translated">Vous devez également passer le <ph id="ph1">&lt;xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType&gt;</ph> valeur d’énumération pour la <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> constructeur.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>In addition, you must specify the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> field with one of the following named parameters:</source>
          <target state="translated">En outre, vous devez spécifier le <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> champ avec l’un des paramètres nommés suivants :</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> (required): The assembly-qualified name of the custom marshaler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> (obligatoire) : le nom qualifié d’assembly du marshaleur personnalisé.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The name should include the namespace and class of the custom marshaler.</source>
          <target state="translated">Le nom doit inclure l’espace de noms et la classe du marshaleur personnalisé.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>If the custom marshaler is not defined in the assembly it is used in, you must specify the name of the assembly in which it is defined.</source>
          <target state="translated">Si le marshaleur personnalisé n’est pas défini dans l’assembly, dans qu'il est utilisé, vous devez spécifier le nom de l’assembly dans lequel il est défini.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>You can use the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> field instead of the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> field.</source>
          <target state="translated">Vous pouvez utiliser la <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> champ au lieu du <ph id="ph2">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> takes a type that is easier to specify.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalTypeRef&gt;</ph> prend un type qui est plus facile à spécifier.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie&gt;</ph> (optional): A cookie that is passed to the custom marshaler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalCookie&gt;</ph> (facultatif) : un cookie est passé au marshaleur personnalisé.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>You can use the cookie to provide additional information to the marshaler.</source>
          <target state="translated">Vous pouvez utiliser le cookie pour fournir des informations supplémentaires au marshaleur.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>For example, if the same marshaler is used to provide a number of wrappers, the cookie identifies a specific wrapper.</source>
          <target state="translated">Par exemple, si le même marshaleur est utilisé pour fournir un numéro de wrappers, le cookie identifie un wrapper spécifique.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The cookie is passed to the <ph id="ph1">`GetInstance`</ph> method of the marshaler.</source>
          <target state="translated">Le cookie est passé à la <ph id="ph1">`GetInstance`</ph> méthode du marshaleur.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribute identifies the custom marshaler so it can activate the appropriate wrapper.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribut identifie le marshaleur personnalisé afin qu’il peut activer le wrapper approprié.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The common language runtime's interop service then examines the attribute and creates the custom marshaler the first time the argument (parameter or field) needs to be marshaled.</source>
          <target state="translated">Ensuite, service d’interopérabilité du common language runtime examine l’attribut et crée le marshaleur personnalisé la première l’argument (paramètre ou champ) doit être marshalé.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The runtime then calls the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;</ph> methods on the custom marshaler to activate the correct wrapper to handle the call.</source>
          <target state="translated">Le runtime appelle ensuite la <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative%2A&gt;</ph> méthodes sur le marshaleur personnalisé pour activer le wrapper approprié pour gérer l’appel.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>Using a Custom Marshaler</source>
          <target state="translated">À l’aide d’un marshaleur personnalisé</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>When the custom marshaler is complete, you can use it as a custom wrapper for a particular type.</source>
          <target state="translated">Lorsque le marshaleur personnalisé est terminé, vous pouvez l’utiliser comme wrapper personnalisé pour un type particulier.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The following example shows the definition of the <ph id="ph1">`IUserData`</ph> managed interface:</source>
          <target state="translated">L’exemple suivant montre la définition de la <ph id="ph1">`IUserData`</ph> de l’interface managée :</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>In the following example, the <ph id="ph1">`IUserData`</ph> interface uses the <ph id="ph2">`NewOldMarshaler`</ph> custom marshaler to enable unmanaged client applications to pass an <ph id="ph3">`IOld`</ph> interface to the <ph id="ph4">`DoSomeStuff`</ph> method.</source>
          <target state="translated">Dans l’exemple suivant, le <ph id="ph1">`IUserData`</ph> utilise l’interface le <ph id="ph2">`NewOldMarshaler`</ph> un marshaleur personnalisé pour activer les applications clientes non managées de passer une <ph id="ph3">`IOld`</ph> de l’interface pour le <ph id="ph4">`DoSomeStuff`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The managed description of the <ph id="ph1">`DoSomeStuff`</ph> method takes an <ph id="ph2">`INew`</ph> interface, as shown in the previous example, whereas the unmanaged version of <ph id="ph3">`DoSomeStuff`</ph> takes an <ph id="ph4">`IOld`</ph> interface pointer, as shown in the following example.</source>
          <target state="translated">La description managée de la <ph id="ph1">`DoSomeStuff`</ph> méthode prend un <ph id="ph2">`INew`</ph> de l’interface, comme indiqué dans l’exemple précédent, alors que la version non managée de <ph id="ph3">`DoSomeStuff`</ph> prend un <ph id="ph4">`IOld`</ph> pointeur d’interface, comme indiqué dans l’exemple suivant.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The type library that is generated by exporting the managed definition of <ph id="ph1">`IUserData`</ph> yields the unmanaged definition shown in this example instead of the standard definition.</source>
          <target state="translated">La bibliothèque de types générée par l’exportation de la définition managée de <ph id="ph1">`IUserData`</ph> produit la définition non managée montrée dans cet exemple, au lieu de la définition standard.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribute applied to the <ph id="ph2">`INew`</ph> argument in the managed definition of the <ph id="ph3">`DoSomeStuff`</ph> method indicates that the argument uses a custom marshaler, as the following example shows.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribut appliqué à la <ph id="ph2">`INew`</ph> argument dans la définition managée de la <ph id="ph3">`DoSomeStuff`</ph> méthode indique que l’argument utilise un marshaleur personnalisé, comme le montre l’exemple suivant.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>In the previous examples, the first parameter provided to the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribute is the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType&gt;</ph> enumeration value <ph id="ph3">`UnmanagedType.CustomMarshaler`</ph>.</source>
          <target state="translated">Dans les exemples précédents, le premier paramètre fourni à la <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute&gt;</ph> attribut est la <ph id="ph2">&lt;xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType&gt;</ph> valeur d’énumération <ph id="ph3">`UnmanagedType.CustomMarshaler`</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>The second parameter is the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> field, which provides the assembly-qualified name of the custom marshaler.</source>
          <target state="translated">Le deuxième paramètre est le <ph id="ph1">&lt;xref:System.Runtime.InteropServices.MarshalAsAttribute.MarshalType&gt;</ph> champ qui fournit le nom qualifié d’assembly du marshaleur personnalisé.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ICustomMarshaler">
          <source>This name consists of the namespace and class of the custom marshaler (<ph id="ph1">`MarshalType="MyCompany.NewOldMarshaler"`</ph>).</source>
          <target state="translated">Ce nom est constitué de l’espace de noms et la classe du marshaleur personnalisé (<ph id="ph1">`MarshalType="MyCompany.NewOldMarshaler"`</ph>).</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(System.Object)">
          <source>The managed object to be destroyed.</source>
          <target state="translated">Objet managé à détruire.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpManagedData(System.Object)">
          <source>Performs necessary cleanup of the managed data when it is no longer needed.</source>
          <target state="translated">Effectue le nettoyage des données managées quand elles ne sont plus nécessaires.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(System.IntPtr)">
          <source>A pointer to the unmanaged data to be destroyed.</source>
          <target state="translated">Pointeur vers les données non managées à détruire.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.CleanUpNativeData(System.IntPtr)">
          <source>Performs necessary cleanup of the unmanaged data when it is no longer needed.</source>
          <target state="translated">Effectue le nettoyage des données non managées quand elles ne sont plus nécessaires.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize">
          <source>Returns the size of the native data to be marshaled.</source>
          <target state="translated">Retourne la taille des données natives à marshaler.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.GetNativeDataSize">
          <source>The size, in bytes, of the native data.</source>
          <target state="translated">Taille des données natives, en octets.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)">
          <source>The managed object to be converted.</source>
          <target state="translated">Objet managé à convertir.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)">
          <source>Converts the managed data to unmanaged data.</source>
          <target state="translated">Convertit les données managées en données non managées.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalManagedToNative(System.Object)">
          <source>A pointer to the COM view of the managed object.</source>
          <target state="translated">Pointeur vers la vue COM de l'objet managé.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)">
          <source>A pointer to the unmanaged data to be wrapped.</source>
          <target state="translated">Pointeur vers les données non managées à encapsuler.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)">
          <source>Converts the unmanaged data to managed data.</source>
          <target state="translated">Convertit les données non managées en données managées.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ICustomMarshaler.MarshalNativeToManaged(System.IntPtr)">
          <source>An object that represents the managed view of the COM data.</source>
          <target state="translated">Objet qui représente la vue managée des données COM.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>