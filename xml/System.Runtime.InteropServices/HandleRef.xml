<Type Name="HandleRef" FullName="System.Runtime.InteropServices.HandleRef">
  <Metadata><Meta Name="ms.openlocfilehash" Value="81586717a78b502420c293c07e267869162b4f1b" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56391836" /></Metadata><TypeSignature Language="C#" Value="public struct HandleRef" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit HandleRef extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.HandleRef" />
  <TypeSignature Language="VB.NET" Value="Public Structure HandleRef" />
  <TypeSignature Language="C++ CLI" Value="public value class HandleRef" />
  <TypeSignature Language="F#" Value="type HandleRef = struct" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="85255-101">Inclut dans un wrapper un objet managé contenant un handle vers une ressource transmise au code non managé à l’aide de l’appel de code non managé.</span><span class="sxs-lookup"><span data-stu-id="85255-101">Wraps a managed object holding a handle to a resource that is passed to unmanaged code using platform invoke.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="85255-102">En commençant par le .NET Framework 2.0, les fonctionnalités de la <xref:System.Runtime.InteropServices.HandleRef> classe a été remplacée par le <xref:System.Runtime.InteropServices.SafeHandle> classe et ses classes dérivées, comme ainsi que par la <xref:System.Runtime.InteropServices.CriticalHandle> classe.</span><span class="sxs-lookup"><span data-stu-id="85255-102">Starting with the .NET Framework 2.0, the functionality of the <xref:System.Runtime.InteropServices.HandleRef> class has been replaced by the <xref:System.Runtime.InteropServices.SafeHandle> class and its derived classes, as well as by the <xref:System.Runtime.InteropServices.CriticalHandle> class.</span></span>  
  
 <span data-ttu-id="85255-103">Si vous utilisez la plateforme pour appeler un objet managé et l’objet n’est pas référencé ailleurs après l’appel de code non managé, il est possible pour le garbage collector finalise l’objet managé.</span><span class="sxs-lookup"><span data-stu-id="85255-103">If you use platform invoke to call a managed object, and the object is not referenced elsewhere after the platform invoke call, it is possible for the garbage collector to finalize the managed object.</span></span> <span data-ttu-id="85255-104">Cette action libère la ressource et invalide le handle, à l’origine de la plateforme d’appel échoue.</span><span class="sxs-lookup"><span data-stu-id="85255-104">This action releases the resource and invalidates the handle, causing the platform invoke call to fail.</span></span> <span data-ttu-id="85255-105">Encapsulation d’un handle avec <xref:System.Runtime.InteropServices.HandleRef> garantit que l’objet managé n’est pas récupéré par garbage collection jusqu'à ce que l’appel non managé se termine.</span><span class="sxs-lookup"><span data-stu-id="85255-105">Wrapping a handle with <xref:System.Runtime.InteropServices.HandleRef> guarantees that the managed object is not garbage collected until the platform invoke call completes.</span></span> <span data-ttu-id="85255-106">Pour obtenir une description de la plateforme appellent des services, consultez [consommation de fonctions DLL non managées](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span><span class="sxs-lookup"><span data-stu-id="85255-106">For a description of platform invoke services, see [Consuming Unmanaged DLL Functions](~/docs/framework/interop/consuming-unmanaged-dll-functions.md).</span></span>  
  
 <span data-ttu-id="85255-107">Le <xref:System.Runtime.InteropServices.HandleRef> type valeur, par exemple <xref:System.Runtime.InteropServices.GCHandle>, est un type spécial reconnu par le marshaleur d’interopérabilité.</span><span class="sxs-lookup"><span data-stu-id="85255-107">The <xref:System.Runtime.InteropServices.HandleRef> value type, like <xref:System.Runtime.InteropServices.GCHandle>, is a special type recognized by the interop marshaler.</span></span> <span data-ttu-id="85255-108">Un élément normal, inopportune même si <xref:System.Runtime.InteropServices.GCHandle> empêche également d’une opération garbage collection, encore <xref:System.Runtime.InteropServices.HandleRef> offre de meilleures performances.</span><span class="sxs-lookup"><span data-stu-id="85255-108">A normal, nonpinned <xref:System.Runtime.InteropServices.GCHandle> also prevents untimely garbage collection, yet <xref:System.Runtime.InteropServices.HandleRef> provides better performance.</span></span> <span data-ttu-id="85255-109">Bien que l’utilisation <xref:System.Runtime.InteropServices.HandleRef> afin de maintenir un objet pour l’appel de la durée d’une plateforme est préférée, vous pouvez également utiliser le <xref:System.GC.KeepAlive%2A?displayProperty=nameWithType> méthode dans le même but.</span><span class="sxs-lookup"><span data-stu-id="85255-109">Although using <xref:System.Runtime.InteropServices.HandleRef> to keep an object alive for the duration of a platform invoke call is preferred, you can also use the <xref:System.GC.KeepAlive%2A?displayProperty=nameWithType> method for the same purpose.</span></span>  
  
 <span data-ttu-id="85255-110">Le <xref:System.Runtime.InteropServices.HandleRef> constructeur prend deux paramètres : un <xref:System.Object> représentant le wrapper et un <xref:System.IntPtr> représentant le handle non managé.</span><span class="sxs-lookup"><span data-stu-id="85255-110">The <xref:System.Runtime.InteropServices.HandleRef> constructor takes two parameters: an <xref:System.Object> representing the wrapper, and an <xref:System.IntPtr> representing the unmanaged handle.</span></span> <span data-ttu-id="85255-111">Le marshaleur d’interopérabilité passe uniquement le handle au code non managé et garantit que le wrapper (passé comme premier paramètre au constructeur de la `HandleRef`) reste actif pendant la durée de l’appel.</span><span class="sxs-lookup"><span data-stu-id="85255-111">The interop marshaler passes only the handle to unmanaged code, and guarantees that the wrapper (passed as the first parameter to the constructor of the `HandleRef`) remains alive for the duration of the call.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.SafeHandle" />
    <altmember cref="T:System.Runtime.InteropServices.CriticalHandle" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HandleRef (object wrapper, IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object wrapper, native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.HandleRef.#ctor(System.Object,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (wrapper As Object, handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HandleRef(System::Object ^ wrapper, IntPtr handle);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.HandleRef : obj * nativeint -&gt; System.Runtime.InteropServices.HandleRef" Usage="new System.Runtime.InteropServices.HandleRef (wrapper, handle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="wrapper" Type="System.Object" />
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="wrapper"><span data-ttu-id="85255-112">Objet managé qui ne doit pas être finalisé avant le retour de l'appel de plateforme.</span><span class="sxs-lookup"><span data-stu-id="85255-112">A managed object that should not be finalized until the platform invoke call returns.</span></span></param>
        <param name="handle"><span data-ttu-id="85255-113"><see cref="T:System.IntPtr" /> indiquant un handle vers une ressource.</span><span class="sxs-lookup"><span data-stu-id="85255-113">An <see cref="T:System.IntPtr" /> that indicates a handle to a resource.</span></span></param>
        <summary><span data-ttu-id="85255-114">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.InteropServices.HandleRef" /> avec l'objet à encapsuler et un handle vers la ressource utilisée par le code non managé.</span><span class="sxs-lookup"><span data-stu-id="85255-114">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.HandleRef" /> class with the object to wrap and a handle to the resource used by unmanaged code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.HandleRef.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Runtime.InteropServices.HandleRef.Handle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="85255-115">Obtient le handle vers une ressource.</span><span class="sxs-lookup"><span data-stu-id="85255-115">Gets the handle to a resource.</span></span></summary>
        <value><span data-ttu-id="85255-116">Handle vers une ressource.</span><span class="sxs-lookup"><span data-stu-id="85255-116">The handle to a resource.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Explicit">
      <MemberSignature Language="C#" Value="public static explicit operator IntPtr (System.Runtime.InteropServices.HandleRef value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname native int op_Explicit(valuetype System.Runtime.InteropServices.HandleRef value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.HandleRef.op_Explicit(System.Runtime.InteropServices.HandleRef)~System.IntPtr" />
      <MemberSignature Language="VB.NET" Value="Public Shared Narrowing Operator CType (value As HandleRef) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static explicit operator IntPtr(System::Runtime::InteropServices::HandleRef value);" />
      <MemberSignature Language="F#" Value="static member op_Explicit : System.Runtime.InteropServices.HandleRef -&gt; nativeint" Usage="System.Runtime.InteropServices.HandleRef.op_Explicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.HandleRef" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="85255-117">Objet qui nécessite un handle.</span><span class="sxs-lookup"><span data-stu-id="85255-117">The object that needs a handle.</span></span></param>
        <summary><span data-ttu-id="85255-118">Retourne le handle vers une ressource de l'objet <see cref="T:System.Runtime.InteropServices.HandleRef" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="85255-118">Returns the handle to a resource of the specified <see cref="T:System.Runtime.InteropServices.HandleRef" /> object.</span></span></summary>
        <returns><span data-ttu-id="85255-119">Handle vers une ressource de l'objet <see cref="T:System.Runtime.InteropServices.HandleRef" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="85255-119">The handle to a resource of the specified <see cref="T:System.Runtime.InteropServices.HandleRef" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="85255-120">La méthode équivalente pour cet opérateur est <xref:System.Runtime.InteropServices.HandleRef.Handle?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="85255-120">The equivalent method for this operator is <xref:System.Runtime.InteropServices.HandleRef.Handle?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToIntPtr">
      <MemberSignature Language="C#" Value="public static IntPtr ToIntPtr (System.Runtime.InteropServices.HandleRef value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig native int ToIntPtr(valuetype System.Runtime.InteropServices.HandleRef value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.HandleRef.ToIntPtr(System.Runtime.InteropServices.HandleRef)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToIntPtr (value As HandleRef) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static IntPtr ToIntPtr(System::Runtime::InteropServices::HandleRef value);" />
      <MemberSignature Language="F#" Value="static member ToIntPtr : System.Runtime.InteropServices.HandleRef -&gt; nativeint" Usage="System.Runtime.InteropServices.HandleRef.ToIntPtr value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.InteropServices.HandleRef" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="85255-121">Objet <see cref="T:System.Runtime.InteropServices.HandleRef" /> duquel récupérer une représentation interne sous forme d'entier.</span><span class="sxs-lookup"><span data-stu-id="85255-121">A <see cref="T:System.Runtime.InteropServices.HandleRef" /> object to retrieve an internal integer representation from.</span></span></param>
        <summary><span data-ttu-id="85255-122">Retourne la représentation interne sous forme d'entier d'un objet <see cref="T:System.Runtime.InteropServices.HandleRef" />.</span><span class="sxs-lookup"><span data-stu-id="85255-122">Returns the internal integer representation of a <see cref="T:System.Runtime.InteropServices.HandleRef" /> object.</span></span></summary>
        <returns><span data-ttu-id="85255-123">Objet <see cref="T:System.IntPtr" /> qui représente un objet <see cref="T:System.Runtime.InteropServices.HandleRef" />.</span><span class="sxs-lookup"><span data-stu-id="85255-123">An <see cref="T:System.IntPtr" /> object that represents a <see cref="T:System.Runtime.InteropServices.HandleRef" /> object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Wrapper">
      <MemberSignature Language="C#" Value="public object Wrapper { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Wrapper" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.HandleRef.Wrapper" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Wrapper As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Wrapper { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Wrapper : obj" Usage="System.Runtime.InteropServices.HandleRef.Wrapper" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="85255-124">Obtient l'objet contenant le handle vers une ressource.</span><span class="sxs-lookup"><span data-stu-id="85255-124">Gets the object holding the handle to a resource.</span></span></summary>
        <value><span data-ttu-id="85255-125">Objet contenant le handle vers une ressource.</span><span class="sxs-lookup"><span data-stu-id="85255-125">The object holding the handle to a resource.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>