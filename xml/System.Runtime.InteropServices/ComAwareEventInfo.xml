<Type Name="ComAwareEventInfo" FullName="System.Runtime.InteropServices.ComAwareEventInfo">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bfcc6fe573130661870788825a8e235b29322d4f" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53521573" /></Metadata><TypeSignature Language="C#" Value="public class ComAwareEventInfo : System.Reflection.EventInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComAwareEventInfo extends System.Reflection.EventInfo" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.ComAwareEventInfo" />
  <TypeSignature Language="VB.NET" Value="Public Class ComAwareEventInfo&#xA;Inherits EventInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComAwareEventInfo : System::Reflection::EventInfo" />
  <TypeSignature Language="F#" Value="type ComAwareEventInfo = class&#xA;    inherit EventInfo" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.InteropServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.EventInfo</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.5;netstandard-1.6;netcore-2.2">
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netcore-2.2">
      <AttributeName>System.Obsolete("ComAwareEventInfo may be unavailable in future releases.")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.1;netstandard-1.2;netframework-4.8">
      <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netstandard-1.2;netstandard-1.3;netstandard-1.4">
      <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="244b3-101">Autorise l’inscription à liaison tardive d’un gestionnaire d’événements.</span><span class="sxs-lookup"><span data-stu-id="244b3-101">Permits late-bound registration of an event handler.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="244b3-102">Normalement, compilateurs incorporeront automatiquement des appels à la <xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> et <xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> méthodes au lieu d’utiliser regular Gestionnaire méthodes add et remove gestionnaire pour les événements.</span><span class="sxs-lookup"><span data-stu-id="244b3-102">Normally, compilers will automatically embed calls to the <xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> and <xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> methods instead of using regular add handler and remove handler methods for events.</span></span> <span data-ttu-id="244b3-103">Cela se produit si l’interface que l’événement correspondant est défini doit être incorporé.</span><span class="sxs-lookup"><span data-stu-id="244b3-103">This occurs if the interface that the corresponding event is defined on needs to be embedded.</span></span>  
  
 <span data-ttu-id="244b3-104">Vous pouvez le spécifier en incorporant la totalité de l’assembly qui contient l’interface à l’aide de la **/link,** option sur les compilateurs ou en définissant le **incorporer les Types Interop** propriété `True` dans Visual Studio.</span><span class="sxs-lookup"><span data-stu-id="244b3-104">You can specify this by embedding the entire assembly that contains the interface by using the **/link** option on the compilers or by setting the **Embed Interop Types** property to `True` in Visual Studio.</span></span>  
  
 <span data-ttu-id="244b3-105">Le <xref:System.Runtime.InteropServices.ComAwareEventInfo> type dérive le <xref:System.Reflection.EventInfo> classe et substitue le <xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> et <xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> méthodes.</span><span class="sxs-lookup"><span data-stu-id="244b3-105">The <xref:System.Runtime.InteropServices.ComAwareEventInfo> type derives from the <xref:System.Reflection.EventInfo> class and overrides the <xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> and <xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> methods.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComAwareEventInfo (Type type, string eventName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string eventName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.#ctor(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComAwareEventInfo(Type ^ type, System::String ^ eventName);" />
      <MemberSignature Language="F#" Value="new System.Runtime.InteropServices.ComAwareEventInfo : Type * string -&gt; System.Runtime.InteropServices.ComAwareEventInfo" Usage="new System.Runtime.InteropServices.ComAwareEventInfo (type, eventName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="eventName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="244b3-106">Type d’objet.</span><span class="sxs-lookup"><span data-stu-id="244b3-106">The type of object.</span></span></param>
        <param name="eventName"><span data-ttu-id="244b3-107">Nom d’un événement sur <paramref name="type" />.</span><span class="sxs-lookup"><span data-stu-id="244b3-107">The name of an event on <paramref name="type" />.</span></span></param>
        <summary><span data-ttu-id="244b3-108">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> en utilisant le type spécifié et un nom d’événement sur le type.</span><span class="sxs-lookup"><span data-stu-id="244b3-108">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /> class by using the specified type and a name of the event on the type.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddEventHandler">
      <MemberSignature Language="C#" Value="public override void AddEventHandler (object target, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddEventHandler(object target, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddEventHandler (target As Object, handler As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddEventHandler(System::Object ^ target, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="override this.AddEventHandler : obj * Delegate -&gt; unit" Usage="comAwareEventInfo.AddEventHandler (target, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="244b3-109">Objet cible avec lequel le délégué d’événement doit créer une liaison.</span><span class="sxs-lookup"><span data-stu-id="244b3-109">The target object that the event delegate should bind to.</span></span></param>
        <param name="handler"><span data-ttu-id="244b3-110">Délégué d’événement.</span><span class="sxs-lookup"><span data-stu-id="244b3-110">The event delegate.</span></span></param>
        <summary><span data-ttu-id="244b3-111">Joint un gestionnaire d’événements à un objet COM.</span><span class="sxs-lookup"><span data-stu-id="244b3-111">Attaches an event handler to a COM object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="244b3-112">Cette méthode est similaire à la <xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> (méthode), sauf qu’elle vous permet de joindre des événements à des objets COM.</span><span class="sxs-lookup"><span data-stu-id="244b3-112">This method is similar to the <xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> method except that it allows you to attach events to COM objects.</span></span>  
  
 <span data-ttu-id="244b3-113">Si `target` est une COM de l’objet, cette méthode ajoute un délégué à un événement à l’aide de la <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="244b3-113">If `target` is a COM object, this method adds a delegate to an event by using the <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="244b3-114"><xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A> facilite l’inscription des récepteurs d’événement COM qui transfèrent les appels aux délégués managés correspondants.</span><span class="sxs-lookup"><span data-stu-id="244b3-114"><xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A> facilitates registering COM event sinks that forward calls to corresponding managed delegates.</span></span> <span data-ttu-id="244b3-115">Il requiert les informations suivantes :</span><span class="sxs-lookup"><span data-stu-id="244b3-115">It requires the following information:</span></span>  
  
-   <span data-ttu-id="244b3-116">L’objet cible lui-même (`target`).</span><span class="sxs-lookup"><span data-stu-id="244b3-116">The target object itself (`target`).</span></span>  
  
-   <span data-ttu-id="244b3-117">Le GUID de l’interface source.</span><span class="sxs-lookup"><span data-stu-id="244b3-117">The GUID of the source interface.</span></span>  
  
-   <span data-ttu-id="244b3-118">Le DispID de la méthode sur l’interface COM qui correspond à l’événement spécifié.</span><span class="sxs-lookup"><span data-stu-id="244b3-118">The DispID of the method on the COM interface that corresponds to the specified event.</span></span>  
  
-   <span data-ttu-id="244b3-119">Le délégué qui serait appelé lorsque l’objet COM déclenche l’événement correspondant (`handler`).</span><span class="sxs-lookup"><span data-stu-id="244b3-119">The delegate that would be invoked when the COM object triggers the corresponding event (`handler`).</span></span>  
  
 <span data-ttu-id="244b3-120"><xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A> recherche l’interface source COM correspondante (spécifiée comme premier paramètre de la <xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=nameWithType> constructeur).</span><span class="sxs-lookup"><span data-stu-id="244b3-120"><xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A> looks up the corresponding COM source interface (specified as the first parameter of the <xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=nameWithType> constructor).</span></span> <span data-ttu-id="244b3-121">Il recherche ensuite une méthode sur l’interface source dont le nom est identique au nom d’événement.</span><span class="sxs-lookup"><span data-stu-id="244b3-121">It then looks up a method on the source interface whose name is identical to the event name.</span></span> <span data-ttu-id="244b3-122">La valeur de `GuidAttribute` sur la source interface est le GUID passé à <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>; la valeur de `DispIDAttribute` sur la méthode est la valeur DispID passée à <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="244b3-122">The value of `GuidAttribute` on the source interface is the GUID that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>; the value of `DispIDAttribute` on the method is the DispID value that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="244b3-123">Pour opérer avec du code non managé.</span><span class="sxs-lookup"><span data-stu-id="244b3-123">for operating with unmanaged code.</span></span> <span data-ttu-id="244b3-124">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="244b3-124">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.Reflection.EventAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.EventAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ComAwareEventInfo.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As EventAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::EventAttributes Attributes { System::Reflection::EventAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Reflection.EventAttributes" Usage="System.Runtime.InteropServices.ComAwareEventInfo.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.EventAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="244b3-125">Obtient les attributs de cet événement.</span><span class="sxs-lookup"><span data-stu-id="244b3-125">Gets the attributes for this event.</span></span></summary>
        <value><span data-ttu-id="244b3-126">Les attributs en lecture seule de cet événement.</span><span class="sxs-lookup"><span data-stu-id="244b3-126">The read-only attributes for this event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="244b3-127">Les attributs sont retournés dans un entier de 4 octets, qui représente une image bitmap de l’ensemble d’attributs de l’événement réfléchi par cette instance.</span><span class="sxs-lookup"><span data-stu-id="244b3-127">The attributes are returned in a 4-byte integer, which represents a bitmap of the attributes set for the event that is reflected by this instance.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public override Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ComAwareEventInfo.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeclaringType : Type" Usage="System.Runtime.InteropServices.ComAwareEventInfo.DeclaringType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="244b3-128">Obtient la classe qui déclare ce membre.</span><span class="sxs-lookup"><span data-stu-id="244b3-128">Gets the class that declares this member.</span></span></summary>
        <value><span data-ttu-id="244b3-129">Le <see cref="T:System.Type" /> objet pour la classe qui déclare ce membre.</span><span class="sxs-lookup"><span data-stu-id="244b3-129">The <see cref="T:System.Type" /> object for the class that declares this member.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Reflection.MemberInfo.DeclaringType" />
      </Docs>
    </Member>
    <Member MemberName="GetAddMethod">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo GetAddMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo GetAddMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.GetAddMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAddMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodInfo ^ GetAddMethod(bool nonPublic);" />
      <MemberSignature Language="F#" Value="override this.GetAddMethod : bool -&gt; System.Reflection.MethodInfo" Usage="comAwareEventInfo.GetAddMethod nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic"><span data-ttu-id="244b3-130"><see langword="true" /> pour retourner des méthodes non publiques ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="244b3-130"><see langword="true" /> to return non-public methods; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="244b3-131">Obtient la méthode utilisée pour ajouter un délégué de gestionnaires d’événements à la source de l’événement.</span><span class="sxs-lookup"><span data-stu-id="244b3-131">Gets the method that was used to add an event handler delegate to the event source.</span></span></summary>
        <returns><span data-ttu-id="244b3-132">Méthode utilisée pour ajouter un délégué de gestionnaires d’événements à la source de l’événement.</span><span class="sxs-lookup"><span data-stu-id="244b3-132">The method that was used to add an event handler delegate to the event source.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="244b3-133">Cette méthode appelle la méthode <xref:System.Reflection.EventInfo.GetAddMethod%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="244b3-133">This method calls the <xref:System.Reflection.EventInfo.GetAddMethod%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="244b3-134"><paramref name="nonPublic" /> est <see langword="true" />, la méthode utilisée pour ajouter un délégué de gestionnaire d’événements est non publique mais l’appelant n’est pas autorisé à refléter les méthodes non publiques.</span><span class="sxs-lookup"><span data-stu-id="244b3-134"><paramref name="nonPublic" /> is <see langword="true" /> and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="244b3-135">En cas de substitution dans une classe dérivée, retourne tous les attributs appliqués à ce membre.</span><span class="sxs-lookup"><span data-stu-id="244b3-135">When overridden in a derived class, returns all attributes that are applied to this member.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : bool -&gt; obj[]" Usage="comAwareEventInfo.GetCustomAttributes inherit" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="244b3-136"><see langword="true" /> pour rechercher la chaîne d’héritage de ce membre afin de trouver les attributs ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="244b3-136"><see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="244b3-137">En cas de substitution dans une classe dérivée, obtient un tableau qui contient tous les attributs personnalisés appliqués à ce membre.</span><span class="sxs-lookup"><span data-stu-id="244b3-137">When overridden in a derived class, gets an array that contains all the custom attributes that are applied to this member.</span></span></summary>
        <returns><span data-ttu-id="244b3-138">Tableau contenant tous les attributs personnalisés ou tableau ne contenant aucun élément si aucun attribut n’a été défini.</span><span class="sxs-lookup"><span data-stu-id="244b3-138">An array that contains all the custom attributes, or an array that has no elements if no attributes were defined.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="244b3-139">Cette méthode appelle la <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> méthode sous-jacent <xref:System.Reflection.EventInfo> objet.</span><span class="sxs-lookup"><span data-stu-id="244b3-139">This method calls the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method of the underlying <xref:System.Reflection.EventInfo> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="244b3-140">Ce membre appartient à un type qui est chargé dans le contexte de réflexion uniquement.</span><span class="sxs-lookup"><span data-stu-id="244b3-140">This member belongs to a type that is loaded into the reflection-only context.</span></span> <span data-ttu-id="244b3-141">Voir [Guide pratique pour charger des assemblys dans le contexte de réflexion uniquement](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md).</span><span class="sxs-lookup"><span data-stu-id="244b3-141">See [How to: Load Assemblies into the Reflection-Only Context](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md).</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="244b3-142">Un type d’attribut personnalisé ne peut pas être chargé.</span><span class="sxs-lookup"><span data-stu-id="244b3-142">A custom attribute type cannot be loaded.</span></span></exception>
        <altmember cref="T:System.Reflection.MemberInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.GetCustomAttributes : Type * bool -&gt; obj[]" Usage="comAwareEventInfo.GetCustomAttributes (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="244b3-143">Type d’attribut à rechercher.</span><span class="sxs-lookup"><span data-stu-id="244b3-143">The attribute type to search for.</span></span> <span data-ttu-id="244b3-144">Seuls les attributs pouvant être assignés à ce type peuvent être retournés.</span><span class="sxs-lookup"><span data-stu-id="244b3-144">Only attributes that are assignable to this type can be returned.</span></span></param>
        <param name="inherit"><span data-ttu-id="244b3-145"><see langword="true" /> pour rechercher la chaîne d’héritage de ce membre afin de trouver les attributs ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="244b3-145"><see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="244b3-146">En cas de substitution dans une classe dérivée, obtient un tableau qui contient tous les attributs personnalisés du type spécifié qui sont appliqués à ce membre.</span><span class="sxs-lookup"><span data-stu-id="244b3-146">When overridden in a derived class, gets an array that contains all the custom attributes of the specified type that are applied to this member.</span></span></summary>
        <returns><span data-ttu-id="244b3-147">Tableau contenant tous les attributs personnalisés du type spécifié ou tableau ne contenant aucun élément si aucun attribut n’a été défini.</span><span class="sxs-lookup"><span data-stu-id="244b3-147">An array that contains all the custom attributes of the specified type, or an array that has no elements if no attributes were defined.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="244b3-148"><paramref name="attributeType" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="244b3-148"><paramref name="attributeType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="244b3-149">Ce membre appartient à un type qui est chargé dans le contexte de réflexion uniquement.</span><span class="sxs-lookup"><span data-stu-id="244b3-149">This member belongs to a type that is loaded into the reflection-only context.</span></span> <span data-ttu-id="244b3-150">Voir [Guide pratique pour charger des assemblys dans le contexte de réflexion uniquement](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md).</span><span class="sxs-lookup"><span data-stu-id="244b3-150">See [How to: Load Assemblies into the Reflection-Only Context](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md)</span></span></exception>
        <exception cref="T:System.TypeLoadException"><span data-ttu-id="244b3-151">Un type d’attribut personnalisé ne peut pas être chargé.</span><span class="sxs-lookup"><span data-stu-id="244b3-151">A custom attribute type cannot be loaded.</span></span></exception>
        <altmember cref="T:System.Reflection.MemberInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetRaiseMethod">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo GetRaiseMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo GetRaiseMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRaiseMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodInfo ^ GetRaiseMethod(bool nonPublic);" />
      <MemberSignature Language="F#" Value="override this.GetRaiseMethod : bool -&gt; System.Reflection.MethodInfo" Usage="comAwareEventInfo.GetRaiseMethod nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic"><span data-ttu-id="244b3-152"><see langword="true" /> pour retourner des méthodes non publiques ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="244b3-152"><see langword="true" /> to return non-public methods; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="244b3-153">En cas de substitution dans une classe dérivée, retourne la méthode appelée lorsque l’événement a été déclenché.</span><span class="sxs-lookup"><span data-stu-id="244b3-153">When overridden in a derived class, returns the method that was called when the event was raised.</span></span></summary>
        <returns><span data-ttu-id="244b3-154">Objet appelé lorsque l’événement a été déclenché.</span><span class="sxs-lookup"><span data-stu-id="244b3-154">The object that was called when the event was raised.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="244b3-155">Cette méthode retourne `null` pour les événements qui sont déclarés avec le langage c# `event` mot clé ou Visual Basic `Event` mot clé.</span><span class="sxs-lookup"><span data-stu-id="244b3-155">This method returns `null` for events that are declared with the C# `event` keyword or the Visual Basic `Event` keyword.</span></span> <span data-ttu-id="244b3-156">Il s’agit, car les compilateurs c# et Visual Basic ne génèrent pas d’une telle méthode.</span><span class="sxs-lookup"><span data-stu-id="244b3-156">This is because the C# and Visual Basic compilers do not generate such a method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="244b3-157"><paramref name="nonPublic" /> est <see langword="true" />, la méthode utilisée pour ajouter un délégué de gestionnaire d’événements est non publique mais l’appelant n’est pas autorisé à refléter les méthodes non publiques.</span><span class="sxs-lookup"><span data-stu-id="244b3-157"><paramref name="nonPublic" /> is <see langword="true" /> and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="244b3-158">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="244b3-158">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="244b3-159">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="244b3-159">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetRemoveMethod">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo GetRemoveMethod (bool nonPublic);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.MethodInfo GetRemoveMethod(bool nonPublic) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRemoveMethod(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRemoveMethod (nonPublic As Boolean) As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodInfo ^ GetRemoveMethod(bool nonPublic);" />
      <MemberSignature Language="F#" Value="override this.GetRemoveMethod : bool -&gt; System.Reflection.MethodInfo" Usage="comAwareEventInfo.GetRemoveMethod nonPublic" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="nonPublic" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="nonPublic"><span data-ttu-id="244b3-160"><see langword="true" /> pour retourner des méthodes non publiques ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="244b3-160"><see langword="true" /> to return non-public methods; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="244b3-161">En cas de substitution dans une classe dérivée, récupère l’objet <see cref="T:System.Reflection.MethodInfo" /> pour supprimer une méthode de l’événement.</span><span class="sxs-lookup"><span data-stu-id="244b3-161">When overridden in a derived class, retrieves the <see cref="T:System.Reflection.MethodInfo" /> object for removing a method of the event.</span></span></summary>
        <returns><span data-ttu-id="244b3-162">Méthode utilisée pour supprimer un délégué de gestionnaires d’événements de la source d’événements.</span><span class="sxs-lookup"><span data-stu-id="244b3-162">The method that was used to remove an event handler delegate from the event source.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="244b3-163"><paramref name="nonPublic" /> est <see langword="true" />, la méthode utilisée pour ajouter un délégué de gestionnaire d’événements est non publique mais l’appelant n’est pas autorisé à refléter les méthodes non publiques.</span><span class="sxs-lookup"><span data-stu-id="244b3-163"><paramref name="nonPublic" /> is <see langword="true" /> and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="244b3-164">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="244b3-164">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="244b3-165">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="244b3-165">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="T:System.Reflection.MethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberSignature Language="F#" Value="override this.IsDefined : Type * bool -&gt; bool" Usage="comAwareEventInfo.IsDefined (attributeType, inherit)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="244b3-166">Type d’attribut à rechercher.</span><span class="sxs-lookup"><span data-stu-id="244b3-166">The attribute type to search for.</span></span></param>
        <param name="inherit"><span data-ttu-id="244b3-167"><see langword="true" /> pour rechercher la chaîne d’héritage de ce membre afin de trouver les attributs ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="244b3-167"><see langword="true" /> to search this member's inheritance chain to find the attributes; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="244b3-168">Indique si une ou plusieurs instances de l’attribut spécifié sont appliquées à ce membre.</span><span class="sxs-lookup"><span data-stu-id="244b3-168">Indicates whether one or more instances of the specified attribute are applied to this member.</span></span></summary>
        <returns><span data-ttu-id="244b3-169"><see langword="true" /> si l’attribut spécifié a été appliqué à ce membre ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="244b3-169"><see langword="true" /> if the specified attribute has been applied to this member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="244b3-170">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="244b3-170">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="244b3-171">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="244b3-171">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Delegate" />
        <altmember cref="T:System.EventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ComAwareEventInfo.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Runtime.InteropServices.ComAwareEventInfo.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="244b3-172">Obtient le nom du membre actuel.</span><span class="sxs-lookup"><span data-stu-id="244b3-172">Gets the name of the current member.</span></span></summary>
        <value><span data-ttu-id="244b3-173">Nom de ce membre.</span><span class="sxs-lookup"><span data-stu-id="244b3-173">The name of this member.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Reflection.MemberInfo.Name" />
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public override Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.InteropServices.ComAwareEventInfo.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReflectedType : Type" Usage="System.Runtime.InteropServices.ComAwareEventInfo.ReflectedType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="244b3-174">Obtient l’objet de classe utilisé pour initialiser cette instance.</span><span class="sxs-lookup"><span data-stu-id="244b3-174">Gets the class object that was used to initialize this instance.</span></span></summary>
        <value><span data-ttu-id="244b3-175">Le <see cref="T:System.Type" /> objet qui a été utilisé pour initialiser l’objet actuel.</span><span class="sxs-lookup"><span data-stu-id="244b3-175">The <see cref="T:System.Type" /> object that was used to initialize the current object.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveEventHandler">
      <MemberSignature Language="C#" Value="public override void RemoveEventHandler (object target, Delegate handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveEventHandler(object target, class System.Delegate handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveEventHandler (target As Object, handler As Delegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveEventHandler(System::Object ^ target, Delegate ^ handler);" />
      <MemberSignature Language="F#" Value="override this.RemoveEventHandler : obj * Delegate -&gt; unit" Usage="comAwareEventInfo.RemoveEventHandler (target, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.InteropServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="handler" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="244b3-176">Objet cible auquel le délégué d’événement est lié.</span><span class="sxs-lookup"><span data-stu-id="244b3-176">The target object that the event delegate is bound to.</span></span></param>
        <param name="handler"><span data-ttu-id="244b3-177">Délégué d’événement.</span><span class="sxs-lookup"><span data-stu-id="244b3-177">The event delegate.</span></span></param>
        <summary><span data-ttu-id="244b3-178">Détache un gestionnaire d’événements à partir d’un objet COM.</span><span class="sxs-lookup"><span data-stu-id="244b3-178">Detaches an event handler from a COM object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="244b3-179">Cette méthode est similaire à la <xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> (méthode), à ceci près qu’elle vous permet de détacher des événements à partir des objets COM.</span><span class="sxs-lookup"><span data-stu-id="244b3-179">This method is similar to the <xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType> method, except that it allows you to detach events from COM objects.</span></span>  
  
 <span data-ttu-id="244b3-180">Si `target` est une COM de l’objet, cette méthode libère un délégué à un événement à l’aide de la <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="244b3-180">If `target` is a COM object, this method releases a delegate to an event by using the <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="244b3-181"><xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A> facilite la désinscription récepteurs d’événement COM qui transfèrent les appels aux délégués managés correspondants.</span><span class="sxs-lookup"><span data-stu-id="244b3-181"><xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A> facilitates unregistering COM event sinks that forward calls to corresponding managed delegates.</span></span> <span data-ttu-id="244b3-182">Il requiert les informations suivantes :</span><span class="sxs-lookup"><span data-stu-id="244b3-182">It requires the following information:</span></span>  
  
-   <span data-ttu-id="244b3-183">L’objet cible lui-même (`target`).</span><span class="sxs-lookup"><span data-stu-id="244b3-183">The target object itself (`target`).</span></span>  
  
-   <span data-ttu-id="244b3-184">Le GUID de l’interface source.</span><span class="sxs-lookup"><span data-stu-id="244b3-184">The GUID of the source interface.</span></span>  
  
-   <span data-ttu-id="244b3-185">Le DispID de la méthode sur l’interface COM qui correspond à l’événement spécifié.</span><span class="sxs-lookup"><span data-stu-id="244b3-185">The DispID of the method on the COM interface that corresponds to the specified event.</span></span>  
  
-   <span data-ttu-id="244b3-186">Le délégué qui serait appelé lorsque l’objet COM déclenche l’événement correspondant (`handler`).</span><span class="sxs-lookup"><span data-stu-id="244b3-186">The delegate that would be invoked when the COM object triggers the corresponding event (`handler`).</span></span>  
  
 <span data-ttu-id="244b3-187"><xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A> recherche l’interface source COM correspondante (spécifiée comme premier paramètre de la <xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=nameWithType> constructeur).</span><span class="sxs-lookup"><span data-stu-id="244b3-187"><xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A> looks up the corresponding COM source interface (specified as the first parameter of the <xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=nameWithType> constructor).</span></span> <span data-ttu-id="244b3-188">Il puis effectue une recherche sur une méthode sur l’interface source dont le nom est identique au nom d’événement.</span><span class="sxs-lookup"><span data-stu-id="244b3-188">It then it looks up a method on the source interface whose name is identical to the event name.</span></span> <span data-ttu-id="244b3-189">La valeur de `GuidAttribute` sur la source interface est le GUID passé à <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>; la valeur de `DispIDAttribute` sur la méthode est la valeur DispID passée à <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="244b3-189">The value of `GuidAttribute` on the source interface is the GUID that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>; the value of `DispIDAttribute` on the method is the DispID value that is passed to <xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="244b3-190">L’événement ne dispose pas d’un accesseur <see langword="remove" /> public.</span><span class="sxs-lookup"><span data-stu-id="244b3-190">The event does not have a public <see langword="remove" /> accessor.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="244b3-191">Impossible d’utiliser le gestionnaire qui a été transmis.</span><span class="sxs-lookup"><span data-stu-id="244b3-191">The handler that was passed in cannot be used.</span></span></exception>
        <exception cref="T:System.Reflection.TargetException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="244b3-192">Dans <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET pour les applications du Windows Store</see> ou la <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Bibliothèque de classes portable</see>, interceptez <see cref="T:System.Exception" /> à la place.</span><span class="sxs-lookup"><span data-stu-id="244b3-192">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch <see cref="T:System.Exception" /> instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="244b3-193">Le paramètre <paramref name="target" /> a la valeur <see langword="null" /> et l’événement n’est pas statique.</span><span class="sxs-lookup"><span data-stu-id="244b3-193">The <paramref name="target" /> parameter is <see langword="null" /> and the event is not static.</span></span>  
  
<span data-ttu-id="244b3-194">- ou -</span><span class="sxs-lookup"><span data-stu-id="244b3-194">-or-</span></span> 
<span data-ttu-id="244b3-195">Le <see cref="T:System.Reflection.EventInfo" /> n’est pas déclaré dans la cible.</span><span class="sxs-lookup"><span data-stu-id="244b3-195">The <see cref="T:System.Reflection.EventInfo" /> is not declared on the target.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><block subset="none" type="note">
            <para>  
 <span data-ttu-id="244b3-196">Dans <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET pour les applications du Windows Store</see> ou la <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Bibliothèque de classes portable</see>, interceptez l’exception de la classe de base, <see cref="T:System.MemberAccessException" />, à la place.</span><span class="sxs-lookup"><span data-stu-id="244b3-196">In the <see href="https://go.microsoft.com/fwlink/?LinkID=247912">.NET for Windows Store apps</see> or the <see href="https://docs.microsoft.com/dotnet/standard/cross-platform/cross-platform-development-with-the-portable-class-library">Portable Class Library</see>, catch the base class exception, <see cref="T:System.MemberAccessException" />, instead.</span></span>  
  
</para>
          </block>  
  
 <span data-ttu-id="244b3-197">L’appelant n’est pas autorisé à accéder au membre.</span><span class="sxs-lookup"><span data-stu-id="244b3-197">The caller does not have access permission to the member.</span></span></exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="244b3-198">Pour opérer avec du code non managé.</span><span class="sxs-lookup"><span data-stu-id="244b3-198">for operating with unmanaged code.</span></span> <span data-ttu-id="244b3-199">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span><span class="sxs-lookup"><span data-stu-id="244b3-199">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>