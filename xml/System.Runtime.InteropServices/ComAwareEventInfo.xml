<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ComAwareEventInfo.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a50bc1c6bf61c6387ace86a09185889744af6d54.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a50bc1c6bf61c6387ace86a09185889744af6d54</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.ComAwareEventInfo">
          <source>Permits late-bound registration of an event handler.</source>
          <target state="translated">Autorise l'inscription à liaison tardive d'un gestionnaire d'événements.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComAwareEventInfo">
          <source>Normally, compilers will automatically embed calls to the <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph> methods instead of using regular add handler and remove handler methods for events.</source>
          <target state="translated">Normalement, les compilateurs incorporeront automatiquement des appels à la <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph> et <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph> méthodes au lieu d’utiliser regular Gestionnaire méthodes add et remove Gestionnaire des événements.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComAwareEventInfo">
          <source>This occurs if the interface that the corresponding event is defined on needs to be embedded.</source>
          <target state="translated">Cela se produit si l’interface que l’événement correspondant est défini sur doit être incorporée.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComAwareEventInfo">
          <source>You can specify this by embedding the entire assembly that contains the interface by using the <bpt id="p1">**</bpt>/link<ept id="p1">**</ept> option on the compilers or by setting the <bpt id="p2">**</bpt>Embed Interop Types<ept id="p2">**</ept> property to <ph id="ph1">`True`</ph> in Visual Studio.</source>
          <target state="translated">Vous pouvez le spécifier en incorporant la totalité de l’assembly qui contient l’interface à l’aide de la <bpt id="p1">**</bpt>/link<ept id="p1">**</ept> option sur les compilateurs ou en définissant le <bpt id="p2">**</bpt>incorporer les Types Interop<ept id="p2">**</ept> propriété <ph id="ph1">`True`</ph> dans Visual Studio.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.InteropServices.ComAwareEventInfo">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo&gt;</ph> type derives from the <ph id="ph2">&lt;xref:System.Reflection.EventInfo&gt;</ph> class and overrides the <ph id="ph3">&lt;xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph> and <ph id="ph4">&lt;xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo&gt;</ph> type dérive le <ph id="ph2">&lt;xref:System.Reflection.EventInfo&gt;</ph> classe et substitue le <ph id="ph3">&lt;xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph> et <ph id="ph4">&lt;xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.#ctor(System.Type,System.String)">
          <source>The type of object.</source>
          <target state="translated">Type d'objet.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.#ctor(System.Type,System.String)">
          <source>The name of an event on <bpt id="p1">&lt;c&gt;</bpt>type<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Nom d’un événement sur <bpt id="p1">&lt;c&gt;</bpt>type<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.#ctor(System.Type,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /&gt;</ph> class by using the specified type and a name of the event on the type.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Runtime.InteropServices.ComAwareEventInfo" /&gt;</ph> en utilisant le type spécifié et un nom d'événement sur le type.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>The target object that the event delegate should bind to.</source>
          <target state="translated">Objet cible avec lequel le délégué d'événement doit créer une liaison.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>The event delegate.</source>
          <target state="translated">Le délégué d’événement.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>Attaches an event handler to a COM object.</source>
          <target state="translated">Attache un gestionnaire d'événements à un objet COM.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph> method except that it allows you to attach events to COM objects.</source>
          <target state="translated">Cette méthode est similaire à la <ph id="ph1">&lt;xref:System.Reflection.EventInfo.AddEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph> (méthode), sauf qu’elle vous permet de joindre des événements à des objets COM.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>If <ph id="ph1">`target`</ph> is a COM object, this method adds a delegate to an event by using the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Si <ph id="ph1">`target`</ph> est une COM de l’objet, cette méthode ajoute un délégué à un événement à l’aide de la <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A&gt;</ph> facilitates registering COM event sinks that forward calls to corresponding managed delegates.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A&gt;</ph> facilite l’inscription des récepteurs d’événement COM qui transfèrent les appels aux délégués managés correspondants.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>It requires the following information:</source>
          <target state="translated">Elle requiert les informations suivantes :</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>The target object itself (<ph id="ph1">`target`</ph>).</source>
          <target state="translated">L’objet cible lui-même (<ph id="ph1">`target`</ph>).</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>The GUID of the source interface.</source>
          <target state="translated">Le GUID de l’interface source.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>The DispID of the method on the COM interface that corresponds to the specified event.</source>
          <target state="translated">Le DispID de la méthode sur l’interface COM qui correspond à l’événement spécifié.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>The delegate that would be invoked when the COM object triggers the corresponding event (<ph id="ph1">`handler`</ph>).</source>
          <target state="translated">Le délégué qui serait appelé lorsque l’objet COM déclenche l’événement correspondant (<ph id="ph1">`handler`</ph>).</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A&gt;</ph> looks up the corresponding COM source interface (specified as the first parameter of the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=nameWithType&gt;</ph> constructor).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler%2A&gt;</ph> recherche l’interface source COM correspondante (spécifiée comme premier paramètre de la <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=nameWithType&gt;</ph> constructeur).</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>It then looks up a method on the source interface whose name is identical to the event name.</source>
          <target state="translated">Il recherche ensuite une méthode sur l’interface source dont le nom est identique au nom de l’événement.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>The value of <ph id="ph1">`GuidAttribute`</ph> on the source interface is the GUID that is passed to <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph>; the value of <ph id="ph3">`DispIDAttribute`</ph> on the method is the DispID value that is passed to <ph id="ph4">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">La valeur de <ph id="ph1">`GuidAttribute`</ph> sur la source interface est le GUID passé à <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph>; la valeur de <ph id="ph3">`DispIDAttribute`</ph> sur la méthode est la valeur DispID passée à <ph id="ph4">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Combine%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>for operating with unmanaged code.</source>
          <target state="translated">Pour opérer avec du code non managé.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.AddEventHandler(System.Object,System.Delegate)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices.ComAwareEventInfo.Attributes">
          <source>Gets the attributes for this event.</source>
          <target state="translated">Obtient les attributs de cet événement.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.ComAwareEventInfo.Attributes">
          <source>The read-only attributes for this event.</source>
          <target state="translated">Attributs en lecture seule de cet événement.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.ComAwareEventInfo.Attributes">
          <source>The attributes are returned in a 4-byte integer, which represents a bitmap of the attributes set for the event that is reflected by this instance.</source>
          <target state="translated">Les attributs sont retournés dans un entier de 4 octets, qui représente une image bitmap de l’ensemble d’attributs de l’événement réfléchi par cette instance.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices.ComAwareEventInfo.DeclaringType">
          <source>Gets the class that declares this member.</source>
          <target state="translated">Obtient la classe qui déclare ce membre.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.ComAwareEventInfo.DeclaringType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object for the class that declares this member.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> de la classe qui déclare ce membre.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetAddMethod(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to return non-public methods; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour retourner des méthodes non publiques ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetAddMethod(System.Boolean)">
          <source>Gets the method that was used to add an event handler delegate to the event source.</source>
          <target state="translated">Obtient la méthode utilisée pour ajouter un délégué de gestionnaires d'événements à la source de l'événement.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetAddMethod(System.Boolean)">
          <source>The method that was used to add an event handler delegate to the event source.</source>
          <target state="translated">Méthode utilisée pour ajouter un délégué de gestionnaires d'événements à la source de l'événement.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetAddMethod(System.Boolean)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Reflection.EventInfo.GetAddMethod%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Cette méthode appelle la méthode <ph id="ph1">&lt;xref:System.Reflection.EventInfo.GetAddMethod%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetAddMethod(System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="nonPublic" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph> and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="nonPublic" /&gt;</ph> est <ph id="ph2">&lt;see langword="true" /&gt;</ph>, la méthode utilisée pour ajouter un délégué de gestionnaire d'événements est non publique mais l'appelant n'est pas autorisé à refléter les méthodes non publiques.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="T:System.Runtime.InteropServices.ComAwareEventInfo">
          <source>When overridden in a derived class, returns all attributes that are applied to this member.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, retourne tous les attributs appliqués à ce membre.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to search this member's inheritance chain to find the attributes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour rechercher la chaîne d’héritage de ce membre afin de trouver les attributs ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Boolean)">
          <source>When overridden in a derived class, gets an array that contains all the custom attributes that are applied to this member.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, obtient un tableau qui contient tous les attributs personnalisés appliqués à ce membre.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Boolean)">
          <source>An array that contains all the custom attributes, or an array that has no elements if no attributes were defined.</source>
          <target state="translated">Tableau contenant tous les attributs personnalisés ou tableau ne contenant aucun élément si aucun attribut n'a été défini.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Boolean)">
          <source>This method calls the <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> method of the underlying <ph id="ph2">&lt;xref:System.Reflection.EventInfo&gt;</ph> object.</source>
          <target state="translated">Cette méthode appelle la <ph id="ph1">&lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A&gt;</ph> méthode sous-jacent <ph id="ph2">&lt;xref:System.Reflection.EventInfo&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Boolean)">
          <source>This member belongs to a type that is loaded into the reflection-only context.</source>
          <target state="translated">Ce membre appartient à un type qui est chargé dans le contexte de réflexion uniquement.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Boolean)">
          <source>See <bpt id="p1">[</bpt>How to: Load Assemblies into the Reflection-Only Context<ept id="p1">](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md)</ept>.</source>
          <target state="translated">Voir <bpt id="p1">[</bpt>Guide pratique pour charger des assemblys dans le contexte de réflexion uniquement<ept id="p1">](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md)</ept>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Boolean)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Un type d’attribut personnalisé ne peut pas être chargé.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)">
          <source>The attribute type to search for.</source>
          <target state="translated">Type d'attribut à rechercher.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)">
          <source>Only attributes that are assignable to this type can be returned.</source>
          <target state="translated">Seuls les attributs pouvant être assignés à ce type peuvent être retournés.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to search this member's inheritance chain to find the attributes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour rechercher la chaîne d’héritage de ce membre afin de trouver les attributs ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)">
          <source>When overridden in a derived class, gets an array that contains all the custom attributes of the specified type that are applied to this member.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, obtient un tableau qui contient tous les attributs personnalisés du type spécifié qui sont appliqués à ce membre.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)">
          <source>An array that contains all the custom attributes of the specified type, or an array that has no elements if no attributes were defined.</source>
          <target state="translated">Tableau contenant tous les attributs personnalisés du type spécifié ou tableau ne contenant aucun élément si aucun attribut n'a été défini.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="attributeType" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)">
          <source>This member belongs to a type that is loaded into the reflection-only context.</source>
          <target state="translated">Ce membre appartient à un type qui est chargé dans le contexte de réflexion uniquement.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)">
          <source>See <bpt id="p1">[</bpt>How to: Load Assemblies into the Reflection-Only Context<ept id="p1">](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md)</ept></source>
          <target state="translated">Consultez <bpt id="p1">[</bpt>Guide pratique pour charger des assemblys dans le contexte de réflexion uniquement<ept id="p1">](~/docs/framework/reflection-and-codedom/how-to-load-assemblies-into-the-reflection-only-context.md)</ept></target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetCustomAttributes(System.Type,System.Boolean)">
          <source>A custom attribute type cannot be loaded.</source>
          <target state="translated">Un type d’attribut personnalisé ne peut pas être chargé.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to return non-public methods; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour retourner des méthodes non publiques ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)">
          <source>When overridden in a derived class, returns the method that was called when the event was raised.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, retourne la méthode appelée lorsque l'événement a été déclenché.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)">
          <source>The object that was called when the event was raised.</source>
          <target state="translated">Objet appelé lorsque l'événement a été déclenché.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)">
          <source>This method returns <ph id="ph1">`null`</ph> for events that are declared with the C# <ph id="ph2">`event`</ph> keyword or the Visual Basic <ph id="ph3">`Event`</ph> keyword.</source>
          <target state="translated">Cette méthode retourne <ph id="ph1">`null`</ph> pour les événements qui sont déclarés à l’aide du langage c# <ph id="ph2">`event`</ph> (mot clé) ou Visual Basic <ph id="ph3">`Event`</ph> (mot clé).</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)">
          <source>This is because the C# and Visual Basic compilers do not generate such a method.</source>
          <target state="translated">Il s’agit, car les compilateurs c# et Visual Basic ne génèrent pas d’une telle méthode.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="nonPublic" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph> and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="nonPublic" /&gt;</ph> est <ph id="ph2">&lt;see langword="true" /&gt;</ph>, la méthode utilisée pour ajouter un délégué de gestionnaire d'événements est non publique mais l'appelant n'est pas autorisé à refléter les méthodes non publiques.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)">
          <source>when invoked late-bound through mechanisms such as <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /&gt;</ph>.</source>
          <target state="translated">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRaiseMethod(System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRemoveMethod(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to return non-public methods; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour retourner des méthodes non publiques ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRemoveMethod(System.Boolean)">
          <source>When overridden in a derived class, retrieves the <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> object for removing a method of the event.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, récupère l'objet <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> pour supprimer une méthode de l'événement.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRemoveMethod(System.Boolean)">
          <source>The method that was used to remove an event handler delegate from the event source.</source>
          <target state="translated">Méthode utilisée pour supprimer un délégué de gestionnaires d'événements de la source d'événements.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRemoveMethod(System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="nonPublic" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph> and the method used to add an event handler delegate is non-public, but the caller does not have permission to reflect on non-public methods.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="nonPublic" /&gt;</ph> est <ph id="ph2">&lt;see langword="true" /&gt;</ph>, la méthode utilisée pour ajouter un délégué de gestionnaire d'événements est non publique mais l'appelant n'est pas autorisé à refléter les méthodes non publiques.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRemoveMethod(System.Boolean)">
          <source>when invoked late-bound through mechanisms such as <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /&gt;</ph>.</source>
          <target state="translated">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.GetRemoveMethod(System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.IsDefined(System.Type,System.Boolean)">
          <source>The attribute type to search for.</source>
          <target state="translated">Type d'attribut à rechercher.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.IsDefined(System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to search this member's inheritance chain to find the attributes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour rechercher la chaîne d’héritage de ce membre afin de trouver les attributs ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.IsDefined(System.Type,System.Boolean)">
          <source>Indicates whether one or more instances of the specified attribute are applied to this member.</source>
          <target state="translated">Indique si une ou plusieurs instances de l'attribut spécifié sont appliquées à ce membre.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.IsDefined(System.Type,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified attribute has been applied to this member; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'attribut spécifié a été appliqué à ce membre ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.IsDefined(System.Type,System.Boolean)">
          <source>when invoked late-bound through mechanisms such as <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /&gt;</ph>.</source>
          <target state="translated">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <ph id="ph1">&lt;see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.IsDefined(System.Type,System.Boolean)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices.ComAwareEventInfo.Name">
          <source>Gets the name of the current member.</source>
          <target state="translated">Obtient le nom du membre actuel.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.ComAwareEventInfo.Name">
          <source>The name of this member.</source>
          <target state="translated">Nom de ce membre.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="P:System.Runtime.InteropServices.ComAwareEventInfo.ReflectedType">
          <source>Gets the class object that was used to initialize this instance.</source>
          <target state="translated">Obtient l'objet de classe utilisé pour initialiser cette instance.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.InteropServices.ComAwareEventInfo.ReflectedType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> object that was used to initialize the current object.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> qui a été utilisé pour initialiser l'objet actif.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The target object that the event delegate is bound to.</source>
          <target state="translated">L’objet cible auquel le délégué d’événement est lié.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The event delegate.</source>
          <target state="translated">Le délégué d’événement.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>Detaches an event handler from a COM object.</source>
          <target state="translated">Détache un gestionnaire d’événements à partir d’un objet COM.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>This method is similar to the <ph id="ph1">&lt;xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph> method, except that it allows you to detach events from COM objects.</source>
          <target state="translated">Cette méthode est similaire à la <ph id="ph1">&lt;xref:System.Reflection.EventInfo.RemoveEventHandler%28System.Object%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph> (méthode), à ceci près qu’elle vous permet de détacher des événements à partir des objets COM.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>If <ph id="ph1">`target`</ph> is a COM object, this method releases a delegate to an event by using the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">Si <ph id="ph1">`target`</ph> est une COM de l’objet, cette méthode libère un délégué d’un événement à l’aide de la <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A&gt;</ph> facilitates unregistering COM event sinks that forward calls to corresponding managed delegates.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A&gt;</ph> facilite la désinscription du récepteurs d’événement COM qui transfèrent les appels aux délégués managés correspondants.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>It requires the following information:</source>
          <target state="translated">Elle requiert les informations suivantes :</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The target object itself (<ph id="ph1">`target`</ph>).</source>
          <target state="translated">L’objet cible lui-même (<ph id="ph1">`target`</ph>).</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The GUID of the source interface.</source>
          <target state="translated">Le GUID de l’interface source.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The DispID of the method on the COM interface that corresponds to the specified event.</source>
          <target state="translated">Le DispID de la méthode sur l’interface COM qui correspond à l’événement spécifié.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The delegate that would be invoked when the COM object triggers the corresponding event (<ph id="ph1">`handler`</ph>).</source>
          <target state="translated">Le délégué qui serait appelé lorsque l’objet COM déclenche l’événement correspondant (<ph id="ph1">`handler`</ph>).</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source><ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A&gt;</ph> looks up the corresponding COM source interface (specified as the first parameter of the <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=nameWithType&gt;</ph> constructor).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler%2A&gt;</ph> recherche l’interface source COM correspondante (spécifiée comme premier paramètre de la <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComEventInterfaceAttribute.%23ctor%28System.Type%2CSystem.Type%29?displayProperty=nameWithType&gt;</ph> constructeur).</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>It then it looks up a method on the source interface whose name is identical to the event name.</source>
          <target state="translated">Il puis effectue une recherche sur une méthode sur l’interface source dont le nom est identique au nom de l’événement.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The value of <ph id="ph1">`GuidAttribute`</ph> on the source interface is the GUID that is passed to <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph>; the value of <ph id="ph3">`DispIDAttribute`</ph> on the method is the DispID value that is passed to <ph id="ph4">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">La valeur de <ph id="ph1">`GuidAttribute`</ph> sur la source interface est le GUID passé à <ph id="ph2">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph>; la valeur de <ph id="ph3">`DispIDAttribute`</ph> sur la méthode est la valeur DispID passée à <ph id="ph4">&lt;xref:System.Runtime.InteropServices.ComEventsHelper.Remove%28System.Object%2CSystem.Guid%2CSystem.Int32%2CSystem.Delegate%29?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The event does not have a public <ph id="ph1">&lt;see langword="remove" /&gt;</ph> accessor.</source>
          <target state="translated">L’événement ne dispose pas d’un accesseur <ph id="ph1">&lt;see langword="remove" /&gt;</ph> public.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The handler that was passed in cannot be used.</source>
          <target state="translated">Impossible d’utiliser le gestionnaire qui a été transmis.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>In the <bpt id="p1">[</bpt>.NET for Windows Store apps<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id="p2">[</bpt>Portable Class Library<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, catch <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> instead.</source>
          <target state="translated">Dans <bpt id="p1">[</bpt>.NET pour les applications du Windows Store<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> ou la <bpt id="p2">[</bpt>Bibliothèque de classes portable<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, interceptez <ph id="ph1">&lt;see cref="T:System.Exception" /&gt;</ph> à la place.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The <ph id="ph1">&lt;paramref name="target" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph> and the event is not static.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="target" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph> et l’événement n’est pas statique.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> is not declared on the target.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Reflection.EventInfo" /&gt;</ph> n’est pas déclaré dans la cible.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>In the <bpt id="p1">[</bpt>.NET for Windows Store apps<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> or the <bpt id="p2">[</bpt>Portable Class Library<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, catch the base class exception, <ph id="ph1">&lt;see cref="T:System.MemberAccessException" /&gt;</ph>, instead.</source>
          <target state="translated">Dans <bpt id="p1">[</bpt>.NET pour les applications du Windows Store<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=247912)</ept> ou la <bpt id="p2">[</bpt>Bibliothèque de classes portable<ept id="p2">](~/docs/standard/cross-platform/cross-platform-development-with-the-portable-class-library.md)</ept>, interceptez l’exception de la classe de base, <ph id="ph1">&lt;see cref="T:System.MemberAccessException" /&gt;</ph>, à la place.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>The caller does not have access permission to the member.</source>
          <target state="translated">L’appelant n’est pas autorisé à accéder au membre.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>for operating with unmanaged code.</source>
          <target state="translated">Pour opérer avec du code non managé.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.InteropServices.ComAwareEventInfo.RemoveEventHandler(System.Object,System.Delegate)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Énumération associée : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>