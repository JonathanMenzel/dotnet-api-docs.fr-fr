<Type Name="OutAttribute" FullName="System.Runtime.InteropServices.OutAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bc83c194c574bc1fa62df28fa811b2ca6701020a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36633181" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class OutAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit OutAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.OutAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class OutAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class OutAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type OutAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Parameter, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="7c55c-101">Indique que les données doivent être marshalées depuis l’appelé vers l’appelant.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7c55c-101">Indicates that data should be marshaled from callee back to caller.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c55c-102">Vous pouvez appliquer cet attribut à des paramètres.</span><span class="sxs-lookup"><span data-stu-id="7c55c-102">You can apply this attribute to parameters.</span></span>  
  
 <span data-ttu-id="7c55c-103">Le <xref:System.Runtime.InteropServices.OutAttribute> est facultatif.</span><span class="sxs-lookup"><span data-stu-id="7c55c-103">The <xref:System.Runtime.InteropServices.OutAttribute> is optional.</span></span> <span data-ttu-id="7c55c-104">L’attribut est pris en charge pour COM interop et l’appel de plateforme uniquement.</span><span class="sxs-lookup"><span data-stu-id="7c55c-104">The attribute is supported for COM interop and platform invoke only.</span></span> <span data-ttu-id="7c55c-105">En l’absence de paramètres explicites, le marshaleur d’interopérabilité suppose règles basées sur le paramètre de type, si le paramètre est passé par référence ou par valeur et si le type est blittable ou non blittables.</span><span class="sxs-lookup"><span data-stu-id="7c55c-105">In the absence of explicit settings, the interop marshaler assumes rules based on the parameter type, whether the parameter is passed by reference or by value, and whether the type is blittable or non-blittable.</span></span> <span data-ttu-id="7c55c-106">Par exemple, la <xref:System.Text.StringBuilder> classe est toujours censé pour être In/Out et un tableau de chaînes passé par valeur est supposé se trouver dans.</span><span class="sxs-lookup"><span data-stu-id="7c55c-106">For example, the <xref:System.Text.StringBuilder> class is always assumed to be In/Out and an array of strings passed by value is assumed to be In.</span></span>  
  
 <span data-ttu-id="7c55c-107">Sortie seule n’est jamais un comportement pour les paramètres de marshaling par défaut.</span><span class="sxs-lookup"><span data-stu-id="7c55c-107">Out-only behavior is never a default marshaling behavior for parameters.</span></span> <span data-ttu-id="7c55c-108">Vous pouvez appliquer la <xref:System.Runtime.InteropServices.OutAttribute> pour les types valeur et référence passés par référence à modifier In/Out le comportement de sortie seule, ce qui est équivalente à l’aide la `out` mot clé en c#.</span><span class="sxs-lookup"><span data-stu-id="7c55c-108">You can apply the <xref:System.Runtime.InteropServices.OutAttribute> to value and reference types passed by reference to change In/Out behavior to Out-only behavior, which is equivalent to using the `out` keyword in C#.</span></span> <span data-ttu-id="7c55c-109">Par exemple, les tableaux passés par valeur, marshalé en tant que paramètres In seule par défaut, peuvent être modifiés en sortie seule.</span><span class="sxs-lookup"><span data-stu-id="7c55c-109">For example, arrays passed by value, marshaled as In-only parameters by default, can be changed to Out-only.</span></span> <span data-ttu-id="7c55c-110">Toutefois, le comportement ne fournit pas toujours sémantique attendue lorsque les types comprennent des éléments blittables ou champs étant donné que le marshaleur d’interopérabilité utilise l’épinglage.</span><span class="sxs-lookup"><span data-stu-id="7c55c-110">However, the behavior does not always provide expected semantics when the types include all-blittable elements or fields because the interop marshaler uses pinning.</span></span> <span data-ttu-id="7c55c-111">Si vous ne souhaitez pas sur la transmission des données à l’appelé, sortie seule marshaling peut offrir de meilleures performances pour les types non blittables.</span><span class="sxs-lookup"><span data-stu-id="7c55c-111">If you do not care about passing data into the callee, Out-only marshaling can provide better performance for non-blittable types.</span></span>  
  
 <span data-ttu-id="7c55c-112">Combinaison de la <xref:System.Runtime.InteropServices.InAttribute> et <xref:System.Runtime.InteropServices.OutAttribute> est particulièrement utile lorsque aux tableaux et formatés et non blittables.</span><span class="sxs-lookup"><span data-stu-id="7c55c-112">Combining the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> is particularly useful when applied to arrays and formatted, non-blittable types.</span></span> <span data-ttu-id="7c55c-113">Les appelants voient les modifications apportées par un appelant à ces types uniquement lorsque vous appliquez les deux attributs.</span><span class="sxs-lookup"><span data-stu-id="7c55c-113">Callers see the changes a callee makes to these types only when you apply both attributes.</span></span> <span data-ttu-id="7c55c-114">Ces types nécessitant une copie durant le marshaling, vous pouvez utiliser <xref:System.Runtime.InteropServices.InAttribute> et <xref:System.Runtime.InteropServices.OutAttribute> afin de réduire les copies non nécessaires.</span><span class="sxs-lookup"><span data-stu-id="7c55c-114">Since these types require copying during marshaling, you can use <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to reduce unnecessary copies.</span></span>  
  
 <span data-ttu-id="7c55c-115">Pour plus d’informations sur l’effet de <xref:System.Runtime.InteropServices.OutAttribute> sur le comportement de marshaling, consultez [attributs directionnels](http://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span><span class="sxs-lookup"><span data-stu-id="7c55c-115">For more information on the effect of <xref:System.Runtime.InteropServices.OutAttribute> on marshaling behavior, see [Directional Attributes](http://msdn.microsoft.com/library/241ac5b5-928e-4969-8f58-1dbc048f9ea2).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c55c-116">L’exemple suivant montre comment appliquer le <xref:System.Runtime.InteropServices.InAttribute> et <xref:System.Runtime.InteropServices.OutAttribute> à une plateforme prototype d’appel qui passe un tableau en tant que paramètre.</span><span class="sxs-lookup"><span data-stu-id="7c55c-116">The following example shows how to apply the <xref:System.Runtime.InteropServices.InAttribute> and <xref:System.Runtime.InteropServices.OutAttribute> to a platform invoke prototype that passes an array as a parameter.</span></span> <span data-ttu-id="7c55c-117">La combinaison d’attributs directionnels permet à l’appelant voir les modifications apportées par l’appelé.</span><span class="sxs-lookup"><span data-stu-id="7c55c-117">The combination of directional attributes allows the caller to see the changes made by the callee.</span></span>  
  
 [!code-cpp[Interop InOutParameters#1](~/samples/snippets/cpp/VS_Snippets_CLR/Interop InOutParameters/CPP/inout.cpp#1)]
 [!code-csharp[Interop InOutParameters#1](~/samples/snippets/csharp/VS_Snippets_CLR/Interop InOutParameters/CS/inout.cs#1)]
 [!code-vb[Interop InOutParameters#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Interop InOutParameters/VB/inout.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.InteropServices.InAttribute" />
    <altmember cref="T:System.Text.StringBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OutAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.OutAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OutAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7c55c-118">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.InteropServices.OutAttribute" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7c55c-118">Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.OutAttribute" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>