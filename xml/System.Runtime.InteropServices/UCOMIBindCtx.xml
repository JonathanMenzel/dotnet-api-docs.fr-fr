<Type Name="UCOMIBindCtx" FullName="System.Runtime.InteropServices.UCOMIBindCtx">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2f57e1eade7853b605e8c9ddaea88144041395b3" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52225530" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface UCOMIBindCtx" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract UCOMIBindCtx" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.UCOMIBindCtx" />
  <TypeSignature Language="VB.NET" Value="Public Interface UCOMIBindCtx" />
  <TypeSignature Language="C++ CLI" Value="public interface class UCOMIBindCtx" />
  <TypeSignature Language="F#" Value="type UCOMIBindCtx = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Obsolete</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.Guid("0000000e-0000-0000-c000-000000000046")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.Guid("0000000e-0000-0000-C000-000000000046")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("Use System.Runtime.InteropServices.ComTypes.IBindCtx instead. http://go.microsoft.com/fwlink/?linkid=14202", false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Utilisez plutôt <see cref="T:System.Runtime.InteropServices.ComTypes.BIND_OPTS" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations, consultez la documentation existante pour `IBindCtx` dans le sous-dossier com de MSDN library.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="EnumObjectParam">
      <MemberSignature Language="C#" Value="public void EnumObjectParam (out System.Runtime.InteropServices.UCOMIEnumString ppenum);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnumObjectParam([out] class System.Runtime.InteropServices.UCOMIEnumString&amp; ppenum) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIBindCtx.EnumObjectParam(System.Runtime.InteropServices.UCOMIEnumString@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EnumObjectParam (ByRef ppenum As UCOMIEnumString)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EnumObjectParam([Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIEnumString ^ % ppenum);" />
      <MemberSignature Language="F#" Value="abstract member EnumObjectParam :  -&gt; unit" Usage="uCOMIBindCtx.EnumObjectParam ppenum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppenum" Type="System.Runtime.InteropServices.UCOMIEnumString" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppenum">Lors d'un retour, référence à l'énumérateur du paramètre d'objet.</param>
        <summary>Énumère les chaînes correspondant aux clés de la table de paramètres d'objets contextuels mise à jour en interne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations, consultez la documentation existante pour `IBindCtx::EnumObjectParam` dans MSDN library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBindOptions">
      <MemberSignature Language="C#" Value="public void GetBindOptions (ref System.Runtime.InteropServices.BIND_OPTS pbindopts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetBindOptions(valuetype System.Runtime.InteropServices.BIND_OPTS&amp; pbindopts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIBindCtx.GetBindOptions(System.Runtime.InteropServices.BIND_OPTS@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetBindOptions (ByRef pbindopts As BIND_OPTS)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetBindOptions(System::Runtime::InteropServices::BIND_OPTS % pbindopts);" />
      <MemberSignature Language="F#" Value="abstract member GetBindOptions :  -&gt; unit" Usage="uCOMIBindCtx.GetBindOptions pbindopts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbindopts" Type="System.Runtime.InteropServices.BIND_OPTS" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="pbindopts">Pointeur vers la structure qui doit recevoir les options de liaison.</param>
        <summary>Retourne les options de liaison en cours stockées dans ce contexte de liaison.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations, consultez la documentation existante pour `IBindCtx::GetBindOptions` dans MSDN library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectParam">
      <MemberSignature Language="C#" Value="public void GetObjectParam (string pszKey, out object ppunk);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectParam(string pszKey, [out] object&amp; ppunk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIBindCtx.GetObjectParam(System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectParam (pszKey As String, ByRef ppunk As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetObjectParam(System::String ^ pszKey, [Runtime::InteropServices::Out] System::Object ^ % ppunk);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectParam : string *  -&gt; unit" Usage="uCOMIBindCtx.GetObjectParam (pszKey, ppunk)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pszKey" Type="System.String" />
        <Parameter Name="ppunk" Type="System.Object" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pszKey">Nom de l'objet à rechercher.</param>
        <param name="ppunk">Le pointeur d'interface objet, lors d'un retour.</param>
        <summary>Recherche la clé donnée dans la table de paramètres d'objets contextuels mise à jour en interne et retourne l'objet correspondant, s'il existe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations, consultez la documentation existante pour `IBindCtx::GetObjectParam` dans MSDN library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRunningObjectTable">
      <MemberSignature Language="C#" Value="public void GetRunningObjectTable (out System.Runtime.InteropServices.UCOMIRunningObjectTable pprot);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetRunningObjectTable([out] class System.Runtime.InteropServices.UCOMIRunningObjectTable&amp; pprot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIBindCtx.GetRunningObjectTable(System.Runtime.InteropServices.UCOMIRunningObjectTable@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetRunningObjectTable (ByRef pprot As UCOMIRunningObjectTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetRunningObjectTable([Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIRunningObjectTable ^ % pprot);" />
      <MemberSignature Language="F#" Value="abstract member GetRunningObjectTable :  -&gt; unit" Usage="uCOMIBindCtx.GetRunningObjectTable pprot" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pprot" Type="System.Runtime.InteropServices.UCOMIRunningObjectTable" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pprot">Lors d'un retour, référence à la table ROT.</param>
        <summary>Retourne l'accès à la table ROT (Running Object Table) appropriée pour ce processus de liaison.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations, consultez la documentation existante pour `IBindCtx::GetRunningObjectTable` dans MSDN library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterObjectBound">
      <MemberSignature Language="C#" Value="public void RegisterObjectBound (object punk);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterObjectBound(object punk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIBindCtx.RegisterObjectBound(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterObjectBound (punk As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterObjectBound(System::Object ^ punk);" />
      <MemberSignature Language="F#" Value="abstract member RegisterObjectBound : obj -&gt; unit" Usage="uCOMIBindCtx.RegisterObjectBound punk" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="punk" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="punk">Objet à inscrire comme devant être libéré.</param>
        <summary>Inscrit l'objet passé comme l'un des objets liés durant une opération de moniker et devant être libérés à la fin de l'opération.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations, consultez la documentation existante pour `IBindCtx::RegisterObjectBound` dans MSDN library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterObjectParam">
      <MemberSignature Language="C#" Value="public void RegisterObjectParam (string pszKey, object punk);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterObjectParam(string pszKey, object punk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIBindCtx.RegisterObjectParam(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterObjectParam (pszKey As String, punk As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterObjectParam(System::String ^ pszKey, System::Object ^ punk);" />
      <MemberSignature Language="F#" Value="abstract member RegisterObjectParam : string * obj -&gt; unit" Usage="uCOMIBindCtx.RegisterObjectParam (pszKey, punk)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pszKey" Type="System.String" />
        <Parameter Name="punk" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="pszKey">Nom sous lequel inscrire <paramref name="punk" />.</param>
        <param name="punk">Objet à inscrire.</param>
        <summary>Inscrit le pointeur d'objet donné sous le nom spécifié dans la table de pointeurs d'objets mise à jour en interne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations, consultez la documentation existante pour `IBindCtx::RegisterObjectParam` dans MSDN library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseBoundObjects">
      <MemberSignature Language="C#" Value="public void ReleaseBoundObjects ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseBoundObjects() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIBindCtx.ReleaseBoundObjects" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseBoundObjects ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseBoundObjects();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseBoundObjects : unit -&gt; unit" Usage="uCOMIBindCtx.ReleaseBoundObjects " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libère tous les objets actuellement inscrits dans le contexte de liaison par <see cref="M:System.Runtime.InteropServices.UCOMIBindCtx.RegisterObjectBound(System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations, consultez la documentation existante pour `IBindCtx::ReleaseBoundObjects` dans MSDN library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RevokeObjectBound">
      <MemberSignature Language="C#" Value="public void RevokeObjectBound (object punk);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RevokeObjectBound(object punk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIBindCtx.RevokeObjectBound(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevokeObjectBound (punk As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RevokeObjectBound(System::Object ^ punk);" />
      <MemberSignature Language="F#" Value="abstract member RevokeObjectBound : obj -&gt; unit" Usage="uCOMIBindCtx.RevokeObjectBound punk" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="punk" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="punk">Objet dont l'inscription doit être annulée pour sa libération.</param>
        <summary>Supprime l'objet du jeu d'objets inscrits à libérer.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations, consultez la documentation existante pour `IBindCtx::RevokeObjectBound` dans MSDN library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RevokeObjectParam">
      <MemberSignature Language="C#" Value="public void RevokeObjectParam (string pszKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RevokeObjectParam(string pszKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIBindCtx.RevokeObjectParam(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RevokeObjectParam (pszKey As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RevokeObjectParam(System::String ^ pszKey);" />
      <MemberSignature Language="F#" Value="abstract member RevokeObjectParam : string -&gt; unit" Usage="uCOMIBindCtx.RevokeObjectParam pszKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pszKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pszKey">Clé dont l'inscription doit être annulée.</param>
        <summary>Révoque l'inscription de l'objet figurant actuellement sous cette clé dans la table de paramètres d'objets contextuels mise à jour en interne, si cette clé est inscrite actuellement.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations, consultez la documentation existante pour `IBindCtx::RevokeObjectParam` dans MSDN library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBindOptions">
      <MemberSignature Language="C#" Value="public void SetBindOptions (ref System.Runtime.InteropServices.BIND_OPTS pbindopts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetBindOptions([in]valuetype System.Runtime.InteropServices.BIND_OPTS&amp; pbindopts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIBindCtx.SetBindOptions(System.Runtime.InteropServices.BIND_OPTS@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetBindOptions (ByRef pbindopts As BIND_OPTS)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetBindOptions(System::Runtime::InteropServices::BIND_OPTS % pbindopts);" />
      <MemberSignature Language="F#" Value="abstract member SetBindOptions :  -&gt; unit" Usage="uCOMIBindCtx.SetBindOptions pbindopts" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbindopts" Type="System.Runtime.InteropServices.BIND_OPTS" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="pbindopts">Structure contenant les options de liaison à définir.</param>
        <summary>Stocke dans le contexte de liaison un bloc de paramètres applicables aux opérations <see langword="UCOMIMoniker" /> ultérieures utilisant ce contexte de liaison.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d’informations, consultez la documentation existante pour `IBindCtx::SetBindOptions` dans MSDN library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>