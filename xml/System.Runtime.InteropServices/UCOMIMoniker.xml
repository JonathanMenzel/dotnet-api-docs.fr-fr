<Type Name="UCOMIMoniker" FullName="System.Runtime.InteropServices.UCOMIMoniker">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cfcc47f0a2ad069044de766186b1b404d6c43008" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37469227" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface UCOMIMoniker" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract UCOMIMoniker" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.InteropServices.UCOMIMoniker" />
  <TypeSignature Language="VB.NET" Value="Public Interface UCOMIMoniker" />
  <TypeSignature Language="C++ CLI" Value="public interface class UCOMIMoniker" />
  <TypeSignature Language="F#" Value="type UCOMIMoniker = interface" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("0000000f-0000-0000-c000-000000000046")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="917ee-101">Utilisez plutôt <see cref="T:System.Runtime.InteropServices.ComTypes.IMoniker" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="917ee-101">Use <see cref="T:System.Runtime.InteropServices.ComTypes.IMoniker" /> instead.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="917ee-102">Pour plus d’informations sur la `IMoniker`, `IPersist`, et `IPersistStream` interfaces, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="917ee-102">For more information about the `IMoniker`, `IPersist`, and `IPersistStream` interfaces, see the MSDN Library.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BindToObject">
      <MemberSignature Language="C#" Value="public void BindToObject (System.Runtime.InteropServices.UCOMIBindCtx pbc, System.Runtime.InteropServices.UCOMIMoniker pmkToLeft, ref Guid riidResult, out object ppvResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BindToObject(class System.Runtime.InteropServices.UCOMIBindCtx pbc, class System.Runtime.InteropServices.UCOMIMoniker pmkToLeft, [in]valuetype System.Guid&amp; riidResult, [out] object&amp; ppvResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.BindToObject(System.Runtime.InteropServices.UCOMIBindCtx,System.Runtime.InteropServices.UCOMIMoniker,System.Guid@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindToObject (pbc As UCOMIBindCtx, pmkToLeft As UCOMIMoniker, ByRef riidResult As Guid, ByRef ppvResult As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindToObject(System::Runtime::InteropServices::UCOMIBindCtx ^ pbc, System::Runtime::InteropServices::UCOMIMoniker ^ pmkToLeft, Guid % riidResult, [Runtime::InteropServices::Out] System::Object ^ % ppvResult);" />
      <MemberSignature Language="F#" Value="abstract member BindToObject : System.Runtime.InteropServices.UCOMIBindCtx * System.Runtime.InteropServices.UCOMIMoniker *  *  -&gt; unit" Usage="uCOMIMoniker.BindToObject (pbc, pmkToLeft, riidResult, ppvResult)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.UCOMIBindCtx" />
        <Parameter Name="pmkToLeft" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="riidResult" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="ppvResult" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pbc">
          <span data-ttu-id="917ee-103">Référence à l'interface <see langword="IBindCtx" /> sur l'objet de contexte de liaison utilisé dans cette opération de liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-103">A reference to the <see langword="IBindCtx" /> interface on the bind context object used in this binding operation.</span>
          </span>
        </param>
        <param name="pmkToLeft">
          <span data-ttu-id="917ee-104">Référence au moniker à gauche de ce moniker, si le moniker fait partie d'un moniker composite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-104">A reference to the moniker to the left of this moniker, if the moniker is part of a composite moniker.</span>
          </span>
        </param>
        <param name="riidResult">
          <span data-ttu-id="917ee-105">ID d'interface (IID, Interface Identifier) de l'interface que le client a l'intention d'utiliser pour communiquer avec l'objet que le moniker identifie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-105">The interface identifier (IID) of the interface the client intends to use to communicate with the object that the moniker identifies.</span>
          </span>
        </param>
        <param name="ppvResult">
          <span data-ttu-id="917ee-106">Lors d’un retour, référence à l’interface demandée par <c>riidResult</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-106">On successful return, reference to the interface requested by <c>riidResult</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="917ee-107">Utilise le moniker pour établir une liaison à l'objet qu'il identifie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-107">Uses the moniker to bind to the object it identifies.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="917ee-108">Pour plus d’informations sur `IMoniker::BindToObject`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="917ee-108">For more information about `IMoniker::BindToObject`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindToStorage">
      <MemberSignature Language="C#" Value="public void BindToStorage (System.Runtime.InteropServices.UCOMIBindCtx pbc, System.Runtime.InteropServices.UCOMIMoniker pmkToLeft, ref Guid riid, out object ppvObj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BindToStorage(class System.Runtime.InteropServices.UCOMIBindCtx pbc, class System.Runtime.InteropServices.UCOMIMoniker pmkToLeft, [in]valuetype System.Guid&amp; riid, [out] object&amp; ppvObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.BindToStorage(System.Runtime.InteropServices.UCOMIBindCtx,System.Runtime.InteropServices.UCOMIMoniker,System.Guid@,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BindToStorage (pbc As UCOMIBindCtx, pmkToLeft As UCOMIMoniker, ByRef riid As Guid, ByRef ppvObj As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BindToStorage(System::Runtime::InteropServices::UCOMIBindCtx ^ pbc, System::Runtime::InteropServices::UCOMIMoniker ^ pmkToLeft, Guid % riid, [Runtime::InteropServices::Out] System::Object ^ % ppvObj);" />
      <MemberSignature Language="F#" Value="abstract member BindToStorage : System.Runtime.InteropServices.UCOMIBindCtx * System.Runtime.InteropServices.UCOMIMoniker *  *  -&gt; unit" Usage="uCOMIMoniker.BindToStorage (pbc, pmkToLeft, riid, ppvObj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.UCOMIBindCtx" />
        <Parameter Name="pmkToLeft" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="ppvObj" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pbc">
          <span data-ttu-id="917ee-109">Référence à l'interface <see langword="IBindCtx" /> sur l'objet de contexte de liaison utilisé dans cette opération de liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-109">A reference to the <see langword="IBindCtx" /> interface on the bind context object used during this binding operation.</span>
          </span>
        </param>
        <param name="pmkToLeft">
          <span data-ttu-id="917ee-110">Référence au moniker à gauche de ce moniker, si le moniker fait partie d'un moniker composite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-110">A reference to the moniker to the left of this moniker, if the moniker is part of a composite moniker.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="917ee-111">ID d'interface (IID, interface identifier) de l'interface de stockage demandée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-111">The interface identifier (IID) of the storage interface requested.</span>
          </span>
        </param>
        <param name="ppvObj">
          <span data-ttu-id="917ee-112">Lors d’un retour, référence à l’interface demandée par <c>riid</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-112">On successful return, a reference to the interface requested by <c>riid</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="917ee-113">Récupère un pointeur d'interface vers le stockage qui contient l'objet identifié par le moniker.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-113">Retrieves an interface pointer to the storage that contains the object identified by the moniker.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="917ee-114">Pour plus d’informations sur `IMoniker::BindToStorage`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="917ee-114">For more information about `IMoniker::BindToStorage`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommonPrefixWith">
      <MemberSignature Language="C#" Value="public void CommonPrefixWith (System.Runtime.InteropServices.UCOMIMoniker pmkOther, out System.Runtime.InteropServices.UCOMIMoniker ppmkPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CommonPrefixWith(class System.Runtime.InteropServices.UCOMIMoniker pmkOther, [out] class System.Runtime.InteropServices.UCOMIMoniker&amp; ppmkPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.CommonPrefixWith(System.Runtime.InteropServices.UCOMIMoniker,System.Runtime.InteropServices.UCOMIMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CommonPrefixWith (pmkOther As UCOMIMoniker, ByRef ppmkPrefix As UCOMIMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CommonPrefixWith(System::Runtime::InteropServices::UCOMIMoniker ^ pmkOther, [Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIMoniker ^ % ppmkPrefix);" />
      <MemberSignature Language="F#" Value="abstract member CommonPrefixWith : System.Runtime.InteropServices.UCOMIMoniker *  -&gt; unit" Usage="uCOMIMoniker.CommonPrefixWith (pmkOther, ppmkPrefix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkOther" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="ppmkPrefix" Type="System.Runtime.InteropServices.UCOMIMoniker&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pmkOther">
          <span data-ttu-id="917ee-115">Référence à l'interface <see langword="IMoniker" /> sur un autre moniker à comparer avec ceci pour identifier un préfixe commun.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-115">A reference to the <see langword="IMoniker" /> interface on another moniker to compare with this for a common prefix.</span>
          </span>
        </param>
        <param name="ppmkPrefix">
          <span data-ttu-id="917ee-116">Lors d’un retour, contient le moniker qui est le préfixe commun de ce moniker et de <c>pmkOther</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-116">On successful return, contains the moniker that is the common prefix of this moniker and <c>pmkOther</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="917ee-117">Crée un nouveau moniker basé sur le préfixe commun que ce moniker partage avec un autre moniker.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-117">Creates a new moniker based on the common prefix that this moniker shares with another moniker.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="917ee-118">Pour plus d’informations sur `IMoniker::CommonPrefixWith`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="917ee-118">For more information about `IMoniker::CommonPrefixWith`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComposeWith">
      <MemberSignature Language="C#" Value="public void ComposeWith (System.Runtime.InteropServices.UCOMIMoniker pmkRight, bool fOnlyIfNotGeneric, out System.Runtime.InteropServices.UCOMIMoniker ppmkComposite);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ComposeWith(class System.Runtime.InteropServices.UCOMIMoniker pmkRight, bool fOnlyIfNotGeneric, [out] class System.Runtime.InteropServices.UCOMIMoniker&amp; ppmkComposite) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.ComposeWith(System.Runtime.InteropServices.UCOMIMoniker,System.Boolean,System.Runtime.InteropServices.UCOMIMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ComposeWith (pmkRight As UCOMIMoniker, fOnlyIfNotGeneric As Boolean, ByRef ppmkComposite As UCOMIMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ComposeWith(System::Runtime::InteropServices::UCOMIMoniker ^ pmkRight, bool fOnlyIfNotGeneric, [Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIMoniker ^ % ppmkComposite);" />
      <MemberSignature Language="F#" Value="abstract member ComposeWith : System.Runtime.InteropServices.UCOMIMoniker * bool *  -&gt; unit" Usage="uCOMIMoniker.ComposeWith (pmkRight, fOnlyIfNotGeneric, ppmkComposite)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkRight" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="fOnlyIfNotGeneric" Type="System.Boolean" />
        <Parameter Name="ppmkComposite" Type="System.Runtime.InteropServices.UCOMIMoniker&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pmkRight">
          <span data-ttu-id="917ee-119">Référence à l'interface <see langword="IMoniker" /> sur le moniker à composer à l'extrémité de ce moniker.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-119">A reference to the <see langword="IMoniker" /> interface on the moniker to compose onto the end of this moniker.</span>
          </span>
        </param>
        <param name="fOnlyIfNotGeneric">
          <span data-ttu-id="917ee-120">Si <see langword="true" />, l’appelant nécessite une composition non générique, l’opération se poursuit seulement si <c>pmkRight</c> est une classe de monikers que ce moniker peut composer sans former un composite générique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-120">If <see langword="true" />, the caller requires a nongeneric composition, so the operation proceeds only if <c>pmkRight</c> is a moniker class that this moniker can compose with in some way other than forming a generic composite.</span>
          </span>
          <span data-ttu-id="917ee-121">Si <see langword="false" />, la méthode peut créer un composite générique si nécessaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-121">If <see langword="false" />, the method can create a generic composite if necessary.</span>
          </span>
        </param>
        <param name="ppmkComposite">
          <span data-ttu-id="917ee-122">Lors d'un retour, référence au moniker composite obtenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-122">On successful return, a reference to the resulting composite moniker.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="917ee-123">Combine le moniker en cours à un autre moniker, créant un nouveau moniker composite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-123">Combines the current moniker with another moniker, creating a new composite moniker.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="917ee-124">Pour plus d’informations sur `IMoniker::ComposeWith`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="917ee-124">For more information about `IMoniker::ComposeWith`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enum">
      <MemberSignature Language="C#" Value="public void Enum (bool fForward, out System.Runtime.InteropServices.UCOMIEnumMoniker ppenumMoniker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Enum(bool fForward, [out] class System.Runtime.InteropServices.UCOMIEnumMoniker&amp; ppenumMoniker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.Enum(System.Boolean,System.Runtime.InteropServices.UCOMIEnumMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Enum (fForward As Boolean, ByRef ppenumMoniker As UCOMIEnumMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Enum(bool fForward, [Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIEnumMoniker ^ % ppenumMoniker);" />
      <MemberSignature Language="F#" Value="abstract member Enum : bool *  -&gt; unit" Usage="uCOMIMoniker.Enum (fForward, ppenumMoniker)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fForward" Type="System.Boolean" />
        <Parameter Name="ppenumMoniker" Type="System.Runtime.InteropServices.UCOMIEnumMoniker&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="fForward">
          <span data-ttu-id="917ee-125">Si <see langword="true" />, énumère les monikers de gauche à droite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-125">If <see langword="true" />, enumerates the monikers from left to right.</span>
          </span>
          <span data-ttu-id="917ee-126">Si <see langword="false" />, énumère les monikers de droite à gauche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-126">If <see langword="false" />, enumerates from right to left.</span>
          </span>
        </param>
        <param name="ppenumMoniker">
          <span data-ttu-id="917ee-127">Lors d'un retour, fait référence à l'objet d'énumérateur du moniker.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-127">On successful return, references the enumerator object for the moniker.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="917ee-128">Fournit un pointeur à un énumérateur pouvant énumérer les composants d'un moniker composite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-128">Supplies a pointer to an enumerator that can enumerate the components of a composite moniker.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="917ee-129">Pour plus d’informations sur `IMoniker::Enum`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="917ee-129">For more information about `IMoniker::Enum`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClassID">
      <MemberSignature Language="C#" Value="public void GetClassID (out Guid pClassID);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetClassID([out] valuetype System.Guid&amp; pClassID) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.GetClassID(System.Guid@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetClassID (ByRef pClassID As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetClassID([Runtime::InteropServices::Out] Guid % pClassID);" />
      <MemberSignature Language="F#" Value="abstract member GetClassID :  -&gt; unit" Usage="uCOMIMoniker.GetClassID pClassID" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pClassID" Type="System.Guid&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pClassID">
          <span data-ttu-id="917ee-130">Lors d'un retour, contient le CLSID.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-130">On successful return, contains the CLSID.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="917ee-131">Récupère le CLSID (identificateur de classe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-131">Retrieves the class identifier (CLSID) of an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="917ee-132">Pour plus d’informations sur `IPersist::GetClassID`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="917ee-132">For more information about `IPersist::GetClassID`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDisplayName">
      <MemberSignature Language="C#" Value="public void GetDisplayName (System.Runtime.InteropServices.UCOMIBindCtx pbc, System.Runtime.InteropServices.UCOMIMoniker pmkToLeft, out string ppszDisplayName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetDisplayName(class System.Runtime.InteropServices.UCOMIBindCtx pbc, class System.Runtime.InteropServices.UCOMIMoniker pmkToLeft, [out] string&amp; ppszDisplayName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.GetDisplayName(System.Runtime.InteropServices.UCOMIBindCtx,System.Runtime.InteropServices.UCOMIMoniker,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetDisplayName (pbc As UCOMIBindCtx, pmkToLeft As UCOMIMoniker, ByRef ppszDisplayName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetDisplayName(System::Runtime::InteropServices::UCOMIBindCtx ^ pbc, System::Runtime::InteropServices::UCOMIMoniker ^ pmkToLeft, [Runtime::InteropServices::Out] System::String ^ % ppszDisplayName);" />
      <MemberSignature Language="F#" Value="abstract member GetDisplayName : System.Runtime.InteropServices.UCOMIBindCtx * System.Runtime.InteropServices.UCOMIMoniker *  -&gt; unit" Usage="uCOMIMoniker.GetDisplayName (pbc, pmkToLeft, ppszDisplayName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.UCOMIBindCtx" />
        <Parameter Name="pmkToLeft" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="ppszDisplayName" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pbc">
          <span data-ttu-id="917ee-133">Référence au contexte de liaison à utiliser dans cette opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-133">A reference to the bind context to use in this operation.</span>
          </span>
        </param>
        <param name="pmkToLeft">
          <span data-ttu-id="917ee-134">Référence au moniker à gauche de ce moniker, si le moniker fait partie d'un moniker composite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-134">A reference to the moniker to the left of this moniker, if the moniker is part of a composite moniker.</span>
          </span>
        </param>
        <param name="ppszDisplayName">
          <span data-ttu-id="917ee-135">Lors d'un retour, contient la chaîne du nom complet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-135">On successful return, contains the display name string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="917ee-136">Obtient le nom complet, qui est une représentation lisible par l'utilisateur de ce moniker.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-136">Gets the display name, which is a user-readable representation of this moniker.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="917ee-137">Pour plus d’informations sur `IMoniker::GetDisplayName`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="917ee-137">For more information about `IMoniker::GetDisplayName`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSizeMax">
      <MemberSignature Language="C#" Value="public void GetSizeMax (out long pcbSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetSizeMax([out] int64&amp; pcbSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.GetSizeMax(System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetSizeMax (ByRef pcbSize As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetSizeMax([Runtime::InteropServices::Out] long % pcbSize);" />
      <MemberSignature Language="F#" Value="abstract member GetSizeMax :  -&gt; unit" Usage="uCOMIMoniker.GetSizeMax pcbSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcbSize" Type="System.Int64&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcbSize">
          <span data-ttu-id="917ee-138">Lors d'un retour, contient une valeur <see langword="long" /> indiquant la taille en octets du flux requis pour enregistrer cet objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-138">On successful return, contains a <see langword="long" /> value indicating the size in bytes of the stream needed to save this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="917ee-139">Retourne la taille en octets du flux requis pour enregistrer l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-139">Returns the size in bytes of the stream needed to save the object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="917ee-140">Pour plus d’informations sur `IPersistStream::GetSizeMax`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="917ee-140">For more information about `IPersistStream::GetSizeMax`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTimeOfLastChange">
      <MemberSignature Language="C#" Value="public void GetTimeOfLastChange (System.Runtime.InteropServices.UCOMIBindCtx pbc, System.Runtime.InteropServices.UCOMIMoniker pmkToLeft, out System.Runtime.InteropServices.FILETIME pFileTime);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetTimeOfLastChange(class System.Runtime.InteropServices.UCOMIBindCtx pbc, class System.Runtime.InteropServices.UCOMIMoniker pmkToLeft, [out] valuetype System.Runtime.InteropServices.FILETIME&amp; pFileTime) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.GetTimeOfLastChange(System.Runtime.InteropServices.UCOMIBindCtx,System.Runtime.InteropServices.UCOMIMoniker,System.Runtime.InteropServices.FILETIME@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetTimeOfLastChange (pbc As UCOMIBindCtx, pmkToLeft As UCOMIMoniker, ByRef pFileTime As FILETIME)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetTimeOfLastChange(System::Runtime::InteropServices::UCOMIBindCtx ^ pbc, System::Runtime::InteropServices::UCOMIMoniker ^ pmkToLeft, [Runtime::InteropServices::Out] System::Runtime::InteropServices::FILETIME % pFileTime);" />
      <MemberSignature Language="F#" Value="abstract member GetTimeOfLastChange : System.Runtime.InteropServices.UCOMIBindCtx * System.Runtime.InteropServices.UCOMIMoniker *  -&gt; unit" Usage="uCOMIMoniker.GetTimeOfLastChange (pbc, pmkToLeft, pFileTime)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.UCOMIBindCtx" />
        <Parameter Name="pmkToLeft" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="pFileTime" Type="System.Runtime.InteropServices.FILETIME&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pbc">
          <span data-ttu-id="917ee-141">Référence au contexte de liaison à utiliser dans cette opération de liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-141">A reference to the bind context to be used in this binding operation.</span>
          </span>
        </param>
        <param name="pmkToLeft">
          <span data-ttu-id="917ee-142">Référence au moniker à gauche de ce moniker, si le moniker fait partie d'un moniker composite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-142">A reference to the moniker to the left of this moniker, if the moniker is part of a composite moniker.</span>
          </span>
        </param>
        <param name="pFileTime">
          <span data-ttu-id="917ee-143">Lors d'un retour, contient l'heure de la dernière modification.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-143">On successful return, contains the time of last change.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="917ee-144">Fournit un nombre représentant l'heure de la dernière modification de l'objet identifié par ce moniker.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-144">Provides a number representing the time the object identified by this moniker was last changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="917ee-145">Pour plus d’informations sur `IMoniker::GetTimeOfLastChange`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="917ee-145">For more information about `IMoniker::GetTimeOfLastChange`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Hash">
      <MemberSignature Language="C#" Value="public void Hash (out int pdwHash);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Hash([out] int32&amp; pdwHash) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.Hash(System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Hash (ByRef pdwHash As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Hash([Runtime::InteropServices::Out] int % pdwHash);" />
      <MemberSignature Language="F#" Value="abstract member Hash :  -&gt; unit" Usage="uCOMIMoniker.Hash pdwHash" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pdwHash" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pdwHash">
          <span data-ttu-id="917ee-146">Lors d'un retour, contient la valeur de hachage de ce moniker.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-146">On successful return, contains the hash value for this moniker.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="917ee-147">Calcule un entier 32 bits utilisant l'état interne du moniker.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-147">Calculates a 32-bit integer using the internal state of the moniker.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="917ee-148">Pour plus d’informations sur `IMoniker::Hash`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="917ee-148">For more information about `IMoniker::Hash`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inverse">
      <MemberSignature Language="C#" Value="public void Inverse (out System.Runtime.InteropServices.UCOMIMoniker ppmk);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Inverse([out] class System.Runtime.InteropServices.UCOMIMoniker&amp; ppmk) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.Inverse(System.Runtime.InteropServices.UCOMIMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Inverse (ByRef ppmk As UCOMIMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Inverse([Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIMoniker ^ % ppmk);" />
      <MemberSignature Language="F#" Value="abstract member Inverse :  -&gt; unit" Usage="uCOMIMoniker.Inverse ppmk" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppmk" Type="System.Runtime.InteropServices.UCOMIMoniker&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppmk">
          <span data-ttu-id="917ee-149">Lors d'un retour, contient un moniker qui est l'inverse de ce moniker.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-149">On successful return, contains a moniker that is the inverse of this moniker.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="917ee-150">Fournit un moniker qui, lorsqu'il est composé à la droite de ce moniker ou d'un moniker de structure similaire, produit une composition nulle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-150">Provides a moniker that, when composed to the right of this moniker or one of similar structure, composes to nothing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="917ee-151">Pour plus d’informations sur `IMoniker::Inverse`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="917ee-151">For more information about `IMoniker::Inverse`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public int IsDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IsDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public Function IsDirty () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IsDirty();" />
      <MemberSignature Language="F#" Value="abstract member IsDirty : unit -&gt; int" Usage="uCOMIMoniker.IsDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="917ee-152">Vérifie si l'objet a subi des modifications depuis son dernier enregistrement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-152">Checks the object for changes since it was last saved.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="917ee-153">Valeur <see langword="S_OK" /><see langword="HRESULT" /> si l’objet a été modifié ; sinon, valeur <see langword="S_FALSE" /><see langword="HRESULT" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-153">An <see langword="S_OK" /><see langword="HRESULT" /> value if the object has changed; otherwise, an <see langword="S_FALSE" /><see langword="HRESULT" /> value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="917ee-154">Pour plus d’informations sur `IPersistStream::IsDirty`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="917ee-154">For more information about `IPersistStream::IsDirty`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEqual">
      <MemberSignature Language="C#" Value="public void IsEqual (System.Runtime.InteropServices.UCOMIMoniker pmkOtherMoniker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IsEqual(class System.Runtime.InteropServices.UCOMIMoniker pmkOtherMoniker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.IsEqual(System.Runtime.InteropServices.UCOMIMoniker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IsEqual (pmkOtherMoniker As UCOMIMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IsEqual(System::Runtime::InteropServices::UCOMIMoniker ^ pmkOtherMoniker);" />
      <MemberSignature Language="F#" Value="abstract member IsEqual : System.Runtime.InteropServices.UCOMIMoniker -&gt; unit" Usage="uCOMIMoniker.IsEqual pmkOtherMoniker" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkOtherMoniker" Type="System.Runtime.InteropServices.UCOMIMoniker" />
      </Parameters>
      <Docs>
        <param name="pmkOtherMoniker">
          <span data-ttu-id="917ee-155">Référence au moniker à utiliser pour comparaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-155">A reference to the moniker to be used for comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="917ee-156">Compare ce moniker à un moniker spécifié et indique s'ils sont identiques.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-156">Compares this moniker with a specified moniker and indicates whether they are identical.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="917ee-157">Pour plus d’informations sur `IMoniker::IsEqual`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="917ee-157">For more information about `IMoniker::IsEqual`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsRunning">
      <MemberSignature Language="C#" Value="public void IsRunning (System.Runtime.InteropServices.UCOMIBindCtx pbc, System.Runtime.InteropServices.UCOMIMoniker pmkToLeft, System.Runtime.InteropServices.UCOMIMoniker pmkNewlyRunning);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IsRunning(class System.Runtime.InteropServices.UCOMIBindCtx pbc, class System.Runtime.InteropServices.UCOMIMoniker pmkToLeft, class System.Runtime.InteropServices.UCOMIMoniker pmkNewlyRunning) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.IsRunning(System.Runtime.InteropServices.UCOMIBindCtx,System.Runtime.InteropServices.UCOMIMoniker,System.Runtime.InteropServices.UCOMIMoniker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IsRunning (pbc As UCOMIBindCtx, pmkToLeft As UCOMIMoniker, pmkNewlyRunning As UCOMIMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IsRunning(System::Runtime::InteropServices::UCOMIBindCtx ^ pbc, System::Runtime::InteropServices::UCOMIMoniker ^ pmkToLeft, System::Runtime::InteropServices::UCOMIMoniker ^ pmkNewlyRunning);" />
      <MemberSignature Language="F#" Value="abstract member IsRunning : System.Runtime.InteropServices.UCOMIBindCtx * System.Runtime.InteropServices.UCOMIMoniker * System.Runtime.InteropServices.UCOMIMoniker -&gt; unit" Usage="uCOMIMoniker.IsRunning (pbc, pmkToLeft, pmkNewlyRunning)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.UCOMIBindCtx" />
        <Parameter Name="pmkToLeft" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="pmkNewlyRunning" Type="System.Runtime.InteropServices.UCOMIMoniker" />
      </Parameters>
      <Docs>
        <param name="pbc">
          <span data-ttu-id="917ee-158">Référence au contexte de liaison à utiliser dans cette opération de liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-158">A reference to the bind context to be used in this binding operation.</span>
          </span>
        </param>
        <param name="pmkToLeft">
          <span data-ttu-id="917ee-159">Référence au moniker à gauche de ce moniker si ce moniker fait partie d'un composite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-159">A reference to the moniker to the left of this moniker if this moniker is part of a composite.</span>
          </span>
        </param>
        <param name="pmkNewlyRunning">
          <span data-ttu-id="917ee-160">Référence au moniker le plus récemment ajouté à la table ROT (Running Object Table).</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-160">A reference to the moniker most recently added to the Running Object Table.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="917ee-161">Détermine si l'objet qui est identifié par ce moniker est actuellement chargé et en service.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-161">Determines whether the object that is identified by this moniker is currently loaded and running.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="917ee-162">Pour plus d’informations sur `IMoniker::IsRunning`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="917ee-162">For more information about `IMoniker::IsRunning`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSystemMoniker">
      <MemberSignature Language="C#" Value="public void IsSystemMoniker (out int pdwMksys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void IsSystemMoniker([out] int32&amp; pdwMksys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.IsSystemMoniker(System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub IsSystemMoniker (ByRef pdwMksys As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void IsSystemMoniker([Runtime::InteropServices::Out] int % pdwMksys);" />
      <MemberSignature Language="F#" Value="abstract member IsSystemMoniker :  -&gt; unit" Usage="uCOMIMoniker.IsSystemMoniker pdwMksys" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pdwMksys" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pdwMksys">
          <span data-ttu-id="917ee-163">Pointeur vers un entier faisant partie des valeurs de l'énumération <see langword="MKSYS" /> et se réfère à l'une des classes de moniker COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-163">A pointer to an integer that is one of the values from the <see langword="MKSYS" /> enumeration, and refers to one of the COM moniker classes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="917ee-164">Indique si ce moniker correspond à l'une des classes de moniker fournies par le système.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-164">Indicates whether this moniker is of one of the system-supplied moniker classes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="917ee-165">Pour plus d’informations sur les valeurs de la `MKSYS` énumération et des informations sur `IMoniker::IsSystemMoniker`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="917ee-165">For details on the values of the `MKSYS` enumeration and for information about `IMoniker::IsSystemMoniker`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public void Load (System.Runtime.InteropServices.UCOMIStream pStm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Load(class System.Runtime.InteropServices.UCOMIStream pStm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.Load(System.Runtime.InteropServices.UCOMIStream)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Load (pStm As UCOMIStream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Load(System::Runtime::InteropServices::UCOMIStream ^ pStm);" />
      <MemberSignature Language="F#" Value="abstract member Load : System.Runtime.InteropServices.UCOMIStream -&gt; unit" Usage="uCOMIMoniker.Load pStm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pStm" Type="System.Runtime.InteropServices.UCOMIStream" />
      </Parameters>
      <Docs>
        <param name="pStm">
          <span data-ttu-id="917ee-166">Flux à partir duquel l'objet est chargé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-166">Stream from which the object is loaded.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="917ee-167">Initialise un objet à partir du flux ayant été précédemment enregistré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-167">Initializes an object from the stream where it was previously saved.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="917ee-168">Pour plus d’informations sur `IPersistStream::Load`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="917ee-168">For more information about `IPersistStream::Load`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ParseDisplayName">
      <MemberSignature Language="C#" Value="public void ParseDisplayName (System.Runtime.InteropServices.UCOMIBindCtx pbc, System.Runtime.InteropServices.UCOMIMoniker pmkToLeft, string pszDisplayName, out int pchEaten, out System.Runtime.InteropServices.UCOMIMoniker ppmkOut);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ParseDisplayName(class System.Runtime.InteropServices.UCOMIBindCtx pbc, class System.Runtime.InteropServices.UCOMIMoniker pmkToLeft, string pszDisplayName, [out] int32&amp; pchEaten, [out] class System.Runtime.InteropServices.UCOMIMoniker&amp; ppmkOut) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.ParseDisplayName(System.Runtime.InteropServices.UCOMIBindCtx,System.Runtime.InteropServices.UCOMIMoniker,System.String,System.Int32@,System.Runtime.InteropServices.UCOMIMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ParseDisplayName (pbc As UCOMIBindCtx, pmkToLeft As UCOMIMoniker, pszDisplayName As String, ByRef pchEaten As Integer, ByRef ppmkOut As UCOMIMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ParseDisplayName(System::Runtime::InteropServices::UCOMIBindCtx ^ pbc, System::Runtime::InteropServices::UCOMIMoniker ^ pmkToLeft, System::String ^ pszDisplayName, [Runtime::InteropServices::Out] int % pchEaten, [Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIMoniker ^ % ppmkOut);" />
      <MemberSignature Language="F#" Value="abstract member ParseDisplayName : System.Runtime.InteropServices.UCOMIBindCtx * System.Runtime.InteropServices.UCOMIMoniker * string *  *  -&gt; unit" Usage="uCOMIMoniker.ParseDisplayName (pbc, pmkToLeft, pszDisplayName, pchEaten, ppmkOut)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.UCOMIBindCtx" />
        <Parameter Name="pmkToLeft" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="pszDisplayName" Type="System.String" />
        <Parameter Name="pchEaten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="ppmkOut" Type="System.Runtime.InteropServices.UCOMIMoniker&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pbc">
          <span data-ttu-id="917ee-169">Référence au contexte de liaison à utiliser dans cette opération de liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-169">A reference to the bind context to be used in this binding operation.</span>
          </span>
        </param>
        <param name="pmkToLeft">
          <span data-ttu-id="917ee-170">Référence au moniker qui a été construit à partir du nom complet jusqu'à ce point.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-170">A reference to the moniker that has been built out of the display name up to this point.</span>
          </span>
        </param>
        <param name="pszDisplayName">
          <span data-ttu-id="917ee-171">Référence à la chaîne contenant le reste du nom complet à analyser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-171">A reference to the string containing the remaining display name to parse.</span>
          </span>
        </param>
        <param name="pchEaten">
          <span data-ttu-id="917ee-172">Lors d’un retour, contient le nombre de caractères dans <c>pszDisplayName</c> qui ont été utilisés à cette étape.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-172">On successful return, contains the number of characters in <c>pszDisplayName</c> that were consumed in this step.</span>
          </span>
        </param>
        <param name="ppmkOut">
          <span data-ttu-id="917ee-173">Référence au moniker qui a été construit à partir de <c>pszDisplayName</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-173">Reference to the moniker that was built from <c>pszDisplayName</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="917ee-174">Lit autant de caractères du nom complet spécifié qu'il peut interpréter et construit un moniker correspondant à la partie lue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-174">Reads as many characters of the specified display name as it understands and builds a moniker corresponding to the portion read.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="917ee-175">Pour plus d’informations sur `IMoniker::ParseDisplayName`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="917ee-175">For more information about `IMoniker::ParseDisplayName`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reduce">
      <MemberSignature Language="C#" Value="public void Reduce (System.Runtime.InteropServices.UCOMIBindCtx pbc, int dwReduceHowFar, ref System.Runtime.InteropServices.UCOMIMoniker ppmkToLeft, out System.Runtime.InteropServices.UCOMIMoniker ppmkReduced);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reduce(class System.Runtime.InteropServices.UCOMIBindCtx pbc, int32 dwReduceHowFar, class System.Runtime.InteropServices.UCOMIMoniker&amp; ppmkToLeft, [out] class System.Runtime.InteropServices.UCOMIMoniker&amp; ppmkReduced) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.Reduce(System.Runtime.InteropServices.UCOMIBindCtx,System.Int32,System.Runtime.InteropServices.UCOMIMoniker@,System.Runtime.InteropServices.UCOMIMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reduce (pbc As UCOMIBindCtx, dwReduceHowFar As Integer, ByRef ppmkToLeft As UCOMIMoniker, ByRef ppmkReduced As UCOMIMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reduce(System::Runtime::InteropServices::UCOMIBindCtx ^ pbc, int dwReduceHowFar, System::Runtime::InteropServices::UCOMIMoniker ^ % ppmkToLeft, [Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIMoniker ^ % ppmkReduced);" />
      <MemberSignature Language="F#" Value="abstract member Reduce : System.Runtime.InteropServices.UCOMIBindCtx * int *  *  -&gt; unit" Usage="uCOMIMoniker.Reduce (pbc, dwReduceHowFar, ppmkToLeft, ppmkReduced)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pbc" Type="System.Runtime.InteropServices.UCOMIBindCtx" />
        <Parameter Name="dwReduceHowFar" Type="System.Int32" />
        <Parameter Name="ppmkToLeft" Type="System.Runtime.InteropServices.UCOMIMoniker&amp;" RefType="ref" />
        <Parameter Name="ppmkReduced" Type="System.Runtime.InteropServices.UCOMIMoniker&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pbc">
          <span data-ttu-id="917ee-176">Référence à l'interface <see langword="IBindCtx" /> sur le contexte de liaison à utiliser dans cette opération de liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-176">A reference to the <see langword="IBindCtx" /> interface on the bind context to be used in this binding operation.</span>
          </span>
        </param>
        <param name="dwReduceHowFar">
          <span data-ttu-id="917ee-177">Spécifie le niveau de réduction souhaité pour ce moniker.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-177">Specifies how far this moniker should be reduced.</span>
          </span>
        </param>
        <param name="ppmkToLeft">
          <span data-ttu-id="917ee-178">Référence au moniker à gauche de ce moniker.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-178">A reference to the moniker to the left of this moniker.</span>
          </span>
        </param>
        <param name="ppmkReduced">
          <span data-ttu-id="917ee-179">Lors d'un retour, référence à la forme réduite de ce moniker, pouvant être <see langword="null" /> si une erreur se produit ou si ce moniker est réduit à une taille nulle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-179">On successful return, a reference to the reduced form of this moniker, which can be <see langword="null" /> if an error occurs or if this moniker is reduced to nothing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="917ee-180">Retourne un moniker réduit correspondant à un autre moniker qui se réfère au même objet que ce moniker mais peut être lié avec une efficacité équivalente ou supérieure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-180">Returns a reduced moniker which is another moniker that refers to the same object as this moniker but can be bound with equal or greater efficiency.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="917ee-181">Pour plus d’informations sur `IMoniker::Reduce`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="917ee-181">For more information about `IMoniker::Reduce`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelativePathTo">
      <MemberSignature Language="C#" Value="public void RelativePathTo (System.Runtime.InteropServices.UCOMIMoniker pmkOther, out System.Runtime.InteropServices.UCOMIMoniker ppmkRelPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RelativePathTo(class System.Runtime.InteropServices.UCOMIMoniker pmkOther, [out] class System.Runtime.InteropServices.UCOMIMoniker&amp; ppmkRelPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.RelativePathTo(System.Runtime.InteropServices.UCOMIMoniker,System.Runtime.InteropServices.UCOMIMoniker@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RelativePathTo (pmkOther As UCOMIMoniker, ByRef ppmkRelPath As UCOMIMoniker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RelativePathTo(System::Runtime::InteropServices::UCOMIMoniker ^ pmkOther, [Runtime::InteropServices::Out] System::Runtime::InteropServices::UCOMIMoniker ^ % ppmkRelPath);" />
      <MemberSignature Language="F#" Value="abstract member RelativePathTo : System.Runtime.InteropServices.UCOMIMoniker *  -&gt; unit" Usage="uCOMIMoniker.RelativePathTo (pmkOther, ppmkRelPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pmkOther" Type="System.Runtime.InteropServices.UCOMIMoniker" />
        <Parameter Name="ppmkRelPath" Type="System.Runtime.InteropServices.UCOMIMoniker&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pmkOther">
          <span data-ttu-id="917ee-182">Référence au moniker vers lequel un chemin relatif doit être pris.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-182">A reference to the moniker to which a relative path should be taken.</span>
          </span>
        </param>
        <param name="ppmkRelPath">
          <span data-ttu-id="917ee-183">Lors d'un retour, référence au moniker relatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-183">On successful return, reference to the relative moniker.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="917ee-184">Fournit un moniker qui, lorsqu'il est ajouté à ce moniker (ou à un moniker de structure similaire), produit le moniker spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-184">Supplies a moniker that, when appended to this moniker (or one with a similar structure), yields the specified moniker.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="917ee-185">Pour plus d’informations sur `IMoniker::RelativePath`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="917ee-185">For more information about `IMoniker::RelativePath`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Runtime.InteropServices.UCOMIStream pStm, bool fClearDirty);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.Runtime.InteropServices.UCOMIStream pStm, bool fClearDirty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.InteropServices.UCOMIMoniker.Save(System.Runtime.InteropServices.UCOMIStream,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (pStm As UCOMIStream, fClearDirty As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Runtime::InteropServices::UCOMIStream ^ pStm, bool fClearDirty);" />
      <MemberSignature Language="F#" Value="abstract member Save : System.Runtime.InteropServices.UCOMIStream * bool -&gt; unit" Usage="uCOMIMoniker.Save (pStm, fClearDirty)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pStm" Type="System.Runtime.InteropServices.UCOMIStream" />
        <Parameter Name="fClearDirty" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="pStm">
          <span data-ttu-id="917ee-186">Flux dans lequel l'objet est enregistré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-186">The stream into which the object is saved.</span>
          </span>
        </param>
        <param name="fClearDirty">
          <span data-ttu-id="917ee-187">Indique s'il faut désactiver l'indicateur modifié à la fin de l'enregistrement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-187">Indicates whether to clear the modified flag after the save is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="917ee-188">Enregistre un objet dans le flux spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="917ee-188">Saves an object to the specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="917ee-189">Pour plus d’informations sur `IPersistStream::Save`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="917ee-189">For more information about `IPersistStream::Save`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>