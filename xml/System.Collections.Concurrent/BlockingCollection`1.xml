<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BlockingCollection`1.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac50df771ecf34f5bb842d4f014e7a03bea934d6866.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">0df771ecf34f5bb842d4f014e7a03bea934d6866</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>The type of elements in the collection.</source>
          <target state="translated">Type des éléments de la collection.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Provides blocking and bounding capabilities for thread-safe collections that implement <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /&gt;</ph>.</source>
          <target state="translated">Fournit des fonctions bloquantes et englobantes pour les collections thread-safe qui implémentent <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is a thread-safe collection class that provides the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> est une classe de collection thread-safe qui offre les avantages suivants :</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>An implementation of the producer/consumer pattern; <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is a wrapper for the <ph id="ph2">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> interface.</source>
          <target state="translated">Une implémentation du modèle de producteur/consommateur ; <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> est un wrapper pour le <ph id="ph2">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Concurrent addition and removal of items from multiple threads with the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A&gt;</ph> and  <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph> methods.</source>
          <target state="translated">Ajout simultané et la suppression d’éléments à partir de plusieurs threads avec le <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>A bounded collection that blocks <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph> operations when the collection is full or empty.</source>
          <target state="translated">Une collection limitée qui bloque <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph> opérations lors de la collection est plein ou vide.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Cancellation of <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph> operations by using a <ph id="ph3">&lt;xref:System.Threading.CancellationToken&gt;</ph> object in the  <ph id="ph4">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryAdd%2A&gt;</ph> or <ph id="ph5">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A&gt;</ph> method.</source>
          <target state="translated">L’annulation de <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A&gt;</ph> ou <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph> opérations à l’aide un <ph id="ph3">&lt;xref:System.Threading.CancellationToken&gt;</ph> de l’objet dans le <ph id="ph4">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryAdd%2A&gt;</ph> ou <ph id="ph5">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>This type implements the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</source>
          <target state="translated">Ce type implémente le <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>When you have finished using the type, you should dispose of it either directly or indirectly.</source>
          <target state="translated">Lorsque vous avez fini d’utiliser le type, vous devez la supprimer directement ou indirectement.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>To dispose of the type directly, call its <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> method in a <ph id="ph2">`try`</ph><ph id="ph3">/</ph><ph id="ph4">`catch`</ph> block.</source>
          <target state="translated">Pour supprimer le type directement, vous devez appeler sa <ph id="ph1">&lt;xref:System.IDisposable.Dispose%2A&gt;</ph> méthode dans un <ph id="ph2">`try`</ph> <ph id="ph3">/</ph> <ph id="ph4">`catch`</ph> bloc.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>To dispose of it indirectly, use a language construct such as <ph id="ph1">`using`</ph> (in C#) or <ph id="ph2">`Using`</ph> (in Visual Basic).</source>
          <target state="translated">Pour la supprimer indirectement, utiliser une construction de langage telles que <ph id="ph1">`using`</ph> (en c#) ou <ph id="ph2">`Using`</ph> (en Visual Basic).</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>For more information, see the "Using an Object that Implements IDisposable" section in the <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> interface topic.</source>
          <target state="translated">Pour plus d’informations, consultez la section « Utilisant un objet qui implémente IDisposable » dans la <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> rubrique de l’interface.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Also, note that the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Dispose&gt;</ph> method is not thread-safe.</source>
          <target state="translated">Notez également que le <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Dispose&gt;</ph> méthode n’est pas thread-safe.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>All other public and protected members of <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> are thread-safe and may be used concurrently from multiple threads.</source>
          <target state="translated">Tous les autres membres publics et protégés de <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> sont thread-safe et peuvent être utilisés simultanément à partir de plusieurs threads.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> represents a collection that allows for thread-safe adding and removal of data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> représente une collection qui permet l’ajout de thread-safe et à la suppression de données.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is used as a wrapper for an <ph id="ph2">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> instance, and allows removal attempts from the collection to block until data is available to be removed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> est utilisé comme un wrapper pour un <ph id="ph2">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> d’instance et autorise les tentatives de suppression de la collection bloquer jusqu'à ce que les données soient disponibles pour être supprimé.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Similarly, you can create a <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> to enforce an upper bound on the number of data elements allowed in the <ph id="ph2">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph>; addition attempts to the collection may then block until space is available to store the added items.</source>
          <target state="translated">De même, vous pouvez créer un <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> pour appliquer une limite supérieure du nombre d’éléments de données autorisés dans les <ph id="ph2">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph>; les tentatives d’ajout à la collection puis peuvent se bloquer jusqu'à ce que l’espace est suffisant stocker les éléments ajoutés.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>In this manner, <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is similar to a traditional blocking queue data structure, except that the underlying data storage mechanism is abstracted away as an <ph id="ph2">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph>.</source>
          <target state="translated">De cette manière, <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> est similaire à une structure de données de file d’attente bloquante traditionnelle, mais le mécanisme de stockage de données sous-jacent est abstrait comme un <ph id="ph2">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> supports bounding and blocking.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> prend en charge la délimitation et le blocage.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Bounding means that you can set the maximum capacity of the collection.</source>
          <target state="translated">Rectangle englobant signifie que vous pouvez définir la capacité maximale de la collection.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Bounding is important in certain scenarios because it enables you to control the maximum size of the collection in memory, and it prevents the producing threads from moving too far ahead of the consuming threads.Multiple threads or tasks can add items to the collection concurrently, and if the collection reaches its specified maximum capacity, the producing threads will block until an item is removed.</source>
          <target state="translated">Rectangle englobant est importante dans certains scénarios, car il vous permet de contrôler la taille maximale de la collection en mémoire et empêche les threads producteurs de le déplacer trop loin avant les threads de consommation. Plusieurs threads ou tâches peuvent ajouter des éléments à la collection simultanément, et si la collection atteint sa capacité maximale spécifiée, les threads producteurs bloque jusqu'à ce qu’un élément est supprimé.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Multiple consumers can remove items concurrently, and if the collection becomes empty, the consuming threads will block until a producer adds an item.</source>
          <target state="translated">Plusieurs consommateurs peuvent supprimer des éléments simultanément, et si la collection devient vide, les threads consommateur se bloquent jusqu’à ce qu’un producteur ajoute un élément.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>A producing thread can call the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.CompleteAdding%2A&gt;</ph> method to indicate that no more items will be added.</source>
          <target state="translated">Un thread producteur peut appeler le <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.CompleteAdding%2A&gt;</ph> méthode pour indiquer qu’aucun autre élément n’est ajouté.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Consumers monitor the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A&gt;</ph> property to know when the collection is empty and no more items will be added.</source>
          <target state="translated">Les consommateurs surveillent la propriété <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A&gt;</ph> pour savoir quand la collection est vide et quand aucun autre élément ne sera ajouté.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph> operations are typically performed in a loop.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph> opérations sont généralement effectuées dans une boucle.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>You can cancel a loop by passing in a <ph id="ph1">&lt;xref:System.Threading.CancellationToken&gt;</ph> object to the <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryAdd%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A&gt;</ph> method, and then checking the value of the token's <ph id="ph4">&lt;xref:System.Threading.CancellationToken.IsCancellationRequested%2A&gt;</ph> property on each iteration.</source>
          <target state="translated">Vous pouvez annuler une boucle en passant un <ph id="ph1">&lt;xref:System.Threading.CancellationToken&gt;</ph> de l’objet à la <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryAdd%2A&gt;</ph> ou <ph id="ph3">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A&gt;</ph> (méthode) et en activant la valeur du jeton <ph id="ph4">&lt;xref:System.Threading.CancellationToken.IsCancellationRequested%2A&gt;</ph> propriété à chaque itération.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>If the value is <ph id="ph1">`true`</ph>, it is up to you to respond the cancellation request by cleaning up any resources and exiting the loop.</source>
          <target state="translated">Si la valeur est <ph id="ph1">`true`</ph>, il vous incombe de répondre de la demande d’annulation à nettoyer les ressources et de quitter la boucle.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>When you create a <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> object, you can specify not only the bounded capacity but also the type of collection to use.</source>
          <target state="translated">Lorsque vous créez un <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> objet, vous pouvez spécifier non seulement la capacité limitée mais aussi le type de collection à utiliser.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>For example, you could specify a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> object for first in, first out (FIFO) behavior, or a <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> object for last in, first out (LIFO) behavior.</source>
          <target state="translated">Par exemple, vous pouvez spécifier un <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> objet pour la première comportement premier sorti (FIFO), ou un <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> objet pour le dernier entré, premier sorti (LIFO) comportement.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>You can use any collection class that implements the <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> interface.</source>
          <target state="translated">Vous pouvez utiliser n’importe quelle classe de collection qui implémente l’interface <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>The default collection type for <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</source>
          <target state="translated">Le type de collection par défaut pour <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> est <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Do not modify the underlying collection directly.</source>
          <target state="translated">Ne modifiez pas directement la collection sous-jacente.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Use <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> methods to add or remove elements.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> méthodes pour ajouter ou supprimer des éléments.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>The <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> object can become corrupted if you change the underlying collection directly.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> objet peut être endommagé Si vous modifiez la collection sous-jacente directement.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>The following example shows how to add and take items concurrently from a blocking collection:</source>
          <target state="translated">L’exemple suivant montre comment ajouter et prendre des éléments simultanément à partir d’une collection de blocage :</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>The Dispose method is not thread-safe.</source>
          <target state="translated">La méthode Dispose n’est pas thread-safe.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>All other public and protected members of <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> are thread-safe and may be used concurrently from multiple threads.</source>
          <target state="translated">Tous les autres membres publics et protégés de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> sont thread-safe et peuvent être utilisés simultanément à partir de plusieurs threads.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> class without an upper-bound.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> sans limite supérieure.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> class without an upper-bound.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> sans limite supérieure.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor">
          <source>The default underlying collection is a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> object, which provides first in, first out (FIFO) behavior.</source>
          <target state="translated">La collection sous-jacente par défaut est une <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> objet, qui fournit le premier comportement premier sorti (FIFO).</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0})">
          <source>The collection to use as the underlying data store.</source>
          <target state="translated">Collection à utiliser comme magasin de données sous-jacent.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> class without an upper-bound and using the provided <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /&gt;</ph> as its underlying data store.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> sans limite supérieure et qui utilise le <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /&gt;</ph> fourni comme magasin de données sous-jacent.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0})">
          <source>The <ph id="ph1">&lt;paramref name="collection" /&gt;</ph> argument is null.</source>
          <target state="translated">L’argument <ph id="ph1">&lt;paramref name="collection" /&gt;</ph> a la valeur null.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Int32)">
          <source>The bounded size of the collection.</source>
          <target state="translated">Taille limite de la collection.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> class with the specified upper-bound.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> avec la limite supérieure spécifiée.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Int32)">
          <source>The default underlying collection is a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</source>
          <target state="translated">La collection sous-jacente par défaut est un <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="boundedCapacity" /&gt;</ph> is not a positive value.</source>
          <target state="translated">Le <ph id="ph1">&lt;paramref name="boundedCapacity" /&gt;</ph> n'est pas une valeur positive.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0},System.Int32)">
          <source>The collection to use as the underlying data store.</source>
          <target state="translated">Collection à utiliser comme magasin de données sous-jacent.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0},System.Int32)">
          <source>The bounded size of the collection.</source>
          <target state="translated">Taille limite de la collection.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0},System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> class with the specified upper-bound and using the provided <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /&gt;</ph> as its underlying data store.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> avec la limite supérieure spécifiée et qui utilise le <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" /&gt;</ph> fourni comme magasin de données sous-jacent.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0},System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="collection" /&gt;</ph> argument is null.</source>
          <target state="translated">L’argument <ph id="ph1">&lt;paramref name="collection" /&gt;</ph> a la valeur null.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0},System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="boundedCapacity" /&gt;</ph> is not a positive value.</source>
          <target state="translated">Le <ph id="ph1">&lt;paramref name="boundedCapacity" /&gt;</ph> n'est pas une valeur positive.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.#ctor(System.Collections.Concurrent.IProducerConsumerCollection{`0},System.Int32)">
          <source>The supplied <ph id="ph1">&lt;paramref name="collection" /&gt;</ph> contains more values than is permitted by <ph id="ph2">&lt;paramref name="boundedCapacity" /&gt;</ph>.</source>
          <target state="translated">La <ph id="ph1">&lt;paramref name="collection" /&gt;</ph> fournie contient plus de valeurs que <ph id="ph2">&lt;paramref name="boundedCapacity" /&gt;</ph> n'autorise.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Adds the item to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</source>
          <target state="translated">Ajoute l'élément au <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0)">
          <source>The item to be added to the collection.</source>
          <target state="translated">Élément à ajouter à la collection.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0)">
          <source>The value can be a null reference.</source>
          <target state="translated">La valeur peut être une référence null.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0)">
          <source>Adds the item to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</source>
          <target state="translated">Ajoute l'élément au <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0)">
          <source>If a bounded capacity was specified when this instance of <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> was initialized, a call to Add may block until space is available to store the provided item.</source>
          <target state="translated">Si une capacité liée a été spécifiée lors de cette instance de <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> a été initialisée, un appel à ajouter peut se bloquer jusqu'à ce que l’espace soit disponible pour stocker l’élément fourni.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been marked as complete with regards to additions.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été marqué comme complet en ce qui concerne les additions.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0)">
          <source>The underlying collection didn't accept the item.</source>
          <target state="translated">La collection sous-jacente n'a pas accepté l'élément.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0,System.Threading.CancellationToken)">
          <source>The item to be added to the collection.</source>
          <target state="translated">Élément à ajouter à la collection.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0,System.Threading.CancellationToken)">
          <source>The value can be a null reference.</source>
          <target state="translated">La valeur peut être une référence null.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0,System.Threading.CancellationToken)">
          <source>A cancellation token to observe.</source>
          <target state="translated">Jeton d'annulation à observer.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0,System.Threading.CancellationToken)">
          <source>Adds the item to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</source>
          <target state="translated">Ajoute l'élément au <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0,System.Threading.CancellationToken)">
          <source>If a bounded capacity was specified when this instance of <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> was initialized, a call to <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A&gt;</ph> may block until space is available to store the provided item.</source>
          <target state="translated">Si une capacité liée a été spécifiée lors de cette instance de <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> a été initialisée, un appel à <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Add%2A&gt;</ph> peut bloquer jusqu'à ce que l’espace soit disponible pour stocker l’élément fourni.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0,System.Threading.CancellationToken)">
          <source>This method can return early with an <ph id="ph1">&lt;xref:System.OperationCanceledException&gt;</ph> if the <ph id="ph2">`cancellationToken`</ph> is canceled.</source>
          <target state="translated">Cette méthode peut être retournée rapidement avec un <ph id="ph1">&lt;xref:System.OperationCanceledException&gt;</ph> si la <ph id="ph2">`cancellationToken`</ph> est annulée.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0,System.Threading.CancellationToken)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> is canceled.</source>
          <target state="translated">Si le <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> est annulé.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed or the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> that owns <ph id="ph3">&lt;paramref name="cancellationToken" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimé ou <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> qui possède <ph id="ph3">&lt;paramref name="cancellationToken" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been marked as complete with regards to additions.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été marqué comme complet en ce qui concerne les additions.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0,System.Threading.CancellationToken)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Add(`0,System.Threading.CancellationToken)">
          <source>The underlying collection didn't accept the item.</source>
          <target state="translated">La collection sous-jacente n'a pas accepté l'élément.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Adds the specified item to any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">Ajoute l'élément spécifié à l'une des instances de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> spécifiées.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>The array of collections.</source>
          <target state="translated">Tableau de collections.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>The item to be added to one of the collections.</source>
          <target state="translated">Élément à ajouter à l’une des collections.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>Adds the specified item to any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">Ajoute l'élément spécifié à l'une des instances de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> spécifiées.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>The index of the collection in the <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> array to which the item was added.</source>
          <target state="translated">Index de la collection dans le tableau <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> auquel l'élément a été ajouté.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>If a bounded capacity was specified when all of the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> instances were initialized, a call to AddToAny may block until space is available in one of the collections to store the provided item.</source>
          <target state="translated">Si une capacité liée a été spécifiée quand toutes les <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> instances ont été initialisés, un appel à AddToAny peut se bloquer jusqu'à ce que l’espace est disponible dans une des collections pour stocker l’élément fourni.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>At least one of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances has been disposed.</source>
          <target state="translated">Au moins, l'une des instances <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimée.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is null.</source>
          <target state="translated">L’argument <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> a la valeur null.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>The count of <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
          <target state="translated">Le compte de <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> est supérieur à la taille maximale de 62 pour STA et 63 pour le MTA.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</source>
          <target state="translated">L'argument <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> est un tableau de longueur 0 ou contient un élément null, ou au moins, l'une des collections a été marquée comme complète pour l'ajout.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>At least one underlying collection didn't accept the item.</source>
          <target state="translated">Au moins, une collection sous-jacente n'a pas accepté l'élément.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
          <source>The array of collections.</source>
          <target state="translated">Tableau de collections.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
          <source>The item to be added to one of the collections.</source>
          <target state="translated">Élément à ajouter à l’une des collections.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
          <source>A cancellation token to observe.</source>
          <target state="translated">Jeton d'annulation à observer.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
          <source>Adds the specified item to any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">Ajoute l'élément spécifié à l'une des instances de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> spécifiées.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
          <source>The index of the collection in the <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> array to which the item was added.</source>
          <target state="translated">Index de la collection dans le tableau <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> auquel l'élément a été ajouté.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
          <source>If a bounded capacity was specified when all of the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> instances were initialized, a call to AddToAny may block until space is available in one of the collections to store the provided item.</source>
          <target state="translated">Si une capacité liée a été spécifiée quand toutes les <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> instances ont été initialisés, un appel à AddToAny peut se bloquer jusqu'à ce que l’espace est disponible dans une des collections pour stocker l’élément fourni.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
          <source>This method may return before the item is added to any collection if the <ph id="ph1">`cancellationToken`</ph> is canceled before space is available.</source>
          <target state="translated">Cette méthode peut retourner avant que l’élément est ajouté à toute collection si la <ph id="ph1">`cancellationToken`</ph> est annulé avant que l’espace est disponible.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> is canceled.</source>
          <target state="translated">Si le <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> est annulé.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
          <source>At least one underlying collection didn't accept the item.</source>
          <target state="translated">Au moins, une collection sous-jacente n'a pas accepté l'élément.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is null.</source>
          <target state="translated">L’argument <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> a la valeur null.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
          <source>The count of <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
          <target state="translated">Le compte de <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> est supérieur à la taille maximale de 62 pour STA et 63 pour le MTA.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</source>
          <target state="translated">L'argument <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> est un tableau de longueur 0 ou contient un élément null, ou au moins, l'une des collections a été marquée comme complète pour l'ajout.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.AddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Threading.CancellationToken)">
          <source>At least one of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances has been disposed, or the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> that created <ph id="ph3">&lt;paramref name="cancellationToken" /&gt;</ph> has been disposed.</source>
          <target state="translated">Au moins l'une des instances <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimée ou le <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> qui a créé <ph id="ph3">&lt;paramref name="cancellationToken" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.BlockingCollection`1.BoundedCapacity">
          <source>Gets the bounded capacity of this <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">Obtient la capacité limite de cette instance de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.BlockingCollection`1.BoundedCapacity">
          <source>The bounded capacity of this collection, or int.MaxValue if no bound was supplied.</source>
          <target state="translated">Capacité limite de cette collection, ou int.MaxValue si aucune limite n’a été fournie.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.BlockingCollection`1.BoundedCapacity">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding">
          <source>Marks the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances as not accepting any more additions.</source>
          <target state="translated">Marque les instances de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> comme n'acceptant plus d'ajouts.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding">
          <source>After a collection has been marked as complete for adding, adding to the collection is not permitted and attempts to remove from the collection will not wait when the collection is empty.</source>
          <target state="translated">Après qu’une collection a été marquée comme complète pour l’ajout, l’ajout à la collection n’est pas autorisé et tente de supprimer de la collection n’attendront pas que lorsque la collection est vide.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">Tableau unidimensionnel qui constitue la destination des éléments copiés à partir de l'instance de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">Ce tableau doit avoir une indexation de base zéro.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Index de base zéro dans un <bpt id="p1">&lt;c&gt;</bpt>tableau<ept id="p1">&lt;/c&gt;</ept> auquel commencer la copie.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
          <source>Copies all of the items in the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance to a compatible one-dimensional array, starting at the specified index of the target array.</source>
          <target state="translated">Copie tous les éléments dans l'instance de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> dans un tableau compatible unidimensionnel, en commençant à l'index spécifié du tableau cible.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
          <source>CopyTo represents a snapshot of the collection at a precise point in time.</source>
          <target state="translated">CopyTo représente un instantané de la collection à un point précis dans le temps.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
          <source>If other threads are adding or removing items while CopyTo is executing, then the elements returned by CopyTo might not represent the state of the collection.</source>
          <target state="translated">Si d’autres threads sont Ajout ou suppression d’éléments pendant l’exécution de CopyTo, les éléments retournés par CopyTo ne peuvent pas représenter l’état de la collection.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="array" /&gt;</ph> argument is null.</source>
          <target state="translated">L’argument <ph id="ph1">&lt;paramref name="array" /&gt;</ph> a la valeur null.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="index" /&gt;</ph> argument is less than zero.</source>
          <target state="translated">L'argument <ph id="ph1">&lt;paramref name="index" /&gt;</ph> est moins que zéro.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="index" /&gt;</ph> argument is equal to or greater than the length of the <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated">L'argument <ph id="ph1">&lt;paramref name="index" /&gt;</ph> est égal à ou supérieur à la longueur de l' <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
          <source>The destination array is too small to hold all of the BlockingCcollection elements.</source>
          <target state="translated">Le tableau de destination est trop petit pour contenir tous les éléments BlockingCcollection.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
          <source>The array rank doesn't match.</source>
          <target state="translated">Le classement de tableau ne correspond pas.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.CopyTo(`0[],System.Int32)">
          <source>The array type is incompatible with the type of the BlockingCollection elements.</source>
          <target state="translated">Le type de tableau est incompatible avec le type des éléments BlockingCollection.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.BlockingCollection`1.Count">
          <source>Gets the number of items contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</source>
          <target state="translated">Obtient le nombre d'éléments contenus dans <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.BlockingCollection`1.Count">
          <source>The number of items contained in the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</source>
          <target state="translated">Nombre d'éléments contenus dans <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.BlockingCollection`1.Count">
          <source>If any method in BlockingCollection is executing while the Count property is being accessd, the return value is approximate.</source>
          <target state="translated">Si une méthode dans BlockingCollection s’exécute pendant que la propriété Count est un accès, la valeur de retour est approximative.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.BlockingCollection`1.Count">
          <source>Count may reflect a number that is either greater than or less than the actual number of items in the BlockingCollection.</source>
          <target state="translated">Nombre peut refléter un nombre qui est supérieur ou inférieur au nombre réel d’éléments dans BlockingCollection.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.BlockingCollection`1.Count">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> class.</source>
          <target state="translated">Libère toutes les ressources utilisées par l'instance actuelle de la classe <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Dispose">
          <source>Releases all resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> class.</source>
          <target state="translated">Libère toutes les ressources utilisées par l'instance actuelle de la classe <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method is not thread-safe.</source>
          <target state="translated">Le <ph id="ph1">`Dispose`</ph> méthode n’est pas thread-safe.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Dispose">
          <source>Call <ph id="ph1">`Dispose`</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>.</source>
          <target state="translated">Appelez la méthode <ph id="ph1">`Dispose`</ph> une fois que vous avez terminé d'utiliser <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Dispose">
          <source>The <ph id="ph1">`Dispose`</ph> method leaves the <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> in an unusable state.</source>
          <target state="translated">La méthode <ph id="ph1">`Dispose`</ph> rend le <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> inutilisable.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Dispose">
          <source>After calling <ph id="ph1">`Dispose`</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> was occupying.</source>
          <target state="translated">Après avoir appelé <ph id="ph1">`Dispose`</ph>, vous devez libérer toutes les références à la <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> pour que le garbage collector puisse récupérer la mémoire qui le <ph id="ph3">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> occupée.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>de nettoyage des ressources non managées<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> et <bpt id="p2">[</bpt>implémentant une méthode de suppression<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Dispose">
          <source>Always call <ph id="ph1">`Dispose`</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>.</source>
          <target state="translated">Appelez toujours <ph id="ph1">`Dispose`</ph> avant de libérer votre dernière référence à <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> de l'objet <ph id="ph2">`Finalize`</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Dispose(System.Boolean)">
          <source>Whether being disposed explicitly (true) or due to a finalizer (false).</source>
          <target state="translated">Si la suppression est explicite (True) ou due à un finaliseur (False).</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Dispose(System.Boolean)">
          <source>Releases resources used by the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">Libère les ressources utilisées par l'instance de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Provides a consuming <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> for items in the collection.</source>
          <target state="translated">Fournit un <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> de consommation pour les éléments de la collection.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable">
          <source>Provides a consuming <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> for items in the collection.</source>
          <target state="translated">Fournit un <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> de consommation pour les éléments de la collection.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> that removes and returns items from the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> qui supprime et retourne des éléments de la collection.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.GetConsumingEnumerable%2A&gt;</ph> method:</source>
          <target state="translated">L’exemple suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.GetConsumingEnumerable%2A&gt;</ph> méthode :</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable(System.Threading.CancellationToken)">
          <source>A cancellation token to observe.</source>
          <target state="translated">Jeton d'annulation à observer.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable(System.Threading.CancellationToken)">
          <source>Provides a consuming <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> for items in the collection.</source>
          <target state="translated">Fournit un <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> de consommation pour les éléments de la collection.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable(System.Threading.CancellationToken)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> that removes and returns items from the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerable`1" /&gt;</ph> qui supprime et retourne des éléments de la collection.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable(System.Threading.CancellationToken)">
          <source>This method enables client code to remove items from the collection by using a foreach loop (For Each in Visual Basic), or <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> or a PLINQ query.</source>
          <target state="translated">Cette méthode permet au code du client supprimer des éléments de la collection à l’aide d’une boucle foreach (pour chaque en Visual Basic), ou <ph id="ph1">&lt;xref:System.Threading.Tasks.Parallel.ForEach%2A?displayProperty=nameWithType&gt;</ph> ou une requête PLINQ.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable(System.Threading.CancellationToken)">
          <source>The enumerator will continue to provide items (if any exist) until <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A&gt;</ph> returns true, and if <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A&gt;</ph> is false the loop blocks until an item becomes available or until the <ph id="ph3">&lt;xref:System.Threading.CancellationToken&gt;</ph> is cancelled.</source>
          <target state="translated">L’énumérateur continuera à fournir des éléments (s’ils existent) jusqu'à ce que <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A&gt;</ph> retourne la valeur true et si <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.IsCompleted%2A&gt;</ph> a la valeur false la boucle se bloque jusqu'à ce qu’un élément devienne disponible ou jusqu'à ce que le <ph id="ph3">&lt;xref:System.Threading.CancellationToken&gt;</ph> est annulée.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable(System.Threading.CancellationToken)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> is canceled.</source>
          <target state="translated">Si le <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> est annulé.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.GetConsumingEnumerable(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed or the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> that created <ph id="ph3">&lt;paramref name="cancellationToken" /&gt;</ph> has been disposed</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimé ou le <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> qui a créé <ph id="ph3">&lt;paramref name="cancellationToken" /&gt;</ph> a été supprimé</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.BlockingCollection`1.IsAddingCompleted">
          <source>Gets whether this <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been marked as complete for adding.</source>
          <target state="translated">Obtient si ce <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été marqué comme ne pouvant plus accepter d'ajout.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.BlockingCollection`1.IsAddingCompleted">
          <source>Whether this collection has been marked as complete for adding.</source>
          <target state="translated">Si cette collection a été marquée comme ne pouvant plus accepter d’ajout.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.BlockingCollection`1.IsAddingCompleted">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.BlockingCollection`1.IsCompleted">
          <source>Gets whether this <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been marked as complete for adding and is empty.</source>
          <target state="translated">Obtient si ce <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été marqué comme ne pouvant plus accepter d'ajout et est vide.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.BlockingCollection`1.IsCompleted">
          <source>Whether this collection has been marked as complete for adding and is empty.</source>
          <target state="translated">Si cette collection a été marquée comme ne pouvant plus accepter d’ajout et est vide.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.BlockingCollection`1.IsCompleted">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Provides an <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> for items in the collection.</source>
          <target state="translated">Fournit un <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> pour les éléments de la collection.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> for the items in the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IEnumerator`1" /&gt;</ph> pour les éléments de la collection.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>Unlike <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.GetConsumingEnumerable%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> returns a standard enumerator that does not modify the underlying collection.</source>
          <target state="translated">Contrairement aux <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.GetConsumingEnumerable%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A?displayProperty=nameWithType&gt;</ph> retourne un énumérateur standard qui ne modifie pas la collection sous-jacente.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>If other threads are adding or removing elements concurrently when GetEnumerator is called, then the elements returned by the enumerator might not represent the current state of the collection.</source>
          <target state="translated">Si d’autres threads sont ajouter ou supprimer des éléments simultanément lorsque GetEnumerator est appelé, les éléments retournés par l’énumérateur ne peuvent pas représenter l’état actuel de la collection.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#Generic#IEnumerable&amp;lt;T&amp;gt;#GetEnumerator">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">Tableau unidimensionnel qui constitue la destination des éléments copiés à partir de l'instance de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">Ce tableau doit avoir une indexation de base zéro.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The zero-based index in <bpt id="p1">&lt;c&gt;</bpt>array<ept id="p1">&lt;/c&gt;</ept> at which copying begins.</source>
          <target state="translated">Index de base zéro dans un <bpt id="p1">&lt;c&gt;</bpt>tableau<ept id="p1">&lt;/c&gt;</ept> auquel commencer la copie.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>Copies all of the items in the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance to a compatible one-dimensional array, starting at the specified index of the target array.</source>
          <target state="translated">Copie tous les éléments dans l'instance de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> dans un tableau compatible unidimensionnel, en commençant à l'index spécifié du tableau cible.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="array" /&gt;</ph> argument is null.</source>
          <target state="translated">L’argument <ph id="ph1">&lt;paramref name="array" /&gt;</ph> a la valeur null.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="index" /&gt;</ph> argument is less than zero.</source>
          <target state="translated">L'argument <ph id="ph1">&lt;paramref name="index" /&gt;</ph> est moins que zéro.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="index" /&gt;</ph> argument is equal to or greater than the length of the <ph id="ph2">&lt;paramref name="array" /&gt;</ph>, the array is multidimensional, or the type parameter for the collection cannot be cast automatically to the type of the destination array.</source>
          <target state="translated">L'argument <ph id="ph1">&lt;paramref name="index" /&gt;</ph> est égal à ou supérieur à la longueur de l' <ph id="ph2">&lt;paramref name="array" /&gt;</ph>, le tableau est multidimensionnel, ou le paramètre de type pour la collection ne peut pas être casté automatiquement au type du tableau de destination.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#IsSynchronized">
          <source>Gets a value indicating whether access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> is synchronized.</source>
          <target state="translated">Obtient une valeur indiquant si l'accès à <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> est synchronisé.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#IsSynchronized">
          <source>always returns false.</source>
          <target state="translated">Retourne toujours false.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#IsSynchronized">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#SyncRoot">
          <source>Gets an object that can be used to synchronize access to the <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</source>
          <target state="translated">Obtient un objet qui peut être utilisé pour synchroniser l'accès à <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#SyncRoot">
          <source>This property is not supported.</source>
          <target state="translated">Cette propriété n'est pas prise en charge.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#SyncRoot">
          <source>returns null.</source>
          <target state="translated">Retourne la valeur NULL.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Collections.Concurrent.BlockingCollection`1.System#Collections#ICollection#SyncRoot">
          <source>The SyncRoot property is not supported.</source>
          <target state="translated">La propriété SyncRoot n'est pas prise en charge.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Provides an <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for items in the collection.</source>
          <target state="translated">Fournit un <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> pour les éléments de la collection.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> for the items in the collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> pour les éléments de la collection.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Removes an item from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</source>
          <target state="translated">Supprime un élément de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take">
          <source>Removes  an item from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</source>
          <target state="translated">Supprime un élément de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take">
          <source>The item removed from the collection.</source>
          <target state="translated">Élément supprimé de la collection.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take">
          <source>A call to <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph> may block until an item is available to be removed.</source>
          <target state="translated">Un appel à <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph> peut bloquer jusqu'à ce qu’un élément est disponible pour être supprimé.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take">
          <source>The order in which an item is removed depends on the type of collection used to create the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> instance.</source>
          <target state="translated">L'ordre dans lequel un élément est supprimé dépend du type de collection utilisée pour créer l'instance <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take">
          <source>When you create a <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> object, you can specify the type of collection to use.</source>
          <target state="translated">Lorsque vous créez un <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> objet, vous pouvez spécifier le type de collection à utiliser.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take">
          <source>For example, you could specify a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> object for first in, first out (FIFO) behavior, or a <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> object for last in, first out (LIFO) behavior.</source>
          <target state="translated">Par exemple, vous pouvez spécifier un <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> objet pour la première comportement premier sorti (FIFO), ou un <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> objet pour le dernier entré, premier sorti (LIFO) comportement.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take">
          <source>You can use any collection class that implements the <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> interface.</source>
          <target state="translated">Vous pouvez utiliser n’importe quelle classe de collection qui implémente l’interface <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take">
          <source>The default collection type for <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</source>
          <target state="translated">Le type de collection par défaut pour <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> est <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take">
          <source>The underlying collection was modified outside of this <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance, or the <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> is empty and the collection has been marked as complete for adding.</source>
          <target state="translated">La collection sous-jacente a été modifiée en dehors de cette instance <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>, ou le <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> est vide et la collection a été marquée comme ne pouvant plus accepter d'ajout.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)">
          <source>Object that can be used to cancel the take operation.</source>
          <target state="translated">Objet pouvant être utilisé pour annuler l'opération Take.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)">
          <source>Removes an item from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</source>
          <target state="translated">Supprime un élément de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)">
          <source>The item removed from the collection.</source>
          <target state="translated">Élément supprimé de la collection.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)">
          <source>A call to <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph> may block until an item is available to be removed or the token is canceled.</source>
          <target state="translated">Un appel à <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.Take%2A&gt;</ph> peut bloquer jusqu'à ce qu’un élément est disponible pour le supprimer ou le jeton est annulé.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)">
          <source>The order in which an item is removed depends on the type of collection used to create the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> instance.</source>
          <target state="translated">L'ordre dans lequel un élément est supprimé dépend du type de collection utilisée pour créer l'instance <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)">
          <source>When you create a <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> object, you can specify the type of collection to use.</source>
          <target state="translated">Lorsque vous créez un <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> objet, vous pouvez spécifier le type de collection à utiliser.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)">
          <source>For example, you could specify a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> object for first in, first out (FIFO) behavior, or a <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> object for last in, first out (LIFO) behavior.</source>
          <target state="translated">Par exemple, vous pouvez spécifier un <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> objet pour la première comportement premier sorti (FIFO), ou un <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> objet pour le dernier entré, premier sorti (LIFO) comportement.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)">
          <source>You can use any collection class that implements the <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> interface.</source>
          <target state="translated">Vous pouvez utiliser n’importe quelle classe de collection qui implémente l’interface <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)">
          <source>The default collection type for <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</source>
          <target state="translated">Le type de collection par défaut pour <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> est <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> is canceled.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> est annulé.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed or the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> that created the token was canceled.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimé ou le <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> qui a créé le jeton a été annulé.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.Take(System.Threading.CancellationToken)">
          <source>The underlying collection was modified outside of this <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance or the BlockingCollection is marked as complete for adding, or the <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> is empty.</source>
          <target state="translated">La collection sous-jacente a été modifiée en dehors de cette instance <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> ou BlockingCollection est marqué comme terminé pour l'ajout, ou <ph id="ph2">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> est vide.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Takes an item from any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">Prend un élément de l'une des instances de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> spécifiées.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>The array of collections.</source>
          <target state="translated">Tableau de collections.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>The item removed from one of the collections.</source>
          <target state="translated">Élément supprimé de l’une des collections.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>Takes an item from any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">Prend un élément de l'une des instances de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> spécifiées.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>The index of the collection in the <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> array from which the item was removed.</source>
          <target state="translated">Index de la collection dans le tableau <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> duquel l'élément a été supprimé.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>A call to TakeFromAny may block until an item is available to be removed.</source>
          <target state="translated">Un appel à TakeFromAny peut se bloquer jusqu'à ce qu’un élément est disponible pour être supprimé.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>At least one of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances has been disposed.</source>
          <target state="translated">Au moins, l'une des instances <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimée.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is null.</source>
          <target state="translated">L’argument <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> a la valeur null.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>The count of <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
          <target state="translated">Le compte de <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> est supérieur à la taille maximale de 62 pour STA et 63 pour le MTA.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is a 0-length array or contains a null element or <ph id="ph2">&lt;see cref="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding" /&gt;</ph> has been called on the collection.</source>
          <target state="translated">L'argument <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> est un tableau de longueur 0 ou contient un élément null ou <ph id="ph2">&lt;see cref="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding" /&gt;</ph> a été appelé dans la collection.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>At least one of the underlying collections was modified outside of its <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">Au moins, l'une des collections sous-jacentes a été modifiée en dehors de son instance <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
          <source>The array of collections.</source>
          <target state="translated">Tableau de collections.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
          <source>The item removed from one of the collections.</source>
          <target state="translated">Élément supprimé de l’une des collections.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
          <source>A cancellation token to observe.</source>
          <target state="translated">Jeton d'annulation à observer.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
          <source>Takes an item from any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances while observing the specified cancellation token.</source>
          <target state="translated">Prend un élément de l'une des instances de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> spécifiées tout en observant le jeton d'annulation spécifié.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
          <source>The index of the collection in the <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> array from which the item was removed.</source>
          <target state="translated">Index de la collection dans le tableau <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> duquel l'élément a été supprimé.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
          <source>A call to TakeFromAny may block until an item is available to be removed.</source>
          <target state="translated">Un appel à TakeFromAny peut se bloquer jusqu'à ce qu’un élément est disponible pour être supprimé.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
          <source>The method will return early with an OperationCanceledException if the token is canceled.</source>
          <target state="translated">La méthode sera retournée rapidement avec une OperationCanceledException si le jeton est annulé.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> is canceled.</source>
          <target state="translated">Si le <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> est annulé.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
          <source>At least one of the underlying collections was modified outside of its <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">Au moins, l'une des collections sous-jacentes a été modifiée en dehors de son instance <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is null.</source>
          <target state="translated">L’argument <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> a la valeur null.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
          <source>The count of <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
          <target state="translated">Le compte de <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> est supérieur à la taille maximale de 62 pour STA et 63 pour le MTA.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is a 0-length array or contains a null element, or <ph id="ph2">&lt;see cref="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding" /&gt;</ph> has been called on the collection.</source>
          <target state="translated">L'argument <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> est un tableau de longueur 0 ou contient un élément null ou <ph id="ph2">&lt;see cref="M:System.Collections.Concurrent.BlockingCollection`1.CompleteAdding" /&gt;</ph> a été appelé dans la collection.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Threading.CancellationToken)">
          <source>At least one of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances has been disposed.</source>
          <target state="translated">Au moins, l'une des instances <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimée.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.ToArray">
          <source>Copies the items from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance into a new array.</source>
          <target state="translated">Copie les éléments de l'instance de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> dans un nouveau tableau.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.ToArray">
          <source>An array containing copies of the elements of the collection.</source>
          <target state="translated">Tableau contenant les copies des éléments de la collection.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.ToArray">
          <source>The copied elements are not removed from the collection.</source>
          <target state="translated">Les éléments copiés ne sont pas supprimés de la collection.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.ToArray">
          <source>If any method in BlockingCollection is executing while the ToArray method executes, the return value is approximate.</source>
          <target state="translated">Si une méthode dans BlockingCollection s’exécute pendant l’exécution de la méthode ToArray, la valeur de retour est approximative.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.ToArray">
          <source>ToArray  may include items that have already been removed, or exclude items that have already been inserted.</source>
          <target state="translated">ToArray peut inclure des éléments qui ont déjà été supprimés ou exclure des éléments qui ont déjà été insérés.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.ToArray">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Tries to add the specified item to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</source>
          <target state="translated">Tente d'ajouter l'élément spécifié à <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0)">
          <source>The item to be added to the collection.</source>
          <target state="translated">Élément à ajouter à la collection.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0)">
          <source>Tries to add the specified item to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</source>
          <target state="translated">Tente d'ajouter l'élément spécifié à <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0)">
          <source>true if <ph id="ph1">&lt;paramref name="item" /&gt;</ph> could be added; otherwise false.</source>
          <target state="translated">true si <ph id="ph1">&lt;paramref name="item" /&gt;</ph> peut être ajouté ; sinon false.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0)">
          <source>If the item is a duplicate, and the underlying collection does not accept duplicate items, then an <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown.</source>
          <target state="translated">Si l'élément est un doublon et que la collection sous-jacente n'accepte pas les doublons, une <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0)">
          <source>If the collection is a bounded collection, and is full, this method immediately returns false without adding the item.</source>
          <target state="translated">Si la collection est une collection limitée et est saturée, cette méthode retourne immédiatement false sans ajouter l’élément.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been marked as complete with regards to additions.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été marqué comme complet en ce qui concerne les additions.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0)">
          <source>The underlying collection didn't accept the item.</source>
          <target state="translated">La collection sous-jacente n'a pas accepté l'élément.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32)">
          <source>The item to be added to the collection.</source>
          <target state="translated">Élément à ajouter à la collection.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) to wait indefinitely.</source>
          <target state="translated">Nombre de millisecondes à attendre, ou <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) pour un délai d'attente infini.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32)">
          <source>Tries to add the specified item to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> within the specified time period.</source>
          <target state="translated">Tente d'ajouter l'élément spécifié à <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> au cours de la période spécifiée.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32)">
          <source>true if the <ph id="ph1">&lt;paramref name="item" /&gt;</ph> could be added to the collection within the specified time; otherwise, false.</source>
          <target state="translated">True si <ph id="ph1">&lt;paramref name="item" /&gt;</ph> a pu être ajouté à la collection dans le délai spécifié ; sinon, False.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32)">
          <source>If the item is a duplicate, and the underlying collection does not accept duplicate items, then an <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown.</source>
          <target state="translated">Si l'élément est un doublon et que la collection sous-jacente n'accepte pas les doublons, une <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> est un nombre négatif différent de -1, qui représente un délai d’attente infini.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been marked as complete with regards to additions.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été marqué comme complet en ce qui concerne les additions.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32)">
          <source>The underlying collection didn't accept the item.</source>
          <target state="translated">La collection sous-jacente n'a pas accepté l'élément.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.TimeSpan)">
          <source>The item to be added to the collection.</source>
          <target state="translated">Élément à ajouter à la collection.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.TimeSpan)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents the number of milliseconds to wait, or a <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> qui représente le nombre de millièmes de secondes à attendre ou <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> qui représente -1 millième de seconde, pour attendre indéfiniment.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.TimeSpan)">
          <source>Tries to add the specified item to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</source>
          <target state="translated">Tente d'ajouter l'élément spécifié à <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.TimeSpan)">
          <source>true if the <ph id="ph1">&lt;paramref name="item" /&gt;</ph> could be added to the collection within the specified time span; otherwise, false.</source>
          <target state="translated">True si <ph id="ph1">&lt;paramref name="item" /&gt;</ph> a pu être ajouté à la collection dans l'intervalle de temps spécifié ; sinon, False.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> est un nombre négatif autre que -1 millisecondes, qui représente un délai d'expiration infini - ou - le délai d'attente est supérieur à <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been marked as complete with regards to additions.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été marqué comme complet en ce qui concerne les additions.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.TimeSpan)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.TimeSpan)">
          <source>The underlying collection didn't accept the item.</source>
          <target state="translated">La collection sous-jacente n'a pas accepté l'élément.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)">
          <source>The item to be added to the collection.</source>
          <target state="translated">Élément à ajouter à la collection.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) to wait indefinitely.</source>
          <target state="translated">Nombre de millisecondes à attendre, ou <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) pour un délai d'attente infini.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)">
          <source>A cancellation token to observe.</source>
          <target state="translated">Jeton d'annulation à observer.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)">
          <source>Tries to add the specified item to the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> within the specified time period, while observing a cancellation token.</source>
          <target state="translated">Tente d'ajouter l'élément spécifié à <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> au cours de la période spécifiée tout en observant un jeton d'annulation.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)">
          <source>true if the <ph id="ph1">&lt;paramref name="item" /&gt;</ph> could be added to the collection within the specified time; otherwise, false.</source>
          <target state="translated">True si <ph id="ph1">&lt;paramref name="item" /&gt;</ph> a pu être ajouté à la collection dans le délai spécifié ; sinon, False.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)">
          <source>If the item is a duplicate, and the underlying collection does not accept duplicate items, then an <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> is thrown.</source>
          <target state="translated">Si l'élément est un doublon et que la collection sous-jacente n'accepte pas les doublons, une <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> is canceled.</source>
          <target state="translated">Si le <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> est annulé.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed or the underlying <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimé ou le <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> sous-jacent a été supprimé.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> est un nombre négatif différent de -1, qui représente un délai d’attente infini.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been marked as complete with regards to additions.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été marqué comme complet en ce qui concerne les additions.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAdd(`0,System.Int32,System.Threading.CancellationToken)">
          <source>The underlying collection didn't accept the item.</source>
          <target state="translated">La collection sous-jacente n'a pas accepté l'élément.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Tries to add the specified item to any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">Tente d'ajouter l'élément spécifié à l'une des instances de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> spécifiées.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>The array of collections.</source>
          <target state="translated">Tableau de collections.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>The item to be added to one of the collections.</source>
          <target state="translated">Élément à ajouter à l’une des collections.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>Tries to add the specified item to any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">Tente d'ajouter l'élément spécifié à l'une des instances de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> spécifiées.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>The index of the collection in the <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> array to which the item was added, or -1 if the item could not be added.</source>
          <target state="translated">Index de la collection dans le tableau <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> auquel l'élément a été ajouté, ou -1 si l'élément n'a pas pu être ajouté.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>At least one of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances has been disposed.</source>
          <target state="translated">Au moins, l'une des instances <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimée.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is null.</source>
          <target state="translated">L’argument <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> a la valeur null.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>The count of <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
          <target state="translated">Le compte de <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> est supérieur à la taille maximale de 62 pour STA et 63 pour le MTA.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</source>
          <target state="translated">L'argument <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> est un tableau de longueur 0 ou contient un élément null, ou au moins, l'une des collections a été marquée comme complète pour l'ajout.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0)">
          <source>At least one underlying collection didn't accept the item.</source>
          <target state="translated">Au moins, une collection sous-jacente n'a pas accepté l'élément.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)">
          <source>The array of collections.</source>
          <target state="translated">Tableau de collections.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)">
          <source>The item to be added to one of the collections.</source>
          <target state="translated">Élément à ajouter à l’une des collections.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) to wait indefinitely.</source>
          <target state="translated">Nombre de millisecondes à attendre, ou <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) pour un délai d'attente infini.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)">
          <source>Tries to add the specified item to any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">Tente d'ajouter l'élément spécifié à l'une des instances de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> spécifiées.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)">
          <source>The index of the collection in the <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> array to which the item was added, or -1 if the item could not be added.</source>
          <target state="translated">Index de la collection dans le tableau <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> auquel l'élément a été ajouté, ou -1 si l'élément n'a pas pu être ajouté.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)">
          <source>At least one of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances has been disposed.</source>
          <target state="translated">Au moins, l'une des instances <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimée.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is null.</source>
          <target state="translated">L’argument <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> a la valeur null.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> est un nombre négatif différent de -1, qui représente un délai d’attente infini.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)">
          <source>The count of <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
          <target state="translated">Le compte de <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> est supérieur à la taille maximale de 62 pour STA et 63 pour le MTA.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</source>
          <target state="translated">L'argument <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> est un tableau de longueur 0 ou contient un élément null, ou au moins, l'une des collections a été marquée comme complète pour l'ajout.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32)">
          <source>At least one underlying collection didn't accept the item.</source>
          <target state="translated">Au moins, une collection sous-jacente n'a pas accepté l'élément.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
          <source>The array of collections.</source>
          <target state="translated">Tableau de collections.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
          <source>The item to be added to one of the collections.</source>
          <target state="translated">Élément à ajouter à l’une des collections.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents the number of milliseconds to wait, or a <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> qui représente le nombre de millièmes de secondes à attendre ou <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> qui représente -1 millième de seconde, pour attendre indéfiniment.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
          <source>Tries to add the specified item to any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances while observing the specified cancellation token.</source>
          <target state="translated">Tente d'ajouter l'élément spécifié à l'une des instances de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> spécifiées tout en observant le jeton d'annulation spécifié.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
          <source>The index of the collection in the <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> array to which the item was added, or -1 if the item could not be added.</source>
          <target state="translated">Index de la collection dans le tableau <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> auquel l'élément a été ajouté, ou -1 si l'élément n'a pas pu être ajouté.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
          <source>This method can return early if the cancellationToken is cancelled before space was available for the Add operation.</source>
          <target state="translated">Cette méthode peut être retournée rapidement si cancellationToken est annulé avant que l’espace soit disponible pour l’opération d’ajout.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
          <source>At least one of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances or the <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> that created <ph id="ph3">&lt;paramref name="cancellationToken" /&gt;</ph> has been disposed.</source>
          <target state="translated">Au moins l'une des instances <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> ou le <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> qui a créé <ph id="ph3">&lt;paramref name="cancellationToken" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is null.</source>
          <target state="translated">L’argument <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> a la valeur null.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> est un nombre négatif autre que -1 millisecondes, qui représente un délai d'expiration infini - ou - le délai d'attente est supérieur à <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
          <source>The count of <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
          <target state="translated">Le compte de <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> est supérieur à la taille maximale de 62 pour STA et 63 pour le MTA.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</source>
          <target state="translated">L'argument <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> est un tableau de longueur 0 ou contient un élément null, ou au moins, l'une des collections a été marquée comme complète pour l'ajout.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.TimeSpan)">
          <source>At least one underlying collection didn't accept the item.</source>
          <target state="translated">Au moins, une collection sous-jacente n'a pas accepté l'élément.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source>The array of collections.</source>
          <target state="translated">Tableau de collections.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source>The item to be added to one of the collections.</source>
          <target state="translated">Élément à ajouter à l’une des collections.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) to wait indefinitely.</source>
          <target state="translated">Nombre de millisecondes à attendre, ou <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) pour un délai d'attente infini.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source>A cancellation token to observe.</source>
          <target state="translated">Jeton d'annulation à observer.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source>Tries to add the specified item to any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">Tente d'ajouter l'élément spécifié à l'une des instances de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> spécifiées.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source>The index of the collection in the <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> array to which the item was added, or -1 if the item could not be added.</source>
          <target state="translated">Index de la collection dans le tableau <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> auquel l'élément a été ajouté, ou -1 si l'élément n'a pas pu être ajouté.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> is canceled.</source>
          <target state="translated">Si le <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> est annulé.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source>At least one underlying collection didn't accept the item.</source>
          <target state="translated">Au moins, une collection sous-jacente n'a pas accepté l'élément.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is null.</source>
          <target state="translated">L’argument <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> a la valeur null.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> est un nombre négatif différent de -1, qui représente un délai d’attente infini.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source>The count of <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
          <target state="translated">Le compte de <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> est supérieur à la taille maximale de 62 pour STA et 63 pour le MTA.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is a 0-length array or contains a null element, or at least one of collections has been marked as complete for adding.</source>
          <target state="translated">L'argument <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> est un tableau de longueur 0 ou contient un élément null, ou au moins, l'une des collections a été marquée comme complète pour l'ajout.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryAddToAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0,System.Int32,System.Threading.CancellationToken)">
          <source>At least one of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances has been disposed.</source>
          <target state="translated">Au moins, l'une des instances <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimée.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Tries to remove an item from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</source>
          <target state="translated">Tente de supprimer un élément de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A&gt;</ph> method.</source>
          <target state="translated">L'exemple suivant illustre l'utilisation de la méthode <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryTake%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@)">
          <source>The item to be removed from the collection.</source>
          <target state="translated">Élément à supprimer de la collection.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@)">
          <source>Tries to remove an item from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</source>
          <target state="translated">Tente de supprimer un élément de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an item could be removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si un élément peut être supprimé ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@)">
          <source>If the collection is empty, this method immediately returns false.</source>
          <target state="translated">Si la collection est vide, cette méthode retourne immédiatement false.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@)">
          <source>The order in which an item is removed depends on the type of collection used to create the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> instance.</source>
          <target state="translated">L'ordre dans lequel un élément est supprimé dépend du type de collection utilisée pour créer l'instance <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@)">
          <source>When you create a <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> object, you can specify the type of collection to use.</source>
          <target state="translated">Lorsque vous créez un <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> objet, vous pouvez spécifier le type de collection à utiliser.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@)">
          <source>For example, you could specify a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> object for first in, first out (FIFO) behavior, or a <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> object for last in, first out (LIFO) behavior.</source>
          <target state="translated">Par exemple, vous pouvez spécifier un <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> objet pour la première comportement premier sorti (FIFO), ou un <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> objet pour le dernier entré, premier sorti (LIFO) comportement.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@)">
          <source>You can use any collection class that implements the <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> interface.</source>
          <target state="translated">Vous pouvez utiliser n’importe quelle classe de collection qui implémente l’interface <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@)">
          <source>The default collection type for <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</source>
          <target state="translated">Le type de collection par défaut pour <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> est <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@)">
          <source>The underlying collection was modified outside of this <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">La collection sous-jacente a été modifiée en dehors de cette instance <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)">
          <source>The item to be removed from the collection.</source>
          <target state="translated">Élément à supprimer de la collection.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) to wait indefinitely.</source>
          <target state="translated">Nombre de millisecondes à attendre, ou <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) pour un délai d'attente infini.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)">
          <source>Tries to remove an item from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> in the specified time period.</source>
          <target state="translated">Tente de supprimer un élément de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> au cours de la période spécifiée.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an item could be removed from the collection within the specified  time; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si un élément a pu être supprimé de la collection dans le délai spécifié ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)">
          <source>The order in which an item is removed depends on the type of collection used to create the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> instance.</source>
          <target state="translated">L'ordre dans lequel un élément est supprimé dépend du type de collection utilisée pour créer l'instance <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)">
          <source>When you create a <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>, you can specify the type of collection to use.</source>
          <target state="translated">Lorsque vous créez un <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>, vous pouvez spécifier le type de collection à utiliser.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)">
          <source>For example, you could specify a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> object for first in, first out (FIFO) behavior, or a <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> object for last in, first out (LIFO) behavior.</source>
          <target state="translated">Par exemple, vous pouvez spécifier un <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> objet pour la première comportement premier sorti (FIFO), ou un <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> objet pour le dernier entré, premier sorti (LIFO) comportement.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)">
          <source>You can use any collection class that implements the <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> interface.</source>
          <target state="translated">Vous pouvez utiliser n’importe quelle classe de collection qui implémente l’interface <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)">
          <source>The default collection type for <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</source>
          <target state="translated">Le type de collection par défaut pour <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> est <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> est un nombre négatif différent de -1, qui représente un délai d’attente infini.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32)">
          <source>The underlying collection was modified outside of this <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">La collection sous-jacente a été modifiée en dehors de cette instance <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source>The item to be removed from the collection.</source>
          <target state="translated">Élément à supprimer de la collection.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source>An object that represents the number of milliseconds to wait, or an object that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">Objet qui représente le nombre de millièmes de secondes à attendre ou objet qui représente -1 millième de seconde, pour attendre indéfiniment.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source>Tries to remove an item from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> in the specified time period.</source>
          <target state="translated">Tente de supprimer un élément de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> au cours de la période spécifiée.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an item could be removed from the collection within the specified  time; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si un élément a pu être supprimé de la collection dans le délai spécifié ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source>The order in which an item is removed depends on the type of collection used to create the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> instance.</source>
          <target state="translated">L'ordre dans lequel un élément est supprimé dépend du type de collection utilisée pour créer l'instance <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source>When you create a <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> object, you can specify the type of collection to use.</source>
          <target state="translated">Lorsque vous créez un <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> objet, vous pouvez spécifier le type de collection à utiliser.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source>For example, you could specify a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> object for first in, first out (FIFO) behavior, or a <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> object for last in, first out (LIFO) behavior.</source>
          <target state="translated">Par exemple, vous pouvez spécifier un <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> objet pour la première comportement premier sorti (FIFO), ou un <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> objet pour le dernier entré, premier sorti (LIFO) comportement.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source>You can use any collection class that implements the <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> interface.</source>
          <target state="translated">Vous pouvez utiliser n’importe quelle classe de collection qui implémente l’interface <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source>The default collection type for <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</source>
          <target state="translated">Le type de collection par défaut pour <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> est <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimé.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> est un nombre négatif autre que -1 milliseconde, qui représente un délai d’attente infini.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> est supérieur à <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.TimeSpan)">
          <source>The underlying collection was modified outside of this <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">La collection sous-jacente a été modifiée en dehors de cette instance <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The item to be removed from the collection.</source>
          <target state="translated">Élément à supprimer de la collection.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) to wait indefinitely.</source>
          <target state="translated">Nombre de millisecondes à attendre, ou <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) pour un délai d'attente infini.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source>A cancellation token to observe.</source>
          <target state="translated">Jeton d'annulation à observer.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source>Tries to remove an item from the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> in the specified time period while observing a cancellation token.</source>
          <target state="translated">Tente de supprimer un élément de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> au cours de la période spécifiée tout en observant un jeton d'annulation.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if an item could be removed from the collection within the specified  time; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si un élément a pu être supprimé de la collection dans le délai spécifié ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The order in which an item is removed depends on the type of collection used to create the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> instance.</source>
          <target state="translated">L'ordre dans lequel un élément est supprimé dépend du type de collection utilisée pour créer l'instance <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source>When you create a <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> object, you can specify the type of collection to use.</source>
          <target state="translated">Lorsque vous créez un <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> objet, vous pouvez spécifier le type de collection à utiliser.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source>For example, you could specify a <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> object for first in, first out (FIFO) behavior, or a <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> object for last in, first out (LIFO) behavior.</source>
          <target state="translated">Par exemple, vous pouvez spécifier un <ph id="ph1">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph> objet pour la première comportement premier sorti (FIFO), ou un <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentStack%601&gt;</ph> objet pour le dernier entré, premier sorti (LIFO) comportement.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source>You can use any collection class that implements the <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph> interface.</source>
          <target state="translated">Vous pouvez utiliser n’importe quelle classe de collection qui implémente l’interface <ph id="ph1">&lt;xref:System.Collections.Concurrent.IProducerConsumerCollection%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The default collection type for <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> is <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</source>
          <target state="translated">Le type de collection par défaut pour <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601&gt;</ph> est <ph id="ph2">&lt;xref:System.Collections.Concurrent.ConcurrentQueue%601&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> has been canceled.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> a été annulé.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> has been disposed or the underlying <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> has been disposed.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimé ou le <ph id="ph2">&lt;see cref="T:System.Threading.CancellationTokenSource" /&gt;</ph> sous-jacent a été supprimé.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> est un nombre négatif différent de -1, qui représente un délai d’attente infini.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTake(`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The underlying collection was modified outside this <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">La collection sous-jacente a été modifiée en dehors de cette instance <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="T:System.Collections.Concurrent.BlockingCollection`1">
          <source>Tries to remove an item from any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">Tente de supprimer un élément de l'une des instances de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> spécifiées.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>The array of collections.</source>
          <target state="translated">Tableau de collections.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>The item removed from one of the collections.</source>
          <target state="translated">Élément supprimé de l’une des collections.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>Tries to remove an item from any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">Tente de supprimer un élément de l'une des instances de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> spécifiées.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>The index of the collection in the <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> array from which the item was removed, or -1 if an item could not be removed.</source>
          <target state="translated">Index de la collection dans le tableau <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> dont l'élément a été supprimé, ou -1 si un élément n'a pas pu être supprimé.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>A call to TryTakeFromAny may block until an item is available to be removed.</source>
          <target state="translated">Un appel à TryTakeFromAny peut se bloquer jusqu'à ce qu’un élément est disponible pour être supprimé.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryTakeFromAny%2A?displayProperty=nameWithType&gt;</ph> method:</source>
          <target state="translated">L’exemple suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Collections.Concurrent.BlockingCollection%601.TryTakeFromAny%2A?displayProperty=nameWithType&gt;</ph> méthode :</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>At least one of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances has been disposed.</source>
          <target state="translated">Au moins, l'une des instances <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimée.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is null.</source>
          <target state="translated">L’argument <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> a la valeur null.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>The count of <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
          <target state="translated">Le compte de <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> est supérieur à la taille maximale de 62 pour STA et 63 pour le MTA.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is a 0-length array or contains a null element.</source>
          <target state="translated">L'argument <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> est un tableau de longueur 0 ou contient un élément null.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@)">
          <source>At least one of the underlying collections was modified outside of its <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">Au moins, l'une des collections sous-jacentes a été modifiée en dehors de son instance <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
          <source>The array of collections.</source>
          <target state="translated">Tableau de collections.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
          <source>The item removed from one of the collections.</source>
          <target state="translated">Élément supprimé de l’une des collections.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) to wait indefinitely.</source>
          <target state="translated">Nombre de millisecondes à attendre, ou <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) pour un délai d'attente infini.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
          <source>Tries to remove an item from any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">Tente de supprimer un élément de l'une des instances de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> spécifiées.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
          <source>The index of the collection in the <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> array from which the item was removed, or -1 if an item could not be removed.</source>
          <target state="translated">Index de la collection dans le tableau <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> dont l'élément a été supprimé, ou -1 si un élément n'a pas pu être supprimé.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
          <source>A call to TryTakeFromAny may block until an item is available to be removed.</source>
          <target state="translated">Un appel à TryTakeFromAny peut se bloquer jusqu'à ce qu’un élément est disponible pour être supprimé.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
          <source>At least one of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances has been disposed.</source>
          <target state="translated">Au moins, l'une des instances <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimée.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is null.</source>
          <target state="translated">L’argument <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> a la valeur null.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> est un nombre négatif différent de -1, qui représente un délai d’attente infini.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
          <source>The count of <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
          <target state="translated">Le compte de <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> est supérieur à la taille maximale de 62 pour STA et 63 pour le MTA.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is a 0-length array or contains a null element.</source>
          <target state="translated">L'argument <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> est un tableau de longueur 0 ou contient un élément null.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32)">
          <source>At least one of the underlying collections was modified outside of its <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">Au moins, l'une des collections sous-jacentes a été modifiée en dehors de son instance <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
          <source>The array of collections.</source>
          <target state="translated">Tableau de collections.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
          <source>The item removed from one of the collections.</source>
          <target state="translated">Élément supprimé de l’une des collections.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
          <source>A <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents the number of milliseconds to wait, or a <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that represents -1 milliseconds to wait indefinitely.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> qui représente le nombre de millièmes de secondes à attendre ou <ph id="ph2">&lt;see cref="T:System.TimeSpan" /&gt;</ph> qui représente -1 millième de seconde, pour attendre indéfiniment.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
          <source>Tries to remove an item from any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">Tente de supprimer un élément de l'une des instances de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> spécifiées.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
          <source>The index of the collection in the <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> array from which the item was removed, or -1 if an item could not be removed.</source>
          <target state="translated">Index de la collection dans le tableau <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> dont l'élément a été supprimé, ou -1 si un élément n'a pas pu être supprimé.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
          <source>A call to TryTakeFromAny may block until an item is available to be removed.</source>
          <target state="translated">Un appel à TryTakeFromAny peut se bloquer jusqu'à ce qu’un élément est disponible pour être supprimé.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
          <source>At least one of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances has been disposed.</source>
          <target state="translated">Au moins, l'une des instances <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimée.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is null.</source>
          <target state="translated">L’argument <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> a la valeur null.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
          <source><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> is a negative number other than -1 milliseconds, which represents an infinite time-out -or- timeout is greater than <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="timeout" /&gt;</ph> est un nombre négatif autre que -1 millisecondes, qui représente un délai d'expiration infini - ou - le délai d'attente est supérieur à <ph id="ph2">&lt;see cref="F:System.Int32.MaxValue" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
          <source>The count of <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
          <target state="translated">Le compte de <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> est supérieur à la taille maximale de 62 pour STA et 63 pour le MTA.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is a 0-length array or contains a null element.</source>
          <target state="translated">L'argument <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> est un tableau de longueur 0 ou contient un élément null.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.TimeSpan)">
          <source>At least one of the underlying collections was modified outside of its <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">Au moins, l'une des collections sous-jacentes a été modifiée en dehors de son instance <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The array of collections.</source>
          <target state="translated">Tableau de collections.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The item removed from one of the collections.</source>
          <target state="translated">Élément supprimé de l’une des collections.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The number of milliseconds to wait, or <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) to wait indefinitely.</source>
          <target state="translated">Nombre de millisecondes à attendre, ou <ph id="ph1">&lt;see cref="F:System.Threading.Timeout.Infinite" /&gt;</ph> (-1) pour un délai d'attente infini.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>A cancellation token to observe.</source>
          <target state="translated">Jeton d'annulation à observer.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>Tries to remove an item from any one of the specified <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances.</source>
          <target state="translated">Tente de supprimer un élément de l'une des instances de <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> spécifiées.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The index of the collection in the <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> array from which the item was removed, or -1 if an item could not be removed.</source>
          <target state="translated">Index de la collection dans le tableau <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> dont l'élément a été supprimé, ou -1 si un élément n'a pas pu être supprimé.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>A call to TryTakeFromAny may block until an item is available to be removed.</source>
          <target state="translated">Un appel à TryTakeFromAny peut se bloquer jusqu'à ce qu’un élément est disponible pour être supprimé.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>If the <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> is canceled.</source>
          <target state="translated">Si le <ph id="ph1">&lt;see cref="T:System.Threading.CancellationToken" /&gt;</ph> est annulé.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>At least one of the underlying collections was modified outside of its <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instance.</source>
          <target state="translated">Au moins, l'une des collections sous-jacentes a été modifiée en dehors de son instance <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is null.</source>
          <target state="translated">L’argument <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> a la valeur null.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> is a negative number other than -1, which represents an infinite time-out.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="millisecondsTimeout" /&gt;</ph> est un nombre négatif différent de -1, qui représente un délai d’attente infini.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The count of <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> is greater than the maximum size of 62 for STA and 63 for MTA.</source>
          <target state="translated">Le compte de <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> est supérieur à la taille maximale de 62 pour STA et 63 pour le MTA.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>The <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> argument is a 0-length array or contains a null element.</source>
          <target state="translated">L'argument <ph id="ph1">&lt;paramref name="collections" /&gt;</ph> est un tableau de longueur 0 ou contient un élément null.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Collections.Concurrent.BlockingCollection`1.TryTakeFromAny(System.Collections.Concurrent.BlockingCollection{`0}[],`0@,System.Int32,System.Threading.CancellationToken)">
          <source>At least one of the <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> instances has been disposed.</source>
          <target state="translated">Au moins, l'une des instances <ph id="ph1">&lt;see cref="T:System.Collections.Concurrent.BlockingCollection`1" /&gt;</ph> a été supprimée.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>