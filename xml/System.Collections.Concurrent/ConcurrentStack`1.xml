<Type Name="ConcurrentStack&lt;T&gt;" FullName="System.Collections.Concurrent.ConcurrentStack&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="32308a71cf57265835d0a51b32bc2de57315843e" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51307841" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ConcurrentStack&lt;T&gt; : System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Collections.Generic.IReadOnlyCollection&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ConcurrentStack`1&lt;T&gt; extends System.Object implements class System.Collections.Concurrent.IProducerConsumerCollection`1&lt;!T&gt;, class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.Generic.IReadOnlyCollection`1&lt;!T&gt;, class System.Collections.ICollection, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.ConcurrentStack`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ConcurrentStack(Of T)&#xA;Implements IEnumerable(Of T), IProducerConsumerCollection(Of T), IReadOnlyCollection(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ConcurrentStack : System::Collections::Concurrent::IProducerConsumerCollection&lt;T&gt;, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Collections::Generic::IReadOnlyCollection&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type ConcurrentStack&lt;'T&gt; = class&#xA;    interface IProducerConsumerCollection&lt;'T&gt;&#xA;    interface IReadOnlyCollection&lt;'T&gt;&#xA;    interface seq&lt;'T&gt;&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IReadOnlyCollection&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Count = {Count}")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerTypeProxy(typeof(System.Collections.Concurrent.SystemCollectionsConcurrent_ProducerConsumerCollectionDebugView`1))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="de5d4-101">Type des éléments contenus dans la pile.</span>
      <span class="sxs-lookup">
        <span data-stu-id="de5d4-101">The type of the elements contained in the stack.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="de5d4-102">Représente une collection thread-safe de type dernier entré, premier sorti (LIFO, Last-In-First-Out).</span>
      <span class="sxs-lookup">
        <span data-stu-id="de5d4-102">Represents a thread-safe last in-first out (LIFO) collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="de5d4-103"><xref:System.Collections.Concurrent.ConcurrentStack%601> implémente le <xref:System.Collections.Generic.IReadOnlyCollection%601> interface en commençant par le [!INCLUDE[net_v46](~/includes/net-v46-md.md)]; dans les versions précédentes du .NET Framework, le <xref:System.Collections.Concurrent.ConcurrentStack%601> n’implémente pas cette interface.</span><span class="sxs-lookup"><span data-stu-id="de5d4-103"><xref:System.Collections.Concurrent.ConcurrentStack%601> implements the <xref:System.Collections.Generic.IReadOnlyCollection%601> interface starting with the [!INCLUDE[net_v46](~/includes/net-v46-md.md)]; in previous versions of the .NET Framework, the <xref:System.Collections.Concurrent.ConcurrentStack%601> class did not implement this interface.</span></span>  
  
 <span data-ttu-id="de5d4-104"><xref:System.Collections.Concurrent.ConcurrentStack%601> fournit quelques opérations principales :</span><span class="sxs-lookup"><span data-stu-id="de5d4-104"><xref:System.Collections.Concurrent.ConcurrentStack%601> provides a few main operations:</span></span>  
  
-   <span data-ttu-id="de5d4-105"><xref:System.Collections.Concurrent.ConcurrentStack%601.Push%2A> Insère un élément en haut de la <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span><span class="sxs-lookup"><span data-stu-id="de5d4-105"><xref:System.Collections.Concurrent.ConcurrentStack%601.Push%2A> inserts an element at the top of the <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span>  
  
-   <span data-ttu-id="de5d4-106"><xref:System.Collections.Concurrent.ConcurrentStack%601.TryPop%2A> Supprime un élément du haut de la <xref:System.Collections.Concurrent.ConcurrentStack%601>, ou retourne `false` si l’élément ne peut pas être supprimé.</span><span class="sxs-lookup"><span data-stu-id="de5d4-106"><xref:System.Collections.Concurrent.ConcurrentStack%601.TryPop%2A> removes an element from the top of the <xref:System.Collections.Concurrent.ConcurrentStack%601>, or returns `false` if the item cannot be removed.</span></span>  
  
-   <span data-ttu-id="de5d4-107"><xref:System.Collections.Concurrent.ConcurrentStack%601.TryPeek%2A> Retourne un élément qui est en haut de la <xref:System.Collections.Concurrent.ConcurrentStack%601> mais ne supprime ne pas de la <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span><span class="sxs-lookup"><span data-stu-id="de5d4-107"><xref:System.Collections.Concurrent.ConcurrentStack%601.TryPeek%2A> returns an element that is at the top of the <xref:System.Collections.Concurrent.ConcurrentStack%601> but does not remove it from the <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span>  
  
-   <span data-ttu-id="de5d4-108">Le <xref:System.Collections.Concurrent.ConcurrentStack%601.TryPopRange%2A> et <xref:System.Collections.Concurrent.ConcurrentStack%601.PushRange%2A> méthodes fournissent en exécutant un push/pop efficace de plusieurs éléments en une seule opération.</span><span class="sxs-lookup"><span data-stu-id="de5d4-108">The <xref:System.Collections.Concurrent.ConcurrentStack%601.TryPopRange%2A> and <xref:System.Collections.Concurrent.ConcurrentStack%601.PushRange%2A> methods provide efficient pushing and popping of multiple elements in a single operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="de5d4-109">L’exemple suivant montre comment utiliser un <xref:System.Collections.Concurrent.ConcurrentStack%601> à push et pop des éléments individuels :</span><span class="sxs-lookup"><span data-stu-id="de5d4-109">The following example shows how to use a <xref:System.Collections.Concurrent.ConcurrentStack%601> to push and pop individual items:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentStack#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentstack/cs/concstack_single.cs#1)]
 [!code-vb[System.Collections.Concurrent.ConcurrentStack#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentstack/vb/concstack_single.vb#1)]
  
 <span data-ttu-id="de5d4-110">L’exemple suivant montre comment utiliser un <xref:System.Collections.Concurrent.ConcurrentStack%601> à push et pop des plages d’éléments :</span><span class="sxs-lookup"><span data-stu-id="de5d4-110">The following example shows how to use a <xref:System.Collections.Concurrent.ConcurrentStack%601> to push and pop ranges of items:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.ConcurrentStack#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.concurrentstack/cs/concstack_range.cs#1)]
 [!code-vb[System.Collections.Concurrent.ConcurrentStack#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.concurrentstack/vb/concstack_range.vb#1)]
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="de5d4-111">Tous les membres publics et protégés de <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> sont thread-safe et peuvent être utilisés simultanément par plusieurs threads.</span>
      <span class="sxs-lookup">
        <span data-stu-id="de5d4-111">All public and protected members of <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> are thread-safe and may be used concurrently from multiple threads.</span>
      </span>
    </threadsafe>
    <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
      <span data-ttu-id="de5d4-112">Collections thread-safe</span>
      <span class="sxs-lookup">
        <span data-stu-id="de5d4-112">Thread-Safe Collections</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentStack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentStack();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="de5d4-113">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-113">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="de5d4-114">Collections thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-114">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ConcurrentStack (System.Collections.Generic.IEnumerable&lt;T&gt; collection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;!T&gt; collection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (collection As IEnumerable(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ConcurrentStack(System::Collections::Generic::IEnumerable&lt;T&gt; ^ collection);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.ConcurrentStack&lt;'T&gt; : seq&lt;'T&gt; -&gt; System.Collections.Concurrent.ConcurrentStack&lt;'T&gt;" Usage="new System.Collections.Concurrent.ConcurrentStack&lt;'T&gt; collection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="collection">
          <span data-ttu-id="de5d4-115">Collection dont les éléments sont copiés dans la nouvelle <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-115">The collection whose elements are copied to the new <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de5d4-116">Initialise une nouvelle instance de la classe <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> qui contient des éléments copiés à partir de la collection spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-116">Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> class that contains elements copied from the specified collection</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de5d4-117">L’argument <paramref name="collection" /> a la valeur null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-117">The <paramref name="collection" /> argument is null.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="de5d4-118">Collections thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-118">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberSignature Language="F#" Value="member this.Clear : unit -&gt; unit" Usage="concurrentStack.Clear " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="de5d4-119">Supprime tous les objets du <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-119">Removes all objects from the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="de5d4-120">Collections thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-120">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (T[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!T[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As T(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;T&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'T[] * int -&gt; unit&#xA;override this.CopyTo : 'T[] * int -&gt; unit" Usage="concurrentStack.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Concurrent.IProducerConsumerCollection`1.CopyTo(`0[],System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="de5d4-121">
            <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de la <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-121">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
          <span data-ttu-id="de5d4-122">
            <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-122">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="de5d4-123">Index de base zéro dans un <c>tableau</c> auquel commencer la copie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-123">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de5d4-124">Copie les éléments <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> dans un <see cref="T:System.Array" /> unidimensionnel existant, en commençant au niveau de l'index de tableau spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-124">Copies the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> elements to an existing one-dimensional <see cref="T:System.Array" />, starting at the specified array index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de5d4-125">
            <paramref name="array" /> est une référence Null (Nothing en Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-125">
              <paramref name="array" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de5d4-126">
            <paramref name="index" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-126">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de5d4-127">
            <paramref name="index" /> est supérieur ou égal à la longueur du paramètre <paramref name="array" /> - ou - Le nombre d'éléments du <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> source est supérieur à la quantité d'espace disponible entre <paramref name="index" /> et la fin du paramètre <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-127">
              <paramref name="index" /> is equal to or greater than the length of the <paramref name="array" /> -or- The number of elements in the source <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="de5d4-128">Collections thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-128">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentStack`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Collections.Concurrent.ConcurrentStack&lt;'T&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IReadOnlyCollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de5d4-129">Obtient le nombre d'éléments contenus dans le <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-129">Gets the number of elements contained in the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de5d4-130">Nombre d'éléments contenus dans <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-130">The number of elements contained in the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de5d4-131">Pour déterminer si la collection contient des éléments, utilisez de la <xref:System.Collections.Concurrent.ConcurrentStack%601.IsEmpty%2A> est recommandée de propriété plutôt que de la récupération du nombre d’éléments à partir de la <xref:System.Collections.Concurrent.ConcurrentStack%601.Count%2A> propriété et en la comparant à 0.</span><span class="sxs-lookup"><span data-stu-id="de5d4-131">For determining whether the collection contains any items, use of the <xref:System.Collections.Concurrent.ConcurrentStack%601.IsEmpty%2A> property is recommended rather than retrieving the number of items from the <xref:System.Collections.Concurrent.ConcurrentStack%601.Count%2A> property and comparing it to 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;T&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;&#xA;override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'T&gt;" Usage="concurrentStack.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="de5d4-132">Retourne un énumérateur qui itère au sein de <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-132">Returns an enumerator that iterates through the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de5d4-133">Énumérateur pour <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-133">An enumerator for the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de5d4-134">L’énumération représente un instantané de moment-à-temps du contenu de la pile.</span><span class="sxs-lookup"><span data-stu-id="de5d4-134">The enumeration represents a moment-in-time snapshot of the contents of the stack.</span></span> <span data-ttu-id="de5d4-135">Il ne reflète pas les mises à jour à la collection après <xref:System.Collections.Concurrent.ConcurrentStack%601.GetEnumerator%2A> a été appelée.</span><span class="sxs-lookup"><span data-stu-id="de5d4-135">It does not reflect any updates to the collection after <xref:System.Collections.Concurrent.ConcurrentStack%601.GetEnumerator%2A> was called.</span></span> <span data-ttu-id="de5d4-136">L’énumérateur est sûr à utiliser en même temps que les lectures à partir d’et écrit dans la pile.</span><span class="sxs-lookup"><span data-stu-id="de5d4-136">The enumerator is safe to use concurrently with reads from and writes to the stack.</span></span> <span data-ttu-id="de5d4-137">L’énumérateur retourne des éléments dans un ordre LIFO (dernier entré, premier sorti).</span><span class="sxs-lookup"><span data-stu-id="de5d4-137">The enumerator returns items in LIFO (last-in, first-out) order.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="de5d4-138">Collections thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-138">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentStack`1.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : bool" Usage="System.Collections.Concurrent.ConcurrentStack&lt;'T&gt;.IsEmpty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de5d4-139">Obtient une valeur qui indique si <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> est vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-139">Gets a value that indicates whether the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> is empty.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de5d4-140">true si le <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> est vide ; sinon, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-140">true if the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> is empty; otherwise, false.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de5d4-141">Pour déterminer si la collection contient des éléments, l’utilisation de cette propriété est recommandée au lieu de récupérer le nombre d’éléments à partir de la <xref:System.Collections.Concurrent.ConcurrentStack%601.Count%2A> propriété et en la comparant à 0.</span><span class="sxs-lookup"><span data-stu-id="de5d4-141">For determining whether the collection contains any items, use of this property is recommended rather than retrieving the number of items from the <xref:System.Collections.Concurrent.ConcurrentStack%601.Count%2A> property and comparing it to 0.</span></span> <span data-ttu-id="de5d4-142">Toutefois, comme cette collection est destinée à être accessibles simultanément, il peut être le cas où un autre thread modifiera la collection après <xref:System.Collections.Concurrent.ConcurrentStack%601.IsEmpty%2A> retourne, ce qui invalide le résultat.</span><span class="sxs-lookup"><span data-stu-id="de5d4-142">However, as this collection is intended to be accessed concurrently, it may be the case that another thread will modify the collection after <xref:System.Collections.Concurrent.ConcurrentStack%601.IsEmpty%2A> returns, thus invalidating the result.</span></span>  
  
 <span data-ttu-id="de5d4-143">Pour obtenir un exemple de code, consultez <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span><span class="sxs-lookup"><span data-stu-id="de5d4-143">For a code example, see <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="de5d4-144">Collections thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-144">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Push">
      <MemberSignature Language="C#" Value="public void Push (T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Push(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.Push(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Push (item As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Push(T item);" />
      <MemberSignature Language="F#" Value="member this.Push : 'T -&gt; unit" Usage="concurrentStack.Push item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="de5d4-145">Objet à placer dans <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-145">The object to push onto the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
          <span data-ttu-id="de5d4-146">La valeur peut être une référence null (Nothing en Visual Basic) pour les types référence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-146">The value can be a null reference (Nothing in Visual Basic) for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de5d4-147">Insère un objet en haut de <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-147">Inserts an object at the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="de5d4-148">Collections thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-148">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="PushRange">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <remarks />
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="de5d4-149">Collections thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-149">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="PushRange">
      <MemberSignature Language="C#" Value="public void PushRange (T[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PushRange(!T[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.PushRange(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub PushRange (items As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PushRange(cli::array &lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.PushRange : 'T[] -&gt; unit" Usage="concurrentStack.PushRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="de5d4-150">Objets à placer dans <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-150">The objects to push onto the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de5d4-151">Insère atomiquement plusieurs objets en haut de <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-151">Inserts multiple objects at the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> atomically.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de5d4-152">Lorsque vous ajoutez plusieurs éléments à la pile, l’utilisation de PushRange est un mécanisme plus efficace que l’utilisation <xref:System.Collections.Concurrent.ConcurrentStack%601.Push%2A> un élément à la fois.</span><span class="sxs-lookup"><span data-stu-id="de5d4-152">When adding multiple items to the stack, using PushRange is a more efficient mechanism than using <xref:System.Collections.Concurrent.ConcurrentStack%601.Push%2A> one item at a time.</span></span> <span data-ttu-id="de5d4-153">En outre, PushRange garantit que tous les éléments seront ajoutés de manière atomique, ce qui signifie qu’aucun autre thread ne seront capables d’injecter des éléments entre les éléments transmis.</span><span class="sxs-lookup"><span data-stu-id="de5d4-153">Additionally, PushRange guarantees that all of the elements will be added atomically, meaning that no other threads will be able to inject elements between the elements being pushed.</span></span> <span data-ttu-id="de5d4-154">Éléments aux index inférieurs dans le `items` tableau sera poussé avant les éléments aux index supérieurs.</span><span class="sxs-lookup"><span data-stu-id="de5d4-154">Items at lower indices in the `items` array will be pushed before items at higher indices.</span></span>  
  
 <span data-ttu-id="de5d4-155">Pour obtenir un exemple de code, consultez <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span><span class="sxs-lookup"><span data-stu-id="de5d4-155">For a code example, see <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de5d4-156">
            <paramref name="items" /> est une référence Null (Nothing en Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-156">
              <paramref name="items" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="de5d4-157">Collections thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-157">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="PushRange">
      <MemberSignature Language="C#" Value="public void PushRange (T[] items, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PushRange(!T[] items, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.PushRange(`0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PushRange (items As T(), startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PushRange(cli::array &lt;T&gt; ^ items, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.PushRange : 'T[] * int * int -&gt; unit" Usage="concurrentStack.PushRange (items, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="de5d4-158">Objets à placer dans <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-158">The objects to push onto the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="de5d4-159">Décalage de base zéro dans <c>items</c> à partir duquel commencer l’insertion des éléments en haut de <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-159">The zero-based offset in <c>items</c> at which to begin inserting elements onto the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="de5d4-160">Nombre d'éléments à insérer en haut de <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-160">The number of elements to be inserted onto the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de5d4-161">Insère atomiquement plusieurs objets en haut de <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-161">Inserts multiple objects at the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> atomically.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de5d4-162">Lorsque vous ajoutez plusieurs éléments à la pile, l’utilisation de PushRange est un mécanisme plus efficace que l’utilisation <xref:System.Collections.Concurrent.ConcurrentStack%601.Push%2A> un élément à la fois.</span><span class="sxs-lookup"><span data-stu-id="de5d4-162">When adding multiple items to the stack, using PushRange is a more efficient mechanism than using <xref:System.Collections.Concurrent.ConcurrentStack%601.Push%2A> one item at a time.</span></span> <span data-ttu-id="de5d4-163">En outre, PushRange garantit que tous les éléments seront ajoutés de manière atomique, ce qui signifie qu’aucun autre thread ne seront capables d’injecter des éléments entre les éléments transmis.</span><span class="sxs-lookup"><span data-stu-id="de5d4-163">Additionally, PushRange guarantees that all of the elements will be added atomically, meaning that no other threads will be able to inject elements between the elements being pushed.</span></span> <span data-ttu-id="de5d4-164">Éléments aux index inférieurs dans le `items` tableau sera poussé avant les éléments aux index supérieurs.</span><span class="sxs-lookup"><span data-stu-id="de5d4-164">Items at lower indices in the `items` array will be pushed before items at higher indices.</span></span>  
  
 <span data-ttu-id="de5d4-165">Pour obtenir un exemple de code, consultez <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span><span class="sxs-lookup"><span data-stu-id="de5d4-165">For a code example, see <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de5d4-166">
            <paramref name="items" /> est une référence Null (Nothing en Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-166">
              <paramref name="items" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de5d4-167">
            <paramref name="startIndex" /> ou <paramref name="count" /> est un nombre négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-167">
              <paramref name="startIndex" /> or <paramref name="count" /> is negative.</span>
          </span>
          <span data-ttu-id="de5d4-168">Ou le paramètre <paramref name="startIndex" /> est supérieur ou égal à la longueur de <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-168">Or <paramref name="startIndex" /> is greater than or equal to the length of <paramref name="items" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de5d4-169">
            <paramref name="startIndex" /> + <paramref name="count" /> est supérieur à la longueur de <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-169">
              <paramref name="startIndex" /> + <paramref name="count" /> is greater than the length of <paramref name="items" />.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="de5d4-170">Collections thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-170">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryAdd">
      <MemberSignature Language="C#" Value="bool IProducerConsumerCollection&lt;T&gt;.TryAdd (T item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryAdd(!T item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#Concurrent#IProducerConsumerCollection&lt;T&gt;#TryAdd(`0)" />
      <MemberSignature Language="VB.NET" Value="Function TryAdd (item As T) As Boolean Implements IProducerConsumerCollection(Of T).TryAdd" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryAdd(T item) = System::Collections::Concurrent::IProducerConsumerCollection&lt;T&gt;::TryAdd;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Concurrent.IProducerConsumerCollection`1.TryAdd(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="de5d4-171">Objet à ajouter à <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-171">The object to add to the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          </span>
          <span data-ttu-id="de5d4-172">La valeur peut être une référence null (Nothing en Visual Basic) pour les types référence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-172">The value can be a null reference (Nothing in Visual Basic) for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de5d4-173">Tente d'ajouter un objet à <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-173">Attempts to add an object to the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de5d4-174">True si l'objet a été ajouté avec succès ; sinon, False.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-174">true if the object was added successfully; otherwise, false.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de5d4-175">Pour <xref:System.Collections.Concurrent.ConcurrentStack%601>, cette opération insère toujours l’objet en haut de la <xref:System.Collections.Concurrent.ConcurrentStack%601> et retourner la valeur true.</span><span class="sxs-lookup"><span data-stu-id="de5d4-175">For <xref:System.Collections.Concurrent.ConcurrentStack%601>, this operation will always insert the object onto the top of the <xref:System.Collections.Concurrent.ConcurrentStack%601> and return true.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="de5d4-176">Collections thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-176">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryTake">
      <MemberSignature Language="C#" Value="bool IProducerConsumerCollection&lt;T&gt;.TryTake (out T item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryTake([out] !T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#Concurrent#IProducerConsumerCollection&lt;T&gt;#TryTake(`0@)" />
      <MemberSignature Language="VB.NET" Value="Function TryTake (ByRef item As T) As Boolean Implements IProducerConsumerCollection(Of T).TryTake" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.Concurrent.IProducerConsumerCollection&lt;T&gt;.TryTake([Runtime::InteropServices::Out] T % item) = System::Collections::Concurrent::IProducerConsumerCollection&lt;T&gt;::TryTake;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Concurrent.IProducerConsumerCollection`1.TryTake(`0@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="de5d4-177">Quand cette méthode retourne une valeur, si l’opération a réussi, <c>item</c> contient l’objet supprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-177">When this method returns, if the operation was successful, <c>item</c> contains the object removed.</span>
          </span>
          <span data-ttu-id="de5d4-178">S'il n'existait aucun objet à supprimer, la valeur n'est pas spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-178">If no object was available to be removed, the value is unspecified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de5d4-179">Tente de supprimer et de retourner un objet du <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-179">Attempts to remove and return an object from the <see cref="T:System.Collections.Concurrent.IProducerConsumerCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de5d4-180">True si un élément a été supprimé et retourné correctement ; sinon, False.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-180">true if an element was removed and returned succesfully; otherwise, false.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de5d4-181">Pour <xref:System.Collections.Concurrent.ConcurrentStack%601>, cette opération tentera de dépiler un objet en haut de la <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span><span class="sxs-lookup"><span data-stu-id="de5d4-181">For <xref:System.Collections.Concurrent.ConcurrentStack%601>, this operation will attempt to pop the object at the top of the <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="de5d4-182">Collections thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-182">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="de5d4-183">
            <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de la <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-183">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
          <span data-ttu-id="de5d4-184">
            <see cref="T:System.Array" /> doit avoir une indexation de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-184">The <see cref="T:System.Array" /> must have zero-based indexing.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="de5d4-185">Index de base zéro dans un <c>tableau</c> auquel commencer la copie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-185">The zero-based index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de5d4-186">Copie les éléments de <see cref="T:System.Collections.ICollection" /> dans <see cref="T:System.Array" />, à partir d'un index particulier de <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-186">Copies the elements of the <see cref="T:System.Collections.ICollection" /> to an <see cref="T:System.Array" />, starting at a particular <see cref="T:System.Array" /> index.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de5d4-187">
            <paramref name="array" /> est une référence Null (Nothing en Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-187">
              <paramref name="array" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de5d4-188">
            <paramref name="index" /> est inférieur à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-188">
              <paramref name="index" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de5d4-189">
            <paramref name="array" /> est multidimensionnel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-189">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="de5d4-190">- ou - <paramref name="array" /> n'a pas d'indexation de base zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-190">-or- <paramref name="array" /> does not have zero-based indexing.</span>
          </span>
          <span data-ttu-id="de5d4-191">- ou - <paramref name="index" /> est supérieur ou égal à la longueur de <paramref name="array" /> - ou - Le nombre d'éléments dans le <see cref="T:System.Collections.ICollection" /> source est supérieur à l'espace disponible depuis <paramref name="index" /> à la fin du <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-191">-or- <paramref name="index" /> is equal to or greater than the length of the <paramref name="array" /> -or- The number of elements in the source <see cref="T:System.Collections.ICollection" /> is greater than the available space from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="de5d4-192">- ou - Le type du <see cref="T:System.Collections.ICollection" /> source ne peut pas être casté automatiquement en type de paramètre <paramref name="array" /> de destination.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-192">-or- The type of the source <see cref="T:System.Collections.ICollection" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="de5d4-193">Collections thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-193">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::ICollection::IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de5d4-194">Obtient une valeur indiquant si l’accès à <see cref="T:System.Collections.ICollection" /> est synchronisé avec SyncRoot.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-194">Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection" /> is synchronized with the SyncRoot.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de5d4-195">True si l'accès à <see cref="T:System.Collections.ICollection" /> est synchronisé avec SyncRoot ; sinon, False.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-195">true if access to the <see cref="T:System.Collections.ICollection" /> is synchronized with the SyncRoot; otherwise, false.</span>
          </span>
          <span data-ttu-id="de5d4-196">Pour <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />, cette propriété retourne toujours False.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-196">For <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />, this property always returns false.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::ICollection::SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="de5d4-197">Obtient un objet qui peut être utilisé pour synchroniser l'accès à <see cref="T:System.Collections.ICollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-197">Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection" />.</span>
          </span>
          <span data-ttu-id="de5d4-198">Cette propriété n'est pas prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-198">This property is not supported.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="de5d4-199">Retourne null (Nothing en Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-199">Returns null (Nothing in Visual Basic).</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="de5d4-200">La propriété SyncRoot n'est pas prise en charge</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-200">The SyncRoot property is not supported</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="de5d4-201">Collections thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-201">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="de5d4-202">Retourne un énumérateur qui itère au sein d’une collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-202">Returns an enumerator that iterates through a collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de5d4-203">
            <see cref="T:System.Collections.IEnumerator" /> qui peut être utilisé pour itérer au sein de la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-203">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de5d4-204">L’énumération représente un instantané de moment-à-temps du contenu de la pile.</span><span class="sxs-lookup"><span data-stu-id="de5d4-204">The enumeration represents a moment-in-time snapshot of the contents of the stack.</span></span> <span data-ttu-id="de5d4-205">Il ne reflète pas les mises à jour à la collection après <xref:System.Collections.Concurrent.ConcurrentStack%601.GetEnumerator%2A> a été appelée.</span><span class="sxs-lookup"><span data-stu-id="de5d4-205">It does not reflect any updates to the collection after <xref:System.Collections.Concurrent.ConcurrentStack%601.GetEnumerator%2A> was called.</span></span> <span data-ttu-id="de5d4-206">L’énumérateur est sûr à utiliser en même temps que les lectures à partir d’et écrit dans la pile.</span><span class="sxs-lookup"><span data-stu-id="de5d4-206">The enumerator is safe to use concurrently with reads from and writes to the stack.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToArray">
      <MemberSignature Language="C#" Value="public T[] ToArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !T[] ToArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.ToArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToArray () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;T&gt; ^ ToArray();" />
      <MemberSignature Language="F#" Value="abstract member ToArray : unit -&gt; 'T[]&#xA;override this.ToArray : unit -&gt; 'T[]" Usage="concurrentStack.ToArray " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Concurrent.IProducerConsumerCollection`1.ToArray</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="de5d4-207">Copie les éléments stockés dans <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> dans un nouveau tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-207">Copies the items stored in the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> to a new array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de5d4-208">Nouveau tableau contenant un instantané des éléments copiés à partir de <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-208">A new array containing a snapshot of elements copied from the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="de5d4-209">Collections thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-209">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryPeek">
      <MemberSignature Language="C#" Value="public bool TryPeek (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryPeek([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.TryPeek(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPeek (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryPeek([Runtime::InteropServices::Out] T % result);" />
      <MemberSignature Language="F#" Value="member this.TryPeek :  -&gt; bool" Usage="concurrentStack.TryPeek result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="de5d4-210">Quand cette méthode retourne une valeur, <c>result</c> contient un objet du haut de <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> ou une valeur non spécifiée si l’opération a échoué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-210">When this method returns, <c>result</c> contains an object from the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> or an unspecified value if the operation failed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de5d4-211">Tente de retourner un objet du haut de <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> sans le supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-211">Attempts to return an object from the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> without removing it.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de5d4-212">True si un objet a été retourné avec succès ; sinon, False.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-212">true if and object was returned successfully; otherwise, false.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="de5d4-213">Collections thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-213">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryPop">
      <MemberSignature Language="C#" Value="public bool TryPop (out T result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryPop([out] !T&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.TryPop(`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPop (ByRef result As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryPop([Runtime::InteropServices::Out] T % result);" />
      <MemberSignature Language="F#" Value="member this.TryPop :  -&gt; bool" Usage="concurrentStack.TryPop result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="T" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="de5d4-214">Quand cette méthode retourne une valeur, si l’opération a réussi, <c>result</c> contient l’objet supprimé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-214">When this method returns, if the operation was successful, <c>result</c> contains the object removed.</span>
          </span>
          <span data-ttu-id="de5d4-215">S'il n'existait aucun objet à supprimer, la valeur n'est pas spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-215">If no object was available to be removed, the value is unspecified.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de5d4-216">Tente de dépiler et retourner l'objet en haut de <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-216">Attempts to pop and return the object at the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de5d4-217">True si un élément a bien été supprimé et retourné du haut de <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> ; sinon, False.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-217">true if an element was removed and returned from the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> successfully; otherwise, false.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de5d4-218">Pour obtenir un exemple de code, consultez <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span><span class="sxs-lookup"><span data-stu-id="de5d4-218">For a code example, see <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryPopRange">
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <remarks />
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="de5d4-219">Collections thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-219">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryPopRange">
      <MemberSignature Language="C#" Value="public int TryPopRange (T[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 TryPopRange(!T[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.TryPopRange(`0[])" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPopRange (items As T()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int TryPopRange(cli::array &lt;T&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.TryPopRange : 'T[] -&gt; int" Usage="concurrentStack.TryPopRange items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="T[]" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="de5d4-220">
            <see cref="T:System.Array" /> auquel les objets dépilés en partant du haut de <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> seront ajoutés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-220">The <see cref="T:System.Array" /> to which objects popped from the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> will be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de5d4-221">Tente de dépiler et retourner atomiquement plusieurs objets du haut de <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-221">Attempts to pop and return multiple objects from the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> atomically.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de5d4-222">Nombre d'objets correctement dépilés en partant du haut de <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> et insérés dans <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-222">The number of objects successfully popped from the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> and inserted in <paramref name="items" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de5d4-223">Lorsque plusieurs éléments, si le conflit sur la pile, à l’aide `TryPopRange` peut s’avérer plus efficace que l’utilisation de <xref:System.Collections.Concurrent.ConcurrentStack%601.TryPop%2A> une fois par élément à supprimer.</span><span class="sxs-lookup"><span data-stu-id="de5d4-223">When popping multiple items, if there is little contention on the stack, using `TryPopRange` can be more efficient than using <xref:System.Collections.Concurrent.ConcurrentStack%601.TryPop%2A> once per item to be removed.</span></span> <span data-ttu-id="de5d4-224">Remplissage de nœuds le `items` tableau avec le premier élément à dépiler au startIndex, le deuxième élément à dépiler à startIndex + 1 et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="de5d4-224">Nodes fill the `items` array with the first item to be popped at the startIndex, the second item to be popped at startIndex + 1, and so on.</span></span>  
  
 <span data-ttu-id="de5d4-225">Pour obtenir un exemple de code, consultez <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span><span class="sxs-lookup"><span data-stu-id="de5d4-225">For a code example, see <xref:System.Collections.Concurrent.ConcurrentStack%601>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de5d4-226">
            <paramref name="items" /> est un argument null (Nothing en Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-226">
              <paramref name="items" /> is a null argument (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="de5d4-227">Collections thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-227">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryPopRange">
      <MemberSignature Language="C#" Value="public int TryPopRange (T[] items, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 TryPopRange(!T[] items, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.ConcurrentStack`1.TryPopRange(`0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryPopRange (items As T(), startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int TryPopRange(cli::array &lt;T&gt; ^ items, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.TryPopRange : 'T[] * int * int -&gt; int" Usage="concurrentStack.TryPopRange (items, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="de5d4-228">
            <see cref="T:System.Array" /> auquel les objets dépilés en partant du haut de <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> seront ajoutés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-228">The <see cref="T:System.Array" /> to which objects popped from the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> will be added.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="de5d4-229">Décalage de base zéro dans <c>items</c> à partir duquel commencer l’insertion des éléments à partir du haut de <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-229">The zero-based offset in <c>items</c> at which to begin inserting elements from the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="de5d4-230">Nombre d’éléments à dépiler en partant du haut de <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> et à insérer dans <c>items</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-230">The number of elements to be popped from top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> and inserted into <c>items</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="de5d4-231">Tente de dépiler et retourner atomiquement plusieurs objets du haut de <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-231">Attempts to pop and return multiple objects from the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1" /> atomically.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="de5d4-232">Nombre d'objets correctement dépilés en partant du haut de la pile et insérés dans <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-232">The number of objects successfully popped from the top of the stack and inserted in <paramref name="items" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="de5d4-233">Lorsque plusieurs éléments, si le conflit sur la pile, l’utilisation de TryPopRange peut être plus efficace que l’utilisation de <xref:System.Collections.Concurrent.ConcurrentStack%601.TryPop%2A> une fois par élément à supprimer.</span><span class="sxs-lookup"><span data-stu-id="de5d4-233">When popping multiple items, if there is little contention on the stack, using TryPopRange can be more efficient than using <xref:System.Collections.Concurrent.ConcurrentStack%601.TryPop%2A> once per item to be removed.</span></span> <span data-ttu-id="de5d4-234">Remplissage de nœuds le `items` tableau avec le premier élément à dépiler au startIndex, le deuxième élément à dépiler à startIndex + 1 et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="de5d4-234">Nodes fill the `items` array with the first item to be popped at the startIndex, the second item to be popped at startIndex + 1, and so on.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="de5d4-235">
            <paramref name="items" /> est une référence Null (Nothing en Visual Basic).</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-235">
              <paramref name="items" /> is a null reference (Nothing in Visual Basic).</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="de5d4-236">
            <paramref name="startIndex" /> ou <paramref name="count" /> est un nombre négatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-236">
              <paramref name="startIndex" /> or <paramref name="count" /> is negative.</span>
          </span>
          <span data-ttu-id="de5d4-237">Ou le paramètre <paramref name="startIndex" /> est supérieur ou égal à la longueur de <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-237">Or <paramref name="startIndex" /> is greater than or equal to the length of <paramref name="items" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="de5d4-238">
            <paramref name="startIndex" /> + <paramref name="count" /> est supérieur à la longueur de <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-238">
              <paramref name="startIndex" /> + <paramref name="count" /> is greater than the length of <paramref name="items" />.</span>
          </span>
        </exception>
        <related type="Article" href="http://msdn.microsoft.com/library/2e7ca21f-786c-4367-96be-0cf3f3dcc6bd">
          <span data-ttu-id="de5d4-239">Collections thread-safe</span>
          <span class="sxs-lookup">
            <span data-stu-id="de5d4-239">Thread-Safe Collections</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>