<Type Name="OrderablePartitioner&lt;TSource&gt;" FullName="System.Collections.Concurrent.OrderablePartitioner&lt;TSource&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="23ecbb2b381e1f343ce16fe29e33242ba0342b85" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51908375" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class OrderablePartitioner&lt;TSource&gt; : System.Collections.Concurrent.Partitioner&lt;TSource&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit OrderablePartitioner`1&lt;TSource&gt; extends System.Collections.Concurrent.Partitioner`1&lt;!TSource&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Collections.Concurrent.OrderablePartitioner`1" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class OrderablePartitioner(Of TSource)&#xA;Inherits Partitioner(Of TSource)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TSource&gt;&#xA;public ref class OrderablePartitioner abstract : System::Collections::Concurrent::Partitioner&lt;TSource&gt;" />
  <TypeSignature Language="F#" Value="type OrderablePartitioner&lt;'Source&gt; = class&#xA;    inherit Partitioner&lt;'Source&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Collections.Concurrent</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.14.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TSource" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Collections.Concurrent.Partitioner&lt;TSource&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="TSource">TSource</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Docs>
    <typeparam name="TSource">
      <span data-ttu-id="d1fa0-101">Type d'éléments de la collection.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d1fa0-101">Type of the elements in the collection.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="d1fa0-102">Représente une manière particulière de fractionner en plusieurs partitions une source de données pouvant être ordonnée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d1fa0-102">Represents a particular manner of splitting an orderable data source into multiple partitions.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fa0-103">L’implémentation de la classe dérivée est chargée de classer les éléments dans des paires clé-valeur de quelque manière appropriée.</span><span class="sxs-lookup"><span data-stu-id="d1fa0-103">The implementation of the derived class is responsible for ordering the elements into key-value pairs in whatever manner is appropriate.</span></span> <span data-ttu-id="d1fa0-104">Pour plus d’informations, consultez [Partitionneurs personnalisés pour PLINQ et la bibliothèque parallèle de tâches (TPL)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="d1fa0-104">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d1fa0-105">L’exemple suivant montre comment implémenter un partitionneur classable qui retourne un élément à la fois :</span><span class="sxs-lookup"><span data-stu-id="d1fa0-105">The following example shows how to implement an orderable partitioner that returns one element at a time:</span></span>  
  
 [!code-csharp[System.Collections.Concurrent.OrderablePartitioner#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.collections.concurrent.orderablepartitioner/cs/orderablepartitioner.cs#1)]
 [!code-vb[System.Collections.Concurrent.OrderablePartitioner#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.collections.concurrent.orderablepartitioner/vb/orderablepartitioner.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="d1fa0-106">Tous les membres publics de <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> sont thread-safe et peuvent être appelés à partir de plusieurs threads simultanément.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d1fa0-106">All public members of <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> are thread-safe and may be called from multiple threads concurrently.</span>
      </span>
    </threadsafe>
    <related type="Article" href="https://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce">
      <span data-ttu-id="d1fa0-107">Comment : accélérer les petits corps de boucles</span>
      <span class="sxs-lookup">
        <span data-stu-id="d1fa0-107">How to: Speed Up Small Loop Bodies</span>
      </span>
    </related>
    <related type="Article" href="https://msdn.microsoft.com/library/c875ad12-a161-43e6-ad1c-3d6927c536a7">
      <span data-ttu-id="d1fa0-108">Comment : implémenter des partitions dynamiques</span>
      <span class="sxs-lookup">
        <span data-stu-id="d1fa0-108">How to: Implement Dynamic Partitions</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected OrderablePartitioner (bool keysOrderedInEachPartition, bool keysOrderedAcrossPartitions, bool keysNormalized);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool keysOrderedInEachPartition, bool keysOrderedAcrossPartitions, bool keysNormalized) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.OrderablePartitioner`1.#ctor(System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (keysOrderedInEachPartition As Boolean, keysOrderedAcrossPartitions As Boolean, keysNormalized As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; OrderablePartitioner(bool keysOrderedInEachPartition, bool keysOrderedAcrossPartitions, bool keysNormalized);" />
      <MemberSignature Language="F#" Value="new System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt; : bool * bool * bool -&gt; System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt;" Usage="new System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt; (keysOrderedInEachPartition, keysOrderedAcrossPartitions, keysNormalized)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keysOrderedInEachPartition" Type="System.Boolean" />
        <Parameter Name="keysOrderedAcrossPartitions" Type="System.Boolean" />
        <Parameter Name="keysNormalized" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="keysOrderedInEachPartition">
          <span data-ttu-id="d1fa0-109">Indique si les éléments de chaque partition sont rapportés dans l'ordre croissant des clés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-109">Indicates whether the elements in each partition are yielded in the order of increasing keys.</span>
          </span>
        </param>
        <param name="keysOrderedAcrossPartitions">
          <span data-ttu-id="d1fa0-110">Indique si les éléments d'une partition antérieure sont toujours placés avant les éléments d'une partition ultérieure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-110">Indicates whether elements in an earlier partition always come before elements in a later partition.</span>
          </span>
          <span data-ttu-id="d1fa0-111">Si True, chaque élément de la partition 0 a une clé d'ordre plus petite que tous les éléments de la partition 1, chaque élément de la partition 1 a une clé d'ordre plus petite que tous les éléments de la partition 2, et ainsi de suite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-111">If true, each element in partition 0 has a smaller order key than any element in partition 1, each element in partition 1 has a smaller order key than any element in partition 2, and so on.</span>
          </span>
        </param>
        <param name="keysNormalized">
          <span data-ttu-id="d1fa0-112">Indique si les clés sont normalisées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-112">Indicates whether keys are normalized.</span>
          </span>
          <span data-ttu-id="d1fa0-113">Si True, toutes les clés d'ordre sont des entiers distincts de la plage [0..</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-113">If true, all order keys are distinct integers in the range [0 ..</span>
          </span>
          <span data-ttu-id="d1fa0-114">numberOfElements-1].</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-114">numberOfElements-1].</span>
          </span>
          <span data-ttu-id="d1fa0-115">Si False, les clés d'ordre doivent encore être distinctes, mais seul leur ordre relatif est pris en considération, pas leur valeur absolue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-115">If false, order keys must still be distinct, but only their relative order is considered, not their absolute values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d1fa0-116">Appelé par les constructeurs dans les classes dérivées pour initialiser la classe <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> avec les contraintes spécifiées sur les clés d'index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-116">Called from constructors in derived classes to initialize the <see cref="T:System.Collections.Concurrent.OrderablePartitioner`1" /> class with the specified constraints on the index keys.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fa0-117">Pour plus d’informations, consultez [Partitionneurs personnalisés pour PLINQ et la bibliothèque parallèle de tâches (TPL)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="d1fa0-117">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887">
          <span data-ttu-id="d1fa0-118">Partitionneurs personnalisés pour PLINQ et la bibliothèque parallèle de tâches (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-118">Custom Partitioners for PLINQ and TPL</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce">
          <span data-ttu-id="d1fa0-119">Comment : accélérer les petits corps de boucles</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-119">How to: Speed Up Small Loop Bodies</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/f4410508-cac6-4ba7-bef1-c5e68b2794f3">
          <span data-ttu-id="d1fa0-120">Comment : implémenter un partitionneur avec un nombre statique de Partitions</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-120">How to: Implement a Partitioner With a Static Number of Partitions</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/c875ad12-a161-43e6-ad1c-3d6927c536a7">
          <span data-ttu-id="d1fa0-121">Comment : implémenter des partitions dynamiques</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-121">How to: Implement Dynamic Partitions</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetDynamicPartitions">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;TSource&gt; GetDynamicPartitions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IEnumerable`1&lt;!TSource&gt; GetDynamicPartitions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.OrderablePartitioner`1.GetDynamicPartitions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetDynamicPartitions () As IEnumerable(Of TSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IEnumerable&lt;TSource&gt; ^ GetDynamicPartitions();" />
      <MemberSignature Language="F#" Value="override this.GetDynamicPartitions : unit -&gt; seq&lt;'Source&gt;" Usage="orderablePartitioner.GetDynamicPartitions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;TSource&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d1fa0-122">Crée un objet qui peut partitionner la collection sous-jacente dans un nombre variable de partitions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-122">Creates an object that can partition the underlying collection into a variable number of partitions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d1fa0-123">Objet qui peut créer des partitions sur la source de données sous-jacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-123">An object that can create partitions over the underlying data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fa0-124">L’objet retourné implémente le <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> interface.</span><span class="sxs-lookup"><span data-stu-id="d1fa0-124">The returned object implements the <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="d1fa0-125">L’appel <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> sur l’objet crée une autre partition sur la séquence.</span><span class="sxs-lookup"><span data-stu-id="d1fa0-125">Calling <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> on the object creates another partition over the sequence.</span></span>  
  
 <span data-ttu-id="d1fa0-126">L’implémentation par défaut fournit le même comportement que <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderableDynamicPartitions%2A> , à ceci près que le jeu retourné de partitions ne fournit pas les clés pour les éléments.</span><span class="sxs-lookup"><span data-stu-id="d1fa0-126">The default implementation provides the same behavior as <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderableDynamicPartitions%2A> except that the returned set of partitions does not provide the keys for the elements.</span></span>  
  
 <span data-ttu-id="d1fa0-127">Le <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetDynamicPartitions%2A> méthode est uniquement pris en charge le <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> propriété retourne la valeur true.</span><span class="sxs-lookup"><span data-stu-id="d1fa0-127">The <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetDynamicPartitions%2A> method is only supported if the <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> property returns true.</span></span>  
  
 <span data-ttu-id="d1fa0-128">Pour plus d’informations, consultez [Partitionneurs personnalisés pour PLINQ et la bibliothèque parallèle de tâches (TPL)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="d1fa0-128">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d1fa0-129">Le partitionnement dynamique n'est pas pris en charge par la classe de base.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-129">Dynamic partitioning is not supported by the base class.</span>
          </span>
          <span data-ttu-id="d1fa0-130">Doit être implémenté dans les classes dérivées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-130">It must be implemented in derived classes.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887">
          <span data-ttu-id="d1fa0-131">Partitionneurs personnalisés pour PLINQ et la bibliothèque parallèle de tâches (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-131">Custom Partitioners for PLINQ and TPL</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce">
          <span data-ttu-id="d1fa0-132">Comment : accélérer les petits corps de boucles</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-132">How to: Speed Up Small Loop Bodies</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/f4410508-cac6-4ba7-bef1-c5e68b2794f3">
          <span data-ttu-id="d1fa0-133">Comment : implémenter un partitionneur avec un nombre statique de Partitions</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-133">How to: Implement a Partitioner With a Static Number of Partitions</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/c875ad12-a161-43e6-ad1c-3d6927c536a7">
          <span data-ttu-id="d1fa0-134">Comment : implémenter des partitions dynamiques</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-134">How to: Implement Dynamic Partitions</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetOrderableDynamicPartitions">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;long,TSource&gt;&gt; GetOrderableDynamicPartitions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;int64, !TSource&gt;&gt; GetOrderableDynamicPartitions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderableDynamicPartitions" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetOrderableDynamicPartitions () As IEnumerable(Of KeyValuePair(Of Long, TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;long, TSource&gt;&gt; ^ GetOrderableDynamicPartitions();" />
      <MemberSignature Language="F#" Value="abstract member GetOrderableDynamicPartitions : unit -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;int64, 'Source&gt;&gt;&#xA;override this.GetOrderableDynamicPartitions : unit -&gt; seq&lt;System.Collections.Generic.KeyValuePair&lt;int64, 'Source&gt;&gt;" Usage="orderablePartitioner.GetOrderableDynamicPartitions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.Int64,TSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d1fa0-135">Crée un objet qui peut partitionner la collection sous-jacente dans un nombre variable de partitions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-135">Creates an object that can partition the underlying collection into a variable number of partitions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d1fa0-136">Objet qui peut créer des partitions sur la source de données sous-jacente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-136">An object that can create partitions over the underlying data source.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fa0-137">L’objet retourné implémente le <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> interface.</span><span class="sxs-lookup"><span data-stu-id="d1fa0-137">The returned object implements the <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="d1fa0-138">L’appel <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> sur l’objet crée une autre partition sur la séquence.</span><span class="sxs-lookup"><span data-stu-id="d1fa0-138">Calling <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> on the object creates another partition over the sequence.</span></span>  
  
 <span data-ttu-id="d1fa0-139">Chaque partition est représentée comme un énumérateur sur les paires clé-valeur.</span><span class="sxs-lookup"><span data-stu-id="d1fa0-139">Each partition is represented as an enumerator over key-value pairs.</span></span> <span data-ttu-id="d1fa0-140">La valeur de la paire est l’élément lui-même, et la clé est un entier qui détermine l’ordre relatif de cet élément par rapport aux autres éléments.</span><span class="sxs-lookup"><span data-stu-id="d1fa0-140">The value in the pair is the element itself, and the key is an integer which determines the relative ordering of this element against other elements.</span></span>  
  
 <span data-ttu-id="d1fa0-141">Le <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderableDynamicPartitions%2A> méthode est uniquement pris en charge le <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> propriété retourne la valeur true.</span><span class="sxs-lookup"><span data-stu-id="d1fa0-141">The <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderableDynamicPartitions%2A> method is only supported if the <xref:System.Collections.Concurrent.Partitioner%601.SupportsDynamicPartitions%2A> property returns true.</span></span>  
  
 <span data-ttu-id="d1fa0-142">Pour plus d’informations, consultez [Partitionneurs personnalisés pour PLINQ et la bibliothèque parallèle de tâches (TPL)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="d1fa0-142">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d1fa0-143">Le partitionnement dynamique n'est pas pris en charge par ce partitionneur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-143">Dynamic partitioning is not supported by this partitioner.</span>
          </span>
        </exception>
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887">
          <span data-ttu-id="d1fa0-144">Partitionneurs personnalisés pour PLINQ et la bibliothèque parallèle de tâches (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-144">Custom Partitioners for PLINQ and TPL</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce">
          <span data-ttu-id="d1fa0-145">Comment : accélérer les petits corps de boucles</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-145">How to: Speed Up Small Loop Bodies</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/f4410508-cac6-4ba7-bef1-c5e68b2794f3">
          <span data-ttu-id="d1fa0-146">Comment : implémenter un partitionneur avec un nombre statique de Partitions</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-146">How to: Implement a Partitioner With a Static Number of Partitions</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/c875ad12-a161-43e6-ad1c-3d6927c536a7">
          <span data-ttu-id="d1fa0-147">Comment : implémenter des partitions dynamiques</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-147">How to: Implement Dynamic Partitions</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetOrderablePartitions">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;long,TSource&gt;&gt;&gt; GetOrderablePartitions (int partitionCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;int64, !TSource&gt;&gt;&gt; GetOrderablePartitions(int32 partitionCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.OrderablePartitioner`1.GetOrderablePartitions(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetOrderablePartitions (partitionCount As Integer) As IList(Of IEnumerator(Of KeyValuePair(Of Long, TSource)))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Collections::Generic::IList&lt;System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;long, TSource&gt;&gt; ^&gt; ^ GetOrderablePartitions(int partitionCount);" />
      <MemberSignature Language="F#" Value="abstract member GetOrderablePartitions : int -&gt; System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;int64, 'Source&gt;&gt;&gt;" Usage="orderablePartitioner.GetOrderablePartitions partitionCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.Int64,TSource&gt;&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="partitionCount">
          <span data-ttu-id="d1fa0-148">Nombre de partitions à créer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-148">The number of partitions to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d1fa0-149">Partitionne la collection sous-jacente dans le nombre spécifié de partitions classables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-149">Partitions the underlying collection into the specified number of orderable partitions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d1fa0-150">Liste qui contient des énumérateurs <paramref name="partitionCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-150">A list containing <paramref name="partitionCount" /> enumerators.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fa0-151">Chaque partition est représentée comme un énumérateur sur les paires clé-valeur.</span><span class="sxs-lookup"><span data-stu-id="d1fa0-151">Each partition is represented as an enumerator over key-value pairs.</span></span>  
  
 <span data-ttu-id="d1fa0-152">La valeur de la paire est l’élément lui-même, et la clé est un entier qui détermine l’ordre relatif de cet élément par rapport aux autres éléments dans la source de données.</span><span class="sxs-lookup"><span data-stu-id="d1fa0-152">The value of the pair is the element itself, and the key is an integer which determines the relative ordering of this element against other elements in the data source.</span></span>  
  
 <span data-ttu-id="d1fa0-153">Pour plus d’informations, consultez [Partitionneurs personnalisés pour PLINQ et la bibliothèque parallèle de tâches (TPL)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="d1fa0-153">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887">
          <span data-ttu-id="d1fa0-154">Partitionneurs personnalisés pour PLINQ et la bibliothèque parallèle de tâches (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-154">Custom Partitioners for PLINQ and TPL</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce">
          <span data-ttu-id="d1fa0-155">Comment : accélérer les petits corps de boucles</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-155">How to: Speed Up Small Loop Bodies</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/f4410508-cac6-4ba7-bef1-c5e68b2794f3">
          <span data-ttu-id="d1fa0-156">Comment : implémenter un partitionneur avec un nombre statique de Partitions</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-156">How to: Implement a Partitioner With a Static Number of Partitions</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/c875ad12-a161-43e6-ad1c-3d6927c536a7">
          <span data-ttu-id="d1fa0-157">Comment : implémenter des partitions dynamiques</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-157">How to: Implement Dynamic Partitions</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="GetPartitions">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;TSource&gt;&gt; GetPartitions (int partitionCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Collections.Generic.IEnumerator`1&lt;!TSource&gt;&gt; GetPartitions(int32 partitionCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Collections.Concurrent.OrderablePartitioner`1.GetPartitions(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPartitions (partitionCount As Integer) As IList(Of IEnumerator(Of TSource))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::Collections::Generic::IEnumerator&lt;TSource&gt; ^&gt; ^ GetPartitions(int partitionCount);" />
      <MemberSignature Language="F#" Value="override this.GetPartitions : int -&gt; System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;'Source&gt;&gt;" Usage="orderablePartitioner.GetPartitions partitionCount" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Collections.Generic.IEnumerator&lt;TSource&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="partitionCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="partitionCount">
          <span data-ttu-id="d1fa0-158">Nombre de partitions à créer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-158">The number of partitions to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d1fa0-159">Partitionne la collection sous-jacente dans le nombre donné de partitions classables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-159">Partitions the underlying collection into the given number of ordered partitions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d1fa0-160">Liste qui contient des énumérateurs <paramref name="partitionCount" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-160">A list containing <paramref name="partitionCount" /> enumerators.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fa0-161">L’implémentation par défaut fournit le même comportement que <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderablePartitions%2A> , à ceci près que le jeu retourné de partitions ne fournit pas les clés pour les éléments.</span><span class="sxs-lookup"><span data-stu-id="d1fa0-161">The default implementation provides the same behavior as <xref:System.Collections.Concurrent.OrderablePartitioner%601.GetOrderablePartitions%2A> except that the returned set of partitions does not provide the keys for the elements.</span></span>  
  
 <span data-ttu-id="d1fa0-162">Pour plus d’informations, consultez [Partitionneurs personnalisés pour PLINQ et la bibliothèque parallèle de tâches (TPL)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="d1fa0-162">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887">
          <span data-ttu-id="d1fa0-163">Partitionneurs personnalisés pour PLINQ et la bibliothèque parallèle de tâches (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-163">Custom Partitioners for PLINQ and TPL</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce">
          <span data-ttu-id="d1fa0-164">Comment : accélérer les petits corps de boucles</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-164">How to: Speed Up Small Loop Bodies</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/f4410508-cac6-4ba7-bef1-c5e68b2794f3">
          <span data-ttu-id="d1fa0-165">Comment : implémenter un partitionneur avec un nombre statique de Partitions</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-165">How to: Implement a Partitioner With a Static Number of Partitions</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/c875ad12-a161-43e6-ad1c-3d6927c536a7">
          <span data-ttu-id="d1fa0-166">Comment : implémenter des partitions dynamiques</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-166">How to: Implement Dynamic Partitions</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="KeysNormalized">
      <MemberSignature Language="C#" Value="public bool KeysNormalized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeysNormalized" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysNormalized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeysNormalized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeysNormalized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.KeysNormalized : bool" Usage="System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt;.KeysNormalized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d1fa0-167">Obtient si les clés d'ordre sont normalisées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-167">Gets whether order keys are normalized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d1fa0-168">True si les clés sont normalisées ; sinon, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-168">true if the keys are normalized; otherwise false.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fa0-169">Si <xref:System.Collections.Concurrent.OrderablePartitioner%601.KeysNormalized%2A> retourne la valeur true, toutes les clés d’ordre sont des entiers distincts de la plage [0..</span><span class="sxs-lookup"><span data-stu-id="d1fa0-169">If <xref:System.Collections.Concurrent.OrderablePartitioner%601.KeysNormalized%2A> returns true, all order keys are distinct integers in the range [0 ..</span></span> <span data-ttu-id="d1fa0-170">numberOfElements-1].</span><span class="sxs-lookup"><span data-stu-id="d1fa0-170">numberOfElements-1].</span></span> <span data-ttu-id="d1fa0-171">Si la propriété retourne la valeur false, l’ordre clés doivent encore être distinctes, mais seul leur ordre relatif est considérée comme, pas leur valeur absolue.</span><span class="sxs-lookup"><span data-stu-id="d1fa0-171">If the property returns false, order keys must still be distinct, but only their relative order is considered, not their absolute values.</span></span>  
  
 <span data-ttu-id="d1fa0-172">Pour plus d’informations, consultez [Partitionneurs personnalisés pour PLINQ et la bibliothèque parallèle de tâches (TPL)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="d1fa0-172">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeysOrderedAcrossPartitions">
      <MemberSignature Language="C#" Value="public bool KeysOrderedAcrossPartitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeysOrderedAcrossPartitions" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysOrderedAcrossPartitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeysOrderedAcrossPartitions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeysOrderedAcrossPartitions { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.KeysOrderedAcrossPartitions : bool" Usage="System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt;.KeysOrderedAcrossPartitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d1fa0-173">Obtient si les éléments d'une partition antérieure sont toujours placés avant les éléments d'une partition ultérieure.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-173">Gets whether elements in an earlier partition always come before elements in a later partition.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d1fa0-174">Indique si les éléments d'une partition antérieure sont toujours placés avant les éléments d'une partition ultérieure ; sinon, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-174">true if the elements in an earlier partition always come before elements in a later partition; otherwise false.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fa0-175">Si <xref:System.Collections.Concurrent.OrderablePartitioner%601.KeysOrderedAcrossPartitions%2A> retourne la valeur true, chaque élément de la partition 0 a une clé d’ordre plus petite que n’importe quel élément dans la partition 1, chaque élément de la partition 1 a une clé d’ordre plus petite que tous les éléments de la partition 2 et ainsi de suite.</span><span class="sxs-lookup"><span data-stu-id="d1fa0-175">If <xref:System.Collections.Concurrent.OrderablePartitioner%601.KeysOrderedAcrossPartitions%2A> returns true, each element in partition 0 has a smaller order key than any element in partition 1, each element in partition 1 has a smaller order key than any element in partition 2, and so on.</span></span>  
  
 <span data-ttu-id="d1fa0-176">Pour plus d’informations, consultez [Partitionneurs personnalisés pour PLINQ et la bibliothèque parallèle de tâches (TPL)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="d1fa0-176">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887">
          <span data-ttu-id="d1fa0-177">Partitionneurs personnalisés pour PLINQ et la bibliothèque parallèle de tâches (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-177">Custom Partitioners for PLINQ and TPL</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce">
          <span data-ttu-id="d1fa0-178">Comment : accélérer les petits corps de boucles</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-178">How to: Speed Up Small Loop Bodies</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/f4410508-cac6-4ba7-bef1-c5e68b2794f3">
          <span data-ttu-id="d1fa0-179">Comment : implémenter un partitionneur avec un nombre statique de Partitions</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-179">How to: Implement a Partitioner With a Static Number of Partitions</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/c875ad12-a161-43e6-ad1c-3d6927c536a7">
          <span data-ttu-id="d1fa0-180">Comment : implémenter des partitions dynamiques</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-180">How to: Implement Dynamic Partitions</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="KeysOrderedInEachPartition">
      <MemberSignature Language="C#" Value="public bool KeysOrderedInEachPartition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeysOrderedInEachPartition" />
      <MemberSignature Language="DocId" Value="P:System.Collections.Concurrent.OrderablePartitioner`1.KeysOrderedInEachPartition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeysOrderedInEachPartition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeysOrderedInEachPartition { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.KeysOrderedInEachPartition : bool" Usage="System.Collections.Concurrent.OrderablePartitioner&lt;'Source&gt;.KeysOrderedInEachPartition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Collections.Concurrent</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.14.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d1fa0-181">Obtient si les éléments de chaque partition sont rapportés dans l'ordre croissant des clés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-181">Gets whether elements in each partition are yielded in the order of increasing keys.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d1fa0-182">Indique si les éléments de chaque partition sont rapportés dans l'ordre croissant des clés ; sinon, false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-182">true if the elements in each partition are yielded in the order of increasing keys; otherwise false.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d1fa0-183">Pour plus d’informations, consultez [Partitionneurs personnalisés pour PLINQ et la bibliothèque parallèle de tâches (TPL)](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span><span class="sxs-lookup"><span data-stu-id="d1fa0-183">For more information, see [Custom Partitioners for PLINQ and TPL](~/docs/standard/parallel-programming/custom-partitioners-for-plinq-and-tpl.md).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/96153688-9a01-47c4-8430-909cee9a2887">
          <span data-ttu-id="d1fa0-184">Partitionneurs personnalisés pour PLINQ et la bibliothèque parallèle de tâches (TPL)</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-184">Custom Partitioners for PLINQ and TPL</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/c7a66677-cb59-4cbf-969a-d2e8fc61a6ce">
          <span data-ttu-id="d1fa0-185">Comment : accélérer les petits corps de boucles</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-185">How to: Speed Up Small Loop Bodies</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/f4410508-cac6-4ba7-bef1-c5e68b2794f3">
          <span data-ttu-id="d1fa0-186">Comment : implémenter un partitionneur avec un nombre statique de Partitions</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-186">How to: Implement a Partitioner With a Static Number of Partitions</span>
          </span>
        </related>
        <related type="Article" href="https://msdn.microsoft.com/library/c875ad12-a161-43e6-ad1c-3d6927c536a7">
          <span data-ttu-id="d1fa0-187">Comment : implémenter des partitions dynamiques</span>
          <span class="sxs-lookup">
            <span data-stu-id="d1fa0-187">How to: Implement Dynamic Partitions</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>