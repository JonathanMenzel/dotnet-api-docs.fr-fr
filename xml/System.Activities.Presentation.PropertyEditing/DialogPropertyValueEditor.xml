<Type Name="DialogPropertyValueEditor" FullName="System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dd6539d3724c39122cf92cb3fea64905d5956a8b" />
    <Meta Name="ms.sourcegitcommit" Value="b3480b6208c3cad466469e76294a96f5ab1ef04c" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/16/2018" />
    <Meta Name="ms.locfileid" Value="35691493" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DialogPropertyValueEditor : System.Activities.Presentation.PropertyEditing.PropertyValueEditor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DialogPropertyValueEditor extends System.Activities.Presentation.PropertyEditing.PropertyValueEditor" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" />
  <TypeSignature Language="VB.NET" Value="Public Class DialogPropertyValueEditor&#xA;Inherits PropertyValueEditor" />
  <TypeSignature Language="C++ CLI" Value="public ref class DialogPropertyValueEditor : System::Activities::Presentation::PropertyEditing::PropertyValueEditor" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Activities.Presentation.PropertyEditing.PropertyValueEditor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Conteneur pour l'ensemble de la logique de modification de dialogue pour les objets <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyEntry" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez la classe <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor> pour afficher un éditeur inline qui peut disposer d'un éditeur de boîtes de dialogue associé.  
  
 La classe <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor> peut contenir <xref:System.Windows.DataTemplate> pour un éditeur de boîtes de dialogue ou une logique personnalisée appelée lorsque la boîte de dialogue l'est également.  
  
 Utilisez <xref:System.Activities.Presentation.PropertyEditing.EditModeSwitchButton> dans votre <xref:System.Windows.DataTemplate> pour appeler votre classe <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor> personnalisée.  
  
 Vous pouvez fournir <xref:System.Windows.DataTemplate> qui est affiché dans une boîte de dialogue hôte. Vous pouvez également remplacer la méthode <xref:System.Windows.Forms.Form.ShowDialog>, qui permet la réutilisation de boîtes de dialogue existantes ou système.  
  
 La liste suivante affiche les règles permettant de déterminer si la méthode <xref:System.Windows.DataTemplate> ou <xref:System.Windows.Forms.Form.ShowDialog> est utilisée.  
  
 Si le <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate%2A> propriété n’est pas une référence null (Nothing en Visual Basic), qui <xref:System.Windows.DataTemplate> est hébergé dans une boîte de dialogue spécifique de l’hôte, qui fournit les styles de l’hôte. <xref:System.Windows.Forms.Form.ShowDialog> n'est pas appelé.  
  
 Si le <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate%2A> propriété est une référence null (Nothing en Visual Basic), le serveur virtuel <xref:System.Windows.Forms.Form.ShowDialog> méthode est appelée et vous pouvez substituer cette méthode pour afficher une boîte de dialogue.  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crée une instance de la classe <see cref="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DialogPropertyValueEditor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DialogPropertyValueEditor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Crée une instance de la classe <see cref="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" /> sans modèle spécifique.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DialogPropertyValueEditor (System.Windows.DataTemplate dialogEditorTemplate, System.Windows.DataTemplate inlineEditorTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.DataTemplate dialogEditorTemplate, class System.Windows.DataTemplate inlineEditorTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.#ctor(System.Windows.DataTemplate,System.Windows.DataTemplate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (dialogEditorTemplate As DataTemplate, inlineEditorTemplate As DataTemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DialogPropertyValueEditor(System::Windows::DataTemplate ^ dialogEditorTemplate, System::Windows::DataTemplate ^ inlineEditorTemplate);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="dialogEditorTemplate" Type="System.Windows.DataTemplate" />
        <Parameter Name="inlineEditorTemplate" Type="System.Windows.DataTemplate" />
      </Parameters>
      <Docs>
        <param name="dialogEditorTemplate">
          <see cref="T:System.Windows.DataTemplate" /> hébergé dans un chrome de boîte de dialogue spécifique à l'hôte et dont la <see cref="P:System.Activities.ActivityContext.DataContext" /> a la valeur <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> qui correspond à la propriété en cours de modification.</param>
        <param name="inlineEditorTemplate">
          <see cref="T:System.Windows.DataTemplate" /> utilisé pour l'interface utilisateur de l'éditeur inline. S'il est utilisé, sa <see cref="P:System.Activities.ActivityContext.DataContext" /> est définie sur <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> qui correspond à la propriété en cours de modification.</param>
        <summary>Crée une instance de la classe <see cref="T:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor" /> avec l'éditeur de boîtes de dialogue spécifié et les modèles d'éditeurs inline.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DialogEditorTemplate">
      <MemberSignature Language="C#" Value="public System.Windows.DataTemplate DialogEditorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DataTemplate DialogEditorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property DialogEditorTemplate As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DataTemplate ^ DialogEditorTemplate { System::Windows::DataTemplate ^ get(); void set(System::Windows::DataTemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le <see cref="T:System.Windows.DataTemplate" /> qui est hébergé par une boîte de dialogue spécifique à l'hôte et dont la <see cref="P:System.Activities.ActivityContext.DataContext" /> a la valeur d'une <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyValue" />.</summary>
        <value>Objet <see cref="T:System.Windows.DataTemplate" /> hébergé par une boîte de dialogue spécifique à l'hôte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si cette propriété retourne `null`, le <xref:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.ShowDialog%2A> méthode est appelée à la place.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShowDialog">
      <MemberSignature Language="C#" Value="public virtual void ShowDialog (System.Activities.Presentation.PropertyEditing.PropertyValue propertyValue, System.Windows.IInputElement commandSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ShowDialog(class System.Activities.Presentation.PropertyEditing.PropertyValue propertyValue, class System.Windows.IInputElement commandSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.ShowDialog(System.Activities.Presentation.PropertyEditing.PropertyValue,System.Windows.IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ShowDialog(System::Activities::Presentation::PropertyEditing::PropertyValue ^ propertyValue, System::Windows::IInputElement ^ commandSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyValue" Type="System.Activities.Presentation.PropertyEditing.PropertyValue" />
        <Parameter Name="commandSource" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="propertyValue">
          <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyValue" /> pour la propriété en cours de modification.</param>
        <param name="commandSource">
          <see cref="T:System.Windows.IInputElement" /> qui peut être utilisé comme source pour l'exécution de <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueEditorCommands" />.</param>
        <summary>Appelé lorsque la <see cref="P:System.Activities.Presentation.PropertyEditing.DialogPropertyValueEditor.DialogEditorTemplate" /> a la valeur null et qu'une boîte de dialogue a été appelée par l'utilisateur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Étant donné que les commandes sont gérées par l'hôte et que les boîtes de dialogue personnalisées ne vont pas faire partie de cette arborescence d'éléments visuels, `commandSource` expose <xref:System.Windows.IInputElement> qui fait partie de l'arborescence d'éléments visuels de l'hôte et qui, par conséquent, peut être utilisée pour exécuter des commandes d'édition de propriétés de sorte qu'elles soient correctement gérées. Le remplacement de cette méthode vous permet d'implémenter toute logique de boîte de dialogue personnalisée, comme l'appel de boîtes de dialogue système existantes.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>