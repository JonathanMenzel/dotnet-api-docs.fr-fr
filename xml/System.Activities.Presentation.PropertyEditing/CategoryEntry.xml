<Type Name="CategoryEntry" FullName="System.Activities.Presentation.PropertyEditing.CategoryEntry">
  <TypeSignature Language="C#" Value="public abstract class CategoryEntry : System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget, System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CategoryEntry extends System.Object implements class System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget, class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.PropertyEditing.CategoryEntry" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CategoryEntry&#xA;Implements INotifyPropertyChanged, IPropertyFilterTarget" />
  <TypeSignature Language="C++ CLI" Value="public ref class CategoryEntry abstract : System::Activities::Presentation::PropertyEditing::IPropertyFilterTarget, System::ComponentModel::INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b7720-101">Modélise une catégorie, qui se compose d'un nom localisé et d'une collection de propriétés.</span><span class="sxs-lookup"><span data-stu-id="b7720-101">Models a Category, which consists of a localized name and a collection of properties.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CategoryEntry (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.CategoryEntry.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CategoryEntry(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b7720-102">Nom de catégorie localisé d'un groupe de propriétés.</span><span class="sxs-lookup"><span data-stu-id="b7720-102">The localized Category name of a group of properties.</span></span></param>
        <summary><span data-ttu-id="b7720-103">Crée une instance de la classe <see cref="T:System.Activities.Presentation.PropertyEditing.CategoryEntry" />.</span><span class="sxs-lookup"><span data-stu-id="b7720-103">Creates a new instance of the <see cref="T:System.Activities.Presentation.PropertyEditing.CategoryEntry" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b7720-104"><paramref name="name" /> est <see langword="empty" />.</span><span class="sxs-lookup"><span data-stu-id="b7720-104"><paramref name="name" /> is <see langword="empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ApplyFilter">
      <MemberSignature Language="C#" Value="public virtual void ApplyFilter (System.Activities.Presentation.PropertyEditing.PropertyFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyFilter(class System.Activities.Presentation.PropertyEditing.PropertyFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.CategoryEntry.ApplyFilter(System.Activities.Presentation.PropertyEditing.PropertyFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ApplyFilter (filter As PropertyFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyFilter(System::Activities::Presentation::PropertyEditing::PropertyFilter ^ filter);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter(System.Activities.Presentation.PropertyEditing.PropertyFilter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Activities.Presentation.PropertyEditing.PropertyFilter" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="b7720-105"><see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> en cours d'application.</span><span class="sxs-lookup"><span data-stu-id="b7720-105">The <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> being applied.</span></span></param>
        <summary><span data-ttu-id="b7720-106">Définit un nouveau filtre de propriété.</span><span class="sxs-lookup"><span data-stu-id="b7720-106">Sets a new property filter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b7720-107">Si la catégorie correspond au filtre spécifié, alors l'événement <xref:System.Activities.Presentation.PropertyEditing.CategoryEntry.FilterApplied> est déclenché.</span><span class="sxs-lookup"><span data-stu-id="b7720-107">If the Category matches the specified filter, then the <xref:System.Activities.Presentation.PropertyEditing.CategoryEntry.FilterApplied> event is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryName">
      <MemberSignature Language="C#" Value="public string CategoryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryName" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.CategoryEntry.CategoryName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CategoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CategoryName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7720-108">Obtient le nom de la catégorie localisée.</span><span class="sxs-lookup"><span data-stu-id="b7720-108">Gets the name of the localized Category.</span></span></summary>
        <value><span data-ttu-id="b7720-109">Nom de la catégorie localisée.</span><span class="sxs-lookup"><span data-stu-id="b7720-109">The localized Category name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterApplied">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs&gt; FilterApplied;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs&gt; FilterApplied" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.PropertyEditing.CategoryEntry.FilterApplied" />
      <MemberSignature Language="VB.NET" Value="Public Event FilterApplied As EventHandler(Of PropertyFilterAppliedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler&lt;System::Activities::Presentation::PropertyEditing::PropertyFilterAppliedEventArgs ^&gt; ^ FilterApplied;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.FilterApplied</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7720-110">Déclare l'événement <see cref="T:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget" />.</span><span class="sxs-lookup"><span data-stu-id="b7720-110">Declares the <see cref="T:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.PropertyEditing.PropertyEntry this[string propertyName] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.PropertyEditing.PropertyEntry Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.CategoryEntry.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride ReadOnly Property Item(propertyName As String) As PropertyEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::PropertyEditing::PropertyEntry ^ default[System::String ^] { System::Activities::Presentation::PropertyEditing::PropertyEntry ^ get(System::String ^ propertyName); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.PropertyEditing.PropertyEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="b7720-111">Nom de propriété de type chaîne pour lequel une instance de propriété doit être retournée.</span><span class="sxs-lookup"><span data-stu-id="b7720-111">The string property name for which to return a property instance.</span></span></param>
        <summary><span data-ttu-id="b7720-112">Retourne une instance de propriété de cet objet <see cref="System.Activities.Presentation.PropertyEditing.CategoryEntry" /> en fonction du nom de la propriété.</span><span class="sxs-lookup"><span data-stu-id="b7720-112">Returns a property instance of this <see cref="System.Activities.Presentation.PropertyEditing.CategoryEntry" /> object given the property name.</span></span></summary>
        <value><span data-ttu-id="b7720-113">Propriété correspondant au paramètre de nom de propriété (le cas échéant) ; sinon, <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b7720-113">The property corresponding to the property name parameter if one exists; otherwise, <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchesFilter">
      <MemberSignature Language="C#" Value="public virtual bool MatchesFilter { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchesFilter" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.CategoryEntry.MatchesFilter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MatchesFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  virtual property bool MatchesFilter {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7720-114">Obtient ou définit une valeur qui indique si <see cref="T:System.Activities.Presentation.PropertyEditing.CategoryEntry" /> correspond à un filtre.</span><span class="sxs-lookup"><span data-stu-id="b7720-114">Gets or sets a value that indicates whether the <see cref="T:System.Activities.Presentation.PropertyEditing.CategoryEntry" /> matches a filter.</span></span></summary>
        <value>
          <span data-ttu-id="b7720-115"><see langword="true" /> si un filtre équivaut au filtre spécifié ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b7720-115"><see langword="true" /> if a filter equals the specified filter; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchesPredicate">
      <MemberSignature Language="C#" Value="public abstract bool MatchesPredicate (System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesPredicate(class System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.CategoryEntry.MatchesPredicate(System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function MatchesPredicate (predicate As PropertyFilterPredicate) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool MatchesPredicate(System::Activities::Presentation::PropertyEditing::PropertyFilterPredicate ^ predicate);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesPredicate(System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate" />
      </Parameters>
      <Docs>
        <param name="predicate"><span data-ttu-id="b7720-116"><see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate" />, chaîne avec laquelle la correspondance doit être établie.</span><span class="sxs-lookup"><span data-stu-id="b7720-116">The <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate" />, a string, to match against.</span></span></param>
        <summary><span data-ttu-id="b7720-117">Indique si <see cref="T:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget" /> correspond à un prédicat.</span><span class="sxs-lookup"><span data-stu-id="b7720-117">Indicates whether an <see cref="T:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget" /> matches a predicate.</span></span></summary>
        <returns>
          <span data-ttu-id="b7720-118"><see langword="true" /> en cas de correspondance ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b7720-118"><see langword="true" /> if there is a match; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFilterApplied">
      <MemberSignature Language="C#" Value="protected virtual void OnFilterApplied (System.Activities.Presentation.PropertyEditing.PropertyFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFilterApplied(class System.Activities.Presentation.PropertyEditing.PropertyFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.CategoryEntry.OnFilterApplied(System.Activities.Presentation.PropertyEditing.PropertyFilter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFilterApplied (filter As PropertyFilter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFilterApplied(System::Activities::Presentation::PropertyEditing::PropertyFilter ^ filter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Activities.Presentation.PropertyEditing.PropertyFilter" />
      </Parameters>
      <Docs>
        <param name="filter"><span data-ttu-id="b7720-119"><see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> en cours d'application.</span><span class="sxs-lookup"><span data-stu-id="b7720-119">The <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> being applied.</span></span></param>
        <summary><span data-ttu-id="b7720-120">Déclenche l'événement <see cref="E:System.Activities.Presentation.PropertyEditing.CategoryEntry.FilterApplied" /> lorsque le filtre de propriété est appliqué.</span><span class="sxs-lookup"><span data-stu-id="b7720-120">Raises the <see cref="E:System.Activities.Presentation.PropertyEditing.CategoryEntry.FilterApplied" /> event when the property filter is applied.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.CategoryEntry.OnPropertyChanged(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName"><span data-ttu-id="b7720-121">Nom de la propriété qui est modifiée.</span><span class="sxs-lookup"><span data-stu-id="b7720-121">The name of the property that is changed.</span></span></param>
        <summary><span data-ttu-id="b7720-122">Déclenche l'événement <see cref="E:System.Activities.Presentation.PropertyEditing.CategoryEntry.PropertyChanged" />.</span><span class="sxs-lookup"><span data-stu-id="b7720-122">Raises the <see cref="E:System.Activities.Presentation.PropertyEditing.CategoryEntry.PropertyChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b7720-123"><paramref name="propertyName" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b7720-123"><paramref name="propertyName" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.PropertyEditing.PropertyEntry&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Activities.Presentation.PropertyEditing.PropertyEntry&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.CategoryEntry.Properties" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Properties As IEnumerable(Of PropertyEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::PropertyEditing::PropertyEntry ^&gt; ^ Properties { System::Collections::Generic::IEnumerable&lt;System::Activities::Presentation::PropertyEditing::PropertyEntry ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Activities.Presentation.PropertyEditing.PropertyEntry&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7720-124">Obtient une collection <see cref="Systems.Collections.IEnumerable" /> de toutes les propriétés de la catégorie.</span><span class="sxs-lookup"><span data-stu-id="b7720-124">Gets an <see cref="Systems.Collections.IEnumerable" /> collection of all of the properties in the category.</span></span></summary>
        <value><span data-ttu-id="b7720-125">Objet <see cref="T:System.Collections.Generic.IEnumerable`1" />, collection de toutes les propriétés de la catégorie.</span><span class="sxs-lookup"><span data-stu-id="b7720-125">An <see cref="T:System.Collections.Generic.IEnumerable`1" />, a collection of all the properties in the category.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.PropertyEditing.CategoryEntry.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event PropertyChanged As PropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b7720-126">Déclare l'événement <see cref="T:Microsoft.Windows.Design.PropertyEditing.INotifyPropertyChanged" />.</span><span class="sxs-lookup"><span data-stu-id="b7720-126">Declares the <see cref="T:Microsoft.Windows.Design.PropertyEditing.INotifyPropertyChanged" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>