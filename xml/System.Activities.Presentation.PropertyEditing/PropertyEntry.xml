<Type Name="PropertyEntry" FullName="System.Activities.Presentation.PropertyEditing.PropertyEntry">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9029b30a6901bcd15ce2b46975d7446389be45c3" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36720993" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PropertyEntry : System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget, System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PropertyEntry extends System.Object implements class System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget, class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PropertyEntry&#xA;Implements INotifyPropertyChanged, IPropertyFilterTarget" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyEntry abstract : System::Activities::Presentation::PropertyEditing::IPropertyFilterTarget, System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type PropertyEntry = class&#xA;    interface INotifyPropertyChanged&#xA;    interface IPropertyFilterTarget" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="90ead-101">Représente les données d'une propriété pour un élément sélectionné et permet la modification de cette propriété avec des données spécifiques au type.</span>
      <span class="sxs-lookup">
        <span data-stu-id="90ead-101">Represents the data of a property for a selected item and enables editing of this property with type-specific data.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90ead-102">Crée une instance de la classe <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-102">Creates a new instance of the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyEntry.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyEntry();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="90ead-103">Crée une instance de la classe <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-103">Creates a new instance of the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyEntry (System.Activities.Presentation.PropertyEditing.PropertyValue parentValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Activities.Presentation.PropertyEditing.PropertyValue parentValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyEntry.#ctor(System.Activities.Presentation.PropertyEditing.PropertyValue)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (parentValue As PropertyValue)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyEntry(System::Activities::Presentation::PropertyEditing::PropertyValue ^ parentValue);" />
      <MemberSignature Language="F#" Value="new System.Activities.Presentation.PropertyEditing.PropertyEntry : System.Activities.Presentation.PropertyEditing.PropertyValue -&gt; System.Activities.Presentation.PropertyEditing.PropertyEntry" Usage="new System.Activities.Presentation.PropertyEditing.PropertyEntry parentValue" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentValue" Type="System.Activities.Presentation.PropertyEditing.PropertyValue" />
      </Parameters>
      <Docs>
        <param name="parentValue">
          <span data-ttu-id="90ead-104">
            <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> parente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-104">The parent <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90ead-105">Crée une instance de la classe <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" /> qui fait office de sous-propriété du <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-105">Creates a new instance of the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" /> class that serves as a subproperty of the specified <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ead-106">Pour les classes dérivées d'une infrastructure hôte.</span><span class="sxs-lookup"><span data-stu-id="90ead-106">For host infrastructure derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyFilter">
      <MemberSignature Language="C#" Value="public virtual void ApplyFilter (System.Activities.Presentation.PropertyEditing.PropertyFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ApplyFilter(class System.Activities.Presentation.PropertyEditing.PropertyFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyEntry.ApplyFilter(System.Activities.Presentation.PropertyEditing.PropertyFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ApplyFilter (filter As PropertyFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ApplyFilter(System::Activities::Presentation::PropertyEditing::PropertyFilter ^ filter);" />
      <MemberSignature Language="F#" Value="abstract member ApplyFilter : System.Activities.Presentation.PropertyEditing.PropertyFilter -&gt; unit&#xA;override this.ApplyFilter : System.Activities.Presentation.PropertyEditing.PropertyFilter -&gt; unit" Usage="propertyEntry.ApplyFilter filter" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.ApplyFilter(System.Activities.Presentation.PropertyEditing.PropertyFilter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Activities.Presentation.PropertyEditing.PropertyFilter" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="90ead-107">
            <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> à appliquer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-107">The <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90ead-108">Stocke si la valeur de propriété cible correspond à un <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-108">Stores whether the target property value matches a specified <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CategoryName">
      <MemberSignature Language="C#" Value="public abstract string CategoryName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CategoryName" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.CategoryName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CategoryName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ CategoryName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CategoryName : string" Usage="System.Activities.Presentation.PropertyEditing.PropertyEntry.CategoryName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90ead-109">Obtient le nom de la catégorie dans laquelle se trouve cette propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-109">Gets the name of the category in which this property resides.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90ead-110">Objet <see cref="T:System.String" /> qui contient le nom de la catégorie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-110">A <see cref="T:System.String" /> that contains the name of the category.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePropertyValueInstance">
      <MemberSignature Language="C#" Value="protected abstract System.Activities.Presentation.PropertyEditing.PropertyValue CreatePropertyValueInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Activities.Presentation.PropertyEditing.PropertyValue CreatePropertyValueInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyEntry.CreatePropertyValueInstance" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreatePropertyValueInstance () As PropertyValue" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Activities::Presentation::PropertyEditing::PropertyValue ^ CreatePropertyValueInstance();" />
      <MemberSignature Language="F#" Value="abstract member CreatePropertyValueInstance : unit -&gt; System.Activities.Presentation.PropertyEditing.PropertyValue" Usage="propertyEntry.CreatePropertyValueInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.PropertyEditing.PropertyValue</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="90ead-111">Permet à l'infrastructure hôte de créer une instance <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> spécifique à l'hôte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-111">Enables the host infrastructure to create a new host-specific <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90ead-112">Nouvel objet <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-112">A new <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public abstract string Description { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.Description" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Description { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Description : string" Usage="System.Activities.Presentation.PropertyEditing.PropertyEntry.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90ead-113">Obtient la description de la propriété encapsulée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-113">Gets the description of the encapsulated property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90ead-114">Chaîne qui contient la description.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-114">A string that contains the description.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public virtual string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayName : string" Usage="System.Activities.Presentation.PropertyEditing.PropertyEntry.DisplayName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90ead-115">Obtient le nom complet de <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-115">Gets the display name for the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90ead-116">Chaîne qui contient le nom complet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-116">A string that contains the display name.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterApplied">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs&gt; FilterApplied;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs&gt; FilterApplied" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.PropertyEditing.PropertyEntry.FilterApplied" />
      <MemberSignature Language="VB.NET" Value="Public Event FilterApplied As EventHandler(Of PropertyFilterAppliedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler&lt;System::Activities::Presentation::PropertyEditing::PropertyFilterAppliedEventArgs ^&gt; ^ FilterApplied;" />
      <MemberSignature Language="F#" Value="member this.FilterApplied : EventHandler&lt;System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs&gt; " Usage="member this.FilterApplied : System.EventHandler&lt;System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.FilterApplied</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Activities.Presentation.PropertyEditing.PropertyFilterAppliedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90ead-117">Déclaration de l'événement <see cref="T:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget" />, qui se produit lorsqu'un <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> est modifié par l'intermédiaire d'un appel à la méthode <see cref="M:System.Activities.Presentation.PropertyEditing.PropertyEntry.ApplyFilter(System.Activities.Presentation.PropertyEditing.PropertyFilter)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-117">Declaration of the <see cref="T:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget" /> event, which occurs when a <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> is changed through a call to the <see cref="M:System.Activities.Presentation.PropertyEditing.PropertyEntry.ApplyFilter(System.Activities.Presentation.PropertyEditing.PropertyFilter)" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasStandardValues">
      <MemberSignature Language="C#" Value="protected virtual bool HasStandardValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasStandardValues" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.HasStandardValues" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property HasStandardValues As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool HasStandardValues { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasStandardValues : bool" Usage="System.Activities.Presentation.PropertyEditing.PropertyEntry.HasStandardValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90ead-118">Obtient une valeur qui indique si un jeu de valeurs standard est disponible pour ce <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-118">Gets a value that indicates whether a set of standard values is available for this <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90ead-119">
            <see langword="true" /> si un jeu de valeurs standard est disponible ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-119">
              <see langword="true" /> if a set of standard values is available; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAdvanced">
      <MemberSignature Language="C#" Value="public abstract bool IsAdvanced { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAdvanced" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.IsAdvanced" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsAdvanced As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsAdvanced { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAdvanced : bool" Usage="System.Activities.Presentation.PropertyEditing.PropertyEntry.IsAdvanced" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90ead-120">Obtient une valeur qui indique si <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" /> est personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-120">Gets a value that indicates whether the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" /> is custom-made.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90ead-121">
            <see langword="true" /> si l'entrée de propriété est personnalisée ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-121">
              <see langword="true" /> if the property entry is custom-made; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public abstract bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Activities.Presentation.PropertyEditing.PropertyEntry.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90ead-122">Obtient une valeur qui indique si l'objet <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" /> est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-122">Gets a value that indicates whether the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90ead-123">
            <see langword="true" /> si l'entrée de propriété est en lecture seule ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-123">
              <see langword="true" /> if the property entry is read-only; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchesFilter">
      <MemberSignature Language="C#" Value="public bool MatchesFilter { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MatchesFilter" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.MatchesFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property MatchesFilter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  property bool MatchesFilter {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MatchesFilter : bool with get, set" Usage="System.Activities.Presentation.PropertyEditing.PropertyEntry.MatchesFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90ead-124">Obtient une valeur qui indique si <see cref="T:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget" /> correspond au filtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-124">Gets a value that indicates whether the <see cref="T:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget" /> matches the filter.</span>
          </span>
          <span data-ttu-id="90ead-125">Définit la valeur pour indiquer que <see cref="T:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget" /> correspond au filtre et déclenche la méthode de gestionnaire d'événements pour la modification de propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-125">Sets the value to indicate that the <see cref="T:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget" /> matches the filter and fires the event handler method for the property change.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90ead-126">
            <see langword="true" /> si l'objet cible correspond au filtre ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-126">
              <see langword="true" /> if the target object matches the filter; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ead-127">`PropertyContainer` écoute les modifications apportées à cette propriété.</span><span class="sxs-lookup"><span data-stu-id="90ead-127">The `PropertyContainer` listens to changes made to this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MatchesPredicate">
      <MemberSignature Language="C#" Value="public virtual bool MatchesPredicate (System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate predicate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool MatchesPredicate(class System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate predicate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyEntry.MatchesPredicate(System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function MatchesPredicate (predicate As PropertyFilterPredicate) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool MatchesPredicate(System::Activities::Presentation::PropertyEditing::PropertyFilterPredicate ^ predicate);" />
      <MemberSignature Language="F#" Value="abstract member MatchesPredicate : System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate -&gt; bool&#xA;override this.MatchesPredicate : System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate -&gt; bool" Usage="propertyEntry.MatchesPredicate predicate" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget.MatchesPredicate(System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.Activities.Presentation.PropertyEditing.PropertyFilterPredicate" />
      </Parameters>
      <Docs>
        <param name="predicate">
          <span data-ttu-id="90ead-128">Affichage <see cref="T:System.String" /> ou nom de type d'un filtre pour établir une correspondance par rapport à l'objet cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-128">The <see cref="T:System.String" /> display or type name of a filter to match against the target object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90ead-129">Implémentation d'une méthode <see cref="T:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget" /> qui détermine si l'affichage cible ou le nom de type correspond à la chaîne spécifiée contenant le nom d'un filtre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-129">Implementation of a <see cref="T:System.Activities.Presentation.PropertyEditing.IPropertyFilterTarget" /> method that determines whether the target display or type name matches the specified string containing the name of a filter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="90ead-130">
            <see langword="true" /> si l'affichage cible ou le nom de type correspond à la chaîne spécifiée ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-130">
              <see langword="true" /> if the target display or type name matches the specified string; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFilterApplied">
      <MemberSignature Language="C#" Value="protected virtual void OnFilterApplied (System.Activities.Presentation.PropertyEditing.PropertyFilter filter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFilterApplied(class System.Activities.Presentation.PropertyEditing.PropertyFilter filter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyEntry.OnFilterApplied(System.Activities.Presentation.PropertyEditing.PropertyFilter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFilterApplied (filter As PropertyFilter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFilterApplied(System::Activities::Presentation::PropertyEditing::PropertyFilter ^ filter);" />
      <MemberSignature Language="F#" Value="abstract member OnFilterApplied : System.Activities.Presentation.PropertyEditing.PropertyFilter -&gt; unit&#xA;override this.OnFilterApplied : System.Activities.Presentation.PropertyEditing.PropertyFilter -&gt; unit" Usage="propertyEntry.OnFilterApplied filter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Activities.Presentation.PropertyEditing.PropertyFilter" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="90ead-131">
            <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> à appliquer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-131">The <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyFilter" /> to apply.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90ead-132">Déclenche l'événement <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyEntry.FilterApplied" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-132">Raises the <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyEntry.FilterApplied" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OnPropertyChanged">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="90ead-133">Déclenche l'événement <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-133">Raises the <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyChanged" /> event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyEntry.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanged : System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanged : System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="propertyEntry.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="90ead-134">EventArgs pour cet événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-134">The EventArgs for this event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90ead-135">Déclenche l'événement PropertyChanged <see cref="T:System.ComponentModel.INotifyPropertyChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-135">Raises the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> PropertyChanged event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyEntry.OnPropertyChanged(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanged : string -&gt; unit&#xA;override this.OnPropertyChanged : string -&gt; unit" Usage="propertyEntry.OnPropertyChanged propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="90ead-136">Nom de la propriété dont la valeur a été modifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-136">The name of the property whose value has changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90ead-137">Déclenche l'événement <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> lorsque <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyContainerEditMode" /> entend que <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> a été modifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-137">Raises the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> event when the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyContainerEditMode" /> hears that the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> has changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentValue">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.PropertyEditing.PropertyValue ParentValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.PropertyEditing.PropertyValue ParentValue" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.ParentValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentValue As PropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::PropertyEditing::PropertyValue ^ ParentValue { System::Activities::Presentation::PropertyEditing::PropertyValue ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentValue : System.Activities.Presentation.PropertyEditing.PropertyValue" Usage="System.Activities.Presentation.PropertyEditing.PropertyEntry.ParentValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.PropertyEditing.PropertyValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90ead-138">Obtient le <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> parent dans les classes dérivées d'une infrastructure hôte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-138">Gets the parent <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> in classes derived from a host infrastructure.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90ead-139">Objet <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> parent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-139">A parent <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90ead-140">Cela est utilisé uniquement pour les sous-propriétés, sa valeur peut être `null`.</span><span class="sxs-lookup"><span data-stu-id="90ead-140">This is used only for subproperties, so its value can be `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event PropertyChanged As PropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " Usage="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90ead-141">Déclaration de l'événement <see cref="T:System.ComponentModel.INotifyPropertyChanged" />, qui se produit lors de la modification d'une valeur de propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-141">Declaration of the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> event, which occurs when a property value changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyName">
      <MemberSignature Language="C#" Value="public abstract string PropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ PropertyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyName : string" Usage="System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90ead-142">Obtient le nom de la propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-142">Gets the name of the property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90ead-143">Chaîne qui contient le nom de la propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-143">A string that contains the property name.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public abstract Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ PropertyType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyType : Type" Usage="System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90ead-144">Obtient le type de la propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-144">Gets the type of the property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90ead-145">Type qui contient le type de la propriété.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-145">A type that contains the type of the property.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyValue">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.PropertyEditing.PropertyValue PropertyValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.PropertyEditing.PropertyValue PropertyValue" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyValue As PropertyValue" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::PropertyEditing::PropertyValue ^ PropertyValue { System::Activities::Presentation::PropertyEditing::PropertyValue ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyValue : System.Activities.Presentation.PropertyEditing.PropertyValue" Usage="System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.PropertyEditing.PropertyValue</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90ead-146">Obtient le <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> pour ce <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-146">Gets the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> for this <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90ead-147">Objet <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-147">A <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyValueEditor">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.PropertyEditing.PropertyValueEditor PropertyValueEditor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.PropertyEditing.PropertyValueEditor PropertyValueEditor" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyValueEditor" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PropertyValueEditor As PropertyValueEditor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::PropertyEditing::PropertyValueEditor ^ PropertyValueEditor { System::Activities::Presentation::PropertyEditing::PropertyValueEditor ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyValueEditor : System.Activities.Presentation.PropertyEditing.PropertyValueEditor" Usage="System.Activities.Presentation.PropertyEditing.PropertyEntry.PropertyValueEditor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.PropertyEditing.PropertyValueEditor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90ead-148">Obtient le <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueEditor" /> utilisé pour la modification de la valeur de ce <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-148">Gets the <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueEditor" /> that is used for editing the value of this <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90ead-149">Objet <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueEditor" /> qui contient l'éditeur actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-149">A <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueEditor" /> object that contains  the current editor.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardValues">
      <MemberSignature Language="C#" Value="public abstract System.Collections.ICollection StandardValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection StandardValues" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyEntry.StandardValues" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StandardValues As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::ICollection ^ StandardValues { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StandardValues : System.Collections.ICollection" Usage="System.Activities.Presentation.PropertyEditing.PropertyEntry.StandardValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90ead-150">Obtient un jeu de valeurs possibles prises en charge par ce <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-150">Gets a set of possible values supported by this <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90ead-151">Objet <see cref="T:System.Collections.ICollection" /> de valeurs possibles.</span>
          <span class="sxs-lookup">
            <span data-stu-id="90ead-151">An <see cref="T:System.Collections.ICollection" /> of possible values.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>