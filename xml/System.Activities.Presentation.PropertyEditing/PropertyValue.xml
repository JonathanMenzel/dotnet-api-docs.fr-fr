<Type Name="PropertyValue" FullName="System.Activities.Presentation.PropertyEditing.PropertyValue">
  <Metadata><Meta Name="ms.openlocfilehash" Value="72dab378bf93f76d874e59e9e4046c2cc586eb66" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39907044" /></Metadata><TypeSignature Language="C#" Value="public abstract class PropertyValue : System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit PropertyValue extends System.Object implements class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Activities.Presentation.PropertyEditing.PropertyValue" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PropertyValue&#xA;Implements INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyValue abstract : System::ComponentModel::INotifyPropertyChanged" />
  <TypeSignature Language="F#" Value="type PropertyValue = class&#xA;    interface INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>System.Activities.Presentation</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Maintient un modèle de données pour la valeur d'une propriété dans la grille des propriétés.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PropertyValue (System.Activities.Presentation.PropertyEditing.PropertyEntry parentProperty);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Activities.Presentation.PropertyEditing.PropertyEntry parentProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.#ctor(System.Activities.Presentation.PropertyEditing.PropertyEntry)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (parentProperty As PropertyEntry)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PropertyValue(System::Activities::Presentation::PropertyEditing::PropertyEntry ^ parentProperty);" />
      <MemberSignature Language="F#" Value="new System.Activities.Presentation.PropertyEditing.PropertyValue : System.Activities.Presentation.PropertyEditing.PropertyEntry -&gt; System.Activities.Presentation.PropertyEditing.PropertyValue" Usage="new System.Activities.Presentation.PropertyEditing.PropertyValue parentProperty" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parentProperty" Type="System.Activities.Presentation.PropertyEditing.PropertyEntry" />
      </Parameters>
      <Docs>
        <param name="parentProperty"><see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" /> qui correspond à ce <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> avec un objet <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" /> spécifié défini pour la propriété parent.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFromString">
      <MemberSignature Language="C#" Value="public abstract bool CanConvertFromString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanConvertFromString" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.CanConvertFromString" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property CanConvertFromString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool CanConvertFromString { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanConvertFromString : bool" Usage="System.Activities.Presentation.PropertyEditing.PropertyValue.CanConvertFromString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Lors d'une implémentation dans une classe dérivée, obtient une valeur qui indique si <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" /> peut être convertie à partir d'une chaîne.</summary>
        <value><see langword="true" /> si la valeur de la propriété peut être convertie à partir d'une chaîne ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CatchExceptions">
      <MemberSignature Language="C#" Value="protected virtual bool CatchExceptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CatchExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.CatchExceptions" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property CatchExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool CatchExceptions { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CatchExceptions : bool" Usage="System.Activities.Presentation.PropertyEditing.PropertyValue.CatchExceptions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui précise si les exceptions levées pendant l'obtention et la définition de la valeur de propriété doivent être interceptées ou si elles doivent être propagées directement à l'appelant.</summary>
        <value><see langword="true" /> si les exceptions sont interceptées ; <see langword="false" /> si les exceptions sont propagées vers l'appelant.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cet élément dépend de l'existence d'abonnés à l'événement <xref:System.Activities.Presentation.PropertyEditing.PropertyValue.PropertyValueException>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearValue">
      <MemberSignature Language="C#" Value="public abstract void ClearValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.ClearValue" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub ClearValue ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ClearValue();" />
      <MemberSignature Language="F#" Value="abstract member ClearValue : unit -&gt; unit" Usage="propertyValue.ClearValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lors d'une implémentation dans une classe dérivée, efface <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> afin qu'il ne soit pas défini.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Collection">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.PropertyEditing.PropertyValueCollection Collection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.PropertyEditing.PropertyValueCollection Collection" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Collection" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Collection As PropertyValueCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::PropertyEditing::PropertyValueCollection ^ Collection { System::Activities::Presentation::PropertyEditing::PropertyValueCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Collection : System.Activities.Presentation.PropertyEditing.PropertyValueCollection" Usage="System.Activities.Presentation.PropertyEditing.PropertyValue.Collection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.PropertyEditing.PropertyValueCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Lors d'une implémentation dans une classe dérivée, obtient une collection des instances <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> qui correspondent aux éléments d'une collection lorsque <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.IsCollection" /> vérifie que la propriété est une collection.</summary>
        <value>Objet de <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueCollection" /> qui est une collection d'instances de valeur de propriété.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertStringToValue">
      <MemberSignature Language="C#" Value="protected abstract object ConvertStringToValue (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object ConvertStringToValue(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.ConvertStringToValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ConvertStringToValue (value As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Object ^ ConvertStringToValue(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertStringToValue : string -&gt; obj" Usage="propertyValue.ConvertStringToValue value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">Valeur <see cref="T:System.String" /> à convertir en une <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />.</param>
        <summary>Lors d'une implémentation dans une classe dérivée, convertit la <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.StringValue" /> spécifiée en une <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />.</summary>
        <returns>Valeur <see cref="T:System.Object" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertValueToString">
      <MemberSignature Language="C#" Value="protected abstract string ConvertValueToString (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string ConvertValueToString(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.ConvertValueToString(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function ConvertValueToString (value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ ConvertValueToString(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertValueToString : obj -&gt; string" Usage="propertyValue.ConvertValueToString value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" /> à convertir en chaîne.</param>
        <summary>Lors d'une implémentation dans une classe dérivée, convertit la <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" /> spécifiée en une <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.StringValue" />.</summary>
        <returns>Version <see cref="T:System.String" /> de la <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValueCore">
      <MemberSignature Language="C#" Value="protected abstract object GetValueCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetValueCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.GetValueCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetValueCore () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Object ^ GetValueCore();" />
      <MemberSignature Language="F#" Value="abstract member GetValueCore : unit -&gt; obj" Usage="propertyValue.GetValueCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lors d'une implémentation dans une classe dérivée, retourne une <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />.</summary>
        <returns>Objet <see cref="T:System.Object" /> de valeur de propriété.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasSubProperties">
      <MemberSignature Language="C#" Value="public abstract bool HasSubProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasSubProperties" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.HasSubProperties" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property HasSubProperties As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool HasSubProperties { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasSubProperties : bool" Usage="System.Activities.Presentation.PropertyEditing.PropertyValue.HasSubProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Lors d'une implémentation dans une classe dérivée, obtient une valeur qui précise si le type de cette propriété prend en charge des sous-propriétés.</summary>
        <value><see langword="true" /> Si le type prend en charge les sous-propriétés ; Sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les implémentations classiques utilisent <xref:System.ComponentModel.TypeConverter> pour vérifier l'existence de sous-propriétés.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCollection">
      <MemberSignature Language="C#" Value="public abstract bool IsCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCollection" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.IsCollection" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsCollection { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCollection : bool" Usage="System.Activities.Presentation.PropertyEditing.PropertyValue.IsCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Lors d'une implémentation dans une classe dérivée, obtient une valeur qui précise si ce <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> est une collection.</summary>
        <value><see langword="true" /> Si la valeur de propriété est une collection ; Sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultValue">
      <MemberSignature Language="C#" Value="public abstract bool IsDefaultValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.IsDefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDefaultValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDefaultValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDefaultValue : bool" Usage="System.Activities.Presentation.PropertyEditing.PropertyValue.IsDefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Lors d'une implémentation dans une classe dérivée, obtient une valeur qui précise si la <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" /> est la valeur par défaut de la propriété.</summary>
        <value><see langword="true" /> Si la valeur est la valeur par défaut ; Sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMixedValue">
      <MemberSignature Language="C#" Value="public abstract bool IsMixedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMixedValue" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.IsMixedValue" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsMixedValue As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsMixedValue { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsMixedValue : bool" Usage="System.Activities.Presentation.PropertyEditing.PropertyValue.IsMixedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Lors d'une implémentation dans une classe dérivée, obtient une valeur qui précise si plusieurs objets contiennent cette propriété et s'ils ont des valeurs différentes.</summary>
        <value><see langword="true" /> Si plusieurs objets contiennent cette propriété ; Sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `true`, <xref:System.Activities.Presentation.PropertyEditing.PropertyValue.Value%2A> retournera null et <xref:System.Activities.Presentation.PropertyEditing.PropertyValue.StringValue%2A> retournera <xref:System.String.Empty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyRootValueChanged">
      <MemberSignature Language="C#" Value="protected virtual void NotifyRootValueChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void NotifyRootValueChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.NotifyRootValueChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub NotifyRootValueChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void NotifyRootValueChanged();" />
      <MemberSignature Language="F#" Value="abstract member NotifyRootValueChanged : unit -&gt; unit&#xA;override this.NotifyRootValueChanged : unit -&gt; unit" Usage="propertyValue.NotifyRootValueChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Déclenche l'événement <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyValue.RootValueChanged" /> lorsque le type de valeur sous-jacent est modifié extérieurement, comme sur l'aire de conception.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifySubPropertyChanged">
      <MemberSignature Language="C#" Value="protected void NotifySubPropertyChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void NotifySubPropertyChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.NotifySubPropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Sub NotifySubPropertyChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void NotifySubPropertyChanged();" />
      <MemberSignature Language="F#" Value="member this.NotifySubPropertyChanged : unit -&gt; unit" Usage="propertyValue.NotifySubPropertyChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Déclenche l'événement <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyValue.SubPropertyChanged" /> lorsque l'une des sous-propriétés de cette propriété a été modifiée.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="OnPropertyChanged">
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Déclenche l'événement <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyValue.PropertyChanged" /> lorsque la valeur de propriété a été modifiée.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanged : System.ComponentModel.PropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanged : System.ComponentModel.PropertyChangedEventArgs -&gt; unit" Usage="propertyValue.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objet <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> qui fournit le nom de la propriété modifiée.</param>
        <summary>Déclenche l'événement <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyValue.PropertyChanged" /> avec les objets <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> spécifiés.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.OnPropertyChanged(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanged : string -&gt; unit&#xA;override this.OnPropertyChanged : string -&gt; unit" Usage="propertyValue.OnPropertyChanged propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Nom de la propriété qui a été modifiée.</param>
        <summary>Déclenche l'événement <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyValue.PropertyChanged" /> qui utilise le nom de la propriété modifiée.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyValueException">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyValueException (System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyValueException(class System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.OnPropertyValueException(System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyValueException (e As PropertyValueExceptionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyValueException(System::Activities::Presentation::PropertyEditing::PropertyValueExceptionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyValueException : System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs -&gt; unit&#xA;override this.OnPropertyValueException : System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs -&gt; unit" Usage="propertyValue.OnPropertyValueException e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs" /> qui fournit des informations sur l'échec de l'obtention ou de la définition qui s'est produit.</param>
        <summary>Implémentation par défaut qui déclenche l'événement <see cref="E:System.Activities.Presentation.PropertyEditing.PropertyValue.PropertyValueException" /> lorsque les propriétés <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> rencontrent un échec lors de l'obtention ou de la définition des valeurs de la collection de données sous-jacente.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ParentProperty">
      <MemberSignature Language="C#" Value="public System.Activities.Presentation.PropertyEditing.PropertyEntry ParentProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.PropertyEditing.PropertyEntry ParentProperty" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.ParentProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentProperty As PropertyEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::Presentation::PropertyEditing::PropertyEntry ^ ParentProperty { System::Activities::Presentation::PropertyEditing::PropertyEntry ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentProperty : System.Activities.Presentation.PropertyEditing.PropertyEntry" Usage="System.Activities.Presentation.PropertyEditing.PropertyValue.ParentProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.PropertyEditing.PropertyEntry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" /> parent lorsque l'implémentation de propriété se produit dans un environnement hôte.</summary>
        <value>Objet <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" /> qui représente la propriété parente.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.PropertyChangedEventHandler PropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.PropertyEditing.PropertyValue.PropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event PropertyChanged As PropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::ComponentModel::PropertyChangedEventHandler ^ PropertyChanged;" />
      <MemberSignature Language="F#" Value="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " Usage="member this.PropertyChanged : System.ComponentModel.PropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque les propriétés ou les sous-propriétés de l'objet <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> sont modifiées.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyValueException">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs&gt; PropertyValueException;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs&gt; PropertyValueException" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.PropertyEditing.PropertyValue.PropertyValueException" />
      <MemberSignature Language="VB.NET" Value="Public Event PropertyValueException As EventHandler(Of PropertyValueExceptionEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Activities::Presentation::PropertyEditing::PropertyValueExceptionEventArgs ^&gt; ^ PropertyValueException;" />
      <MemberSignature Language="F#" Value="member this.PropertyValueException : EventHandler&lt;System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs&gt; " Usage="member this.PropertyValueException : System.EventHandler&lt;System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Activities.Presentation.PropertyEditing.PropertyValueExceptionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Événement utilisé par les implémentations hôtes pour la gestion des erreurs.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RootValueChanged">
      <MemberSignature Language="C#" Value="public event EventHandler RootValueChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler RootValueChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.PropertyEditing.PropertyValue.RootValueChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event RootValueChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ RootValueChanged;" />
      <MemberSignature Language="F#" Value="member this.RootValueChanged : EventHandler " Usage="member this.RootValueChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque la propriété <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" /> ou <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.StringValue" /> est mise à jour consécutivement à la valeur <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> en cours de modification.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValueCore">
      <MemberSignature Language="C#" Value="protected abstract void SetValueCore (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetValueCore(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.SetValueCore(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub SetValueCore (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void SetValueCore(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member SetValueCore : obj -&gt; unit" Usage="propertyValue.SetValueCore value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Objet à définir dans la collection de données sous-jacente.</param>
        <summary>Lors d'une implémentation dans une classe dérivée, définit la <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.PropertyEditing.PropertyValueSource Source { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.PropertyEditing.PropertyValueSource Source" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Source" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Source As PropertyValueSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::PropertyEditing::PropertyValueSource ^ Source { System::Activities::Presentation::PropertyEditing::PropertyValueSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Source : System.Activities.Presentation.PropertyEditing.PropertyValueSource" Usage="System.Activities.Presentation.PropertyEditing.PropertyValue.Source" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.PropertyEditing.PropertyValueSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Lors d'une implémentation dans une classe dérivée, obtient un objet de <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueSource" /> qui contient des informations à propos de la provenance de cette valeur de propriété.</summary>
        <value>Objet <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValueSource" /> qui contient des informations de source sur les valeurs de propriétés.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringValue">
      <MemberSignature Language="C#" Value="public string StringValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StringValue" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.StringValue" />
      <MemberSignature Language="VB.NET" Value="Public Property StringValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StringValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StringValue : string with get, set" Usage="System.Activities.Presentation.PropertyEditing.PropertyValue.StringValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" /> en tant que <see cref="T:System.String" />.</summary>
        <value>Version <see cref="T:System.String" /> de la <see cref="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubProperties">
      <MemberSignature Language="C#" Value="public abstract System.Activities.Presentation.PropertyEditing.PropertyEntryCollection SubProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.Presentation.PropertyEditing.PropertyEntryCollection SubProperties" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.SubProperties" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property SubProperties As PropertyEntryCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Activities::Presentation::PropertyEditing::PropertyEntryCollection ^ SubProperties { System::Activities::Presentation::PropertyEditing::PropertyEntryCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubProperties : System.Activities.Presentation.PropertyEditing.PropertyEntryCollection" Usage="System.Activities.Presentation.PropertyEditing.PropertyValue.SubProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.Presentation.PropertyEditing.PropertyEntryCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Lors d'une implémentation dans une classe dérivée, obtient une collection de sous-propriétés en tant qu'instances <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntry" />.</summary>
        <value>Objet <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyEntryCollection" /> d'instances.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubPropertyChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SubPropertyChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SubPropertyChanged" />
      <MemberSignature Language="DocId" Value="E:System.Activities.Presentation.PropertyEditing.PropertyValue.SubPropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event SubPropertyChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SubPropertyChanged;" />
      <MemberSignature Language="F#" Value="member this.SubPropertyChanged : EventHandler " Usage="member this.SubPropertyChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque des sous-propriétés sont mises à jour consécutivement au <see cref="T:System.Activities.Presentation.PropertyEditing.PropertyValue" /> en cours de modification.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateValue">
      <MemberSignature Language="C#" Value="protected abstract void ValidateValue (object valueToValidate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ValidateValue(object valueToValidate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.Presentation.PropertyEditing.PropertyValue.ValidateValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub ValidateValue (valueToValidate As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void ValidateValue(System::Object ^ valueToValidate);" />
      <MemberSignature Language="F#" Value="abstract member ValidateValue : obj -&gt; unit" Usage="propertyValue.ValidateValue valueToValidate" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valueToValidate" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="valueToValidate">Objet dont la valeur est vérifiée.</param>
        <summary>Lors d'une implémentation dans une classe dérivée, lève une exception si la vérification de l'objet de valeur spécifié l'indique comme n'étant pas valide.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public object Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Value { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : obj with get, set" Usage="System.Activities.Presentation.PropertyEditing.PropertyValue.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities.Presentation</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur de propriété dans la collection sous-jacente de données de propriété.</summary>
        <value>Objet <see cref="T:System.Object" /> de valeur de propriété.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>