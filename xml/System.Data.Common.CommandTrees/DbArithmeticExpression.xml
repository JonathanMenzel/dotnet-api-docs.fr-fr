<Type Name="DbArithmeticExpression" FullName="System.Data.Common.CommandTrees.DbArithmeticExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b453e6881971ee700e4187ec3ba49547528ec66a" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52218744" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DbArithmeticExpression : System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DbArithmeticExpression extends System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DbArithmeticExpression&#xA;Inherits DbExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbArithmeticExpression sealed : System::Data::Common::CommandTrees::DbExpression" />
  <TypeSignature Language="F#" Value="type DbArithmeticExpression = class&#xA;    inherit DbExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="583de-101">Représente une opération arithmétique appliquée à des arguments numériques.</span>
      <span class="sxs-lookup">
        <span data-stu-id="583de-101">Represents an arithmetic operation applied to numeric arguments.</span>
      </span>
      <span data-ttu-id="583de-102">L'addition, la soustraction, la multiplication, la division, le modulo et la négation sont des opérations arithmétiques.</span>
      <span class="sxs-lookup">
        <span data-stu-id="583de-102">Addition, subtraction, multiplication, division, modulo, and negation are arithmetic operations.</span>
      </span>
      <span data-ttu-id="583de-103">Cette classe ne peut pas être héritée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="583de-103">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="583de-104">L’objet <xref:System.Data.Common.CommandTrees.DbArithmeticExpression> exige que ses arguments aient un type de résultat numérique commun.</span><span class="sxs-lookup"><span data-stu-id="583de-104">The <xref:System.Data.Common.CommandTrees.DbArithmeticExpression> requires that its arguments have a common numeric result type.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class System.Data.Common.CommandTrees.DbExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbArithmeticExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As DbExpressionVisitor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Accept(System::Data::Common::CommandTrees::DbExpressionVisitor ^ visitor);" />
      <MemberSignature Language="F#" Value="override this.Accept : System.Data.Common.CommandTrees.DbExpressionVisitor -&gt; unit" Usage="dbArithmeticExpression.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">
          <span data-ttu-id="583de-105">Instance de <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583de-105">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="583de-106">Implémente le modèle visiteur pour les expressions qui ne produisent pas de valeur de résultat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583de-106">Implements the visitor pattern for expressions that do not produce a result value.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="583de-107">
            <paramref name="visitor" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583de-107">
              <paramref name="visitor" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public override TResultType Accept&lt;TResultType&gt; (System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResultType Accept&lt;TResultType&gt;(class System.Data.Common.CommandTrees.DbExpressionVisitor`1&lt;!!TResultType&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbArithmeticExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResultType) (visitor As DbExpressionVisitor(Of TResultType)) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; override TResultType Accept(System::Data::Common::CommandTrees::DbExpressionVisitor&lt;TResultType&gt; ^ visitor);" />
      <MemberSignature Language="F#" Value="override this.Accept : System.Data.Common.CommandTrees.DbExpressionVisitor&lt;'ResultType&gt; -&gt; 'ResultType" Usage="dbArithmeticExpression.Accept visitor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResultType">
          <span data-ttu-id="583de-108">Type des résultats produits par <paramref name="visitor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583de-108">The type of the result produced by <paramref name="visitor" />.</span>
          </span>
        </typeparam>
        <param name="visitor">
          <span data-ttu-id="583de-109">Instance d'un objet <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> typé qui produit une valeur de résultat d'un type spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583de-109">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="583de-110">Implémente le modèle visiteur pour les expressions qui produisent une valeur de résultat d’un type spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583de-110">Implements the visitor pattern for expressions that produce a result value of a specific type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="583de-111">Valeur de résultat d'un type spécifique produite par <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583de-111">A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="583de-112">
            <paramref name="visitor" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583de-112">
              <paramref name="visitor" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt; Arguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Data.Common.CommandTrees.DbExpression&gt; Arguments" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbArithmeticExpression.Arguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Arguments As IList(Of DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ Arguments { System::Collections::Generic::IList&lt;System::Data::Common::CommandTrees::DbExpression ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Arguments : System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt;" Usage="System.Data.Common.CommandTrees.DbArithmeticExpression.Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Data.Common.CommandTrees.DbExpression&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="583de-113">Obtient la liste des éléments <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> qui définissent les arguments actuels.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583de-113">Gets the list of <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> elements that define the current arguments.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="583de-114">Liste de taille fixe d'éléments <see cref="T:System.Data.Common.CommandTrees.DbExpression" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="583de-114">A fixed-size list of <see cref="T:System.Data.Common.CommandTrees.DbExpression" /> elements.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="583de-115">L’objet <xref:System.Data.Common.CommandTrees.DbArithmeticExpression> exige que tous les éléments de la liste d’arguments aient un type de résultat numérique commun.</span><span class="sxs-lookup"><span data-stu-id="583de-115">The <xref:System.Data.Common.CommandTrees.DbArithmeticExpression> requires that all the elements in the arguments list have a common numeric result type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>