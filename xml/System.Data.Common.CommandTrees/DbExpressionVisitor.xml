<Type Name="DbExpressionVisitor" FullName="System.Data.Common.CommandTrees.DbExpressionVisitor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="0d3d5849a0936b3d3d0ecd857102f6123a1b8468" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39843968" /></Metadata><TypeSignature Language="C#" Value="public abstract class DbExpressionVisitor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DbExpressionVisitor extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DbExpressionVisitor" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbExpressionVisitor abstract" />
  <TypeSignature Language="F#" Value="type DbExpressionVisitor = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="40eb1-101">Définit la fonctionnalité de base qui doit être implémentée par les visiteurs qui ne retournent pas de valeur de résultat.</span><span class="sxs-lookup"><span data-stu-id="40eb1-101">Defines the basic functionality that should be implemented by visitors that do not return a result value.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DbExpressionVisitor ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DbExpressionVisitor();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="40eb1-102">Initialise une nouvelle instance de la classe <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-102">Initializes a new instance of the <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Visit">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="40eb1-103">Implémente le modèle visiteur pour les expressions.</span><span class="sxs-lookup"><span data-stu-id="40eb1-103">Implements the visitor pattern for expressions.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbAndExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbAndExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbAndExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbAndExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbAndExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbAndExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbAndExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-104">Objet <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-104">The <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-105">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-105">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbAndExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbApplyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbApplyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbApplyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbApplyExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbApplyExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbApplyExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbApplyExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-106">Objet <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-106">The <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-107">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-107">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbApplyExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbArithmeticExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbArithmeticExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbArithmeticExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbArithmeticExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbArithmeticExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbArithmeticExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbArithmeticExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-108">Objet <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-108">The <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-109">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-109">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbArithmeticExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbCaseExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbCaseExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCaseExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbCaseExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbCaseExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbCaseExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbCaseExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-110">Objet <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-110">The <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-111">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-111">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbCaseExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbCastExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbCastExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCastExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbCastExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbCastExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbCastExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbCastExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-112">Objet <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-112">The <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-113">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-113">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbCastExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbComparisonExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbComparisonExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbComparisonExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbComparisonExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbComparisonExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbComparisonExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbComparisonExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-114">Objet <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-114">The <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-115">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-115">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbComparisonExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbConstantExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbConstantExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbConstantExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbConstantExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbConstantExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbConstantExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbConstantExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-116">Objet <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-116">The <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-117">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-117">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbConstantExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbCrossJoinExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbCrossJoinExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbCrossJoinExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbCrossJoinExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbCrossJoinExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbCrossJoinExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbCrossJoinExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-118">Objet <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-118">The <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-119">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-119">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbCrossJoinExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbDerefExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbDerefExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDerefExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbDerefExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbDerefExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbDerefExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbDerefExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-120">Objet <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-120">The <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-121">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-121">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbDerefExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbDistinctExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbDistinctExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbDistinctExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbDistinctExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbDistinctExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbDistinctExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbDistinctExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-122">Objet <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-122">The <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-123">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-123">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbDistinctExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbElementExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbElementExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbElementExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbElementExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbElementExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbElementExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbElementExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-124">Objet <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-124">The <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-125">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-125">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbElementExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbEntityRefExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbEntityRefExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbEntityRefExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbEntityRefExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbEntityRefExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbEntityRefExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbEntityRefExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-126">Objet <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-126">The <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-127">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-127">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbEntityRefExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbExceptExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbExceptExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExceptExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbExceptExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbExceptExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbExceptExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbExceptExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-128">Objet <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-128">The <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-129">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-129">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbExceptExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-130">Expression à gérer.</span><span class="sxs-lookup"><span data-stu-id="40eb1-130">The expression to be handled.</span></span></param>
        <summary><span data-ttu-id="40eb1-131">En cas de substitution dans une classe dérivée, gère toute expression d'un type non reconnu.</span><span class="sxs-lookup"><span data-stu-id="40eb1-131">When overridden in a derived class, handles any expression of an unrecognized type.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40eb1-132">Appelée lorsqu'une expression d'un type non reconnu est rencontrée.</span><span class="sxs-lookup"><span data-stu-id="40eb1-132">Called when an expression of an otherwise unrecognized type is encountered.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbFilterExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbFilterExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFilterExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbFilterExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbFilterExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbFilterExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbFilterExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-133">Objet <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-133">The <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-134">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-134">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbFilterExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbFunctionExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbFunctionExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbFunctionExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbFunctionExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbFunctionExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbFunctionExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbFunctionExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-135">Objet <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-135">The <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-136">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-136">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbFunctionExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbGroupByExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbGroupByExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbGroupByExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbGroupByExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbGroupByExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbGroupByExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbGroupByExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-137">Objet <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-137">The <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-138">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-138">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbGroupByExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbIntersectExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbIntersectExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIntersectExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbIntersectExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbIntersectExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbIntersectExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIntersectExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-139">Objet <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-139">The <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-140">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-140">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbIntersectExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbIsEmptyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbIsEmptyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsEmptyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbIsEmptyExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbIsEmptyExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbIsEmptyExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIsEmptyExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-141">Objet <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-141">The <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-142">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-142">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbIsEmptyExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbIsNullExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbIsNullExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsNullExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbIsNullExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbIsNullExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbIsNullExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIsNullExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-143">Objet <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-143">The <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-144">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-144">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbIsNullExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbIsOfExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbIsOfExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbIsOfExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbIsOfExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbIsOfExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbIsOfExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbIsOfExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-145">Objet <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-145">The <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-146">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-146">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbIsOfExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbJoinExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbJoinExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbJoinExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbJoinExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbJoinExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbJoinExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbJoinExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-147">Objet <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-147">The <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-148">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-148">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbJoinExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public virtual void Visit (System.Data.Common.CommandTrees.DbLambdaExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbLambdaExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLambdaExpression)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Visit (expression As DbLambdaExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Visit(System::Data::Common::CommandTrees::DbLambdaExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbLambdaExpression -&gt; unit&#xA;override this.Visit : System.Data.Common.CommandTrees.DbLambdaExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbLambdaExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-149">Objet <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-149">The <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-150">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-150">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbLambdaExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbLikeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbLikeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLikeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbLikeExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbLikeExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbLikeExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbLikeExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-151">Objet <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-151">The <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-152">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-152">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbLikeExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbLimitExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbLimitExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbLimitExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbLimitExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbLimitExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbLimitExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbLimitExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-153">Objet <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-153">The <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-154">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-154">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbLimitExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbNewInstanceExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbNewInstanceExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNewInstanceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbNewInstanceExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbNewInstanceExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbNewInstanceExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbNewInstanceExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-155">Objet <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-155">The <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-156">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-156">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbNewInstanceExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbNotExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbNotExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNotExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbNotExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbNotExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbNotExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbNotExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-157">Objet <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-157">The <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-158">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-158">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbNotExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbNullExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbNullExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbNullExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbNullExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbNullExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbNullExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbNullExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-159">Objet <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-159">The <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-160">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-160">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbNullExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbOfTypeExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbOfTypeExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOfTypeExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbOfTypeExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbOfTypeExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbOfTypeExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbOfTypeExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-161">Objet <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-161">The <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-162">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-162">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbOfTypeExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbOrExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbOrExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbOrExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbOrExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbOrExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbOrExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbOrExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-163">Objet <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-163">The <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-164">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-164">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbOrExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbParameterReferenceExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbParameterReferenceExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbParameterReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbParameterReferenceExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbParameterReferenceExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbParameterReferenceExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbParameterReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-165">Objet <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-165">The <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-166">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-166">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbParameterReferenceExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbProjectExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbProjectExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbProjectExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbProjectExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbProjectExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbProjectExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbProjectExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-167">Objet <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-167">The <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-168">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-168">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbProjectExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbPropertyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbPropertyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbPropertyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbPropertyExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbPropertyExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbPropertyExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbPropertyExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-169">Objet <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-169">The <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-170">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-170">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbPropertyExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbQuantifierExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbQuantifierExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbQuantifierExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbQuantifierExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbQuantifierExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbQuantifierExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbQuantifierExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-171">Objet <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-171">The <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-172">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-172">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbRefExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbRefExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbRefExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbRefExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbRefExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbRefExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-173">Objet <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-173">The <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-174">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-174">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbRefExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbRefKeyExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbRefKeyExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRefKeyExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbRefKeyExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbRefKeyExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbRefKeyExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbRefKeyExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-175">Objet <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-175">The <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-176">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-176">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbRefKeyExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbRelationshipNavigationExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbRelationshipNavigationExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbRelationshipNavigationExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbRelationshipNavigationExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbRelationshipNavigationExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbRelationshipNavigationExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-177">Objet <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-177">The <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-178">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-178">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbRelationshipNavigationExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbScanExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbScanExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbScanExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbScanExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbScanExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbScanExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbScanExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-179">Objet <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-179">The <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-180">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-180">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbScanExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbSkipExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbSkipExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSkipExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbSkipExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbSkipExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbSkipExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbSkipExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-181">Objet <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-181">The <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-182">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-182">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbSkipExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbSortExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbSortExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbSortExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbSortExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbSortExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbSortExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbSortExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-183">Objet <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-183">The <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-184">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-184">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbSortExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbTreatExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbTreatExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbTreatExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbTreatExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbTreatExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbTreatExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbTreatExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-185">Objet <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-185">The <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-186">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-186">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbTreatExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbUnionAllExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbUnionAllExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbUnionAllExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbUnionAllExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbUnionAllExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbUnionAllExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbUnionAllExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-187">Objet <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-187">The <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-188">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-188">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbUnionAllExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Visit">
      <MemberSignature Language="C#" Value="public abstract void Visit (System.Data.Common.CommandTrees.DbVariableReferenceExpression expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Visit(class System.Data.Common.CommandTrees.DbVariableReferenceExpression expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbExpressionVisitor.Visit(System.Data.Common.CommandTrees.DbVariableReferenceExpression)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Visit (expression As DbVariableReferenceExpression)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Visit(System::Data::Common::CommandTrees::DbVariableReferenceExpression ^ expression);" />
      <MemberSignature Language="F#" Value="abstract member Visit : System.Data.Common.CommandTrees.DbVariableReferenceExpression -&gt; unit" Usage="dbExpressionVisitor.Visit expression" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.Data.Common.CommandTrees.DbVariableReferenceExpression" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="40eb1-189">Objet <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> visité.</span><span class="sxs-lookup"><span data-stu-id="40eb1-189">The <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" /> that is visited.</span></span></param>
        <summary><span data-ttu-id="40eb1-190">En cas de substitution dans une classe dérivée, implémente le modèle visiteur pour <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />.</span><span class="sxs-lookup"><span data-stu-id="40eb1-190">When overridden in a derived class, implements the visitor pattern for <see cref="T:System.Data.Common.CommandTrees.DbVariableReferenceExpression" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>