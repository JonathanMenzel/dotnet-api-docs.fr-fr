<Type Name="DbQuantifierExpression" FullName="System.Data.Common.CommandTrees.DbQuantifierExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3814866c71622d2867069bc07849ab80840a705c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DbQuantifierExpression : System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DbQuantifierExpression extends System.Data.Common.CommandTrees.DbExpression" />
  <TypeSignature Language="DocId" Value="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DbQuantifierExpression&#xA;Inherits DbExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class DbQuantifierExpression sealed : System::Data::Common::CommandTrees::DbExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Common.CommandTrees.DbExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="acfc3-101">Représente une opération de quantification du type indiqué sur les éléments du jeu de données d'entrée spécifié.</span>
      <span class="sxs-lookup">
        <span data-stu-id="acfc3-101">Represents a quantifier operation of the specified kind over the elements of the specified input set.</span>
      </span>
      <span data-ttu-id="acfc3-102">Cette classe ne peut pas être héritée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="acfc3-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="acfc3-103">Cette classe représente `Any` et `All` quantificateurs.</span><span class="sxs-lookup"><span data-stu-id="acfc3-103">This class represents `Any` and `All` quantifiers.</span></span> <span data-ttu-id="acfc3-104">`Any` et `All` sont encodés dans le <xref:System.Data.Common.CommandTrees.DbExpressionKind>.</span><span class="sxs-lookup"><span data-stu-id="acfc3-104">`Any` and `All` are encoded in the <xref:System.Data.Common.CommandTrees.DbExpressionKind>.</span></span> <span data-ttu-id="acfc3-105">Le type de résultat d’une expression de quantificateur est toujours un `Boolean`.</span><span class="sxs-lookup"><span data-stu-id="acfc3-105">The result type of a quantifier expression is always a `Boolean`.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Accept">
      <MemberSignature Language="C#" Value="public override void Accept (System.Data.Common.CommandTrees.DbExpressionVisitor visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Accept(class System.Data.Common.CommandTrees.DbExpressionVisitor visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbQuantifierExpression.Accept(System.Data.Common.CommandTrees.DbExpressionVisitor)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Accept (visitor As DbExpressionVisitor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Accept(System::Data::Common::CommandTrees::DbExpressionVisitor ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor" />
      </Parameters>
      <Docs>
        <param name="visitor">
          <span data-ttu-id="acfc3-106">Instance de <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfc3-106">An instance of <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acfc3-107">Implémente le modèle visiteur pour les expressions qui ne produisent pas de valeur de résultat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfc3-107">Implements the visitor pattern for expressions that do not produce a result value.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="acfc3-108">
            <paramref name="visitor" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfc3-108">
              <paramref name="visitor" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Accept&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public override TResultType Accept&lt;TResultType&gt; (System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt; visitor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!TResultType Accept&lt;TResultType&gt;(class System.Data.Common.CommandTrees.DbExpressionVisitor`1&lt;!!TResultType&gt; visitor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Common.CommandTrees.DbQuantifierExpression.Accept``1(System.Data.Common.CommandTrees.DbExpressionVisitor{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Accept(Of TResultType) (visitor As DbExpressionVisitor(Of TResultType)) As TResultType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; override TResultType Accept(System::Data::Common::CommandTrees::DbExpressionVisitor&lt;TResultType&gt; ^ visitor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TResultType</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="visitor" Type="System.Data.Common.CommandTrees.DbExpressionVisitor&lt;TResultType&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TResultType">
          <span data-ttu-id="acfc3-109">Le type du résultat produit par <c>visiteur</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfc3-109">The type of the result produced by <c>visitor</c>.</span>
          </span>
        </typeparam>
        <param name="visitor">
          <span data-ttu-id="acfc3-110">Instance d'un objet <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> typé qui produit une valeur de résultat d'un type spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfc3-110">An instance of a typed <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" /> that produces a result value of a specific type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="acfc3-111">Implémente le modèle visiteur pour les expressions qui produisent une valeur de résultat d’un type spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfc3-111">Implements the visitor pattern for expressions that produce a result value of a specific type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="acfc3-112">Valeur de résultat d'un type spécifique produite par <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfc3-112">A result value of a specific type produced by <see cref="T:System.Data.Common.CommandTrees.DbExpressionVisitor" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="acfc3-113">
            <paramref name="visitor" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfc3-113">
              <paramref name="visitor" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Input">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpressionBinding Input { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpressionBinding Input" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbQuantifierExpression.Input" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Input As DbExpressionBinding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpressionBinding ^ Input { System::Data::Common::CommandTrees::DbExpressionBinding ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpressionBinding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acfc3-114">Obtient l'objet <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> qui spécifie le jeu de données d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfc3-114">Gets the <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acfc3-115">Objet <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> qui spécifie le jeu de données d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfc3-115">The <see cref="T:System.Data.Common.CommandTrees.DbExpressionBinding" /> that specifies the input set.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Predicate">
      <MemberSignature Language="C#" Value="public System.Data.Common.CommandTrees.DbExpression Predicate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.CommandTrees.DbExpression Predicate" />
      <MemberSignature Language="DocId" Value="P:System.Data.Common.CommandTrees.DbQuantifierExpression.Predicate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Predicate As DbExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::CommandTrees::DbExpression ^ Predicate { System::Data::Common::CommandTrees::DbExpression ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.CommandTrees.DbExpression</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="acfc3-116">Obtient ou définit le prédicat <see langword="Boolean" /> qui doit être évalué pour chaque élément du jeu de données d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfc3-116">Gets or sets the <see langword="Boolean" /> predicate that should be evaluated for each element in the input set.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="acfc3-117">Prédicat <see langword="Boolean" /> qui doit être évalué pour chaque élément du jeu de données d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfc3-117">The <see langword="Boolean" /> predicate that should be evaluated for each element in the input set.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="acfc3-118">L’expression est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfc3-118">The expression is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="acfc3-119">L'expression n'est pas associée à l'arborescence de commandes de l'objet <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />,</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfc3-119">The expression is not associated with the command tree for the <see cref="T:System.Data.Common.CommandTrees.DbQuantifierExpression" />,</span>
          </span>
          <span data-ttu-id="acfc3-120">ou son résultat n'est pas de type <see langword="Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="acfc3-120">or its result type is not a <see langword="Boolean" /> type.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>