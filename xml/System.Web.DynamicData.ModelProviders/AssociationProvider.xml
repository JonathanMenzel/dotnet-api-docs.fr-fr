<Type Name="AssociationProvider" FullName="System.Web.DynamicData.ModelProviders.AssociationProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8b8808bc2388d974dd20bd41fb06315627d1af2d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36402268" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class AssociationProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AssociationProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.DynamicData.ModelProviders.AssociationProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AssociationProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssociationProvider abstract" />
  <TypeSignature Language="F#" Value="type AssociationProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.DynamicData</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e0ec1-101">Fournit la classe de base pour les fournisseurs d'associations de colonnes.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e0ec1-101">Provides the base class for column-association providers.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0ec1-102">Fournisseurs d’associations doivent étendre cette classe.</span><span class="sxs-lookup"><span data-stu-id="e0ec1-102">Association providers must extend this class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AssociationProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ModelProviders.AssociationProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AssociationProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e0ec1-103">Initialise une nouvelle instance de la classe <see cref="T:System.Web.DynamicData.ModelProviders.AssociationProvider" /> pour qu'elle soit utilisée par une instance de classe héritée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0ec1-103">Initializes a new instance of the <see cref="T:System.Web.DynamicData.ModelProviders.AssociationProvider" /> class for use by an inherited class instance.</span>
          </span>
          <span data-ttu-id="e0ec1-104">Ce constructeur peut être appelé uniquement par une classe héritée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0ec1-104">This constructor can only be called by an inherited class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.ModelProviders.AssociationDirection Direction { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.DynamicData.ModelProviders.AssociationDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.ModelProviders.AssociationProvider.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Direction As AssociationDirection" />
      <MemberSignature Language="C++ CLI" Value="public:  virtual property System::Web::DynamicData::ModelProviders::AssociationDirection Direction {  public:&#xA;System::Web::DynamicData::ModelProviders::AssociationDirection get(); protected:&#xA; void set(System::Web::DynamicData::ModelProviders::AssociationDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Web.DynamicData.ModelProviders.AssociationDirection with get, set" Usage="System.Web.DynamicData.ModelProviders.AssociationProvider.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.ModelProviders.AssociationDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0ec1-105">Obtient ou définit le type de l'association.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0ec1-105">Gets or sets the type of the association.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0ec1-106">Type de l'association.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0ec1-106">The type of the association.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0ec1-107">Les associations incluent un à un, un-à-plusieurs et plusieurs-à-plusieurs.</span><span class="sxs-lookup"><span data-stu-id="e0ec1-107">Associations include one-to-one, one-to-many, and many-to-many.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeignKeyNames">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; ForeignKeyNames { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; ForeignKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.ModelProviders.AssociationProvider.ForeignKeyNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ForeignKeyNames As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:  virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ ForeignKeyNames {  public:&#xA;System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); protected:&#xA; void set(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ForeignKeyNames : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; with get, set" Usage="System.Web.DynamicData.ModelProviders.AssociationProvider.ForeignKeyNames" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0ec1-108">Obtient ou définit les noms des clés étrangères qui composent cette association.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0ec1-108">Gets or sets the names of the foreign keys that make up this association.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0ec1-109">Noms des clés étrangères qui composent cette association.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0ec1-109">The names of the foreign keys that make up this association.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromColumn">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.ModelProviders.ColumnProvider FromColumn { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.ModelProviders.ColumnProvider FromColumn" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.ModelProviders.AssociationProvider.FromColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FromColumn As ColumnProvider" />
      <MemberSignature Language="C++ CLI" Value="public:  virtual property System::Web::DynamicData::ModelProviders::ColumnProvider ^ FromColumn {  public:&#xA;System::Web::DynamicData::ModelProviders::ColumnProvider ^ get(); protected:&#xA; void set(System::Web::DynamicData::ModelProviders::ColumnProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FromColumn : System.Web.DynamicData.ModelProviders.ColumnProvider with get, set" Usage="System.Web.DynamicData.ModelProviders.AssociationProvider.FromColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.ModelProviders.ColumnProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0ec1-110">Obtient ou définit la colonne source de l'association.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0ec1-110">Gets or sets the source column of the association.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0ec1-111">Colonne source de l'association.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0ec1-111">The source column of the association.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSortExpression">
      <MemberSignature Language="C#" Value="public virtual string GetSortExpression (System.Web.DynamicData.ModelProviders.ColumnProvider sortColumn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetSortExpression(class System.Web.DynamicData.ModelProviders.ColumnProvider sortColumn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.DynamicData.ModelProviders.AssociationProvider.GetSortExpression(System.Web.DynamicData.ModelProviders.ColumnProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSortExpression (sortColumn As ColumnProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetSortExpression(System::Web::DynamicData::ModelProviders::ColumnProvider ^ sortColumn);" />
      <MemberSignature Language="F#" Value="abstract member GetSortExpression : System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; string&#xA;override this.GetSortExpression : System.Web.DynamicData.ModelProviders.ColumnProvider -&gt; string" Usage="associationProvider.GetSortExpression sortColumn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortColumn" Type="System.Web.DynamicData.ModelProviders.ColumnProvider" />
      </Parameters>
      <Docs>
        <param name="sortColumn">
          <span data-ttu-id="e0ec1-112">Colonne par laquelle trier l'entité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0ec1-112">The column to sort the entity by.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0ec1-113">Retourne l'expression de tri pour la colonne représentée par l'association.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0ec1-113">Returns the sort expression for the column that is represented by the association.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e0ec1-114">Si <see cref="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsSortable" /> retourne la valeur <see langword="true" />, il s'agit de l'expression de tri pour la colonne représentée par l'association ; sinon, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0ec1-114">If <see cref="P:System.Web.DynamicData.ModelProviders.ColumnProvider.IsSortable" /> returns <see langword="true" />, the sort expression for the column that is represented by the association; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPrimaryKeyInThisTable">
      <MemberSignature Language="C#" Value="public virtual bool IsPrimaryKeyInThisTable { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPrimaryKeyInThisTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.ModelProviders.AssociationProvider.IsPrimaryKeyInThisTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsPrimaryKeyInThisTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  virtual property bool IsPrimaryKeyInThisTable {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPrimaryKeyInThisTable : bool with get, set" Usage="System.Web.DynamicData.ModelProviders.AssociationProvider.IsPrimaryKeyInThisTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0ec1-115">Obtient ou définit une valeur qui indique si la partie de colonne From de la clé primaire est dans la table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0ec1-115">Gets or sets a value that indicates whether the From column part of the primary key is in the table.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0ec1-116">
            <see langword="true" /> si la partie de colonne From de la clé primaire est dans la table ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0ec1-116">
              <see langword="true" /> if the From column part of the primary key is in the table; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToColumn">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.ModelProviders.ColumnProvider ToColumn { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.ModelProviders.ColumnProvider ToColumn" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.ModelProviders.AssociationProvider.ToColumn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ToColumn As ColumnProvider" />
      <MemberSignature Language="C++ CLI" Value="public:  virtual property System::Web::DynamicData::ModelProviders::ColumnProvider ^ ToColumn {  public:&#xA;System::Web::DynamicData::ModelProviders::ColumnProvider ^ get(); protected:&#xA; void set(System::Web::DynamicData::ModelProviders::ColumnProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToColumn : System.Web.DynamicData.ModelProviders.ColumnProvider with get, set" Usage="System.Web.DynamicData.ModelProviders.AssociationProvider.ToColumn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.ModelProviders.ColumnProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0ec1-117">Obtient ou définit la colonne de destination de l'association.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0ec1-117">Gets or sets the destination column of the association.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0ec1-118">Colonne de destination de l'association.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0ec1-118">The destination column of the association.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0ec1-119">Cette propriété est facultative et est généralement requise uniquement pour les relations un-à-plusieurs et un à un</span><span class="sxs-lookup"><span data-stu-id="e0ec1-119">This property is optional and is generally required only for one-to-many and one-to-one relationships</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToTable">
      <MemberSignature Language="C#" Value="public virtual System.Web.DynamicData.ModelProviders.TableProvider ToTable { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.DynamicData.ModelProviders.TableProvider ToTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.DynamicData.ModelProviders.AssociationProvider.ToTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ToTable As TableProvider" />
      <MemberSignature Language="C++ CLI" Value="public:  virtual property System::Web::DynamicData::ModelProviders::TableProvider ^ ToTable {  public:&#xA;System::Web::DynamicData::ModelProviders::TableProvider ^ get(); protected:&#xA; void set(System::Web::DynamicData::ModelProviders::TableProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToTable : System.Web.DynamicData.ModelProviders.TableProvider with get, set" Usage="System.Web.DynamicData.ModelProviders.AssociationProvider.ToTable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.DynamicData</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.DynamicData.ModelProviders.TableProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0ec1-120">Obtient la table de destination de l'association.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0ec1-120">Gets the destination table of the association.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0ec1-121">Table de destination de l'association.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0ec1-121">The destination table of the association.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>