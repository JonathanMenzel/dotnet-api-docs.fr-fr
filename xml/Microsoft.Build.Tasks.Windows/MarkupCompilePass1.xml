<Type Name="MarkupCompilePass1" FullName="Microsoft.Build.Tasks.Windows.MarkupCompilePass1">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="13dadfc574128c74b38f259e542b611ac1637583" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37722815" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class MarkupCompilePass1 : Microsoft.Build.Utilities.Task" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit MarkupCompilePass1 extends Microsoft.Build.Utilities.Task" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Tasks.Windows.MarkupCompilePass1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class MarkupCompilePass1&#xA;Inherits Task" />
  <TypeSignature Language="C++ CLI" Value="public ref class MarkupCompilePass1 sealed : Microsoft::Build::Utilities::Task" />
  <TypeSignature Language="F#" Value="type MarkupCompilePass1 = class&#xA;    inherit Task" />
  <AssemblyInfo>
    <AssemblyName>PresentationBuildTasks</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Utilities.Task</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Implements the <c>MarkupCompilePass1</c> task. Use the <c>MarkupCompilePass1</c> element in your project file to create and execute this task. For usage and parameter information, see [MarkupCompilePass1](http://msdn.microsoft.com/library/693d6945-fd6f-4698-8f64-9dfcb71052d3).</summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MarkupCompilePass1 ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MarkupCompilePass1();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:Microsoft.Build.Tasks.Windows.MarkupCompilePass1" /> class.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AllGeneratedFiles">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] AllGeneratedFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] AllGeneratedFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AllGeneratedFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property AllGeneratedFiles As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ AllGeneratedFiles { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AllGeneratedFiles : Microsoft.Build.Framework.ITaskItem[] with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AllGeneratedFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Output</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a list of files that are generated by the markup compiler.</summary>
        <value>Une liste de fichiers qui sont générés par le compilateur de balisage.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AlwaysCompileMarkupFilesInSeparateDomain">
      <MemberSignature Language="C#" Value="public bool AlwaysCompileMarkupFilesInSeparateDomain { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AlwaysCompileMarkupFilesInSeparateDomain" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AlwaysCompileMarkupFilesInSeparateDomain" />
      <MemberSignature Language="VB.NET" Value="Public Property AlwaysCompileMarkupFilesInSeparateDomain As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AlwaysCompileMarkupFilesInSeparateDomain { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AlwaysCompileMarkupFilesInSeparateDomain : bool with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AlwaysCompileMarkupFilesInSeparateDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether to run the compilation in second application domain.</summary>
        <value>
          <see langword="true" /> Pour exécuter la compilation dans le deuxième domaine d’application ; Sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si cette propriété `false` entraîne la compilation plus rapide.  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ApplicationMarkup">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] ApplicationMarkup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] ApplicationMarkup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ApplicationMarkup" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationMarkup As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ ApplicationMarkup { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationMarkup : Microsoft.Build.Framework.ITaskItem[] with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ApplicationMarkup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the application definition [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file.</summary>
        <value>Le nom de la définition d’application [ ! Fichier de include[TLA2#tla_xaml](~/Includes/tla2sharptla-XAML-MD.MD)].</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AssembliesGeneratedDuringBuild">
      <MemberSignature Language="C#" Value="public string[] AssembliesGeneratedDuringBuild { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] AssembliesGeneratedDuringBuild" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssembliesGeneratedDuringBuild" />
      <MemberSignature Language="VB.NET" Value="Public Property AssembliesGeneratedDuringBuild As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ AssembliesGeneratedDuringBuild { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AssembliesGeneratedDuringBuild : string[] with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssembliesGeneratedDuringBuild" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a list of reference assemblies that change during the build cycle.</summary>
        <value>La liste des assemblys de référence qui changent pendant le cycle de génération.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AssemblyName">
      <MemberSignature Language="C#" Value="public string AssemblyName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyName" />
      <MemberSignature Language="VB.NET" Value="Public Property AssemblyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssemblyName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyName : string with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Required</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the short name of assembly that will be generated for this project.</summary>
        <value>Le nom court de l’assembly qui sera généré pour ce projet.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AssemblyPublicKeyToken">
      <MemberSignature Language="C#" Value="public string AssemblyPublicKeyToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyPublicKeyToken" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyPublicKeyToken" />
      <MemberSignature Language="VB.NET" Value="Public Property AssemblyPublicKeyToken As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssemblyPublicKeyToken { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyPublicKeyToken : string with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyPublicKeyToken" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the public key token of the assembly.</summary>
        <value>Le jeton de clé publique de l’assembly.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="AssemblyVersion">
      <MemberSignature Language="C#" Value="public string AssemblyVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssemblyVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property AssemblyVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssemblyVersion { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AssemblyVersion : string with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.AssemblyVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the version of the assembly.</summary>
        <value>Version de l'assembly.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ContentFiles">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] ContentFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] ContentFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ContentFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentFiles As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ ContentFiles { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContentFiles : Microsoft.Build.Framework.ITaskItem[] with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ContentFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a list of loose content files.</summary>
        <value>Liste des fichiers de contenu libre.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="DefineConstants">
      <MemberSignature Language="C#" Value="public string DefineConstants { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefineConstants" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.DefineConstants" />
      <MemberSignature Language="VB.NET" Value="Public Property DefineConstants As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefineConstants { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefineConstants : string with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.DefineConstants" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies whether the current value of **DefineConstants** is kept.</summary>
        <value>Spécifie si la valeur actuelle de ** DefineConstants ** est conservée, ce qui affecte la génération de l’assembly cible ; Si ce paramètre est modifié, l’API publique dans l’assembly cible peut être modifiée et la compilation de [ ! Fichiers Include[TLA2#tla_titlexaml](~/Includes/tla2sharptla-titlexaml-MD.MD)] qui référencent des types locaux peuvent être affectées.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public override bool Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Execute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Execute();" />
      <MemberSignature Language="F#" Value="override this.Execute : unit -&gt; bool" Usage="markupCompilePass1.Execute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Executes a task.</summary>
        <returns>
          <see langword="true" /> if the task executed successfully; otherwise, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExtraBuildControlFiles">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] ExtraBuildControlFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] ExtraBuildControlFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ExtraBuildControlFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property ExtraBuildControlFiles As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ ExtraBuildControlFiles { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExtraBuildControlFiles : Microsoft.Build.Framework.ITaskItem[] with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.ExtraBuildControlFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a list of files that control whether a rebuild is triggered when the <see cref="T:Microsoft.Build.Tasks.Windows.MarkupCompilePass1" /> task reruns; a rebuild is triggered if one of these files changes.</summary>
        <value>Une liste de fichiers qui contrôlent si une régénération est déclenchée lorsque le <see cref="T:Microsoft.Build.Tasks.Windows.MarkupCompilePass1" /> tâche est réexécutée ; une régénération est déclenchée si un de ces fichiers change.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GeneratedBamlFiles">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] GeneratedBamlFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] GeneratedBamlFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedBamlFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property GeneratedBamlFiles As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ GeneratedBamlFiles { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GeneratedBamlFiles : Microsoft.Build.Framework.ITaskItem[] with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedBamlFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Output</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the generated [!INCLUDE[TLA#tla_baml](~/includes/tlasharptla-baml-md.md)] files.</summary>
        <value>Le texte généré [ ! Fichiers de include[TLA#tla_baml](~/Includes/tlasharptla-BAML-MD.MD)].</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GeneratedCodeFiles">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] GeneratedCodeFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] GeneratedCodeFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedCodeFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property GeneratedCodeFiles As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ GeneratedCodeFiles { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GeneratedCodeFiles : Microsoft.Build.Framework.ITaskItem[] with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedCodeFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Output</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the list of generated managed code files.</summary>
        <value>La liste des fichiers de code managé générés.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GeneratedLocalizationFiles">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] GeneratedLocalizationFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] GeneratedLocalizationFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedLocalizationFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property GeneratedLocalizationFiles As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ GeneratedLocalizationFiles { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GeneratedLocalizationFiles : Microsoft.Build.Framework.ITaskItem[] with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.GeneratedLocalizationFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Output</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the generated localization file for each localizable [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] file.</summary>
        <value>Le fichier de localisation généré pour chaque localisables [ ! Fichier de include[TLA2#tla_xaml](~/Includes/tla2sharptla-XAML-MD.MD)].</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="HostInBrowser">
      <MemberSignature Language="C#" Value="public string HostInBrowser { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HostInBrowser" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.HostInBrowser" />
      <MemberSignature Language="VB.NET" Value="Public Property HostInBrowser As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HostInBrowser { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HostInBrowser : string with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.HostInBrowser" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the generated assembly is a [!INCLUDE[TLA#tla_xbap](~/includes/tlasharptla-xbap-md.md)].</summary>
        <value>
          <see langword="true" /> Si l’assembly généré est un [ ! Include[TLA#tla_xbap](~/Includes/tlasharptla-XBAP-MD.MD)] ; Sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="IsRunningInVisualStudio">
      <MemberSignature Language="C#" Value="public bool IsRunningInVisualStudio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRunningInVisualStudio" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.IsRunningInVisualStudio" />
      <MemberSignature Language="VB.NET" Value="Public Property IsRunningInVisualStudio As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRunningInVisualStudio { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsRunningInVisualStudio : bool with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.IsRunningInVisualStudio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the task is running in Visual Studio.</summary>
        <value>
          <see langword="true" /> Si la tâche s’exécute dans Visual Studio. Sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="KnownReferencePaths">
      <MemberSignature Language="C#" Value="public string[] KnownReferencePaths { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] KnownReferencePaths" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.KnownReferencePaths" />
      <MemberSignature Language="VB.NET" Value="Public Property KnownReferencePaths As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ KnownReferencePaths { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KnownReferencePaths : string[] with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.KnownReferencePaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the paths of referenced assemblies that do not change during the build procedure.</summary>
        <value>Les chemins d’accès des assemblys référencés qui ne changent pas pendant la procédure de génération.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public string Language { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Language" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.Language" />
      <MemberSignature Language="VB.NET" Value="Public Property Language As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Language { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Language : string with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Required</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the managed language that the compiler supports.</summary>
        <value>Le langage managé par le compilateur prend en charge. Les valeurs valides sont ** c# **, ** VB ** et ** C++ **.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LanguageSourceExtension">
      <MemberSignature Language="C#" Value="public string LanguageSourceExtension { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LanguageSourceExtension" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.LanguageSourceExtension" />
      <MemberSignature Language="VB.NET" Value="Public Property LanguageSourceExtension As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LanguageSourceExtension { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LanguageSourceExtension : string with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.LanguageSourceExtension" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the extension that is appended to the extension of the generated managed code file.</summary>
        <value>L’extension est ajoutée à l’extension généré fichier de code managé.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="LocalizationDirectivesToLocFile">
      <MemberSignature Language="C#" Value="public string LocalizationDirectivesToLocFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalizationDirectivesToLocFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.LocalizationDirectivesToLocFile" />
      <MemberSignature Language="VB.NET" Value="Public Property LocalizationDirectivesToLocFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LocalizationDirectivesToLocFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LocalizationDirectivesToLocFile : string with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.LocalizationDirectivesToLocFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies how to generate localization information for each [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] file.</summary>
        <value>Une valeur qui spécifie comment générer des informations de localisation pour chaque [ ! Fichier de include[TLA#tla_xaml](~/Includes/tlasharptla-XAML-MD.MD)]. Les valeurs valides sont ** Aucun **, ** CommentsOnly ** et ** All **.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="OutputPath">
      <MemberSignature Language="C#" Value="public string OutputPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OutputPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.OutputPath" />
      <MemberSignature Language="VB.NET" Value="Public Property OutputPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OutputPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OutputPath : string with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.OutputPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Required</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the location of generated code files.</summary>
        <value>L’emplacement des fichiers de code généré.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="OutputType">
      <MemberSignature Language="C#" Value="public string OutputType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OutputType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.OutputType" />
      <MemberSignature Language="VB.NET" Value="Public Property OutputType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OutputType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OutputType : string with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.OutputType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Required</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the output type of the assembly.</summary>
        <value>Le type d’assembly qui est généré par un projet. Les valeurs valides sont ** winexe **, ** exe **, ** bibliothèque ** et ** netmodule **.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="PageMarkup">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] PageMarkup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] PageMarkup" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.PageMarkup" />
      <MemberSignature Language="VB.NET" Value="Public Property PageMarkup As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ PageMarkup { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PageMarkup : Microsoft.Build.Framework.ITaskItem[] with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.PageMarkup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a list of [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] files to process.</summary>
        <value>Une liste de [ ! Fichiers Include[TLA2#tla_xaml](~/Includes/tla2sharptla-XAML-MD.MD)] à traiter.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="References">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] References { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] References" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.References" />
      <MemberSignature Language="VB.NET" Value="Public Property References As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ References { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.References : Microsoft.Build.Framework.ITaskItem[] with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.References" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the assembly references.</summary>
        <value>Les références d’assembly.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RequirePass2ForMainAssembly">
      <MemberSignature Language="C#" Value="public bool RequirePass2ForMainAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequirePass2ForMainAssembly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RequirePass2ForMainAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property RequirePass2ForMainAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequirePass2ForMainAssembly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequirePass2ForMainAssembly : bool with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RequirePass2ForMainAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Output</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the project contains non-localizable [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] files that reference local types that are embedded into the main assembly.</summary>
        <value>
          <see langword="true" /> Si le projet contient non localisables [ ! Fichiers Include[TLA2#tla_xaml](~/Includes/tla2sharptla-XAML-MD.MD)] qui référencent des types locaux incorporés dans l’assembly principal. ; Sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RequirePass2ForSatelliteAssembly">
      <MemberSignature Language="C#" Value="public bool RequirePass2ForSatelliteAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequirePass2ForSatelliteAssembly" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RequirePass2ForSatelliteAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property RequirePass2ForSatelliteAssembly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequirePass2ForSatelliteAssembly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequirePass2ForSatelliteAssembly : bool with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RequirePass2ForSatelliteAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>Microsoft.Build.Framework.Output</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the project contains localizable [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] files that reference local types that are embedded in the satellite assembly.</summary>
        <value>
          <see langword="true" /> Si le projet contient localisables [ ! Fichiers Include[TLA2#tla_xaml](~/Includes/tla2sharptla-XAML-MD.MD)] qui référencent des types locaux incorporés dans l’assembly satellite ; Sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="RootNamespace">
      <MemberSignature Language="C#" Value="public string RootNamespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RootNamespace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RootNamespace" />
      <MemberSignature Language="VB.NET" Value="Public Property RootNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RootNamespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RootNamespace : string with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.RootNamespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the root namespace of the classes inside the project.</summary>
        <value>L’espace de noms racine des classes dans le projet.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SourceCodeFiles">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] SourceCodeFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] SourceCodeFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.SourceCodeFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property SourceCodeFiles As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ SourceCodeFiles { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SourceCodeFiles : Microsoft.Build.Framework.ITaskItem[] with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.SourceCodeFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the source code file list for the current project.</summary>
        <value>Liste de fichiers de code source pour le projet actuel.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="SplashScreen">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] SplashScreen { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] SplashScreen" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.SplashScreen" />
      <MemberSignature Language="VB.NET" Value="Public Property SplashScreen As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ SplashScreen { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SplashScreen : Microsoft.Build.Framework.ITaskItem[] with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.SplashScreen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the splash screen image to be displayed before application initialization.</summary>
        <value>L’image d’écran de démarrage.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="UICulture">
      <MemberSignature Language="C#" Value="public string UICulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UICulture" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.UICulture" />
      <MemberSignature Language="VB.NET" Value="Public Property UICulture As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UICulture { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UICulture : string with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.UICulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that specifies which culture satellite assembly will hold the generated [!INCLUDE[TLA#tla_baml](~/includes/tlasharptla-baml-md.md)] files.</summary>
        <value>A une valeur qui spécifie la culture assembly satellite contiendra généré [ ! Fichiers de include[TLA#tla_baml](~/Includes/tlasharptla-BAML-MD.MD)].</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="XamlDebuggingInformation">
      <MemberSignature Language="C#" Value="public bool XamlDebuggingInformation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool XamlDebuggingInformation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Tasks.Windows.MarkupCompilePass1.XamlDebuggingInformation" />
      <MemberSignature Language="VB.NET" Value="Public Property XamlDebuggingInformation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool XamlDebuggingInformation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.XamlDebuggingInformation : bool with get, set" Usage="Microsoft.Build.Tasks.Windows.MarkupCompilePass1.XamlDebuggingInformation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationBuildTasks</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether diagnostic information is generated and included in the compiled [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] in order to aid debugging.</summary>
        <value>
          <see langword="true" /> Si les informations de diagnostic sont générées et incluses dans compilé [ ! Include[TLA2#tla_xaml](~/Includes/tla2sharptla-XAML-MD.MD)] pour faciliter le débogage ; Sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>