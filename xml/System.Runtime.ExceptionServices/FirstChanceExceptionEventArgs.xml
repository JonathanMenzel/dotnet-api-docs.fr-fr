<Type Name="FirstChanceExceptionEventArgs" FullName="System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5d9a578701bc3eb4e43e1042c5590eab84e26419" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48710779" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FirstChanceExceptionEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FirstChanceExceptionEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FirstChanceExceptionEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FirstChanceExceptionEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type FirstChanceExceptionEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des données pour l'événement de notification qui se déclenche lorsqu'une exception managée se produit pour la première fois, avant que le Common Language Runtime ne commence à rechercher des gestionnaires d'événements.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette classe fournit le Gestionnaire d’exceptions pour le <xref:System.AppDomain.FirstChanceException?displayProperty=nameWithType> événement avec un accès à l’exception.  
  
   
  
## Examples  
 L’exemple suivant crée une série de domaines d’application nommé `Child_0` via `Child_3`, avec un `Worker` objet dans chaque domaine d’application. Chaque `Worker` objet a une référence à la `Worker` de l’objet dans le domaine d’application suivant, à l’exception de la `Worker` dans le dernier domaine d’application. Le <xref:System.AppDomain.FirstChanceException> événement est géré dans tous les domaines d’application à l’exception `Child_1`.  
  
 Lorsque les domaines d’application ont été créées, le domaine d’application par défaut appelle la `TestException` méthode pour le premier domaine d’application enfant. Chaque `Worker` object appelle le `TestException` méthode pour le suivant, jusqu'à ce que le dernier `Worker` lève une exception qui est gérée ou non prise en charge. Par conséquent, le thread actuel traverse tous les domaines d’application, et `TestException` est ajouté à la pile dans chaque domaine d’application.  
  
 Lors de la dernière `Worker` objet gère l’exception, le <xref:System.AppDomain.FirstChanceException> événement est déclenché uniquement dans le dernier domaine d’application. Les autres domaines d’application aucune chance pour gérer l’exception, donc l’événement n’est pas déclenché.  
  
 Lors de la dernière `Worker` objet ne gère pas l’exception, le <xref:System.AppDomain.FirstChanceException> événement est déclenché dans chaque domaine d’application qui a un gestionnaire d’événements. À l’issue de chaque gestionnaire d’événements, la pile continue à dérouler jusqu'à ce que l’exception est interceptée par le domaine d’application par défaut.  
  
> [!NOTE]
>  Pour voir comment l’affichage de la pile augmente à mesure que l’événement est déclenché plus proche et le plus proche du domaine d’application par défaut, remplacez `e.Exception.Message` à `e.Exception` dans le `FirstChanceHandler` gestionnaires d’événements. Notez que lorsque `TestException` est appelée sur les limites du domaine d’application, il apparaît deux fois : une fois pour le proxy et une fois pour le stub.  
  
 [!code-csharp[System.AppDomain.FirstChanceException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.appdomain.firstchanceexception/cs/example.cs#1)]
 [!code-vb[System.AppDomain.FirstChanceException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.appdomain.firstchanceexception/vb/example.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.AppDomain.FirstChanceException" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FirstChanceExceptionEventArgs (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FirstChanceExceptionEventArgs(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs : Exception -&gt; System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" Usage="new System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">Exception qui vient d'être levée par du code managé et qui doit être examinée par l'événement <see cref="E:System.AppDomain.UnhandledException" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs" /> avec l'exception spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur est appelé par le common language runtime, pas par le code d’application.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Objet exception managé qui correspond à l'exception levée en code managé.</summary>
        <value>Exception qui vient d'être levée.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode qui gère le <xref:System.AppDomain.UnhandledException?displayProperty=nameWithType> événement peut examiner l’exception et effectuer l’enregistrement approprié ou autres services de notification.  
  
 Pour obtenir un exemple de code, consultez <xref:System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>