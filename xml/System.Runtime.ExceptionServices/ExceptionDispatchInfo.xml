<Type Name="ExceptionDispatchInfo" FullName="System.Runtime.ExceptionServices.ExceptionDispatchInfo">
  <TypeSignature Language="C#" Value="public sealed class ExceptionDispatchInfo" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExceptionDispatchInfo extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExceptionDispatchInfo" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExceptionDispatchInfo sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b4b6f-101">Représente une exception dont l'état est capturé à un certain point dans le code.</span><span class="sxs-lookup"><span data-stu-id="b4b6f-101">Represents an exception whose state is captured at a certain point in code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4b6f-102">Le <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> objet stocke les informations de trace de pile et Watson contenant l’exception au point où elle est capturée.</span><span class="sxs-lookup"><span data-stu-id="b4b6f-102">The <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> object stores the stack trace information and Watson information that the exception contains at the point where it is captured.</span></span> <span data-ttu-id="b4b6f-103">L’exception peut être levée à un autre moment et éventuellement sur un autre thread en appelant le <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="b4b6f-103">The exception can be thrown at another time and possibly on another thread by calling the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="b4b6f-104">L’exception est levée comme s’il avait passées à partir du point où il a été capturé au point où la <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A> méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="b4b6f-104">The exception is thrown as if it had flowed from the point where it was captured to the point where the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A> method is called.</span></span>  
  
 <span data-ttu-id="b4b6f-105"><xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> ne peut pas être sérialisé et n’est pas destinée à franchir les limites de domaine d’application.</span><span class="sxs-lookup"><span data-stu-id="b4b6f-105"><xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> cannot be serialized and is not intended to cross application domain boundaries.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static System.Runtime.ExceptionServices.ExceptionDispatchInfo Capture (Exception source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Runtime.ExceptionServices.ExceptionDispatchInfo Capture(class System.Exception source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Capture(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Capture (source As Exception) As ExceptionDispatchInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Runtime::ExceptionServices::ExceptionDispatchInfo ^ Capture(Exception ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.ExceptionServices.ExceptionDispatchInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="b4b6f-106">Exception dont l'état est capturé et qui est représentée par l'objet retourné.</span><span class="sxs-lookup"><span data-stu-id="b4b6f-106">The exception whose state is captured, and which is represented by the returned object.</span></span></param>
        <summary><span data-ttu-id="b4b6f-107">Crée un objet <see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" /> qui représente l'exception spécifiée au point actuel dans le code.</span><span class="sxs-lookup"><span data-stu-id="b4b6f-107">Creates an <see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" /> object that represents the specified exception at the current point in code.</span></span></summary>
        <returns><span data-ttu-id="b4b6f-108">Objet qui représente l'exception spécifiée au point actuel dans le code.</span><span class="sxs-lookup"><span data-stu-id="b4b6f-108">An object that represents the specified exception at the current point in code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4b6f-109">Vous pouvez utiliser la <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> objet qui est retourné par cette méthode à un autre moment et éventuellement sur un autre thread pour lever l’exception spécifiée, comme si l’exception était transmise à partir de ce point où il a été capturé au point où il est à nouveau levée.</span><span class="sxs-lookup"><span data-stu-id="b4b6f-109">You can use the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo> object that is returned by this method at another time and possibly on another thread to rethrow the specified exception, as if the exception had flowed from this point where it was captured to the point where it is rethrown.</span></span>  
  
 <span data-ttu-id="b4b6f-110">Si l’exception est active lorsqu’elle est capturée, les informations de trace de pile actuel et les informations de Dr Watson se trouvant dans l’exception est stockée.</span><span class="sxs-lookup"><span data-stu-id="b4b6f-110">If the exception is active when it is captured, the current stack trace information and Watson information that is contained in the exception is stored.</span></span>  <span data-ttu-id="b4b6f-111">Si elle est inactive, autrement dit, si elle n’a pas été levée, elle n’aura des informations de trace de pile ou des informations d’erreurs Watson.</span><span class="sxs-lookup"><span data-stu-id="b4b6f-111">If it is inactive, that is, if it has not been thrown, it will not have any stack trace information or Watson information.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b4b6f-112"><paramref name="source" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="b4b6f-112"><paramref name="source" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SourceException">
      <MemberSignature Language="C#" Value="public Exception SourceException { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception SourceException" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.ExceptionServices.ExceptionDispatchInfo.SourceException" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceException As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ SourceException { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b4b6f-113">Obtient l'exception qui est représentée par l'instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="b4b6f-113">Gets the exception that is represented by the current instance.</span></span></summary>
        <value><span data-ttu-id="b4b6f-114">Exception qui est représentée par l'instance actuelle.</span><span class="sxs-lookup"><span data-stu-id="b4b6f-114">The exception that is represented by the current instance.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4b6f-115">Cette propriété est utilisée par la bibliothèque parallèle de tâches, par exemple, pour combiner plusieurs exceptions dans une <xref:System.AggregateException> objet.</span><span class="sxs-lookup"><span data-stu-id="b4b6f-115">This property is used by the Task Parallel Library, for example, to combine multiple exceptions in an <xref:System.AggregateException> object.</span></span> <span data-ttu-id="b4b6f-116">Elle n’est pas destinée à être utilisée par le code d’application.</span><span class="sxs-lookup"><span data-stu-id="b4b6f-116">It is not intended to be used by application code.</span></span> <span data-ttu-id="b4b6f-117">Utilisez la <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A> méthode pour restaurer l’état de l’exception capturée et la lever.</span><span class="sxs-lookup"><span data-stu-id="b4b6f-117">Use the <xref:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw%2A> method to restore the state of the captured exception and throw it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Throw">
      <MemberSignature Language="C#" Value="public void Throw ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Throw() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw" />
      <MemberSignature Language="VB.NET" Value="Public Sub Throw ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Throw();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b4b6f-118">Lève l'exception qui est représentée par l'objet <see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" /> actuel, après avoir restauré l'état qui a été enregistré lorsque l'exception a été capturée.</span><span class="sxs-lookup"><span data-stu-id="b4b6f-118">Throws the exception that is represented by the current <see cref="T:System.Runtime.ExceptionServices.ExceptionDispatchInfo" /> object, after restoring the state that was saved when the exception was captured.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b4b6f-119">Lorsque l’exception est restaurée, la chaîne suivante est insérée dans la trace de pile pour indiquer le point de restauration : « Fin de la trace de la pile de l’emplacement précédent dans lequel l’exception a été levée ».</span><span class="sxs-lookup"><span data-stu-id="b4b6f-119">When the exception is restored, the following string is inserted in the stack trace to indicate the restore point: "End of stack trace from the previous location where the exception was thrown".</span></span> <span data-ttu-id="b4b6f-120">Cela est similaire à la façon dont les exceptions internes ou des exceptions marshalées sont indiquées dans les traces de pile.</span><span class="sxs-lookup"><span data-stu-id="b4b6f-120">This is similar to the way inner exceptions or marshaled exceptions are indicated in stack traces.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Throw">
      <MemberSignature Language="C#" Value="public static void Throw (Exception source);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Throw(class System.Exception source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Throw (source As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Throw(Exception ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="source">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>