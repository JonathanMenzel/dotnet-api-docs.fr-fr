<Type Name="PnrpPeerResolverBindingElement" FullName="System.ServiceModel.Channels.PnrpPeerResolverBindingElement">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cc125007ab377b73d4bfb97948ae31c90a87f8fb" /><Meta Name="ms.sourcegitcommit" Value="b0551d7828f015124aca601dbb64bd913cc5067d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/13/2018" /><Meta Name="ms.locfileid" Value="53331400" /></Metadata><TypeSignature Language="C#" Value="public sealed class PnrpPeerResolverBindingElement : System.ServiceModel.Channels.PeerResolverBindingElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PnrpPeerResolverBindingElement extends System.ServiceModel.Channels.PeerResolverBindingElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.PnrpPeerResolverBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PnrpPeerResolverBindingElement&#xA;Inherits PeerResolverBindingElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class PnrpPeerResolverBindingElement sealed : System::ServiceModel::Channels::PeerResolverBindingElement" />
  <TypeSignature Language="F#" Value="type PnrpPeerResolverBindingElement = class&#xA;    inherit PeerResolverBindingElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.PeerResolverBindingElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7f450-101">Définit l'élément de liaison utilisé pour créer un programme de résolution d'homologue du protocole PNRP (Peer Name Resolution Protocol).</span><span class="sxs-lookup"><span data-stu-id="7f450-101">Defines the binding element used to create a Peer Name Resolution Protocol (PNRP) peer resolver.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f450-102">Pour créer un programme de résolution d'homologue à partir de cette classe, appelez <xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.CreatePeerResolver%2A> une fois que l'instance a été construite.</span><span class="sxs-lookup"><span data-stu-id="7f450-102">To create a peer resolver from an instance of this class, call <xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.CreatePeerResolver%2A> after the instance has been constructed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7f450-103">Initialise une nouvelle instance par défaut de la classe <see cref="T:System.ServiceModel.Channels.PnrpPeerResolverBindingElement" />.</span><span class="sxs-lookup"><span data-stu-id="7f450-103">Initializes a new default instance of the <see cref="T:System.ServiceModel.Channels.PnrpPeerResolverBindingElement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PnrpPeerResolverBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PnrpPeerResolverBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7f450-104">Initialise une nouvelle instance par défaut de la classe <see cref="T:System.ServiceModel.Channels.PnrpPeerResolverBindingElement" />.</span><span class="sxs-lookup"><span data-stu-id="7f450-104">Initializes a new default instance of the <see cref="T:System.ServiceModel.Channels.PnrpPeerResolverBindingElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PnrpPeerResolverBindingElement (System.ServiceModel.PeerResolvers.PeerReferralPolicy referralPolicy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ServiceModel.PeerResolvers.PeerReferralPolicy referralPolicy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.#ctor(System.ServiceModel.PeerResolvers.PeerReferralPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (referralPolicy As PeerReferralPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PnrpPeerResolverBindingElement(System::ServiceModel::PeerResolvers::PeerReferralPolicy referralPolicy);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.PnrpPeerResolverBindingElement : System.ServiceModel.PeerResolvers.PeerReferralPolicy -&gt; System.ServiceModel.Channels.PnrpPeerResolverBindingElement" Usage="new System.ServiceModel.Channels.PnrpPeerResolverBindingElement referralPolicy" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="referralPolicy" Type="System.ServiceModel.PeerResolvers.PeerReferralPolicy" />
      </Parameters>
      <Docs>
        <param name="referralPolicy"><span data-ttu-id="7f450-105"><see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" /> qui spécifie la stratégie de référence pour ce programme de résolution.</span><span class="sxs-lookup"><span data-stu-id="7f450-105"><see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" /> that specifies the referral policy for this resolver.</span></span></param>
        <summary><span data-ttu-id="7f450-106">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.PnrpPeerResolverBindingElement" /> avec la stratégie de référence d'homologue fournie.</span><span class="sxs-lookup"><span data-stu-id="7f450-106">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.PnrpPeerResolverBindingElement" /> class with the provided peer referral policy.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="pnrpPeerResolverBindingElement.BuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="7f450-107">Type de canal à générer.</span><span class="sxs-lookup"><span data-stu-id="7f450-107">The type of channel to produce.</span></span></typeparam>
        <param name="context"><span data-ttu-id="7f450-108">Objet <see cref="T:System.ServiceModel.Channels.BindingContext" /> qui spécifie le contexte de liaison de la fabrique de canaux.</span><span class="sxs-lookup"><span data-stu-id="7f450-108"><see cref="T:System.ServiceModel.Channels.BindingContext" /> that specifies the binding context for the channel factory.</span></span></param>
        <summary><span data-ttu-id="7f450-109">Crée une fabrique de canal qui peut être utilisée afin de créer un canal pour l'envoi de messages.</span><span class="sxs-lookup"><span data-stu-id="7f450-109">Creates a channel factory that can be used to create a channel for sending messages.</span></span></summary>
        <returns><span data-ttu-id="7f450-110">Objet <see cref="T:System.ServiceModel.Channels.IChannelFactory" /> qui contient la nouvelle fabrique de canaux du type spécifié.</span><span class="sxs-lookup"><span data-stu-id="7f450-110"><see cref="T:System.ServiceModel.Channels.IChannelFactory" /> that contains the new channel factory of the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f450-111">Cette méthode peut être utilisée pour obtenir une fabrication de canal pour l’envoi de messages basés sur la configuration de l’élément de liaison de transport.</span><span class="sxs-lookup"><span data-stu-id="7f450-111">This method can be used to get a channel factory for sending messages based on the configuration of the transport binding element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="pnrpPeerResolverBindingElement.BuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="7f450-112"><see cref="T:System.ServiceModel.Channels.IChannel" /> qui spécifie le type des canaux à générer.</span><span class="sxs-lookup"><span data-stu-id="7f450-112"><see cref="T:System.ServiceModel.Channels.IChannel" /> that specifies the type of the channels to produce.</span></span></typeparam>
        <param name="context"><span data-ttu-id="7f450-113">Objet <see cref="T:System.ServiceModel.Channels.BindingContext" /> qui spécifie le contexte de liaison de l'écouteur de canal.</span><span class="sxs-lookup"><span data-stu-id="7f450-113"><see cref="T:System.ServiceModel.Channels.BindingContext" /> that specifies the binding context for the channel listener.</span></span></param>
        <summary><span data-ttu-id="7f450-114">Crée un écouteur de canal du type spécifié pour recevoir des messages.</span><span class="sxs-lookup"><span data-stu-id="7f450-114">Creates a channel listener of the specified type for receiving messages.</span></span></summary>
        <returns><span data-ttu-id="7f450-115">Objet <see cref="T:System.ServiceModel.Channels.IChannelListener" /> qui contient le nouvel écouteur de canal du type spécifié.</span><span class="sxs-lookup"><span data-stu-id="7f450-115"><see cref="T:System.ServiceModel.Channels.IChannelListener" /> that contains the new channel listener of the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f450-116">Cette méthode peut être utilisée pour obtenir un écouteur de canal pour la réception de messages basés sur la configuration de l’élément de liaison de transport.</span><span class="sxs-lookup"><span data-stu-id="7f450-116">This method can be used to get a channel listener for receiving messages based on the configuration of the transport binding element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; override bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool" Usage="pnrpPeerResolverBindingElement.CanBuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="7f450-117"><see cref="T:System.ServiceModel.Channels.IChannel" /> qui spécifie le type des canaux à générer.</span><span class="sxs-lookup"><span data-stu-id="7f450-117"><see cref="T:System.ServiceModel.Channels.IChannel" /> that specifies the type of the channels to produce.</span></span></typeparam>
        <param name="context"><span data-ttu-id="7f450-118">Objet <see cref="T:System.ServiceModel.Channels.BindingContext" /> qui spécifie le contexte de liaison de la fabrique de canaux.</span><span class="sxs-lookup"><span data-stu-id="7f450-118"><see cref="T:System.ServiceModel.Channels.BindingContext" /> that specifies the binding context for the channel factory.</span></span></param>
        <summary><span data-ttu-id="7f450-119">Détermine si une fabrique de canaux du type spécifié peut être construite.</span><span class="sxs-lookup"><span data-stu-id="7f450-119">Determines whether a channel factory of the specified type can be built.</span></span></summary>
        <returns><span data-ttu-id="7f450-120"><see langword="true" /> si l'élément de liaison peut générer une fabrication de canal du type spécifié ; <see langword="false" /> si ce n'est pas possible.</span><span class="sxs-lookup"><span data-stu-id="7f450-120"><see langword="true" /> if this binding element can produce a channel factory of the specified type; <see langword="false" /> if it cannot.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public override bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel override bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="pnrpPeerResolverBindingElement.CanBuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel"><span data-ttu-id="7f450-121"><see cref="T:System.ServiceModel.Channels.IChannel" /> qui spécifie le type de l'écouteur de canal.</span><span class="sxs-lookup"><span data-stu-id="7f450-121"><see cref="T:System.ServiceModel.Channels.IChannel" /> that specifies the type of the channel listener.</span></span></typeparam>
        <param name="context"><span data-ttu-id="7f450-122">Objet <see cref="T:System.ServiceModel.Channels.BindingContext" /> qui spécifie le contexte de liaison de l'écouteur de canal.</span><span class="sxs-lookup"><span data-stu-id="7f450-122"><see cref="T:System.ServiceModel.Channels.BindingContext" /> that specifies the binding context for the channel listener.</span></span></param>
        <summary><span data-ttu-id="7f450-123">Détermine si un écouteur de canal du type spécifié peut être construit.</span><span class="sxs-lookup"><span data-stu-id="7f450-123">Determines whether a channel listener of the specified type can be built.</span></span></summary>
        <returns><span data-ttu-id="7f450-124"><see langword="true" /> si l'élément de liaison peut générer un écouteur de canaux du type spécifié ; <see langword="false" /> si ce n'est pas possible.</span><span class="sxs-lookup"><span data-stu-id="7f450-124"><see langword="true" /> if this binding element can produce a channel listener of the specified type; <see langword="false" /> if it cannot.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.ServiceModel.Channels.BindingElement" Usage="pnrpPeerResolverBindingElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7f450-125">Crée une instance représentant une copie de l'élément de liaison en cours.</span><span class="sxs-lookup"><span data-stu-id="7f450-125">Creates a new instance that is a copy of the current binding element.</span></span></summary>
        <returns><span data-ttu-id="7f450-126">Nouvel <see cref="T:System.ServiceModel.Channels.BindingElement" /> qui contient une copie de l'élément de liaison actuel.</span><span class="sxs-lookup"><span data-stu-id="7f450-126">A new <see cref="T:System.ServiceModel.Channels.BindingElement" /> that contains a copy of the current binding element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f450-127">L'objet retourné par cette méthode peut être reconverti comme un objet du type <xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement> plus spécifique.</span><span class="sxs-lookup"><span data-stu-id="7f450-127">The object returned by this method can be reboxed as an object of the more specific <xref:System.ServiceModel.Channels.PnrpPeerResolverBindingElement> type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatePeerResolver">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.PeerResolver CreatePeerResolver ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ServiceModel.PeerResolver CreatePeerResolver() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.CreatePeerResolver" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreatePeerResolver () As PeerResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ServiceModel::PeerResolver ^ CreatePeerResolver();" />
      <MemberSignature Language="F#" Value="override this.CreatePeerResolver : unit -&gt; System.ServiceModel.PeerResolver" Usage="pnrpPeerResolverBindingElement.CreatePeerResolver " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolver</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7f450-128">Crée une instance <see cref="T:System.ServiceModel.PeerResolver" /> spécifique au PNRP.</span><span class="sxs-lookup"><span data-stu-id="7f450-128">Creates a PNRP-specific <see cref="T:System.ServiceModel.PeerResolver" /> instance.</span></span></summary>
        <returns><span data-ttu-id="7f450-129">Objet <see cref="T:System.ServiceModel.PeerResolver" /> qui contient le nouveau programme de résolution PNRP créé par cet élément de liaison.</span><span class="sxs-lookup"><span data-stu-id="7f450-129"><see cref="T:System.ServiceModel.PeerResolver" /> object that contains the new PNRP resolver created by this binding element.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public override T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class override T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="override this.GetProperty : System.ServiceModel.Channels.BindingContext -&gt; 'T (requires 'T : null)" Usage="pnrpPeerResolverBindingElement.GetProperty context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T"><span data-ttu-id="7f450-130">Propriété spécifique à obtenir à partir du contexte de liaison.</span><span class="sxs-lookup"><span data-stu-id="7f450-130">The specific property to obtain from the binding context.</span></span></typeparam>
        <param name="context"><span data-ttu-id="7f450-131"><see cref="T:System.ServiceModel.Channels.BindingContext" /> qui spécifie le contexte de liaison.</span><span class="sxs-lookup"><span data-stu-id="7f450-131"><see cref="T:System.ServiceModel.Channels.BindingContext" /> that specifies the binding context.</span></span></param>
        <summary><span data-ttu-id="7f450-132">Retourne une propriété à partir de l'objet <see cref="T:System.ServiceModel.Channels.BindingContext" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="7f450-132">Returns a property from the specified <see cref="T:System.ServiceModel.Channels.BindingContext" /> object.</span></span></summary>
        <returns><span data-ttu-id="7f450-133">Propriété de la <see cref="T:System.ServiceModel.Channels.BindingContext" /> spécifiée.</span><span class="sxs-lookup"><span data-stu-id="7f450-133">The property from the specified <see cref="T:System.ServiceModel.Channels.BindingContext" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferralPolicy">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.PeerResolvers.PeerReferralPolicy ReferralPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.PeerResolvers.PeerReferralPolicy ReferralPolicy" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.PnrpPeerResolverBindingElement.ReferralPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReferralPolicy As PeerReferralPolicy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ServiceModel::PeerResolvers::PeerReferralPolicy ReferralPolicy { System::ServiceModel::PeerResolvers::PeerReferralPolicy get(); void set(System::ServiceModel::PeerResolvers::PeerReferralPolicy value); };" />
      <MemberSignature Language="F#" Value="member this.ReferralPolicy : System.ServiceModel.PeerResolvers.PeerReferralPolicy with get, set" Usage="System.ServiceModel.Channels.PnrpPeerResolverBindingElement.ReferralPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.PeerResolvers.PeerReferralPolicy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7f450-134">Obtient ou définit la stratégie de référence pour le programme de résolution d’homologue PNRP créé par cet élément de liaison.</span><span class="sxs-lookup"><span data-stu-id="7f450-134">Gets or sets the referral policy for the PNRP peer resolver created by this binding element.</span></span></summary>
        <value><span data-ttu-id="7f450-135"><see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" /> qui spécifie la stratégie de référence des programmes de résolution créés par cette instance de l'élément de liaison.</span><span class="sxs-lookup"><span data-stu-id="7f450-135"><see cref="T:System.ServiceModel.PeerResolvers.PeerReferralPolicy" /> that specifies the referral policy for resolvers created by this binding element instance.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>