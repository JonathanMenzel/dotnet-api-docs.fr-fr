<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="RequestContext.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac597bd37e96340c70771000ee44adecf9bb8755f62.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">97bd37e96340c70771000ee44adecf9bb8755f62</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.RequestContext">
          <source>Provides a reply that is correlated to an incoming request.</source>
          <target state="translated">Fournit une réponse mise en correspondance avec une demande entrante.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.RequestContext">
          <source>You get a request context from an <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel&gt;</ph>.</source>
          <target state="translated">Vous obtenez un contexte de demande à partir d'un <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IReplyChannel&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.RequestContext">
          <source>Each <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> encapsulates the information required to reply to the request, so that you do not have to block on the channel when waiting for each request message to receive a reply.</source>
          <target state="translated">Chaque <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> encapsule les informations requises pour répondre à la demande. Vous ne devez dès lors pas bloquer le canal lorsque chaque message de demande attend une réponse.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.RequestContext">
          <source>In the request/reply model, the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> object is the link between the request that comes in and the reply that goes out. When the server receives a request, it provides a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> instance that represents the request to the channel.</source>
          <target state="translated">Dans le modèle demande/réponse, l'objet <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> est le lien entre la demande entrante et la réponse sortante. Lorsque le serveur reçoit une demande, il fournit une instance <ph id="ph2">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> qui représente la demande envoyée au canal.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.RequestContext">
          <source>The request context contains the original request message among other useful properties.</source>
          <target state="translated">Entre autres propriétés utiles, le contexte de demande contient le message de demande d'origine.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.RequestContext">
          <source>This request context is then stashed inside the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> for retrieval by your service.</source>
          <target state="translated">Ce contexte de demande est ensuite dissimulé dans <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext&gt;</ph> pour pouvoir être récupéré par votre service.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.RequestContext">
          <source>You typically use the <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> property to access the request of the current operation.</source>
          <target state="translated">Vous utilisez en général la propriété <ph id="ph1">&lt;xref:System.ServiceModel.OperationContext.Current%2A&gt;</ph> pour accéder à la demande de l'opération actuelle.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.RequestContext">
          <source>The value of the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> can be <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> peut avoir la valeur <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.RequestContext">
          <source>Because the role of the request context is to link requests to replies, it does not make sense to have a request context when you do not have a reply, and so in this case the context is set to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Étant donné que le rôle du contexte de demande est de lier des demandes à des réponses, il n'est pas utile d'avoir un contexte de demande s'il n'y a pas de réponse. Ainsi, dans ce cas, le contexte a la valeur <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.RequestContext">
          <source>For a one-way operation on top of the request/reply model, the server receives requests but does not send back a response to the client.</source>
          <target state="translated">Pour une opération monodirectionnelle sur le modèle demande/réponse, le serveur reçoit des demandes, mais ne renvoie pas de réponse au client.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.RequestContext">
          <source>So if the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> is <ph id="ph2">`null`</ph> unexpectedly, check first whether the operation contract is IsOneWay.</source>
          <target state="translated">Par conséquent, si <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext&gt;</ph> a la valeur <ph id="ph2">`null`</ph> alors qu'une autre valeur est attendue, vérifiez d'abord si le contrat d'opération est IsOneWay.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.RequestContext">
          <source>Special note for Managed C++ users deriving from this class:</source>
          <target state="translated">Remarque spéciale destinée aux utilisateurs C++ managés dérivés de cette classe :</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.RequestContext">
          <source>Put your cleanup code in (On)(Begin)Close (and/or OnAbort), not in a destructor.</source>
          <target state="translated">Placez votre code de nettoyage dans (On)(Begin)Close (et/ou OnAbort), pas dans un destructeur.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.RequestContext">
          <source>Avoid destructors: they cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>.</source>
          <target state="translated">Évitez les destructeurs car ils provoquent la génération automatique de <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> par le compilateur.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.RequestContext">
          <source>Avoid non-reference members: they can cause the compiler to auto-generate <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph>.</source>
          <target state="translated">Évitez les membres sans référence car ils peuvent provoquer la génération automatique de <ph id="ph1">&lt;xref:System.IDisposable&gt;</ph> par le compilateur.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.RequestContext">
          <source>Avoid finalizers; but if you include one, you should suppress the build warning and call <ph id="ph1">&lt;xref:System.GC.SuppressFinalize%28System.Object%29&gt;</ph> and the finalizer itself from (On)(Begin)Close (and/or OnAbort) to emulate what would have been the auto-generated <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> behavior.</source>
          <target state="translated">Évitez les finaliseurs ; si vous en incluez un, vous devrez supprimer l'avertissement de génération et appeler <ph id="ph1">&lt;xref:System.GC.SuppressFinalize%28System.Object%29&gt;</ph> et le finaliseur proprement dit à partir de (On)(Begin)Close (et/ou OnAbort) pour émuler ce qui aurait été le comportement <ph id="ph2">&lt;xref:System.IDisposable&gt;</ph> généré automatiquement.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.RequestContext.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.RequestContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.RequestContext.Abort">
          <source>When overridden in a derived class, aborts processing the request associated with the context.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, abandonne le traitement de la demande associée au contexte.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.RequestContext">
          <source>Begins an asynchronous operation to reply to the request associated with the current context.</source>
          <target state="translated">Démarre une opération asynchrone pour répondre à la demande associée au contexte actuel.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.RequestContext">
          <source>The asynchronous operation is available with or without an explicit time-out.</source>
          <target state="translated">L'opération asynchrone est proposée avec ou sans délai d'attente explicite.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>The incoming <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> that contains the request.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> entrant qui contient la demande.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives the notification of the asynchronous reply operation completion.</source>
          <target state="translated">Délégué <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> qui reçoit la notification de la fin de l'opération de réponse asynchrone.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous reply operation.</source>
          <target state="translated">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération de réponse asynchrone.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, démarre une opération asynchrone pour répondre à la demande associée au contexte actuel.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous reply operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> qui référence l'opération de réponse asynchrone.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>Use the asynchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A&gt;</ph> method when the application processing must continue without waiting.</source>
          <target state="translated">Utilisez la méthode asynchrone <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A&gt;</ph> lorsque le traitement de l'application doit se poursuivre sans attendre.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>Use one of the synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext.Reply%2A&gt;</ph> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the time-out interval is exceeded.</source>
          <target state="translated">Utilisez l'une des méthodes <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext.Reply%2A&gt;</ph> synchrones lorsque le thread actif peut être bloqué au moment de sa réponse au message de demande ou jusqu'à ce que l'intervalle de délai d'attente soit dépassé.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>This method receives notification, through a callback, of the identity of the event handler for the operation.</source>
          <target state="translated">Cette méthode reçoit, via un rappel, la notification de l'identité du gestionnaire d'événements de l'opération.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>The operation is not complete until either the reply is sent or the time-out occurs.</source>
          <target state="translated">L'opération ne s'accomplit que lorsque la réponse est envoyée ou que le délai d'attente est atteint.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)">
          <source>The operation throws a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> if the specified <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is exceeded before it completes.</source>
          <target state="translated">L'opération lève une <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> si le <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> spécifié est dépassé avant qu'elle ne se termine.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The incoming <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> that contains the request.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> entrant qui contient la demande.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies the interval of time to wait for the reply to an available request.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> qui spécifie la durée d'attente de la réponse à une demande disponible.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives the notification of the asynchronous reply operation completion.</source>
          <target state="translated">Délégué <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> qui reçoit la notification de la fin de l'opération de réponse asynchrone.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous reply operation.</source>
          <target state="translated">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération de réponse asynchrone.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>When overridden in a derived class, begins an asynchronous operation to reply to the request associated with the current context within a specified interval of time.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, démarre une opération asynchrone pour répondre à la demande associée au contexte actuel dans un intervalle donné.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous reply operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> qui référence l'opération de réponse asynchrone.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Use the asynchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A&gt;</ph> method to allow the application processing to continue without waiting for the request to complete.</source>
          <target state="translated">Utilisez la méthode asynchrone <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A&gt;</ph> lorsque pour permettre au traitement de l'application de se poursuivre sans attendre la fin de la demande.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Use one of the synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext.Reply%2A&gt;</ph> methods when it is acceptable for the current thread to be blocked while it replies to the request message or until the time-out interval is exceeded.</source>
          <target state="translated">Utilisez l'une des méthodes <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext.Reply%2A&gt;</ph> synchrones lorsque le thread actif peut être bloqué au moment de sa réponse au message de demande ou jusqu'à ce que l'intervalle de délai d'attente soit dépassé.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method receives notification, through a callback, of the identity of the event handler for the operation.</source>
          <target state="translated">Cette méthode reçoit, via un rappel, la notification de l'identité du gestionnaire d'événements de l'opération.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The operation is not complete until either the reply is sent or the time-out occurs.</source>
          <target state="translated">L'opération ne s'accomplit que lorsque la réponse est envoyée ou que le délai d'attente est atteint.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.RequestContext.BeginReply(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The operation throws a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> if the specified <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is exceeded before it completes.</source>
          <target state="translated">L'opération lève une <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> si le <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> spécifié est dépassé avant qu'elle ne se termine.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.RequestContext">
          <source>Closes the operation that is replying to the request context associated with the current context.</source>
          <target state="translated">Ferme l'opération qui répond au contexte de demande associé au contexte actuel.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.RequestContext.Close">
          <source>When overridden in a derived class, closes the operation that is replying to the request context associated with the current context.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, ferme l'opération qui répond au contexte de demande associé au contexte actuel.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies the interval of time within which the reply operation associated with the current context must close.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> qui spécifie l'intervalle au cours duquel l'opération de réponse associée au contexte actuel doit se fermer.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)">
          <source>When overridden in a derived class, closes the operation that is replying to the request context associated with the current context within a specified interval of time.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, ferme l'opération qui répond au contexte de demande associé au contexte actuel dans un intervalle donné.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.RequestContext.Close(System.TimeSpan)">
          <source>The operation should throw a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> if the specified <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> is exceeded before it completes.</source>
          <target state="translated">L'opération doit lever <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> si le <ph id="ph2">&lt;paramref name="timeout" /&gt;</ph> spécifié est dépassé avant qu'elle soit terminée.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour libérer les ressources managées et non managées ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour ne libérer que les ressources non managées.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.RequestContext.Dispose(System.Boolean)">
          <source>Releases resources associated with the context.</source>
          <target state="translated">Libère les ressources associées au contexte.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> returned by a call to one of the <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.Channels.RequestContext.BeginReply" /&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> retourné par un appel de l'une des méthodes <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.Channels.RequestContext.BeginReply" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.RequestContext.EndReply(System.IAsyncResult)">
          <source>When overridden in a derived class, completes an asynchronous operation to reply to a request message.</source>
          <target state="translated">Lors d'une substitution dans une classe dérivée, termine une opération asynchrone pour répondre à un message de demande.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.RequestContext">
          <source>Replies to a request message.</source>
          <target state="translated">Répond à un message de demande.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)">
          <source>The incoming <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> that contains the request.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> entrant qui contient la demande.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)">
          <source>When overridden in a derived class, replies to a request message.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, répond à un message de demande.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext.Reply%2A&gt;</ph> when it is acceptable for the current thread to be blocked while it replies to the request message.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext.Reply%2A&gt;</ph> lorsque le thread actuel peut faire l'objet d'un blocage en répondant au message de demande.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)">
          <source>The thread is blocked up to the specified <ph id="ph1">`timeout`</ph>.</source>
          <target state="translated">Le thread reste bloqué durant le <ph id="ph1">`timeout`</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)">
          <source>If the application processing must continue without waiting for the reply to complete, use the asynchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A&gt;</ph> method.</source>
          <target state="translated">Utilisez la méthode asynchrone <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A&gt;</ph> si le traitement de l'application doit se poursuivre sans attendre la fin de la réponse.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)">
          <source>This method receives notification, through a callback, of the identity of the event handler for the operation.</source>
          <target state="translated">Cette méthode reçoit, via un rappel, la notification de l'identité du gestionnaire d'événements de l'opération.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message)">
          <source>The operation is not complete until either a message becomes available in the channel or the time-out occurs.</source>
          <target state="translated">L'opération ne s'accomplit que lorsqu'un message est disponible dans le canal ou lorsque le délai d'attente est atteint.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <source>The incoming <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> that contains the request.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> entrant qui contient la demande.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies the interval of time to wait for the reply to a request.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> qui spécifie la durée d'attente de la réponse à une demande.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <source>When overridden in a derived class, replies to a request message within a specified interval of time.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, répond à un message de demande dans un intervalle spécifié.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <source>Use <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext.Reply%2A&gt;</ph> when it is acceptable for the current thread to be blocked while it replies to the request message.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext.Reply%2A&gt;</ph> lorsque le thread actuel peut faire l'objet d'un blocage en répondant au message de demande.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <source>The thread is blocked up to the specified <ph id="ph1">`timeout`</ph>.</source>
          <target state="translated">Le thread reste bloqué durant le <ph id="ph1">`timeout`</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <source>If the application processing must continue without waiting for the reply to complete, use the asynchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A&gt;</ph> method.</source>
          <target state="translated">Utilisez la méthode asynchrone <ph id="ph1">&lt;xref:System.ServiceModel.Channels.RequestContext.BeginReply%2A&gt;</ph> si le traitement de l'application doit se poursuivre sans attendre la fin de la réponse.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <source>This method receives notification, through a callback, of the identity of the event handler for the operation.</source>
          <target state="translated">Cette méthode reçoit, via un rappel, la notification de l'identité du gestionnaire d'événements de l'opération.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.RequestContext.Reply(System.ServiceModel.Channels.Message,System.TimeSpan)">
          <source>The operation is not complete until either a message becomes available in the channel or the time-out occurs.</source>
          <target state="translated">L'opération ne s'accomplit que lorsqu'un message est disponible dans le canal ou lorsque le délai d'attente est atteint.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.RequestContext.RequestMessage">
          <source>When overridden in a derived class, gets the message that contains the request.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, obtient le message qui contient la demande.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.RequestContext.RequestMessage">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> that contains the request.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> qui contient la demande.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.RequestContext.System#IDisposable#Dispose">
          <source>Releases both managed and unmanaged resources associated with the context.</source>
          <target state="translated">Libère les ressources managées et non managées associées au contexte.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>