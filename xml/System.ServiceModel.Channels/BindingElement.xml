<Type Name="BindingElement" FullName="System.ServiceModel.Channels.BindingElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="69d05dc819d82873f6ae9287d81c967ac140e6d6" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49129157" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BindingElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BindingElement extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.BindingElement" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BindingElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class BindingElement abstract" />
  <TypeSignature Language="F#" Value="type BindingElement = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="13700-101">Éléments des liaisons qui génèrent les fabriques et les écouteurs de canal pour différents types de canaux utilisés pour traiter des messages sortants et entrants.</span>
      <span class="sxs-lookup">
        <span data-stu-id="13700-101">The elements of the bindings that build the channel factories and channel listeners for various types of channels that are used to process outgoing and incoming messages.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13700-102">Une liaison se compose d’un jeu ordonné d’éléments de liaison qui héritent de cette classe de base abstraite.</span><span class="sxs-lookup"><span data-stu-id="13700-102">A binding consists of an ordered set of binding elements that inherit from this abstract base class.</span></span>  <span data-ttu-id="13700-103">La classe <xref:System.ServiceModel.Channels.TransportBindingElement> hérite de la classe <xref:System.ServiceModel.Channels.BindingElement>.</span><span class="sxs-lookup"><span data-stu-id="13700-103">The <xref:System.ServiceModel.Channels.TransportBindingElement> class inherits from the <xref:System.ServiceModel.Channels.BindingElement> class.</span></span>  
  
 <span data-ttu-id="13700-104">La création d’une liaison et d’un élément de liaison relatifs au transport est facultative si vous utilisez simplement le modèle de canal.</span><span class="sxs-lookup"><span data-stu-id="13700-104">Creating a binding and binding element for your transport is optional if you are just using the channel model.</span></span> <span data-ttu-id="13700-105">Vous pouvez effectuer toutes les tâches dont vous avez besoin par le biais de la fabrique et de l'écouteur de canal, tant que ceux-ci sont rendus publics.</span><span class="sxs-lookup"><span data-stu-id="13700-105">It is possible to do everything you need through the channel factory and listener as long as they are made public.</span></span>  
  
 <span data-ttu-id="13700-106">Le modèle de service Windows Communication Foundation (WCF) utilise un modèle de fabrique où la liaison est utilisée pour créer la pile de canal.</span><span class="sxs-lookup"><span data-stu-id="13700-106">The Windows Communication Foundation (WCF) service model uses a factory pattern where the binding is used to create the channel stack.</span></span> <span data-ttu-id="13700-107">Si vous souhaitez utiliser le modèle de service WCF, puis à l’aide d’un élément de liaison de transport est requis.</span><span class="sxs-lookup"><span data-stu-id="13700-107">If you want to use the WCF service model, then using a transport binding element is required.</span></span> <span data-ttu-id="13700-108">Il est recommandé de placer cet élément dans une liaison pour que les utilisateurs n’aient pas à créer leur propre liaison personnalisée pour le transport.</span><span class="sxs-lookup"><span data-stu-id="13700-108">Placing this binding element into a binding is a good practice because it removes the requirement for users to create their own custom binding for your transport.</span></span> <span data-ttu-id="13700-109">Il vaut mieux créer à la fois une liaison et un élément de liaison, et masquer la fabrique et l'écouteur de canal dans l'assembly.</span><span class="sxs-lookup"><span data-stu-id="13700-109">It is best to create both a binding and binding element, and hide the channel factory and listener inside the assembly.</span></span>  
  
 <span data-ttu-id="13700-110">À l’envoi, une liaison permet de générer une fabrique <xref:System.ServiceModel.Channels.IChannelFactory> qui génère à son tour une pile de canaux et renvoie une référence au canal figurant en haut de la pile.</span><span class="sxs-lookup"><span data-stu-id="13700-110">On the sending side, a binding is used to build a <xref:System.ServiceModel.Channels.IChannelFactory>, which in turn builds a channel stack and returns a reference to the top channel in the stack.</span></span> <span data-ttu-id="13700-111">L'application peut utiliser ensuite ce canal pour envoyer des messages.</span><span class="sxs-lookup"><span data-stu-id="13700-111">The application can then use this channel to send messages.</span></span>  
  
 <span data-ttu-id="13700-112">De même, à la réception, une liaison permet de générer un objet <xref:System.ServiceModel.Channels.IChannelListener> chargé d'écouter les messages entrants.</span><span class="sxs-lookup"><span data-stu-id="13700-112">Similarly, on the receiving side a binding is used to build a <xref:System.ServiceModel.Channels.IChannelListener>, which listens for incoming messages.</span></span> <span data-ttu-id="13700-113"><xref:System.ServiceModel.Channels.IChannelListener> envoie des messages à l'application qui écoute en créant des piles de canaux et en remettant à l'application une référence au canal supérieur.</span><span class="sxs-lookup"><span data-stu-id="13700-113">The <xref:System.ServiceModel.Channels.IChannelListener> provides messages to the listening application by creating channel stacks and handing the application a reference to the top channel.</span></span> <span data-ttu-id="13700-114">L'application utilise ensuite ce canal pour recevoir les messages entrants.</span><span class="sxs-lookup"><span data-stu-id="13700-114">The application then uses this channel to receive incoming messages.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13700-115">Si vous ajoutez les en-têtes de message à chiffrer, vous devez retourner une instance <xref:System.ServiceModel.Security.ChannelProtectionRequirements> avec vos exigences à partir de la méthode <xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29> lorsque <xref:System.ServiceModel.Security.ChannelProtectionRequirements> vous est demandé.</span><span class="sxs-lookup"><span data-stu-id="13700-115">If you are adding message headers that must be encrypted you must return a <xref:System.ServiceModel.Security.ChannelProtectionRequirements> instance with your requirements from the <xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29> method when asked for <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13700-116">L’exemple suivant indique comment ajouter un élément de liaison de transport à une liaison personnalisée, puis générer un écouteur de canal capable d’accepter des messages entrants.</span><span class="sxs-lookup"><span data-stu-id="13700-116">The following example shows how to add a transport binding element to a custom binding and then build a channel listener that can accept incoming messages.</span></span>  
  
 [!code-csharp[S_UEChannels#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#1)]
 [!code-vb[S_UEChannels#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uechannels/vb/servicesnippets.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="13700-117">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.BindingElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-117">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElement" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="13700-118">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.BindingElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-118">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElement" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BindingElement (System.ServiceModel.Channels.BindingElement elementToBeCloned);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.BindingElement elementToBeCloned) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (elementToBeCloned As BindingElement)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BindingElement(System::ServiceModel::Channels::BindingElement ^ elementToBeCloned);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.BindingElement : System.ServiceModel.Channels.BindingElement -&gt; System.ServiceModel.Channels.BindingElement" Usage="new System.ServiceModel.Channels.BindingElement elementToBeCloned" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="elementToBeCloned" Type="System.ServiceModel.Channels.BindingElement" />
      </Parameters>
      <Docs>
        <param name="elementToBeCloned">
          <span data-ttu-id="13700-119">
            <see cref="T:System.ServiceModel.Channels.BindingElement" /> à cloner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-119">The <see cref="T:System.ServiceModel.Channels.BindingElement" /> to be cloned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13700-120">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.BindingElement" /> à partir d'un élément de liaison spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-120">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.BindingElement" /> class from a specified binding element.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt; BuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelFactory`1&lt;!!TChannel&gt; BuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelFactory(Of TChannel) (context As BindingContext) As IChannelFactory(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; virtual System::ServiceModel::Channels::IChannelFactory&lt;TChannel&gt; ^ BuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;&#xA;override this.BuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelFactory&lt;'Channel&gt;" Usage="bindingElement.BuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelFactory&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="13700-121">Type de canal construit par la fabrique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-121">The type of channel the factory builds.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="13700-122">
            <see cref="T:System.ServiceModel.Channels.BindingContext" /> qui fournit le contexte pour l'élément de liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-122">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13700-123">Initialise une fabrique de canal pour générer des canaux d’un type spécifié à partir du contexte de liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-123">Initializes a channel factory for producing channels of a specified type from the binding context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13700-124">
            <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de type <paramref name="TChannel" /> initialisé à partir de <paramref name="context" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-124">The <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> initialized from the <paramref name="context" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEChannels#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="13700-125">
            <paramref name="context" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-125">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt; BuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IChannelListener`1&lt;!!TChannel&gt; BuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function BuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As IChannelListener(Of TChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual System::ServiceModel::Channels::IChannelListener&lt;TChannel&gt; ^ BuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&#xA;override this.BuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; System.ServiceModel.Channels.IChannelListener&lt;'Channel (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&gt; (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="bindingElement.BuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener&lt;TChannel&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="13700-126">Type de canal que l'écouteur doit accepter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-126">The type of channel the listener is built to accept.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="13700-127">
            <see cref="T:System.ServiceModel.Channels.BindingContext" /> qui fournit le contexte pour l'élément de liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-127">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13700-128">Initialise un écouteur de canal pour accepter les canaux d’un type donné issus du contexte de liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-128">Initializes a channel listener to accept channels of a specified type from the binding context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13700-129">
            <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> de type <see cref="T:System.ServiceModel.Channels.IChannel" /> initialisé à partir de <paramref name="context" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-129">The <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> initialized from the <paramref name="context" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UEChannels#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="13700-130">
            <paramref name="context" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-130">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelFactory&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanBuildChannelFactory&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanBuildChannelFactory&lt;TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanBuildChannelFactory(Of TChannel) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; virtual bool CanBuildChannelFactory(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool&#xA;override this.CanBuildChannelFactory : System.ServiceModel.Channels.BindingContext -&gt; bool" Usage="bindingElement.CanBuildChannelFactory context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="13700-131">Type de canaux généré par la fabrication de canal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-131">The type of channel the channel factory produces.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="13700-132">
            <see cref="T:System.ServiceModel.Channels.BindingContext" /> qui fournit le contexte pour l'élément de liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-132">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13700-133">Retourne une valeur qui indique si l’élément de liaison peut générer une fabrication de canal pour un type de canal spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-133">Returns a value that indicates whether the binding element can build a channel factory for a specific type of channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13700-134">
            <see langword="true" /> si l'objet <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> de type <paramref name="TChannel" /> peut être généré par l'élément de liaison ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-134">
              <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /> of type <paramref name="TChannel" /> can be built by the binding element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13700-135">Utilisez la méthode pour vous assurer que la fabrique des canaux de type `TChannel` peut être générée pour l'objet `context` fourni.</span><span class="sxs-lookup"><span data-stu-id="13700-135">Use this method if you want to check that the channel factory for channels of type `TChannel` can be build for the `context` provided before attempting to build the factory.</span></span> <span data-ttu-id="13700-136">Vous pouvez également tenter de générer la fabrique en appelant <xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A> et d'intercepter toute exception levée si la génération n'est pas possible.</span><span class="sxs-lookup"><span data-stu-id="13700-136">Alternatively, build the channel factory by calling <xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A> and catch the exception generated if it cannot be built.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEChannels#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/clientsnippets.cs#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="13700-137">
            <paramref name="context" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-137">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CanBuildChannelListener&lt;TChannel&gt;">
      <MemberSignature Language="C#" Value="public virtual bool CanBuildChannelListener&lt;TChannel&gt; (System.ServiceModel.Channels.BindingContext context) where TChannel : class, System.ServiceModel.Channels.IChannel;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanBuildChannelListener&lt;class (class System.ServiceModel.Channels.IChannel) TChannel&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanBuildChannelListener(Of TChannel As {Class, IChannel}) (context As BindingContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TChannel&gt;&#xA; where TChannel : class, System::ServiceModel::Channels::IChannel virtual bool CanBuildChannelListener(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)&#xA;override this.CanBuildChannelListener : System.ServiceModel.Channels.BindingContext -&gt; bool (requires 'Channel : null and 'Channel :&gt; System.ServiceModel.Channels.IChannel)" Usage="bindingElement.CanBuildChannelListener context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TChannel">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
            <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="TChannel">
          <span data-ttu-id="13700-138">Type de canal accepté par l'écouteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-138">The type of channel the listener accepts.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="13700-139">
            <see cref="T:System.ServiceModel.Channels.BindingContext" /> qui fournit le contexte pour l'élément de liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-139">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> that provides context for the binding element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13700-140">Retourne une valeur qui indique si l’élément de liaison peut générer un écouteur pour un type de canal spécifique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-140">Returns a value that indicates whether the binding element can build a listener for a specific type of channel.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13700-141">
            <see langword="true" /> si l'objet <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> de type <see cref="T:System.ServiceModel.Channels.IChannel" /> peut être généré par l'élément de liaison ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-141">
              <see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> of type <see cref="T:System.ServiceModel.Channels.IChannel" /> can be built by the binding element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13700-142">Utilisez la méthode pour vous assurer que l'écouteur des canaux de type `TChannel` peut être généré pour l'objet `context` fourni.</span><span class="sxs-lookup"><span data-stu-id="13700-142">Use this method if you want to check that the channel listener for channels of type `TChannel` can be build for the `context` provided before attempting to build the listener.</span></span> <span data-ttu-id="13700-143">Vous pouvez également tenter de générer l'écouteur en appelant <xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A> et d'intercepter toute exception levée si la génération n'est pas possible.</span><span class="sxs-lookup"><span data-stu-id="13700-143">Alternatively, build the channel listener by calling <xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A> and catch the exception generated if it cannot be built.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEChannels#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="13700-144">
            <paramref name="context" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-144">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.BindingElement Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.BindingElement Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.Clone" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Clone () As BindingElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Channels::BindingElement ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.ServiceModel.Channels.BindingElement" Usage="bindingElement.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BindingElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="13700-145">En cas de substitution dans une classe dérivée, retourne une copie de l’objet d’élément de liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-145">When overridden in a derived class, returns a copy of the binding element object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13700-146">Objet <see cref="T:System.ServiceModel.Channels.BindingElement" /> qui est un clone complet de l'original.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-146">A <see cref="T:System.ServiceModel.Channels.BindingElement" /> object that is a deep clone of the original.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13700-147">Implémentez la méthode <xref:System.ServiceModel.Channels.BindingElement.Clone%2A> pour retourner un clone complet de votre élément de liaison.</span><span class="sxs-lookup"><span data-stu-id="13700-147">Implement the <xref:System.ServiceModel.Channels.BindingElement.Clone%2A> method to return a deep clone of your binding element.</span></span> <span data-ttu-id="13700-148">Le renvoi d’un clone permet à l’exécution de prendre en charge le cas où plusieurs liaisons personnalisées partagent un élément de liaison personnalisé.</span><span class="sxs-lookup"><span data-stu-id="13700-148">Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.</span></span> <span data-ttu-id="13700-149">Si aucun clone n'est retourné, le comportement au moment de l'exécution n'est pas défini.</span><span class="sxs-lookup"><span data-stu-id="13700-149">If a clone is not returned, the run-time behavior is undefined.</span></span>  
  
 <span data-ttu-id="13700-150">Le clone complet d'un objet crée une copie de cet objet, ainsi qu'une copie de tous les éléments auxquels il fait référence directement ou indirectement.</span><span class="sxs-lookup"><span data-stu-id="13700-150">A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</span></span> <span data-ttu-id="13700-151">Ce processus est également appelé copie entière du graphique d'objets. Un clone superficiel d'un objet, en revanche, est une copie de l'objet uniquement.</span><span class="sxs-lookup"><span data-stu-id="13700-151">(This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only.</span></span> <span data-ttu-id="13700-152">Si l'objet contient des références à d'autres objets, la copie superficielle ne crée pas de copies des objets auxquels il est fait référence, elle ne copie que les références vers les objets d'origine.</span><span class="sxs-lookup"><span data-stu-id="13700-152">If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public abstract T GetProperty&lt;T&gt; (System.ServiceModel.Channels.BindingContext context) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetProperty&lt;class T&gt;(class System.ServiceModel.Channels.BindingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetProperty(Of T As Class) (context As BindingContext) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class abstract T GetProperty(System::ServiceModel::Channels::BindingContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : System.ServiceModel.Channels.BindingContext -&gt; 'T (requires 'T : null)" Usage="bindingElement.GetProperty context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="context" Type="System.ServiceModel.Channels.BindingContext" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="13700-153">Objet typé pour lequel la méthode effectue une requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-153">The typed object for which the method is querying.</span>
          </span>
        </typeparam>
        <param name="context">
          <span data-ttu-id="13700-154">
            <see cref="T:System.ServiceModel.Channels.BindingContext" /> correspondant à l'élément de liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-154">The <see cref="T:System.ServiceModel.Channels.BindingContext" /> for the binding element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13700-155">En cas de substitution dans une classe dérivée, retourne un objet typé demandé, s’il existe, à partir de la couche appropriée de la pile des éléments de liaison.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-155">When overridden in a derived class, returns a typed object requested, if present, from the appropriate layer in the binding stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13700-156">Objet typé <paramref name="T" /> demandé, s'il existe ; <see langword="null" /> dans le cas contraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13700-156">The typed object <paramref name="T" /> requested if it is present or <see langword="null" /> if it is not present.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13700-157">Utilisez cette option pour récupérer des fonctions, des exigences et des paramètres à partir de la pile des éléments de liaison.</span><span class="sxs-lookup"><span data-stu-id="13700-157">Use this to retrieve capabilities, requirements and parameters from the binding element stack.</span></span> <span data-ttu-id="13700-158">Si un élément de liaison prend en charge le retour de l’objet demandé, il le retourne.</span><span class="sxs-lookup"><span data-stu-id="13700-158">If a binding element supports returning the requested object, it returns it.</span></span> <span data-ttu-id="13700-159">Dans le cas contraire, il délègue l'appel à l'élément de liaison suivant dans la pile.</span><span class="sxs-lookup"><span data-stu-id="13700-159">If not, it delegates the call down to the next binding element in the stack.</span></span> <span data-ttu-id="13700-160">S'il arrive au bas de la pile et qu'aucun élément de liaison n'a pris en charge l'objet demandé, la méthode retourne alors la valeur `null`.</span><span class="sxs-lookup"><span data-stu-id="13700-160">If it gets to the bottom of the stack and no binding element supported the requested object, then the method returns `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13700-161">Si vous ajoutez les en-têtes de message à chiffrer, vous devez retourner une instance <xref:System.ServiceModel.Security.ChannelProtectionRequirements> avec vos exigences à partir de la méthode lorsque <xref:System.ServiceModel.Security.ChannelProtectionRequirements> vous est demandé.</span><span class="sxs-lookup"><span data-stu-id="13700-161">If you are adding message headers that must be encrypted you must return a <xref:System.ServiceModel.Security.ChannelProtectionRequirements> instance with your requirements from this method when asked for <xref:System.ServiceModel.Security.ChannelProtectionRequirements>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UEChannels#20](~/samples/snippets/csharp/VS_Snippets_CFX/s_uechannels/cs/servicesnippets.cs#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>