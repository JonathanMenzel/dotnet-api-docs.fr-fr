<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BindingElement.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b722e0ca89517c4246869de272c64d328dbfb50b318.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">2e0ca89517c4246869de272c64d328dbfb50b318</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The elements of the bindings that build the channel factories and channel listeners for various types of channels that are used to process outgoing and incoming messages.</source>
          <target state="translated">Éléments des liaisons qui génèrent les fabriques et les écouteurs de canal pour différents types de canaux utilisés pour traiter des messages sortants et entrants.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>A binding consists of an ordered set of binding elements that inherit from this abstract base class.</source>
          <target state="translated">Une liaison se compose d’un jeu ordonné d’éléments de liaison qui héritent de cette classe de base abstraite.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement&gt;</ph> class inherits from the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph> class.</source>
          <target state="translated">La classe <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransportBindingElement&gt;</ph> hérite de la classe <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>Creating a binding and binding element for your transport is optional if you are just using the channel model.</source>
          <target state="translated">La création d’une liaison et d’un élément de liaison relatifs au transport est facultative si vous utilisez simplement le modèle de canal.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>It is possible to do everything you need through the channel factory and listener as long as they are made public.</source>
          <target state="translated">Vous pouvez effectuer toutes les tâches dont vous avez besoin par le biais de la fabrique et de l'écouteur de canal, tant que ceux-ci sont rendus publics.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> service model uses a factory pattern where the binding is used to create the channel stack.</source>
          <target state="translated">Le modèle de service <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> utilise un modèle de fabrique où la liaison est utilisée pour créer la pile des canaux.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>If you want to use the WCF service model, then using a transport binding element is required.</source>
          <target state="translated">Si vous souhaitez utiliser le modèle de service WCF, puis à l’aide d’un élément de liaison de transport est requis.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>Placing this binding element into a binding is a good practice because it removes the requirement for users to create their own custom binding for your transport.</source>
          <target state="translated">Il est recommandé de placer cet élément dans une liaison pour que les utilisateurs n’aient pas à créer leur propre liaison personnalisée pour le transport.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>It is best to create both a binding and binding element, and hide the channel factory and listener inside the assembly.</source>
          <target state="translated">Il vaut mieux créer à la fois une liaison et un élément de liaison, et masquer la fabrique et l'écouteur de canal dans l'assembly.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>On the sending side, a binding is used to build a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph>, which in turn builds a channel stack and returns a reference to the top channel in the stack.</source>
          <target state="translated">À l'envoi, une liaison permet de générer une fabrique <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelFactory&gt;</ph> qui génère à son tour une pile de canaux et renvoie une référence au canal figurant en haut de la pile.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The application can then use this channel to send messages.</source>
          <target state="translated">L'application peut utiliser ensuite ce canal pour envoyer des messages.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>Similarly, on the receiving side a binding is used to build a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph>, which listens for incoming messages.</source>
          <target state="translated">De même, à la réception, une liaison permet de générer un objet <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> chargé d'écouter les messages entrants.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> provides messages to the listening application by creating channel stacks and handing the application a reference to the top channel.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> envoie des messages à l'application qui écoute en créant des piles de canaux et en remettant à l'application une référence au canal supérieur.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The application then uses this channel to receive incoming messages.</source>
          <target state="translated">L'application utilise ensuite ce canal pour recevoir les messages entrants.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>If you are adding message headers that must be encrypted you must return a <ph id="ph1">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph> instance with your requirements from the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29&gt;</ph> method when asked for <ph id="ph3">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph>.</source>
          <target state="translated">Si vous ajoutez les en-têtes de message à chiffrer, vous devez retourner une instance <ph id="ph1">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph> avec vos spécifications à partir de la méthode <ph id="ph2">&lt;xref:System.ServiceModel.Channels.BindingElement.GetProperty%60%601%28System.ServiceModel.Channels.BindingContext%29&gt;</ph> lorsque <ph id="ph3">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph> vous est demandé.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>The following example shows how to add a transport binding element to a custom binding and then build a channel listener that can accept incoming messages.</source>
          <target state="translated">L’exemple suivant indique comment ajouter un élément de liaison de transport à une liaison personnalisée, puis générer un écouteur de canal capable d’accepter des messages entrants.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.BindingElement">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> to be cloned.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> à cloner.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.#ctor(System.ServiceModel.Channels.BindingElement)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> class from a specified binding element.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> à partir d'un élément de liaison spécifié.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The type of channel the factory builds.</source>
          <target state="translated">Type de canal construit par la fabrique.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides context for the binding element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> qui fournit le contexte pour l'élément de liaison.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>Initializes a channel factory for producing channels of a specified type from the binding context.</source>
          <target state="translated">Initialise une fabrique de canal pour générer des canaux d’un type spécifié à partir du contexte de liaison.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph> of type <ph id="ph2">&lt;paramref name="TChannel" /&gt;</ph> initialized from the <ph id="ph3">&lt;paramref name="context" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph> de type <ph id="ph2">&lt;paramref name="TChannel" /&gt;</ph> initialisé à partir de <ph id="ph3">&lt;paramref name="context" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The type of channel the listener is built to accept.</source>
          <target state="translated">Type de canal que l'écouteur doit accepter.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides context for the binding element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> qui fournit le contexte pour l'élément de liaison.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>Initializes a channel listener to accept channels of a specified type from the binding context.</source>
          <target state="translated">Initialise un écouteur de canal pour accepter les canaux d’un type donné issus du contexte de liaison.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> initialized from the <ph id="ph3">&lt;paramref name="context" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener`1" /&gt;</ph> de type <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> initialisé à partir de <ph id="ph3">&lt;paramref name="context" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The type of channel the channel factory produces.</source>
          <target state="translated">Type de canaux généré par la fabrication de canal.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides context for the binding element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> qui fournit le contexte pour l'élément de liaison.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a value that indicates whether the binding element can build a channel factory for a specific type of channel.</source>
          <target state="translated">Retourne une valeur qui indique si l’élément de liaison peut générer une fabrication de canal pour un type de canal spécifique.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph> of type <ph id="ph3">&lt;paramref name="TChannel" /&gt;</ph> can be built by the binding element; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'objet <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannelFactory`1" /&gt;</ph> de type <ph id="ph3">&lt;paramref name="TChannel" /&gt;</ph> peut être généré par l'élément de liaison ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>Use this method if you want to check that the channel factory for channels of type <ph id="ph1">`TChannel`</ph> can be build for the <ph id="ph2">`context`</ph> provided before attempting to build the factory.</source>
          <target state="translated">Utilisez la méthode pour vous assurer que la fabrique des canaux de type <ph id="ph1">`TChannel`</ph> peut être générée pour l'objet <ph id="ph2">`context`</ph> fourni.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source>Alternatively, build the channel factory by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A&gt;</ph> and catch the exception generated if it cannot be built.</source>
          <target state="translated">Vous pouvez également tenter de générer la fabrique en appelant <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement.BuildChannelFactory%2A&gt;</ph> et d'intercepter toute exception levée si la génération n'est pas possible.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The type of channel the listener accepts.</source>
          <target state="translated">Type de canal accepté par l'écouteur.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> that provides context for the binding element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> qui fournit le contexte pour l'élément de liaison.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>Returns a value that indicates whether the binding element can build a listener for a specific type of channel.</source>
          <target state="translated">Retourne une valeur qui indique si l’élément de liaison peut générer un écouteur pour un type de canal spécifique.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener`1" /&gt;</ph> of type <ph id="ph3">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> can be built by the binding element; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'objet <ph id="ph2">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener`1" /&gt;</ph> de type <ph id="ph3">&lt;see cref="T:System.ServiceModel.Channels.IChannel" /&gt;</ph> peut être généré par l'élément de liaison ; sinon, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>Use this method if you want to check that the channel listener for channels of type <ph id="ph1">`TChannel`</ph> can be build for the <ph id="ph2">`context`</ph> provided before attempting to build the listener.</source>
          <target state="translated">Utilisez la méthode pour vous assurer que l'écouteur des canaux de type <ph id="ph1">`TChannel`</ph> peut être généré pour l'objet <ph id="ph2">`context`</ph> fourni.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source>Alternatively, build the channel listener by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A&gt;</ph> and catch the exception generated if it cannot be built.</source>
          <target state="translated">Vous pouvez également tenter de générer l'écouteur en appelant <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement.BuildChannelListener%2A&gt;</ph> et d'intercepter toute exception levée si la génération n'est pas possible.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>When overridden in a derived class, returns a copy of the binding element object.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, retourne une copie de l’objet d’élément de liaison.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> object that is a deep clone of the original.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingElement" /&gt;</ph> qui est un clone complet de l'original.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>Implement the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement.Clone%2A&gt;</ph> method to return a deep clone of your binding element.</source>
          <target state="translated">Implémentez la méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.BindingElement.Clone%2A&gt;</ph> pour retourner un clone complet de votre élément de liaison.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>Returning a clone enables the runtime to support the case in which multiple custom bindings share a custom binding element.</source>
          <target state="translated">Le renvoi d’un clone permet à l’exécution de prendre en charge le cas où plusieurs liaisons personnalisées partagent un élément de liaison personnalisé.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>If a clone is not returned, the run-time behavior is undefined.</source>
          <target state="translated">Si aucun clone n'est retourné, le comportement au moment de l'exécution n'est pas défini.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>A deep clone of an object creates a copy of the object and a copy of everything directly or indirectly referenced by that object.</source>
          <target state="translated">Le clone complet d'un objet crée une copie de cet objet, ainsi qu'une copie de tous les éléments auxquels il fait référence directement ou indirectement.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>(This is also called copying the entire object graph.) A shallow clone of an object, by contrast, is a copy of the object only.</source>
          <target state="translated">Ce processus est également appelé copie entière du graphique d'objets. Un clone superficiel d'un objet, en revanche, est une copie de l'objet uniquement.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.Clone">
          <source>If the object contains references to other objects, the shallow copy does not create copies of the referred objects; instead, it copies only the references to the original objects.</source>
          <target state="translated">Si l'objet contient des références à d'autres objets, la copie superficielle ne crée pas de copies des objets auxquels il est fait référence, elle ne copie que les références vers les objets d'origine.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The typed object for which the method is querying.</source>
          <target state="translated">Objet typé pour lequel la méthode effectue une requête.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> for the binding element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BindingContext" /&gt;</ph> correspondant à l'élément de liaison.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>When overridden in a derived class, returns a typed object requested, if present, from the appropriate layer in the binding stack.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, retourne un objet typé demandé, s’il existe, à partir de la couche appropriée de la pile des éléments de liaison.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>The typed object <ph id="ph1">&lt;paramref name="T" /&gt;</ph> requested if it is present or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if it is not present.</source>
          <target state="translated">Objet typé <ph id="ph1">&lt;paramref name="T" /&gt;</ph> demandé, s'il existe ; <ph id="ph2">&lt;see langword="null" /&gt;</ph> dans le cas contraire.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>Use this to retrieve capabilities, requirements and parameters from the binding element stack.</source>
          <target state="translated">Utilisez cette option pour récupérer des fonctions, des exigences et des paramètres à partir de la pile des éléments de liaison.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If a binding element supports returning the requested object, it returns it.</source>
          <target state="translated">Si un élément de liaison prend en charge le retour de l’objet demandé, il le retourne.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If not, it delegates the call down to the next binding element in the stack.</source>
          <target state="translated">Dans le cas contraire, il délègue l'appel à l'élément de liaison suivant dans la pile.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If it gets to the bottom of the stack and no binding element supported the requested object, then the method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">S'il arrive au bas de la pile et qu'aucun élément de liaison n'a pris en charge l'objet demandé, la méthode retourne alors la valeur <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.BindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
          <source>If you are adding message headers that must be encrypted you must return a <ph id="ph1">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph> instance with your requirements from this method when asked for <ph id="ph2">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph>.</source>
          <target state="translated">Si vous ajoutez les en-têtes de message à chiffrer, vous devez retourner une instance <ph id="ph1">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph> avec vos spécifications à partir de la méthode lorsque <ph id="ph2">&lt;xref:System.ServiceModel.Security.ChannelProtectionRequirements&gt;</ph> vous est demandé.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>