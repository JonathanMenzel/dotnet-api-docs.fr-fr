<Type Name="SupportedAddressingMode" FullName="System.ServiceModel.Channels.SupportedAddressingMode">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1ae63748c67f545e380dccbb2d4ab05c995bd875" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37460095" /></Metadata><TypeSignature Language="C#" Value="public enum SupportedAddressingMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SupportedAddressingMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.SupportedAddressingMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum SupportedAddressingMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class SupportedAddressingMode" />
  <TypeSignature Language="F#" Value="type SupportedAddressingMode = " />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="6925c-101">Spécifie si un service prend en charge l'envoi de réponses à des adresses anonymes uniquement, à des adresses non anonymes uniquement, ou les deux.</span><span class="sxs-lookup"><span data-stu-id="6925c-101">Specifies whether a service supports sending responses to anonymous addresses only, to non-anonymous addresses only, or to both.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6925c-102">Cette énumération est utilisée pour spécifier la fonctionnalité d’un serveur qui, à son tour, impose une exigence à ses clients.</span><span class="sxs-lookup"><span data-stu-id="6925c-102">This enumeration is used to specify the capability of a server, which, in turn, imposes a requirement on its clients.</span></span>  
  
 <span data-ttu-id="6925c-103">Windows Communication Foundation (WCF) a divers contrôles d’adressage pour spécifier où les messages doivent être envoyés.</span><span class="sxs-lookup"><span data-stu-id="6925c-103">Windows Communication Foundation (WCF) has a variety of addressing controls for specifying where messages should be sent.</span></span> <span data-ttu-id="6925c-104">Par exemple, l'adresse logique <xref:System.ServiceModel.Channels.MessageHeaders.To%2A> pour la destination des message ; l'adresse physique ("Via"), utilisée par le transport, qu'un service écoute ; et enfin, l'adresse <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> du point de terminaison qui fournit l'adresse du point de terminaison du client.</span><span class="sxs-lookup"><span data-stu-id="6925c-104">For example, there is the logical <xref:System.ServiceModel.Channels.MessageHeaders.To%2A> address for the message destination, the physical ("Via") address, used by the transport, at which a service listens, and the <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> address of the endpoint that provides the address of the client endpoint.</span></span>  
  
 <span data-ttu-id="6925c-105">Dans le cas le plus élémentaire, lorsque deux parties échangent des messages entre elles seulement, il n'est pas nécessaire de spécifier ces adresses séparément.</span><span class="sxs-lookup"><span data-stu-id="6925c-105">In the most basic case, when two parties exchange messages between themselves only, it is not necessary to specify these addresses separately.</span></span> <span data-ttu-id="6925c-106">Mais du fait que des échanges peuvent impliquer d'autres destinations de message, vous devez être en mesure de spécifier quand des adresses doivent être fournies explicitement.</span><span class="sxs-lookup"><span data-stu-id="6925c-106">But because exchanges can involve other message destinations, you must be able to specify when addresses must be explicitly provided.</span></span> <span data-ttu-id="6925c-107">Y compris entre deux parties seulement, cette fonctionnalité est parfois requise, comme c'est le cas, par exemple, avec le protocole double HTTP, qui implique que le serveur crée sa propre requête HTTP.</span><span class="sxs-lookup"><span data-stu-id="6925c-107">Even between just two parties this ability is sometimes required, as with dual HTTP where the server must create its own HTTP request.</span></span> <span data-ttu-id="6925c-108">Les types de relations suivants sont définis par l'énumération <xref:System.ServiceModel.Channels.SupportedAddressingMode> pour capturer ces modèles de messagerie:</span><span class="sxs-lookup"><span data-stu-id="6925c-108">The following kinds of relationships are defined by the <xref:System.ServiceModel.Channels.SupportedAddressingMode> enumeration to capture these messaging patterns:</span></span>  
  
-   <span data-ttu-id="6925c-109">Les adresses anonymes sont la forme la plus basique d’adressage.</span><span class="sxs-lookup"><span data-stu-id="6925c-109">Anonymous addresses are the most basic form of addressing.</span></span> <span data-ttu-id="6925c-110">L’adressage anonyme est utilisé lorsqu’il existe un chemin par défaut pour une réponse.</span><span class="sxs-lookup"><span data-stu-id="6925c-110">Anonymous addressing is used when there is a default path for a response.</span></span> <span data-ttu-id="6925c-111">TCP est un protocole de transport de communication bidirectionnelle et la réponse à un message TCP peut être renvoyée à l'autre côté du socket qui a envoyé le message d'origine.</span><span class="sxs-lookup"><span data-stu-id="6925c-111">TCP is a bi-directional communication transport and the response to a TCP message can be sent back to the other side of the socket that sent the original message.</span></span> <span data-ttu-id="6925c-112">De la même façon, le modèle de requête-réponse HTTP envoie des réponses par le biais du canal de réponse HTTP.</span><span class="sxs-lookup"><span data-stu-id="6925c-112">Similarly, the request-reply model of HTTP sends responses through the HTTP reply channel.</span></span> <span data-ttu-id="6925c-113">Ni l'une ni l'autre de ces réponses ne requiert la spécification de la destination des messages de réponse.</span><span class="sxs-lookup"><span data-stu-id="6925c-113">Neither of these responses requires specifying where the response messages are going.</span></span> <span data-ttu-id="6925c-114">Lorsqu’un serveur requiert des réponses anonymes du client, il utilise la valeur anonyme de l’énumération.</span><span class="sxs-lookup"><span data-stu-id="6925c-114">When a server requires anonymous responses from the client, it uses the Anonymous value of the enumeration.</span></span> <span data-ttu-id="6925c-115">WCF fournie par le système <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.BasicHttpBinding> et <xref:System.ServiceModel.WSHttpBinding> liaisons utilisent toujours des adresses anonymes.</span><span class="sxs-lookup"><span data-stu-id="6925c-115">The WCF system-provided <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.BasicHttpBinding> and <xref:System.ServiceModel.WSHttpBinding> bindings always use Anonymous addresses.</span></span>  
  
-   <span data-ttu-id="6925c-116">Les adresses non anonymes sont utilisées lors de l’envoi de la réponse requiert la création d’un nouveau canal de communication.</span><span class="sxs-lookup"><span data-stu-id="6925c-116">NonAnonymous addresses are used when sending the response requires creating a new channel for communication.</span></span> <span data-ttu-id="6925c-117">WCF fournie par le système <xref:System.ServiceModel.WSDualHttpBinding> liaison utilise une adresse non anonymes.</span><span class="sxs-lookup"><span data-stu-id="6925c-117">The WCF system-provided <xref:System.ServiceModel.WSDualHttpBinding> binding uses a NonAnonymous address.</span></span> <span data-ttu-id="6925c-118">Avec HTTP double, le client crée une requête HTTP pour envoyer un message, puis le serveur doit créer sa propre requête HTTP pour envoyer une réponse.</span><span class="sxs-lookup"><span data-stu-id="6925c-118">With dual HTTP, the client creates an HTTP request to send a message and then the server must create its own HTTP request to send a response.</span></span> <span data-ttu-id="6925c-119">Du fait que le serveur initialise l'envoi, il doit avoir un point de terminaison spécifique pour établir la connexion.</span><span class="sxs-lookup"><span data-stu-id="6925c-119">Because the server is initiating the send, it must have a specific endpoint to establish the connection.</span></span> <span data-ttu-id="6925c-120">Vous devez fournir au serveur l'adresse d'un point de terminaison pour sa réponse.</span><span class="sxs-lookup"><span data-stu-id="6925c-120">You must provide the server the address of an endpoint for its response.</span></span> <span data-ttu-id="6925c-121">De même, si un service doit répondre à un message unidirectionnel qu’il a reçue, elle requiert également un non adresse, car aucun canal arrière n’est disponible pour la communication.</span><span class="sxs-lookup"><span data-stu-id="6925c-121">Similarly, if a service must respond to a one-way message that it received, it also requires a NonAnonymous address because there is no back channel available for communication.</span></span> <span data-ttu-id="6925c-122">Si le serveur renvoie un message, une opération complètement distincte de celle utilisée pour envoyer le premier message est requise.</span><span class="sxs-lookup"><span data-stu-id="6925c-122">If the server sends a message back, a completely separate operation from that used to send the first message is required.</span></span>  
  
-   <span data-ttu-id="6925c-123">Mixte est la troisième forme d’adressage qui combine les adresses anonymes et non en fonction du message est envoyé.</span><span class="sxs-lookup"><span data-stu-id="6925c-123">Mixed is a third form of addressing which combines Anonymous and NonAnonymous addresses depending on the message that is being sent.</span></span> <span data-ttu-id="6925c-124">Un exemple typique d'adressage en mode mixte consiste en l'utilisation d'un ordinateur dédié pour traiter les messages d'erreur ou d'accusé de réception.</span><span class="sxs-lookup"><span data-stu-id="6925c-124">A typical example of mixed-mode addressing is the use of a dedicated machine for processing fault or acknowledgment messages.</span></span> <span data-ttu-id="6925c-125">Si la séquence d’exchange standard pour les réponses est HTTP ou TCP, les réponses utilisent l’adressage anonyme, mais les erreurs utilisent l’adressage non anonyme.</span><span class="sxs-lookup"><span data-stu-id="6925c-125">If the standard exchange sequence for replies is HTTP or TCP, the responses use Anonymous addressing but the faults use non-anonymous addressing.</span></span> <span data-ttu-id="6925c-126">Bien que WCF ne fournisse pas mixte fonctionnalité dans un de ses liaisons standards d’adressage, il est possible d’écrire un canal qui permet au service d’envoyer des réponses directement sur le canal arrière (lorsque l’adresse de réponse est anonyme) ou sur un canal distinct (lorsque l’adresse de réponse est non).</span><span class="sxs-lookup"><span data-stu-id="6925c-126">While WCF does not provide Mixed addressing functionality in one of its standard bindings, it is possible to write a channel that allows the service to send responses directly on the back-channel (when the response address is Anonymous) or on a separate channel (when the response address is NonAnonymous).</span></span> <span data-ttu-id="6925c-127">Dans ce cas, l’élément de liaison du canal est utilisé pour définir <xref:System.ServiceModel.Channels.SupportedAddressingMode> Mixed.</span><span class="sxs-lookup"><span data-stu-id="6925c-127">In such a case, the binding element of the channel is used to set <xref:System.ServiceModel.Channels.SupportedAddressingMode> to Mixed.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Anonymous">
      <MemberSignature Language="C#" Value="Anonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Anonymous = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Anonymous" />
      <MemberSignature Language="VB.NET" Value="Anonymous" />
      <MemberSignature Language="C++ CLI" Value="Anonymous" />
      <MemberSignature Language="F#" Value="Anonymous = 0" Usage="System.ServiceModel.Channels.SupportedAddressingMode.Anonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6925c-128">Le serveur prend uniquement en charge les adresses anonymes et les clients doivent fournir une adresse de réponse anonyme.</span><span class="sxs-lookup"><span data-stu-id="6925c-128">The server only supports anonymous addresses and clients must provide an anonymous response address.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Mixed">
      <MemberSignature Language="C#" Value="Mixed" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode Mixed = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.Mixed" />
      <MemberSignature Language="VB.NET" Value="Mixed" />
      <MemberSignature Language="C++ CLI" Value="Mixed" />
      <MemberSignature Language="F#" Value="Mixed = 2" Usage="System.ServiceModel.Channels.SupportedAddressingMode.Mixed" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6925c-129">Le serveur prend en charge les adresses anonymes et non anonymes, et les clients peuvent choisir d'utiliser l'un ou l'autre mode, ou les deux.</span><span class="sxs-lookup"><span data-stu-id="6925c-129">The server supports both anonymous and non-anonymous addresses and clients may choose to use either or both.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="NonAnonymous">
      <MemberSignature Language="C#" Value="NonAnonymous" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.ServiceModel.Channels.SupportedAddressingMode NonAnonymous = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous" />
      <MemberSignature Language="VB.NET" Value="NonAnonymous" />
      <MemberSignature Language="C++ CLI" Value="NonAnonymous" />
      <MemberSignature Language="F#" Value="NonAnonymous = 1" Usage="System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.SupportedAddressingMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="6925c-130">Le serveur prend uniquement en charge les adresses non anonymes et les clients doivent fournir une adresse de réponse non anonyme.</span><span class="sxs-lookup"><span data-stu-id="6925c-130">The server only supports non-anonymous addresses and clients must provide a non-anonymous response address.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>