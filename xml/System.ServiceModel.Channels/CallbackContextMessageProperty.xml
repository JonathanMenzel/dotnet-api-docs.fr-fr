<Type Name="CallbackContextMessageProperty" FullName="System.ServiceModel.Channels.CallbackContextMessageProperty">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="981be213c7d05c1bdc0a54f618389adda1afe98e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30506113" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CallbackContextMessageProperty : System.ServiceModel.Channels.IMessageProperty" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit CallbackContextMessageProperty extends System.Object implements class System.ServiceModel.Channels.IMessageProperty" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.CallbackContextMessageProperty" />
  <TypeSignature Language="VB.NET" Value="Public Class CallbackContextMessageProperty&#xA;Implements IMessageProperty" />
  <TypeSignature Language="C++ CLI" Value="public ref class CallbackContextMessageProperty : System::ServiceModel::Channels::IMessageProperty" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IMessageProperty</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Représente le contenu de l'en-tête de message <see langword="wsc:CallbackContext" /> lors de l'utilisation d'un canal qui prend en charge le protocole d'échange de contexte.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le protocole d'échange de contexte permet la communication duplex entre des services fiables.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallbackContextMessageProperty (System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallbackContextMessageProperty(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="context">Informations contenues dans le message, identifiables par le client, et instance du service entre lesquelles la communication a lieu.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> avec le contexte spécifié.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallbackContextMessageProperty (System.ServiceModel.EndpointAddress callbackAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress callbackAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (callbackAddress As EndpointAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallbackContextMessageProperty(System::ServiceModel::EndpointAddress ^ callbackAddress);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callbackAddress" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="callbackAddress">Adresse de rappel.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> avec le <see cref="T:System.ServiceModel.EndpointAddress" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'adresse de rappel est l'adresse du point de terminaison que le service utilise pour rappeler le client.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallbackContextMessageProperty (System.ServiceModel.EndpointAddress listenAddress, System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress listenAddress, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.ServiceModel.EndpointAddress,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (listenAddress As EndpointAddress, context As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallbackContextMessageProperty(System::ServiceModel::EndpointAddress ^ listenAddress, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="listenAddress" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="listenAddress">Adresse de point de terminaison à laquelle le client écoute.</param>
        <param name="context">Informations contenues dans le message, identifiables par le client, et instance du service entre lesquelles la communication a lieu.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> avec l'objet <see cref="T:System.ServiceModel.EndpointAddress" /> spécifié et un objet <see cref="T:System.Collections.Generic.IDictionary`2" /> qui contient des informations de contexte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les informations de contexte peuvent inclure des informations d'instance cliente et de conversation.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallbackContextMessageProperty (string listenAddress, System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string listenAddress, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (listenAddress As String, context As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallbackContextMessageProperty(System::String ^ listenAddress, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="listenAddress" Type="System.String" />
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="listenAddress">Adresse de point de terminaison à laquelle le client écoute.</param>
        <param name="context">Informations contenues dans le message, identifiables par le client, et instance du service entre lesquelles la communication a lieu.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> avec l'adresse d'écoute et les informations de contexte spécifiées.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CallbackContextMessageProperty (Uri listenAddress, System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Uri listenAddress, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (listenAddress As Uri, context As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CallbackContextMessageProperty(Uri ^ listenAddress, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="listenAddress" Type="System.Uri" />
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="listenAddress">Adresse de point de terminaison à laquelle le client écoute.</param>
        <param name="context">Informations contenues dans le message, identifiables par le client, et instance du service entre lesquelles la communication a lieu.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> avec l'adresse d'écoute et les informations de contexte spécifiées.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrReplaceInMessage">
      <MemberSignature Language="C#" Value="public void AddOrReplaceInMessage (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOrReplaceInMessage(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessage(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOrReplaceInMessage(System::ServiceModel::Channels::Message ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">Message pour ajouter ou remplacer la propriété de message de contexte de rappel.</param>
        <summary>Ajoute ou remplace l'instance <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> actuelle dans le message spécifié.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrReplaceInMessageProperties">
      <MemberSignature Language="C#" Value="public void AddOrReplaceInMessageProperties (System.ServiceModel.Channels.MessageProperties properties);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddOrReplaceInMessageProperties(class System.ServiceModel.Channels.MessageProperties properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessageProperties(System.ServiceModel.Channels.MessageProperties)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddOrReplaceInMessageProperties (properties As MessageProperties)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddOrReplaceInMessageProperties(System::ServiceModel::Channels::MessageProperties ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.ServiceModel.Channels.MessageProperties" />
      </Parameters>
      <Docs>
        <param name="properties">Collection de propriétés de message à laquelle ajouter la propriété de message de contexte de rappel.</param>
        <summary>Ajoute ou remplace l'instance <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> actuelle dans la collection de propriétés de message spécifiée.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallbackAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress CallbackAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress CallbackAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CallbackAddress As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ CallbackAddress { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'adresse de rappel.</summary>
        <value>Objet <see cref="T:System.ServiceModel.EndpointAddress" /> qui contient l'adresse de rappel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'adresse de rappel est l'adresse du point de terminaison que le serveur utilise pour appeler le client.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Context" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.CallbackContextMessageProperty.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Context { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le contexte associé à l'objet <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" />.</summary>
        <value>Contexte.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCallbackAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress CreateCallbackAddress (Uri listenAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.EndpointAddress CreateCallbackAddress(class System.Uri listenAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCallbackAddress(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCallbackAddress (listenAddress As Uri) As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::EndpointAddress ^ CreateCallbackAddress(Uri ^ listenAddress);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listenAddress" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="listenAddress">URI d'écoute.</param>
        <summary>Fusionne le <paramref name="listenAddress" /> du client et son contexte dans une adresse de rappel unique envoyée au service.</summary>
        <returns>Instance de <see cref="T:System.ServiceModel.EndpointAddress" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCopy">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.IMessageProperty CreateCopy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.IMessageProperty CreateCopy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCopy" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateCopy () As IMessageProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::ServiceModel::Channels::IMessageProperty ^ CreateCopy();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ServiceModel.Channels.IMessageProperty.CreateCopy</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IMessageProperty</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée une copie de l'instance <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" />.</summary>
        <returns>Copie de l'instance <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetListenAddressAndContext">
      <MemberSignature Language="C#" Value="public void GetListenAddressAndContext (out System.ServiceModel.EndpointAddress listenAddress, out System.Collections.Generic.IDictionary&lt;string,string&gt; context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetListenAddressAndContext([out] class System.ServiceModel.EndpointAddress&amp; listenAddress, [out] class System.Collections.Generic.IDictionary`2&lt;string, string&gt;&amp; context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.GetListenAddressAndContext(System.ServiceModel.EndpointAddress@,System.Collections.Generic.IDictionary{System.String,System.String}@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetListenAddressAndContext (ByRef listenAddress As EndpointAddress, ByRef context As IDictionary(Of String, String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetListenAddressAndContext([Runtime::InteropServices::Out] System::ServiceModel::EndpointAddress ^ % listenAddress, [Runtime::InteropServices::Out] System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ % context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listenAddress" Type="System.ServiceModel.EndpointAddress&amp;" RefType="out" />
        <Parameter Name="context" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="listenAddress">Référence pour stocker l'adresse d'écoute.</param>
        <param name="context">Informations contenues dans le message, identifiables par le client, et instance du service entre lesquelles la communication a lieu.</param>
        <summary>Obtient l'adresse d'écoute et les données de contexte de l'instance <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public static string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string Name" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.CallbackContextMessageProperty.Name" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom de la propriété pour la classe <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" />.</summary>
        <value>Nom de la propriété.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGet">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Essaie d'obtenir une instance <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGet">
      <MemberSignature Language="C#" Value="public static bool TryGet (System.ServiceModel.Channels.Message message, out System.ServiceModel.Channels.CallbackContextMessageProperty contextMessageProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGet(class System.ServiceModel.Channels.Message message, [out] class System.ServiceModel.Channels.CallbackContextMessageProperty&amp; contextMessageProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.CallbackContextMessageProperty@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGet(System::ServiceModel::Channels::Message ^ message, [Runtime::InteropServices::Out] System::ServiceModel::Channels::CallbackContextMessageProperty ^ % contextMessageProperty);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="contextMessageProperty" Type="System.ServiceModel.Channels.CallbackContextMessageProperty&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="message">Message à partir duquel obtenir la propriété de message de contexte de rappel.</param>
        <param name="contextMessageProperty">Référence pour stocker l'instance de propriété de message de contexte de rappel.</param>
        <summary>Essaie d'obtenir une instance <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> dans le message spécifié.</summary>
        <returns>
          <see langword="true" /> si la propriété de message de contexte de rappel est récupérée avec succès ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGet">
      <MemberSignature Language="C#" Value="public static bool TryGet (System.ServiceModel.Channels.MessageProperties properties, out System.ServiceModel.Channels.CallbackContextMessageProperty contextMessageProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryGet(class System.ServiceModel.Channels.MessageProperties properties, [out] class System.ServiceModel.Channels.CallbackContextMessageProperty&amp; contextMessageProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.CallbackContextMessageProperty@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryGet (properties As MessageProperties, ByRef contextMessageProperty As CallbackContextMessageProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryGet(System::ServiceModel::Channels::MessageProperties ^ properties, [Runtime::InteropServices::Out] System::ServiceModel::Channels::CallbackContextMessageProperty ^ % contextMessageProperty);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.ServiceModel.Channels.MessageProperties" />
        <Parameter Name="contextMessageProperty" Type="System.ServiceModel.Channels.CallbackContextMessageProperty&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="properties">Collection de propriétés de message à partir de laquelle obtenir la propriété de message de contexte de rappel.</param>
        <param name="contextMessageProperty">Référence pour stocker l'instance de propriété de message de contexte de rappel.</param>
        <summary>Essaie d'obtenir une instance <see cref="T:System.ServiceModel.Channels.CallbackContextMessageProperty" /> à partir des propriétés du message spécifié.</summary>
        <returns>
          <see langword="true" /> si la propriété de message de contexte de rappel est récupérée avec succès ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>