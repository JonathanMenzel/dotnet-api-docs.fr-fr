<Type Name="MessageEncoder" FullName="System.ServiceModel.Channels.MessageEncoder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c4f68746124325a412b502893ae3e70b48800a74" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37460770" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MessageEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MessageEncoder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.MessageEncoder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MessageEncoder" />
  <TypeSignature Language="C++ CLI" Value="public ref class MessageEncoder abstract" />
  <TypeSignature Language="F#" Value="type MessageEncoder = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7018d-101">L'encodeur est le composant utilisé pour écrire des messages dans un flux de données et lire des messages à partir d'un flux de données.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7018d-101">The encoder is the component that is used to write messages to a stream and to read messages from a stream.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7018d-102"><xref:System.ServiceModel.Channels.MessageEncoder> est une classe de base qui fournit des implémentations prenant en charge une version de message et un type de contenu MIME (Multipurpose Internet Mail Extensions), et qui définit l'interface de sérialisation et désérialisation de messages selon ce type de contenu.</span><span class="sxs-lookup"><span data-stu-id="7018d-102"><xref:System.ServiceModel.Channels.MessageEncoder> is a base class that provides implementations that support a Multipurpose Internet Mail Extensions (MIME) content type and message version, and defines the interface for the serialization and deserialization of messages according to that content type.</span></span> <span data-ttu-id="7018d-103">Utilisez-la comme classe de base pour écrire votre propre encodeur personnalisé.</span><span class="sxs-lookup"><span data-stu-id="7018d-103">Use it as a base class for writing your own custom encoder.</span></span>  
  
 <span data-ttu-id="7018d-104">Utilisez cette classe si vous souhaitez implémenter un encodeur de message personnalisé.</span><span class="sxs-lookup"><span data-stu-id="7018d-104">Use this class if you want to implement a custom message encoder.</span></span> <span data-ttu-id="7018d-105">Pour implémenter votre propre encodeur de message personnalisé, vous devez fournir des implémentations personnalisées des classes de base abstraites suivantes :</span><span class="sxs-lookup"><span data-stu-id="7018d-105">To implement your own custom message encoder, you must provide custom implementations of the following abstract base classes:</span></span>  
  
-   <xref:System.ServiceModel.Channels.MessageEncodingBindingElement>  
  
-   <xref:System.ServiceModel.Channels.MessageEncoderFactory>  
  
-   <xref:System.ServiceModel.Channels.MessageEncoder>  
  
 <span data-ttu-id="7018d-106">Substituez <xref:System.ServiceModel.Channels.MessageEncoderFactory.Encoder%2A> pour retourner une instance de votre <xref:System.ServiceModel.Channels.MessageEncoder> personnalisé.</span><span class="sxs-lookup"><span data-stu-id="7018d-106">Override the <xref:System.ServiceModel.Channels.MessageEncoderFactory.Encoder%2A> to return an instance of your custom <xref:System.ServiceModel.Channels.MessageEncoder>.</span></span> <span data-ttu-id="7018d-107">Puis rattachez votre <xref:System.ServiceModel.Channels.MessageEncoderFactory> personnalisé à la pile d'élément de liaison utilisée pour configurer le service ou le client en substituant la méthode <xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A> pour retourner une instance de cette fabrique.</span><span class="sxs-lookup"><span data-stu-id="7018d-107">Then wire up your custom <xref:System.ServiceModel.Channels.MessageEncoderFactory> to the binding element stack used to configure the service or client by overriding the <xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A> method to return an instance of this factory.</span></span>  
  
 <span data-ttu-id="7018d-108">La tâche de conversion entre la représentation en mémoire d'un message et une représentation Infoset (Information Set) XML qui peuvent être écrites dans un flux de données est encapsulée dans la classe <xref:System.ServiceModel.Channels.MessageEncoder>, qui sert généralement de fabrique pour les lecteurs et writers XML qui prennent en charge des types d'encodages XML spécifiques.</span><span class="sxs-lookup"><span data-stu-id="7018d-108">The task of converting between the in-memory representation of a message and an XML Information Set (Infoset) representation that can be written to a stream is encapsulated within the <xref:System.ServiceModel.Channels.MessageEncoder> class, which most commonly serves as a factory for XML readers and XML writers that support specific types of XML encodings.</span></span>  
  
 <span data-ttu-id="7018d-109">Les principales méthodes sur l'objet <xref:System.ServiceModel.Channels.MessageEncoder> sont <xref:System.ServiceModel.Channels.MessageEncoder.WriteMessage%2A> et <xref:System.ServiceModel.Channels.MessageEncoder.ReadMessage%2A>.</span><span class="sxs-lookup"><span data-stu-id="7018d-109">The key methods on <xref:System.ServiceModel.Channels.MessageEncoder> are <xref:System.ServiceModel.Channels.MessageEncoder.WriteMessage%2A> and <xref:System.ServiceModel.Channels.MessageEncoder.ReadMessage%2A>.</span></span> <span data-ttu-id="7018d-110">La méthode <xref:System.ServiceModel.Channels.MessageEncoder.WriteMessage%2A> accepte un objet <xref:System.ServiceModel.Channels.Message> et l'écrit dans un objet <xref:System.IO.Stream>.</span><span class="sxs-lookup"><span data-stu-id="7018d-110"><xref:System.ServiceModel.Channels.MessageEncoder.WriteMessage%2A> takes a <xref:System.ServiceModel.Channels.Message> object and writes it into a <xref:System.IO.Stream> object.</span></span> <span data-ttu-id="7018d-111">La méthode <xref:System.ServiceModel.Channels.MessageEncoder.ReadMessage%2A> accepte un objet <xref:System.IO.Stream> et une taille d'en-tête maximale et retourne un objet <xref:System.ServiceModel.Channels.Message>.</span><span class="sxs-lookup"><span data-stu-id="7018d-111"><xref:System.ServiceModel.Channels.MessageEncoder.ReadMessage%2A> takes a <xref:System.IO.Stream> object and a maximum header size and returns a <xref:System.ServiceModel.Channels.Message> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7018d-112">Le code suivant constitue un exemple de classe dérivée de <xref:System.ServiceModel.Channels.MessageEncoder>.</span><span class="sxs-lookup"><span data-stu-id="7018d-112">The following code shows an example of a class that is derived from <xref:System.ServiceModel.Channels.MessageEncoder>.</span></span>  
  
 [!code-csharp[S_UE_CustomTextMessageEncoder#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_customtextmessageencoder/cs/customtextmessageencoder.cs#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MessageEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageEncoder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MessageEncoder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7018d-113">Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.MessageEncoder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-113">Initializes a new instance of the <see cref="T:System.ServiceModel.Channels.MessageEncoder" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWriteMessage">
      <MemberSignature Language="C#" Value="public virtual IAsyncResult BeginWriteMessage (System.ServiceModel.Channels.Message message, System.IO.Stream stream, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginWriteMessage(class System.ServiceModel.Channels.Message message, class System.IO.Stream stream, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageEncoder.BeginWriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IAsyncResult ^ BeginWriteMessage(System::ServiceModel::Channels::Message ^ message, System::IO::Stream ^ stream, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginWriteMessage : System.ServiceModel.Channels.Message * System.IO.Stream * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.BeginWriteMessage : System.ServiceModel.Channels.Message * System.IO.Stream * AsyncCallback * obj -&gt; IAsyncResult" Usage="messageEncoder.BeginWriteMessage (message, stream, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="7018d-114">Message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-114">The message.</span>
          </span>
        </param>
        <param name="stream">
          <span data-ttu-id="7018d-115">flux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-115">The stream.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="7018d-116">Rappel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-116">The callback.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="7018d-117">État.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-117">The state.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7018d-118">Démarre l'écriture du message pour l'encodeur de message avec le message, le flux de données, le rappel et l'état spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-118">Starts the writing of message for the message encoder with specified message, stream, callback and state.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7018d-119">Résultat asynchrone de l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-119">The asynchronous result of the operation.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentType">
      <MemberSignature Language="C#" Value="public abstract string ContentType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContentType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MessageEncoder.ContentType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property ContentType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ContentType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentType : string" Usage="System.ServiceModel.Channels.MessageEncoder.ContentType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7018d-120">En cas de substitution dans une classe dérivée, obtient le type de contenu MIME utilisé par l'encodeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-120">When overridden in a derived class, gets the MIME content type used by the encoder.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7018d-121">Type de contenu pris en charge par l'encodeur de message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-121">The content type that is supported by the message encoder.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7018d-122">Le type de contenu est un en-tête MIME (Multipurpose Internet Mail Exchange) qui apparaît au début d'un message MIME ainsi que dans les corps distincts.</span><span class="sxs-lookup"><span data-stu-id="7018d-122">The content type is a Multipurpose Internet Mail Exchange (MIME) header that appears at the beginning of a MIME message as well as within the separate body parts.</span></span> <span data-ttu-id="7018d-123">Les en-têtes content-type sont utilisés pour spécifier complètement le type de média et le sous-type de données dans le corps d'un message et pour spécifier l'encodage de caractères (facultatif) des données.</span><span class="sxs-lookup"><span data-stu-id="7018d-123">Content-type headers are used to specify the media type and subtype of data in the body of a message and to fully specify the media type and subtype of data in the body of a message and to specify the character encoding (optional) of the data.</span></span> <span data-ttu-id="7018d-124">Un exemple d’un MIME content type pouvant être pris en charge : « application/soap + xml ; CharSet = 'utf8' ».</span><span class="sxs-lookup"><span data-stu-id="7018d-124">An example of a MIME content type that can be supported: "application/soap+xml; charset=’utf8’".</span></span>  
  
 <span data-ttu-id="7018d-125">Une grammaire qui détaille la syntaxe de l’en-tête content-type est décrite dans [RFC 2045](http://go.microsoft.com/fwlink/?LinkId=95945), Section 5.1.</span><span class="sxs-lookup"><span data-stu-id="7018d-125">A grammar that details the syntax of the content-type header is described in [RFC 2045](http://go.microsoft.com/fwlink/?LinkId=95945), Section 5.1.</span></span> <span data-ttu-id="7018d-126">[RFC 2046](http://go.microsoft.com/fwlink/?LinkId=95944) fournit des informations détaillées sur les types de média MIME et leurs paramètres.</span><span class="sxs-lookup"><span data-stu-id="7018d-126">[RFC 2046](http://go.microsoft.com/fwlink/?LinkId=95944) provides detailed information on MIME media types and their parameters.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_CustomTextMessageEncoder#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_customtextmessageencoder/cs/customtextmessageencoder.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndWriteMessage">
      <MemberSignature Language="C#" Value="public virtual void EndWriteMessage (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndWriteMessage(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageEncoder.EndWriteMessage(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndWriteMessage (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndWriteMessage(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndWriteMessage : IAsyncResult -&gt; unit&#xA;override this.EndWriteMessage : IAsyncResult -&gt; unit" Usage="messageEncoder.EndWriteMessage result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="7018d-127">Résultat de l'opération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-127">The result of the operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7018d-128">Met fin à l'écriture de messages pour l'auteur du code de message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-128">Ends the writing of messages for the message encoder.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public virtual T GetProperty&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance !!T GetProperty&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageEncoder.GetProperty``1" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetProperty(Of T As Class) () As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class virtual T GetProperty();" />
      <MemberSignature Language="F#" Value="abstract member GetProperty : unit -&gt; 'T (requires 'T : null)&#xA;override this.GetProperty : unit -&gt; 'T (requires 'T : null)" Usage="messageEncoder.GetProperty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="7018d-129">Objet typé pour lequel la méthode effectue une requête.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-129">The typed object for which the method is querying.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="7018d-130">Retourne un objet typé demandé (s'il existe) à partir de la couche appropriée dans la pile de canaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-130">Returns a typed object requested, if present, from the appropriate layer in the channel stack.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7018d-131">Objet typé <paramref name="T" /> demandé, s'il existe ; sinon <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-131">The typed object <paramref name="T" /> requested if it is present or <see langword="null" /> if it is not.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7018d-132">Utilisez cette méthode pour demander un objet typé tel qu'une interface pour définir des propriétés ou obtenir l'état de la couche appropriée dans la pile de canaux.</span><span class="sxs-lookup"><span data-stu-id="7018d-132">Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack.</span></span> <span data-ttu-id="7018d-133">Si une couche prend en charge le retour de l'objet demandé, elle le retourne.</span><span class="sxs-lookup"><span data-stu-id="7018d-133">If a layer supports returning the requested object, it returns it.</span></span> <span data-ttu-id="7018d-134">Sinon, elle délègue l'appel à la couche suivante dans la pile.</span><span class="sxs-lookup"><span data-stu-id="7018d-134">If not, it delegates the call down to the next layer in the stack.</span></span> <span data-ttu-id="7018d-135">Si elle arrive au bas de la pile et qu'aucune couche de canal n'a pris en charge l'objet demandé, la méthode retourne `null`.</span><span class="sxs-lookup"><span data-stu-id="7018d-135">If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContentTypeSupported">
      <MemberSignature Language="C#" Value="public virtual bool IsContentTypeSupported (string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsContentTypeSupported(string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsContentTypeSupported (contentType As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsContentTypeSupported(System::String ^ contentType);" />
      <MemberSignature Language="F#" Value="abstract member IsContentTypeSupported : string -&gt; bool&#xA;override this.IsContentTypeSupported : string -&gt; bool" Usage="messageEncoder.IsContentTypeSupported contentType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contentType">
          <span data-ttu-id="7018d-136">Valeur content-type au niveau du message qui est testée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-136">The message-level content-type being tested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7018d-137">Retourne une valeur qui indique si une valeur content-type au niveau du message spécifiée est prise en charge par l'encodeur de message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-137">Returns a value that indicates whether a specified message-level content-type value is supported by the message encoder.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7018d-138">
            <see langword="true" /> si la valeur content-type au niveau du message spécifiée est prise en charge ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-138">
              <see langword="true" /> if the message-level content-type specified is supported; otherwise <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7018d-139">Cette méthode permet de déterminer si l'encodeur de message permet de lire un type de message donné, d'après sa valeur « content-type ».</span><span class="sxs-lookup"><span data-stu-id="7018d-139">This method is used to determine whether the message encoder can be used to read a particular style of message, based on its content-type.</span></span> <span data-ttu-id="7018d-140">Les informations dans la classe <xref:System.Net.Mime.ContentType> sont utilisées pour décrire les données qui sont contenues dans un message et déterminer s'il existe une correspondance d'en-tête content-type.</span><span class="sxs-lookup"><span data-stu-id="7018d-140">The information in the <xref:System.Net.Mime.ContentType> class is used to describe the data that is contained in a message and is used to determine if there is a content-type match.</span></span>  
  
 <span data-ttu-id="7018d-141">Une grammaire qui détaille la syntaxe de l’en-tête content-type est décrite dans [RFC 2045](http://go.microsoft.com/fwlink/?LinkId=95945) Section 5.1.</span><span class="sxs-lookup"><span data-stu-id="7018d-141">A grammar that details the syntax of the content-type header is described in [RFC 2045](http://go.microsoft.com/fwlink/?LinkId=95945) Section 5.1.</span></span> <span data-ttu-id="7018d-142">[RFC 2046](http://go.microsoft.com/fwlink/?LinkId=95944) fournit des informations détaillées sur les types de média MIME Multipurpose Internet Mail Extensions () et leurs paramètres.</span><span class="sxs-lookup"><span data-stu-id="7018d-142">[RFC 2046](http://go.microsoft.com/fwlink/?LinkId=95944) provides detailed information on Multipurpose Internet Mail Extensions (MIME) media types and their parameters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7018d-143">L'exemple de code suivant indique comment substituer la méthode pour gérer différents types de contenu par le biais du même type de données.</span><span class="sxs-lookup"><span data-stu-id="7018d-143">The following code example shows how to override this method to handle different content types with the same media type.</span></span>  
  
 [!code-csharp[S_UE_CustomTextMessageEncoder#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_customtextmessageencoder/cs/customtextmessageencoder.cs#8)]
 [!code-csharp[S_UE_CustomTextMessageEncoder#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_customtextmessageencoder/cs/customtextmessageencoderfactory.cs#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MediaType">
      <MemberSignature Language="C#" Value="public abstract string MediaType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MediaType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MessageEncoder.MediaType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MediaType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ MediaType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MediaType : string" Usage="System.ServiceModel.Channels.MessageEncoder.MediaType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7018d-144">En cas de substitution dans une classe dérivée, obtient la valeur du type de média utilisé par l'encodeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-144">When overridden in a derived class, gets the media type value that is used by the encoder.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7018d-145">Type de média pris en charge par l'encodeur de message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-145">The media type that is supported by the message encoder.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7018d-146">Le type de média fait partie de l'en-tête content-type.</span><span class="sxs-lookup"><span data-stu-id="7018d-146">The media type is part of the content-type header.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7018d-147">Le code suivant illustre l'implémentation de la propriété `MediaType`.</span><span class="sxs-lookup"><span data-stu-id="7018d-147">The following code shows how to implement the `MediaType` property.</span></span>  
  
 [!code-csharp[S_UE_CustomTextMessageEncoder#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_customtextmessageencoder/cs/customtextmessageencoder.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MessageVersion">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.MessageVersion MessageVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageVersion MessageVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.MessageEncoder.MessageVersion" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property MessageVersion As MessageVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::Channels::MessageVersion ^ MessageVersion { System::ServiceModel::Channels::MessageVersion ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MessageVersion : System.ServiceModel.Channels.MessageVersion" Usage="System.ServiceModel.Channels.MessageEncoder.MessageVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7018d-148">En cas de substitution dans une classe dérivée, obtient la valeur de la version du message utilisée par l'encodeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-148">When overridden in a derived class, gets the message version value that is used by the encoder.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7018d-149">
            <see cref="T:System.ServiceModel.Channels.MessageVersion" /> utilisé par l'encodeur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-149">The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that is used by the encoder.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7018d-150">Spécifie les versions de SOAP et WS-Addressing associées à un message et son échange.</span><span class="sxs-lookup"><span data-stu-id="7018d-150">Specifies the versions of SOAP and WS-Addressing associated with a message and its exchange.</span></span> <span data-ttu-id="7018d-151">Si les versions SOAP ne doivent pas être utilisées, cette propriété doit être substituée pour retourner <xref:System.ServiceModel.Channels.MessageVersion.None%2A>.</span><span class="sxs-lookup"><span data-stu-id="7018d-151">If SOAP versions are not to be used, this property should be overridden to return <xref:System.ServiceModel.Channels.MessageVersion.None%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7018d-152">Le code suivant illustre l'implémentation de la propriété <xref:System.ServiceModel.Channels.MessageEncoder.MessageVersion%2A>.</span><span class="sxs-lookup"><span data-stu-id="7018d-152">The following code shows how to implement the <xref:System.ServiceModel.Channels.MessageEncoder.MessageVersion%2A> property.</span></span>  
  
 [!code-csharp[S_UE_CustomTextMessageEncoder#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_customtextmessageencoder/cs/customtextmessageencoder.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ReadMessage">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7018d-153">En cas de substitution dans une classe dérivée, lit un message dans un flux de données spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-153">When overridden in a derived class, reads a message from a specified stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ReadMessage">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message ReadMessage (ArraySegment&lt;byte&gt; buffer, System.ServiceModel.Channels.BufferManager bufferManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Message ReadMessage(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, class System.ServiceModel.Channels.BufferManager bufferManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ ReadMessage(ArraySegment&lt;System::Byte&gt; buffer, System::ServiceModel::Channels::BufferManager ^ bufferManager);" />
      <MemberSignature Language="F#" Value="member this.ReadMessage : ArraySegment&lt;byte&gt; * System.ServiceModel.Channels.BufferManager -&gt; System.ServiceModel.Channels.Message" Usage="messageEncoder.ReadMessage (buffer, bufferManager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="bufferManager" Type="System.ServiceModel.Channels.BufferManager" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="7018d-154">
            <see cref="T:System.ArraySegment`1" /> de type <see cref="T:System.Byte" /> qui fournit la mémoire tampon à partir de laquelle le message est désérialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-154">A <see cref="T:System.ArraySegment`1" /> of type <see cref="T:System.Byte" /> that provides the buffer from which the message is deserialized.</span>
          </span>
        </param>
        <param name="bufferManager">
          <span data-ttu-id="7018d-155">
            <see cref="T:System.ServiceModel.Channels.BufferManager" /> qui gère la mémoire tampon à partir de laquelle le message est désérialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-155">The <see cref="T:System.ServiceModel.Channels.BufferManager" /> that manages the buffer from which the message is deserialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7018d-156">En cas de substitution dans une classe dérivée, lit un message dans une mémoire tampon spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-156">When overridden in a derived class, reads a message from a specified buffer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7018d-157">
            <see cref="T:System.ServiceModel.Channels.Message" /> lu dans la mémoire tampon spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-157">The <see cref="T:System.ServiceModel.Channels.Message" /> that is read from the buffer specified.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadMessage">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message ReadMessage (System.IO.Stream stream, int maxSizeOfHeaders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.Message ReadMessage(class System.IO.Stream stream, int32 maxSizeOfHeaders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ ReadMessage(System::IO::Stream ^ stream, int maxSizeOfHeaders);" />
      <MemberSignature Language="F#" Value="member this.ReadMessage : System.IO.Stream * int -&gt; System.ServiceModel.Channels.Message" Usage="messageEncoder.ReadMessage (stream, maxSizeOfHeaders)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="maxSizeOfHeaders" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="7018d-158">Objet <see cref="T:System.IO.Stream" /> à partir duquel le message est lu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-158">The <see cref="T:System.IO.Stream" /> object from which the message is read.</span>
          </span>
        </param>
        <param name="maxSizeOfHeaders">
          <span data-ttu-id="7018d-159">Taille maximale des en-têtes qui peuvent être lus à partir du message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-159">The maximum size of the headers that can be read from the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7018d-160">En cas de substitution dans une classe dérivée, lit un message dans un flux de données spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-160">When overridden in a derived class, reads a message from a specified stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7018d-161">
            <see cref="T:System.ServiceModel.Channels.Message" /> lu dans le flux de données spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-161">The <see cref="T:System.ServiceModel.Channels.Message" /> that is read from the stream specified.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadMessage">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.Message ReadMessage (ArraySegment&lt;byte&gt; buffer, System.ServiceModel.Channels.BufferManager bufferManager, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message ReadMessage(valuetype System.ArraySegment`1&lt;unsigned int8&gt; buffer, class System.ServiceModel.Channels.BufferManager bufferManager, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Channels::Message ^ ReadMessage(ArraySegment&lt;System::Byte&gt; buffer, System::ServiceModel::Channels::BufferManager ^ bufferManager, System::String ^ contentType);" />
      <MemberSignature Language="F#" Value="abstract member ReadMessage : ArraySegment&lt;byte&gt; * System.ServiceModel.Channels.BufferManager * string -&gt; System.ServiceModel.Channels.Message" Usage="messageEncoder.ReadMessage (buffer, bufferManager, contentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.ArraySegment&lt;System.Byte&gt;" />
        <Parameter Name="bufferManager" Type="System.ServiceModel.Channels.BufferManager" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="7018d-162">
            <see cref="T:System.ArraySegment`1" /> de type <see cref="T:System.Byte" /> qui fournit la mémoire tampon à partir de laquelle le message est désérialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-162">A <see cref="T:System.ArraySegment`1" /> of type <see cref="T:System.Byte" /> that provides the buffer from which the message is deserialized.</span>
          </span>
        </param>
        <param name="bufferManager">
          <span data-ttu-id="7018d-163">
            <see cref="T:System.ServiceModel.Channels.BufferManager" /> qui gère la mémoire tampon à partir de laquelle le message est désérialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-163">The <see cref="T:System.ServiceModel.Channels.BufferManager" /> that manages the buffer from which the message is deserialized.</span>
          </span>
        </param>
        <param name="contentType">
          <span data-ttu-id="7018d-164">En-tête content-type au niveau du message MIME (Multipurpose Internet Mail Extensions).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-164">The Multipurpose Internet Mail Extensions (MIME) message-level content-type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7018d-165">En cas de substitution dans une classe dérivée, lit un message dans un flux de données spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-165">When overridden in a derived class, reads a message from a specified stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7018d-166">
            <see cref="T:System.ServiceModel.Channels.Message" /> lu dans le flux de données spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-166">The <see cref="T:System.ServiceModel.Channels.Message" /> that is read from the stream specified.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7018d-167">L'exemple de code suivant illustre l'implémentation de la méthode <xref:System.ServiceModel.Channels.MessageEncoder.ReadMessage%28System.ArraySegment%7BSystem.Byte%7D%2CSystem.ServiceModel.Channels.BufferManager%2CSystem.String%29>.</span><span class="sxs-lookup"><span data-stu-id="7018d-167">The following code example shows how to implement the <xref:System.ServiceModel.Channels.MessageEncoder.ReadMessage%28System.ArraySegment%7BSystem.Byte%7D%2CSystem.ServiceModel.Channels.BufferManager%2CSystem.String%29> method.</span></span>  
  
 [!code-csharp[S_UE_CustomTextMessageEncoder#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_customtextmessageencoder/cs/customtextmessageencoder.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadMessage">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.Message ReadMessage (System.IO.Stream stream, int maxSizeOfHeaders, string contentType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message ReadMessage(class System.IO.Stream stream, int32 maxSizeOfHeaders, string contentType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::ServiceModel::Channels::Message ^ ReadMessage(System::IO::Stream ^ stream, int maxSizeOfHeaders, System::String ^ contentType);" />
      <MemberSignature Language="F#" Value="abstract member ReadMessage : System.IO.Stream * int * string -&gt; System.ServiceModel.Channels.Message" Usage="messageEncoder.ReadMessage (stream, maxSizeOfHeaders, contentType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="maxSizeOfHeaders" Type="System.Int32" />
        <Parameter Name="contentType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="7018d-168">Objet <see cref="T:System.IO.Stream" /> à partir duquel le message est lu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-168">The <see cref="T:System.IO.Stream" /> object from which the message is read.</span>
          </span>
        </param>
        <param name="maxSizeOfHeaders">
          <span data-ttu-id="7018d-169">Taille maximale des en-têtes qui peuvent être lus à partir du message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-169">The maximum size of the headers that can be read from the message.</span>
          </span>
        </param>
        <param name="contentType">
          <span data-ttu-id="7018d-170">En-tête content-type au niveau du message MIME (Multipurpose Internet Mail Extensions).</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-170">The Multipurpose Internet Mail Extensions (MIME) message-level content-type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7018d-171">En cas de substitution dans une classe dérivée, lit un message dans un flux de données spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-171">When overridden in a derived class, reads a message from a specified stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7018d-172">
            <see cref="T:System.ServiceModel.Channels.Message" /> lu dans le flux de données spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-172">The <see cref="T:System.ServiceModel.Channels.Message" /> that is read from the stream specified.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7018d-173">L'exemple de code suivant illustre l'implémentation de la méthode <xref:System.ServiceModel.Channels.MessageEncoder.ReadMessage%28System.IO.Stream%2CSystem.Int32%2CSystem.String%29>.</span><span class="sxs-lookup"><span data-stu-id="7018d-173">The following code example shows how to implement the <xref:System.ServiceModel.Channels.MessageEncoder.ReadMessage%28System.IO.Stream%2CSystem.Int32%2CSystem.String%29> method.</span></span>  
  
 [!code-csharp[S_UE_CustomTextMessageEncoder#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_customtextmessageencoder/cs/customtextmessageencoder.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageEncoder.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="messageEncoder.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7018d-174">Renvoie le type de contenu utilisé par l'encodeur de message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-174">Returns the content type that is used by the message encoder.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7018d-175">Type de contenu utilisé par l'encodeur de message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-175">The content type that is used by the message encoder.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteMessage">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7018d-176">En cas de substitution dans une classe dérivée, écrit un message dans un flux de données ou une mémoire tampon spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-176">When overridden in a derived class, writes a message to a specified stream or buffer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteMessage">
      <MemberSignature Language="C#" Value="public abstract void WriteMessage (System.ServiceModel.Channels.Message message, System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteMessage(class System.ServiceModel.Channels.Message message, class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void WriteMessage(System::ServiceModel::Channels::Message ^ message, System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="abstract member WriteMessage : System.ServiceModel.Channels.Message * System.IO.Stream -&gt; unit" Usage="messageEncoder.WriteMessage (message, stream)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="7018d-177">
            <see cref="T:System.ServiceModel.Channels.Message" /> à écrire dans <c>stream</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-177">The <see cref="T:System.ServiceModel.Channels.Message" /> to write to the <c>stream</c>.</span>
          </span>
        </param>
        <param name="stream">
          <span data-ttu-id="7018d-178">Objet <see cref="T:System.IO.Stream" /> dans lequel <c>message</c> est écrit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-178">The <see cref="T:System.IO.Stream" /> object to which the <c>message</c> is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7018d-179">En cas de substitution dans une classe dérivée, écrit un message dans un flux de données spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-179">When overridden in a derived class, writes a message to a specified stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="7018d-180">Le code suivant illustre l'implémentation de la méthode <xref:System.ServiceModel.Channels.MessageEncoder.WriteMessage%28System.ServiceModel.Channels.Message%2CSystem.IO.Stream%29>.</span><span class="sxs-lookup"><span data-stu-id="7018d-180">The following code shows how to implement the <xref:System.ServiceModel.Channels.MessageEncoder.WriteMessage%28System.ServiceModel.Channels.Message%2CSystem.IO.Stream%29> method.</span></span>  
  
 [!code-csharp[S_UE_CustomTextMessageEncoder#7](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_customtextmessageencoder/cs/customtextmessageencoder.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteMessage">
      <MemberSignature Language="C#" Value="public ArraySegment&lt;byte&gt; WriteMessage (System.ServiceModel.Channels.Message message, int maxMessageSize, System.ServiceModel.Channels.BufferManager bufferManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.ArraySegment`1&lt;unsigned int8&gt; WriteMessage(class System.ServiceModel.Channels.Message message, int32 maxMessageSize, class System.ServiceModel.Channels.BufferManager bufferManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArraySegment&lt;System::Byte&gt; WriteMessage(System::ServiceModel::Channels::Message ^ message, int maxMessageSize, System::ServiceModel::Channels::BufferManager ^ bufferManager);" />
      <MemberSignature Language="F#" Value="member this.WriteMessage : System.ServiceModel.Channels.Message * int * System.ServiceModel.Channels.BufferManager -&gt; ArraySegment&lt;byte&gt;" Usage="messageEncoder.WriteMessage (message, maxMessageSize, bufferManager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ArraySegment&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="maxMessageSize" Type="System.Int32" />
        <Parameter Name="bufferManager" Type="System.ServiceModel.Channels.BufferManager" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="7018d-181">
            <see cref="T:System.ServiceModel.Channels.Message" /> à écrire dans la mémoire tampon des messages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-181">The <see cref="T:System.ServiceModel.Channels.Message" /> to write to the message buffer.</span>
          </span>
        </param>
        <param name="maxMessageSize">
          <span data-ttu-id="7018d-182">Taille de message maximale qui peut être écrite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-182">The maximum message size that can be written.</span>
          </span>
        </param>
        <param name="bufferManager">
          <span data-ttu-id="7018d-183">
            <see cref="T:System.ServiceModel.Channels.BufferManager" /> qui gère la mémoire tampon dans laquelle le message est écrit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-183">The <see cref="T:System.ServiceModel.Channels.BufferManager" /> that manages the buffer to which the message is written.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7018d-184">Écrit un message dont la taille est inférieure à celle spécifiée dans une mémoire tampon de tableau d'octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-184">Writes a message less than a specified size to a byte array buffer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7018d-185">
            <see cref="T:System.ArraySegment`1" /> de type <see langword="byte" /> qui fournit la mémoire tampon dans laquelle le message est sérialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-185">A <see cref="T:System.ArraySegment`1" /> of type <see langword="byte" /> that provides the buffer to which the message is serialized.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7018d-186">Cette méthode appelle la méthode abstraite <xref:System.ServiceModel.Channels.MessageEncoder.WriteMessage%28System.ServiceModel.Channels.Message%2CSystem.Int32%2CSystem.ServiceModel.Channels.BufferManager%2CSystem.Int32%29> avec `messageOffset` = 0.</span><span class="sxs-lookup"><span data-stu-id="7018d-186">This method calls the abstract method <xref:System.ServiceModel.Channels.MessageEncoder.WriteMessage%28System.ServiceModel.Channels.Message%2CSystem.Int32%2CSystem.ServiceModel.Channels.BufferManager%2CSystem.Int32%29> with `messageOffset` = 0.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteMessage">
      <MemberSignature Language="C#" Value="public abstract ArraySegment&lt;byte&gt; WriteMessage (System.ServiceModel.Channels.Message message, int maxMessageSize, System.ServiceModel.Channels.BufferManager bufferManager, int messageOffset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.ArraySegment`1&lt;unsigned int8&gt; WriteMessage(class System.ServiceModel.Channels.Message message, int32 maxMessageSize, class System.ServiceModel.Channels.BufferManager bufferManager, int32 messageOffset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract ArraySegment&lt;System::Byte&gt; WriteMessage(System::ServiceModel::Channels::Message ^ message, int maxMessageSize, System::ServiceModel::Channels::BufferManager ^ bufferManager, int messageOffset);" />
      <MemberSignature Language="F#" Value="abstract member WriteMessage : System.ServiceModel.Channels.Message * int * System.ServiceModel.Channels.BufferManager * int -&gt; ArraySegment&lt;byte&gt;" Usage="messageEncoder.WriteMessage (message, maxMessageSize, bufferManager, messageOffset)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ArraySegment&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="maxMessageSize" Type="System.Int32" />
        <Parameter Name="bufferManager" Type="System.ServiceModel.Channels.BufferManager" />
        <Parameter Name="messageOffset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="7018d-187">
            <see cref="T:System.ServiceModel.Channels.Message" /> à écrire dans la mémoire tampon des messages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-187">The <see cref="T:System.ServiceModel.Channels.Message" /> to write to the message buffer.</span>
          </span>
        </param>
        <param name="maxMessageSize">
          <span data-ttu-id="7018d-188">Taille de message maximale qui peut être écrite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-188">The maximum message size that can be written.</span>
          </span>
        </param>
        <param name="bufferManager">
          <span data-ttu-id="7018d-189">
            <see cref="T:System.ServiceModel.Channels.BufferManager" /> qui gère la mémoire tampon dans laquelle le message est écrit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-189">The <see cref="T:System.ServiceModel.Channels.BufferManager" /> that manages the buffer to which the message is written.</span>
          </span>
        </param>
        <param name="messageOffset">
          <span data-ttu-id="7018d-190">Offset du segment qui commence au début du tableau d'octets fournissant la mémoire tampon.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-190">The offset of the segment that begins from the start of the byte array that provides the buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7018d-191">En cas de substitution dans une classe dérivée, écrit un message dont la taille est inférieure à celle spécifiée dans une mémoire tampon de tableau d'octets à l'offset spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-191">When overridden in a derived class, writes a message of less than a specified size to a byte array buffer at the specified offset.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7018d-192">
            <see cref="T:System.ArraySegment`1" /> de type <see langword="byte" /> qui fournit la mémoire tampon dans laquelle le message est sérialisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7018d-192">A <see cref="T:System.ArraySegment`1" /> of type <see langword="byte" /> that provides the buffer to which the message is serialized.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7018d-193">Cette méthode est appelée par <xref:System.ServiceModel.Channels.MessageEncoder.WriteMessage%28System.ServiceModel.Channels.Message%2CSystem.Int32%2CSystem.ServiceModel.Channels.BufferManager%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="7018d-193">This method is called by <xref:System.ServiceModel.Channels.MessageEncoder.WriteMessage%28System.ServiceModel.Channels.Message%2CSystem.Int32%2CSystem.ServiceModel.Channels.BufferManager%2CSystem.Int32%29>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7018d-194">Le code suivant illustre l'implémentation de la méthode <xref:System.ServiceModel.Channels.MessageEncoder.WriteMessage%28System.ServiceModel.Channels.Message%2CSystem.Int32%2CSystem.ServiceModel.Channels.BufferManager%2CSystem.Int32%29>.</span><span class="sxs-lookup"><span data-stu-id="7018d-194">The following code shows how to implement the <xref:System.ServiceModel.Channels.MessageEncoder.WriteMessage%28System.ServiceModel.Channels.Message%2CSystem.Int32%2CSystem.ServiceModel.Channels.BufferManager%2CSystem.Int32%29> method.</span></span>  
  
 [!code-csharp[S_UE_CustomTextMessageEncoder#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_customtextmessageencoder/cs/customtextmessageencoder.cs#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>