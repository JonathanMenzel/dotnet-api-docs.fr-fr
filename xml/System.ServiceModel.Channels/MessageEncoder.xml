<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="MessageEncoder.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d29ca2946851c8b42bbcd21a50aa193fea105db5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d29ca2946851c8b42bbcd21a50aa193fea105db5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.MessageEncoder">
          <source>The encoder is the component that is used to write messages to a stream and to read messages from a stream.</source>
          <target state="translated">L'encodeur est le composant utilisé pour écrire des messages dans un flux de données et lire des messages à partir d'un flux de données.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncoder">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoder&gt;</ph> is a base class that provides implementations that support a Multipurpose Internet Mail Extensions (MIME) content type and message version, and defines the interface for the serialization and deserialization of messages according to that content type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoder&gt;</ph> est une classe de base qui fournit des implémentations prenant en charge une version de message et un type de contenu MIME (Multipurpose Internet Mail Extensions), et qui définit l'interface de sérialisation et désérialisation de messages selon ce type de contenu.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncoder">
          <source>Use it as a base class for writing your own custom encoder.</source>
          <target state="translated">Utilisez-la comme classe de base pour écrire votre propre encodeur personnalisé.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncoder">
          <source>Use this class if you want to implement a custom message encoder.</source>
          <target state="translated">Utilisez cette classe si vous souhaitez implémenter un encodeur de message personnalisé.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncoder">
          <source>To implement your own custom message encoder, you must provide custom implementations of the following abstract base classes:</source>
          <target state="translated">Pour implémenter votre propre encodeur de message personnalisé, vous devez fournir des implémentations personnalisées des classes de base abstraites suivantes :</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncoder">
          <source>Override the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoderFactory.Encoder%2A&gt;</ph> to return an instance of your custom <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageEncoder&gt;</ph>.</source>
          <target state="translated">Substituez <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoderFactory.Encoder%2A&gt;</ph> pour retourner une instance de votre <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageEncoder&gt;</ph> personnalisé.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncoder">
          <source>Then wire up your custom <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoderFactory&gt;</ph> to the binding element stack used to configure the service or client by overriding the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A&gt;</ph> method to return an instance of this factory.</source>
          <target state="translated">Puis rattachez votre <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoderFactory&gt;</ph> personnalisé à la pile d'élément de liaison utilisée pour configurer le service ou le client en substituant la méthode <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageEncodingBindingElement.CreateMessageEncoderFactory%2A&gt;</ph> pour retourner une instance de cette fabrique.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncoder">
          <source>The task of converting between the in-memory representation of a message and an XML Information Set (Infoset) representation that can be written to a stream is encapsulated within the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoder&gt;</ph> class, which most commonly serves as a factory for XML readers and XML writers that support specific types of XML encodings.</source>
          <target state="translated">La tâche de conversion entre la représentation en mémoire d'un message et une représentation Infoset (Information Set) XML qui peuvent être écrites dans un flux de données est encapsulée dans la classe <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoder&gt;</ph>, qui sert généralement de fabrique pour les lecteurs et writers XML qui prennent en charge des types d'encodages XML spécifiques.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncoder">
          <source>The key methods on <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoder&gt;</ph> are <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageEncoder.WriteMessage%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.MessageEncoder.ReadMessage%2A&gt;</ph>.</source>
          <target state="translated">Les principales méthodes sur l'objet <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoder&gt;</ph> sont <ph id="ph2">&lt;xref:System.ServiceModel.Channels.MessageEncoder.WriteMessage%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.ServiceModel.Channels.MessageEncoder.ReadMessage%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncoder">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoder.WriteMessage%2A&gt;</ph> takes a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> object and writes it into a <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph> object.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoder.WriteMessage%2A&gt;</ph> accepte un objet <ph id="ph2">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> et l'écrit dans un objet <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncoder">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoder.ReadMessage%2A&gt;</ph> takes a <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> object and a maximum header size and returns a <ph id="ph3">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph> object.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoder.ReadMessage%2A&gt;</ph> accepte un objet <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> et une taille d'en-tête maximale et retourne un objet <ph id="ph3">&lt;xref:System.ServiceModel.Channels.Message&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.MessageEncoder">
          <source>The following code shows an example of a class that is derived from <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoder&gt;</ph>.</source>
          <target state="translated">Le code suivant constitue un exemple de classe dérivée de <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoder&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageEncoder" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageEncoder" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.BeginWriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream,System.AsyncCallback,System.Object)">
          <source>The message.</source>
          <target state="translated">Message.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.BeginWriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream,System.AsyncCallback,System.Object)">
          <source>The stream.</source>
          <target state="translated">flux.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.BeginWriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream,System.AsyncCallback,System.Object)">
          <source>The callback.</source>
          <target state="translated">Rappel.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.BeginWriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream,System.AsyncCallback,System.Object)">
          <source>The state.</source>
          <target state="translated">État.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.BeginWriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream,System.AsyncCallback,System.Object)">
          <source>Starts the writing of message for the message encoder with specified message, stream, callback and state.</source>
          <target state="translated">Démarre l'écriture du message pour l'encodeur de message avec le message, le flux de données, le rappel et l'état spécifiés.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.BeginWriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream,System.AsyncCallback,System.Object)">
          <source>The asynchronous result of the operation.</source>
          <target state="translated">Résultat asynchrone de l'opération.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.MessageEncoder.ContentType">
          <source>When overridden in a derived class, gets the MIME content type used by the encoder.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, obtient le type de contenu MIME utilisé par l'encodeur.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageEncoder.ContentType">
          <source>The content type that is supported by the message encoder.</source>
          <target state="translated">Type de contenu pris en charge par l'encodeur de message.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageEncoder.ContentType">
          <source>The content type is a Multipurpose Internet Mail Exchange (MIME) header that appears at the beginning of a MIME message as well as within the separate body parts.</source>
          <target state="translated">Le type de contenu est un en-tête MIME (Multipurpose Internet Mail Exchange) qui apparaît au début d'un message MIME ainsi que dans les corps distincts.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageEncoder.ContentType">
          <source>Content-type headers are used to specify the media type and subtype of data in the body of a message and to fully specify the media type and subtype of data in the body of a message and to specify the character encoding (optional) of the data.</source>
          <target state="translated">Les en-têtes content-type sont utilisés pour spécifier complètement le type de média et le sous-type de données dans le corps d'un message et pour spécifier l'encodage de caractères (facultatif) des données.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageEncoder.ContentType">
          <source>An example of a MIME content type that can be supported: "application/soap+xml; charset=’utf8’".</source>
          <target state="translated">Un exemple de MIME content type pouvant être pris en charge : « application/soap + xml ; CharSet = 'utf8' ».</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageEncoder.ContentType">
          <source>A grammar that details the syntax of the content-type header is described in <bpt id="p1">[</bpt>RFC 2045<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=95945)</ept>, Section 5.1.</source>
          <target state="translated">Une grammaire qui détaille la syntaxe de l’en-tête content-type est décrite dans <bpt id="p1">[</bpt>RFC 2045<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=95945)</ept>, Section 5.1.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageEncoder.ContentType">
          <source><bpt id="p1">[</bpt>RFC 2046<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=95944)</ept> provides detailed information on MIME media types and their parameters.</source>
          <target state="translated"><bpt id="p1">[</bpt>RFC 2046<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=95944)</ept> fournit des informations détaillées sur les types de média MIME et leurs paramètres.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.EndWriteMessage(System.IAsyncResult)">
          <source>The result of the operation.</source>
          <target state="translated">Résultat de l'opération.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.EndWriteMessage(System.IAsyncResult)">
          <source>Ends the writing of messages for the message encoder.</source>
          <target state="translated">Met fin à l'écriture de messages pour l'auteur du code de message.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncoder.GetProperty``1">
          <source>The typed object for which the method is querying.</source>
          <target state="translated">Objet typé pour lequel la méthode effectue une requête.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.GetProperty``1">
          <source>Returns a typed object requested, if present, from the appropriate layer in the channel stack.</source>
          <target state="translated">Retourne un objet typé demandé (s'il existe) à partir de la couche appropriée dans la pile de canaux.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.GetProperty``1">
          <source>The typed object <ph id="ph1">&lt;paramref name="T" /&gt;</ph> requested if it is present or <ph id="ph2">&lt;see langword="null" /&gt;</ph> if it is not.</source>
          <target state="translated">Objet typé <ph id="ph1">&lt;paramref name="T" /&gt;</ph> demandé, s'il existe ; sinon <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncoder.GetProperty``1">
          <source>Use this to request a typed object such as an interface for setting properties or getting status from the appropriate layer in the channel stack.</source>
          <target state="translated">Utilisez cette méthode pour demander un objet typé tel qu'une interface pour définir des propriétés ou obtenir l'état de la couche appropriée dans la pile de canaux.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncoder.GetProperty``1">
          <source>If a layer supports returning the requested object, it returns it.</source>
          <target state="translated">Si une couche prend en charge le retour de l'objet demandé, elle le retourne.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncoder.GetProperty``1">
          <source>If not, it delegates the call down to the next layer in the stack.</source>
          <target state="translated">Sinon, elle délègue l'appel à la couche suivante dans la pile.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncoder.GetProperty``1">
          <source>If it gets to the bottom of the stack and no channel layer supported the requested object, then the method returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Si elle arrive au bas de la pile et qu'aucune couche de canal n'a pris en charge l'objet demandé, la méthode retourne <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)">
          <source>The message-level content-type being tested.</source>
          <target state="translated">Valeur content-type au niveau du message qui est testée.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)">
          <source>Returns a value that indicates whether a specified message-level content-type value is supported by the message encoder.</source>
          <target state="translated">Retourne une valeur qui indique si une valeur content-type au niveau du message spécifiée est prise en charge par l'encodeur de message.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the message-level content-type specified is supported; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si la valeur content-type au niveau du message spécifiée est prise en charge ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)">
          <source>This method is used to determine whether the message encoder can be used to read a particular style of message, based on its content-type.</source>
          <target state="translated">Cette méthode permet de déterminer si l'encodeur de message permet de lire un type de message donné, d'après sa valeur « content-type ».</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)">
          <source>The information in the <ph id="ph1">&lt;xref:System.Net.Mime.ContentType&gt;</ph> class is used to describe the data that is contained in a message and is used to determine if there is a content-type match.</source>
          <target state="translated">Les informations dans la classe <ph id="ph1">&lt;xref:System.Net.Mime.ContentType&gt;</ph> sont utilisées pour décrire les données qui sont contenues dans un message et déterminer s'il existe une correspondance d'en-tête content-type.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)">
          <source>A grammar that details the syntax of the content-type header is described in <bpt id="p1">[</bpt>RFC 2045<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=95945)</ept> Section 5.1.</source>
          <target state="translated">Une grammaire qui détaille la syntaxe de l’en-tête content-type est décrite dans <bpt id="p1">[</bpt>RFC 2045<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=95945)</ept> Section 5.1.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)">
          <source><bpt id="p1">[</bpt>RFC 2046<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=95944)</ept> provides detailed information on Multipurpose Internet Mail Extensions (MIME) media types and their parameters.</source>
          <target state="translated"><bpt id="p1">[</bpt>RFC 2046<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=95944)</ept> fournit des informations détaillées sur leurs paramètres et types de média MIME Multipurpose Internet Mail Extensions ().</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncoder.IsContentTypeSupported(System.String)">
          <source>The following code example shows how to override this method to handle different content types with the same media type.</source>
          <target state="translated">L'exemple de code suivant indique comment substituer la méthode pour gérer différents types de contenu par le biais du même type de données.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.MessageEncoder.MediaType">
          <source>When overridden in a derived class, gets the media type value that is used by the encoder.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, obtient la valeur du type de média utilisé par l'encodeur.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageEncoder.MediaType">
          <source>The media type that is supported by the message encoder.</source>
          <target state="translated">Type de média pris en charge par l'encodeur de message.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageEncoder.MediaType">
          <source>The media type is part of the content-type header.</source>
          <target state="translated">Le type de média fait partie de l'en-tête content-type.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageEncoder.MediaType">
          <source>The following code shows how to implement the <ph id="ph1">`MediaType`</ph> property.</source>
          <target state="translated">Le code suivant illustre l'implémentation de la propriété <ph id="ph1">`MediaType`</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.MessageEncoder.MessageVersion">
          <source>When overridden in a derived class, gets the message version value that is used by the encoder.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, obtient la valeur de la version du message utilisée par l'encodeur.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageEncoder.MessageVersion">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageVersion" /&gt;</ph> that is used by the encoder.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.MessageVersion" /&gt;</ph> utilisé par l'encodeur.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageEncoder.MessageVersion">
          <source>Specifies the versions of SOAP and WS-Addressing associated with a message and its exchange.</source>
          <target state="translated">Spécifie les versions de SOAP et WS-Addressing associées à un message et son échange.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageEncoder.MessageVersion">
          <source>If SOAP versions are not to be used, this property should be overridden to return <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageVersion.None%2A&gt;</ph>.</source>
          <target state="translated">Si les versions SOAP ne doivent pas être utilisées, cette propriété doit être substituée pour retourner <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageVersion.None%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.MessageEncoder.MessageVersion">
          <source>The following code shows how to implement the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoder.MessageVersion%2A&gt;</ph> property.</source>
          <target state="translated">Le code suivant illustre l'implémentation de la propriété <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoder.MessageVersion%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.MessageEncoder">
          <source>When overridden in a derived class, reads a message from a specified stream.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, lit un message dans un flux de données spécifié.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> that provides the buffer from which the message is deserialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> de type <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> qui fournit la mémoire tampon à partir de laquelle le message est désérialisé.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BufferManager" /&gt;</ph> that manages the buffer from which the message is deserialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BufferManager" /&gt;</ph> qui gère la mémoire tampon à partir de laquelle le message est désérialisé.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager)">
          <source>When overridden in a derived class, reads a message from a specified buffer.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, lit un message dans une mémoire tampon spécifiée.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> that is read from the buffer specified.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> lu dans la mémoire tampon spécifiée.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object from which the message is read.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> à partir duquel le message est lu.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32)">
          <source>The maximum size of the headers that can be read from the message.</source>
          <target state="translated">Taille maximale des en-têtes qui peuvent être lus à partir du message.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32)">
          <source>When overridden in a derived class, reads a message from a specified stream.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, lit un message dans un flux de données spécifié.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> that is read from the stream specified.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> lu dans le flux de données spécifié.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> that provides the buffer from which the message is deserialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> de type <ph id="ph2">&lt;see cref="T:System.Byte" /&gt;</ph> qui fournit la mémoire tampon à partir de laquelle le message est désérialisé.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BufferManager" /&gt;</ph> that manages the buffer from which the message is deserialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BufferManager" /&gt;</ph> qui gère la mémoire tampon à partir de laquelle le message est désérialisé.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)">
          <source>The Multipurpose Internet Mail Extensions (MIME) message-level content-type.</source>
          <target state="translated">En-tête content-type au niveau du message MIME (Multipurpose Internet Mail Extensions).</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)">
          <source>When overridden in a derived class, reads a message from a specified stream.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, lit un message dans un flux de données spécifié.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> that is read from the stream specified.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> lu dans le flux de données spécifié.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.ArraySegment{System.Byte},System.ServiceModel.Channels.BufferManager,System.String)">
          <source>The following code example shows how to implement the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoder.ReadMessage%28System.ArraySegment%7BSystem.Byte%7D%2CSystem.ServiceModel.Channels.BufferManager%2CSystem.String%29&gt;</ph> method.</source>
          <target state="translated">L'exemple de code suivant illustre l'implémentation de la méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoder.ReadMessage%28System.ArraySegment%7BSystem.Byte%7D%2CSystem.ServiceModel.Channels.BufferManager%2CSystem.String%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object from which the message is read.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> à partir duquel le message est lu.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32,System.String)">
          <source>The maximum size of the headers that can be read from the message.</source>
          <target state="translated">Taille maximale des en-têtes qui peuvent être lus à partir du message.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32,System.String)">
          <source>The Multipurpose Internet Mail Extensions (MIME) message-level content-type.</source>
          <target state="translated">En-tête content-type au niveau du message MIME (Multipurpose Internet Mail Extensions).</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32,System.String)">
          <source>When overridden in a derived class, reads a message from a specified stream.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, lit un message dans un flux de données spécifié.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> that is read from the stream specified.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> lu dans le flux de données spécifié.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncoder.ReadMessage(System.IO.Stream,System.Int32,System.String)">
          <source>The following code example shows how to implement the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoder.ReadMessage%28System.IO.Stream%2CSystem.Int32%2CSystem.String%29&gt;</ph> method.</source>
          <target state="translated">L'exemple de code suivant illustre l'implémentation de la méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoder.ReadMessage%28System.IO.Stream%2CSystem.Int32%2CSystem.String%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.ToString">
          <source>Returns the content type that is used by the message encoder.</source>
          <target state="translated">Renvoie le type de contenu utilisé par l'encodeur de message.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.ToString">
          <source>The content type that is used by the message encoder.</source>
          <target state="translated">Type de contenu utilisé par l'encodeur de message.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.MessageEncoder">
          <source>When overridden in a derived class, writes a message to a specified stream or buffer.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, écrit un message dans un flux de données ou une mémoire tampon spécifié.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> to write to the <bpt id="p1">&lt;c&gt;</bpt>stream<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> à écrire dans <bpt id="p1">&lt;c&gt;</bpt>stream<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object to which the <bpt id="p1">&lt;c&gt;</bpt>message<ept id="p1">&lt;/c&gt;</ept> is written.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> dans lequel <bpt id="p1">&lt;c&gt;</bpt>message<ept id="p1">&lt;/c&gt;</ept> est écrit.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream)">
          <source>When overridden in a derived class, writes a message to a specified stream.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, écrit un message dans un flux de données spécifié.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.IO.Stream)">
          <source>The following code shows how to implement the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoder.WriteMessage%28System.ServiceModel.Channels.Message%2CSystem.IO.Stream%29&gt;</ph> method.</source>
          <target state="translated">Le code suivant illustre l'implémentation de la méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoder.WriteMessage%28System.ServiceModel.Channels.Message%2CSystem.IO.Stream%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> to write to the message buffer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> à écrire dans la mémoire tampon des messages.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager)">
          <source>The maximum message size that can be written.</source>
          <target state="translated">Taille de message maximale qui peut être écrite.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BufferManager" /&gt;</ph> that manages the buffer to which the message is written.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BufferManager" /&gt;</ph> qui gère la mémoire tampon dans laquelle le message est écrit.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager)">
          <source>Writes a message less than a specified size to a byte array buffer.</source>
          <target state="translated">Écrit un message dont la taille est inférieure à celle spécifiée dans une mémoire tampon de tableau d'octets.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> of type <ph id="ph2">&lt;see langword="byte" /&gt;</ph> that provides the buffer to which the message is serialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> de type <ph id="ph2">&lt;see langword="byte" /&gt;</ph> qui fournit la mémoire tampon dans laquelle le message est sérialisé.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager)">
          <source>This method calls the abstract method <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoder.WriteMessage%28System.ServiceModel.Channels.Message%2CSystem.Int32%2CSystem.ServiceModel.Channels.BufferManager%2CSystem.Int32%29&gt;</ph> with <ph id="ph2">`messageOffset`</ph> = 0.</source>
          <target state="translated">Cette méthode appelle la méthode abstraite <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoder.WriteMessage%28System.ServiceModel.Channels.Message%2CSystem.Int32%2CSystem.ServiceModel.Channels.BufferManager%2CSystem.Int32%29&gt;</ph> avec <ph id="ph2">`messageOffset`</ph> = 0.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> to write to the message buffer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.Message" /&gt;</ph> à écrire dans la mémoire tampon des messages.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)">
          <source>The maximum message size that can be written.</source>
          <target state="translated">Taille de message maximale qui peut être écrite.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BufferManager" /&gt;</ph> that manages the buffer to which the message is written.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.BufferManager" /&gt;</ph> qui gère la mémoire tampon dans laquelle le message est écrit.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)">
          <source>The offset of the segment that begins from the start of the byte array that provides the buffer.</source>
          <target state="translated">Offset du segment qui commence au début du tableau d'octets fournissant la mémoire tampon.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)">
          <source>When overridden in a derived class, writes a message of less than a specified size to a byte array buffer at the specified offset.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, écrit un message dont la taille est inférieure à celle spécifiée dans une mémoire tampon de tableau d'octets à l'offset spécifié.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> of type <ph id="ph2">&lt;see langword="byte" /&gt;</ph> that provides the buffer to which the message is serialized.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ArraySegment`1" /&gt;</ph> de type <ph id="ph2">&lt;see langword="byte" /&gt;</ph> qui fournit la mémoire tampon dans laquelle le message est sérialisé.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)">
          <source>This method is called by <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoder.WriteMessage%28System.ServiceModel.Channels.Message%2CSystem.Int32%2CSystem.ServiceModel.Channels.BufferManager%2CSystem.Int32%29&gt;</ph>.</source>
          <target state="translated">Cette méthode est appelée par <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoder.WriteMessage%28System.ServiceModel.Channels.Message%2CSystem.Int32%2CSystem.ServiceModel.Channels.BufferManager%2CSystem.Int32%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.MessageEncoder.WriteMessage(System.ServiceModel.Channels.Message,System.Int32,System.ServiceModel.Channels.BufferManager,System.Int32)">
          <source>The following code shows how to implement the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoder.WriteMessage%28System.ServiceModel.Channels.Message%2CSystem.Int32%2CSystem.ServiceModel.Channels.BufferManager%2CSystem.Int32%29&gt;</ph> method.</source>
          <target state="translated">Le code suivant illustre l'implémentation de la méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.MessageEncoder.WriteMessage%28System.ServiceModel.Channels.Message%2CSystem.Int32%2CSystem.ServiceModel.Channels.BufferManager%2CSystem.Int32%29&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>