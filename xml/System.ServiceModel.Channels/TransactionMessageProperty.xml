<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TransactionMessageProperty.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac51236e8ad18181b960065ffd385981cffe0faa4da.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1236e8ad18181b960065ffd385981cffe0faa4da</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.TransactionMessageProperty">
          <source>Allows a custom channel, which uses a proprietary transaction flow mechanism, to inject its transaction into the Windows Communication Foundation (WCF) framework.</source>
          <target state="translated">Autorise un canal personnalisé, qui utilise un mécanisme de flux de transactions propriétaire, à injecter sa transaction dans l’infrastructure Windows Communication Foundation (WCF).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.TransactionMessageProperty">
          <source>This class cannot be inherited.</source>
          <target state="translated">Cette classe ne peut pas être héritée.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransactionMessageProperty">
          <source>This class allows third-party channel developers who use a proprietary transaction flow mechanism for their channel, to introduce their transaction into the ServiceModel framework.</source>
          <target state="translated">Cette classe autorise des développeurs de canaux tiers, qui utilisent un mécanisme de flux de transaction propriétaire pour leur canal, à introduire leur transaction dans l’infrastructure ServiceModel.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransactionMessageProperty">
          <source>The transaction is then used when executing the service method.</source>
          <target state="translated">La transaction est ensuite utilisée lors de l'exécution de la méthode de service.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.TransactionMessageProperty">
          <source>This mechanism cannot be used in conjunction with the <ph id="ph1">&lt;xref:System.ServiceModel.TransactionFlowAttribute&gt;</ph>.</source>
          <target state="translated">Ce mécanisme ne peut pas être utilisé conjointement avec l'<ph id="ph1">&lt;xref:System.ServiceModel.TransactionFlowAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransactionMessageProperty.Set(System.Transactions.Transaction,System.ServiceModel.Channels.Message)">
          <source>The transaction that will be used when executing the service method.</source>
          <target state="translated">Transaction qui sera utilisée lors de l’exécution de la méthode de service.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransactionMessageProperty.Set(System.Transactions.Transaction,System.ServiceModel.Channels.Message)">
          <source>The incoming message that results in calling the service method.</source>
          <target state="translated">Message entrant qui provoque l'appel à la méthode de service.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransactionMessageProperty.Set(System.Transactions.Transaction,System.ServiceModel.Channels.Message)">
          <source>Sets the transaction that will be used when executing the service method.</source>
          <target state="translated">Définit la transaction qui sera utilisée lors de l’exécution de la méthode de service.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransactionMessageProperty.Set(System.Transactions.Transaction,System.ServiceModel.Channels.Message)">
          <source>A custom incoming channel (which is part of a service’s channel stack) can call this method to add a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransactionMessageProperty&gt;</ph>, containing the <ph id="ph2">`transaction`</ph> parameter, to the <ph id="ph3">`Properties`</ph> collection of the <ph id="ph4">`message`</ph> parameter.</source>
          <target state="translated">Un canal entrant personnalisé (qui fait partie de la pile de canaux d'un service) peut appeler cette méthode pour ajouter une <ph id="ph1">&lt;xref:System.ServiceModel.Channels.TransactionMessageProperty&gt;</ph>, contenant le paramètre <ph id="ph2">`transaction`</ph>, à la collection <ph id="ph3">`Properties`</ph> du paramètre <ph id="ph4">`message`</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransactionMessageProperty.Set(System.Transactions.Transaction,System.ServiceModel.Channels.Message)">
          <source>This prompts the infrastructure to create a <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> instance using the transaction passed in, before calling the service method requested in the incoming message.</source>
          <target state="translated">L'infrastructure est ainsi invitée à créer une instance <ph id="ph1">&lt;xref:System.Transactions.TransactionScope&gt;</ph> à l'aide de la transaction passée, avant d'appeler la méthode de service demandée dans le message entrant.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.TransactionMessageProperty.Set(System.Transactions.Transaction,System.ServiceModel.Channels.Message)">
          <source>The service method must have the <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A&gt;</ph> property set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">La propriété <ph id="ph1">&lt;xref:System.ServiceModel.OperationBehaviorAttribute.TransactionScopeRequired%2A&gt;</ph> de la méthode de service doit avoir la valeur <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransactionMessageProperty.Set(System.Transactions.Transaction,System.ServiceModel.Channels.Message)">
          <source>The property has already been set on <ph id="ph1">&lt;paramref name="message" /&gt;</ph>.</source>
          <target state="translated">La propriété a déjà la valeur <ph id="ph1">&lt;paramref name="message" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.TransactionMessageProperty.Set(System.Transactions.Transaction,System.ServiceModel.Channels.Message)">
          <source><ph id="ph1">&lt;paramref name="transaction" /&gt;</ph> needs to be unmarshaled, and that operation fails.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="transaction" /&gt;</ph> doit être démarshalée et cette opération échoue.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.TransactionMessageProperty.Transaction">
          <source>Gets the transaction that will be used when executing the service method.</source>
          <target state="translated">Obtient la transaction qui sera utilisée lors de l’exécution de la méthode de service.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.TransactionMessageProperty.Transaction">
          <source>A <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> instance that will be used when executing the service method.</source>
          <target state="translated">Instance <ph id="ph1">&lt;see cref="T:System.Transactions.Transaction" /&gt;</ph> qui sera utilisée lors de l'exécution de la méthode de service.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>