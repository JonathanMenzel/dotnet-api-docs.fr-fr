<Type Name="IRequestChannel" FullName="System.ServiceModel.Channels.IRequestChannel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5ba19057a962669e9dee0277e097cec603c06a61" /><Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/09/2018" /><Meta Name="ms.locfileid" Value="51316590" /></Metadata><TypeSignature Language="C#" Value="public interface IRequestChannel : System.ServiceModel.Channels.IChannel" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRequestChannel implements class System.ServiceModel.Channels.IChannel, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IRequestChannel" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRequestChannel&#xA;Implements IChannel" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRequestChannel : System::ServiceModel::Channels::IChannel" />
  <TypeSignature Language="F#" Value="type IRequestChannel = interface&#xA;    interface IChannel&#xA;    interface ICommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.ICommunicationObject</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Définit le contrat qu'un canal doit implémenter pour se trouver du côté de la demande d'une communication demande-réponse entre des points de terminaison de messagerie.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-interface-note](~/includes/untrusted-data-interface-note.md)]

 <xref:System.ServiceModel.Channels.IRequestChannel> définit des variantes synchrones et asynchrones d'une méthode <xref:System.ServiceModel.ClientBase%601.ChannelBase%601.System%23ServiceModel%23Channels%23IRequestChannel%23Request%2A> qui retourne un message de réponse. Il fournit également une <xref:System.ServiceModel.Channels.IRequestChannel.RemoteAddress%2A> et des propriétés <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> pour récupérer l'adresse de point de terminaison et l'URI auxquels le message de demande est envoyé.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginRequest">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lance une opération asynchrone pour transmettre un message de demande du point de vue de la réponse d'un échange de messages de demande-réponse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRequest (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRequest(class System.ServiceModel.Channels.Message message, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRequest(System::ServiceModel::Channels::Message ^ message, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginRequest : System.ServiceModel.Channels.Message * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRequestChannel.BeginRequest (message, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">Demande <see cref="T:System.ServiceModel.Channels.Message" /> à transmettre.</param>
        <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone transmettant un message de demande.</param>
        <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération asynchrone transmettant un message de demande.</param>
        <summary>Lance une opération asynchrone pour transmettre un message de demande du point de vue de la réponse d'un échange de messages de demande-réponse.</summary>
        <returns><see cref="T:System.IAsyncResult" /> qui fait référence à la transmission asynchrone du message.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le message de demande envoyé dépasse la taille maximale de message autorisée par la liaison utilisée, une <xref:System.ServiceModel.QuotaExceededException> est levée. La taille maximale du message est définie par la propriété <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>. La valeur par défaut est 65 536 octets.  
  
   
  
## Examples  
 Le code suivant illustre l'implémentation de la méthode.  
  
 [!code-csharp[S_UE_HttpCookieSession#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRequest (System.ServiceModel.Channels.Message message, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRequest(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRequest(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginRequest : System.ServiceModel.Channels.Message * TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iRequestChannel.BeginRequest (message, timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">Demande <see cref="T:System.ServiceModel.Channels.Message" /> à transmettre.</param>
        <param name="timeout"><see cref="T:System.TimeSpan" /> qui spécifie l'intervalle de temps au cours duquel une réponse doit être reçue.</param>
        <param name="callback">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone transmettant un message de demande.</param>
        <param name="state">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération asynchrone transmettant un message de demande.</param>
        <summary>Lance une opération asynchrone pour transmettre un message de demande du point de vue réponse d'un échange de messages de demande-réponse, dans un intervalle de temps spécifié.</summary>
        <returns><see cref="T:System.IAsyncResult" /> qui fait référence à la transmission asynchrone du message.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le message de demande envoyé dépasse la taille maximale de message autorisée par la liaison utilisée, une <xref:System.ServiceModel.QuotaExceededException> doit être levée. La taille maximale du message est définie par la propriété <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>. La valeur par défaut est 65 536 octets.  
  
 Si un `timeout` est passé lors de l'appel de la fonction, cette valeur est utilisée. Si le <xref:System.ServiceModel.Channels.Binding.SendTimeout%2A> est défini sur la liaison, la valeur sur la liaison est utilisée si aucun `timeout` n'est spécifié lors de l'appel de la fonction.  
  
 Le <xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A> est utilisé si aucun délai d'attente n'est spécifié sur la liaison ou lors de l'appel de la fonction. Cette valeur par défaut est 1 minute.  
  
   
  
## Examples  
 Le code suivant illustre l'implémentation de la méthode :  
  
 [!code-csharp[S_UE_HttpCookieSession#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>L'opération doit lever une <see cref="T:System.TimeoutException" /> si le <paramref name="timeout" /> spécifié est dépassé avant que l'opération soit effectuée.</para></block>
      </Docs>
    </Member>
    <Member MemberName="EndRequest">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndRequest (result As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ EndRequest(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndRequest : IAsyncResult -&gt; System.ServiceModel.Channels.Message" Usage="iRequestChannel.EndRequest result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" /> retourné par un appel à la méthode <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />.</param>
        <summary>Complète une opération asynchrone pour retourner une réponse basée sur un message à une demande transmise.</summary>
        <returns><see cref="T:System.ServiceModel.Channels.Message" /> reçu en réponse à la demande.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le message de demande envoyé dépasse la taille maximale de message autorisée par la liaison utilisée, une <xref:System.ServiceModel.QuotaExceededException> est levée. La taille maximale du message est définie par la propriété <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>. La valeur par défaut est 65 536 octets.  
  
   
  
## Examples  
 Le code suivant illustre l'implémentation de la méthode.  
  
 [!code-csharp[S_UE_HttpCookieSession#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress RemoteAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress RemoteAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteAddress As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ RemoteAddress { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteAddress : System.ServiceModel.EndpointAddress" Usage="System.ServiceModel.Channels.IRequestChannel.RemoteAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'adresse distante à laquelle le canal de demande envoie des messages.</summary>
        <value><see cref="T:System.ServiceModel.EndpointAddress" /> à laquelle le canal de demande envoie des messages.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'<xref:System.ServiceModel.EndpointAddress> sert à la fois de destination finale et d'adresse physique si aucune <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> n'est spécifiée. Si la <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> est spécifiée, elle correspond alors à l'adresse physique réelle à laquelle le message est envoyé et qu'il doit utiliser pour arriver à destination.  
  
   
  
## Examples  
 Le code suivant illustre l'implémentation de la propriété .  
  
 [!code-csharp[S_UE_HttpCookieSession#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Request">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Envoie une demande basée sur un message et retourne la réponse basée sur un message corrélé.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message Request (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message Request(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ Request(System::ServiceModel::Channels::Message ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Request : System.ServiceModel.Channels.Message -&gt; System.ServiceModel.Channels.Message" Usage="iRequestChannel.Request message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">Demande <see cref="T:System.ServiceModel.Channels.Message" /> à transmettre.</param>
        <summary>Envoie une demande basée sur un message et retourne la réponse basée sur un message corrélé.</summary>
        <returns><see cref="T:System.ServiceModel.Channels.Message" /> reçu en réponse à la demande.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les implémentations de <xref:System.ServiceModel.Channels.IRequestChannel> garantissent la correspondance du message de réponse avec le message de demande.  
  
 En général, si une implémentation de <xref:System.ServiceModel.Channels.IRequestChannel> reçoit un message qui ne correspond pas à une demande en attente, il est désposé.  
  
 La méthode <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> peut être appelée simultanément entre plusieurs threads.  
  
 Le transit du message à travers le canal de demande entraîne l'accès au message. Après avoir appelé <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>, vous ne pouvez plus inspecter le message ou appeler <xref:System.ServiceModel.Channels.Message.Close%2A> sur le message.  
  
 Si le message de demande envoyé dépasse la taille maximale de message autorisée par la liaison utilisée, une <xref:System.ServiceModel.QuotaExceededException> est levée. La taille maximale du message est définie par la propriété <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>. La valeur par défaut est 65 536 octets.  
  
   
  
## Examples  
 Le code suivant illustre l'implémentation de la méthode :  
  
 [!code-csharp[S_UE_HttpCookieSession#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message Request (System.ServiceModel.Channels.Message message, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message Request(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ Request(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member Request : System.ServiceModel.Channels.Message * TimeSpan -&gt; System.ServiceModel.Channels.Message" Usage="iRequestChannel.Request (message, timeout)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="message">Demande <see cref="T:System.ServiceModel.Channels.Message" /> à transmettre.</param>
        <param name="timeout"><see cref="T:System.TimeSpan" /> qui spécifie l'intervalle de temps au cours duquel une réponse doit être reçue.</param>
        <summary>Envoie une demande basée sur un message et retourne la réponse basée sur un message corrélé dans un intervalle de temps spécifié.</summary>
        <returns><see cref="T:System.ServiceModel.Channels.Message" /> reçu en réponse à la demande.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les implémentations de <xref:System.ServiceModel.Channels.IRequestChannel> garantissent la correspondance du message de réponse avec le message de demande.  
  
 En général, si une implémentation de <xref:System.ServiceModel.Channels.IRequestChannel> reçoit un message qui ne correspond pas à une demande en attente, il est désposé.  
  
 La méthode <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> peut être appelée simultanément entre plusieurs threads.  
  
 Le transit du message à travers le canal de demande entraîne l'accès au message. Après avoir appelé <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>, vous ne pouvez plus inspecter le message ou appeler <xref:System.ServiceModel.Channels.Message.Close%2A> sur le message.  
  
 Si le message de demande envoyé dépasse la taille maximale de message autorisée par la liaison utilisée, une <xref:System.ServiceModel.QuotaExceededException> est levée. La taille maximale du message est définie par la propriété <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>. La valeur par défaut est 65 536 octets.  
  
 Si un `timeout` est passé lors de l'appel de la fonction, cette valeur est utilisée. Si le <xref:System.ServiceModel.Channels.Binding.SendTimeout%2A> est défini sur la liaison, la valeur sur la liaison est utilisée si aucun `timeout` n'est spécifié lors de l'appel de la fonction.  
  
 Le <xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A> est utilisé si aucun délai d'attente n'est spécifié sur la liaison ou lors de l'appel de la fonction. Cette valeur par défaut est 1 minute.  
  
   
  
## Examples  
 Le code suivant illustre l'implémentation de la méthode.  
  
 [!code-csharp[S_UE_HttpCookieSession#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>L'opération doit lever une <see cref="T:System.TimeoutException" /> si le <paramref name="timeout" /> spécifié est dépassé avant que l'opération soit effectuée.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Via">
      <MemberSignature Language="C#" Value="public Uri Via { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Via" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IRequestChannel.Via" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Via As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Via { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Via : Uri" Usage="System.ServiceModel.Channels.IRequestChannel.Via" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'adresse de transport à laquelle la demande est envoyée.</summary>
        <value><see cref="T:System.Uri" /> qui contient l'adresse de transport à laquelle le message est envoyé.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'<xref:System.ServiceModel.EndpointAddress> sert à la fois de destination finale et d'adresse physique si aucune <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> n'est spécifiée. Si la <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> est spécifiée, elle correspond alors à l'adresse physique réelle à laquelle le message est envoyé et qu'il doit utiliser pour arriver à destination.  
  
   
  
## Examples  
 Le code suivant illustre l'implémentation de la propriété .  
  
 [!code-csharp[S_UE_HttpCookieSession#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>