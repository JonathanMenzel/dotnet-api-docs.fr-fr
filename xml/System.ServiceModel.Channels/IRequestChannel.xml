<Type Name="IRequestChannel" FullName="System.ServiceModel.Channels.IRequestChannel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d8f470aa67fe4154b5be3773a5881997b9b9adac" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IRequestChannel : System.ServiceModel.Channels.IChannel" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IRequestChannel implements class System.ServiceModel.Channels.IChannel, class System.ServiceModel.ICommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IRequestChannel" />
  <TypeSignature Language="VB.NET" Value="Public Interface IRequestChannel&#xA;Implements IChannel" />
  <TypeSignature Language="C++ CLI" Value="public interface class IRequestChannel : System::ServiceModel::Channels::IChannel" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="b352d-101">Définit le contrat qu'un canal doit implémenter pour se trouver du côté de la demande d'une communication demande-réponse entre des points de terminaison de messagerie.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b352d-101">Defines the contract that a channel must implement to be on the requesting side of a request-reply communication between messaging endpoints.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b352d-102"><xref:System.ServiceModel.Channels.IRequestChannel> définit des variantes synchrones et asynchrones d'une méthode <xref:System.ServiceModel.ClientBase%601.ChannelBase%601.System%23ServiceModel%23Channels%23IRequestChannel%23Request%2A> qui retourne un message de réponse.</span><span class="sxs-lookup"><span data-stu-id="b352d-102">The <xref:System.ServiceModel.Channels.IRequestChannel> defines synchronous and asynchronous variants of a <xref:System.ServiceModel.ClientBase%601.ChannelBase%601.System%23ServiceModel%23Channels%23IRequestChannel%23Request%2A> method that returns a response message.</span></span> <span data-ttu-id="b352d-103">Il fournit également une <xref:System.ServiceModel.Channels.IRequestChannel.RemoteAddress%2A> et des propriétés <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> pour récupérer l'adresse de point de terminaison et l'URI auxquels le message de demande est envoyé.</span><span class="sxs-lookup"><span data-stu-id="b352d-103">It also provides a <xref:System.ServiceModel.Channels.IRequestChannel.RemoteAddress%2A> and <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> properties to retrieve the endpoint address and URI to which the request message is sent.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginRequest">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b352d-104">Lance une opération asynchrone pour transmettre un message de demande du point de vue de la réponse d'un échange de messages de demande-réponse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b352d-104">Begins an asynchronous operation to transmit a request message to the reply side of a request-reply message exchange.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRequest (System.ServiceModel.Channels.Message message, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRequest(class System.ServiceModel.Channels.Message message, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRequest(System::ServiceModel::Channels::Message ^ message, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b352d-105">Demande <see cref="T:System.ServiceModel.Channels.Message" /> à transmettre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b352d-105">The request <see cref="T:System.ServiceModel.Channels.Message" /> to be transmitted.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="b352d-106">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone transmettant un message de demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b352d-106">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the completion of the asynchronous operation transmitting a request message.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="b352d-107">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération asynchrone transmettant un message de demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b352d-107">An object, specified by the application, that contains state information associated with the asynchronous operation transmitting a request message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b352d-108">Lance une opération asynchrone pour transmettre un message de demande du point de vue de la réponse d'un échange de messages de demande-réponse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b352d-108">Begins an asynchronous operation to transmit a request message to the reply side of a request-reply message exchange.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b352d-109">
            <see cref="T:System.IAsyncResult" /> qui fait référence à la transmission asynchrone du message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b352d-109">The <see cref="T:System.IAsyncResult" /> that references the asynchronous message transmission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b352d-110">Si le message de demande envoyé dépasse la taille maximale de message autorisée par la liaison utilisée, une <xref:System.ServiceModel.QuotaExceededException> est levée.</span><span class="sxs-lookup"><span data-stu-id="b352d-110">If the request message is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="b352d-111">La taille maximale du message est définie par la propriété <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="b352d-111">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="b352d-112">La valeur par défaut est 65 536 octets.</span><span class="sxs-lookup"><span data-stu-id="b352d-112">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b352d-113">Le code suivant illustre l'implémentation de la méthode.</span><span class="sxs-lookup"><span data-stu-id="b352d-113">The following code shows how to implement this method.</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginRequest">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginRequest (System.ServiceModel.Channels.Message message, TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginRequest(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.BeginRequest(System.ServiceModel.Channels.Message,System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginRequest(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b352d-114">Demande <see cref="T:System.ServiceModel.Channels.Message" /> à transmettre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b352d-114">The request <see cref="T:System.ServiceModel.Channels.Message" /> to be transmitted.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="b352d-115">
            <see cref="T:System.TimeSpan" /> qui spécifie l'intervalle de temps au cours duquel une réponse doit être reçue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b352d-115">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which a response must be received.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="b352d-116">Le délégué <see cref="T:System.AsyncCallback" /> qui reçoit la notification de la fin de l'opération asynchrone transmettant un message de demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b352d-116">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the completion of the asynchronous operation transmitting a request message.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="b352d-117">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération asynchrone transmettant un message de demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b352d-117">An object, specified by the application, that contains state information associated with the asynchronous operation transmitting a request message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b352d-118">Lance une opération asynchrone pour transmettre un message de demande du point de vue réponse d'un échange de messages de demande-réponse, dans un intervalle de temps spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b352d-118">Begins an asynchronous operation to transmit a request message to the reply side of a request-reply message exchange within a specified interval of time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b352d-119">
            <see cref="T:System.IAsyncResult" /> qui fait référence à la transmission asynchrone du message.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b352d-119">The <see cref="T:System.IAsyncResult" /> that references the asynchronous message transmission.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b352d-120">Si le message de demande envoyé dépasse la taille maximale de message autorisée par la liaison utilisée, une <xref:System.ServiceModel.QuotaExceededException> doit être levée.</span><span class="sxs-lookup"><span data-stu-id="b352d-120">If the request message is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> should be thrown.</span></span> <span data-ttu-id="b352d-121">La taille maximale du message est définie par la propriété <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="b352d-121">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="b352d-122">La valeur par défaut est 65 536 octets.</span><span class="sxs-lookup"><span data-stu-id="b352d-122">The default value is 65536 bytes.</span></span>  
  
 <span data-ttu-id="b352d-123">Si un `timeout` est passé lors de l'appel de la fonction, cette valeur est utilisée.</span><span class="sxs-lookup"><span data-stu-id="b352d-123">If a `timeout` is passed while calling the function then that value is used.</span></span> <span data-ttu-id="b352d-124">Si le <xref:System.ServiceModel.Channels.Binding.SendTimeout%2A> est défini sur la liaison, la valeur sur la liaison est utilisée si aucun `timeout` n'est spécifié lors de l'appel de la fonction.</span><span class="sxs-lookup"><span data-stu-id="b352d-124">If the <xref:System.ServiceModel.Channels.Binding.SendTimeout%2A> is set on the binding, then the value on the binding is used if no `timeout` is specified while calling the function.</span></span>  
  
 <span data-ttu-id="b352d-125">Le <xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A> est utilisé si aucun délai d'attente n'est spécifié sur la liaison ou lors de l'appel de la fonction.</span><span class="sxs-lookup"><span data-stu-id="b352d-125">The <xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A> is used if no timeout is specified on either the binding or while calling the function.</span></span> <span data-ttu-id="b352d-126">Cette valeur par défaut est 1 minute.</span><span class="sxs-lookup"><span data-stu-id="b352d-126">This default value is 1 minute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b352d-127">Le code suivant illustre l'implémentation de la méthode :</span><span class="sxs-lookup"><span data-stu-id="b352d-127">The following code shows how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b352d-128">L'opération doit lever une <see cref="T:System.TimeoutException" /> si le <paramref name="timeout" /> spécifié est dépassé avant que l'opération soit effectuée.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b352d-128">The operation should throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded before the operation is completed.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndRequest">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message EndRequest (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message EndRequest(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.EndRequest(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndRequest (result As IAsyncResult) As Message" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ EndRequest(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="b352d-129">
            <see cref="T:System.IAsyncResult" /> retourné par un appel à la méthode <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b352d-129">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="Overload:System.ServiceModel.Channels.IInputChannel.BeginReceive" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b352d-130">Complète une opération asynchrone pour retourner une réponse basée sur un message à une demande transmise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b352d-130">Completes an asynchronous operation to return a message-based response to a transmitted request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b352d-131">
            <see cref="T:System.ServiceModel.Channels.Message" /> reçu en réponse à la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b352d-131">The <see cref="T:System.ServiceModel.Channels.Message" /> received in response to the request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b352d-132">Si le message de demande envoyé dépasse la taille maximale de message autorisée par la liaison utilisée, une <xref:System.ServiceModel.QuotaExceededException> est levée.</span><span class="sxs-lookup"><span data-stu-id="b352d-132">If the request message is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="b352d-133">La taille maximale du message est définie par la propriété <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="b352d-133">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="b352d-134">La valeur par défaut est 65 536 octets.</span><span class="sxs-lookup"><span data-stu-id="b352d-134">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b352d-135">Le code suivant illustre l'implémentation de la méthode.</span><span class="sxs-lookup"><span data-stu-id="b352d-135">The following code shows how to implement this method.</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteAddress">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress RemoteAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress RemoteAddress" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IRequestChannel.RemoteAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteAddress As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ RemoteAddress { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b352d-136">Obtient l'adresse distante à laquelle le canal de demande envoie des messages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b352d-136">Gets the remote address to which the request channel sends messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b352d-137">
            <see cref="T:System.ServiceModel.EndpointAddress" /> à laquelle le canal de demande envoie des messages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b352d-137">The <see cref="T:System.ServiceModel.EndpointAddress" /> to which the request channel sends messages.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b352d-138">L'<xref:System.ServiceModel.EndpointAddress> sert à la fois de destination finale et d'adresse physique si aucune <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> n'est spécifiée.</span><span class="sxs-lookup"><span data-stu-id="b352d-138">The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> is not specified.</span></span> <span data-ttu-id="b352d-139">Si la <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> est spécifiée, elle correspond alors à l'adresse physique réelle à laquelle le message est envoyé et qu'il doit utiliser pour arriver à destination.</span><span class="sxs-lookup"><span data-stu-id="b352d-139">If the <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b352d-140">Le code suivant illustre l'implémentation de la propriété .</span><span class="sxs-lookup"><span data-stu-id="b352d-140">The following code shows how to implement this property.</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#0)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Request">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b352d-141">Envoie une demande basée sur un message et retourne la réponse basée sur un message corrélé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b352d-141">Sends a message-based request and returns the correlated message-based response.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message Request (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message Request(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ Request(System::ServiceModel::Channels::Message ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b352d-142">Demande <see cref="T:System.ServiceModel.Channels.Message" /> à transmettre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b352d-142">The request <see cref="T:System.ServiceModel.Channels.Message" /> to be transmitted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b352d-143">Envoie une demande basée sur un message et retourne la réponse basée sur un message corrélé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b352d-143">Sends a message-based request and returns the correlated message-based response.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b352d-144">
            <see cref="T:System.ServiceModel.Channels.Message" /> reçu en réponse à la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b352d-144">The <see cref="T:System.ServiceModel.Channels.Message" /> received in response to the request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b352d-145">Les implémentations de <xref:System.ServiceModel.Channels.IRequestChannel> garantissent la correspondance du message de réponse avec le message de demande.</span><span class="sxs-lookup"><span data-stu-id="b352d-145">Implementations of <xref:System.ServiceModel.Channels.IRequestChannel> ensure that the response message is correlated with the request message.</span></span>  
  
 <span data-ttu-id="b352d-146">En général, si une implémentation de <xref:System.ServiceModel.Channels.IRequestChannel> reçoit un message qui ne correspond pas à une demande en attente, il est supprimé.</span><span class="sxs-lookup"><span data-stu-id="b352d-146">Generally, if an implementation of <xref:System.ServiceModel.Channels.IRequestChannel> receives a message that is not correlated to an outstanding request, it is dropped.</span></span>  
  
 <span data-ttu-id="b352d-147">La méthode <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> peut être appelée simultanément entre plusieurs threads.</span><span class="sxs-lookup"><span data-stu-id="b352d-147">The <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> method can be called concurrently across multiple threads.</span></span>  
  
 <span data-ttu-id="b352d-148">Le transit du message à travers le canal de demande entraîne l'accès au message.</span><span class="sxs-lookup"><span data-stu-id="b352d-148">Passing the message into the request channel causes the message to be accessed.</span></span> <span data-ttu-id="b352d-149">Après avoir appelé <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>, vous ne pouvez plus inspecter le message ou appeler <xref:System.ServiceModel.Channels.Message.Close%2A> sur le message.</span><span class="sxs-lookup"><span data-stu-id="b352d-149">After you call <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>, you can no longer inspect the message or call <xref:System.ServiceModel.Channels.Message.Close%2A> on the message.</span></span>  
  
 <span data-ttu-id="b352d-150">Si le message de demande envoyé dépasse la taille maximale de message autorisée par la liaison utilisée, une <xref:System.ServiceModel.QuotaExceededException> est levée.</span><span class="sxs-lookup"><span data-stu-id="b352d-150">If the request message is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="b352d-151">La taille maximale du message est définie par la propriété <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="b352d-151">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="b352d-152">La valeur par défaut est 65 536 octets.</span><span class="sxs-lookup"><span data-stu-id="b352d-152">The default value is 65536 bytes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b352d-153">Le code suivant illustre l'implémentation de la méthode :</span><span class="sxs-lookup"><span data-stu-id="b352d-153">The following code shows how to implement this method:</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.Message Request (System.ServiceModel.Channels.Message message, TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.ServiceModel.Channels.Message Request(class System.ServiceModel.Channels.Message message, valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IRequestChannel.Request(System.ServiceModel.Channels.Message,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::Message ^ Request(System::ServiceModel::Channels::Message ^ message, TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.Message</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="b352d-154">Demande <see cref="T:System.ServiceModel.Channels.Message" /> à transmettre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b352d-154">The request <see cref="T:System.ServiceModel.Channels.Message" /> to be transmitted.</span>
          </span>
        </param>
        <param name="timeout">
          <span data-ttu-id="b352d-155">
            <see cref="T:System.TimeSpan" /> qui spécifie l'intervalle de temps au cours duquel une réponse doit être reçue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b352d-155">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which a response must be received.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b352d-156">Envoie une demande basée sur un message et retourne la réponse basée sur un message corrélé dans un intervalle de temps spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b352d-156">Sends a message-based request and returns the correlated message-based response within a specified interval of time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b352d-157">
            <see cref="T:System.ServiceModel.Channels.Message" /> reçu en réponse à la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b352d-157">The <see cref="T:System.ServiceModel.Channels.Message" /> received in response to the request.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b352d-158">Les implémentations de <xref:System.ServiceModel.Channels.IRequestChannel> garantissent la correspondance du message de réponse avec le message de demande.</span><span class="sxs-lookup"><span data-stu-id="b352d-158">Implementations of <xref:System.ServiceModel.Channels.IRequestChannel> ensure that the response message is correlated with the request message.</span></span>  
  
 <span data-ttu-id="b352d-159">En général, si une implémentation de <xref:System.ServiceModel.Channels.IRequestChannel> reçoit un message qui ne correspond pas à une demande en attente, il est supprimé.</span><span class="sxs-lookup"><span data-stu-id="b352d-159">Generally, if an implementation of <xref:System.ServiceModel.Channels.IRequestChannel> receives a message that is not correlated to an outstanding request, it is dropped.</span></span>  
  
 <span data-ttu-id="b352d-160">La méthode <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> peut être appelée simultanément entre plusieurs threads.</span><span class="sxs-lookup"><span data-stu-id="b352d-160">The <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A> method can be called concurrently across multiple threads.</span></span>  
  
 <span data-ttu-id="b352d-161">Le transit du message à travers le canal de demande entraîne l'accès au message.</span><span class="sxs-lookup"><span data-stu-id="b352d-161">Passing the message into the request channel causes the message to be accessed.</span></span> <span data-ttu-id="b352d-162">Après avoir appelé <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>, vous ne pouvez plus inspecter le message ou appeler <xref:System.ServiceModel.Channels.Message.Close%2A> sur le message.</span><span class="sxs-lookup"><span data-stu-id="b352d-162">After you call <xref:System.ServiceModel.Channels.IRequestChannel.Request%2A>, you can no longer inspect the message or call <xref:System.ServiceModel.Channels.Message.Close%2A> on the message.</span></span>  
  
 <span data-ttu-id="b352d-163">Si le message de demande envoyé dépasse la taille maximale de message autorisée par la liaison utilisée, une <xref:System.ServiceModel.QuotaExceededException> est levée.</span><span class="sxs-lookup"><span data-stu-id="b352d-163">If the request message is larger that the maximum message size allowed by the binding being used, a <xref:System.ServiceModel.QuotaExceededException> is thrown.</span></span> <span data-ttu-id="b352d-164">La taille maximale du message est définie par la propriété <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="b352d-164">The maximum message size is set by the <xref:System.ServiceModel.Channels.TransportBindingElement.MaxReceivedMessageSize%2A> property.</span></span> <span data-ttu-id="b352d-165">La valeur par défaut est 65 536 octets.</span><span class="sxs-lookup"><span data-stu-id="b352d-165">The default value is 65536 bytes.</span></span>  
  
 <span data-ttu-id="b352d-166">Si un `timeout` est passé lors de l'appel de la fonction, cette valeur est utilisée.</span><span class="sxs-lookup"><span data-stu-id="b352d-166">If a `timeout` is passed while calling the function then that value is used.</span></span> <span data-ttu-id="b352d-167">Si le <xref:System.ServiceModel.Channels.Binding.SendTimeout%2A> est défini sur la liaison, la valeur sur la liaison est utilisée si aucun `timeout` n'est spécifié lors de l'appel de la fonction.</span><span class="sxs-lookup"><span data-stu-id="b352d-167">If the <xref:System.ServiceModel.Channels.Binding.SendTimeout%2A> is set on the binding, then the value on the binding is used if no `timeout` is specified while calling the function.</span></span>  
  
 <span data-ttu-id="b352d-168">Le <xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A> est utilisé si aucun délai d'attente n'est spécifié sur la liaison ou lors de l'appel de la fonction.</span><span class="sxs-lookup"><span data-stu-id="b352d-168">The <xref:System.ServiceModel.Channels.ChannelBase.DefaultSendTimeout%2A> is used if no timeout is specified on either the binding or while calling the function.</span></span> <span data-ttu-id="b352d-169">Cette valeur par défaut est 1 minute.</span><span class="sxs-lookup"><span data-stu-id="b352d-169">This default value is 1 minute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b352d-170">Le code suivant illustre l'implémentation de la méthode.</span><span class="sxs-lookup"><span data-stu-id="b352d-170">The following code shows how to implement this method.</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="b352d-171">L'opération doit lever une <see cref="T:System.TimeoutException" /> si le <paramref name="timeout" /> spécifié est dépassé avant que l'opération soit effectuée.</span>
            <span class="sxs-lookup">
              <span data-stu-id="b352d-171">The operation should throw a <see cref="T:System.TimeoutException" /> if the specified <paramref name="timeout" /> is exceeded before the operation is completed.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Via">
      <MemberSignature Language="C#" Value="public Uri Via { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Via" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.IRequestChannel.Via" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Via As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Via { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b352d-172">Obtient l'adresse de transport à laquelle la demande est envoyée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b352d-172">Gets the transport address to which the request is send.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b352d-173">
            <see cref="T:System.Uri" /> qui contient l'adresse de transport à laquelle le message est envoyé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b352d-173">The <see cref="T:System.Uri" /> that contains the transport address to which the message is sent.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b352d-174">L'<xref:System.ServiceModel.EndpointAddress> sert à la fois de destination finale et d'adresse physique si aucune <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> n'est spécifiée.</span><span class="sxs-lookup"><span data-stu-id="b352d-174">The <xref:System.ServiceModel.EndpointAddress> serves as both the ultimate destination and the physical address if a <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> is not specified.</span></span> <span data-ttu-id="b352d-175">Si la <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> est spécifiée, elle correspond alors à l'adresse physique réelle à laquelle le message est envoyé et qu'il doit utiliser pour arriver à destination.</span><span class="sxs-lookup"><span data-stu-id="b352d-175">If the <xref:System.ServiceModel.Channels.IRequestChannel.Via%2A> is specified, then that is the actual physical address to which the message is sent and through which the message must go to arrive at its destination.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b352d-176">Le code suivant illustre l'implémentation de la propriété .</span><span class="sxs-lookup"><span data-stu-id="b352d-176">The following code shows how to implement this property.</span></span>  
  
 [!code-csharp[S_UE_HttpCookieSession#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpcookiesession/cs/httpcookierequestsessionchannel.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>