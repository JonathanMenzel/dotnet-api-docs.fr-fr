<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CommunicationObject.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c52fa24f77f9f41c0532918bdaaa143ccb87ad91.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c52fa24f77f9f41c0532918bdaaa143ccb87ad91</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>Provides a common base implementation for the basic state machine common to all communication-oriented objects in the system, including channels, listeners, and the channel and listener factories.</source>
          <target state="translated">Fournit une implémentation de base courante pour l'ordinateur d'état de base commun à tous les objets orientés communication du système, notamment les canaux, les écouteurs ainsi que les fabriques de canaux et d'écouteurs.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> class implements the <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> interface for all communication objects in <ph id="ph3">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>.</source>
          <target state="translated">La classe <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> implémente l'interface <ph id="ph2">&lt;xref:System.ServiceModel.ICommunicationObject&gt;</ph> pour tous les objets de communication dans <ph id="ph3">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>The method implementations handle parameter validation, raise events that notify the occurrence of state transitions, provide the means to associated additional processing with these state transitions, and ensure that such state changes are coordinated.</source>
          <target state="translated">Les implémentations de méthode gèrent la validation des paramètres, déclenchent des événements qui notifient l’occurrence de transitions d’état, permettent d’associer un traitement supplémentaire à ces transitions d’état et garantissent la coordination de ces changements d’état.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CommunicationObject" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CommunicationObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CommunicationObject" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CommunicationObject" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.#ctor(System.Object)">
          <source>The mutually exclusive lock that protects the class instance during a state transition.</source>
          <target state="translated">Verrou mutuellement exclusif qui protège l'instance de classe pendant une transition d'état.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.#ctor(System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CommunicationObject" /&gt;</ph> class with the mutually exclusive lock to protect the state transitions specified.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.CommunicationObject" /&gt;</ph> avec le verrou mutuellement exclusif afin de protéger les transitions d'état spécifiées.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Abort">
          <source>Causes a communication object to transition immediately from its current state into the closing state.</source>
          <target state="translated">Provoque la transition immédiate d'un objet de communication de son état actuel à l'état de fermeture.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Abort">
          <source>This method indicates that any unfinished work should be ignored or ungracefully terminated before returning.</source>
          <target state="translated">Cette méthode indique que tout travail non achevé doit être ignoré ou terminé de façon anormale avant d'être retourné.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Abort">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A&gt;</ph> method can be used to cancel any outstanding operations, including outstanding calls to <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph>.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A&gt;</ph> peut être utilisée pour annuler les opérations en attente, y compris les appels en attente à <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Abort">
          <source>To gracefully transition a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> from any state other than <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state, call <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> or one of its asynchronous versions, <ph id="ph5">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph>.</source>
          <target state="translated">Pour la transition en douceur d'un <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> de tout état autre que <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> à l'état <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph>, appelez <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> ou une de ses versions asynchrones, <ph id="ph5">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>Begins an asynchronous operation to close a communication object.</source>
          <target state="translated">Commence une opération asynchrone pour fermer un objet de communication.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives notification of the completion of the asynchronous close operation.</source>
          <target state="translated">Le délégué<ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> qui reçoit la notification de la fin de l'opération asynchrone de fermeture.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous close operation.</source>
          <target state="translated">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération asynchrone de fermeture.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to close a communication object.</source>
          <target state="translated">Commence une opération asynchrone pour fermer un objet de communication.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous close operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> qui référence l'opération de fermeture asynchrone.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>This method causes the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> to gracefully transition from any state, other than the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state, into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state within a default interval of time.</source>
          <target state="translated">Cette méthode provoque la transition en douceur de <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> de tout état autre que <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> à l'état <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> dans un intervalle de temps par défaut.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> method allows any unfinished work to be completed before returning.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> permet à tout travail non terminé de se terminer avant d'être retourner.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>For example, finish sending any buffered messages).</source>
          <target state="translated">Par exemple, terminer l'envoi de tout message mis en mémoire tampon.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>This method calls <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> if the communication object was initially in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated">Cette méthode appelle <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> si l'objet de communication était initialement dans l'état <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication n'est pas dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.AsyncCallback,System.Object)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the close operation has to complete before timing out.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> qui spécifie le délai d'exécution de l'opération de fermeture avant le dépassement du délai d'attente.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives notification of the completion of the asynchronous close operation.</source>
          <target state="translated">Le délégué<ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> qui reçoit la notification de la fin de l'opération asynchrone de fermeture.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous close operation.</source>
          <target state="translated">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération asynchrone de fermeture.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to close a communication object with a specified timeout.</source>
          <target state="translated">Commence une opération asynchrone pour fermer un objet de communication avec un délai d'attente spécifié.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous close operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> qui référence l'opération de fermeture asynchrone.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method causes the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> to gracefully transition from any state, other than the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state, into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state with in a specified interval of time.</source>
          <target state="translated">Cette méthode provoque la transition en douceur de <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> de tout état autre que <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> à l'état <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> dans un intervalle de temps spécifié.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> method allows any unfinished work to be completed before returning.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> permet à tout travail non terminé de se terminer avant d'être retourner.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>For example, finish sending any buffered messages).</source>
          <target state="translated">Par exemple, terminer l'envoi de tout message mis en mémoire tampon.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method calls <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginClose%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> if the communication object was initially in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated">Cette méthode appelle <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginClose%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> si l'objet de communication était initialement dans l'état <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication n'est pas dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>Begins an asynchronous operation to open a communication object.</source>
          <target state="translated">Commence une opération asynchrone pour ouvrir un objet de communication.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives notification of the completion of the asynchronous open operation.</source>
          <target state="translated">Le délégué <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> qui reçoit la notification de la fin de l'opération d'ouverture asynchrone.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous open operation.</source>
          <target state="translated">Objet, spécifié par l'application, qui contient des informations d'état associées à l'opération d'ouverture asynchrone.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to open a communication object.</source>
          <target state="translated">Commence une opération asynchrone pour ouvrir un objet de communication.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous open operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> qui fait référence à l'opération asynchrone d'ouverture.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> if the communication object is initially in the <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> appelle <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> si l'objet de communication est initialement dans l'état <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>To insert processing after a communication object transitions to a closing state due to the invocation of a synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> operation, use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method.</source>
          <target state="translated">Pour insérer le traitement après qu'un objet de communication est passé à l'état de fermeture en raison de l'appel d'une opération <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> synchrone, utilisez la méthode <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication n'est pas dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.AsyncCallback,System.Object)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the send operation has to complete before timing out.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> qui spécifie le délai d'exécution de l'opération d'envoi avant dépassement du délai d'attente.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives notification of the completion of the asynchronous open operation.</source>
          <target state="translated">Le délégué <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> qui reçoit la notification de la fin de l'opération d'ouverture asynchrone.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous open operation.</source>
          <target state="translated">Objet, spécifié par l'application, qui contient des informations d'état associées à l'opération d'ouverture asynchrone.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Begins an asynchronous operation to open a communication object within a specified interval of time.</source>
          <target state="translated">Commence une opération asynchrone pour ouvrir un objet de communication dans un intervalle de temps spécifié.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous open operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> qui fait référence à l'opération asynchrone d'ouverture.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> if the communication object is initially in the <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> appelle <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> si l'objet de communication est initialement dans l'état <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To insert processing after a communication object transitions to a closing state due to the invocation of a synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> operation, use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method.</source>
          <target state="translated">Pour insérer le traitement après qu'un objet de communication est passé à l'état de fermeture en raison de l'appel d'une opération <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> synchrone, utilisez la méthode <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication n'est pas dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.BeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>Causes a communication object to transition from its current state into the closed state.</source>
          <target state="translated">Provoque la transition d'un objet de communication de son état actuel à l'état fermé.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>Causes a communication object to transition from its current state into the closed state.</source>
          <target state="translated">Provoque la transition d'un objet de communication de son état actuel à l'état fermé.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>This method causes a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> to gracefully transition from any state, other than the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state, into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state.</source>
          <target state="translated">Cette méthode provoque la transition en douceur de <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> de tout état autre que <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> à l'état <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method allows any unfinished work to be completed before returning.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> permet à tout travail non terminé de se terminer avant d'être retourner.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>For example, finish sending any buffered messages.</source>
          <target state="translated">Par exemple, terminer l'envoi de tout message mis en mémoire tampon.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> enters the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph> state and remains in it after the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method is called until the transition to the <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state is completed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> passe à l'état <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph> et y reste après que la méthode <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> a été appelée jusqu'à la fin de la transition à l'état <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>The transition consists of making successive calls to <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%28System.TimeSpan%29&gt;</ph>, and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph>.</source>
          <target state="translated">La transition consiste en des appels successifs à <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%28System.TimeSpan%29&gt;</ph> et <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>There is also an asynchronous version of the close method that is initiated by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph>.</source>
          <target state="translated">Il existe également une version asynchrone de la méthode de fermeture qui est lancée en appelant <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication n'est pas dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the close operation has to complete before timing out.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> qui spécifie le délai d'exécution de l'opération de fermeture avant le dépassement du délai d'attente.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>Causes a communication object to transition from its current state into the closed state within a specified interval of time.</source>
          <target state="translated">Provoque la transition d'un objet de communication de son état actuel à l'état fermé dans un intervalle de temps spécifié.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>This method causes a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> to gracefully transition from any state, other than the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state, into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state within a specified interval of time.</source>
          <target state="translated">Cette méthode provoque la transition en douceur de <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> de tout état autre que <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> à l'état <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> dans un intervalle de temps spécifié.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method allows any unfinished work to be completed before returning.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> permet à tout travail non terminé de se terminer avant d'être retourner.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>For example, finish sending any buffered messages.</source>
          <target state="translated">Par exemple, terminer l'envoi de tout message mis en mémoire tampon.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> enters the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph> state and remains in it after the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method is called until the transition to the <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state is completed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> passe à l'état <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Closing&gt;</ph> et y reste après que la méthode <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> a été appelée jusqu'à la fin de la transition à l'état <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>The transition consists of making successive calls to <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%28System.TimeSpan%29&gt;</ph> and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph>.</source>
          <target state="translated">La transition consiste en des appels successifs à <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%28System.TimeSpan%29&gt;</ph> et <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>There is also an asynchronous version of the close method that is initiated by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph>.</source>
          <target state="translated">Il existe également une version asynchrone de la méthode de fermeture qui est lancée en appelant <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication n'est pas dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Close(System.TimeSpan)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.Channels.CommunicationObject.Closed">
          <source>Occurs when a communication object transitions into the closed state.</source>
          <target state="translated">Se produit lorsqu'un objet de communication passe à l'état fermé.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.Channels.CommunicationObject.Closed">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Closed&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndClose%2A&gt;</ph> methods.</source>
          <target state="translated">L'événement <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Closed&gt;</ph> est déclenché par la méthode <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph>, qui est appelée par les méthodes <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> et <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndClose%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.Channels.CommunicationObject.Closing">
          <source>Occurs when a communication object transitions into the closing state.</source>
          <target state="translated">Se produit lorsqu'un objet de communication passe à l'état de fermeture.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.Channels.CommunicationObject.Closing">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Closing&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> methods.</source>
          <target state="translated">L'événement <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Closing&gt;</ph> est déclenché par la méthode <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph>, qui est appelée par les méthodes <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> et <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
          <source>When overridden in a derived class, gets the default interval of time provided for a close operation to complete.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, obtient l'intervalle de temps par défaut prévu pour l'exécution d'une opération de fermeture.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CommunicationObject.DefaultCloseTimeout">
          <source>The default <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the close operation has to complete before timing out.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> par défaut qui spécifie le délai d'exécution de l'opération de fermeture avant le dépassement du délai d'attente.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
          <source>When overridden in a derived class, gets the default interval of time provided for an open operation to complete.</source>
          <target state="translated">En cas de substitution dans une classe dérivée, obtient l'intervalle de temps par défaut prévu pour l'exécution d'une opération d'ouverture.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CommunicationObject.DefaultOpenTimeout">
          <source>The default <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the open operation has to complete before timing out.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> par défaut qui spécifie le délai d'exécution de l'opération d'ouverture avant le dépassement du délai d'attente.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that is returned by a call to the <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> qui est retourné par un appel à la méthode <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
          <source>Completes an asynchronous operation to close a communication object.</source>
          <target state="translated">Termine une opération asynchrone pour fermer un objet de communication.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
          <source>A synchronous version of this method is provided by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method.</source>
          <target state="translated">Une version synchrone de cette méthode est fournie par la méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication n'est pas dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndClose(System.IAsyncResult)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that is returned by a call to the <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> qui est retourné par un appel à la méthode <ph id="ph2">&lt;see cref="Overload:System.ServiceModel.Channels.CommunicationObject.BeginClose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
          <source>Completes an asynchronous operation to open a communication object.</source>
          <target state="translated">Termine une opération asynchrone pour ouvrir un objet de communication.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
          <source>A synchronous version of this method is provided by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method.</source>
          <target state="translated">Une version synchrone de cette méthode est fournie par la méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication n'est pas dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.EndOpen(System.IAsyncResult)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Fault">
          <source>Causes a communication object to transition from its current state into the faulted state.</source>
          <target state="translated">Provoque la transition d'un objet de communication de son état actuel à l'état d'erreur.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Fault">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Faulted&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnFaulted%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Fault%2A&gt;</ph> method.</source>
          <target state="translated">L'événement <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Faulted&gt;</ph> est déclenché par la méthode <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnFaulted%2A&gt;</ph>, qui est appelée par la méthode <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Fault%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.Channels.CommunicationObject.Faulted">
          <source>Occurs when a communication object transitions into the faulted state.</source>
          <target state="translated">Se produit lorsqu'un objet de communication passe à l'état d'erreur.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.Channels.CommunicationObject.Faulted">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Faulted&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnFaulted%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Fault%2A&gt;</ph> method.</source>
          <target state="translated">L'événement <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Faulted&gt;</ph> est déclenché par la méthode <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnFaulted%2A&gt;</ph>, qui est appelée par la méthode <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Fault%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType">
          <source>Gets the type of communication object.</source>
          <target state="translated">Obtient le type d'objet de communication.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.GetCommunicationObjectType">
          <source>The type of communication object.</source>
          <target state="translated">Type d'objet de communication.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed">
          <source>Gets a value that indicates whether the communication object has been disposed.</source>
          <target state="translated">Obtient une valeur qui indique si l'objet de communication a été supprimé.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the communication object is in a closed state; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'état de l'objet de communication est fermé ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CommunicationObject.IsDisposed">
          <source>An object is considered disposed when the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Closed&gt;</ph> event occurs.</source>
          <target state="translated">Un objet est considéré comme supprimé lorsque l'événement <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Closed&gt;</ph> se produit.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
          <source>Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous abort operation.</source>
          <target state="translated">Insère le traitement sur un objet de communication après la transition vers l’état de fermeture en raison de l’appel d’une opération d’abandon synchrone.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnAbort">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnAbort%2A&gt;</ph> if the communication object is not already in a <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Abort%2A&gt;</ph> appelle <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnAbort%2A&gt;</ph> si l'objet de communication n'est pas déjà dans l'état <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the on close operation has to complete before timing out.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> qui spécifie le délai d'exécution de l'opération de fermeture avant le dépassement du délai d'attente.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives notification of the completion of the asynchronous on close operation.</source>
          <target state="translated">Délégué <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> qui reçoit la notification de la fin de l'opération de fermeture asynchrone.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous on close operation.</source>
          <target state="translated">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération de fermeture asynchrone.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Inserts processing after a communication object transitions to the closing state due to the invocation of an asynchronous close operation.</source>
          <target state="translated">Insère le traitement après qu'un objet de communication est passé à l'état de fermeture en raison de l'appel d'une opération de fermeture asynchrone.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous on close operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> qui fait référence à l'opération de fermeture asynchrone.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginClose%2A&gt;</ph> if the communication object is initially in the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> appelle <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginClose%2A&gt;</ph> si l'objet de communication est initialement dans l'état <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To insert processing after a communication object transitions to a closing state due to the invocation of a synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> operation, use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%28System.TimeSpan%29&gt;</ph> method.</source>
          <target state="translated">Pour insérer le traitement après qu'un objet de communication est passé à l'état de fermeture en raison de l'appel d'une opération <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> synchrone, utilisez la méthode <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%28System.TimeSpan%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication n'est pas dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the on open operation has to complete before timing out.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> qui spécifie le délai d'exécution de l'opération d'ouverture avant le dépassement du délai d'attente.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that receives notification of the completion of the asynchronous on open operation.</source>
          <target state="translated">Délégué <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> qui reçoit la notification de la fin de l'opération d'ouverture asynchrone.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object, specified by the application, that contains state information associated with the asynchronous on open operation.</source>
          <target state="translated">Objet, spécifié par l'application, qui contient les informations d'état associées à l'opération d'ouverture asynchrone.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Inserts processing on a communication object after it transitions to the opening state due to the invocation of an asynchronous open operation.</source>
          <target state="translated">Insère le traitement sur un objet de communication après sa transition vers l'état d'ouverture en raison de l'appel d'une opération d'ouverture asynchrone.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that references the asynchronous on open operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> qui fait référence à l'opération d'ouverture asynchrone.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To insert processing after a communication object transitions to a opening state due to the invocation of a synchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> operation, use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method.</source>
          <target state="translated">Pour insérer le traitement après qu'un objet de communication est passé à l'état d'ouverture en raison de l'appel d'une opération <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> synchrone, utilisez la méthode <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication n'est pas dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the on close operation has to complete before timing out.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> qui spécifie le délai d'exécution de l'opération de fermeture avant le dépassement du délai d'attente.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
          <source>Inserts processing on a communication object after it transitions to the closing state due to the invocation of a synchronous close operation.</source>
          <target state="translated">Insère le traitement sur un objet de communication après sa transition vers l’état de fermeture en raison de l’appel d’une opération de fermeture synchrone.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%2A&gt;</ph> if the communication object is initially in the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> appelle <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClose%2A&gt;</ph> si l'objet de communication est initialement dans l'état <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
          <source>To insert processing after a communication object transitions to a closing state due to the invocation of an asynchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> operation, use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginClose%2A&gt;</ph> method.</source>
          <target state="translated">Pour insérer le traitement après qu'un objet de communication est passé à l'état de fermeture en raison de l'appel d'une opération <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginClose%2A&gt;</ph> asynchrone, utilisez la méthode <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginClose%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
          <source><ph id="ph1">&lt;see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /&gt;</ph> was called on an object in the <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="Overload:System.ServiceModel.Channels.CommunicationObject.Close" /&gt;</ph> a été appelé sur un objet dans l'état <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClose(System.TimeSpan)">
          <source>A communication error occurred while closing the object.</source>
          <target state="translated">Une erreur de communication s'est produite lors de la fermeture de l'objet.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClosed">
          <source>Invoked during the transition of a communication object into the closing state.</source>
          <target state="translated">Appelé pendant la transition d'un objet de communication à l'état de fermeture.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClosed">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph> if the communication object is initially in the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> appelle <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph> si l'objet de communication est initialement dans l'état <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClosed">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndClose%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph> (and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnEndClose%28System.IAsyncResult%29&gt;</ph> if the communication object is not already in a <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndClose%2A&gt;</ph> appelle <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosed%2A&gt;</ph> (et <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnEndClose%28System.IAsyncResult%29&gt;</ph> si l'objet de communication n'est pas déjà dans l'état <ph id="ph4">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClosing">
          <source>Invoked during the transition of a communication object into the closing state.</source>
          <target state="translated">Appelé pendant la transition d'un objet de communication à l'état de fermeture.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnClosing">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph> if the communication object is initially in the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> appelle <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnClosing%2A&gt;</ph> si l'objet de communication est initialement dans l'état <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that is returned by a call to the <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> qui est retourné par un appel à la méthode <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
          <source>Completes an asynchronous operation on the close of a communication object.</source>
          <target state="translated">Termine une opération asynchrone à la fermeture d'un objet de communication.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndClose%28System.IAsyncResult%29&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnEndClose%28System.IAsyncResult%29&gt;</ph> if the communication object is not already in a <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph> state.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndClose%28System.IAsyncResult%29&gt;</ph> appelle <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnEndClose%28System.IAsyncResult%29&gt;</ph> si l'objet de communication n'est pas déjà dans l'état <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Closed&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication n'est pas dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndClose(System.IAsyncResult)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that is returned by a call to the <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> qui est retourné par un appel à la méthode <ph id="ph2">&lt;see cref="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
          <source>Completes an asynchronous operation on the open of a communication object.</source>
          <target state="translated">Termine une opération asynchrone à l'ouverture d'un objet de communication.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnEndOpen%2A&gt;</ph> (and <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>).</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph> appelle <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnEndOpen%2A&gt;</ph> (et <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication n'est pas dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnEndOpen(System.IAsyncResult)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted">
          <source>Inserts processing on a communication object after it transitions to the faulted state due to the invocation of a synchronous fault operation.</source>
          <target state="translated">Insère le traitement sur un objet de communication après sa transition vers l’état d’erreur en raison de l’appel d’une opération d’erreur synchrone.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnFaulted">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Faulted&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnFaulted%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Fault%2A&gt;</ph> method.</source>
          <target state="translated">L'événement <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Faulted&gt;</ph> est déclenché par la méthode <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnFaulted%2A&gt;</ph>, qui est appelée par la méthode <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Fault%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the on open operation has to complete before timing out.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> qui spécifie le délai d'exécution de l'opération d'ouverture avant le dépassement du délai d'attente.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <source>Inserts processing on a communication object after it transitions into the opening state which must complete within a specified interval of time.</source>
          <target state="translated">Insère le traitement sur un objet de communication après la transition vers l'état d'ouverture qui doit se terminer dans un intervalle de temps spécifié.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method calls <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpen%28System.TimeSpan%29&gt;</ph> (after calling <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> and before calling <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>) if the communication object is initially in the <ph id="ph5">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> appelle <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpen%28System.TimeSpan%29&gt;</ph> (après avoir appelé <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> et avant d'appeler <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>) si l'objet de communication est initialement dans l'état <ph id="ph5">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <source>To insert processing as a communication object transitions to a opening state due to the invocation of an asynchronous <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> operation, use the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> method.</source>
          <target state="translated">Pour insérer le traitement alors qu'un objet de communication passe à l'état d'ouverture en raison de l'appel d'une opération <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> asynchrone, utilisez la méthode <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication n'est pas dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpen(System.TimeSpan)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
          <source>Invoked during the transition of a communication object into the opened state.</source>
          <target state="translated">Appelé pendant la transition d'un objet de communication à l'état ouvert.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpened">
          <source>This provides a way to add processing when it is called by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph> methods.</source>
          <target state="translated">Cela permet d'ajouter un traitement en cas d'appel par les méthodes <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpening">
          <source>Invoked during the transition of a communication object into the opening state.</source>
          <target state="translated">Appelé pendant la transition d'un objet de communication à l'état d'ouverture.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.OnOpening">
          <source>This provides a way to add processing when it is called by the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%2A&gt;</ph> methods.</source>
          <target state="translated">Cela permet d'ajouter un traitement en cas d'appel par les méthodes <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>Causes a communication object to transition from the created state into the opened state.</source>
          <target state="translated">Provoque la transition d'un objet de communication de l'état créé à l'état ouvert.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>When called, the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method causes a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> to enter into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> state and calls <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>.</source>
          <target state="translated">Lorsqu'elle est appelée, la méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> entraîne le passage de <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> à l'état <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> et appelle <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> et <ph id="ph6">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Channels.CommunicationObject">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> method completes the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method by setting the state of the object to the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> complète la méthode <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> en plaçant l'objet à l'état <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>Causes a communication object to transition from the created state into the opened state.</source>
          <target state="translated">Provoque la transition d'un objet de communication de l'état créé à l'état ouvert.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>When a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> is instantiated, it begins in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
          <target state="translated">Lorsqu'un <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> est instancié, il commence à l'état <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>In the <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</source>
          <target state="translated">Dans l'état <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph>, l'objet peut être configuré (par exemple, les propriétés peuvent être définies ou les événements peuvent être enregistrés), mais il n'est pas cependant pas utilisable pour l'envoi ou la réception de messages.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>When called, the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method causes a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> to enter into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> state and calls <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>.</source>
          <target state="translated">Lorsqu'elle est appelée, la méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> entraîne le passage de <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> à l'état <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> et appelle <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> et <ph id="ph6">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> method completes the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method by setting the state of the object to the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> complète la méthode <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> en plaçant l'objet à l'état <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>In the</source>
          <target state="translated">Dans le champ</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state, the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> is usable (for example, messages can be received), but it is no longer configurable.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> est utilisable (par exemple, les messages peuvent être reçus), mais il n'est plus configurable.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>There is also an asynchronous version of the open method that is initiated by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> and completed by calling <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph>.</source>
          <target state="translated">Il existe également une version asynchrone de la méthode d'ouverture qui est initiée en appelant <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> et terminée en appelant <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>Credentials Capture with Windows Authentication</source>
          <target state="translated">Capture des informations d'identification avec l'authentification Windows</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>When using Windows authentication, credentials used by the service are based on the current context thread.</source>
          <target state="translated">Lors de l'utilisation de l'authentification Windows, les informations d'identification utilisées par le service sont basées sur le thread de contexte actuel.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>The credentials are obtained when the <ph id="ph1">`Open`</ph> method is called.</source>
          <target state="translated">Les informations d'identification sont obtenues lorsque la méthode <ph id="ph1">`Open`</ph> est appelée.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>For asynchronous calls, credentials are captured when the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%2A&gt;</ph> is invoked.</source>
          <target state="translated">Pour les appels asynchrones, les informations d'identification sont capturées lorsque <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%2A&gt;</ph> est appelé.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>However, the actual credentials cannot be guaranteed.</source>
          <target state="translated">Toutefois, les informations d'identification réelles ne peuvent pas être garanties.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>That is, the credentials of the caller may be switched to another identity.</source>
          <target state="translated">Autrement dit, les informations d'identification de l'appelant peuvent être basculées sur une autre identité.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>For more information, see <bpt id="p1">[</bpt>Message Security with a Windows Client<ept id="p1">](~/docs/framework/wcf/feature-details/message-security-with-a-windows-client.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>sécurité de Message avec un Client Windows<ept id="p1">](~/docs/framework/wcf/feature-details/message-security-with-a-windows-client.md)</ept>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication n'est pas dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> that specifies how long the open operation has to complete before timing out.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TimeSpan" /&gt;</ph> qui spécifie le délai d'exécution de l'opération d'ouverture avant le dépassement du délai d'attente.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>Causes a communication object to transition from the created state into the opened state within a specified interval of time.</source>
          <target state="translated">Provoque la transition d'un objet de communication de l'état créé à l'état ouvert dans un intervalle de temps spécifié.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>When a <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> is instantiated, it begins in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
          <target state="translated">Lorsqu'un <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> est instancié, il commence à l'état <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>In the <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, the object can be configured (for example, properties can be set, or events can be registered), but it is not yet usable to send or receive messages.</source>
          <target state="translated">Dans l'état <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph>, l'objet peut être configuré (par exemple, les propriétés peuvent être définies ou les événements peuvent être enregistrés), mais il n'est pas cependant pas utilisable pour l'envoi ou la réception de messages.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>When called, the <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method causes a <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> to enter into the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> state and calls <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph>, and <ph id="ph6">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>.</source>
          <target state="translated">Lorsqu'elle est appelée, la méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> entraîne le passage de <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> à l'état <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> et appelle <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> et <ph id="ph6">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> method completes the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> method by setting the state of the object to the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpened%2A&gt;</ph> complète la méthode <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> en plaçant l'objet à l'état <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>In the</source>
          <target state="translated">Dans le champ</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state, the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> is usable (for example, messages can be received), but it is no longer configurable.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject&gt;</ph> est utilisable (par exemple, les messages peuvent être reçus), mais il n'est plus configurable.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>There is also an asynchronous version of the open method that is initiated by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%2A&gt;</ph> and completed by calling <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph>.</source>
          <target state="translated">Il existe également une version asynchrone de la méthode d'ouverture qui est initiée en appelant <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.BeginOpen%2A&gt;</ph> et terminée en appelant <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication n'est pas dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.Open(System.TimeSpan)">
          <source>The default interval of time that was allotted for the operation was exceeded before the operation was completed.</source>
          <target state="translated">L'intervalle de temps par défaut qui a été alloué à l'opération était dépassé avant la fin de l'opération.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.Channels.CommunicationObject.Opened">
          <source>Occurs when a communication object transitions into the opened state.</source>
          <target state="translated">Se produit lorsqu'un objet de communication passe à l'état ouvert.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.Channels.CommunicationObject.Opened">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Opened&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph> methods.</source>
          <target state="translated">L'événement <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Opened&gt;</ph> est déclenché par la méthode <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph>, qui est appelée par les méthodes <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> et <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.EndOpen%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="E:System.ServiceModel.Channels.CommunicationObject.Opening">
          <source>Occurs when a communication object transitions into the opening state.</source>
          <target state="translated">Se produit lorsqu'un objet de communication passe à l'état d'ouverture.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.ServiceModel.Channels.CommunicationObject.Opening">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Opening&gt;</ph> event is raised by the <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph> method which is called by the <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph> methods.</source>
          <target state="translated">L'événement <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Opening&gt;</ph> est déclenché par la méthode <ph id="ph2">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnOpening%2A&gt;</ph>, qui est appelée par les méthodes <ph id="ph3">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> et <ph id="ph4">&lt;xref:System.ServiceModel.Channels.CommunicationObject.OnBeginOpen%28System.TimeSpan%2CSystem.AsyncCallback%2CSystem.Object%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.CommunicationObject.State">
          <source>Gets a value that indicates the current state of the communication object.</source>
          <target state="translated">Obtient une valeur qui indique l'état actuel de l'objet de communication.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CommunicationObject.State">
          <source>A value from the <ph id="ph1">&lt;see cref="T:System.ServiceModel.CommunicationState" /&gt;</ph> enumeration that indicates the current state of the object.</source>
          <target state="translated">Valeur de l'énumération <ph id="ph1">&lt;see cref="T:System.ServiceModel.CommunicationState" /&gt;</ph> qui indique l'état actuel de l'objet.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Channels.CommunicationObject.ThisLock">
          <source>Gets the mutually exclusive lock that protects the class instance during a state transition.</source>
          <target state="translated">Obtient le verrou mutuellement exclusif qui protège l'instance de classe pendant une transition d'état.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Channels.CommunicationObject.ThisLock">
          <source>The mutually exclusive lock that protects the class instance during a state transition.</source>
          <target state="translated">Verrou mutuellement exclusif qui protège l'instance de classe pendant une transition d'état.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
          <source>Throws an exception if the communication object is disposed.</source>
          <target state="translated">Renvoie une exception si l'objet de communication est supprimé.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
          <source>No exception is thrown if the communication object is in a <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> or <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph> state.</source>
          <target state="translated">Aucune exception n'est renvoyée si l'objet de communication est dans l'état <ph id="ph1">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph>, <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Opening&gt;</ph> ou <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Opened&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
          <source>A communication object is disposed once <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> is called on it.</source>
          <target state="translated">Un objet de communication est supprimé lorsque <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Close%2A&gt;</ph> est appelé dessus.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposed">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
          <source>Throws an exception if the communication object the <ph id="ph1">&lt;see cref="P:System.ServiceModel.Channels.CommunicationObject.State" /&gt;</ph> property is not set to the <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Created" /&gt;</ph> state.</source>
          <target state="translated">Renvoie une exception si la propriété <ph id="ph1">&lt;see cref="P:System.ServiceModel.Channels.CommunicationObject.State" /&gt;</ph> de l'objet de communication n'a pas pour valeur l'état <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Created" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
          <source>Since an object is immutable after <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> is called on it, the only state that is both mutable and not disposed is the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state.</source>
          <target state="translated">Étant donné qu'un objet est immuable après que <ph id="ph1">&lt;xref:System.ServiceModel.Channels.CommunicationObject.Open%2A&gt;</ph> a été appelé dessus, le seul état qui soit à la fois mutable et non supprimé est l'état <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> state.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrImmutable">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen">
          <source>Throws an exception if the communication object is not in the <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> state.</source>
          <target state="translated">Renvoie une exception si l'objet de communication n'est pas dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen">
          <source>The communication object is not in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Created" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> state and cannot be used.</source>
          <target state="translated">L'objet de communication n'est pas dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Created" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> et ne peut pas être utilisé.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> ou <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Channels.CommunicationObject.ThrowIfDisposedOrNotOpen">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state and cannot be modified.</source>
          <target state="translated">L'objet de communication est dans l'état <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> et ne peut pas être modifié.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>