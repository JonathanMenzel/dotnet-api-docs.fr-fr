<Type Name="BodyWriter" FullName="System.ServiceModel.Channels.BodyWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="02ecc83dca365052d0925e3ebac8aba7a226f381" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36526575" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BodyWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BodyWriter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.BodyWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BodyWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class BodyWriter abstract" />
  <TypeSignature Language="F#" Value="type BodyWriter = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente l'enregistreur du corps du message.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un message se compose d'en-têtes et d'un corps. Les en-têtes sont mis en mémoire tampon et le corps est transmis en continu. Étant donné que le corps est transmis en continu, l'utilisateur ne peut pas passer le contenu réel du corps à un message. L'utilisateur doit alors passer une classe qui sait comment écrire le corps lorsque cela lui est demandé. Cela est effectué en passant une classe dérivée de <xref:System.ServiceModel.Channels.BodyWriter> à <xref:System.ServiceModel.Channels.Message>. Un message appelle la classe dérivée de <xref:System.ServiceModel.Channels.BodyWriter> à chaque fois qu'il requiert que le corps soit écrit à l'aide d'une <xref:System.Xml.XmlWriter>.  
  
   
  
## Examples  
 L'exemple suivant montre comment dériver une classe à partir de <xref:System.ServiceModel.Channels.BodyWriter>. Cette substitution accepte un tableau de chaînes et les écrit dans une <xref:System.Xml.XmlDictionaryWriter>.  
  
 [!code-csharp[S_UEBodyWriter#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebodywriter/cs/program.cs#1)]
 [!code-vb[S_UEBodyWriter#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uebodywriter/vb/module1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BodyWriter (bool isBuffered);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(bool isBuffered) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BodyWriter.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (isBuffered As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BodyWriter(bool isBuffered);" />
      <MemberSignature Language="F#" Value="new System.ServiceModel.Channels.BodyWriter : bool -&gt; System.ServiceModel.Channels.BodyWriter" Usage="new System.ServiceModel.Channels.BodyWriter isBuffered" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isBuffered" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isBuffered">
          <see langword="true" /> si l'enregistreur de corps peut être appelé plusieurs fois ; sinon <see langword="false" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.ServiceModel.Channels.BodyWriter" /> qui indique de façon explicite s'il faut effectuer une mise en mémoire tampon.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `isBuffered` a la valeur `false` alors le message appelle la méthode en écriture une fois et met en mémoire tampon le contenu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginWriteBodyContents">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWriteBodyContents (System.Xml.XmlDictionaryWriter writer, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginWriteBodyContents(class System.Xml.XmlDictionaryWriter writer, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BodyWriter.BeginWriteBodyContents(System.Xml.XmlDictionaryWriter,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWriteBodyContents (writer As XmlDictionaryWriter, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWriteBodyContents(System::Xml::XmlDictionaryWriter ^ writer, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginWriteBodyContents : System.Xml.XmlDictionaryWriter * AsyncCallback * obj -&gt; IAsyncResult" Usage="bodyWriter.BeginWriteBodyContents (writer, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">Enregistreur.</param>
        <param name="callback">Rappel.</param>
        <param name="state">État.</param>
        <summary>Démarre l'écriture du contenu du corps pour l'enregistreur de corps avec l'enregistreur, le rappel et l'état spécifiés.</summary>
        <returns>Résultat de l'opération.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateBufferedCopy">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.BodyWriter CreateBufferedCopy (int maxBufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.ServiceModel.Channels.BodyWriter CreateBufferedCopy(int32 maxBufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BodyWriter.CreateBufferedCopy(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateBufferedCopy (maxBufferSize As Integer) As BodyWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::ServiceModel::Channels::BodyWriter ^ CreateBufferedCopy(int maxBufferSize);" />
      <MemberSignature Language="F#" Value="member this.CreateBufferedCopy : int -&gt; System.ServiceModel.Channels.BodyWriter" Usage="bodyWriter.CreateBufferedCopy maxBufferSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BodyWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxBufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxBufferSize">Taille maximale de la mémoire tampon pour le corps.</param>
        <summary>Crée une copie mise en mémoire tampon du corps.</summary>
        <returns>
          <see cref="T:System.ServiceModel.Channels.BodyWriter" /> qui contient une copie de cet objet.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si l'objet <xref:System.ServiceModel.Channels.BodyWriter.IsBuffered%2A> a la valeur `true` alors l'objet <xref:System.ServiceModel.Channels.BodyWriter> est retourné. Si <xref:System.ServiceModel.Channels.BodyWriter.IsBuffered%2A> a la valeur `false` alors le contenu de <xref:System.ServiceModel.Channels.BodyWriter> jusqu'à `maxBufferSize` est retourné. Cela appelle également <xref:System.ServiceModel.Channels.BodyWriter.OnCreateBufferedCopy%28System.Int32%29> en tant que point d'extensibilité.  
  
   
  
## Examples  
 L'exemple suivant indique comment créer une copie mise en mémoire tampon d'une instance <xref:System.ServiceModel.Channels.BodyWriter> existante.  
  
 [!code-csharp[S_UEBodyWriter#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebodywriter/cs/snippets.cs#2)]
 [!code-vb[S_UEBodyWriter#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uebodywriter/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="maxBufferSize" /> est inférieure à zéro.</exception>
        <exception cref="T:System.InvalidOperationException">Le corps a déjà été écrit et ne peut plus être écrit ou l'enregistreur de corps n'est pas mis en mémoire tampon.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndWriteBodyContents">
      <MemberSignature Language="C#" Value="public void EndWriteBodyContents (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndWriteBodyContents(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BodyWriter.EndWriteBodyContents(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndWriteBodyContents (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndWriteBodyContents(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndWriteBodyContents : IAsyncResult -&gt; unit" Usage="bodyWriter.EndWriteBodyContents result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Résultat de l'opération.</param>
        <summary>Met fin à l'écriture du contenu de corps.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBuffered">
      <MemberSignature Language="C#" Value="public bool IsBuffered { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBuffered" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Channels.BodyWriter.IsBuffered" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsBuffered As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBuffered { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsBuffered : bool" Usage="System.ServiceModel.Channels.BodyWriter.IsBuffered" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si la méthode en écriture peut être appelée plusieurs fois.</summary>
        <value>
          <see langword="true" /> si l'enregistreur de corps peut être appelé plusieurs fois ; sinon <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si `isBuffered` a la valeur `false` alors le message appelle la méthode en écriture une fois et met en mémoire tampon le contenu.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginWriteBodyContents">
      <MemberSignature Language="C#" Value="protected virtual IAsyncResult OnBeginWriteBodyContents (System.Xml.XmlDictionaryWriter writer, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.IAsyncResult OnBeginWriteBodyContents(class System.Xml.XmlDictionaryWriter writer, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BodyWriter.OnBeginWriteBodyContents(System.Xml.XmlDictionaryWriter,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnBeginWriteBodyContents (writer As XmlDictionaryWriter, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual IAsyncResult ^ OnBeginWriteBodyContents(System::Xml::XmlDictionaryWriter ^ writer, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member OnBeginWriteBodyContents : System.Xml.XmlDictionaryWriter * AsyncCallback * obj -&gt; IAsyncResult&#xA;override this.OnBeginWriteBodyContents : System.Xml.XmlDictionaryWriter * AsyncCallback * obj -&gt; IAsyncResult" Usage="bodyWriter.OnBeginWriteBodyContents (writer, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="writer">Enregistreur</param>
        <param name="callback">Rappel</param>
        <param name="state">État.</param>
        <summary>Déclenche un événement lorsque l'enregistreur de corps démarre l'écriture du contenu du corps avec l'enregistreur, le rappel et l'état spécifiés.</summary>
        <returns>Résultat asynchrone.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateBufferedCopy">
      <MemberSignature Language="C#" Value="protected virtual System.ServiceModel.Channels.BodyWriter OnCreateBufferedCopy (int maxBufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.ServiceModel.Channels.BodyWriter OnCreateBufferedCopy(int32 maxBufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BodyWriter.OnCreateBufferedCopy(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnCreateBufferedCopy (maxBufferSize As Integer) As BodyWriter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::ServiceModel::Channels::BodyWriter ^ OnCreateBufferedCopy(int maxBufferSize);" />
      <MemberSignature Language="F#" Value="abstract member OnCreateBufferedCopy : int -&gt; System.ServiceModel.Channels.BodyWriter&#xA;override this.OnCreateBufferedCopy : int -&gt; System.ServiceModel.Channels.BodyWriter" Usage="bodyWriter.OnCreateBufferedCopy maxBufferSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.BodyWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="maxBufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="maxBufferSize">Taille maximale de la mémoire tampon pour le corps.</param>
        <summary>Fournit un point d'extensibilité lorsque le contenu du corps est écrit.</summary>
        <returns>
          <see cref="T:System.ServiceModel.Channels.BodyWriter" /> avec la taille de mémoire tampon maximale spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une classe dérivée de <xref:System.ServiceModel.Channels.BodyWriter> peut substituer cette méthode pour créer une copie mise en mémoire tampon de <xref:System.ServiceModel.Channels.BodyWriter>. Mais l'implémentation par défaut de <xref:System.ServiceModel.Channels.BodyWriter.WriteBodyContents%28System.Xml.XmlDictionaryWriter%29> appelle <xref:System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29>, par conséquent, la substitution de <xref:System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29> uniquement doit être plus facile et fonctionner pour la plupart des scénarios.  
  
 Notez que la <xref:System.ServiceModel.Channels.BodyWriter> retournée doit être mise en mémoire tampon, ce qui signifie que <xref:System.ServiceModel.Channels.BodyWriter.IsBuffered%2A> doit avoir la valeur `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndWriteBodyContents">
      <MemberSignature Language="C#" Value="protected virtual void OnEndWriteBodyContents (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndWriteBodyContents(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BodyWriter.OnEndWriteBodyContents(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndWriteBodyContents (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndWriteBodyContents(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member OnEndWriteBodyContents : IAsyncResult -&gt; unit&#xA;override this.OnEndWriteBodyContents : IAsyncResult -&gt; unit" Usage="bodyWriter.OnEndWriteBodyContents result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Résultat de l'opération.</param>
        <summary>Déclenche un événement lorsque l'enregistreur de corps termine d'écrire le contenu du corps.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnWriteBodyContents">
      <MemberSignature Language="C#" Value="protected abstract void OnWriteBodyContents (System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnWriteBodyContents(class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents(System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub OnWriteBodyContents (writer As XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void OnWriteBodyContents(System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member OnWriteBodyContents : System.Xml.XmlDictionaryWriter -&gt; unit" Usage="bodyWriter.OnWriteBodyContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">La <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisée pour écrire le corps du message.</param>
        <summary>Une fois implémenté, fournit un point d'extensibilité lorsque le contenu du corps est écrit.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode doit être implémentée par les classes dérivées de <xref:System.ServiceModel.Channels.BodyWriter>. C'est la méthode clé qui écrit le corps. Si la <xref:System.ServiceModel.Channels.BodyWriter> est mise en mémoire tampon alors cette méthode est appelée uniquement une fois.  
  
   
  
## Examples  
 L'exemple suivant illustre une substitution de la méthode <xref:System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29>.  
  
 [!code-csharp[S_UEBodyWriter#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebodywriter/cs/program.cs#3)]
 [!code-vb[S_UEBodyWriter#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uebodywriter/vb/module1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteBodyContents">
      <MemberSignature Language="C#" Value="public void WriteBodyContents (System.Xml.XmlDictionaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteBodyContents(class System.Xml.XmlDictionaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.BodyWriter.WriteBodyContents(System.Xml.XmlDictionaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteBodyContents (writer As XmlDictionaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteBodyContents(System::Xml::XmlDictionaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteBodyContents : System.Xml.XmlDictionaryWriter -&gt; unit" Usage="bodyWriter.WriteBodyContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Xml.XmlDictionaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer">La <see cref="T:System.Xml.XmlDictionaryWriter" /> utilisée pour écrire le corps du message.</param>
        <summary>Écrit le contenu du corps du message.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'implémentation par défaut de <xref:System.ServiceModel.Channels.BodyWriter.WriteBodyContents%28System.Xml.XmlDictionaryWriter%29> appelle <xref:System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29>, par conséquent, la substitution de <xref:System.ServiceModel.Channels.BodyWriter.OnWriteBodyContents%28System.Xml.XmlDictionaryWriter%29> fournit le meilleur point d'extension.  
  
   
  
## Examples  
 L'exemple suivant montre comment appeler la méthode <xref:System.ServiceModel.Channels.BodyWriter.WriteBodyContents%28System.Xml.XmlDictionaryWriter%29>.  
  
 [!code-csharp[S_UEBodyWriter#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_uebodywriter/cs/program.cs#4)]
 [!code-vb[S_UEBodyWriter#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_uebodywriter/vb/module1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="writer" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>