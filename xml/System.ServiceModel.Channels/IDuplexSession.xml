<Type Name="IDuplexSession" FullName="System.ServiceModel.Channels.IDuplexSession">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a7b801b05899f26eebe24bc1705382cc49a5b354" /><Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/09/2018" /><Meta Name="ms.locfileid" Value="51303351" /></Metadata><TypeSignature Language="C#" Value="public interface IDuplexSession : System.ServiceModel.Channels.IInputSession, System.ServiceModel.Channels.IOutputSession" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDuplexSession implements class System.ServiceModel.Channels.IInputSession, class System.ServiceModel.Channels.IOutputSession, class System.ServiceModel.Channels.ISession" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IDuplexSession" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDuplexSession&#xA;Implements IInputSession, IOutputSession" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDuplexSession : System::ServiceModel::Channels::IInputSession, System::ServiceModel::Channels::IOutputSession" />
  <TypeSignature Language="F#" Value="type IDuplexSession = interface&#xA;    interface IInputSession&#xA;    interface IOutputSession&#xA;    interface ISession" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IInputSession</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IOutputSession</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.ISession</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Définit l'interface pour la session implémentée sur chaque côté d'une communication bidirectionnelle entre des points de terminaison de messagerie.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L'interface <xref:System.ServiceModel.Channels.IDuplexSession> correspond à l'union de la session entrante définie par l'interface <xref:System.ServiceModel.Channels.IInputSession> et de la session sortante définie par l'interface <xref:System.ServiceModel.Channels.IOutputSession>. La session entrante ou la session sortante peut être arrêtée indépendamment de l'autre. La session sortante peut être arrêtée de façon synchrone en appelant <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> ou de façon asynchrone en appelant <xref:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession%2A>.  
  
 La session entrante peut être arrêtée à distance. La <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> associée à la session entrante commence à retourner `null` lorsque cette session est arrêtée.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginCloseOutputSession">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Commence une opération asynchrone pour terminer la session sortante.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCloseOutputSession">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCloseOutputSession (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCloseOutputSession(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCloseOutputSession (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCloseOutputSession(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCloseOutputSession : AsyncCallback * obj -&gt; IAsyncResult" Usage="iDuplexSession.BeginCloseOutputSession (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Délégué <see cref="T:System.AsyncCallback" />.</param>
        <param name="state"><see langword="object" /> qui contient les informations d'état pour cette demande.</param>
        <summary>Commence une opération asynchrone pour terminer la session sortante.</summary>
        <returns>La <see cref="T:System.IAsyncResult" /> qui référence l'arrêt de session sortante asynchrone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Terminer la session sortante n'affecte pas la session entrante et par conséquent, aucune instruction n'est donnée à propos de la capacité de recevoir des messages sur la session associée au canal d'entrée. Cette opération doit être terminée dans un intervalle de temps par défaut.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCloseOutputSession">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCloseOutputSession (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCloseOutputSession(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCloseOutputSession (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCloseOutputSession(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCloseOutputSession : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iDuplexSession.BeginCloseOutputSession (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">La <see cref="T:System.TimeSpan" /> qui spécifie l'intervalle de temps au cours duquel l'opération doit se terminer.</param>
        <param name="callback">Délégué <see cref="T:System.AsyncCallback" />.</param>
        <param name="state"><see langword="object" /> qui contient les informations d'état pour cette demande.</param>
        <summary>Commence une opération asynchrone pour terminer la session sortante avec un délai d'attente spécifié au cours duquel l'opération doit se terminer.</summary>
        <returns>La <see cref="T:System.IAsyncResult" /> qui référence l'arrêt de session sortante asynchrone.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Terminer la session sortante n'affecte pas la session entrante et par conséquent, aucune instruction n'est donnée à propos de la capacité de recevoir des messages sur la session associée au canal d'entrée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CloseOutputSession">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Termine la session sortante qui indique qu'aucun message supplémentaire ne sera envoyé à partir de ce point de terminaison sur le canal associé à la session.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="public void CloseOutputSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutputSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseOutputSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseOutputSession();" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputSession : unit -&gt; unit" Usage="iDuplexSession.CloseOutputSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Termine la session sortante qui indique qu'aucun message supplémentaire ne sera envoyé à partir de ce point de terminaison sur le canal associé à la session.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appel <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession> signaux à l’autre côté de la session qu’il doit retourner `null` à partir de n’importe quel appel en attente ou ultérieur à <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>. La méthode <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> est idempotente. Par conséquent, renouveler l'appel n'a aucun effet.  
  
 Terminer la session sortante n'affecte pas la session entrante et par conséquent, aucune instruction n'est donnée à propos de la capacité de recevoir des messages sur la session associée au canal d'entrée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> est une méthode de session qui peut interagir avec la <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> qui possède la session. En particulier, si la durée de vie de votre session est associée à la durée de vie de votre canal (comme avec le TCP, la sécurité et la session fiable) : 
-If <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> est appelée avant <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> est appelée sur le canal, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> doit attendre <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> se termine.  
  
-Si le canal est dans le <see cref="F:System.ServiceModel.CommunicationState.Created" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opening" /> état, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> doit lever une <see cref="T:System.InvalidOperationException" />.  
  
-Si le canal est dans le <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> état, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> doit lever une <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.  
  
-Le canal doit provoquer une défaillance si <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> lève.  
  
-L’implémentation de <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> sur le canal doit appeler <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> puis vérifiez que <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> retourne <see langword="null" />, ce qui indique que <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> a été appelée à partir de l’autre côté de la session.</para></block>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="public void CloseOutputSession (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutputSession(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseOutputSession (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseOutputSession(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputSession : TimeSpan -&gt; unit" Usage="iDuplexSession.CloseOutputSession timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">La <see cref="T:System.TimeSpan" /> qui spécifie l'intervalle de temps au cours duquel l'opération doit se terminer.</param>
        <summary>Termine la session sortante qui indique qu'aucun message supplémentaire ne sera envoyé de ce point de terminaison sur le canal associé à la session dans un intervalle de temps spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appel <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%28System.TimeSpan%29> signaux à l’autre côté de la session qu’il doit retourner `null` à partir de n’importe quel appel en attente ou ultérieur à <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>. La méthode <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> est idempotente. Par conséquent, renouveler l'appel n'a aucun effet.  
  
 Terminer la session sortante n'affecte pas la session entrante et par conséquent, aucune instruction n'est donnée à propos de la capacité de recevoir des messages sur la session associée au canal d'entrée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> est une méthode de session qui peut interagir avec la <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> qui possède la session. En particulier, si la durée de vie de votre session est associée à la durée de vie de votre canal (comme avec le TCP, la sécurité et la session fiable) : 
-If <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> est appelée avant <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> est appelée sur le canal, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> doit attendre <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> se termine.  
  
-Si le canal est dans le <see cref="F:System.ServiceModel.CommunicationState.Created" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opening" /> état, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> doit lever une <see cref="T:System.InvalidOperationException" />.  
  
-Si le canal est dans le <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> état, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> doit lever une <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.  
  
-Le canal doit provoquer une défaillance si <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> lève.  
  
-L’implémentation de <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> sur le canal doit appeler <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> puis vérifiez que <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> retourne <see langword="null" />, qui indique que <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> a été appelée à partir de l’autre côté de la session.</para></block>
      </Docs>
    </Member>
    <Member MemberName="EndCloseOutputSession">
      <MemberSignature Language="C#" Value="public void EndCloseOutputSession (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCloseOutputSession(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCloseOutputSession (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCloseOutputSession(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndCloseOutputSession : IAsyncResult -&gt; unit" Usage="iDuplexSession.EndCloseOutputSession result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><see cref="T:System.IAsyncResult" /> retourné par un appel de l'une des méthodes <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" />.</param>
        <summary>Termine une opération asynchrone pour terminer la session sortante qui indique qu'aucun message supplémentaire ne sera envoyé de ce point de terminaison sur le canal associé à la session.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Terminer la session sortante n'affecte pas la session entrante et par conséquent, aucune instruction n'est donnée à propos de la capacité de recevoir des messages sur la session associée au canal d'entrée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>