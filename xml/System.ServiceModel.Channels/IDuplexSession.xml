<Type Name="IDuplexSession" FullName="System.ServiceModel.Channels.IDuplexSession">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8e2288779b884fb864395f74d1f1c86ad03976d4" /><Meta Name="ms.sourcegitcommit" Value="7461f9e28c2f184bd1596e6f07c25a3f34984516" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="03/28/2019" /><Meta Name="ms.locfileid" Value="58555411" /></Metadata><TypeSignature Language="C#" Value="public interface IDuplexSession : System.ServiceModel.Channels.IInputSession, System.ServiceModel.Channels.IOutputSession" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDuplexSession implements class System.ServiceModel.Channels.IInputSession, class System.ServiceModel.Channels.IOutputSession, class System.ServiceModel.Channels.ISession" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Channels.IDuplexSession" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDuplexSession&#xA;Implements IInputSession, IOutputSession" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDuplexSession : System::ServiceModel::Channels::IInputSession, System::ServiceModel::Channels::IOutputSession" />
  <TypeSignature Language="F#" Value="type IDuplexSession = interface&#xA;    interface IInputSession&#xA;    interface IOutputSession&#xA;    interface ISession" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.1</AssemblyVersion>
    <AssemblyVersion>4.5.0.3</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IInputSession</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.IOutputSession</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ServiceModel.Channels.ISession</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="8fbee-101">Définit l'interface pour la session implémentée sur chaque côté d'une communication bidirectionnelle entre des points de terminaison de messagerie.</span><span class="sxs-lookup"><span data-stu-id="8fbee-101">Defines the interface for the session implemented on each side of a bi-directional communication between messaging endpoints.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fbee-102">L'interface <xref:System.ServiceModel.Channels.IDuplexSession> correspond à l'union de la session entrante définie par l'interface <xref:System.ServiceModel.Channels.IInputSession> et de la session sortante définie par l'interface <xref:System.ServiceModel.Channels.IOutputSession>.</span><span class="sxs-lookup"><span data-stu-id="8fbee-102">The <xref:System.ServiceModel.Channels.IDuplexSession> interface is the union of the inbound session, defined by the <xref:System.ServiceModel.Channels.IInputSession> interface, and the outbound session, defined by the <xref:System.ServiceModel.Channels.IOutputSession> interface.</span></span> <span data-ttu-id="8fbee-103">La session entrante ou la session sortante peut être arrêtée indépendamment de l'autre.</span><span class="sxs-lookup"><span data-stu-id="8fbee-103">Either the inbound session or outbound session can be terminated independently of the other.</span></span> <span data-ttu-id="8fbee-104">La session sortante peut être arrêtée de façon synchrone en appelant <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> ou de façon asynchrone en appelant <xref:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession%2A>.</span><span class="sxs-lookup"><span data-stu-id="8fbee-104">The outbound session can be terminated synchronously by calling <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> or asynchronously by calling <xref:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession%2A>.</span></span>  
  
 <span data-ttu-id="8fbee-105">La session entrante peut être arrêtée à distance.</span><span class="sxs-lookup"><span data-stu-id="8fbee-105">The inbound session can be remotely terminated.</span></span> <span data-ttu-id="8fbee-106">La <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> associée à la session entrante commence à retourner `null` lorsque cette session est arrêtée.</span><span class="sxs-lookup"><span data-stu-id="8fbee-106">The <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A> associated with the inbound session starts returning `null` when that session is shutdown.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="BeginCloseOutputSession">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8fbee-107">Commence une opération asynchrone pour terminer la session sortante.</span><span class="sxs-lookup"><span data-stu-id="8fbee-107">Begins an asynchronous operation to terminate the outbound session.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginCloseOutputSession">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCloseOutputSession (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCloseOutputSession(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCloseOutputSession (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCloseOutputSession(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCloseOutputSession : AsyncCallback * obj -&gt; IAsyncResult" Usage="iDuplexSession.BeginCloseOutputSession (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="8fbee-108">Délégué <see cref="T:System.AsyncCallback" />.</span><span class="sxs-lookup"><span data-stu-id="8fbee-108">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="8fbee-109"><see langword="object" /> qui contient les informations d'état pour cette demande.</span><span class="sxs-lookup"><span data-stu-id="8fbee-109">An <see langword="object" /> that contains state information for this request.</span></span></param>
        <summary><span data-ttu-id="8fbee-110">Commence une opération asynchrone pour terminer la session sortante.</span><span class="sxs-lookup"><span data-stu-id="8fbee-110">Begins an asynchronous operation to terminate the outbound session.</span></span></summary>
        <returns><span data-ttu-id="8fbee-111">La <see cref="T:System.IAsyncResult" /> qui référence l'arrêt de session sortante asynchrone.</span><span class="sxs-lookup"><span data-stu-id="8fbee-111">The <see cref="T:System.IAsyncResult" /> that references the asynchronous outbound session termination.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fbee-112">Terminer la session sortante n'affecte pas la session entrante et par conséquent, aucune instruction n'est donnée à propos de la capacité de recevoir des messages sur la session associée au canal d'entrée.</span><span class="sxs-lookup"><span data-stu-id="8fbee-112">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span> <span data-ttu-id="8fbee-113">Cette opération doit être terminée dans un intervalle de temps par défaut.</span><span class="sxs-lookup"><span data-stu-id="8fbee-113">This operation must complete within a default interval of time.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginCloseOutputSession">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginCloseOutputSession (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IAsyncResult BeginCloseOutputSession(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginCloseOutputSession (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginCloseOutputSession(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member BeginCloseOutputSession : TimeSpan * AsyncCallback * obj -&gt; IAsyncResult" Usage="iDuplexSession.BeginCloseOutputSession (timeout, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="8fbee-114">La <see cref="T:System.TimeSpan" /> qui spécifie l'intervalle de temps au cours duquel l'opération doit se terminer.</span><span class="sxs-lookup"><span data-stu-id="8fbee-114">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which the operation must complete.</span></span></param>
        <param name="callback"><span data-ttu-id="8fbee-115">Délégué <see cref="T:System.AsyncCallback" />.</span><span class="sxs-lookup"><span data-stu-id="8fbee-115">The <see cref="T:System.AsyncCallback" /> delegate.</span></span></param>
        <param name="state"><span data-ttu-id="8fbee-116"><see langword="object" /> qui contient les informations d'état pour cette demande.</span><span class="sxs-lookup"><span data-stu-id="8fbee-116">An <see langword="object" /> that contains state information for this request.</span></span></param>
        <summary><span data-ttu-id="8fbee-117">Commence une opération asynchrone pour terminer la session sortante avec un délai d'attente spécifié au cours duquel l'opération doit se terminer.</span><span class="sxs-lookup"><span data-stu-id="8fbee-117">Begins an asynchronous operation to terminate the outbound session with a specified timeout within which the operation must complete.</span></span></summary>
        <returns><span data-ttu-id="8fbee-118">La <see cref="T:System.IAsyncResult" /> qui référence l'arrêt de session sortante asynchrone.</span><span class="sxs-lookup"><span data-stu-id="8fbee-118">The <see cref="T:System.IAsyncResult" /> that references the asynchronous outbound session termination.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fbee-119">Terminer la session sortante n'affecte pas la session entrante et par conséquent, aucune instruction n'est donnée à propos de la capacité de recevoir des messages sur la session associée au canal d'entrée.</span><span class="sxs-lookup"><span data-stu-id="8fbee-119">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CloseOutputSession">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8fbee-120">Termine la session sortante qui indique qu'aucun message supplémentaire ne sera envoyé à partir de ce point de terminaison sur le canal associé à la session.</span><span class="sxs-lookup"><span data-stu-id="8fbee-120">Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="public void CloseOutputSession ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutputSession() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseOutputSession ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseOutputSession();" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputSession : unit -&gt; unit" Usage="iDuplexSession.CloseOutputSession " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8fbee-121">Termine la session sortante qui indique qu'aucun message supplémentaire ne sera envoyé à partir de ce point de terminaison sur le canal associé à la session.</span><span class="sxs-lookup"><span data-stu-id="8fbee-121">Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fbee-122">Appel <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession> signaux à l’autre côté de la session qu’il doit retourner `null` à partir de n’importe quel appel en attente ou ultérieur à <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span><span class="sxs-lookup"><span data-stu-id="8fbee-122">Calling <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession> signals to the other side of the session that it should return `null` from any outstanding or subsequent calls made to <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span></span> <span data-ttu-id="8fbee-123">La méthode <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> est idempotente. Par conséquent, renouveler l'appel n'a aucun effet.</span><span class="sxs-lookup"><span data-stu-id="8fbee-123"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> is idempotent, so calling it again has no effect.</span></span>  
  
 <span data-ttu-id="8fbee-124">Terminer la session sortante n'affecte pas la session entrante et par conséquent, aucune instruction n'est donnée à propos de la capacité de recevoir des messages sur la session associée au canal d'entrée.</span><span class="sxs-lookup"><span data-stu-id="8fbee-124">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8fbee-125">
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> est une méthode de session qui peut interagir avec la <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> qui possède la session.</span><span class="sxs-lookup"><span data-stu-id="8fbee-125">
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is a session method that can interact with the <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> that owns the session.</span></span> <span data-ttu-id="8fbee-126">En particulier, si la durée de vie de votre session est associée à la durée de vie de votre canal (comme avec le TCP, la sécurité et la session fiable) :</span><span class="sxs-lookup"><span data-stu-id="8fbee-126">In particular, if your session lifetime is put together with your channel lifetime (like it is with TCP and reliable session and security):</span></span> 
<span data-ttu-id="8fbee-127">-If <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> est appelée avant <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> est appelée sur le canal, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> doit attendre <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> se termine.</span><span class="sxs-lookup"><span data-stu-id="8fbee-127">-   If <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is called before <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> is called on the channel, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> should wait for <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> to finish.</span></span>  
  
<span data-ttu-id="8fbee-128">-Si le canal est dans le <see cref="F:System.ServiceModel.CommunicationState.Created" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opening" /> état, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> doit lever une <see cref="T:System.InvalidOperationException" />.</span><span class="sxs-lookup"><span data-stu-id="8fbee-128">-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Created" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw an <see cref="T:System.InvalidOperationException" />.</span></span>  
  
<span data-ttu-id="8fbee-129">-Si le canal est dans le <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> état, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> doit lever une <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.</span><span class="sxs-lookup"><span data-stu-id="8fbee-129">-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw a <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.</span></span>  
  
<span data-ttu-id="8fbee-130">-Le canal doit provoquer une défaillance si <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> lève.</span><span class="sxs-lookup"><span data-stu-id="8fbee-130">-   The channel should fault if <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> throws.</span></span>  
  
<span data-ttu-id="8fbee-131">-L’implémentation de <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> sur le canal doit appeler <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> puis vérifiez que <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> retourne <see langword="null" />, ce qui indique que <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> a été appelée à partir de l’autre côté de la session.</span><span class="sxs-lookup"><span data-stu-id="8fbee-131">-   The implementation of <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> on the channel should call <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> and then verify that <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> returns <see langword="null" />, which indicates that <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> was called from the other side of the session.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="CloseOutputSession">
      <MemberSignature Language="C#" Value="public void CloseOutputSession (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseOutputSession(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CloseOutputSession (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CloseOutputSession(TimeSpan timeout);" />
      <MemberSignature Language="F#" Value="abstract member CloseOutputSession : TimeSpan -&gt; unit" Usage="iDuplexSession.CloseOutputSession timeout" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout"><span data-ttu-id="8fbee-132">La <see cref="T:System.TimeSpan" /> qui spécifie l'intervalle de temps au cours duquel l'opération doit se terminer.</span><span class="sxs-lookup"><span data-stu-id="8fbee-132">The <see cref="T:System.TimeSpan" /> that specifies the interval of time within which the operation must complete.</span></span></param>
        <summary><span data-ttu-id="8fbee-133">Termine la session sortante qui indique qu'aucun message supplémentaire ne sera envoyé de ce point de terminaison sur le canal associé à la session dans un intervalle de temps spécifié.</span><span class="sxs-lookup"><span data-stu-id="8fbee-133">Terminates the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session within a specified interval of time.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fbee-134">Appel <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%28System.TimeSpan%29> signaux à l’autre côté de la session qu’il doit retourner `null` à partir de n’importe quel appel en attente ou ultérieur à <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span><span class="sxs-lookup"><span data-stu-id="8fbee-134">Calling <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%28System.TimeSpan%29> signals to the other side of the session that it should return `null` from any outstanding or subsequent calls made to <xref:System.ServiceModel.Channels.IInputChannel.Receive%2A>.</span></span> <span data-ttu-id="8fbee-135">La méthode <xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> est idempotente. Par conséquent, renouveler l'appel n'a aucun effet.</span><span class="sxs-lookup"><span data-stu-id="8fbee-135"><xref:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession%2A> is idempotent, so calling it again has no effect.</span></span>  
  
 <span data-ttu-id="8fbee-136">Terminer la session sortante n'affecte pas la session entrante et par conséquent, aucune instruction n'est donnée à propos de la capacité de recevoir des messages sur la session associée au canal d'entrée.</span><span class="sxs-lookup"><span data-stu-id="8fbee-136">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="8fbee-137">
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> est une méthode de session qui peut interagir avec la <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> qui possède la session.</span><span class="sxs-lookup"><span data-stu-id="8fbee-137">
            <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is a session method that can interact with the <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> that owns the session.</span></span> <span data-ttu-id="8fbee-138">En particulier, si la durée de vie de votre session est associée à la durée de vie de votre canal (comme avec le TCP, la sécurité et la session fiable) :</span><span class="sxs-lookup"><span data-stu-id="8fbee-138">In particular, if your session lifetime is put together with your channel lifetime (like it is with TCP and reliable session and security):</span></span> 
<span data-ttu-id="8fbee-139">-If <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> est appelée avant <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> est appelée sur le canal, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> doit attendre <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> se termine.</span><span class="sxs-lookup"><span data-stu-id="8fbee-139">-   If <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> is called before <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> is called on the channel, <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> should wait for <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> to finish.</span></span>  
  
<span data-ttu-id="8fbee-140">-Si le canal est dans le <see cref="F:System.ServiceModel.CommunicationState.Created" /> ou <see cref="F:System.ServiceModel.CommunicationState.Opening" /> état, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> doit lever une <see cref="T:System.InvalidOperationException" />.</span><span class="sxs-lookup"><span data-stu-id="8fbee-140">-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Created" /> or <see cref="F:System.ServiceModel.CommunicationState.Opening" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw an <see cref="T:System.InvalidOperationException" />.</span></span>  
  
<span data-ttu-id="8fbee-141">-Si le canal est dans le <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> état, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> doit lever une <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.</span><span class="sxs-lookup"><span data-stu-id="8fbee-141">-   If the channel is in the <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state, <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> should throw a <see cref="T:System.ServiceModel.CommunicationObjectFaultedException" />.</span></span>  
  
<span data-ttu-id="8fbee-142">-Le canal doit provoquer une défaillance si <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> lève.</span><span class="sxs-lookup"><span data-stu-id="8fbee-142">-   The channel should fault if <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> throws.</span></span>  
  
<span data-ttu-id="8fbee-143">-L’implémentation de <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> sur le canal doit appeler <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> puis vérifiez que <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> retourne <see langword="null" />, qui indique que <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> a été appelée à partir de l’autre côté de la session.</span><span class="sxs-lookup"><span data-stu-id="8fbee-143">-   The implementation of <see cref="M:System.ServiceModel.ICommunicationObject.Close" /> on the channel should call <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> and then verify that <see cref="M:System.ServiceModel.Channels.IInputChannel.Receive" /> returns <see langword="null" />, indicating that <see cref="M:System.ServiceModel.Channels.IDuplexSession.CloseOutputSession" /> was called from the other side of the session.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="EndCloseOutputSession">
      <MemberSignature Language="C#" Value="public void EndCloseOutputSession (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndCloseOutputSession(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Channels.IDuplexSession.EndCloseOutputSession(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndCloseOutputSession (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndCloseOutputSession(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="abstract member EndCloseOutputSession : IAsyncResult -&gt; unit" Usage="iDuplexSession.EndCloseOutputSession result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.1</AssemblyVersion>
        <AssemblyVersion>4.5.0.3</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="8fbee-144"><see cref="T:System.IAsyncResult" /> retourné par un appel de l'une des méthodes <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" />.</span><span class="sxs-lookup"><span data-stu-id="8fbee-144">The <see cref="T:System.IAsyncResult" /> returned by a call to one of the <see cref="Overload:System.ServiceModel.Channels.IDuplexSession.BeginCloseOutputSession" /> methods.</span></span></param>
        <summary><span data-ttu-id="8fbee-145">Termine une opération asynchrone pour terminer la session sortante qui indique qu'aucun message supplémentaire ne sera envoyé de ce point de terminaison sur le canal associé à la session.</span><span class="sxs-lookup"><span data-stu-id="8fbee-145">Completes an asynchronous operation to terminate the outbound session that indicates that no more messages will be sent from this endpoint on the channel associated with the session.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8fbee-146">Terminer la session sortante n'affecte pas la session entrante et par conséquent, aucune instruction n'est donnée à propos de la capacité de recevoir des messages sur la session associée au canal d'entrée.</span><span class="sxs-lookup"><span data-stu-id="8fbee-146">Terminating the outbound session does not affect the incoming session and so makes no statement about the ability to receive messages on the session associated with the input channel</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>