<Type Name="AnonymousPipeServerStream" FullName="System.IO.Pipes.AnonymousPipeServerStream">
  <Metadata><Meta Name="ms.openlocfilehash" Value="18d0708437ab6c6f1fec334b0f9decc4b21bc722" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52222891" /></Metadata><TypeSignature Language="C#" Value="public sealed class AnonymousPipeServerStream : System.IO.Pipes.PipeStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AnonymousPipeServerStream extends System.IO.Pipes.PipeStream" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipes.AnonymousPipeServerStream" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AnonymousPipeServerStream&#xA;Inherits PipeStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class AnonymousPipeServerStream sealed : System::IO::Pipes::PipeStream" />
  <TypeSignature Language="F#" Value="type AnonymousPipeServerStream = class&#xA;    inherit PipeStream" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipes</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Pipes.PipeStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a8ec3-101">Expose un flux de données autour d’un canal anonyme prenant en charge des opérations de lecture et d’écriture à la fois synchrones et asynchrones.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-101">Exposes a stream around an anonymous pipe, which supports both synchronous and asynchronous read and write operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ec3-102">Les canaux anonymes permettent une communication sécurisée entre parent et enfant processus.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-102">Anonymous pipes help provide safe and secure interprocess communication between child and parent processes.</span></span> <span data-ttu-id="a8ec3-103">Le <xref:System.IO.Pipes.AnonymousPipeServerStream> classe permet à un processus parent envoyer ou recevoir des informations à partir d’un processus enfant.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-103">The <xref:System.IO.Pipes.AnonymousPipeServerStream> class enables a parent process to send or receive information from a child process.</span></span>  
  
 <span data-ttu-id="a8ec3-104">Les canaux anonymes sont des canaux sans nom, unidirectionnels qui transfèrent généralement des données entre les processus parent et enfant.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-104">Anonymous pipes are unnamed, one-way pipes that typically transfer data between parent and child processes.</span></span> <span data-ttu-id="a8ec3-105">Les canaux anonymes sont toujours locaux ; ils ne peuvent pas être utilisés sur un réseau.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-105">Anonymous pipes are always local; they cannot be used over a network.</span></span> <span data-ttu-id="a8ec3-106">Un <xref:System.IO.Pipes.PipeDirection> valeur <xref:System.IO.Pipes.PipeDirection.InOut> n’est pas pris en charge, car les canaux anonymes sont définies pour être à sens unique.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-106">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="a8ec3-107">Les canaux anonymes ne gèrent pas <xref:System.IO.Pipes.PipeTransmissionMode.Message> modes de lecture.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-107">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> read modes.</span></span>  
  
 <span data-ttu-id="a8ec3-108">Le côté client d’un canal anonyme doit être créé à partir d’un handle de canal fourni par le côté serveur en appelant le <xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="a8ec3-108">The client side of an anonymous pipe must be created from a pipe handle provided by the server side by calling the <xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A> method.</span></span> <span data-ttu-id="a8ec3-109">La chaîne est ensuite passée en tant que paramètre lors de la création du processus client.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-109">The string is then passed as a parameter when creating the client process.</span></span> <span data-ttu-id="a8ec3-110">À partir du processus client, elle est ensuite transmise à la <xref:System.IO.Pipes.AnonymousPipeClientStream> constructeur en tant que le `pipeHandleAsString` paramètre.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-110">From the client process, it is then passed to the <xref:System.IO.Pipes.AnonymousPipeClientStream> constructor as the `pipeHandleAsString` parameter.</span></span>  
  
 <span data-ttu-id="a8ec3-111">Le <xref:System.IO.Pipes.AnonymousPipeServerStream> objet doit supprimer le handle de client à l’aide de la <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> méthode afin d’être prévenu lorsque le client se ferme.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-111">The <xref:System.IO.Pipes.AnonymousPipeServerStream> object must dispose the client handle using the <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> method in order to be notified when the client exits.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="a8ec3-112">Pour [!INCLUDE[winxppro](~/includes/winxppro-md.md)] et [!INCLUDE[win2kserver](~/includes/win2kserver-md.md)], un maximum de 10 canaux peuvent se connecter simultanément sur le réseau.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-112">For [!INCLUDE[winxppro](~/includes/winxppro-md.md)] and [!INCLUDE[win2kserver](~/includes/win2kserver-md.md)], a maximum of 10 pipes can simultaneously connect over the network.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8ec3-113">L’exemple suivant montre une façon d’envoyer une chaîne à partir d’un processus parent à un processus enfant à l’aide de canaux anonymes.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-113">The following example demonstrates a way to send a string from a parent process to a child process using anonymous pipes.</span></span> <span data-ttu-id="a8ec3-114">Cet exemple crée un objet <xref:System.IO.Pipes.AnonymousPipeServerStream> dans un processus parent avec une valeur <xref:System.IO.Pipes.PipeDirection> de <xref:System.IO.Pipes.PipeDirection.Out>.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-114">This example creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span> <span data-ttu-id="a8ec3-115">Il crée également un <xref:System.IO.Pipes.AnonymousPipeClientStream> objet dans un processus enfant avec un <xref:System.IO.Pipes.PipeDirection> valeur <xref:System.IO.Pipes.PipeDirection.In>.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-115">It also creates an <xref:System.IO.Pipes.AnonymousPipeClientStream> object in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.In>.</span></span> <span data-ttu-id="a8ec3-116">Le processus parent envoie ensuite une chaîne fournie par l’utilisateur au processus enfant.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-116">The parent process then sends a user-supplied string to the child process.</span></span> <span data-ttu-id="a8ec3-117">La chaîne est affichée dans la console.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-117">The string is displayed to the console.</span></span>  
  
 <span data-ttu-id="a8ec3-118">Cet exemple concerne le processus de serveur, qui utilise le <xref:System.IO.Pipes.AnonymousPipeServerStream> classe.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-118">This example is for the server process, which uses the <xref:System.IO.Pipes.AnonymousPipeServerStream> class.</span></span> <span data-ttu-id="a8ec3-119">Pour l’exemple de code complet, y compris le code pour le client de canal et le serveur, consultez [Comment : utiliser des canaux anonymes pour la Communication entre processus locale](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md).</span><span class="sxs-lookup"><span data-stu-id="a8ec3-119">For the entire code example, including the code for both the pipe client and server, see [How to: Use Anonymous Pipes for Local Interprocess Communication](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md).</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a8ec3-120">Initialise une nouvelle instance de la classe <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-120">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8ec3-121">Initialise une nouvelle instance de la classe <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-121">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ec3-122">Pour <xref:System.IO.Pipes.AnonymousPipeServerStream> constructeurs sans un <xref:System.IO.Pipes.PipeDirection> paramètre, la direction par défaut est <xref:System.IO.Pipes.PipeDirection.Out>.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-122">For <xref:System.IO.Pipes.AnonymousPipeServerStream> constructors without a <xref:System.IO.Pipes.PipeDirection> parameter, the default direction is <xref:System.IO.Pipes.PipeDirection.Out>.</span></span> <span data-ttu-id="a8ec3-123">Un <xref:System.IO.Pipes.PipeDirection> valeur <xref:System.IO.Pipes.PipeDirection.InOut> n’est pas pris en charge, car les canaux anonymes sont définies pour être à sens unique.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-123">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="a8ec3-124">Ce constructeur crée un <xref:System.IO.Pipes.AnonymousPipeServerStream> objet ayant la taille de mémoire tampon par défaut, aucune sécurité de canal, et un <xref:System.IO.HandleInheritability> valeur <xref:System.IO.HandleInheritability.None>.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-124">This constructor creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object that has the default buffer size, no pipe security, and a <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="a8ec3-125">pour la confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-125">for full trust for the immediate caller.</span></span> <span data-ttu-id="a8ec3-126">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-126">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeServerStream : System.IO.Pipes.PipeDirection -&gt; System.IO.Pipes.AnonymousPipeServerStream" Usage="new System.IO.Pipes.AnonymousPipeServerStream direction" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="a8ec3-127">L'une des valeurs d'énumération qui détermine le sens du canal.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-127">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
<span data-ttu-id="a8ec3-128">Les canaux anonymes ne pouvant être que dans un sens, <paramref name="direction" /> ne peut pas avoir la valeur <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-128">Anonymous pipes can only be in one direction, so <paramref name="direction" /> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <summary><span data-ttu-id="a8ec3-129">Initialise une nouvelle instance de la classe <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> avec le sens du canal spécifié.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-129">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class with the specified pipe direction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ec3-130">Un <xref:System.IO.Pipes.PipeDirection> valeur <xref:System.IO.Pipes.PipeDirection.InOut> n’est pas pris en charge, car les canaux anonymes sont définies pour être à sens unique.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-130">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="a8ec3-131">Ce constructeur crée un <xref:System.IO.Pipes.AnonymousPipeServerStream> objet ayant la taille de mémoire tampon par défaut, aucune sécurité de canal, et un <xref:System.IO.HandleInheritability> valeur <xref:System.IO.HandleInheritability.None>.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-131">This constructor creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object that has the default buffer size, no pipe security, and a <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a8ec3-132"><paramref name="direction" /> a la valeur <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-132"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="a8ec3-133">pour la confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-133">for full trust for the immediate caller.</span></span> <span data-ttu-id="a8ec3-134">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-134">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection, inheritability As HandleInheritability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction, System::IO::HandleInheritability inheritability);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeServerStream : System.IO.Pipes.PipeDirection * System.IO.HandleInheritability -&gt; System.IO.Pipes.AnonymousPipeServerStream" Usage="new System.IO.Pipes.AnonymousPipeServerStream (direction, inheritability)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="a8ec3-135">L'une des valeurs d'énumération qui détermine le sens du canal.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-135">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
<span data-ttu-id="a8ec3-136">Les canaux anonymes ne pouvant être que dans un sens, <paramref name="direction" /> ne peut pas avoir la valeur <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-136">Anonymous pipes can only be in one direction, so <paramref name="direction" /> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="a8ec3-137">L'une des valeurs d'énumération qui détermine si des processus enfants peuvent hériter du handle sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-137">One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</span></span> <span data-ttu-id="a8ec3-138">Doit avoir la valeur <see cref="F:System.IO.HandleInheritability.None" /> ou <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-138">Must be set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span></span></param>
        <summary><span data-ttu-id="a8ec3-139">Initialise une nouvelle instance de la classe <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> avec le sens du canal et le mode d’héritage spécifiés.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-139">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class with the specified pipe direction and inheritability mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ec3-140">Un <xref:System.IO.Pipes.PipeDirection> valeur <xref:System.IO.Pipes.PipeDirection.InOut> n’est pas pris en charge, car les canaux anonymes sont définies pour être à sens unique.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-140">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="a8ec3-141">Ce constructeur crée un <xref:System.IO.Pipes.AnonymousPipeServerStream> objet qui a la taille de mémoire tampon par défaut et aucune sécurité de canal.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-141">This constructor creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object that has the default buffer size and no pipe security.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8ec3-142">L’exemple suivant montre une méthode pour envoyer une chaîne à partir d’un processus parent à un processus enfant à l’aide de canaux anonymes.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-142">The following example demonstrates a method to send a string from a parent process to a child process using anonymous pipes.</span></span> <span data-ttu-id="a8ec3-143">Dans cet exemple, un <xref:System.IO.Pipes.AnonymousPipeServerStream> objet est créé dans un processus parent avec un <xref:System.IO.Pipes.PipeDirection> valeur <xref:System.IO.Pipes.PipeDirection.Out>.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-143">In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a8ec3-144"><paramref name="inheritability" /> n’a pas la valeur <see cref="F:System.IO.HandleInheritability.None" /> ou <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-144"><paramref name="inheritability" /> is not set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a8ec3-145"><paramref name="direction" /> a la valeur <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-145"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="a8ec3-146">pour la confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-146">for full trust for the immediate caller.</span></span> <span data-ttu-id="a8ec3-147">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-147">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, Microsoft.Win32.SafeHandles.SafePipeHandle serverSafePipeHandle, Microsoft.Win32.SafeHandles.SafePipeHandle clientSafePipeHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, class Microsoft.Win32.SafeHandles.SafePipeHandle serverSafePipeHandle, class Microsoft.Win32.SafeHandles.SafePipeHandle clientSafePipeHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection, serverSafePipeHandle As SafePipeHandle, clientSafePipeHandle As SafePipeHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction, Microsoft::Win32::SafeHandles::SafePipeHandle ^ serverSafePipeHandle, Microsoft::Win32::SafeHandles::SafePipeHandle ^ clientSafePipeHandle);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeServerStream : System.IO.Pipes.PipeDirection * Microsoft.Win32.SafeHandles.SafePipeHandle * Microsoft.Win32.SafeHandles.SafePipeHandle -&gt; System.IO.Pipes.AnonymousPipeServerStream" Usage="new System.IO.Pipes.AnonymousPipeServerStream (direction, serverSafePipeHandle, clientSafePipeHandle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="serverSafePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" />
        <Parameter Name="clientSafePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="a8ec3-148">L'une des valeurs d'énumération qui détermine le sens du canal.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-148">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
<span data-ttu-id="a8ec3-149">Les canaux anonymes ne pouvant être que dans un sens, <paramref name="direction" /> ne peut pas avoir la valeur <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-149">Anonymous pipes can only be in one direction, so <paramref name="direction" /> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <param name="serverSafePipeHandle"><span data-ttu-id="a8ec3-150">Handle sécurisé pour le canal que cet objet <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> doit encapsuler.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-150">A safe handle for the pipe that this <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object will encapsulate.</span></span></param>
        <param name="clientSafePipeHandle"><span data-ttu-id="a8ec3-151">Handle sécurisé pour l’objet <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-151">A safe handle for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object.</span></span></param>
        <summary><span data-ttu-id="a8ec3-152">Initialise une nouvelle instance de la classe <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> à partir des handles de canal spécifiés.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-152">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class from the specified pipe handles.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ec3-153">Un <xref:System.IO.Pipes.PipeDirection> valeur <xref:System.IO.Pipes.PipeDirection.InOut> n’est pas pris en charge, car les canaux anonymes sont définies pour être à sens unique.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-153">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a8ec3-154"><paramref name="serverSafePipeHandle" /> ou <paramref name="clientSafePipeHandle" /> n’est pas un handle valide.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-154"><paramref name="serverSafePipeHandle" /> or <paramref name="clientSafePipeHandle" /> is an invalid handle.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a8ec3-155"><paramref name="serverSafePipeHandle" /> ou <paramref name="clientSafePipeHandle" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-155"><paramref name="serverSafePipeHandle" /> or <paramref name="clientSafePipeHandle" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a8ec3-156"><paramref name="direction" /> a la valeur <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-156"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="a8ec3-157">Une erreur d’E/S, telle qu’une erreur disque, s’est produite.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-157">An I/O error, such as a disk error, has occurred.</span></span>  
  
<span data-ttu-id="a8ec3-158">- ou -</span><span class="sxs-lookup"><span data-stu-id="a8ec3-158">-or-</span></span> 
<span data-ttu-id="a8ec3-159">Le flux a été fermé.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-159">The stream has been closed.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="a8ec3-160">pour la confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-160">for full trust for the immediate caller.</span></span> <span data-ttu-id="a8ec3-161">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-161">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, valuetype System.IO.HandleInheritability inheritability, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection, inheritability As HandleInheritability, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction, System::IO::HandleInheritability inheritability, int bufferSize);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeServerStream : System.IO.Pipes.PipeDirection * System.IO.HandleInheritability * int -&gt; System.IO.Pipes.AnonymousPipeServerStream" Usage="new System.IO.Pipes.AnonymousPipeServerStream (direction, inheritability, bufferSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="a8ec3-162">L'une des valeurs d'énumération qui détermine le sens du canal.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-162">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
<span data-ttu-id="a8ec3-163">Les canaux anonymes ne pouvant être que dans un sens, <paramref name="direction" /> ne peut pas avoir la valeur <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-163">Anonymous pipes can only be in one direction, so <paramref name="direction" /> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="a8ec3-164">L'une des valeurs d'énumération qui détermine si des processus enfants peuvent hériter du handle sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-164">One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</span></span> <span data-ttu-id="a8ec3-165">Doit avoir la valeur <see cref="F:System.IO.HandleInheritability.None" /> ou <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-165">Must be set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="a8ec3-166">Taille de la mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-166">The size of the buffer.</span></span> <span data-ttu-id="a8ec3-167">Cette valeur doit être supérieure ou égale à 0.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-167">This value must be greater than or equal to 0.</span></span></param>
        <summary><span data-ttu-id="a8ec3-168">Initialise une nouvelle instance de la classe <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> avec le sens du canal, le mode d’héritage et la taille de la mémoire tampon spécifiés.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-168">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class with the specified pipe direction, inheritability mode, and buffer size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ec3-169">Un <xref:System.IO.Pipes.PipeDirection> valeur <xref:System.IO.Pipes.PipeDirection.InOut> n’est pas pris en charge, car les canaux anonymes sont définies pour être à sens unique.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-169">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="a8ec3-170">Ce constructeur crée un <xref:System.IO.Pipes.AnonymousPipeServerStream> objet sans sécurité du canal.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-170">This constructor creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object without pipe security.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a8ec3-171"><paramref name="inheritability" /> n’a pas la valeur <see cref="F:System.IO.HandleInheritability.None" /> ou <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-171"><paramref name="inheritability" /> is not set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span></span>  
  
<span data-ttu-id="a8ec3-172">- ou -</span><span class="sxs-lookup"><span data-stu-id="a8ec3-172">-or-</span></span> 
 <span data-ttu-id="a8ec3-173"><paramref name="bufferSize" /> est inférieur à 0.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-173"><paramref name="bufferSize" /> is less than 0.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a8ec3-174"><paramref name="direction" /> a la valeur <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-174"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="a8ec3-175">pour la confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-175">for full trust for the immediate caller.</span></span> <span data-ttu-id="a8ec3-176">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-176">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability, int bufferSize, System.IO.Pipes.PipeSecurity pipeSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, valuetype System.IO.HandleInheritability inheritability, int32 bufferSize, class System.IO.Pipes.PipeSecurity pipeSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction, System::IO::HandleInheritability inheritability, int bufferSize, System::IO::Pipes::PipeSecurity ^ pipeSecurity);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.AnonymousPipeServerStream : System.IO.Pipes.PipeDirection * System.IO.HandleInheritability * int * System.IO.Pipes.PipeSecurity -&gt; System.IO.Pipes.AnonymousPipeServerStream" Usage="new System.IO.Pipes.AnonymousPipeServerStream (direction, inheritability, bufferSize, pipeSecurity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="pipeSecurity" Type="System.IO.Pipes.PipeSecurity" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="a8ec3-177">L'une des valeurs d'énumération qui détermine le sens du canal.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-177">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
<span data-ttu-id="a8ec3-178">Les canaux anonymes ne pouvant être que dans un sens, <paramref name="direction" /> ne peut pas avoir la valeur <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-178">Anonymous pipes can only be in one direction, so <paramref name="direction" /> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="a8ec3-179">L'une des valeurs d'énumération qui détermine si des processus enfants peuvent hériter du handle sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-179">One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="a8ec3-180">Taille de la mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-180">The size of the buffer.</span></span> <span data-ttu-id="a8ec3-181">Cette valeur doit être supérieure ou égale à 0.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-181">This value must be greater than or equal to 0.</span></span></param>
        <param name="pipeSecurity"><span data-ttu-id="a8ec3-182">Objet qui détermine la sécurité de contrôle d'accès et d'audit du canal.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-182">An object that determines the access control and audit security for the pipe.</span></span></param>
        <summary><span data-ttu-id="a8ec3-183">Initialise une nouvelle instance de la classe <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> avec le sens du canal, le mode d’héritage, la taille de la mémoire tampon et la sécurité de canal spécifiés.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-183">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class with the specified pipe direction, inheritability mode, buffer size, and pipe security.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ec3-184">Un <xref:System.IO.Pipes.PipeDirection> valeur <xref:System.IO.Pipes.PipeDirection.InOut> n’est pas pris en charge, car les canaux anonymes sont définies pour être à sens unique.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-184">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a8ec3-185"><paramref name="inheritability" /> n’a pas la valeur <see cref="F:System.IO.HandleInheritability.None" /> ou <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-185"><paramref name="inheritability" /> is not set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span></span>  
  
<span data-ttu-id="a8ec3-186">- ou -</span><span class="sxs-lookup"><span data-stu-id="a8ec3-186">-or-</span></span> 
 <span data-ttu-id="a8ec3-187"><paramref name="bufferSize" /> est inférieur à 0.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-187"><paramref name="bufferSize" /> is less than 0.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a8ec3-188"><paramref name="direction" /> a la valeur <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-188"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="a8ec3-189">pour la confiance totale pour l’appelant immédiat.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-189">for full trust for the immediate caller.</span></span> <span data-ttu-id="a8ec3-190">Ce membre ne peut pas être utilisé par du code d'un niveau de confiance partiel.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-190">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ClientSafePipeHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafePipeHandle ClientSafePipeHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafePipeHandle ClientSafePipeHandle" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientSafePipeHandle As SafePipeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafePipeHandle ^ ClientSafePipeHandle { Microsoft::Win32::SafeHandles::SafePipeHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientSafePipeHandle : Microsoft.Win32.SafeHandles.SafePipeHandle" Usage="System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafePipeHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8ec3-191">Obtient le handle sécurisé pour l’objet <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> connecté à l’objet <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-191">Gets the safe handle for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object that is currently connected to the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object.</span></span></summary>
        <value><span data-ttu-id="a8ec3-192">Handle pour l'objet <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> actuellement connecté à l'objet <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-192">A handle for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object that is currently connected to the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ec3-193">Le <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> méthode doit être appelée une fois un handle client a été passé à un processus client.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-193">The <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> method should be called after a client handle has been passed to a client process.</span></span> <span data-ttu-id="a8ec3-194">Si cette méthode n’est pas appelée, le <xref:System.IO.Pipes.AnonymousPipeServerStream> objet en n'est pas informés lorsque le client supprime son <xref:System.IO.Pipes.PipeStream> objet.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-194">If this method is not called, the <xref:System.IO.Pipes.AnonymousPipeServerStream> object will not receive notice when the client disposes of its <xref:System.IO.Pipes.PipeStream> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="anonymousPipeServerStream.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeLocalCopyOfClientHandle">
      <MemberSignature Language="C#" Value="public void DisposeLocalCopyOfClientHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisposeLocalCopyOfClientHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisposeLocalCopyOfClientHandle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisposeLocalCopyOfClientHandle();" />
      <MemberSignature Language="F#" Value="member this.DisposeLocalCopyOfClientHandle : unit -&gt; unit" Usage="anonymousPipeServerStream.DisposeLocalCopyOfClientHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8ec3-195">Ferme la copie locale du handle de l’objet <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-195">Closes the local copy of the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object's handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ec3-196">Le <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> méthode doit être appelée une fois que le handle du client a été transmis au client.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-196">The <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> method should be called after the client handle has been passed to the client.</span></span> <span data-ttu-id="a8ec3-197">Si cette méthode n’est pas appelée, le <xref:System.IO.Pipes.AnonymousPipeServerStream> objet en n'est pas informés lorsque le client supprime son <xref:System.IO.Pipes.PipeStream> objet.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-197">If this method is not called, the <xref:System.IO.Pipes.AnonymousPipeServerStream> object will not receive notice when the client disposes of its <xref:System.IO.Pipes.PipeStream> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8ec3-198">L’exemple suivant montre un moyen d’envoyer une chaîne à partir d’un processus parent à un processus enfant à l’aide de canaux anonymes.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-198">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="a8ec3-199">Dans cet exemple, un <xref:System.IO.Pipes.AnonymousPipeServerStream> objet est créé dans un processus parent avec un <xref:System.IO.Pipes.PipeDirection> valeur <xref:System.IO.Pipes.PipeDirection.Out>.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-199">In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AnonymousPipeServerStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AnonymousPipeServerStream ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="anonymousPipeServerStream.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8ec3-200">Libère les ressources non managées et exécute d’autres opérations de nettoyage avant la récupération de l’instance de <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> par le garbage collection.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-200">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> instance is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientHandleAsString">
      <MemberSignature Language="C#" Value="public string GetClientHandleAsString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetClientHandleAsString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientHandleAsString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetClientHandleAsString();" />
      <MemberSignature Language="F#" Value="member this.GetClientHandleAsString : unit -&gt; string" Usage="anonymousPipeServerStream.GetClientHandleAsString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a8ec3-201">Obtient le handle de l’objet <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> connecté sous forme de chaîne.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-201">Gets the connected <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object's handle as a string.</span></span></summary>
        <returns><span data-ttu-id="a8ec3-202">Chaîne qui représente le handle de l’objet <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> connecté.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-202">A string that represents the connected <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object's handle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ec3-203">Le <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> méthode doit être appelée une fois un handle client a été passé à un processus client.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-203">The <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> method should be called after a client handle has been passed to a client process.</span></span> <span data-ttu-id="a8ec3-204">Si cette méthode n’est pas appelée, le <xref:System.IO.Pipes.AnonymousPipeServerStream> objet en n'est pas informés lorsque le client supprime son <xref:System.IO.Pipes.PipeStream> objet.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-204">If this method is not called, the <xref:System.IO.Pipes.AnonymousPipeServerStream> object will not receive notice when the client disposes of its <xref:System.IO.Pipes.PipeStream> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8ec3-205">L’exemple suivant montre un moyen d’envoyer une chaîne à partir d’un processus parent à un processus enfant à l’aide de canaux anonymes.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-205">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="a8ec3-206">Dans cet exemple, un <xref:System.IO.Pipes.AnonymousPipeServerStream> objet est créé dans un processus parent avec un <xref:System.IO.Pipes.PipeDirection> valeur <xref:System.IO.Pipes.PipeDirection.Out>.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-206">In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadMode">
      <MemberSignature Language="C#" Value="public override System.IO.Pipes.PipeTransmissionMode ReadMode { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Pipes.PipeTransmissionMode ReadMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadMode As PipeTransmissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Pipes::PipeTransmissionMode ReadMode {  void set(System::IO::Pipes::PipeTransmissionMode value); };" />
      <MemberSignature Language="F#" Value="member this.ReadMode : System.IO.Pipes.PipeTransmissionMode" Usage="System.IO.Pipes.AnonymousPipeServerStream.ReadMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeTransmissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8ec3-207">Définit le mode de lecture pour l’objet <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-207">Sets the reading mode for the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object.</span></span> <span data-ttu-id="a8ec3-208">Pour les canaux anonymes, le mode de transmission doit être <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" />.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-208">For anonymous pipes, transmission mode must be <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" />.</span></span></summary>
        <value><span data-ttu-id="a8ec3-209">Mode de lecture pour l'objet <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" />.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-209">The reading mode for the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ec3-210">Les canaux anonymes ne gèrent pas <xref:System.IO.Pipes.PipeTransmissionMode.Message> en mode lecture.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-210">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> read mode.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8ec3-211">L’exemple suivant montre un moyen d’envoyer une chaîne à partir d’un processus parent à un processus enfant à l’aide de canaux anonymes.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-211">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="a8ec3-212">Dans cet exemple, le <xref:System.NotSupportedException> est interceptée lorsque la <xref:System.IO.Pipes.AnonymousPipeServerStream.ReadMode%2A> propriété est définie sur <xref:System.IO.Pipes.PipeTransmissionMode.Message>.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-212">In this example, the <xref:System.NotSupportedException> is caught when the <xref:System.IO.Pipes.AnonymousPipeServerStream.ReadMode%2A> property is set to <xref:System.IO.Pipes.PipeTransmissionMode.Message>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="a8ec3-213">Le mode de transmission n’est pas valide.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-213">The transmission mode is not valid.</span></span> <span data-ttu-id="a8ec3-214">Pour les canaux anonymes, seul <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> est pris en charge.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-214">For anonymous pipes, only <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> is supported.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a8ec3-215">La propriété a la valeur <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />, qui n’est pas prise en charge pour les canaux anonymes.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-215">The property is set to <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />, which is not supported for anonymous pipes.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="a8ec3-216">La connexion est arrêtée ou une autre erreur d’E/S se produit.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-216">The connection is broken or another I/O error occurs.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="a8ec3-217">Le canal est fermé.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-217">The pipe is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransmissionMode">
      <MemberSignature Language="C#" Value="public override System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Pipes.PipeTransmissionMode TransmissionMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TransmissionMode As PipeTransmissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Pipes::PipeTransmissionMode TransmissionMode { System::IO::Pipes::PipeTransmissionMode get(); };" />
      <MemberSignature Language="F#" Value="member this.TransmissionMode : System.IO.Pipes.PipeTransmissionMode" Usage="System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeTransmissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a8ec3-218">Obtient le mode de transmission que prend en charge le canal actif.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-218">Gets the pipe transmission mode that is supported by the current pipe.</span></span></summary>
        <value><span data-ttu-id="a8ec3-219"><see cref="T:System.IO.Pipes.PipeTransmissionMode" /> pris en charge par le canal actif.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-219">The <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> that is supported by the current pipe.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a8ec3-220">Les canaux anonymes ne gèrent pas <xref:System.IO.Pipes.PipeTransmissionMode.Message> en mode lecture.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-220">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> read mode.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a8ec3-221">L’exemple suivant montre un moyen d’envoyer une chaîne à partir d’un processus parent à un processus enfant à l’aide de canaux anonymes.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-221">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="a8ec3-222">Dans cet exemple, un <xref:System.IO.Pipes.AnonymousPipeServerStream> objet est créé dans un processus parent et le <xref:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode%2A> propriété s’affiche dans la console.</span><span class="sxs-lookup"><span data-stu-id="a8ec3-222">In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process and the <xref:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode%2A> property is displayed to the console.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>