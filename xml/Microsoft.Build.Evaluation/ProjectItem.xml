<Type Name="ProjectItem" FullName="Microsoft.Build.Evaluation.ProjectItem">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="84186cc5d0473873710909965cc850d8cddf4792" />
    <Meta Name="ms.sourcegitcommit" Value="3507e865a3613c00760f25ad1045aaa11bae4dd8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/23/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ProjectItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectItem extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.ProjectItem" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectItem" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{ItemType}={EvaluatedInclude} [{UnevaluatedInclude}] #DirectMetadata={DirectMetadataCount}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="40afe-101">Représente un élément de projet au moment du design évalué.</span>
      <span class="sxs-lookup">
        <span data-stu-id="40afe-101">Represents an evaluated design-time project item.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="DirectMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt; DirectMetadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt; DirectMetadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.DirectMetadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectMetadata As IEnumerable(Of ProjectMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ DirectMetadata { System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40afe-102">Obtient un énumérateur sur toutes les métadonnées d’élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-102">Gets an enumerator over all item metadata.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40afe-103">Retourne un énumérateur sur toutes les métadonnées de l’élément, lequel ne peut jamais être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-103">Returns an enumerator over all item metadata, which can never be null.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afe-104">N’inclut pas de métadonnées à partir des définitions d’élément.</span><span class="sxs-lookup"><span data-stu-id="40afe-104">Does not include metadata from item definitions.</span></span> <span data-ttu-id="40afe-105">N’inclut pas de métadonnées intégrées, telles que « FullPath ».</span><span class="sxs-lookup"><span data-stu-id="40afe-105">Does not include built-in metadata, such as "FullPath".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectMetadataCount">
      <MemberSignature Language="C#" Value="public int DirectMetadataCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DirectMetadataCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.DirectMetadataCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectMetadataCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DirectMetadataCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40afe-106">Obtient le nombre de métadonnées pour cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-106">Gets the count of metadata for this item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40afe-107">Retourne le nombre de métadonnées pour cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-107">Returns the count of metadata for this item.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afe-108">N’inclut pas de métadonnées à partir des définitions d’élément.</span><span class="sxs-lookup"><span data-stu-id="40afe-108">Does not include metadata from item definitions.</span></span> <span data-ttu-id="40afe-109">N’inclut pas de métadonnées intégrées, telles que « FullPath ».</span><span class="sxs-lookup"><span data-stu-id="40afe-109">Does not include built-in metadata, such as "FullPath".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluatedInclude">
      <MemberSignature Language="C#" Value="public string EvaluatedInclude { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EvaluatedInclude" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.EvaluatedInclude" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluatedInclude As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EvaluatedInclude { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IItem.EvaluatedInclude</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40afe-110">Obtient la valeur évaluée de l’attribut Include.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-110">Gets the evaluated value of the Include attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40afe-111">Retourne la valeur évaluée de l’attribut Include.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-111">Returns the evaluated value of the Include attribute.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afe-112">Les caractères d’échappement ne sont pas présents.</span><span class="sxs-lookup"><span data-stu-id="40afe-112">Escaped characters are not present.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadata">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectMetadata GetMetadata (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectMetadata GetMetadata(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.GetMetadata(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadata (name As String) As ProjectMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectMetadata ^ GetMetadata(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IItem`1.GetMetadata(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="40afe-113">Le nom des métadonnées dont la valeur est récupérée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-113">The name of the metadata whose value is retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40afe-114">Obtient la valeur évaluée des métadonnées spécifiées pour cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-114">Gets the evaluated value of the given metadata for this item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40afe-115">Obtient la valeur évaluée des métadonnées spécifiées pour cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-115">Gets the evaluated value of the given metadata for this item.</span>
          </span>
          <span data-ttu-id="40afe-116">Retourne la valeur null si aucune métadonnée n’existe avec le nom donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-116">Returns null if no metadata exists with the given name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afe-117">Peut inclure des métadonnées à partir d’une définition d’élément.</span><span class="sxs-lookup"><span data-stu-id="40afe-117">May include metadata from an item definition.</span></span> <span data-ttu-id="40afe-118">N’inclut pas de métadonnées intégrées, telles que « FullPath ».</span><span class="sxs-lookup"><span data-stu-id="40afe-118">Does not include built-in metadata, such as "FullPath".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValue">
      <MemberSignature Language="C#" Value="public string GetMetadataValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetMetadataValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMetadataValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetMetadataValue(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Evaluation.IItem.GetMetadataValue(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="40afe-119">Le nom des métadonnées dont la valeur est récupérée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-119">The name of the metadata whose value is retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40afe-120">Obtient la valeur évaluée des métadonnées spécifiées pour cet élément, notamment les métadonnées provenant d’une définition d’élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-120">Get the evaluated value of the given metadata for this item, including metadata originating from an item definition.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40afe-121">Retourne la valeur évaluée des métadonnées spécifiées pour cet élément, notamment les métadonnées provenant d’une définition d’élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-121">Returns the evaluated value of the given metadata for this item, including metadata originating from an item definition.</span>
          </span>
          <span data-ttu-id="40afe-122">Retourne une chaîne vide si aucune métadonnée n’existe avec le nom donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-122">Returns an empty string if no metadata exists with the given name.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afe-123">Pour déterminer si des métadonnées existent, si elle a une valeur ou non, utilisez <xref:Microsoft.Build.Evaluation.ProjectItem.HasMetadata%2A>.</span><span class="sxs-lookup"><span data-stu-id="40afe-123">To determine whether metadata exist, whether it has a value or not, use <xref:Microsoft.Build.Evaluation.ProjectItem.HasMetadata%2A>.</span></span>  
  
 <span data-ttu-id="40afe-124">Cette méthode peut être utilisée pour accéder à la valeur de métadonnées intégrées, telles que « FullPath ».</span><span class="sxs-lookup"><span data-stu-id="40afe-124">This method may be used to access the value of built-in metadata, such as "FullPath".</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasMetadata">
      <MemberSignature Language="C#" Value="public bool HasMetadata (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasMetadata(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.HasMetadata(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasMetadata (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasMetadata(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="40afe-125">Le nom des métadonnées à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-125">The name of the metadata to be searched for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40afe-126">Détermine si les métadonnées portant le nom donné sont définie sur cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-126">Determines whether metadata with the given name is defined on this item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40afe-127">Retourne la valeur true si les métadonnées portant le nom donné sont définie sur cet élément ; False dans le cas contraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-127">Returns true if metadata with the given name is defined on this item; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afe-128">Inclut des métadonnées intégrées et des métadonnées provenant de définitions d’élément.</span><span class="sxs-lookup"><span data-stu-id="40afe-128">Includes built-in metadata and metadata originating from item definitions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImported">
      <MemberSignature Language="C#" Value="public bool IsImported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.IsImported" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImported { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40afe-129">Détermine si cet élément provient d’un fichier importé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-129">Determines if this item originates from an imported file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40afe-130">Retourne la valeur true si cet élément provient d’un fichier importé ; False dans le cas contraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-130">Return true if this item originates from an imported file; false otherwise.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public string ItemType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40afe-131">Obtient ou définit le type de cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-131">Gets or sets the type of this item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40afe-132">Retourne le type d’élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-132">Returns the item type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Metadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt; Metadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt; Metadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.Metadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Metadata As ICollection(Of ProjectMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ Metadata { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40afe-133">Obtient toutes les métadonnées pour cet élément, y compris les métadonnées d’origine à partir des définitions d’élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-133">Gets all the metadata for this item, including metadata originating from item definitions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40afe-134">Retourne toutes les métadonnées pour cet élément, y compris les métadonnées d’origine à partir des définitions d’élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-134">Returns all the metadata for this item, including metadata originating from item definitions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afe-135">N’inclut pas de métadonnées intégrées, telles que « FullPath ».</span><span class="sxs-lookup"><span data-stu-id="40afe-135">Does not include built-in metadata, such as "FullPath".</span></span>  
  
 <span data-ttu-id="40afe-136">Pour ajouter, supprimer, ou modifier les valeurs de métadonnées intégrées, utilisez <xref:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue%2A> et <xref:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue%2A>.</span><span class="sxs-lookup"><span data-stu-id="40afe-136">To add, remove, or change the values of built-in metadata, use <xref:Microsoft.Build.Evaluation.ProjectItem.GetMetadataValue%2A> and <xref:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataCount">
      <MemberSignature Language="C#" Value="public int MetadataCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MetadataCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.MetadataCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MetadataCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MetadataCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40afe-137">Obtient le nombre de métadonnées pour cet élément, notamment toutes les métadonnées d’origine à partir des définitions d’élément et toutes les métadonnées intégrées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-137">Gets the count of metadata for this item, including any metadata originating from item definitions, and any built-in metadata.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40afe-138">Retourne le nombre de métadonnées pour cet élément, notamment toutes les métadonnées d’origine à partir des définitions d’élément et toutes les métadonnées intégrées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-138">Returns the count of metadata for this item, including any metadata originating from item definitions, and any built-in metadata.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.Project Project { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.Project Project" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.Project" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Project As Project" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::Project ^ Project { Microsoft::Build::Evaluation::Project ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Evaluation.IProjectMetadataParent.Project</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.Project</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40afe-139">Obtient le projet qui contient cet élément de projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-139">Gets the project that contains this project item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40afe-140">Retourne le projet qui contient cet élément de projet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-140">Returns the project that contains this project item.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afe-141">Éléments de projet sont toujours contenus par un projet.</span><span class="sxs-lookup"><span data-stu-id="40afe-141">Project items are always contained by a project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMetadata">
      <MemberSignature Language="C#" Value="public bool RemoveMetadata (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveMetadata(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.RemoveMetadata(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveMetadata (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveMetadata(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="40afe-142">Le nom des métadonnées à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-142">The name of the metadata to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40afe-143">Supprime toutes les métadonnées portant le nom donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-143">Removes any metadata with the given name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40afe-144">Retourne la valeur true si les métadonnées portant le nom donné existent avant la suppression ; False dans le cas contraire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-144">Returns true if metadata with the given name exists before removal; false otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afe-145">Lève InvalidArgumentException si le nom des métadonnées fait référence à des métadonnées intégrées, comme « FullPath ».</span><span class="sxs-lookup"><span data-stu-id="40afe-145">Throws InvalidArgumentException if the metadata name refers to built-in metadata, like "FullPath".</span></span>  
  
 <span data-ttu-id="40afe-146">Lève l’exception InvalidOperationException si le nom des métadonnées fait référence à des métadonnées qui proviennent d’une définition d’élément.</span><span class="sxs-lookup"><span data-stu-id="40afe-146">Throws InvalidOperationException if the metadata name refers to metadata that originates from an item definition.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rename">
      <MemberSignature Language="C#" Value="public void Rename (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Rename(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.Rename(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Rename (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Rename(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="40afe-147">Le nouveau nom de l’élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-147">The new name of the item.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40afe-148">Renomme l’élément avec le nom donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-148">Renames the item to the given name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afe-149">Équivaut à définir la <xref:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude%2A> valeur.</span><span class="sxs-lookup"><span data-stu-id="40afe-149">Equivalent to setting the <xref:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude%2A> value.</span></span> <span data-ttu-id="40afe-150">En général, aucune évaluation se produit, car cela pourrait entraîner plusieurs éléments, ce qui n’a aucune signification dans le contexte de la modification du nom d’un seul élément.</span><span class="sxs-lookup"><span data-stu-id="40afe-150">Generally, no evaluation occurs, because this could result in several items, which has no meaning in the context of renaming a single item.</span></span> <span data-ttu-id="40afe-151">Toutefois si l’élément n’a pas besoin d’être fractionné, et la nouvelle valeur correspond à exactement un élément, puis son attribut Include évalué est mis à jour avec la valeur évaluée.</span><span class="sxs-lookup"><span data-stu-id="40afe-151">However if the item does not need to be split, and the new value evaluates to exactly one item, then its evaluated Include attribute is updated with the evaluated value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetMetadataValue">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectMetadata SetMetadataValue (string name, string unevaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectMetadata SetMetadataValue(string name, string unevaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectItem.SetMetadataValue(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetMetadataValue (name As String, unevaluatedValue As String) As ProjectMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectMetadata ^ SetMetadataValue(System::String ^ name, System::String ^ unevaluatedValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectMetadata</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="unevaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="40afe-152">Nom des métadonnées à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-152">The name of the metadata to add.</span>
          </span>
        </param>
        <param name="unevaluatedValue">
          <span data-ttu-id="40afe-153">La valeur non évaluée des métadonnées à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-153">The unevaluated value of the metadata to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="40afe-154">Ajoute des métadonnées avec le nom et la valeur non évaluée à l’élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-154">Adds metadata with the given name and unevaluated value to the item.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="40afe-155">Retourne les nouvelles métadonnées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-155">Returns the new metadata.</span>
          </span>
          <span data-ttu-id="40afe-156">Si les métadonnées portant le nom indiqué existent déjà, retourne ces métadonnées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-156">If metadata with the given name already exists, returns this metadata.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="40afe-157">Met à jour la valeur des métadonnées existantes si les métadonnées existent déjà avec le nom donné sur l’élément, tant qu’il ne provient pas d’une définition d’élément.</span><span class="sxs-lookup"><span data-stu-id="40afe-157">Updates the value of existing metadata if metadata already exists with the given name on the item, as long as it does not originate from an item definition.</span></span> <span data-ttu-id="40afe-158">Met à jour le projet évalué, mais n’affecte pas rien d’autre dans le projet jusqu'à la réévaluation.</span><span class="sxs-lookup"><span data-stu-id="40afe-158">Updates the evaluated project, but does not affect anything else in the project until reevaluation.</span></span>  
  
 <span data-ttu-id="40afe-159">Par exemple, si un élément de métadonnées nommé « m » est ajouté sur l’élément de type « i », il n’affecte pas « j » qui est évalué à partir de « @(j -> '% (m)') » jusqu'à la réévaluation.</span><span class="sxs-lookup"><span data-stu-id="40afe-159">For example, if a piece of metadata named "m" is added on item of type "i", it does not affect "j" which is evaluated from "@(j->'%(m)')" until reevaluation.</span></span> <span data-ttu-id="40afe-160">Également si la valeur non évaluée de « m » est définie sur une valeur modifiée par évaluation, tels que « $(p) », la valeur évaluée est définie à littéralement « $(p) » jusqu'à la réévaluation.</span><span class="sxs-lookup"><span data-stu-id="40afe-160">Also if the unevaluated value of "m" is set to something that is modified by evaluation, such as "$(p)", the evaluated value will be set to literally "$(p)" until reevaluation.</span></span>  
  
 <span data-ttu-id="40afe-161">Caractères spéciaux dans la valeur non évaluée doivent être convertis en caractères d’échappement.</span><span class="sxs-lookup"><span data-stu-id="40afe-161">Special characters in the unevaluated value should be converted to escape characters.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnevaluatedInclude">
      <MemberSignature Language="C#" Value="public string UnevaluatedInclude { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UnevaluatedInclude" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.UnevaluatedInclude" />
      <MemberSignature Language="VB.NET" Value="Public Property UnevaluatedInclude As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UnevaluatedInclude { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40afe-162">Obtient ou définit la valeur non évaluée de l’attribut Include.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-162">Gets or sets the unevaluated value of the Include attribute.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40afe-163">Retourne la valeur non évaluée de l’attribut Include.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-163">Returns the unevaluated value of the Include attribute.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectItemElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectItemElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectItem.Xml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Xml As ProjectItemElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectItemElement ^ Xml { Microsoft::Build::Construction::ProjectItemElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectItemElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="40afe-164">Obtient l’élément qui est associé à cet élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-164">Gets the item element that is associated with this item.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="40afe-165">Retourne l’élément qui est associé à cet élément, lequel ne peut jamais être null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="40afe-165">Returns the item element that is associated with this item, which can never be null.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>