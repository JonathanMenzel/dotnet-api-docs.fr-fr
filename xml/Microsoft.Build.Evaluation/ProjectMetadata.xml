<Type Name="ProjectMetadata" FullName="Microsoft.Build.Evaluation.ProjectMetadata">
  <TypeSignature Language="C#" Value="public class ProjectMetadata : IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProjectMetadata extends System.Object implements class System.IEquatable`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt;" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.ProjectMetadata" />
  <TypeSignature Language="VB.NET" Value="Public Class ProjectMetadata&#xA;Implements IEquatable(Of ProjectMetadata)" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProjectMetadata : IEquatable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{Name}={EvaluatedValue} [{xml.Value}]")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="54e86-101">Représente les métadonnées au moment du design évaluées.</span><span class="sxs-lookup"><span data-stu-id="54e86-101">Represents evaluated design-time metadata.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54e86-102">Jamais utilisé pour représenter les métadonnées intégrées, comme % (nom de fichier).</span><span class="sxs-lookup"><span data-stu-id="54e86-102">Never used to represent built-in metadata, like %(Filename).</span></span> <span data-ttu-id="54e86-103">Les métadonnées sont toujours associées avec le code source du projet.</span><span class="sxs-lookup"><span data-stu-id="54e86-103">The metadata is always associated with project source code.</span></span>  
  
 <span data-ttu-id="54e86-104">Les métadonnées sont contenues par un <xref:Microsoft.Build.Evaluation.ProjectItemDefinition> ou <xref:Microsoft.Build.Evaluation.ProjectItem>.</span><span class="sxs-lookup"><span data-stu-id="54e86-104">The metadata is contained by either by a <xref:Microsoft.Build.Evaluation.ProjectItemDefinition> or a <xref:Microsoft.Build.Evaluation.ProjectItem>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ConditionLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ConditionLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ConditionLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.ConditionLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ConditionLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54e86-105">Emplacement de l'attribut Condition.</span><span class="sxs-lookup"><span data-stu-id="54e86-105">Location of the Condition attribute.</span></span></summary>
        <value><span data-ttu-id="54e86-106">Retourne l'emplacement de l'attribut Condition.</span><span class="sxs-lookup"><span data-stu-id="54e86-106">Returns Condition attribute location.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluatedValue">
      <MemberSignature Language="C#" Value="public string EvaluatedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EvaluatedValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.EvaluatedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluatedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EvaluatedValue { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54e86-107">Obtient la valeur des métadonnées évaluées.</span><span class="sxs-lookup"><span data-stu-id="54e86-107">Gets the evaluated metadata value.</span></span></summary>
        <value><span data-ttu-id="54e86-108">Retourne la valeur évaluée des métadonnées, laquelle n'est jamais null.</span><span class="sxs-lookup"><span data-stu-id="54e86-108">Returns the evaluated metadata value, which is never null.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54e86-109">Ne peut pas être défini directement : uniquement la valeur non évaluée peut être définie.</span><span class="sxs-lookup"><span data-stu-id="54e86-109">Cannot be set directly: only the unevaluated value can be set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsImported">
      <MemberSignature Language="C#" Value="public bool IsImported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsImported" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.IsImported" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsImported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsImported { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54e86-110">Détermine si les métadonnées proviennent d'un fichier importé.</span><span class="sxs-lookup"><span data-stu-id="54e86-110">Determines if the metadata originated from an imported file.</span></span></summary>
        <value><span data-ttu-id="54e86-111">Retourne la valeur true si les métadonnées proviennent d'un fichier importé ; sinon, false.</span><span class="sxs-lookup"><span data-stu-id="54e86-111">Returns true if the metadata originated from an imported file; false otherwise.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public string ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ItemType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54e86-112">Obtient le type d'élément de la définition d'élément ou de l'élément conteneur.</span><span class="sxs-lookup"><span data-stu-id="54e86-112">Gets the item type of the containing item definition or item.</span></span></summary>
        <value><span data-ttu-id="54e86-113">Retourne le type d'élément de la définition d'élément ou de l'élément conteneur.</span><span class="sxs-lookup"><span data-stu-id="54e86-113">Returns the item type of the containing item definition or item.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Location" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Location As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ Location { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54e86-114">Emplacement de l'élément.</span><span class="sxs-lookup"><span data-stu-id="54e86-114">Location of the element.</span></span></summary>
        <value><span data-ttu-id="54e86-115">Retourne l'emplacement de l'élément.</span><span class="sxs-lookup"><span data-stu-id="54e86-115">Returns the element location.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54e86-116">Obtient le nom des métadonnées.</span><span class="sxs-lookup"><span data-stu-id="54e86-116">Gets the name of the metadata.</span></span></summary>
        <value><span data-ttu-id="54e86-117">Retourne le nom des métadonnées.</span><span class="sxs-lookup"><span data-stu-id="54e86-117">Returns the name of the metadata.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Predecessor">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectMetadata Predecessor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.ProjectMetadata Predecessor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Predecessor" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Predecessor As ProjectMetadata" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::ProjectMetadata ^ Predecessor { Microsoft::Build::Evaluation::ProjectMetadata ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectMetadata</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54e86-118">Obtient les dernières métadonnées (d'une définition d'élément ou d'un élément) qui ont été substituées par ces métadonnées pendant l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="54e86-118">Gets the last metadata (from an item definition or item) that was overridden by this metadata during evaluation.</span></span></summary>
        <value><span data-ttu-id="54e86-119">Retourne les dernières métadonnées (d'une définition d'élément ou d'un élément) dont la valeur a été substituée par ces métadonnées pendant l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="54e86-119">Returns the last metadata (from an item definition or item) whose value was overridden by this metadata during evaluation.</span></span> <span data-ttu-id="54e86-120">Retourne la valeur null si les métadonnées n'ont pas été substituées.</span><span class="sxs-lookup"><span data-stu-id="54e86-120">Returns null if the metadata has not been overridden.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54e86-121">Cette méthode recherche toutes les métadonnées portant le même nom qui se trouvent au-dessus dans le fichier projet logique et qui sont contenues par définitions d’élément du même type d’élément, et dont les conditions ont la valeur true.</span><span class="sxs-lookup"><span data-stu-id="54e86-121">This method searches for all metadata with the same name that lie above in the logical project file, and which are contained by item definitions of the same item type, and whose conditions evaluate to true.</span></span> <span data-ttu-id="54e86-122">Si les métadonnées sont contenues par un élément, cette méthode recherche toutes les métadonnées précédentes avec le même nom et le même élément dont la condition est évaluée à true.</span><span class="sxs-lookup"><span data-stu-id="54e86-122">If the metadata is contained by an item, this method searches for any previous metadata with the same name and item whose condition evaluated to true.</span></span> <span data-ttu-id="54e86-123">Définitions d’élément sont recherchées avant les éléments.</span><span class="sxs-lookup"><span data-stu-id="54e86-123">Item definitions are searched before items.</span></span>  
  
 <span data-ttu-id="54e86-124">Si le projet n’a pas été réévalué depuis la dernière modification, cette valeur peut être incorrecte.</span><span class="sxs-lookup"><span data-stu-id="54e86-124">If the project has not been reevaluated since the last modification, this value may be incorrect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Project">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.Project Project { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.Project Project" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Project" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Project As Project" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::Project ^ Project { Microsoft::Build::Evaluation::Project ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.Project</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54e86-125">Obtient le projet qui contient ces métadonnées.</span><span class="sxs-lookup"><span data-stu-id="54e86-125">Gets the project that contains this metadata.</span></span></summary>
        <value><span data-ttu-id="54e86-126">Retourne le projet qui contient ces métadonnées, lesquelles ne sont jamais null.</span><span class="sxs-lookup"><span data-stu-id="54e86-126">Returns the project that contains this metadata, which is never null.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals">
      <MemberSignature Language="C#" Value="bool IEquatable&lt;ProjectMetadata&gt;.Equals (Microsoft.Build.Evaluation.ProjectMetadata other);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals(class Microsoft.Build.Evaluation.ProjectMetadata other) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.ProjectMetadata.System#IEquatable&lt;Microsoft#Build#Evaluation#ProjectMetadata&gt;#Equals(Microsoft.Build.Evaluation.ProjectMetadata)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As ProjectMetadata) As Boolean Implements IEquatable(Of ProjectMetadata).Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IEquatable&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;.Equals(Microsoft::Build::Evaluation::ProjectMetadata ^ other) = IEquatable&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt;::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="Microsoft.Build.Evaluation.ProjectMetadata" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="54e86-127">Métadonnées de projet à comparer.</span><span class="sxs-lookup"><span data-stu-id="54e86-127">The project metadata to be compared to.</span></span></param>
        <summary><span data-ttu-id="54e86-128">Vérifie si ces métadonnées de projet sont égales aux métadonnées de projet spécifiées.</span><span class="sxs-lookup"><span data-stu-id="54e86-128">Compares this project metadata with the given project metadata for equality.</span></span></summary>
        <returns><span data-ttu-id="54e86-129">Retourne la valeur true si les métadonnées de projet sont égales ; sinon, false.</span><span class="sxs-lookup"><span data-stu-id="54e86-129">Returns true if the project metadata are equal; false otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnevaluatedValue">
      <MemberSignature Language="C#" Value="public string UnevaluatedValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UnevaluatedValue" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.UnevaluatedValue" />
      <MemberSignature Language="VB.NET" Value="Public Property UnevaluatedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UnevaluatedValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54e86-130">Obtient ou définit la valeur des métadonnées non évaluées.</span><span class="sxs-lookup"><span data-stu-id="54e86-130">Gets or sets the unevaluated metadata value.</span></span></summary>
        <value><span data-ttu-id="54e86-131">Retourne la valeur des métadonnées non évaluées.</span><span class="sxs-lookup"><span data-stu-id="54e86-131">Returns the unevaluated metadata value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="54e86-132">La méthode setter met à jour la valeur non évaluée et la valeur évaluée, mais n’affecte pas rien d’autre dans le projet jusqu'à la réévaluation.</span><span class="sxs-lookup"><span data-stu-id="54e86-132">The setter method updates both the unevaluated value and the evaluated value, but does not affect anything else in the project until reevaluation.</span></span>  
  
 <span data-ttu-id="54e86-133">Par exemple,--si une partie des métadonnées nommées « m » est modifiée sur l’élément de type « i », il n’affecte pas « j » qui est évalué à partir de « @(j -> '% (m)') » jusqu'à la réévaluation.</span><span class="sxs-lookup"><span data-stu-id="54e86-133">For example, --if a piece of metadata named "m" is modified on item of type "i", it does not affect "j" which is evaluated from "@(j->'%(m)')" until reevaluation.</span></span> <span data-ttu-id="54e86-134">--Si la valeur non évaluée de « m » est définie sur une valeur modifiée par évaluation, tels que « $(p) », la valeur évaluée est définie à « $(p) » jusqu'à la réévaluation.</span><span class="sxs-lookup"><span data-stu-id="54e86-134">--if the unevaluated value of "m" is set to something that is modified by evaluation, such as "$(p)", the evaluated value will be set to "$(p)" until reevaluation.</span></span>  
  
 <span data-ttu-id="54e86-135">Définition des métadonnées via une <xref:Microsoft.Build.Evaluation.ProjectItem> risque associé <xref:Microsoft.Build.Construction.ProjectItemElement> doit être fractionné, si l’élément provenance d’une expression élément de liste, générique ou un point-virgule.</span><span class="sxs-lookup"><span data-stu-id="54e86-135">Setting metadata through a <xref:Microsoft.Build.Evaluation.ProjectItem> may cause the associated <xref:Microsoft.Build.Construction.ProjectItemElement> to be split, if the item element originated from an item list, wildcard, or semicolon expression.</span></span> <span data-ttu-id="54e86-136">car elle implique une intention affectent uniquement cet élément particulier.</span><span class="sxs-lookup"><span data-stu-id="54e86-136">because it implies an intention to only affect that particular item.</span></span>  
  
 <span data-ttu-id="54e86-137">Définition des métadonnées via ProjectMetadata ne provoque pas de fractionnement, parce qu’elle implique une intention d’affecter tous les éléments à l’aide de l’objet sous-jacent <xref:Microsoft.Build.Construction.ProjectMetadataElement>.</span><span class="sxs-lookup"><span data-stu-id="54e86-137">Setting metadata through ProjectMetadata does not cause any splitting, because it implies an intention to affect all items using the underlying <xref:Microsoft.Build.Construction.ProjectMetadataElement>.</span></span>  
  
 <span data-ttu-id="54e86-138">Le projet contenant est marqué comme modifiée.</span><span class="sxs-lookup"><span data-stu-id="54e86-138">The containing project is marked as modified.</span></span> <span data-ttu-id="54e86-139">Valeurs non évaluées sont supposés contenir séquence d’échappement les séquences de caractères en fonction des besoins.</span><span class="sxs-lookup"><span data-stu-id="54e86-139">Unevaluated values are assumed to contain escaped character sequences as needed.</span></span>  
  
 <span data-ttu-id="54e86-140">Cette méthode ne peut pas laisser le projet dans un état cohérent.</span><span class="sxs-lookup"><span data-stu-id="54e86-140">This method may not leave the project in a self consistent state.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectMetadataElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectMetadataElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.ProjectMetadata.Xml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Xml As ProjectMetadataElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectMetadataElement ^ Xml { Microsoft::Build::Construction::ProjectMetadataElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Diagnostics.DebuggerBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectMetadataElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="54e86-141">Obtient l'élément des métadonnées de projet associé.</span><span class="sxs-lookup"><span data-stu-id="54e86-141">Gets the associated project metadata element.</span></span></summary>
        <value><span data-ttu-id="54e86-142">Retourne l'élément des métadonnées de projet associé, lequel ne peut jamais être null.</span><span class="sxs-lookup"><span data-stu-id="54e86-142">Returns the associated project metadata element, which can never be null.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>