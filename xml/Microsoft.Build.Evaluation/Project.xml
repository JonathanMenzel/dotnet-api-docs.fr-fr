<Type Name="Project" FullName="Microsoft.Build.Evaluation.Project">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef500810b23370ba64bbb5fe70ec2c2fe3035092" /><Meta Name="ms.sourcegitcommit" Value="26e1e91358cabfb3e80ad7de3936c99807f775a3" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/14/2018" /><Meta Name="ms.locfileid" Value="53399685" /></Metadata><TypeSignature Language="C#" Value="public class Project" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Project extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Evaluation.Project" />
  <TypeSignature Language="VB.NET" Value="Public Class Project" />
  <TypeSignature Language="C++ CLI" Value="public ref class Project" />
  <TypeSignature Language="F#" Value="type Project = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{FullPath} EffectiveToolsVersion={ToolsVersion} #GlobalProperties={data.globalProperties.Count} #Properties={data.Properties.Count} #ItemTypes={data.ItemTypes.Count} #ItemDefinitions={data.ItemDefinitions.Count} #Items={data.Items.Count} #Targets={data.Targets.Count}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="76dda-101">Représente un projet avec la sémantique au moment du design.</span><span class="sxs-lookup"><span data-stu-id="76dda-101">Represents a project with design time semantics.</span></span> <span data-ttu-id="76dda-102">Cette classe peut charger des fichiers projet, modifier des éléments et des propriétés et générer des projets.</span><span class="sxs-lookup"><span data-stu-id="76dda-102">This class can load project files, edit items and properties and build projects.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="76dda-103">Construit un projet vide à l'aide des propriétés globales et de la version des outils par défaut de la collection de projets globale.</span><span class="sxs-lookup"><span data-stu-id="76dda-103">Constructs an empty project using the global project collection global properties and default tools version.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76dda-104">Construit un projet vide à l'aide des propriétés globales et de la version des outils par défaut de la collection de projets globale.</span><span class="sxs-lookup"><span data-stu-id="76dda-104">Constructs an empty project using the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-105">Ce projet est ajouté à la collection de projets globale quand elle reçoit le chemin d’accès complet au fichier projet source, généralement par l’enregistrement du projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-105">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project xml" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="76dda-106">ProjectRootElement à utiliser pour l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-106">ProjectRootElement to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="76dda-107">Construit un projet vide et l'évalue à l'aide de la racine de projet spécifiée, ainsi que des propriétés globales et de la version des outils par défaut de la collection de projets globale.</span><span class="sxs-lookup"><span data-stu-id="76dda-107">Constructs an empty project and evaluates it using the given project root and the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-108">Ce projet est ajouté à la collection de projets globale lorsque ce projet ou à la racine du projet est donnée le chemin d’accès complet au fichier projet source.</span><span class="sxs-lookup"><span data-stu-id="76dda-108">This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="76dda-109">Lève InvalidProjectFileException si l’évaluation échoue.</span><span class="sxs-lookup"><span data-stu-id="76dda-109">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="76dda-110">Lève InvalidOperationException s’il existe déjà un projet équivalent chargé dans la collection de projets.</span><span class="sxs-lookup"><span data-stu-id="76dda-110">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project projectCollection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectCollection"><span data-ttu-id="76dda-111">Collection de projets à laquelle est ajouté le nouveau projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-111">The project collection that the new project is added to.</span></span></param>
        <summary><span data-ttu-id="76dda-112">Construit un projet vide à l'aide des propriétés globales et de la version des outils par défaut de la collection de projets spécifiée.</span><span class="sxs-lookup"><span data-stu-id="76dda-112">Constructs an empty project using the given project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-113">Ce projet est ajouté à la collection de projets spécifiée quand elle reçoit le chemin d’accès complet au fichier projet source, généralement par l’enregistrement du projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-113">This project is added to the given project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project projectFile" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="76dda-114">Fichier projet source à évaluer.</span><span class="sxs-lookup"><span data-stu-id="76dda-114">The source project file to be evaluated.</span></span></param>
        <summary><span data-ttu-id="76dda-115">Construit un projet et l'évalue à partir du fichier projet source spécifié, avec les propriétés globales et la version des outils par défaut de la collection de projets globale.</span><span class="sxs-lookup"><span data-stu-id="76dda-115">Constructs a project and evaluates it from the given source project file and with the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-116">Le projet est ajouté à la collection de projets globale.</span><span class="sxs-lookup"><span data-stu-id="76dda-116">The project is added to the global project collection.</span></span>  
  
 <span data-ttu-id="76dda-117">Lève une InvalidOperationException si un projet est déjà dans la collection de projets qui évalue ce fichier projet source.</span><span class="sxs-lookup"><span data-stu-id="76dda-117">Throws InvalidOperationException if there is already a project in the project collection that evaluates this source project file.</span></span> <span data-ttu-id="76dda-118">Peut lever des exceptions liées d’e/s.</span><span class="sxs-lookup"><span data-stu-id="76dda-118">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:Microsoft.Build.Exceptions.InvalidProjectFileException"><span data-ttu-id="76dda-119">Si l'évaluation échoue.</span><span class="sxs-lookup"><span data-stu-id="76dda-119">If the evaluation fails.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project xmlReader" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="76dda-120">Lecteur XML à partir duquel le code source du projet doit être lu.</span><span class="sxs-lookup"><span data-stu-id="76dda-120">Xml reader to read project source code from.</span></span></param>
        <summary><span data-ttu-id="76dda-121">Construit un projet et évalue le code source à partir du lecteur XML donné.</span><span class="sxs-lookup"><span data-stu-id="76dda-121">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="76dda-122">Le code source est évalué avec les propriétés globales et la version des outils par défaut de la collection de projets globale.</span><span class="sxs-lookup"><span data-stu-id="76dda-122">The source code is evaluated with the global project collection global properties and default tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-123">Ce projet est ajouté à la collection de projets globale quand elle reçoit le chemin d’accès complet au fichier projet source, généralement par l’enregistrement du projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-123">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 <span data-ttu-id="76dda-124">Lève InvalidProjectFileException si l’évaluation échoue.</span><span class="sxs-lookup"><span data-stu-id="76dda-124">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="76dda-125">Lève InvalidOperationException s’il existe déjà un projet équivalent chargé dans la collection de projets.</span><span class="sxs-lookup"><span data-stu-id="76dda-125">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (xml As ProjectRootElement, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="76dda-126">Racine de projet à utiliser pour l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-126">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="76dda-127">Propriétés globales avec lesquelles effectuer l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-127">Global properties to evaluate with.</span></span> <span data-ttu-id="76dda-128">Ce paramètre peut être null, auquel cas ce sont les propriétés globales de la collection de projets conteneur qui seront utilisées.</span><span class="sxs-lookup"><span data-stu-id="76dda-128">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="76dda-129">Version des outils avec laquelle effectuer l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-129">Tools version to evaluate with.</span></span> <span data-ttu-id="76dda-130">Ce paramètre peut être null.</span><span class="sxs-lookup"><span data-stu-id="76dda-130">May be null.</span></span></param>
        <summary><span data-ttu-id="76dda-131">Construit un projet vide et l'évalue à l'aide de la racine de projet spécifiée, ainsi qu'avec les propriétés globales spécifiées et la version des outils spécifiée.</span><span class="sxs-lookup"><span data-stu-id="76dda-131">Constructs an empty project and evaluates it using the given project root and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-132">Ce projet est ajouté à la collection de projets globale lorsque ce projet ou à la racine du projet est donnée le chemin d’accès complet au fichier projet source.</span><span class="sxs-lookup"><span data-stu-id="76dda-132">This project is added to the global project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="76dda-133">Lève InvalidProjectFileException si l’évaluation échoue.</span><span class="sxs-lookup"><span data-stu-id="76dda-133">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="76dda-134">Lève InvalidOperationException s’il existe déjà un projet équivalent chargé dans la collection de projets.</span><span class="sxs-lookup"><span data-stu-id="76dda-134">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="globalProperties"><span data-ttu-id="76dda-135">Propriétés globales avec lesquelles effectuer l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-135">Global properties to evaluate with.</span></span> <span data-ttu-id="76dda-136">Ce paramètre peut être null, auquel cas ce sont les propriétés globales de la collection de projets conteneur qui seront utilisées.</span><span class="sxs-lookup"><span data-stu-id="76dda-136">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="76dda-137">Version des outils utilisée pour évaluer le projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-137">The tools version used to evaluate the project.</span></span> <span data-ttu-id="76dda-138">Ce paramètre peut être null.</span><span class="sxs-lookup"><span data-stu-id="76dda-138">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="76dda-139">Collection de projets à laquelle sera ajouté le nouveau projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-139">The project collection the new project will be added to.</span></span></param>
        <summary><span data-ttu-id="76dda-140">Construit un projet vide, à évaluer avec la collection de projets spécifiée, ainsi qu'avec les propriétés globales spécifiées et la version des outils spécifiée.</span><span class="sxs-lookup"><span data-stu-id="76dda-140">Constructs an empty project, to be evaluated with the given project collection and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-141">Le projet est ajouté à la collection de projets spécifiée quand elle reçoit le chemin d’accès complet au fichier projet source, généralement par l’enregistrement du projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-141">The project is added to the specified project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, globalProperties As IDictionary(Of String, String), toolsVersion As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="76dda-142">Chemin d'accès au fichier projet source à évaluer.</span><span class="sxs-lookup"><span data-stu-id="76dda-142">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="76dda-143">Propriétés globales avec lesquelles effectuer l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-143">Global properties to evaluate with.</span></span> <span data-ttu-id="76dda-144">Ce paramètre peut être null, auquel cas ce sont les propriétés globales de la collection de projets conteneur qui seront utilisées.</span><span class="sxs-lookup"><span data-stu-id="76dda-144">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="76dda-145">Version des outils avec laquelle effectuer l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-145">Tools version to evaluate with.</span></span> <span data-ttu-id="76dda-146">Ce paramètre peut être null.</span><span class="sxs-lookup"><span data-stu-id="76dda-146">May be null.</span></span></param>
        <summary><span data-ttu-id="76dda-147">Construit un projet et l'évalue à partir du fichier projet source spécifié, avec les propriétés globales spécifiées et la version des outils spécifiée.</span><span class="sxs-lookup"><span data-stu-id="76dda-147">Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-148">Le projet est ajouté à la collection de projets globale.</span><span class="sxs-lookup"><span data-stu-id="76dda-148">The project is added to the global project collection.</span></span>  
  
 <span data-ttu-id="76dda-149">Lève InvalidProjectFileException si l’évaluation échoue.</span><span class="sxs-lookup"><span data-stu-id="76dda-149">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="76dda-150">Lève InvalidOperationException s’il existe déjà un projet équivalent chargé dans la collection de projets.</span><span class="sxs-lookup"><span data-stu-id="76dda-150">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="76dda-151">Peut lever des exceptions liées d’e/s.</span><span class="sxs-lookup"><span data-stu-id="76dda-151">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="76dda-152">Lecteur XML à partir duquel le code source du projet doit être lu.</span><span class="sxs-lookup"><span data-stu-id="76dda-152">Xml reader to read project source code from.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="76dda-153">Propriétés globales avec lesquelles effectuer l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-153">Global properties to evaluate with.</span></span> <span data-ttu-id="76dda-154">Ce paramètre peut être null, auquel cas ce sont les propriétés globales de la collection de projets conteneur qui seront utilisées.</span><span class="sxs-lookup"><span data-stu-id="76dda-154">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="76dda-155">Version des outils avec laquelle effectuer l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-155">Tools version to evaluate with.</span></span> <span data-ttu-id="76dda-156">Ce paramètre peut être null.</span><span class="sxs-lookup"><span data-stu-id="76dda-156">May be null.</span></span></param>
        <summary><span data-ttu-id="76dda-157">Construit un projet et évalue le code source à partir du lecteur XML donné.</span><span class="sxs-lookup"><span data-stu-id="76dda-157">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="76dda-158">Le code source est évalué avec les propriétés globales spécifiées et la version des outils spécifiée.</span><span class="sxs-lookup"><span data-stu-id="76dda-158">The source code is evaluated with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-159">Ce projet est ajouté à la collection de projets globale quand elle reçoit le chemin d’accès complet au fichier projet source, généralement par l’enregistrement du projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-159">This project is added to the global project collection when it is given the full path to the source project file, typically by saving the project.</span></span>  
  
 <span data-ttu-id="76dda-160">Lève InvalidProjectFileException si l’évaluation échoue.</span><span class="sxs-lookup"><span data-stu-id="76dda-160">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="76dda-161">Lève InvalidOperationException s’il existe déjà un projet équivalent chargé dans la collection de projets.</span><span class="sxs-lookup"><span data-stu-id="76dda-161">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="76dda-162">Racine de projet à utiliser pour l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-162">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="76dda-163">Propriétés globales avec lesquelles effectuer l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-163">Global properties to evaluate with.</span></span> <span data-ttu-id="76dda-164">Ce paramètre peut être null, auquel cas ce sont les propriétés globales de la collection de projets conteneur qui seront utilisées.</span><span class="sxs-lookup"><span data-stu-id="76dda-164">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="76dda-165">Version des outils avec laquelle effectuer l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-165">Tools version to evaluate with.</span></span> <span data-ttu-id="76dda-166">Ce paramètre peut être null.</span><span class="sxs-lookup"><span data-stu-id="76dda-166">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="76dda-167">Collection de projets à laquelle est ajouté le projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-167">The project collection the project is added to.</span></span></param>
        <summary><span data-ttu-id="76dda-168">Construit un projet et l'évalue à l'aide de la racine de projet spécifiée, ainsi qu'avec les propriétés globales spécifiées et la version des outils spécifiée.</span><span class="sxs-lookup"><span data-stu-id="76dda-168">Constructs a project and evaluates it using the given project root and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-169">Ce projet est ajouté à la collection de projets donnée lorsque ce projet ou à la racine du projet est donnée le chemin d’accès complet au fichier projet source.</span><span class="sxs-lookup"><span data-stu-id="76dda-169">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="76dda-170">Lève InvalidProjectFileException si l’évaluation échoue.</span><span class="sxs-lookup"><span data-stu-id="76dda-170">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="76dda-171">Lève InvalidOperationException s’il existe déjà un projet équivalent chargé dans la collection de projets.</span><span class="sxs-lookup"><span data-stu-id="76dda-171">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="76dda-172">Chemin d'accès au fichier projet source à évaluer.</span><span class="sxs-lookup"><span data-stu-id="76dda-172">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="76dda-173">Propriétés globales.</span><span class="sxs-lookup"><span data-stu-id="76dda-173">The global properties.</span></span> <span data-ttu-id="76dda-174">Ce paramètre peut être null.</span><span class="sxs-lookup"><span data-stu-id="76dda-174">May be null.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="76dda-175">Version des outils.</span><span class="sxs-lookup"><span data-stu-id="76dda-175">The tools version.</span></span> <span data-ttu-id="76dda-176">Ce paramètre peut être null.</span><span class="sxs-lookup"><span data-stu-id="76dda-176">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="76dda-177">Collection de projets à laquelle est ajouté le projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-177">The project collection the project is added to.</span></span> <span data-ttu-id="76dda-178">Ce paramètre ne peut pas être null.</span><span class="sxs-lookup"><span data-stu-id="76dda-178">May not be null.</span></span></param>
        <summary><span data-ttu-id="76dda-179">Construit un projet et l'évalue à partir du fichier projet source spécifié, avec les propriétés globales spécifiées et la version des outils spécifiée.</span><span class="sxs-lookup"><span data-stu-id="76dda-179">Constructs a project and evaluates it from the given source project file and with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-180">Le projet est ajouté à la collection de projets donnée.</span><span class="sxs-lookup"><span data-stu-id="76dda-180">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="76dda-181">Lève InvalidProjectFileException si l’évaluation échoue.</span><span class="sxs-lookup"><span data-stu-id="76dda-181">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="76dda-182">Lève InvalidOperationException s’il existe déjà un projet équivalent chargé dans la collection de projets.</span><span class="sxs-lookup"><span data-stu-id="76dda-182">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="76dda-183">Peut lever des exceptions liées d’e/s.</span><span class="sxs-lookup"><span data-stu-id="76dda-183">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion, projectCollection)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="76dda-184">Lecteur XML à partir duquel le code source du projet doit être lu.</span><span class="sxs-lookup"><span data-stu-id="76dda-184">Xml reader to read project source code from.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="76dda-185">Propriétés globales avec lesquelles effectuer l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-185">Global properties to evaluate with.</span></span> <span data-ttu-id="76dda-186">Ce paramètre peut être null, auquel cas ce sont les propriétés globales de la collection de projets conteneur qui seront utilisées.</span><span class="sxs-lookup"><span data-stu-id="76dda-186">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="76dda-187">Version des outils avec laquelle effectuer l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-187">Tools version to evaluate with.</span></span> <span data-ttu-id="76dda-188">Ce paramètre peut être null.</span><span class="sxs-lookup"><span data-stu-id="76dda-188">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="76dda-189">Collection de projets à laquelle est ajouté le projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-189">The project collection the project is added to.</span></span> <span data-ttu-id="76dda-190">Ce paramètre ne peut pas être null.</span><span class="sxs-lookup"><span data-stu-id="76dda-190">May not be null.</span></span></param>
        <summary><span data-ttu-id="76dda-191">Construit un projet et évalue le code source à partir du lecteur XML donné.</span><span class="sxs-lookup"><span data-stu-id="76dda-191">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="76dda-192">Le code source est évalué avec les propriétés globales spécifiées et la version des outils spécifiée.</span><span class="sxs-lookup"><span data-stu-id="76dda-192">The source code is evaluated with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-193">Ce projet est ajouté à la collection de projets donnée lorsque ce projet ou à la racine du projet est donnée le chemin d’accès complet au fichier projet source.</span><span class="sxs-lookup"><span data-stu-id="76dda-193">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="76dda-194">Lève InvalidProjectFileException si l’évaluation échoue.</span><span class="sxs-lookup"><span data-stu-id="76dda-194">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="76dda-195">Lève InvalidOperationException s’il existe déjà un projet équivalent chargé dans la collection de projets.</span><span class="sxs-lookup"><span data-stu-id="76dda-195">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="76dda-196">Racine de projet à utiliser pour l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-196">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="76dda-197">Propriétés globales avec lesquelles effectuer l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-197">Global properties to evaluate with.</span></span> <span data-ttu-id="76dda-198">Ce paramètre peut être null, auquel cas ce sont les propriétés globales de la collection de projets conteneur qui seront utilisées.</span><span class="sxs-lookup"><span data-stu-id="76dda-198">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="76dda-199">Version des outils avec laquelle effectuer l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-199">Tools version to evaluate with.</span></span> <span data-ttu-id="76dda-200">Ce paramètre peut être null.</span><span class="sxs-lookup"><span data-stu-id="76dda-200">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="76dda-201">Collection de projets à laquelle est ajouté le projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-201">The project collection the project is added to.</span></span> <span data-ttu-id="76dda-202">Ce paramètre ne peut pas être null.</span><span class="sxs-lookup"><span data-stu-id="76dda-202">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="76dda-203">Paramètres de chargement à utiliser pour l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-203">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="76dda-204">Construit un projet et l'évalue à l'aide de la racine de projet spécifiée, ainsi qu'avec les propriétés globales spécifiées, la version des outils spécifiée et les paramètres de chargement spécifiés.</span><span class="sxs-lookup"><span data-stu-id="76dda-204">Constructs a project and evaluates it using the given project root and with the given global properties, given tools version, and given load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-205">Ce projet est ajouté à la collection de projets donnée lorsque ce projet ou à la racine du projet est donnée le chemin d’accès complet au fichier projet source.</span><span class="sxs-lookup"><span data-stu-id="76dda-205">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="76dda-206">Lève InvalidProjectFileException si l’évaluation échoue.</span><span class="sxs-lookup"><span data-stu-id="76dda-206">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="76dda-207">Lève InvalidOperationException s’il existe déjà un projet équivalent chargé dans la collection de projets.</span><span class="sxs-lookup"><span data-stu-id="76dda-207">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="76dda-208">Chemin d'accès au fichier projet source à évaluer.</span><span class="sxs-lookup"><span data-stu-id="76dda-208">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="76dda-209">Propriétés globales avec lesquelles effectuer l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-209">Global properties to evaluate with.</span></span> <span data-ttu-id="76dda-210">Ce paramètre peut être null, auquel cas ce sont les propriétés globales de la collection de projets conteneur qui seront utilisées.</span><span class="sxs-lookup"><span data-stu-id="76dda-210">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="76dda-211">Version des outils.</span><span class="sxs-lookup"><span data-stu-id="76dda-211">The tools version.</span></span> <span data-ttu-id="76dda-212">Ce paramètre peut être null.</span><span class="sxs-lookup"><span data-stu-id="76dda-212">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="76dda-213">Collection de projets à laquelle est ajouté le projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-213">The project collection the project is added to.</span></span> <span data-ttu-id="76dda-214">Ce paramètre ne peut pas être null.</span><span class="sxs-lookup"><span data-stu-id="76dda-214">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="76dda-215">Paramètres de chargement à utiliser pour l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-215">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="76dda-216">Construit un projet et l'évalue à partir du fichier projet source spécifié, avec les propriétés globales spécifiées, la version des outils spécifiée et les paramètres de chargement spécifiés.</span><span class="sxs-lookup"><span data-stu-id="76dda-216">Constructs a project and evaluates it from the given source project file and with the given global properties, given tools version, and given load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-217">Le projet est ajouté à la collection de projets donnée.</span><span class="sxs-lookup"><span data-stu-id="76dda-217">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="76dda-218">Lève InvalidProjectFileException si l’évaluation échoue.</span><span class="sxs-lookup"><span data-stu-id="76dda-218">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="76dda-219">Lève InvalidOperationException s’il existe déjà un projet équivalent chargé dans la collection de projets.</span><span class="sxs-lookup"><span data-stu-id="76dda-219">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="76dda-220">Peut lever des exceptions liées d’e/s.</span><span class="sxs-lookup"><span data-stu-id="76dda-220">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="76dda-221">Lecteur XML à partir duquel lire le code source du projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-221">Xml reader from which to read project source code.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="76dda-222">Propriétés globales avec lesquelles effectuer l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-222">Global properties to evaluate with.</span></span> <span data-ttu-id="76dda-223">Ce paramètre peut être null, auquel cas ce sont les propriétés globales de la collection de projets conteneur qui seront utilisées.</span><span class="sxs-lookup"><span data-stu-id="76dda-223">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="76dda-224">Version des outils avec laquelle effectuer l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-224">Tools version to evaluate with.</span></span> <span data-ttu-id="76dda-225">Ce paramètre peut être null.</span><span class="sxs-lookup"><span data-stu-id="76dda-225">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="76dda-226">Collection de projets à laquelle est ajouté le projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-226">The project collection the project is added to.</span></span> <span data-ttu-id="76dda-227">Ce paramètre ne peut pas être null.</span><span class="sxs-lookup"><span data-stu-id="76dda-227">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="76dda-228">Paramètres de chargement à utiliser pour l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-228">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="76dda-229">Construit un projet et évalue le code source à partir du lecteur XML donné.</span><span class="sxs-lookup"><span data-stu-id="76dda-229">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="76dda-230">Le code source est évalué avec les propriétés globales spécifiées et la version des outils spécifiée.</span><span class="sxs-lookup"><span data-stu-id="76dda-230">The source code is evaluated with the given global properties and given tools version.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-231">Ce projet est ajouté à la collection de projets donnée lorsque ce projet ou à la racine du projet est donnée le chemin d’accès complet au fichier projet source.</span><span class="sxs-lookup"><span data-stu-id="76dda-231">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="76dda-232">Lève InvalidProjectFileException si l’évaluation échoue.</span><span class="sxs-lookup"><span data-stu-id="76dda-232">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="76dda-233">Lève InvalidOperationException s’il existe déjà un projet équivalent chargé dans la collection de projets.</span><span class="sxs-lookup"><span data-stu-id="76dda-233">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Construction.ProjectRootElement xml, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(Microsoft::Build::Construction::ProjectRootElement ^ xml, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : Microsoft.Build.Construction.ProjectRootElement * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xml, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xml" Type="Microsoft.Build.Construction.ProjectRootElement" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xml"><span data-ttu-id="76dda-234">Racine de projet à utiliser pour l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-234">The project root to use for evaluation.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="76dda-235">Propriétés globales avec lesquelles effectuer l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-235">Global properties to evaluate with.</span></span> <span data-ttu-id="76dda-236">Ce paramètre peut être null, auquel cas ce sont les propriétés globales de la collection de projets conteneur qui seront utilisées.</span><span class="sxs-lookup"><span data-stu-id="76dda-236">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="76dda-237">Version des outils avec laquelle effectuer l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-237">Tools version to evaluate with.</span></span> <span data-ttu-id="76dda-238">Ce paramètre peut être null.</span><span class="sxs-lookup"><span data-stu-id="76dda-238">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="76dda-239">Version du sous-ensemble d'outils avec lequel effectuer l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-239">Sub toolset version to evaluate with.</span></span> <span data-ttu-id="76dda-240">Ce paramètre peut être null.</span><span class="sxs-lookup"><span data-stu-id="76dda-240">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="76dda-241">Collection de projets à laquelle est ajouté le projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-241">The project collection the project is added to.</span></span> <span data-ttu-id="76dda-242">Ce paramètre ne peut pas être null.</span><span class="sxs-lookup"><span data-stu-id="76dda-242">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="76dda-243">Paramètres de chargement à utiliser pour l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-243">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="76dda-244">Construit un projet et l'évalue à partir de la racine de projet spécifiée, avec les propriétés globales spécifiées, les versions des outils et des sous-ensembles d'outils, la collection de projets et les paramètres de chargement.</span><span class="sxs-lookup"><span data-stu-id="76dda-244">Constructs a project and evaluates it using the given project root and with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-245">Ce projet est ajouté à la collection de projets donnée lorsque ce projet ou à la racine du projet est donnée le chemin d’accès complet au fichier projet source.</span><span class="sxs-lookup"><span data-stu-id="76dda-245">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="76dda-246">Lève InvalidProjectFileException si l’évaluation échoue.</span><span class="sxs-lookup"><span data-stu-id="76dda-246">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="76dda-247">Lève InvalidOperationException s’il existe déjà un projet équivalent chargé dans la collection de projets.</span><span class="sxs-lookup"><span data-stu-id="76dda-247">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (string projectFile, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::String ^ projectFile, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : string * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (projectFile, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="projectFile"><span data-ttu-id="76dda-248">Chemin d'accès au fichier projet source à évaluer.</span><span class="sxs-lookup"><span data-stu-id="76dda-248">The path to the source project file to be evaluated.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="76dda-249">Propriétés globales avec lesquelles effectuer l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-249">Global properties to evaluate with.</span></span> <span data-ttu-id="76dda-250">Ce paramètre peut être null, auquel cas ce sont les propriétés globales de la collection de projets conteneur qui seront utilisées.</span><span class="sxs-lookup"><span data-stu-id="76dda-250">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="76dda-251">Version des outils.</span><span class="sxs-lookup"><span data-stu-id="76dda-251">The tools version.</span></span> <span data-ttu-id="76dda-252">Ce paramètre peut être null.</span><span class="sxs-lookup"><span data-stu-id="76dda-252">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="76dda-253">Version du sous-ensemble d'outils.</span><span class="sxs-lookup"><span data-stu-id="76dda-253">The sub toolset version.</span></span> <span data-ttu-id="76dda-254">Ce paramètre peut être null.</span><span class="sxs-lookup"><span data-stu-id="76dda-254">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="76dda-255">Collection de projets à laquelle est ajouté le projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-255">The project collection the project is added to.</span></span> <span data-ttu-id="76dda-256">Ce paramètre ne peut pas être null.</span><span class="sxs-lookup"><span data-stu-id="76dda-256">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="76dda-257">Paramètres de chargement à utiliser pour l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-257">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="76dda-258">Construit un projet et l'évalue à partir du fichier projet source spécifié, avec les propriétés globales spécifiées, les versions des outils et des sous-ensembles d'outils, la collection de projets et les paramètres de chargement.</span><span class="sxs-lookup"><span data-stu-id="76dda-258">Constructs a project and evaluates it from the given source project file and with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-259">Le projet est ajouté à la collection de projets donnée.</span><span class="sxs-lookup"><span data-stu-id="76dda-259">The project is added to the given project collection.</span></span>  
  
 <span data-ttu-id="76dda-260">Lève InvalidProjectFileException si l’évaluation échoue.</span><span class="sxs-lookup"><span data-stu-id="76dda-260">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="76dda-261">Lève InvalidOperationException s’il existe déjà un projet équivalent chargé dans la collection de projets.</span><span class="sxs-lookup"><span data-stu-id="76dda-261">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span> <span data-ttu-id="76dda-262">Peut lever des exceptions liées d’e/s.</span><span class="sxs-lookup"><span data-stu-id="76dda-262">May throw IO-related exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Project (System.Xml.XmlReader xmlReader, System.Collections.Generic.IDictionary&lt;string,string&gt; globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection, Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader xmlReader, class System.Collections.Generic.IDictionary`2&lt;string, string&gt; globalProperties, string toolsVersion, string subToolsetVersion, class Microsoft.Build.Evaluation.ProjectCollection projectCollection, valuetype Microsoft.Build.Evaluation.ProjectLoadSettings loadSettings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.#ctor(System.Xml.XmlReader,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection,Microsoft.Build.Evaluation.ProjectLoadSettings)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Project(System::Xml::XmlReader ^ xmlReader, System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ globalProperties, System::String ^ toolsVersion, System::String ^ subToolsetVersion, Microsoft::Build::Evaluation::ProjectCollection ^ projectCollection, Microsoft::Build::Evaluation::ProjectLoadSettings loadSettings);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Evaluation.Project : System.Xml.XmlReader * System.Collections.Generic.IDictionary&lt;string, string&gt; * string * string * Microsoft.Build.Evaluation.ProjectCollection * Microsoft.Build.Evaluation.ProjectLoadSettings -&gt; Microsoft.Build.Evaluation.Project" Usage="new Microsoft.Build.Evaluation.Project (xmlReader, globalProperties, toolsVersion, subToolsetVersion, projectCollection, loadSettings)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="xmlReader" Type="System.Xml.XmlReader" />
        <Parameter Name="globalProperties" Type="System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;" />
        <Parameter Name="toolsVersion" Type="System.String" />
        <Parameter Name="subToolsetVersion" Type="System.String" />
        <Parameter Name="projectCollection" Type="Microsoft.Build.Evaluation.ProjectCollection" />
        <Parameter Name="loadSettings" Type="Microsoft.Build.Evaluation.ProjectLoadSettings" />
      </Parameters>
      <Docs>
        <param name="xmlReader"><span data-ttu-id="76dda-263">Lecteur XML à partir duquel le code source du projet doit être lu.</span><span class="sxs-lookup"><span data-stu-id="76dda-263">Xml reader to read project source code from.</span></span></param>
        <param name="globalProperties"><span data-ttu-id="76dda-264">Propriétés globales avec lesquelles effectuer l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-264">Global properties to evaluate with.</span></span> <span data-ttu-id="76dda-265">Ce paramètre peut être null, auquel cas ce sont les propriétés globales de la collection de projets conteneur qui seront utilisées.</span><span class="sxs-lookup"><span data-stu-id="76dda-265">May be null in which case the containing project collection's global properties will be used.</span></span></param>
        <param name="toolsVersion"><span data-ttu-id="76dda-266">Version des outils avec laquelle effectuer l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-266">Tools version to evaluate with.</span></span> <span data-ttu-id="76dda-267">Ce paramètre peut être null.</span><span class="sxs-lookup"><span data-stu-id="76dda-267">May be null.</span></span></param>
        <param name="subToolsetVersion"><span data-ttu-id="76dda-268">Version du sous-ensemble d'outils avec lequel effectuer l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-268">Sub Toolset version to evaluate with.</span></span> <span data-ttu-id="76dda-269">Ce paramètre peut être null.</span><span class="sxs-lookup"><span data-stu-id="76dda-269">May be null.</span></span></param>
        <param name="projectCollection"><span data-ttu-id="76dda-270">Collection de projets à laquelle est ajouté le projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-270">The project collection the project is added to.</span></span> <span data-ttu-id="76dda-271">Ce paramètre ne peut pas être null.</span><span class="sxs-lookup"><span data-stu-id="76dda-271">May not be null.</span></span></param>
        <param name="loadSettings"><span data-ttu-id="76dda-272">Paramètres de chargement à utiliser pour l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-272">The load settings to use for evaluation.</span></span></param>
        <summary><span data-ttu-id="76dda-273">Construit un projet et évalue le code source à partir du lecteur XML donné.</span><span class="sxs-lookup"><span data-stu-id="76dda-273">Constructs a project and evaluates the source code from the given XML reader.</span></span> <span data-ttu-id="76dda-274">Le code source est évalué avec les propriétés, les outils et les versions de sous-ensemble d'outils, la collection de projets et les paramètres de chargement globaux donnés.</span><span class="sxs-lookup"><span data-stu-id="76dda-274">The source code is evaluated with the given global properties, tools and sub-toolset versions, project collection, and load settings.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-275">Ce projet est ajouté à la collection de projets donnée lorsque ce projet ou à la racine du projet est donnée le chemin d’accès complet au fichier projet source.</span><span class="sxs-lookup"><span data-stu-id="76dda-275">This project is added to the given project collection when either this project or the given project root is given the full path to the source project file.</span></span>  
  
 <span data-ttu-id="76dda-276">Lève InvalidProjectFileException si l’évaluation échoue.</span><span class="sxs-lookup"><span data-stu-id="76dda-276">Throws InvalidProjectFileException if the evaluation fails.</span></span> <span data-ttu-id="76dda-277">Lève InvalidOperationException s’il existe déjà un projet équivalent chargé dans la collection de projets.</span><span class="sxs-lookup"><span data-stu-id="76dda-277">Throws InvalidOperationException if there is already an equivalent project loaded in the project collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItem">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="76dda-278">Ajoute un élément.</span><span class="sxs-lookup"><span data-stu-id="76dda-278">Adds an item.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItem (string itemType, string unevaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItem(string itemType, string unevaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, unevaluatedInclude As String) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItem(System::String ^ itemType, System::String ^ unevaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItem (itemType, unevaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="76dda-279">Type d'élément de l'élément ajouté.</span><span class="sxs-lookup"><span data-stu-id="76dda-279">The item type of the added item.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="76dda-280">Attribut Include de l'élément à ajouter.</span><span class="sxs-lookup"><span data-stu-id="76dda-280">Include attribute of the item to be added.</span></span></param>
        <summary><span data-ttu-id="76dda-281">Ajoute un élément sans métadonnées au projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-281">Adds an item with no metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="76dda-282">Élément ajouté.</span><span class="sxs-lookup"><span data-stu-id="76dda-282">The added item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-283">Toutes les métadonnées peuvent être ajoutées plus tard.</span><span class="sxs-lookup"><span data-stu-id="76dda-283">Any metadata can be added later.</span></span> <span data-ttu-id="76dda-284">Ne modifie pas la source de projet si une expression générique inclut déjà le nouvel élément.</span><span class="sxs-lookup"><span data-stu-id="76dda-284">Does not modify the project source if a wildcard expression already includes the new item.</span></span>  
  
 <span data-ttu-id="76dda-285">Évaluation a lieu sur une mesure du possible.</span><span class="sxs-lookup"><span data-stu-id="76dda-285">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="76dda-286">Les éléments qui sont définies dans la source de projet suivant le nouvel élément peuvent servir pour l’évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-286">Items that are defined in the project source following the new item may be used for evaluation.</span></span> <span data-ttu-id="76dda-287">Cet élément est évalué.</span><span class="sxs-lookup"><span data-stu-id="76dda-287">Only this item is evaluated.</span></span> <span data-ttu-id="76dda-288">Autres éléments qui peuvent en dépendre ne sont pas affectés.</span><span class="sxs-lookup"><span data-stu-id="76dda-288">Other items that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItem">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItem (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItem(string itemType, string unevaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItem (itemType As String, unevaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItem(System::String ^ itemType, System::String ^ unevaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItem : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItem (itemType, unevaluatedInclude, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="76dda-289">Type d'élément de l'élément ajouté.</span><span class="sxs-lookup"><span data-stu-id="76dda-289">The item type of the added item.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="76dda-290">Attribut Include de l'élément à ajouter.</span><span class="sxs-lookup"><span data-stu-id="76dda-290">Include attribute of the item to be added.</span></span></param>
        <param name="metadata"><span data-ttu-id="76dda-291">Métadonnées de l'élément ajouté.</span><span class="sxs-lookup"><span data-stu-id="76dda-291">The metadata of the added item.</span></span></param>
        <summary><span data-ttu-id="76dda-292">Ajoute un élément avec les métadonnées spécifiées au projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-292">Adds an item with the given metadata to the project.</span></span></summary>
        <returns><span data-ttu-id="76dda-293">Élément ajouté.</span><span class="sxs-lookup"><span data-stu-id="76dda-293">The added item.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-294">Les métadonnées peuvent être null, ce qui n’indique aucune métadonnée.</span><span class="sxs-lookup"><span data-stu-id="76dda-294">The metadata may be null, which indicates no metadata.</span></span>  
  
 <span data-ttu-id="76dda-295">Évaluation a lieu sur une mesure du possible.</span><span class="sxs-lookup"><span data-stu-id="76dda-295">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="76dda-296">Les éléments qui sont définies dans la source de projet suivant le nouvel élément peuvent servir pour l’évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-296">Items that are defined in the project source following the new item may be used for evaluation.</span></span> <span data-ttu-id="76dda-297">Cet élément est évalué.</span><span class="sxs-lookup"><span data-stu-id="76dda-297">Only this item is evaluated.</span></span> <span data-ttu-id="76dda-298">Autres éléments qui peuvent en dépendre ne sont pas affectés.</span><span class="sxs-lookup"><span data-stu-id="76dda-298">Other items that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddItemFast">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="76dda-299">Ajoute un élément sans métadonnées au projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-299">Adds an item with no metadata to the project.</span></span>  <span data-ttu-id="76dda-300">Ne fait rien pour voir si un caractère générique existant correspond déjà au nouvel élément, sauf s'il s'agit du premier élément d'un groupe d'éléments.</span><span class="sxs-lookup"><span data-stu-id="76dda-300">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span>  <span data-ttu-id="76dda-301">Ne fait rien pour localiser le nouvel élément à proximité d'éléments similaires.</span><span class="sxs-lookup"><span data-stu-id="76dda-301">Makes no effort to locate the new item near similar items.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddItemFast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast (string itemType, string unevaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast(string itemType, string unevaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItemFast (itemType As String, unevaluatedInclude As String) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItemFast(System::String ^ itemType, System::String ^ unevaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.AddItemFast : string * string -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItemFast (itemType, unevaluatedInclude)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="76dda-302">Type de l'élément à ajouter.</span><span class="sxs-lookup"><span data-stu-id="76dda-302">The item type to be added.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="76dda-303">Attribut Include non évalué à ajouter à l'élément.</span><span class="sxs-lookup"><span data-stu-id="76dda-303">The unevaluated Include attribute to be added to the item.</span></span></param>
        <summary><span data-ttu-id="76dda-304">Ajoute un élément sans métadonnées au projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-304">Adds an item with no metadata to the project.</span></span>  <span data-ttu-id="76dda-305">Ne fait rien pour voir si un caractère générique existant correspond déjà au nouvel élément, sauf s'il s'agit du premier élément d'un groupe d'éléments.</span><span class="sxs-lookup"><span data-stu-id="76dda-305">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span>  <span data-ttu-id="76dda-306">Ne fait rien pour localiser le nouvel élément à proximité d'éléments similaires.</span><span class="sxs-lookup"><span data-stu-id="76dda-306">Makes no effort to locate the new item near similar items.</span></span></summary>
        <returns><span data-ttu-id="76dda-307">Liste des éléments de projet ajoutés.</span><span class="sxs-lookup"><span data-stu-id="76dda-307">A list of the project items added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-308">Ajoute l’élément au premier groupe d’éléments qui n’a pas une condition et a pas d’enfant ou dont le premier enfant est un élément du même type.</span><span class="sxs-lookup"><span data-stu-id="76dda-308">Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.</span></span>  
  
 <span data-ttu-id="76dda-309">Prend la valeur sur une base du meilleur effort :-se développe et que tous les éléments.</span><span class="sxs-lookup"><span data-stu-id="76dda-309">Evaluates on a best-effort basis: -expands with all items.</span></span> <span data-ttu-id="76dda-310">Les éléments définis dans le code XML ci-dessous le nouvel élément peuvent servir, même si dans une évaluation réelle qu’ils ne serait pas.</span><span class="sxs-lookup"><span data-stu-id="76dda-310">Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.</span></span>  
  
 <span data-ttu-id="76dda-311">Cet élément est évalué.</span><span class="sxs-lookup"><span data-stu-id="76dda-311">Only this item is evaluated.</span></span> <span data-ttu-id="76dda-312">Autres éléments qui peuvent en dépendre ne sont pas affectés.</span><span class="sxs-lookup"><span data-stu-id="76dda-312">Other items that might depend on it are not affected.</span></span>  
  
 <span data-ttu-id="76dda-313">Il s’agit d’un pratique qu’il est entendu ne laisse pas nécessairement le projet dans un état cohérent parfaitement jusqu'à la réévaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-313">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddItemFast">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast (string itemType, string unevaluatedInclude, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,string&gt;&gt; metadata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AddItemFast(string itemType, string unevaluatedInclude, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, string&gt;&gt; metadata) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.AddItemFast(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})" />
      <MemberSignature Language="VB.NET" Value="Public Function AddItemFast (itemType As String, unevaluatedInclude As String, metadata As IEnumerable(Of KeyValuePair(Of String, String))) As IList(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AddItemFast(System::String ^ itemType, System::String ^ unevaluatedInclude, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::String ^&gt;&gt; ^ metadata);" />
      <MemberSignature Language="F#" Value="member this.AddItemFast : string * string * seq&lt;System.Collections.Generic.KeyValuePair&lt;string, string&gt;&gt; -&gt; System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.AddItemFast (itemType, unevaluatedInclude, metadata)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
        <Parameter Name="unevaluatedInclude" Type="System.String" />
        <Parameter Name="metadata" Type="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.String&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="76dda-314">Type de l'élément à ajouter.</span><span class="sxs-lookup"><span data-stu-id="76dda-314">The item type to be added.</span></span></param>
        <param name="unevaluatedInclude"><span data-ttu-id="76dda-315">Attribut Include non évalué à ajouter à l'élément.</span><span class="sxs-lookup"><span data-stu-id="76dda-315">The unevaluated Include attribute to be added to the item.</span></span></param>
        <param name="metadata"><span data-ttu-id="76dda-316">Métadonnées à ajouter.</span><span class="sxs-lookup"><span data-stu-id="76dda-316">The metadata to be added.</span></span></param>
        <summary><span data-ttu-id="76dda-317">Ajoute un élément avec les métadonnées au projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-317">Adds an item with metadata to the project.</span></span> <span data-ttu-id="76dda-318">Les métadonnées peuvent être null, ce qui indique qu'il n'y a pas de métadonnées.</span><span class="sxs-lookup"><span data-stu-id="76dda-318">Metadata may be null, indicating no metadata.</span></span> <span data-ttu-id="76dda-319">Ne fait rien pour voir si un caractère générique existant correspond déjà au nouvel élément, sauf s'il s'agit du premier élément d'un groupe d'éléments.</span><span class="sxs-lookup"><span data-stu-id="76dda-319">Makes no effort to see if an existing wildcard would already match the new item, unless it is the first item in an item group.</span></span> <span data-ttu-id="76dda-320">Ne fait rien pour localiser le nouvel élément à proximité d'éléments similaires.</span><span class="sxs-lookup"><span data-stu-id="76dda-320">Makes no effort to locate the new item near similar items.</span></span></summary>
        <returns><span data-ttu-id="76dda-321">Liste des éléments de projet ajoutés.</span><span class="sxs-lookup"><span data-stu-id="76dda-321">A list of the project items added.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-322">Ajoute l’élément au premier groupe d’éléments qui n’a pas une condition et a pas d’enfant ou dont le premier enfant est un élément du même type.</span><span class="sxs-lookup"><span data-stu-id="76dda-322">Appends the item to the first item group that does not have a condition and has either no children or whose first child is an item of the same type.</span></span>  
  
 <span data-ttu-id="76dda-323">Prend la valeur sur une base du meilleur effort :-se développe et que tous les éléments.</span><span class="sxs-lookup"><span data-stu-id="76dda-323">Evaluates on a best-effort basis: -expands with all items.</span></span> <span data-ttu-id="76dda-324">Les éléments définis dans le code XML ci-dessous le nouvel élément peuvent servir, même si dans une évaluation réelle qu’ils ne serait pas.</span><span class="sxs-lookup"><span data-stu-id="76dda-324">Items that are defined in the XML below the new item may be used, even though in a real evaluation they would not be.</span></span>  
  
 <span data-ttu-id="76dda-325">Cet élément est évalué.</span><span class="sxs-lookup"><span data-stu-id="76dda-325">Only this item is evaluated.</span></span> <span data-ttu-id="76dda-326">Autres éléments qui peuvent en dépendre n’est pas affectée.</span><span class="sxs-lookup"><span data-stu-id="76dda-326">Other items that might depend on it is not affected.</span></span>  
  
 <span data-ttu-id="76dda-327">Il s’agit d’un pratique qu’il est entendu ne laisse pas nécessairement le projet dans un état cohérent parfaitement jusqu'à la réévaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-327">This is a convenience that it is understood does not necessarily leave the project in a perfectly self consistent state until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedItemDefinitionMetadata">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt; AllEvaluatedItemDefinitionMetadata { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectMetadata&gt; AllEvaluatedItemDefinitionMetadata" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedItemDefinitionMetadata As ICollection(Of ProjectMetadata)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ AllEvaluatedItemDefinitionMetadata { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectMetadata ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllEvaluatedItemDefinitionMetadata : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;" Usage="Microsoft.Build.Evaluation.Project.AllEvaluatedItemDefinitionMetadata" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectMetadata&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dda-328">Obtient toutes les métadonnées de définition d'élément rencontrées pendant l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-328">Gets all item definition metadata encountered during evaluation.</span></span></summary>
        <value><span data-ttu-id="76dda-329">Toutes les métadonnées de définition d’élément rencontrées pendant l’évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-329">All item definition metadata encountered during evaluation.</span></span> <span data-ttu-id="76dda-330">Cela n'inclut pas les éléments dont les conditions n'ont pas la valeur true, ni les métadonnées de définition d'élément ajoutées depuis la dernière évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-330">This does not include any elements whose conditions did not evaluate to true, nor any item definition metadata added since the last evaluation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-331">Métadonnées d’élément sont lu lors de la deuxième passe de l’évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-331">Item metadata is read during the second evaluation pass.</span></span> <span data-ttu-id="76dda-332">Contrairement aux métadonnées retournées par la propriété ItemDefinitions, ces métadonnées sont triées et incluent toutes les métadonnées substituées par la suite avec le même nom et le type d’élément.</span><span class="sxs-lookup"><span data-stu-id="76dda-332">Unlike metadata returned by the ItemDefinitions property, this metadata is ordered, and includes any metadata subsequently overridden with the same name and item type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; AllEvaluatedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; AllEvaluatedItems" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedItems As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ AllEvaluatedItems { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllEvaluatedItems : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="Microsoft.Build.Evaluation.Project.AllEvaluatedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dda-333">Obtient un énumérateur sur tous les éléments rencontrés pendant l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-333">Gets an enumerator over all items encountered during evaluation.</span></span> <span data-ttu-id="76dda-334">Ceux-ci sont lus pendant le troisième passe de l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-334">These are read during the third evaluation pass.</span></span></summary>
        <value><span data-ttu-id="76dda-335">Énumérateur sur tous les éléments rencontrés pendant l’évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-335">An enumerator over all items encountered during evaluation.</span></span> <span data-ttu-id="76dda-336">Ceux-ci sont lus pendant le troisième passe de l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-336">These are read during the third evaluation pass.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-337">Contrairement à ces éléments retournés par la propriété Items, ceux-ci sont classés par rapport à tous les autres éléments rencontrés pendant l’évaluation, pas simplement triée en ce qui concerne les éléments du même type d’élément.</span><span class="sxs-lookup"><span data-stu-id="76dda-337">Unlike those items returned by the Items property, these are ordered with respect to all other items encountered during evaluation, not just ordered with respect to items of the same item type.</span></span>  
  
 <span data-ttu-id="76dda-338">Dans certaines applications, ce classement mutuel complet est importante et que ces hôtes peuvent utiliser cette propriété.</span><span class="sxs-lookup"><span data-stu-id="76dda-338">In some applications, this complete mutual ordering is significant, and such hosts can use this property.</span></span>  
  
 <span data-ttu-id="76dda-339">L’énumération n’inclut pas tous les éléments dont les conditions n’ont pas la valeur true, ni n’inclut pas tous les éléments ajoutés depuis la dernière évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-339">The enumeration does not include any elements whose conditions did not evaluate to true, nor does it include any items added since the last evaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllEvaluatedProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt; AllEvaluatedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectProperty&gt; AllEvaluatedProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.AllEvaluatedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllEvaluatedProperties As ICollection(Of ProjectProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ AllEvaluatedProperties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AllEvaluatedProperties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;" Usage="Microsoft.Build.Evaluation.Project.AllEvaluatedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dda-340">Obtient toutes les propriétés rencontrées pendant l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-340">Gets all properties encountered during evaluation.</span></span></summary>
        <value><span data-ttu-id="76dda-341">Toutes les propriétés rencontrées pendant l’évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-341">All properties encountered during evaluation.</span></span> <span data-ttu-id="76dda-342">Cela n'inclut pas les propriétés dont les conditions n'ont pas la valeur true, ni les propriétés ajoutées depuis la dernière évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-342">This does not include any properties whose conditions did not evaluate to true, nor any properties added since the last evaluation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-343">Ces propriétés sont lues pendant la première passe de l’évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-343">These properties are read during the first evaluation pass.</span></span> <span data-ttu-id="76dda-344">Contrairement aux propriétés retournées par la propriété Properties, ceux-ci sont classés et inclut toutes les propriétés substituées par la suite avec le même nom.</span><span class="sxs-lookup"><span data-stu-id="76dda-344">Unlike properties returned by the Properties property, these are ordered, and includes any properties subsequently overridden with the same name.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Build">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="76dda-345">Génère ce projet, à l'aide des cibles par défaut.</span><span class="sxs-lookup"><span data-stu-id="76dda-345">Builds this project, using the default targets.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build" />
      <MemberSignature Language="VB.NET" Value="Public Function Build () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build();" />
      <MemberSignature Language="F#" Value="member this.Build : unit -&gt; bool" Usage="project.Build " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76dda-346">Génère ce projet, à l'aide des cibles par défaut.</span><span class="sxs-lookup"><span data-stu-id="76dda-346">Builds this project, using the default targets.</span></span></summary>
        <returns><span data-ttu-id="76dda-347"><see langword="true" /> en cas de réussite ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dda-347"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-348">Pour définir ou obtenir les éléments virtuels à des fins de génération, cloner une instance de projet explicitement et générez-la.</span><span class="sxs-lookup"><span data-stu-id="76dda-348">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="76dda-349">Cette méthode ne modifie pas l’objet de projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-349">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (Microsoft.Build.Framework.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class Microsoft.Build.Framework.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(Microsoft.Build.Framework.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (logger As ILogger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(Microsoft::Build::Framework::ILogger ^ logger);" />
      <MemberSignature Language="F#" Value="member this.Build : Microsoft.Build.Framework.ILogger -&gt; bool" Usage="project.Build logger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="logger" Type="Microsoft.Build.Framework.ILogger" />
      </Parameters>
      <Docs>
        <param name="logger"><span data-ttu-id="76dda-350">Enregistreur d'événements à utiliser pendant la génération.</span><span class="sxs-lookup"><span data-stu-id="76dda-350">The logger to be used during the build.</span></span></param>
        <summary><span data-ttu-id="76dda-351">Génère ce projet, à l'aide des cibles par défaut et de l'enregistreur d'événements spécifié.</span><span class="sxs-lookup"><span data-stu-id="76dda-351">Builds this project, using the default targets and the given logger.</span></span></summary>
        <returns><span data-ttu-id="76dda-352"><see langword="true" /> en cas de réussite ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dda-352"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-353">Pour définir ou obtenir les éléments virtuels à des fins de génération, cloner une instance de projet explicitement et générez-la.</span><span class="sxs-lookup"><span data-stu-id="76dda-353">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="76dda-354">Cette méthode ne modifie pas l’objet de projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-354">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="project.Build loggers" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="76dda-355">Énumérateur sur tous les enregistreurs d'événements à utiliser lors de la génération.</span><span class="sxs-lookup"><span data-stu-id="76dda-355">An enumerator over all loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="76dda-356">Génère ce projet, à l'aide des cibles par défaut et des enregistreurs d'événements spécifiés.</span><span class="sxs-lookup"><span data-stu-id="76dda-356">Builds this project, using the default targets and the given loggers.</span></span></summary>
        <returns><span data-ttu-id="76dda-357"><see langword="true" /> en cas de réussite ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dda-357"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-358">Pour définir ou obtenir les éléments virtuels à des fins de génération, cloner une instance de projet explicitement et générez-la.</span><span class="sxs-lookup"><span data-stu-id="76dda-358">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="76dda-359">Cette méthode ne modifie pas l’objet de projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-359">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target);" />
      <MemberSignature Language="F#" Value="member this.Build : string -&gt; bool" Usage="project.Build target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="76dda-360">Cible à générer.</span><span class="sxs-lookup"><span data-stu-id="76dda-360">The target to be built.</span></span></param>
        <summary><span data-ttu-id="76dda-361">Génère ce projet, en générant la cible spécifiée.</span><span class="sxs-lookup"><span data-stu-id="76dda-361">Builds this project, building the given target.</span></span></summary>
        <returns><span data-ttu-id="76dda-362"><see langword="true" /> en cas de réussite ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dda-362"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-363">Pour définir ou obtenir les éléments virtuels à des fins de génération, cloner une instance de projet explicitement et générez-la.</span><span class="sxs-lookup"><span data-stu-id="76dda-363">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="76dda-364">Cette méthode ne modifie pas l’objet de projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-364">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String()) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] -&gt; bool" Usage="project.Build targets" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="76dda-365">Tableau des cibles à générer.</span><span class="sxs-lookup"><span data-stu-id="76dda-365">An array of targets to be built.</span></span></param>
        <summary><span data-ttu-id="76dda-366">Génère ce projet, en générant les cibles spécifiées.</span><span class="sxs-lookup"><span data-stu-id="76dda-366">Builds this project, building the given targets.</span></span></summary>
        <returns><span data-ttu-id="76dda-367"><see langword="true" /> en cas de réussite ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dda-367"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-368">Pour définir ou obtenir les éléments virtuels à des fins de génération, cloner une instance de projet explicitement et générez-la.</span><span class="sxs-lookup"><span data-stu-id="76dda-368">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="76dda-369">Cette méthode ne modifie pas l’objet de projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-369">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="project.Build (loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="loggers"><span data-ttu-id="76dda-370">Enregistreurs d'événements à utiliser pendant la génération.</span><span class="sxs-lookup"><span data-stu-id="76dda-370">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="76dda-371">Enregistreurs d'événements distants à utiliser pendant la génération.</span><span class="sxs-lookup"><span data-stu-id="76dda-371">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="76dda-372">Génère ce projet, à l'aide des cibles par défaut, ainsi que des enregistreurs d'événements et des enregistreurs d'événements distants spécifiés.</span><span class="sxs-lookup"><span data-stu-id="76dda-372">Builds this project, using the default targets and the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="76dda-373"><see langword="true" /> en cas de réussite ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dda-373"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-374">Pour définir ou obtenir les éléments virtuels à des fins de génération, cloner une instance de projet explicitement et générez-la.</span><span class="sxs-lookup"><span data-stu-id="76dda-374">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="76dda-375">Cette méthode ne modifie pas l’objet de projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-375">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="project.Build (target, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="76dda-376">Cible à générer.</span><span class="sxs-lookup"><span data-stu-id="76dda-376">The target to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="76dda-377">Enregistreurs d'événements à utiliser pendant la génération.</span><span class="sxs-lookup"><span data-stu-id="76dda-377">The loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="76dda-378">Génère ce projet, en générant la cible spécifiée et en utilisant les enregistreurs d'événements spécifiés.</span><span class="sxs-lookup"><span data-stu-id="76dda-378">Builds this project, building the given target and using the given loggers.</span></span></summary>
        <returns><span data-ttu-id="76dda-379"><see langword="true" /> en cas de réussite ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dda-379"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-380">Pour définir ou obtenir les éléments virtuels à des fins de génération, cloner une instance de projet explicitement et générez-la.</span><span class="sxs-lookup"><span data-stu-id="76dda-380">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="76dda-381">Cette méthode ne modifie pas l’objet de projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-381">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; -&gt; bool" Usage="project.Build (targets, loggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="76dda-382">Cibles à générer.</span><span class="sxs-lookup"><span data-stu-id="76dda-382">The targets to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="76dda-383">Enregistreurs d'événements à utiliser pendant la génération.</span><span class="sxs-lookup"><span data-stu-id="76dda-383">The loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="76dda-384">Génère ce projet, en générant les cibles spécifiées et en utilisant les enregistreurs d'événements spécifiés.</span><span class="sxs-lookup"><span data-stu-id="76dda-384">Builds this project, building the given targets and using the given loggers.</span></span></summary>
        <returns><span data-ttu-id="76dda-385"><see langword="true" /> en cas de réussite ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dda-385"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-386">Pour définir ou obtenir les éléments virtuels à des fins de génération, cloner une instance de projet explicitement et générez-la.</span><span class="sxs-lookup"><span data-stu-id="76dda-386">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="76dda-387">Cette méthode ne modifie pas l’objet de projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-387">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string target, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string target, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (target As String, loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(System::String ^ target, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="project.Build (target, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="76dda-388">Cible à générer.</span><span class="sxs-lookup"><span data-stu-id="76dda-388">The target to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="76dda-389">Enregistreurs d'événements à utiliser pendant la génération.</span><span class="sxs-lookup"><span data-stu-id="76dda-389">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="76dda-390">Enregistreurs d'événements distants à utiliser pendant la génération.</span><span class="sxs-lookup"><span data-stu-id="76dda-390">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="76dda-391">Génère ce projet, en générant la cible spécifiée et en utilisant les enregistreurs d'événements et les enregistreurs d'événements distants spécifiés.</span><span class="sxs-lookup"><span data-stu-id="76dda-391">Builds this project, building the given target and using the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="76dda-392"><see langword="true" /> en cas de réussite ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dda-392"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-393">Pour définir ou obtenir les éléments virtuels à des fins de génération, cloner une instance de projet explicitement et générez-la.</span><span class="sxs-lookup"><span data-stu-id="76dda-393">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="76dda-394">Cette méthode ne modifie pas l’objet de projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-394">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Build">
      <MemberSignature Language="C#" Value="public bool Build (string[] targets, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt; loggers, System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Build(string[] targets, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Framework.ILogger&gt; loggers, class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Logging.ForwardingLoggerRecord&gt; remoteLoggers) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})" />
      <MemberSignature Language="VB.NET" Value="Public Function Build (targets As String(), loggers As IEnumerable(Of ILogger), remoteLoggers As IEnumerable(Of ForwardingLoggerRecord)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Build(cli::array &lt;System::String ^&gt; ^ targets, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Framework::ILogger ^&gt; ^ loggers, System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Logging::ForwardingLoggerRecord ^&gt; ^ remoteLoggers);" />
      <MemberSignature Language="F#" Value="member this.Build : string[] * seq&lt;Microsoft.Build.Framework.ILogger&gt; * seq&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt; -&gt; bool" Usage="project.Build (targets, loggers, remoteLoggers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targets" Type="System.String[]" />
        <Parameter Name="loggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Framework.ILogger&gt;" />
        <Parameter Name="remoteLoggers" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Logging.ForwardingLoggerRecord&gt;" />
      </Parameters>
      <Docs>
        <param name="targets"><span data-ttu-id="76dda-395">Cibles à générer.</span><span class="sxs-lookup"><span data-stu-id="76dda-395">The targets to be built.</span></span></param>
        <param name="loggers"><span data-ttu-id="76dda-396">Enregistreurs d'événements à utiliser pendant la génération.</span><span class="sxs-lookup"><span data-stu-id="76dda-396">The loggers to be used during the build.</span></span></param>
        <param name="remoteLoggers"><span data-ttu-id="76dda-397">Enregistreurs d'événements distants à utiliser pendant la génération.</span><span class="sxs-lookup"><span data-stu-id="76dda-397">The remote loggers to be used during the build.</span></span></param>
        <summary><span data-ttu-id="76dda-398">Génère ce projet, en générant les cibles spécifiées et en utilisant les enregistreurs d'événements et les enregistreurs d'événements distants spécifiés.</span><span class="sxs-lookup"><span data-stu-id="76dda-398">Builds this project, building the given targets and using the given loggers and remote loggers.</span></span></summary>
        <returns><span data-ttu-id="76dda-399"><see langword="true" /> en cas de réussite ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dda-399"><see langword="true" /> on success; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-400">Pour définir ou obtenir les éléments virtuels à des fins de génération, cloner une instance de projet explicitement et générez-la.</span><span class="sxs-lookup"><span data-stu-id="76dda-400">To set or get virtual items for build purposes, clone a project instance explicitly and build that.</span></span> <span data-ttu-id="76dda-401">Cette méthode ne modifie pas l’objet de projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-401">This method does not modify the project object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConditionedProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,System.Collections.Generic.List&lt;string&gt;&gt; ConditionedProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.Collections.Generic.List`1&lt;string&gt;&gt; ConditionedProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ConditionedProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConditionedProperties As IDictionary(Of String, List(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::List&lt;System::String ^&gt; ^&gt; ^ ConditionedProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::Collections::Generic::List&lt;System::String ^&gt; ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConditionedProperties : System.Collections.Generic.IDictionary&lt;string, System.Collections.Generic.List&lt;string&gt;&gt;" Usage="Microsoft.Build.Evaluation.Project.ConditionedProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Collections.Generic.List&lt;System.String&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dda-402">Obtient une collection de valeurs de propriété possibles pour les propriétés utilisées pour évaluer les conditions trouvées sur les propriétés, les groupes de propriétés, les importations et le moment de leur intervention.</span><span class="sxs-lookup"><span data-stu-id="76dda-402">Gets a collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens.</span></span></summary>
        <value><span data-ttu-id="76dda-403">Une collection de valeurs de propriété possibles pour les propriétés utilisées pour évaluer les conditions trouvées sur les propriétés, les groupes de propriétés, les importations et le moment du.</span><span class="sxs-lookup"><span data-stu-id="76dda-403">A collection of possible property values for properties used to evaluate conditions found on properties, property groups, imports, and whens.</span></span> <span data-ttu-id="76dda-404">La collection est de forme canonique.</span><span class="sxs-lookup"><span data-stu-id="76dda-404">The collection is in canonical form.</span></span> <span data-ttu-id="76dda-405">Le nom de l'entrée est le nom de la propriété à évaluer, et la valeur est une liste de valeurs de propriété possibles.</span><span class="sxs-lookup"><span data-stu-id="76dda-405">The name of the entry is the name of the property to be evaluated, and the value is a list of possible property values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-406">Par exemple, si les conditions suivantes existaient sur les propriétés dans un projet : Condition&#124;$(Platform)' == ' déboguer&#124;x 86' « condition ' == 'Version' » la table serait remplie avec {« Configuration », {« Debug », « Release »}} {« plateforme », {« x86 »}} cette collection est utilisée par Visual Studio afin de déterminer les configurations définies dans le projet</span><span class="sxs-lookup"><span data-stu-id="76dda-406">For example, if the following conditions existed on properties in a project: Condition="'$(Configuration)&#124;$(Platform)' == 'Debug&#124;x86'" Condition="'$(Configuration)' == 'Release'" the table would be populated with { "Configuration", { "Debug", "Release" }} { "Platform", { "x86" }} This collection is used by Visual Studio to determine the configurations defined in the project</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProjectInstance">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="76dda-407">Crée une instance de projet basée sur ce projet, mais complètement déconnectée de ce dernier.</span><span class="sxs-lookup"><span data-stu-id="76dda-407">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-408">Peut être utilisé pour générer de manière indépendante.</span><span class="sxs-lookup"><span data-stu-id="76dda-408">Can be used to build independently.</span></span> <span data-ttu-id="76dda-409">Le projet d’origine est évalué avant la création de l’instance, si nécessaire, afin que le projet d’origine est marqué comme non modifié.</span><span class="sxs-lookup"><span data-stu-id="76dda-409">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProjectInstance">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance CreateProjectInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProjectInstance () As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ CreateProjectInstance();" />
      <MemberSignature Language="F#" Value="member this.CreateProjectInstance : unit -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="project.CreateProjectInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76dda-410">Crée une instance de projet basée sur ce projet, mais complètement déconnectée de ce dernier.</span><span class="sxs-lookup"><span data-stu-id="76dda-410">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <returns><span data-ttu-id="76dda-411">Instance de projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-411">The project instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-412">Peut être utilisé pour générer de manière indépendante.</span><span class="sxs-lookup"><span data-stu-id="76dda-412">Can be used to build independently.</span></span> <span data-ttu-id="76dda-413">Le projet d’origine est évalué avant la création de l’instance, si nécessaire, afin que le projet d’origine est marqué comme non modifié.</span><span class="sxs-lookup"><span data-stu-id="76dda-413">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProjectInstance">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Execution.ProjectInstance CreateProjectInstance (Microsoft.Build.Execution.ProjectInstanceSettings settings);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Execution.ProjectInstance CreateProjectInstance(valuetype Microsoft.Build.Execution.ProjectInstanceSettings settings) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.CreateProjectInstance(Microsoft.Build.Execution.ProjectInstanceSettings)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateProjectInstance (settings As ProjectInstanceSettings) As ProjectInstance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Execution::ProjectInstance ^ CreateProjectInstance(Microsoft::Build::Execution::ProjectInstanceSettings settings);" />
      <MemberSignature Language="F#" Value="member this.CreateProjectInstance : Microsoft.Build.Execution.ProjectInstanceSettings -&gt; Microsoft.Build.Execution.ProjectInstance" Usage="project.CreateProjectInstance settings" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Execution.ProjectInstance</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="settings" Type="Microsoft.Build.Execution.ProjectInstanceSettings" />
      </Parameters>
      <Docs>
        <param name="settings"><span data-ttu-id="76dda-414">Détermine si l'instance de projet créée est immuable et si elle contient une table de recherche pour améliorer les performances.</span><span class="sxs-lookup"><span data-stu-id="76dda-414">Determines whether created project instance is immutable and whether it contains a look up table to improve performance.</span></span></param>
        <summary><span data-ttu-id="76dda-415">Crée une instance de projet basée sur ce projet, mais complètement déconnectée de ce dernier.</span><span class="sxs-lookup"><span data-stu-id="76dda-415">Creates a project instance based on this project, but completely disconnected from it.</span></span></summary>
        <returns><span data-ttu-id="76dda-416">Instance de projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-416">The project instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-417">Peut être utilisé pour générer de manière indépendante.</span><span class="sxs-lookup"><span data-stu-id="76dda-417">Can be used to build independently.</span></span> <span data-ttu-id="76dda-418">Le projet d’origine est évalué avant la création de l’instance, si nécessaire, afin que le projet d’origine est marqué comme non modifié.</span><span class="sxs-lookup"><span data-stu-id="76dda-418">The original project is evaluated before creating the instance, if necessary, so that the original project is marked as unmodified.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectoryPath">
      <MemberSignature Language="C#" Value="public string DirectoryPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DirectoryPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.DirectoryPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectoryPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DirectoryPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectoryPath : string" Usage="Microsoft.Build.Evaluation.Project.DirectoryPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dda-419">Obtient le répertoire racine de ce projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-419">Gets the root directory for this project.</span></span></summary>
        <value><span data-ttu-id="76dda-420">Le répertoire racine pour ce projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-420">The root directory for this project.</span></span> <span data-ttu-id="76dda-421">Le répertoire racine n'est jamais null ; les projets en mémoire utilisent le répertoire actif au moment du chargement du projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-421">The root directory is never null; in-memory projects use the current directory at the time of project load.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisableMarkDirty">
      <MemberSignature Language="C#" Value="public bool DisableMarkDirty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisableMarkDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.DisableMarkDirty" />
      <MemberSignature Language="VB.NET" Value="Public Property DisableMarkDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DisableMarkDirty { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DisableMarkDirty : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.DisableMarkDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dda-422">Obtient ou définit une valeur qui indique si <see cref="M:Microsoft.Build.Evaluation.Project.MarkDirty" /> est provisoirement désactivé.</span><span class="sxs-lookup"><span data-stu-id="76dda-422">Gets or sets a value that indicates whether <see cref="M:Microsoft.Build.Evaluation.Project.MarkDirty" /> is temporarily disabled.</span></span> <span data-ttu-id="76dda-423">Cela permet, par exemple, qu'une propriété globale soit définie sans que le projet soit, en conséquence, marqué comme modifié pour la réévaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-423">This allows, for example, a global property to be set without the project getting marked dirty for reevaluation as a consequence.</span></span></summary>
        <value><span data-ttu-id="76dda-424"><see langword="true" /> pour indiquer <see langword="MarkDirty" /> est temporairement désactivé ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dda-424"><see langword="true" /> to indicate <see langword="MarkDirty" /> is temporarily disabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluationCounter">
      <MemberSignature Language="C#" Value="public int EvaluationCounter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EvaluationCounter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.EvaluationCounter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EvaluationCounter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EvaluationCounter { int get(); };" />
      <MemberSignature Language="F#" Value="member this.EvaluationCounter : int" Usage="Microsoft.Build.Evaluation.Project.EvaluationCounter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dda-425">Obtient un nombre qui est incrémenté à chaque réévaluation du projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-425">Gets a number that is incremented every time that project is re-evaluated.</span></span></summary>
        <value><span data-ttu-id="76dda-426">Valeur incrémentée.</span><span class="sxs-lookup"><span data-stu-id="76dda-426">The incremented value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-427">Cette valeur doit être comparée aux valeurs précédentes pour voir si le projet a été ré-évalué.</span><span class="sxs-lookup"><span data-stu-id="76dda-427">This value should be compared with previous values to see if the project has been re-evaluated.</span></span> <span data-ttu-id="76dda-428">Il ne doit pas utilisé pour déterminer combien de fois le projet a été réévalué dans la mesure où il peut être incrémenté par plusieurs objets pour une réévaluation donnée.</span><span class="sxs-lookup"><span data-stu-id="76dda-428">It should not be used to determine how many times the project has been re-evaluated since it may be incremented by more than one for a given re-evaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandString">
      <MemberSignature Language="C#" Value="public string ExpandString (string unexpandedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ExpandString(string unexpandedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.ExpandString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExpandString (unexpandedValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ExpandString(System::String ^ unexpandedValue);" />
      <MemberSignature Language="F#" Value="member this.ExpandString : string -&gt; string" Usage="project.ExpandString unexpandedValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unexpandedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="unexpandedValue"><span data-ttu-id="76dda-429">Chaîne à évaluer.</span><span class="sxs-lookup"><span data-stu-id="76dda-429">The string to be evaluated.</span></span></param>
        <summary><span data-ttu-id="76dda-430">Évalue la chaîne spécifiée en développant des éléments et des propriétés.</span><span class="sxs-lookup"><span data-stu-id="76dda-430">Evaluates the given string by expanding items and properties.</span></span> <span data-ttu-id="76dda-431">La chaîne est évaluée comme si elle se trouvait tout à la fin du fichier projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-431">The string is evaluated as if it were found at the very end of the project file.</span></span></summary>
        <returns><span data-ttu-id="76dda-432">Chaîne évaluée.</span><span class="sxs-lookup"><span data-stu-id="76dda-432">The evaluated string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-433">Cette méthode peut être utilisée lors de l’évaluation de meilleur effort est suffisante.</span><span class="sxs-lookup"><span data-stu-id="76dda-433">This method can be used when best-effort evaluation is sufficient.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullPath">
      <MemberSignature Language="C#" Value="public string FullPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.FullPath" />
      <MemberSignature Language="VB.NET" Value="Public Property FullPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FullPath : string with get, set" Usage="Microsoft.Build.Evaluation.Project.FullPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dda-434">Obtient ou définit le chemin d'accès complet au fichier source de projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-434">Gets or sets the full path to the project source file.</span></span></summary>
        <value><span data-ttu-id="76dda-435">Le chemin d’accès complet au fichier source du projet, ou une chaîne vide si le projet n’a pas été chargé à partir du disque.</span><span class="sxs-lookup"><span data-stu-id="76dda-435">The full path to the project source file, or an empty string if the project was not loaded from disk.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-436">Définition de cette propriété sur un projet dans une collection de projets renomme le projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-436">Setting this property on a project in a project collection renames the project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetEvaluatedItemIncludeEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="76dda-437">Obtient la valeur évaluée, placée dans une séquence d'échappement, de l'attribut Include des éléments fournis.</span><span class="sxs-lookup"><span data-stu-id="76dda-437">Gets evaluated, escaped value of the Include attribute of the provided items.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Evaluation.ProjectItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItem)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItem) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Evaluation::ProjectItem ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Evaluation.ProjectItem -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="76dda-438">Élément à évaluer et à placer dans une séquence d'échappement.</span><span class="sxs-lookup"><span data-stu-id="76dda-438">The item to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="76dda-439">Obtient la valeur évaluée, placée dans une séquence d'échappement, de l'attribut Include des éléments fournis.</span><span class="sxs-lookup"><span data-stu-id="76dda-439">Gets evaluated, escaped value of the Include attribute of the provided items.</span></span></summary>
        <returns><span data-ttu-id="76dda-440">Valeur évaluée, placée dans une séquence d’échappement, de l’attribut Include des éléments fournis.</span><span class="sxs-lookup"><span data-stu-id="76dda-440">The evaluated, escaped value of the Include attribute of the provided items.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEvaluatedItemIncludeEscaped">
      <MemberSignature Language="C#" Value="public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetEvaluatedItemIncludeEscaped(class Microsoft.Build.Evaluation.ProjectItemDefinition item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetEvaluatedItemIncludeEscaped (item As ProjectItemDefinition) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetEvaluatedItemIncludeEscaped(Microsoft::Build::Evaluation::ProjectItemDefinition ^ item);" />
      <MemberSignature Language="F#" Value="static member GetEvaluatedItemIncludeEscaped : Microsoft.Build.Evaluation.ProjectItemDefinition -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetEvaluatedItemIncludeEscaped item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItemDefinition" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="76dda-441">Définition d'élément à évaluer et à placer dans une séquence d'échappement.</span><span class="sxs-lookup"><span data-stu-id="76dda-441">The item definition to be evaluated and escaped.</span></span></param>
        <summary><span data-ttu-id="76dda-442">Obtient la valeur évaluée, placée dans une séquence d'échappement, de l'attribut Include de la définition d'élément fournie.</span><span class="sxs-lookup"><span data-stu-id="76dda-442">Gets the evaluated, escaped value of the Include attribute of the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="76dda-443">Valeur de l’attribut Include.</span><span class="sxs-lookup"><span data-stu-id="76dda-443">The value of the Include attribute.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItems">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItems (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItems(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItems(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItems (itemType As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItems(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItems : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.GetItems itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="76dda-444">Type de l'élément à récupérer.</span><span class="sxs-lookup"><span data-stu-id="76dda-444">The item type to be retrieved.</span></span></param>
        <summary><span data-ttu-id="76dda-445">Obtient tous les éléments du projet qui sont du type d'élément spécifié.</span><span class="sxs-lookup"><span data-stu-id="76dda-445">Gets all the items in the project of the given item type.</span></span> <span data-ttu-id="76dda-446">S'il n'y en a pas, retourne une liste vide.</span><span class="sxs-lookup"><span data-stu-id="76dda-446">If there are none, returns an empty list.</span></span> <span data-ttu-id="76dda-447">Utilisez AddItem ou RemoveItem pour modifier des éléments de ce projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-447">Use AddItem or RemoveItem to modify items in this project.</span></span></summary>
        <returns><span data-ttu-id="76dda-448">Tous les éléments de projet du type d’élément spécifié, ou liste vide si aucun élément n’existe avec le nom d’élément donné.</span><span class="sxs-lookup"><span data-stu-id="76dda-448">All the items in the project of the given item type, or an empty list if there are no items with the given item name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-449">Utilisez AddItem ou RemoveItem pour modifier des éléments de ce projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-449">Use AddItem or RemoveItem to modify items in this project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsByEvaluatedInclude">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsByEvaluatedInclude (string evaluatedInclude);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsByEvaluatedInclude(string evaluatedInclude) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemsByEvaluatedInclude(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsByEvaluatedInclude (evaluatedInclude As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItemsByEvaluatedInclude(System::String ^ evaluatedInclude);" />
      <MemberSignature Language="F#" Value="member this.GetItemsByEvaluatedInclude : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.GetItemsByEvaluatedInclude evaluatedInclude" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="evaluatedInclude" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="evaluatedInclude"><span data-ttu-id="76dda-450">Attribut Include évalué.</span><span class="sxs-lookup"><span data-stu-id="76dda-450">The evaluated Include attribute.</span></span></param>
        <summary><span data-ttu-id="76dda-451">Obtient tous les éléments qui ont l'attribut Include évalué spécifié.</span><span class="sxs-lookup"><span data-stu-id="76dda-451">Gets all items that have the given evaluated Include attribute.</span></span></summary>
        <returns><span data-ttu-id="76dda-452">Tous les éléments qui ont l’attribut Include évalué spécifié.</span><span class="sxs-lookup"><span data-stu-id="76dda-452">All items that have the given evaluated Include attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-453">Par exemple, cette méthode peut retourner tous les éléments qui ont l’attribut Include évalué « Component.cpp » évalué.</span><span class="sxs-lookup"><span data-stu-id="76dda-453">For example, this method might return all items that have the evaluated Include attribute "component.cpp".</span></span> <span data-ttu-id="76dda-454">En général, zéro ou un élément est retourné.</span><span class="sxs-lookup"><span data-stu-id="76dda-454">Typically zero or one items are returned.</span></span> <span data-ttu-id="76dda-455">Toutefois, il peut être plusieurs éléments avec le même chemin d’accès et les types d’éléments différents, ou même avec les mêmes types d’éléments.</span><span class="sxs-lookup"><span data-stu-id="76dda-455">However, there may be multiple items with the same path and different item types, or even with the same item types.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemsIgnoringCondition">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsIgnoringCondition (string itemType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; GetItemsIgnoringCondition(string itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetItemsIgnoringCondition(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemsIgnoringCondition (itemType As String) As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ GetItemsIgnoringCondition(System::String ^ itemType);" />
      <MemberSignature Language="F#" Value="member this.GetItemsIgnoringCondition : string -&gt; System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="project.GetItemsIgnoringCondition itemType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="itemType"><span data-ttu-id="76dda-456">Type de l'élément à récupérer.</span><span class="sxs-lookup"><span data-stu-id="76dda-456">The item type to be retrieved.</span></span></param>
        <summary><span data-ttu-id="76dda-457">Obtient tous les éléments du projet qui sont du type spécifié, que leur attribut Condition ait, ou non, la valeur true.</span><span class="sxs-lookup"><span data-stu-id="76dda-457">Gets all the items in the project of the given type, whether or not their Condition attribute evaluates to true.</span></span> <span data-ttu-id="76dda-458">il s'agit d'une liste en lecture seule : utilisez AddItem ou RemoveItem pour modifier des éléments de ce projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-458">This is a read-only list: use AddItem or RemoveItem to modify items in this project.</span></span></summary>
        <returns><span data-ttu-id="76dda-459">Tous les éléments du projet qui sont du type spécifié, que leur attribut Condition ait, ou non, la valeur true.</span><span class="sxs-lookup"><span data-stu-id="76dda-459">All the items in the project of the given type, whether or not their Condition attribute evaluates to true.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-460">Il s'agit d'une liste en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="76dda-460">This is a read-only list.</span></span> <span data-ttu-id="76dda-461">Utilisez AddItem ou RemoveItem pour modifier des éléments de ce projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-461">Use AddItem or RemoveItem to modify items in this project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLogicalProject">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt; GetLogicalProject ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Construction.ProjectElement&gt; GetLogicalProject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetLogicalProject" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLogicalProject () As IEnumerable(Of ProjectElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Construction::ProjectElement ^&gt; ^ GetLogicalProject();" />
      <MemberSignature Language="F#" Value="member this.GetLogicalProject : unit -&gt; seq&lt;Microsoft.Build.Construction.ProjectElement&gt;" Usage="project.GetLogicalProject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Construction.ProjectElement&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76dda-462">Obtient un énumérateur sur tous les éléments du « projet logique ».</span><span class="sxs-lookup"><span data-stu-id="76dda-462">Gets an enumerator over all the elements in the "logical project".</span></span> <span data-ttu-id="76dda-463">Le projet logique est défini en tant que projet non évalué obtenu à partir du fichier MSBuild unique qui est le résultat de la mise inline du texte de toutes les importations du fichier manifeste du projet MSBuild d'origine.</span><span class="sxs-lookup"><span data-stu-id="76dda-463">The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of inlining the text of all imports of the original MSBuild project manifest file.</span></span></summary>
        <returns><span data-ttu-id="76dda-464">Énumérateur sur tous les éléments du « projet logique ».</span><span class="sxs-lookup"><span data-stu-id="76dda-464">An enumerator over all the elements in the "logical project".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-465">Le projet logique est défini comme projet non évalué obtenu à partir du fichier MSBuild unique qui est le résultat de la ligne le texte de toutes les importations du fichier manifeste du projet MSBuild d’origine.</span><span class="sxs-lookup"><span data-stu-id="76dda-465">The logical project is defined as the unevaluated project obtained from the single MSBuild file that is the result of including inline the text of all imports of the original MSBuild project manifest file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMetadataValueEscaped">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="76dda-466">Obtient la valeur placée dans une séquence d'échappement de la métadonnée portant le nom fourni sur l'élément fourni.</span><span class="sxs-lookup"><span data-stu-id="76dda-466">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectMetadata metadatum);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectMetadata metadatum) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectMetadata)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (metadatum As ProjectMetadata) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectMetadata ^ metadatum);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Evaluation.ProjectMetadata -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped metadatum" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="metadatum" Type="Microsoft.Build.Evaluation.ProjectMetadata" />
      </Parameters>
      <Docs>
        <param name="metadatum"><span data-ttu-id="76dda-467">Métadonnée à placer dans une séquence d'échappement.</span><span class="sxs-lookup"><span data-stu-id="76dda-467">The metadatum to be escaped.</span></span></param>
        <summary><span data-ttu-id="76dda-468">Obtient la valeur placée dans une séquence d'échappement de la métadonnée fournie.</span><span class="sxs-lookup"><span data-stu-id="76dda-468">Gets the escaped value of the provided metadatum.</span></span></summary>
        <returns><span data-ttu-id="76dda-469">Valeur placée dans une séquence d’échappement de la métadonnée fournie.</span><span class="sxs-lookup"><span data-stu-id="76dda-469">The escaped value of the provided metadatum.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItem item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectItem item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItem,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItem, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectItem ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Evaluation.ProjectItem * string -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="76dda-470">Élément dont les métadonnées seront placées dans une séquence d'échappement.</span><span class="sxs-lookup"><span data-stu-id="76dda-470">The item whose metadata is to be escaped.</span></span></param>
        <param name="name"><span data-ttu-id="76dda-471">Nom des métadonnées à placer dans une séquence d'échappement.</span><span class="sxs-lookup"><span data-stu-id="76dda-471">The name of the metadata to be escaped.</span></span></param>
        <summary><span data-ttu-id="76dda-472">Obtient la valeur placée dans une séquence d'échappement de la métadonnée portant le nom fourni sur l'élément fourni.</span><span class="sxs-lookup"><span data-stu-id="76dda-472">Gets the escaped value of the metadatum with the provided name on the provided item.</span></span></summary>
        <returns><span data-ttu-id="76dda-473">Valeur placée dans une séquence d’échappement de la métadonnée portant le nom fourni sur l’élément fourni.</span><span class="sxs-lookup"><span data-stu-id="76dda-473">The escaped value of the metadatum with the provided name on the provided item.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMetadataValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetMetadataValueEscaped (Microsoft.Build.Evaluation.ProjectItemDefinition item, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetMetadataValueEscaped(class Microsoft.Build.Evaluation.ProjectItemDefinition item, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped(Microsoft.Build.Evaluation.ProjectItemDefinition,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMetadataValueEscaped (item As ProjectItemDefinition, name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetMetadataValueEscaped(Microsoft::Build::Evaluation::ProjectItemDefinition ^ item, System::String ^ name);" />
      <MemberSignature Language="F#" Value="static member GetMetadataValueEscaped : Microsoft.Build.Evaluation.ProjectItemDefinition * string -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetMetadataValueEscaped (item, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItemDefinition" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="76dda-474">Définition d'élément dont les métadonnées seront placées dans une séquence d'échappement.</span><span class="sxs-lookup"><span data-stu-id="76dda-474">The item definition whose metadata is to be escaped.</span></span></param>
        <param name="name"><span data-ttu-id="76dda-475">Nom des métadonnées à placer dans une séquence d'échappement.</span><span class="sxs-lookup"><span data-stu-id="76dda-475">The name of the metadata to be escaped.</span></span></param>
        <summary><span data-ttu-id="76dda-476">Obtient la valeur placée dans une séquence d'échappement de la métadonnée portant le nom fourni sur la définition d'élément fournie.</span><span class="sxs-lookup"><span data-stu-id="76dda-476">Gets the escaped value of the metadatum with the provided name on the provided item definition.</span></span></summary>
        <returns><span data-ttu-id="76dda-477">Valeur placée dans une séquence d’échappement de la métadonnée portant le nom fourni sur la définition d’élément fournie.</span><span class="sxs-lookup"><span data-stu-id="76dda-477">The escaped value of the metadatum with the provided name on the provided item definition.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectProperty GetProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectProperty GetProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetProperty (name As String) As ProjectProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectProperty ^ GetProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetProperty : string -&gt; Microsoft.Build.Evaluation.ProjectProperty" Usage="project.GetProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="76dda-478">Nom de la propriété à récupérer.</span><span class="sxs-lookup"><span data-stu-id="76dda-478">The name of the property to retrieve.</span></span></param>
        <summary><span data-ttu-id="76dda-479">Obtient toute propriété du projet qui porte le nom spécifié.</span><span class="sxs-lookup"><span data-stu-id="76dda-479">Gets any property in the project that has the specified name.</span></span></summary>
        <returns><span data-ttu-id="76dda-480">N’importe quelle propriété du projet qui porte le nom spécifié, ou <see langword="null" /> si aucune propriété portant ce nom n’existe.</span><span class="sxs-lookup"><span data-stu-id="76dda-480">Any property in the project that has the specified name, or <see langword="null" /> if no property of that name exists.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public string GetPropertyValue (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPropertyValue(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetPropertyValue(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyValue (name As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPropertyValue(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.GetPropertyValue : string -&gt; string" Usage="project.GetPropertyValue name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="76dda-481">Nom de la propriété dont la valeur est récupérée.</span><span class="sxs-lookup"><span data-stu-id="76dda-481">The name of the property whose value is retrieved.</span></span></param>
        <summary><span data-ttu-id="76dda-482">Obtient la valeur de la propriété spécifiée dans ce projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-482">Gets the value of the given property in this project.</span></span></summary>
        <returns><span data-ttu-id="76dda-483">Valeur de la propriété spécifiée de ce projet, ou chaîne vide si aucune propriété n’existe avec ce nom.</span><span class="sxs-lookup"><span data-stu-id="76dda-483">The value of the given property in this project, or an empty string if no property of that name exists.</span></span> <span data-ttu-id="76dda-484">Les séquences d'échappement sont converties avant que la chaîne soit retournée.</span><span class="sxs-lookup"><span data-stu-id="76dda-484">Escape sequences are converted before returning the string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-485">Une propriété avec une valeur de chaîne vide et aucune propriété carrément ne sont pas différenciés entre par cette méthode.</span><span class="sxs-lookup"><span data-stu-id="76dda-485">A property with a value of empty string and no property at all are not distinguished between by this method.</span></span> <span data-ttu-id="76dda-486">Pour déterminer si une propriété est définie à tout dans le projet, utilisez GetProperty (Name).</span><span class="sxs-lookup"><span data-stu-id="76dda-486">To determine if a property is set at all in the project, use GetProperty(name).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValueEscaped">
      <MemberSignature Language="C#" Value="public static string GetPropertyValueEscaped (Microsoft.Build.Evaluation.ProjectProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValueEscaped(class Microsoft.Build.Evaluation.ProjectProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped(Microsoft.Build.Evaluation.ProjectProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValueEscaped (property As ProjectProperty) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValueEscaped(Microsoft::Build::Evaluation::ProjectProperty ^ property);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValueEscaped : Microsoft.Build.Evaluation.ProjectProperty -&gt; string" Usage="Microsoft.Build.Evaluation.Project.GetPropertyValueEscaped property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Evaluation.ProjectProperty" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="76dda-487">Propriété à placer dans une séquence d'échappement.</span><span class="sxs-lookup"><span data-stu-id="76dda-487">The property to be escaped.</span></span></param>
        <summary><span data-ttu-id="76dda-488">Obtient la valeur placée dans une séquence d’échappement de la propriété fournie.</span><span class="sxs-lookup"><span data-stu-id="76dda-488">Gets the escaped value of the provided property.</span></span></summary>
        <returns><span data-ttu-id="76dda-489">Valeur placée dans une séquence d’échappement de la propriété fournie.</span><span class="sxs-lookup"><span data-stu-id="76dda-489">The escaped value of the provided property.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalProperties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; GlobalProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; GlobalProperties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.GlobalProperties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalProperties As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ GlobalProperties { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GlobalProperties : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="Microsoft.Build.Evaluation.Project.GlobalProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dda-490">Obtient un dictionnaire des propriétés globales utilisées pour l'évaluation de ce projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-490">Gets a dictionary of the global properties used for the evaluation of this project.</span></span></summary>
        <value><span data-ttu-id="76dda-491">Dictionnaire de propriétés globales utilisées pour l’évaluation de ce projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-491">A dictionary of the global properties used for the evaluation of this project.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-492">C’est la méthode getter exposée publiquement, ce qui se traduit par un IDictionary mort en lecture seule\<string, string >.</span><span class="sxs-lookup"><span data-stu-id="76dda-492">This is the publicly exposed getter, that translates into a read-only dead IDictionary\<string, string>.</span></span>  
  
 <span data-ttu-id="76dda-493">Pour indiquer facilement le moment des modifications, la définition et la suppression des propriétés globales s’effectue avec <xref:Microsoft.Build.Evaluation.Project.SetGlobalProperty%2A> et <xref:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dda-493">In order to easily tell when we're dirtied, setting and removing global properties is done with <xref:Microsoft.Build.Evaluation.Project.SetGlobalProperty%2A> and <xref:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Imports">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt; Imports { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Build.Evaluation.ResolvedImport&gt; Imports" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Imports" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Imports As IList(Of ResolvedImport)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ Imports { System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Imports : System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;" Usage="Microsoft.Build.Evaluation.Project.Imports" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dda-494">Obtient la liste de tous les fichiers qui ont contribué à l'évaluation de ce projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-494">Gets a list of all the files that contributed to the evaluation of this project.</span></span></summary>
        <value><span data-ttu-id="76dda-495">Une liste de tous les fichiers qui ont contribué à l’évaluation de ce projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-495">A list of all the files that contributed to the evaluation of this project.</span></span>  
  
<span data-ttu-id="76dda-496">Le nom de chaque élément est l'élément Import qui a entraîné l'importation du fichier.</span><span class="sxs-lookup"><span data-stu-id="76dda-496">The name of each item is the Import element that caused the file to be imported.</span></span> <span data-ttu-id="76dda-497">La valeur de chaque élément est la racine du projet importé.</span><span class="sxs-lookup"><span data-stu-id="76dda-497">The value of each item is the project root of the imported project.</span></span> <span data-ttu-id="76dda-498">Les éléments Import dont l'attribut Condition a la valeur false ne sont pas inclus.</span><span class="sxs-lookup"><span data-stu-id="76dda-498">Import elements whose Condition attribute evaluated to false are not included.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-499">La racine du projet de ce projet n’est pas incluse.</span><span class="sxs-lookup"><span data-stu-id="76dda-499">The project root of this project is not included.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportsIncludingDuplicates">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt; ImportsIncludingDuplicates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;valuetype Microsoft.Build.Evaluation.ResolvedImport&gt; ImportsIncludingDuplicates" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImportsIncludingDuplicates As IList(Of ResolvedImport)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ ImportsIncludingDuplicates { System::Collections::Generic::IList&lt;Microsoft::Build::Evaluation::ResolvedImport&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ImportsIncludingDuplicates : System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;" Usage="Microsoft.Build.Evaluation.Project.ImportsIncludingDuplicates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;Microsoft.Build.Evaluation.ResolvedImport&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dda-500">Obtient la liste des importations en double si une importation a été importée plusieurs fois.</span><span class="sxs-lookup"><span data-stu-id="76dda-500">Gets a list of duplicate imports if an import was imported multiple times.</span></span> <span data-ttu-id="76dda-501">Toutefois, seule la première importation a été utilisée dans l'évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-501">However, only the first import was used in evaluation.</span></span></summary>
        <value><span data-ttu-id="76dda-502">Une liste des importations en double.</span><span class="sxs-lookup"><span data-stu-id="76dda-502">A list of duplicate imports.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBuildEnabled">
      <MemberSignature Language="C#" Value="public bool IsBuildEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBuildEnabled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.IsBuildEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsBuildEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsBuildEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsBuildEnabled : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.IsBuildEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dda-503">Obtient ou définit une propriété qui détermine si les cibles et les tâches de ce projet peuvent être générées.</span><span class="sxs-lookup"><span data-stu-id="76dda-503">Gets or sets a property that selects whether the targets and tasks of this project can be built.</span></span></summary>
        <value><span data-ttu-id="76dda-504"><see langword="true" /> Si les cibles et les tâches de ce projet peuvent être générées ; Sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dda-504"><see langword="true" /> if the targets and tasks of this project can be built; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-505">Peut être utilisé pour des raisons de sécurité.</span><span class="sxs-lookup"><span data-stu-id="76dda-505">Can be used for security purposes.</span></span> <span data-ttu-id="76dda-506">Par défaut, un nouveau projet a le même paramètre IsBuildEnabled en tant que la collection de projets parent qui le contient.</span><span class="sxs-lookup"><span data-stu-id="76dda-506">By default, a new project has the same IsBuildEnabled setting as the parent project collection that contains it.</span></span> <span data-ttu-id="76dda-507">Lorsque IsBuildEnabled a la valeur false, la méthode Build sur ce projet échoue.</span><span class="sxs-lookup"><span data-stu-id="76dda-507">When IsBuildEnabled is false, the Build method on this project fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDirty : bool" Usage="Microsoft.Build.Evaluation.Project.IsDirty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dda-508">Obtient une valeur qui indique si ce projet a été modifié et s’il doit, de ce fait, être réévalué.</span><span class="sxs-lookup"><span data-stu-id="76dda-508">Gets a value that indicates whether this project has been modified so that it must be reevaluated.</span></span></summary>
        <value><span data-ttu-id="76dda-509"><see langword="true" /> Si ce projet a été modifié afin qu’il doit être réévalué ; Sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dda-509"><see langword="true" /> if this project has been modified so that it must be reevaluated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-510">Un projet est modifié et doit être réévalué lorsque sous-jacent code source du projet, y compris les modifications apportées à des fichiers importés.</span><span class="sxs-lookup"><span data-stu-id="76dda-510">A project is modified and must be reevaluated when the underlying project source code, including changes to imported files.</span></span> <span data-ttu-id="76dda-511">Un projet est également modifié doit être réévalué si l’ensemble d’outils du projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-511">A project is also modified must be reevaluated if the project tool set changes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Evaluation.ProjectItemDefinition&gt; ItemDefinitions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Evaluation.ProjectItemDefinition&gt; ItemDefinitions" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemDefinitions As IDictionary(Of String, ProjectItemDefinition)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Evaluation::ProjectItemDefinition ^&gt; ^ ItemDefinitions { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Evaluation::ProjectItemDefinition ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemDefinitions : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Evaluation.ProjectItemDefinition&gt;" Usage="Microsoft.Build.Evaluation.Project.ItemDefinitions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Evaluation.ProjectItemDefinition&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dda-512">Obtient un dictionnaire des définitions d'élément de ce projet, indexées par type d'élément.</span><span class="sxs-lookup"><span data-stu-id="76dda-512">Gets a dictionary of item definitions in this project, keyed by item type.</span></span></summary>
        <value><span data-ttu-id="76dda-513">Un dictionnaire des définitions d’élément de ce projet, indexées par type d’élément.</span><span class="sxs-lookup"><span data-stu-id="76dda-513">A dictionary of item definitions in this project, keyed by item type.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; Items" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ Items { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="Microsoft.Build.Evaluation.Project.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dda-514">Obtient un énumérateur sur tous les éléments de ce projet, classés dans des groupes de types d'éléments.</span><span class="sxs-lookup"><span data-stu-id="76dda-514">Gets an enumerator over all items in this project, ordered within groups of item types.</span></span></summary>
        <value><span data-ttu-id="76dda-515">Un énumérateur sur tous les éléments dans ce projet, classés dans des groupes de types d’éléments.</span><span class="sxs-lookup"><span data-stu-id="76dda-515">An enumerator over all items in this project, ordered within groups of item types.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemsIgnoringCondition">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt; ItemsIgnoringCondition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; ItemsIgnoringCondition" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemsIgnoringCondition As ICollection(Of ProjectItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ ItemsIgnoringCondition { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemsIgnoringCondition : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" Usage="Microsoft.Build.Evaluation.Project.ItemsIgnoringCondition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectItem&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dda-516">Obtient un énumérateur sur tous les éléments de ce projet, classés dans des groupes de types d'éléments.</span><span class="sxs-lookup"><span data-stu-id="76dda-516">Gets an enumerator over all items in this project, ordered within groups of item types.</span></span></summary>
        <value><span data-ttu-id="76dda-517">Un énumérateur sur tous les éléments dans ce projet, classés dans des groupes de types d’éléments, y compris les éléments dont les conditions ont la valeur false, ou qui sont contenues dans les groupes d’éléments dont la condition prend la valeur <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dda-517">An enumerator over all items in this project, ordered within groups of item types, including items whose conditions evaluate to false, or are contained within item groups whose condition evaluates to <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-518">Peut être utilisé pour afficher tous les éléments, même s’ils ne sont pas partie de la build dans la configuration actuelle.</span><span class="sxs-lookup"><span data-stu-id="76dda-518">Can be used to display all items, even if they are not part of the build in the current configuration.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; ItemTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; ItemTypes" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ItemTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemTypes As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ ItemTypes { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemTypes : System.Collections.Generic.ICollection&lt;string&gt;" Usage="Microsoft.Build.Evaluation.Project.ItemTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dda-519">Obtient un énumérateur sur tous les types d'éléments de ce projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-519">Gets an enumerator over all item types in this project.</span></span></summary>
        <value><span data-ttu-id="76dda-520">Un énumérateur sur tous les types d’éléments dans ce projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-520">An enumerator over all item types in this project.</span></span> <span data-ttu-id="76dda-521">Il s'agit d'une collection ordonnée.</span><span class="sxs-lookup"><span data-stu-id="76dda-521">This is an ordered collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkDirty">
      <MemberSignature Language="C#" Value="public void MarkDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MarkDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.MarkDirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub MarkDirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MarkDirty();" />
      <MemberSignature Language="F#" Value="member this.MarkDirty : unit -&gt; unit" Usage="project.MarkDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76dda-522">Marque ce projet comme modifié.</span><span class="sxs-lookup"><span data-stu-id="76dda-522">Marks this project as modified.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-523">Il est rarement nécessaire d’appeler cette méthode explicitement, car toutes les modifications qui affectent un projet automatiquement marquer comme étant modifié.</span><span class="sxs-lookup"><span data-stu-id="76dda-523">It is seldom necessary to call this method explicitly, because all edits affecting a project automatically mark it as modified.</span></span>  
  
 <span data-ttu-id="76dda-524">Parfois, cependant, cette méthode doit être appelée.</span><span class="sxs-lookup"><span data-stu-id="76dda-524">Sometimes, however, this method must be called.</span></span> <span data-ttu-id="76dda-525">Par exemple, un projet peut avoir un élément Import dont la condition dépend d’un fichier qui existe sur un disque.</span><span class="sxs-lookup"><span data-stu-id="76dda-525">For example, a project may have an Import element whose condition depends on a file that exists on a disk.</span></span> <span data-ttu-id="76dda-526">Si ce fichier n’existe pas au moment de l’évaluation, et il est créé après l’évaluation, puis le projet doit être explicitement marqué comme modifiée.</span><span class="sxs-lookup"><span data-stu-id="76dda-526">If that file does not exist at evaluation time, and it is created after evaluation, then the project must be explicitly marked as modified.</span></span>  
  
 <span data-ttu-id="76dda-527">Le <xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A> méthode utilise cette propriété pour déterminer si une évaluation est nécessaire.</span><span class="sxs-lookup"><span data-stu-id="76dda-527">The <xref:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary%2A> method uses this property to determine if an evaluation is necessary.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectCollection">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectCollection ProjectCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Evaluation.ProjectCollection ProjectCollection" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ProjectCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectCollection As ProjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Evaluation::ProjectCollection ^ ProjectCollection { Microsoft::Build::Evaluation::ProjectCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectCollection : Microsoft.Build.Evaluation.ProjectCollection" Usage="Microsoft.Build.Evaluation.Project.ProjectCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dda-528">Obtient la collection de projets qui contient ce projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-528">Gets the project collection which contains this project.</span></span></summary>
        <value><span data-ttu-id="76dda-529">La collection de projets qui contient ce projet, laquelle n’est jamais <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="76dda-529">The project collection that contains this project, which is never <see langword="null" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectFileLocation">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ElementLocation ProjectFileLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ProjectFileLocation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectFileLocation As ElementLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ElementLocation ^ ProjectFileLocation { Microsoft::Build::Construction::ElementLocation ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectFileLocation : Microsoft.Build.Construction.ElementLocation" Usage="Microsoft.Build.Evaluation.Project.ProjectFileLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ElementLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dda-530">Emplacement du fichier d'origine lui-même, aucun contenu spécifique dans celui-ci.</span><span class="sxs-lookup"><span data-stu-id="76dda-530">The location of the originating file itself, not any specific content within it.</span></span> <span data-ttu-id="76dda-531">Si le fichier n'a pas été nommé, c'est un emplacement vide.</span><span class="sxs-lookup"><span data-stu-id="76dda-531">If the file has not been given a name, this is an empty location.</span></span> <span data-ttu-id="76dda-532">Il s'agit d'un cas légitime d'absence d'emplacement.</span><span class="sxs-lookup"><span data-stu-id="76dda-532">This is a legitimate case of having no location.</span></span></summary>
        <value><span data-ttu-id="76dda-533">Provenant de l’emplacement du fichier, ou un emplacement vide si le fichier n’a pas reçu de nom.</span><span class="sxs-lookup"><span data-stu-id="76dda-533">The originating file location, or an empty location if the file has not been given a name.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class Microsoft.Build.Evaluation.ProjectProperty&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Properties" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Properties As ICollection(Of ProjectProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ Properties { System::Collections::Generic::ICollection&lt;Microsoft::Build::Evaluation::ProjectProperty ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Properties : System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;" Usage="Microsoft.Build.Evaluation.Project.Properties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;Microsoft.Build.Evaluation.ProjectProperty&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dda-534">Obtient un énumérateur sur toutes les propriétés de ce projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-534">Gets an enumerator over all properties in this project.</span></span> <span data-ttu-id="76dda-535">Il s'agit d'une collection non ordonnée.</span><span class="sxs-lookup"><span data-stu-id="76dda-535">This is an unordered collection.</span></span></summary>
        <value><span data-ttu-id="76dda-536">Énumérateur sur toutes les propriétés de ce projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-536">An enumerator over all properties in this project.</span></span> <span data-ttu-id="76dda-537">Étant donné que les propriétés sont évaluées lorsqu'elles apparaissent, il s'agit d'une collection non ordonnée.</span><span class="sxs-lookup"><span data-stu-id="76dda-537">Since properties are evaluated as they appear, this is an unordered collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReevaluateIfNecessary">
      <MemberSignature Language="C#" Value="public void ReevaluateIfNecessary ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReevaluateIfNecessary() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.ReevaluateIfNecessary" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReevaluateIfNecessary ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReevaluateIfNecessary();" />
      <MemberSignature Language="F#" Value="member this.ReevaluateIfNecessary : unit -&gt; unit" Usage="project.ReevaluateIfNecessary " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76dda-538">Réévalue le projet pour incorporer les éventuelles modifications.</span><span class="sxs-lookup"><span data-stu-id="76dda-538">Reevaluates the project to incorporate any changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-539">Le projet est réévalué uniquement si elle est marquée comme modifiée.</span><span class="sxs-lookup"><span data-stu-id="76dda-539">The project is reevaluated only if it is marked as modified.</span></span> <span data-ttu-id="76dda-540">La réévaluation incorpore toutes les modifications apportées au code source du projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-540">Reevaluation incorporates all changes made to the project source code.</span></span>  
  
 <span data-ttu-id="76dda-541">Lève InvalidProjectFileException si l’évaluation échoue.</span><span class="sxs-lookup"><span data-stu-id="76dda-541">Throws InvalidProjectFileException if the evaluation fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGlobalProperty">
      <MemberSignature Language="C#" Value="public bool RemoveGlobalProperty (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveGlobalProperty(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveGlobalProperty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveGlobalProperty (name As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveGlobalProperty(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.RemoveGlobalProperty : string -&gt; bool" Usage="project.RemoveGlobalProperty name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="76dda-542">Nom de la propriété globale à supprimer.</span><span class="sxs-lookup"><span data-stu-id="76dda-542">The name of the global property to be removed.</span></span></param>
        <summary><span data-ttu-id="76dda-543">Supprime une propriété globale et marque le projet comme modifié.</span><span class="sxs-lookup"><span data-stu-id="76dda-543">Removes a global property and marks the project as modified.</span></span></summary>
        <returns><span data-ttu-id="76dda-544"><see langword="true" /> si la valeur de la propriété globale a été définie.</span><span class="sxs-lookup"><span data-stu-id="76dda-544"><see langword="true" /> if the value of the global property was set.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="public bool RemoveItem (Microsoft.Build.Evaluation.ProjectItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveItem(class Microsoft.Build.Evaluation.ProjectItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveItem(Microsoft.Build.Evaluation.ProjectItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveItem (item As ProjectItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveItem(Microsoft::Build::Evaluation::ProjectItem ^ item);" />
      <MemberSignature Language="F#" Value="member this.RemoveItem : Microsoft.Build.Evaluation.ProjectItem -&gt; bool" Usage="project.RemoveItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="Microsoft.Build.Evaluation.ProjectItem" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="76dda-545">Élément à supprimer.</span><span class="sxs-lookup"><span data-stu-id="76dda-545">The item to be removed.</span></span></param>
        <summary><span data-ttu-id="76dda-546">Supprime un élément du projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-546">Removes an item from the project.</span></span> <span data-ttu-id="76dda-547">L'élément à supprimer doit être présent dans le projet, et ne doit pas provenir d'un fichier importé.</span><span class="sxs-lookup"><span data-stu-id="76dda-547">The item to be removed must be present in the project, and must not originate from an imported file.</span></span></summary>
        <returns><span data-ttu-id="76dda-548"><see langword="true" /> si l’élément est présent dans ce projet évalué ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dda-548"><see langword="true" /> if the item is present in this evaluated project; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="76dda-549">Normalement, cette méthode retourne la valeur true, car si l'élément demandé n'est pas présent, elle lève une exception.</span><span class="sxs-lookup"><span data-stu-id="76dda-549">Normally this method returns true, since if the requested item is not present, the method throws an exception.</span></span> <span data-ttu-id="76dda-550">Toutefois, si l'élément est présent uniquement dans la collection ItemsIgnoringCondition, la méthode retourne la valeur false.</span><span class="sxs-lookup"><span data-stu-id="76dda-550">If the item is present only in the ItemsIgnoringCondition collection, however, the method returns false.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-551">Si le groupe d’éléments contenant l’élément devient vide, il est également supprimé.</span><span class="sxs-lookup"><span data-stu-id="76dda-551">If the item group containing the item becomes empty, it is also removed.</span></span>  
  
 <span data-ttu-id="76dda-552">Si l’élément provient d’un caractère générique ou une expression délimitée par des points-virgules, l’expression est développée en premier en plusieurs éléments.</span><span class="sxs-lookup"><span data-stu-id="76dda-552">If the item originates from a wildcard or semicolon-separated expression, the expression is first expanded into multiple items.</span></span>  
  
 <span data-ttu-id="76dda-553">Le projet est mis à jour, mais aucune évaluation supplémentaire ne se produit jusqu'à la réévaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-553">The project is updated, but no further evaluation occurs until reevaluation.</span></span> <span data-ttu-id="76dda-554">Par exemple, si un élément de type « i » est supprimé, « j » qui est évalué à partir de « @(i) » n’est pas modifié jusqu'à la réévaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-554">For example, if an item of type "i" is removed, "j" which is evaluated from "@(i)" is not modified until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItems">
      <MemberSignature Language="C#" Value="public void RemoveItems (System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectItem&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemoveItems(class System.Collections.Generic.IEnumerable`1&lt;class Microsoft.Build.Evaluation.ProjectItem&gt; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveItems(System.Collections.Generic.IEnumerable{Microsoft.Build.Evaluation.ProjectItem})" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveItems (items As IEnumerable(Of ProjectItem))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemoveItems(System::Collections::Generic::IEnumerable&lt;Microsoft::Build::Evaluation::ProjectItem ^&gt; ^ items);" />
      <MemberSignature Language="F#" Value="member this.RemoveItems : seq&lt;Microsoft.Build.Evaluation.ProjectItem&gt; -&gt; unit" Usage="project.RemoveItems items" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IEnumerable&lt;Microsoft.Build.Evaluation.ProjectItem&gt;" />
      </Parameters>
      <Docs>
        <param name="items"><span data-ttu-id="76dda-555">Éléments à supprimer.</span><span class="sxs-lookup"><span data-stu-id="76dda-555">The items to be removed.</span></span></param>
        <summary><span data-ttu-id="76dda-556">Supprime tous les éléments spécifiés du projet, sauf s'ils proviennent d'un projet importé.</span><span class="sxs-lookup"><span data-stu-id="76dda-556">Removes all the given items from the project, unless they originate from an imported project.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-557">Si un élément provient d’un projet importé, il est simplement ignoré.</span><span class="sxs-lookup"><span data-stu-id="76dda-557">If an item originates from an imported project, it is simply skipped.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveProperty">
      <MemberSignature Language="C#" Value="public bool RemoveProperty (Microsoft.Build.Evaluation.ProjectProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveProperty(class Microsoft.Build.Evaluation.ProjectProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.RemoveProperty(Microsoft.Build.Evaluation.ProjectProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveProperty (property As ProjectProperty) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveProperty(Microsoft::Build::Evaluation::ProjectProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.RemoveProperty : Microsoft.Build.Evaluation.ProjectProperty -&gt; bool" Usage="project.RemoveProperty property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="Microsoft.Build.Evaluation.ProjectProperty" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="76dda-558">Propriété à supprimer.</span><span class="sxs-lookup"><span data-stu-id="76dda-558">The property to remove.</span></span></param>
        <summary><span data-ttu-id="76dda-559">Supprime une propriété du projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-559">Removes an property from the project.</span></span> <span data-ttu-id="76dda-560">La propriété à supprimer doit être présente dans le projet, et ne doit pas provenir d'un fichier importé.</span><span class="sxs-lookup"><span data-stu-id="76dda-560">The property to be removed must be present in the project, and must not originate from an imported file.</span></span></summary>
        <returns><span data-ttu-id="76dda-561"><see langword="true" /> si la propriété est présente dans ce projet évalué ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dda-561"><see langword="true" /> if the property is present in this evaluated project; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-562">Si le groupe de propriétés contenant la propriété devient vide, il est également supprimé.</span><span class="sxs-lookup"><span data-stu-id="76dda-562">If the property group containing the property becomes empty, it is also removed.</span></span>  
  
 <span data-ttu-id="76dda-563">Le projet est mis à jour, mais aucune évaluation supplémentaire ne se produit jusqu'à la réévaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-563">The project is updated, but no further evaluation occurs until reevaluation.</span></span> <span data-ttu-id="76dda-564">Par exemple, si « p » est supprimé, « q », qui est évalué à partir de « $(p) » n’est pas modifié jusqu'à la réévaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-564">For example, if "p" is removed, "q" which is evaluated from "$(p)" is not modified until reevaluation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="76dda-565">Enregistre le projet dans le système de fichiers, s'il a été modifié, à l'aide de l'encodage de caractères par défaut.</span><span class="sxs-lookup"><span data-stu-id="76dda-565">Saves the project to the file system, if modified, using the default character encoding.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save();" />
      <MemberSignature Language="F#" Value="member this.Save : unit -&gt; unit" Usage="project.Save " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="76dda-566">Enregistre le projet dans le système de fichiers, s'il a été modifié, à l'aide de l'encodage de caractères par défaut.</span><span class="sxs-lookup"><span data-stu-id="76dda-566">Saves the project to the file system, if modified, using the default character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.Save : System.IO.TextWriter -&gt; unit" Usage="project.Save writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="76dda-567">TextWriter dans lequel enregistrer le projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-567">The text writer to save the project to.</span></span></param>
        <summary><span data-ttu-id="76dda-568">Enregistre le projet dans le TextWriter fourni, que le projet ait, ou non, été modifié.</span><span class="sxs-lookup"><span data-stu-id="76dda-568">Saves the project to the provided text writer, whether or not the project has been modified.</span></span> <span data-ttu-id="76dda-569">Utilise l'encodage de caractères du TextWriter et marque le projet comme non modifié.</span><span class="sxs-lookup"><span data-stu-id="76dda-569">Uses the character encoding of the text writer and marks the project as unmodified.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.Save : string -&gt; unit" Usage="project.Save path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="76dda-570">Chemin d'accès au code source du projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-570">The path to the project source code.</span></span></param>
        <summary><span data-ttu-id="76dda-571">Enregistre le projet dans le système de fichiers, s'il a été modifié ou si le chemin d'accès au code source du projet change, à l'aide de l'encodage de caractères par défaut.</span><span class="sxs-lookup"><span data-stu-id="76dda-571">Saves the project to the file system, if modified or if the path to the project source code changes, using the default character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="member this.Save : System.Text.Encoding -&gt; unit" Usage="project.Save encoding" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="encoding"><span data-ttu-id="76dda-572">Encodage de caractères utilisé pour enregistrer le projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-572">The character encoding used to save the project.</span></span></param>
        <summary><span data-ttu-id="76dda-573">Enregistre le projet dans le système de fichiers, s'il a été modifié, à l'aide de l'encodage de caractères spécifié.</span><span class="sxs-lookup"><span data-stu-id="76dda-573">Saves the project to the file system, if modified, using the given character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string path, System.Text.Encoding encoding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string path, class System.Text.Encoding encoding) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.Save(System.String,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ path, System::Text::Encoding ^ encoding);" />
      <MemberSignature Language="F#" Value="member this.Save : string * System.Text.Encoding -&gt; unit" Usage="project.Save (path, encoding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="encoding" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="76dda-574">Chemin d'accès au code source du projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-574">The path to the project source code.</span></span></param>
        <param name="encoding"><span data-ttu-id="76dda-575">Encodage de caractères utilisé pour enregistrer le projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-575">The character encoding used to save the project.</span></span></param>
        <summary><span data-ttu-id="76dda-576">Enregistre le projet dans le système de fichiers, s'il a été modifié ou si le chemin d'accès au code source du projet change, à l'aide de l'encodage de caractères spécifié.</span><span class="sxs-lookup"><span data-stu-id="76dda-576">Saves the project to the file system, if modified or if the path to the project source code changes, using the given character encoding.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveLogicalProject">
      <MemberSignature Language="C#" Value="public void SaveLogicalProject (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveLogicalProject(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SaveLogicalProject(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveLogicalProject (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveLogicalProject(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.SaveLogicalProject : System.IO.TextWriter -&gt; unit" Usage="project.SaveLogicalProject writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="76dda-577">Writer qui enregistre le fichier projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-577">The writer that saves the project file.</span></span></param>
        <summary><span data-ttu-id="76dda-578">Enregistre un fichier projet « logique » ou « prétraité », qui inclut tous les fichiers importés comme s'ils constituaient un seul fichier.</span><span class="sxs-lookup"><span data-stu-id="76dda-578">Saves a "logical" or "preprocessed" project file, that includes all the imported files as if they formed a single file.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetGlobalProperty">
      <MemberSignature Language="C#" Value="public bool SetGlobalProperty (string name, string escapedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetGlobalProperty(string name, string escapedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SetGlobalProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetGlobalProperty (name As String, escapedValue As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetGlobalProperty(System::String ^ name, System::String ^ escapedValue);" />
      <MemberSignature Language="F#" Value="member this.SetGlobalProperty : string * string -&gt; bool" Usage="project.SetGlobalProperty (name, escapedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="escapedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="76dda-579">Nom de la propriété globale à définir.</span><span class="sxs-lookup"><span data-stu-id="76dda-579">The name of the global property to set.</span></span></param>
        <param name="escapedValue"><span data-ttu-id="76dda-580">Nouvelle valeur de la propriété globale.</span><span class="sxs-lookup"><span data-stu-id="76dda-580">The new value of the global property.</span></span></param>
        <summary><span data-ttu-id="76dda-581">Définit une propriété globale après l'évaluation du projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-581">Sets a global property after the project has been evaluated.</span></span> <span data-ttu-id="76dda-582">Si la valeur change, le projet est marqué pour exiger la réévaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-582">If the value changes, the project is marked to require reevaluation.</span></span></summary>
        <returns><span data-ttu-id="76dda-583"><see langword="true" /> si la valeur change ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="76dda-583"><see langword="true" /> if the value changes; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetProperty">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Evaluation.ProjectProperty SetProperty (string name, string unevaluatedValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class Microsoft.Build.Evaluation.ProjectProperty SetProperty(string name, string unevaluatedValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Evaluation.Project.SetProperty(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetProperty (name As String, unevaluatedValue As String) As ProjectProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Microsoft::Build::Evaluation::ProjectProperty ^ SetProperty(System::String ^ name, System::String ^ unevaluatedValue);" />
      <MemberSignature Language="F#" Value="member this.SetProperty : string * string -&gt; Microsoft.Build.Evaluation.ProjectProperty" Usage="project.SetProperty (name, unevaluatedValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Evaluation.ProjectProperty</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="unevaluatedValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="76dda-584">Nom de la propriété à définir.</span><span class="sxs-lookup"><span data-stu-id="76dda-584">The name of the property to set.</span></span></param>
        <param name="unevaluatedValue"><span data-ttu-id="76dda-585">Nouvelle valeur non évaluée de la propriété.</span><span class="sxs-lookup"><span data-stu-id="76dda-585">The new unevaluated value of the property.</span></span></param>
        <summary><span data-ttu-id="76dda-586">Définit ou ajoute une propriété avec le nom et la valeur spécifiés pour le projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-586">Sets or adds a property with the given name and value to the project.</span></span> <span data-ttu-id="76dda-587">Remplace la valeur d'une propriété du même nom si elle ne provient pas d'un fichier importé.</span><span class="sxs-lookup"><span data-stu-id="76dda-587">Overwrites the value of a property with the same name if it did not originate in an imported file.</span></span></summary>
        <returns><span data-ttu-id="76dda-588">Propriété.</span><span class="sxs-lookup"><span data-stu-id="76dda-588">The property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-589">S’il n’existe aucune propriété portant le nom spécifié, met à jour la dernière propriété existante portant le nom spécifié qui n’a aucune condition sur lui-même ou son groupe de propriétés, sauf si elle provient d’un fichier importé.</span><span class="sxs-lookup"><span data-stu-id="76dda-589">If there is no property with the given name, updates the last existing property with the given name that has no condition on itself or its property group, unless it originated in an imported file.</span></span>  
  
 <span data-ttu-id="76dda-590">Sinon, ajoute une nouvelle propriété dans le premier groupe de propriétés sans condition, création d’un groupe de propriétés si nécessaire après le dernier ordinateur groupe propriété existant, ou au démarrage du projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-590">Otherwise, adds a new property in the first property group without a condition, creating a property group if necessary after the last existing property group, else at the start of the project.</span></span>  
  
 <span data-ttu-id="76dda-591">Évaluation a lieu sur une mesure du possible.</span><span class="sxs-lookup"><span data-stu-id="76dda-591">Evaluation takes place on a best-effort basis.</span></span> <span data-ttu-id="76dda-592">Les propriétés qui sont définies dans la source de projet suivant la nouvelle propriété peuvent être utilisées pour l’évaluation.</span><span class="sxs-lookup"><span data-stu-id="76dda-592">Properties that are defined in the project source following the new property may be used for evaluation.</span></span> <span data-ttu-id="76dda-593">Uniquement cette propriété est évaluée.</span><span class="sxs-lookup"><span data-stu-id="76dda-593">Only this property is evaluated.</span></span> <span data-ttu-id="76dda-594">Autres propriétés qui peuvent en dépendre ne sont pas affectées.</span><span class="sxs-lookup"><span data-stu-id="76dda-594">Other properties that might depend on it are not affected.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipEvaluation">
      <MemberSignature Language="C#" Value="public bool SkipEvaluation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipEvaluation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.SkipEvaluation" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipEvaluation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipEvaluation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SkipEvaluation : bool with get, set" Usage="Microsoft.Build.Evaluation.Project.SkipEvaluation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dda-595">Obtient ou définit une valeur qui indique si ReevaluateIfNecessary est provisoirement désactivé.</span><span class="sxs-lookup"><span data-stu-id="76dda-595">Gets or sets a value that indicates whether ReevaluateIfNecessary is temporarily disabled.</span></span> <span data-ttu-id="76dda-596">Cela est utile lorsque l'hôte est censé effectuer un certain nombre de lectures et d'écritures dans le projet, et qu'il souhaite sacrifier temporairement l'exactitude pour des raisons de performances.</span><span class="sxs-lookup"><span data-stu-id="76dda-596">This is useful when the host expects to make a number of reads and writes to the project, and wants to temporarily sacrifice correctness for performance.</span></span></summary>
        <value><span data-ttu-id="76dda-597">Un indicateur qui détermine si ReevaluateIfNecessary est temporairement désactivé.</span><span class="sxs-lookup"><span data-stu-id="76dda-597">A flag that determines whether ReevaluateIfNecessary is temporarily disabled.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SubToolsetVersion">
      <MemberSignature Language="C#" Value="public string SubToolsetVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SubToolsetVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.SubToolsetVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SubToolsetVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SubToolsetVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SubToolsetVersion : string" Usage="Microsoft.Build.Evaluation.Project.SubToolsetVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dda-598">Obtient la valeur de l'attribut SubToolsetVersion, le cas échéant.</span><span class="sxs-lookup"><span data-stu-id="76dda-598">Gets the value of the SubToolsetVersion attribute, if any.</span></span> <span data-ttu-id="76dda-599">Cette valeur a été combinée avec la valeur de l'attribut ToolsVersion pour déterminer les propriétés de l'ensemble d'outils pour ce projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-599">This value was combined with the value of the ToolsVersion attribute to determine the toolset properties for this project.</span></span></summary>
        <value><span data-ttu-id="76dda-600">La valeur d’attribut SubToolsetVersion, ou une chaîne vide si l’attribut n’est pas présent.</span><span class="sxs-lookup"><span data-stu-id="76dda-600">The SubToolsetVersion attribute value, or an empty string if the attribute is not present.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Targets">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class Microsoft.Build.Execution.ProjectTargetInstance&gt; Targets" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Targets" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Targets As IDictionary(Of String, ProjectTargetInstance)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ Targets { System::Collections::Generic::IDictionary&lt;System::String ^, Microsoft::Build::Execution::ProjectTargetInstance ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Targets : System.Collections.Generic.IDictionary&lt;string, Microsoft.Build.Execution.ProjectTargetInstance&gt;" Usage="Microsoft.Build.Evaluation.Project.Targets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,Microsoft.Build.Execution.ProjectTargetInstance&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dda-601">Obtient un dictionnaire de toutes les cibles de ce projet, indexées par nom de cible.</span><span class="sxs-lookup"><span data-stu-id="76dda-601">Gets a dictionary of all targets in this project, keyed by target name.</span></span></summary>
        <value><span data-ttu-id="76dda-602">Un dictionnaire en lecture seule de toutes les cibles de ce projet, indexées par nom de cible.</span><span class="sxs-lookup"><span data-stu-id="76dda-602">A read-only dictionary of all targets in this project, keyed by target name.</span></span> <span data-ttu-id="76dda-603">Les cibles substituées ne sont pas incluses dans cette collection.</span><span class="sxs-lookup"><span data-stu-id="76dda-603">Overridden targets are not included in this collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolsVersion">
      <MemberSignature Language="C#" Value="public string ToolsVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolsVersion" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.ToolsVersion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ToolsVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolsVersion { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToolsVersion : string" Usage="Microsoft.Build.Evaluation.Project.ToolsVersion" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dda-604">Obtient la version des outils avec laquelle ce projet a été évalué, le cas échéant.</span><span class="sxs-lookup"><span data-stu-id="76dda-604">Gets the tools version that this project was evaluated with, if any.</span></span></summary>
        <value><span data-ttu-id="76dda-605">La version des outils que ce projet a été évalué, le cas échéant.</span><span class="sxs-lookup"><span data-stu-id="76dda-605">The tools version that this project was evaluated with, if any.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-606">Définie par le constructeur.</span><span class="sxs-lookup"><span data-stu-id="76dda-606">Set by the constructor.</span></span> <span data-ttu-id="76dda-607">Cela n’est pas nécessairement identique à la version des outils de la balise de projet, le cas échéant ; Il peut avoir été en externe spécifié, par exemple avec un commutateur /tv sur la ligne de commande.</span><span class="sxs-lookup"><span data-stu-id="76dda-607">This is not necessarily the same as the tools version on the Project tag, if any; it may have been externally specified, for example with a /tv switch on the command line.</span></span> <span data-ttu-id="76dda-608">La version des outils réelle de la balise de projet peut être obtenue à partir de <xref:Microsoft.Build.Evaluation.Project.Xml%2A>.</span><span class="sxs-lookup"><span data-stu-id="76dda-608">The actual tools version on the Project tag can be obtained from <xref:Microsoft.Build.Evaluation.Project.Xml%2A>.</span></span> <span data-ttu-id="76dda-609">La version des outils ne peut pas être modifiée une fois que le projet a été créé.</span><span class="sxs-lookup"><span data-stu-id="76dda-609">The tools version cannot be changed once the project has been created.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xml">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Construction.ProjectRootElement Xml { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Construction.ProjectRootElement Xml" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Evaluation.Project.Xml" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Xml As ProjectRootElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Construction::ProjectRootElement ^ Xml { Microsoft::Build::Construction::ProjectRootElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Xml : Microsoft.Build.Construction.ProjectRootElement" Usage="Microsoft.Build.Evaluation.Project.Xml" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Diagnostics.DebuggerStepThrough</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Construction.ProjectRootElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="76dda-610">Obtient le projet racine associé à ce projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-610">Gets the root project associated with this project.</span></span> <span data-ttu-id="76dda-611">Ne peut jamais être <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="76dda-611">Can never be <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="76dda-612">Le projet racine associé à ce projet, qui ne peut jamais être <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="76dda-612">The root project associated with this project, which can never be <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="76dda-613">Il n’existe aucun moyen de définir cette propriété.</span><span class="sxs-lookup"><span data-stu-id="76dda-613">There is no way to set this property.</span></span> <span data-ttu-id="76dda-614">Si vous avez une nouvelle racine du projet, l’évaluer dans un nouveau projet.</span><span class="sxs-lookup"><span data-stu-id="76dda-614">If you have a new project root, evaluate it into a new project.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
