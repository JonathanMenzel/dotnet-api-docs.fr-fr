<Type Name="FileLogTraceListener" FullName="Microsoft.VisualBasic.Logging.FileLogTraceListener">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fa5ff254194dbb877eac42c4dd1549a8e24421b9" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37710640" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FileLogTraceListener : System.Diagnostics.TraceListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileLogTraceListener extends System.Diagnostics.TraceListener" />
  <TypeSignature Language="DocId" Value="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
  <TypeSignature Language="VB.NET" Value="Public Class FileLogTraceListener&#xA;Inherits TraceListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileLogTraceListener : System::Diagnostics::TraceListener" />
  <TypeSignature Language="F#" Value="type FileLogTraceListener = class&#xA;    inherit TraceListener" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.VisualBasic</AssemblyName>
    <AssemblyVersion>8.0.0.0</AssemblyVersion>
    <AssemblyVersion>10.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Diagnostics.TraceListener</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1324d-101">Fournit un écouteur simple qui dirige la sortie d'enregistrement vers un fichier.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1324d-101">Provides a simple listener that directs logging output to file.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-102">Le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> classe fournit des fonctions de maintenance automatisées pour archiver les fichiers journaux en fonction des besoins, sur une base quotidienne ou par application.</span><span class="sxs-lookup"><span data-stu-id="1324d-102">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class provides automated maintenance capabilities to archive log files as needed, on a daily or per-application basis.</span></span> <span data-ttu-id="1324d-103">Cette fonctionnalité d’archivage automatique permet de réduire les responsabilités de maintenance des développeurs et administrateurs.</span><span class="sxs-lookup"><span data-stu-id="1324d-103">This automatic archival functionality helps reduce the maintenance responsibilities of developers and administrators.</span></span>  
  
 <span data-ttu-id="1324d-104">Une instance de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> peuvent être ajoutés à la <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> ou <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collections pour rediriger la sortie de l’enregistrement dans un fichier texte.</span><span class="sxs-lookup"><span data-stu-id="1324d-104">An instance of <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> can be added to the <xref:System.Diagnostics.Debug.Listeners%2A?displayProperty=nameWithType> or <xref:System.Diagnostics.Trace.Listeners%2A?displayProperty=nameWithType> collections to redirect output from logging to a text file.</span></span> <span data-ttu-id="1324d-105">Instances de cette classe peuvent également être ajoutées à `My.Application.Log` ou `My.Log` (pour les applications Web) dans les applications Visual Basic.</span><span class="sxs-lookup"><span data-stu-id="1324d-105">Instances of this class can also be added to `My.Application.Log` or `My.Log` (for Web applications) in Visual Basic applications.</span></span> <span data-ttu-id="1324d-106">Pour plus d’informations, consultez [procédure pas à pas : modification Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)`.`</span><span class="sxs-lookup"><span data-stu-id="1324d-106">For more information, see [Walkthrough: Changing Where My.Application.Log Writes Information](~/docs/visual-basic/developing-apps/programming/log-info/walkthrough-changing-where-my-application-log-writes-information.md)`.`</span></span>  
  
 <span data-ttu-id="1324d-107">Les principales fonctionnalités de cette classe sont :</span><span class="sxs-lookup"><span data-stu-id="1324d-107">The main features of this class are:</span></span>  
  
1.  <span data-ttu-id="1324d-108">*Fonctionnalité d’archivage*.</span><span class="sxs-lookup"><span data-stu-id="1324d-108">*Archival functionality*.</span></span> <span data-ttu-id="1324d-109">Les fichiers journaux générés par cette classe sont nommés selon le nom de base et la date, ainsi que d’un nombre à distinguer le fichier journal à partir des versions successives du journal.</span><span class="sxs-lookup"><span data-stu-id="1324d-109">The log files generated by this class are named according to the base name and the date, along with a number to distinguish the log file from successive versions of the log.</span></span> <span data-ttu-id="1324d-110">Nouveaux fichiers journaux sont créés sur une base en fonction des besoins.</span><span class="sxs-lookup"><span data-stu-id="1324d-110">New log files are created on an as-needed basis.</span></span>  
  
     <span data-ttu-id="1324d-111">La forme explicite du nom de fichier est `baseName`[-`dateStamp`] [-`version`] .log, où :</span><span class="sxs-lookup"><span data-stu-id="1324d-111">The explicit form of the file name is `baseName`[-`dateStamp`][-`version`].log, where:</span></span>  
  
    -   <span data-ttu-id="1324d-112">Le `baseName` partie est le nom de journal fondamental, spécifié par le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-112">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
    -   <span data-ttu-id="1324d-113">Le `dateStamp` partie a le format « AAAA-MM-JJ » et elle est indiquée lorsque <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> est <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> ou <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span><span class="sxs-lookup"><span data-stu-id="1324d-113">The `dateStamp` part has the format "YYYY-MM-DD", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
    -   <span data-ttu-id="1324d-114">Si plus d’un fichier journal est nécessaire avec le même `baseName` et `dateStamp`, le `version` partie, un nombre positif `Integer`, est ajouté au nom de fichier.</span><span class="sxs-lookup"><span data-stu-id="1324d-114">If more than one log file is needed with the same `baseName` and `dateStamp`, the `version` part, a positive `Integer`, is added to the file name.</span></span>  
  
2.  <span data-ttu-id="1324d-115">*Plusieurs instances de classe*.</span><span class="sxs-lookup"><span data-stu-id="1324d-115">*Multiple class instances*.</span></span> <span data-ttu-id="1324d-116">Si une instance de la <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> classe écrit dans un fichier qui est en cours d’utilisation :</span><span class="sxs-lookup"><span data-stu-id="1324d-116">If an instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to a file that is in use:</span></span>  
  
    -   <span data-ttu-id="1324d-117">La classe partage le fichier s’il est utilisé par une autre instance de la <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> classe dans le même processus.</span><span class="sxs-lookup"><span data-stu-id="1324d-117">The class shares the file if it is being used by another instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class in the same process.</span></span>  
  
    -   <span data-ttu-id="1324d-118">La classe crée un nouveau fichier journal à l’aide du nom disponible suivant si le fichier est utilisé par un autre processus.</span><span class="sxs-lookup"><span data-stu-id="1324d-118">The class creates a new log file using the next available name if the file is being used by another process.</span></span>  
  
3.  <span data-ttu-id="1324d-119">*Sécurité des threads*.</span><span class="sxs-lookup"><span data-stu-id="1324d-119">*Thread safety*.</span></span> <span data-ttu-id="1324d-120">Le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> classe est thread-safe.</span><span class="sxs-lookup"><span data-stu-id="1324d-120">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class is thread safe.</span></span> <span data-ttu-id="1324d-121">Cela vous permet de vous permettent d’écrire en toute sécurité des messages dans le journal à partir de plusieurs threads sans utiliser de verrous.</span><span class="sxs-lookup"><span data-stu-id="1324d-121">This allows you to safely write messages to the log from multiple threads without using locks.</span></span>  
  
 <span data-ttu-id="1324d-122">**Emplacement du fichier journal**</span><span class="sxs-lookup"><span data-stu-id="1324d-122">**Log-File Location**</span></span>  
  
-   <span data-ttu-id="1324d-123">Le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> propriété prend un <xref:Microsoft.VisualBasic.Logging.LogFileLocation> énumération pour spécifier un des répertoires standard dans lesquels écrire le fichier journal.</span><span class="sxs-lookup"><span data-stu-id="1324d-123">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property takes a <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration to specify one of the typical directories to write the log file to.</span></span>  
  
-   <span data-ttu-id="1324d-124">Pour écrire le journal vers un autre emplacement, définissez le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> propriété à cet emplacement.</span><span class="sxs-lookup"><span data-stu-id="1324d-124">To write the log to another location, set the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property to that location.</span></span>  
  
 <span data-ttu-id="1324d-125">**Nom du fichier journal**</span><span class="sxs-lookup"><span data-stu-id="1324d-125">**Log-File Name**</span></span>  
  
-   <span data-ttu-id="1324d-126">Le nom de base pour le fichier journal est spécifié par le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-126">The base name for the log file is specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="1324d-127">Le nom de fichier journal actuel peut être lu à partir de la <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-127">The current log file name can be read from the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property.</span></span> <span data-ttu-id="1324d-128">Elle est dérivée de plusieurs autres propriétés et l’état actuel des journaux dans le système de fichiers.</span><span class="sxs-lookup"><span data-stu-id="1324d-128">It is derived from several other properties and the current state of the logs in the file system.</span></span>  
  
 <span data-ttu-id="1324d-129">**Maintenance du journal**</span><span class="sxs-lookup"><span data-stu-id="1324d-129">**Log Maintenance**</span></span>  
  
-   <span data-ttu-id="1324d-130">La fréquence minimale pour la création de nouveaux fichiers journaux est déterminée par le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-130">The minimum frequency for creating new log files is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property.</span></span> <span data-ttu-id="1324d-131">Lorsque la valeur est <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> ou <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>, un nouveau fichier journal est créé au moins une fois chaque jour ou chaque semaine et un cachet de date est incorporé dans le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> nom.</span><span class="sxs-lookup"><span data-stu-id="1324d-131">When the value is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>, a new log file is created at least once every day or week, and a date stamp is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
-   <span data-ttu-id="1324d-132">La taille maximale (en octets) du fichier journal est déterminée par le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-132">The maximum size (in bytes) of the log file is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> property.</span></span> <span data-ttu-id="1324d-133">Si la taille du fichier journal dépasse cette taille, écrites dans le journal des messages supplémentaires sont ignorés et, selon le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> propriété, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="1324d-133">If the log file size exceeds this size, additional messages written to the log are discarded and, depending on the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="1324d-134">Le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> propriété détermine la quantité d’espace libre (en octets) doit être disponible.</span><span class="sxs-lookup"><span data-stu-id="1324d-134">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> property determines how much free space (in bytes) must be available.</span></span> <span data-ttu-id="1324d-135">Cela permet de garantir que la <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> classe ne consommera pas tout l’espace disque disponible.</span><span class="sxs-lookup"><span data-stu-id="1324d-135">This helps ensure that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class will not consume all available disk space.</span></span> <span data-ttu-id="1324d-136">Utilisez le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> propriété pour spécifier le comportement du journal écrit lorsqu’il y a moins de <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> octets libres.</span><span class="sxs-lookup"><span data-stu-id="1324d-136">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property to specify the behavior of log writes when there are less than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A> bytes free.</span></span>  
  
 <span data-ttu-id="1324d-137">**Paramètres de sortie de fichier journal**</span><span class="sxs-lookup"><span data-stu-id="1324d-137">**Log-File Output Settings**</span></span>  
  
-   <span data-ttu-id="1324d-138">Le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> propriété spécifie si le flux sous-jacent doit être vidé automatiquement après chaque écriture dans le fichier journal.</span><span class="sxs-lookup"><span data-stu-id="1324d-138">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> property specifies whether the underlying stream should be flushed automatically after each write to the log file.</span></span>  
  
-   <span data-ttu-id="1324d-139">Le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> propriété spécifie s’il faut ajouter des messages dans le fichier journal actuel, si autorisée, ou les écrire dans un nouveau fichier journal.</span><span class="sxs-lookup"><span data-stu-id="1324d-139">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> property specifies whether to append messages to the current log file, if allowed, or write them to a new log file.</span></span>  
  
-   <span data-ttu-id="1324d-140">Le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> propriété spécifie la chaîne à utiliser pour délimiter les champs dans un message de journal.</span><span class="sxs-lookup"><span data-stu-id="1324d-140">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies the string to use for delimiting the fields within a log message.</span></span>  
  
-   <span data-ttu-id="1324d-141">Le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> propriété spécifie l’encodage à utiliser lors de la création d’un nouveau fichier journal.</span><span class="sxs-lookup"><span data-stu-id="1324d-141">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> property specifies the encoding to use when creating a new log file.</span></span>  
  
 <span data-ttu-id="1324d-142">**Sortie du fichier journal**</span><span class="sxs-lookup"><span data-stu-id="1324d-142">**Log-File Output**</span></span>  
  
-   <span data-ttu-id="1324d-143">Le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> et <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> méthodes écrivent des messages dans le fichier journal.</span><span class="sxs-lookup"><span data-stu-id="1324d-143">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> and <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods write messages to the log file.</span></span> <span data-ttu-id="1324d-144">Ces méthodes vérifient le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> propriété, ainsi que tous les journaux existants portant le même nom de base pour déterminer si un nouveau journal doit être créé.</span><span class="sxs-lookup"><span data-stu-id="1324d-144">These methods check the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property, along with any existing logs with the same base name to determine if a new log should be created.</span></span>  
  
-   <span data-ttu-id="1324d-145">Le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> méthode vide tous les messages actuellement dans la mémoire tampon de sortie dans le fichier journal.</span><span class="sxs-lookup"><span data-stu-id="1324d-145">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method flushes any messages currently in the output buffer to the log file.</span></span>  
  
-   <span data-ttu-id="1324d-146">Le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> méthode ferme le fichier journal pour qu’il peut être utilisé par d’autres processus.</span><span class="sxs-lookup"><span data-stu-id="1324d-146">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method closes the log file so that it can be used by other processes.</span></span>  
  
 <span data-ttu-id="1324d-147">**Activation de la sortie**</span><span class="sxs-lookup"><span data-stu-id="1324d-147">**Enabling Output**</span></span>  
  
 <span data-ttu-id="1324d-148">Vous devez activer le traçage ou de débogage pour utiliser un écouteur de suivi.</span><span class="sxs-lookup"><span data-stu-id="1324d-148">You must enable tracing or debugging to use a trace listener.</span></span> <span data-ttu-id="1324d-149">La syntaxe suivante est spécifique au compilateur.</span><span class="sxs-lookup"><span data-stu-id="1324d-149">The following syntax is compiler specific.</span></span> <span data-ttu-id="1324d-150">Si vous utilisez des compilateurs autres que c# ou Visual Basic, consultez la documentation de votre compilateur.</span><span class="sxs-lookup"><span data-stu-id="1324d-150">If you use compilers other than C# or Visual Basic, refer to the documentation for your compiler.</span></span>  
  
-   <span data-ttu-id="1324d-151">Pour activer le débogage en c#, ajoutez le `/d:DEBUG` indicateur pour la ligne de commande du compilateur lorsque vous compilez votre code, ou vous pouvez ajouter `#define DEBUG` vers le haut de votre fichier.</span><span class="sxs-lookup"><span data-stu-id="1324d-151">To enable debugging in C#, add the `/d:DEBUG` flag to the compiler command line when you compile your code, or you can add `#define DEBUG` to the top of your file.</span></span> <span data-ttu-id="1324d-152">Dans Visual Basic, ajoutez le `/d:DEBUG=True` indicateur pour la ligne de commande du compilateur.</span><span class="sxs-lookup"><span data-stu-id="1324d-152">In Visual Basic, add the `/d:DEBUG=True` flag to the compiler command line.</span></span>  
  
-   <span data-ttu-id="1324d-153">Pour activer le traçage en c#, ajoutez le `/d:TRACE` indicateur pour la ligne de commande du compilateur lorsque vous compilez votre code, ou ajoutez `#define TRACE` vers le haut de votre fichier.</span><span class="sxs-lookup"><span data-stu-id="1324d-153">To enable tracing in C#, add the `/d:TRACE` flag to the compiler command line when you compile your code, or add `#define TRACE` to the top of your file.</span></span> <span data-ttu-id="1324d-154">Dans Visual Basic, ajoutez le `/d:TRACE=True` indicateur pour la ligne de commande du compilateur.</span><span class="sxs-lookup"><span data-stu-id="1324d-154">In Visual Basic, add the `/d:TRACE=True` flag to the compiler command line.</span></span>  
  
 <span data-ttu-id="1324d-155">Pour définir le niveau de votre écouteur, modifiez le fichier de configuration pour votre application.</span><span class="sxs-lookup"><span data-stu-id="1324d-155">To set the level of your listener, edit the configuration file for your application.</span></span> <span data-ttu-id="1324d-156">Dans ce fichier, vous pouvez ajouter un écouteur, définissez son type et ses paramètres, supprimer un écouteur ou effacer tous les écouteurs définis précédemment par l’application.</span><span class="sxs-lookup"><span data-stu-id="1324d-156">Within this file, you can add a listener, set its type and set its parameters, remove a listener, or clear all the listeners previously set by the application.</span></span> <span data-ttu-id="1324d-157">Le fichier de configuration doit être mis en forme comme dans l’exemple suivant.</span><span class="sxs-lookup"><span data-stu-id="1324d-157">The configuration file should be formatted like the following example.</span></span>  
  
 <span data-ttu-id="1324d-158">Pour exécuter cet exemple, vous devez fournir le nom d’assembly qualifié complet.</span><span class="sxs-lookup"><span data-stu-id="1324d-158">For this example to run, you must provide the fully qualified assembly name.</span></span> <span data-ttu-id="1324d-159">Pour plus d’informations sur la façon d’obtenir le nom d’assembly qualifié complet, consultez [noms d’assemblys](~/docs/framework/app-domains/assembly-names.md).</span><span class="sxs-lookup"><span data-stu-id="1324d-159">For information about how to obtain the fully qualified assembly name, see [Assembly Names](~/docs/framework/app-domains/assembly-names.md).</span></span>  
  
```xml  
<configuration>  
    <system.diagnostics>  
        <sharedListeners>  
            <add name="FileLog"  
                type="Microsoft.VisualBasic.Logging.FileLogTraceListener,   
                      Microsoft.VisualBasic, Version=8.0.0.0,   
                      Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a,   
                      processorArchitecture=MSIL"   
                initializeData="FileLogWriter"/>  
        </sharedListeners>  
    </system.diagnostics>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
    <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1324d-160">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> et définit le nom.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-160">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class and sets the name.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener ();" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1324d-161">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> avec le nom par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-161">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the default name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-162">Cette méthode définit le nom de l’instance de la <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> classe FileLogTraceListener à.</span><span class="sxs-lookup"><span data-stu-id="1324d-162">This method sets the instance name of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class to FileLogTraceListener.</span></span>  
  
 <span data-ttu-id="1324d-163">Vous pouvez accéder via le nom d’instance le <xref:System.Diagnostics.TraceListener.Name%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-163">You can access the instance name through the <xref:System.Diagnostics.TraceListener.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogTraceListener (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogTraceListener(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new Microsoft.VisualBasic.Logging.FileLogTraceListener : string -&gt; Microsoft.VisualBasic.Logging.FileLogTraceListener" Usage="new Microsoft.VisualBasic.Logging.FileLogTraceListener name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1324d-164">
            <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-164">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="1324d-165">Nom de l'objet instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-165">The name of the instance object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1324d-166">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> avec le nom fourni.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-166">Initializes a new instance of the <see cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" /> class with the supplied name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-167">Cette méthode définit le nom de l’instance de la <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> classe `name`.</span><span class="sxs-lookup"><span data-stu-id="1324d-167">This method sets the instance name of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class to `name`.</span></span>  
  
 <span data-ttu-id="1324d-168">Vous pouvez accéder au nom de l’instance par le biais du <xref:System.Diagnostics.TraceListener.Name%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-168">You can access the instance name thought the <xref:System.Diagnostics.TraceListener.Name%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.Log" />
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="T:Microsoft.VisualBasic.Logging.FileLogTraceListener" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public bool Append { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Append" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append" />
      <MemberSignature Language="VB.NET" Value="Public Property Append As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Append { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Append : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Append" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1324d-169">Détermine s'il convient d'ajouter la sortie au fichier en cours ou de l'écrire dans un nouveau fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-169">Determines whether to append the output to the current file or write it to a new file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1324d-170">
            <see langword="Boolean" />, avec <see langword="True" /> indiquant que la sortie est ajoutée au fichier en cours et <see langword="False" /> indiquant que la sortie est écrite dans un nouveau fichier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-170">
              <see langword="Boolean" />, with <see langword="True" /> indicating that the output is appended to the current file, and <see langword="False" /> indicating that output is written to a new file.</span>
          </span>
          <span data-ttu-id="1324d-171">Le paramètre par défaut de cette propriété est <see langword="True" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-171">The default setting for this property is <see langword="True" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-172">Lorsque le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> propriété est `False`, la sortie est écrite dans un nouveau fichier.</span><span class="sxs-lookup"><span data-stu-id="1324d-172">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Append%2A> property is `False`, the output is written to a new file.</span></span> <span data-ttu-id="1324d-173">Lorsque la propriété est `True`, la sortie est ajoutée au fichier actuel, sauf si :</span><span class="sxs-lookup"><span data-stu-id="1324d-173">When the property is `True`, the output is appended to the current file, unless:</span></span>  
  
-   <span data-ttu-id="1324d-174">Le fichier de sortie est verrouillé par un autre processus.</span><span class="sxs-lookup"><span data-stu-id="1324d-174">The output file is locked by another process.</span></span> <span data-ttu-id="1324d-175">Dans ce cas, un nouveau fichier journal est créé avec un numéro de version qui est incorporé dans le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> nom.</span><span class="sxs-lookup"><span data-stu-id="1324d-175">In this situation, a new log file is created with a version number that is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
-   <span data-ttu-id="1324d-176">La taille du fichier est supérieure à ce que le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> permet de propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-176">The current file size is greater than what the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A> property allows.</span></span> <span data-ttu-id="1324d-177">Dans ce cas, les messages supplémentaires sont ignorés et, selon le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> propriété, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="1324d-177">In this situation, additional messages are discarded and, depending on the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property, an exception is thrown.</span></span>  
  
-   <span data-ttu-id="1324d-178">Le nom de fichier existant est obsolète en fonction de la planification de la création du journal spécifiée par le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-178">The existing file name is out of date according to the log-creation schedule specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property.</span></span> <span data-ttu-id="1324d-179">Dans ce cas, un nouveau fichier journal est créé et le cachet de date est incorporé dans le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> nom.</span><span class="sxs-lookup"><span data-stu-id="1324d-179">In this situation, a new log file is created and the date stamp is incorporated into the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFlush : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1324d-180">Indique si l'écriture dans le flux du fichier journal vide ou non la mémoire tampon.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-180">Indicates whether or not the writing to the log file stream flushes the buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1324d-181">
            <see langword="Boolean" />, avec <see langword="True" /> indiquant que le flux est vidé après chaque écriture ; sinon, les entrées de journal sont mises en mémoire tampon et écrites plus efficacement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-181">
              <see langword="Boolean" />, with <see langword="True" /> indicating that the stream is flushed after every write; otherwise the log entries are buffered and written more efficiently.</span>
          </span>
          <span data-ttu-id="1324d-182">Le paramètre par défaut de cette propriété est <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-182">The default setting for this property is <see langword="False" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-183">Le `False` définition pour le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> propriété offre des performances optimales pour la plupart des applications, car il est plus efficace pour écrire plusieurs messages dans le fichier journal en même temps.</span><span class="sxs-lookup"><span data-stu-id="1324d-183">The `False` setting for the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.AutoFlush%2A> property provides the best performance for most applications, because it is more efficient to write multiple messages to the log file at one time.</span></span> <span data-ttu-id="1324d-184">Vous pouvez utiliser la <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> méthode pour vider les messages actuellement dans le fichier journal de sortie de mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="1324d-184">You can use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method to flush any messages currently in the log file's output buffer.</span></span> <span data-ttu-id="1324d-185">Vous pouvez également utiliser le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> (méthode), qui vide implicitement le flux avant de fermer le fichier journal.</span><span class="sxs-lookup"><span data-stu-id="1324d-185">You can also use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method, which implicitly flushes the stream before closing the log file.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      </Docs>
    </Member>
    <Member MemberName="BaseFileName">
      <MemberSignature Language="C#" Value="public string BaseFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseFileName : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1324d-186">Obtient ou définit le nom de base des fichiers journaux qui est utilisé pour créer le nom de fichier journal complet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-186">Gets or sets the base name for the log files, which is used to create the full log-file name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1324d-187">
            <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-187">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="1324d-188">Nom de base des fichiers journaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-188">The base name for the log files.</span>
          </span>
          <span data-ttu-id="1324d-189">La valeur par défaut est le nom de produit de l'application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-189">The default is the application's product name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-190">Le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> propriété détermine le nom de base pour les fichiers journaux qui le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> classe écrit dans.</span><span class="sxs-lookup"><span data-stu-id="1324d-190">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property determines the base name for the log files that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class writes to.</span></span>  
  
 <span data-ttu-id="1324d-191">Le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> propriété donne le nom complet du fichier journal actuel.</span><span class="sxs-lookup"><span data-stu-id="1324d-191">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name.</span></span> <span data-ttu-id="1324d-192">Il est généré selon le chemin d’accès du journal, le nom de base, la date et un nombre pour le différencier des versions différentes du journal.</span><span class="sxs-lookup"><span data-stu-id="1324d-192">It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</span></span> <span data-ttu-id="1324d-193">Nouveaux fichiers journaux sont créés sur une base en fonction des besoins.</span><span class="sxs-lookup"><span data-stu-id="1324d-193">New log files are created on an as-needed basis.</span></span>  
  
 <span data-ttu-id="1324d-194">La forme explicite du nom du fichier journal complet est `path` \\ `baseName`[-`dateStamp`] [-`iteration`] .log, où</span><span class="sxs-lookup"><span data-stu-id="1324d-194">The explicit form of the full log file name is `path`\\`baseName`[-`dateStamp`][-`iteration`].log, where</span></span>  
  
-   <span data-ttu-id="1324d-195">Le `path` partie est déterminée par le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> propriété et, si cette propriété a la valeur <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-195">The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.</span></span>  
  
-   <span data-ttu-id="1324d-196">Le `baseName` partie est le nom de journal fondamental, spécifié par le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-196">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="1324d-197">Le `dateStamp` partie a le format « AAAA-MM-JJ » et elle est indiquée lorsque <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> a la valeur <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> ou <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span><span class="sxs-lookup"><span data-stu-id="1324d-197">The `dateStamp` part has the format "YYYY-MM-DD", and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is set to <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
-   <span data-ttu-id="1324d-198">Si plus d’un fichier journal est nécessaire avec le même `baseName` et `dateStamp`, le `iteration` partie, un nombre positif `Integer`, est ajouté au nom de fichier.</span><span class="sxs-lookup"><span data-stu-id="1324d-198">If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="fileLogTraceListener.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1324d-199">Ferme le flux sous-jacent du fichier journal actuel et libère toutes les ressources associées au flux actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-199">Closes the underlying stream for the current log file and releases any resources associated with the current stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-200">Vous n’avez pas besoin d’appeler le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> méthode explicitement, car le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> classe gère le flux sous-jacent.</span><span class="sxs-lookup"><span data-stu-id="1324d-200">You do not need to call the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Close%2A> method explicitly, because the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class manages the underlying steam.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomLocation">
      <MemberSignature Language="C#" Value="public string CustomLocation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CustomLocation" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomLocation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CustomLocation { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomLocation : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1324d-201">Obtient ou définit le répertoire du fichier journal lorsque la propriété <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> a la valeur <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-201">Gets or sets the log file directory when the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" /> property is set to <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1324d-202">
            <see langword="String" /> qui est le nom du répertoire du fichier journal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-202">
              <see langword="String" />, which is the name of the log-file directory.</span>
          </span>
          <span data-ttu-id="1324d-203">Le paramètre par défaut de cette propriété est le répertoire de l'utilisateur pour les données d'application.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-203">The default setting for this property is the user's directory for application data.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-204">Lorsque le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> est définie, il définit également la <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> propriété <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>.</span><span class="sxs-lookup"><span data-stu-id="1324d-204">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property is set, it also sets the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>.</span></span>  
  
 <span data-ttu-id="1324d-205">Le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> propriété lève une exception si le répertoire ne peut pas être résolu.</span><span class="sxs-lookup"><span data-stu-id="1324d-205">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property will throw an exception if the directory cannot be resolved.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      </Docs>
    </Member>
    <Member MemberName="Delimiter">
      <MemberSignature Language="C#" Value="public string Delimiter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Delimiter" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter" />
      <MemberSignature Language="VB.NET" Value="Public Property Delimiter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Delimiter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Delimiter : string with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1324d-206">Obtient ou définit le séparateur utilisé pour délimiter les champs d'un message de journal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-206">Gets or sets the delimiter used to delimit fields within a log message.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1324d-207">
            <see langword="String" />, qui est le séparateur utilisé pour les champs d'un message de journal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-207">
              <see langword="String" />, which is the delimiter used for fields within a log message.</span>
          </span>
          <span data-ttu-id="1324d-208">Le paramètre par défaut de cette propriété est le caractère de tabulation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-208">The default setting for this property is the TAB character.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-209">Le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> propriété vous permet de modifier le délimiteur par défaut.</span><span class="sxs-lookup"><span data-stu-id="1324d-209">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property allows you to change the default delimiter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DiskSpaceExhaustedBehavior">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Property DiskSpaceExhaustedBehavior As DiskSpaceExhaustedOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption DiskSpaceExhaustedBehavior { Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption get(); void set(Microsoft::VisualBasic::Logging::DiskSpaceExhaustedOption value); };" />
      <MemberSignature Language="F#" Value="member this.DiskSpaceExhaustedBehavior : Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1324d-210">Détermine que faire lors de l'écriture dans le fichier journal si l'espace disque disponible est inférieur à celui qui est spécifié par la propriété <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-210">Determines what to do when writing to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1324d-211">
            <see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-211">
              <see cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />.</span>
          </span>
          <span data-ttu-id="1324d-212">Détermine ce qu'il convient de faire lors d'une tentative d'écriture dans le fichier journal alors que l'espace disque disponible est inférieur à la valeur spécifiée par la propriété <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />, ou si la taille du fichier journal est supérieure à la valeur autorisée par la propriété <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-212">Determines what to do when attempting to write to the log file and there is less free disk space available than specified by the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" /> property, or if the log file size is greater than what the <see cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" /> property allows.</span>
          </span>
          <span data-ttu-id="1324d-213">La valeur par défaut est <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-213">The default value is <see cref="F:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-214">Lorsque le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> propriété est définie sur <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages>, les messages du journal sont ignorés si n’est pas suffisamment d’espace disque réservé.</span><span class="sxs-lookup"><span data-stu-id="1324d-214">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property is set to <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.DiscardMessages>, the log messages are silently discarded if there is not enough reserved disk space.</span></span> <span data-ttu-id="1324d-215">Il s’agit du comportement par défaut et empêche des applications simples d’échouer si le disque saturé.</span><span class="sxs-lookup"><span data-stu-id="1324d-215">This is the default behavior, and it prevents simple applications from failing if the disk gets too full.</span></span>  
  
 <span data-ttu-id="1324d-216">Les applications plus robustes peuvent affecter le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> propriété <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException>et ajoutez `Try...Catch` blocs autour de tout le code qui écrit dans le journal.</span><span class="sxs-lookup"><span data-stu-id="1324d-216">More robust applications can set the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property to <xref:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption.ThrowException>, and add `Try...Catch` blocks around all code that writes to the log.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.DiskSpaceExhaustedOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="fileLogTraceListener.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="1324d-217">
            <see langword="True" /> libère les ressources managées et non managées ; <see langword="False" /> libère uniquement les ressources non managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-217">
              <see langword="True" /> releases both managed and unmanaged resources; <see langword="False" /> releases only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1324d-218">Ferme le flux sous-jacent et libère éventuellement les ressources managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-218">Closes the underlying stream and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-219">Si le paramètre `disposing` a la valeur `True`, cette méthode libère toutes les ressources détenues par les objets managés référencés par ce <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener>.</span><span class="sxs-lookup"><span data-stu-id="1324d-219">When the `disposing` parameter is `True`, this method releases all resources held by any managed objects that this <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> references.</span></span> <span data-ttu-id="1324d-220">Cette méthode appelle la méthode `Dispose` de chaque objet référencé.</span><span class="sxs-lookup"><span data-stu-id="1324d-220">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="1324d-221">
            <para>
              <see langword="Dispose" /> peut être appelée plusieurs fois par d’autres objets. Lors de la substitution de <see langword="Dispose" />, veillez à ne pas référencer des objets qui ont été préalablement supprimés lors d'un appel précédent à <see langword="Dispose" />.  Cette méthode appelle la <see langword="Dispose" /> méthode de la classe de base <see langword="Dispose" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-221">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.  This method calls the <see langword="Dispose" /> method of the base class, <see langword="Dispose" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public System.Text.Encoding Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1324d-222">Obtient ou définit l'encodage à utiliser lors de la création d'un fichier journal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-222">Gets or sets the encoding to use when creating a new log file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1324d-223">
            <see cref="T:System.Text.Encoding" />, qui est l'encodage à utiliser lors de la création d'un fichier journal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-223">
              <see cref="T:System.Text.Encoding" />, which is the encoding to use when creating a new log file.</span>
          </span>
          <span data-ttu-id="1324d-224">La valeur par défaut de cette propriété est <see cref="T:System.Text.UTF8Encoding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-224">The default value of this property is <see cref="T:System.Text.UTF8Encoding" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-225">Lors de l’ajout de texte à un fichier journal existant, l’encodage pour ce fichier est utilisé au lieu de l’encodage spécifié par le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-225">When appending text to an existing log file, the encoding for that file is used instead of the encoding specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Encoding%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Text.Encoding" />
        <altmember cref="T:System.Text.UTF8Encoding" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit&#xA;override this.Flush : unit -&gt; unit" Usage="fileLogTraceListener.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1324d-226">Vide le flux sous-jacent qui écrit dans le fichier journal actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-226">Flushes the underlying stream that writes to the current log file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-227">Utilisez le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> méthode pour écrire des données tout en mémoire tampon dans le fichier journal actuel.</span><span class="sxs-lookup"><span data-stu-id="1324d-227">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Flush%2A> method to write all buffered data to the current log file.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FullLogFileName">
      <MemberSignature Language="C#" Value="public string FullLogFileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullLogFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FullLogFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FullLogFileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FullLogFileName : string" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1324d-228">Obtient le nom complet du fichier journal actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-228">Gets the current full log-file name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1324d-229">
            <see langword="String" />, qui est le nom complet du fichier journal actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-229">
              <see langword="String" />, which is the current full log-file name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-230">Le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> propriété donne le nom complet du fichier journal actuel.</span><span class="sxs-lookup"><span data-stu-id="1324d-230">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A> property gives the current full log-file name.</span></span> <span data-ttu-id="1324d-231">Il est généré selon le chemin d’accès du journal, le nom de base, la date et un nombre pour le différencier des versions différentes du journal.</span><span class="sxs-lookup"><span data-stu-id="1324d-231">It is generated according to the log path, the base name, the date, and a number to distinguish it from different versions of the log.</span></span> <span data-ttu-id="1324d-232">Nouveaux fichiers journaux sont créés sur une base en fonction des besoins.</span><span class="sxs-lookup"><span data-stu-id="1324d-232">New log files are created on an as-needed basis.</span></span>  
  
 <span data-ttu-id="1324d-233">La forme explicite du nom complet du fichier journal est `path` \\ `baseName`[-`dateStamp`] [-`iteration`] .log, où :</span><span class="sxs-lookup"><span data-stu-id="1324d-233">The explicit form of the full log-file name is `path`\\`baseName`[-`dateStamp`][-`iteration`].log, where:</span></span>  
  
-   <span data-ttu-id="1324d-234">Le `path` partie est déterminée par le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> propriété et, si cette propriété a la valeur <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-234">The `path` part is determined by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property and, if that property value is set to <xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>, the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> property.</span></span>  
  
-   <span data-ttu-id="1324d-235">Le `baseName` partie est le nom de journal fondamental, spécifié par le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-235">The `baseName` part is the fundamental log name, specified by the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName%2A> property.</span></span>  
  
-   <span data-ttu-id="1324d-236">Le `dateStamp` partie a le format AAAA-MM-JJ, et elle est indiquée lorsque <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> est <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> ou <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span><span class="sxs-lookup"><span data-stu-id="1324d-236">The `dateStamp` part has the format YYYY-MM-DD, and it is shown when <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> is <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily> or <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>.</span></span>  
  
-   <span data-ttu-id="1324d-237">Si plus d’un fichier journal est nécessaire avec le même `baseName` et `dateStamp`, le `iteration` partie, un nombre positif `Integer`, est ajouté au nom de fichier.</span><span class="sxs-lookup"><span data-stu-id="1324d-237">If more than one log file is needed with the same `baseName` and `dateStamp`, the `iteration` part, a positive `Integer`, is added to the file name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.BaseFileName" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
        <altmember cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.Custom" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      </Docs>
    </Member>
    <Member MemberName="GetSupportedAttributes">
      <MemberSignature Language="C#" Value="protected override string[] GetSupportedAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string[] GetSupportedAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.GetSupportedAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetSupportedAttributes () As String()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override cli::array &lt;System::String ^&gt; ^ GetSupportedAttributes();" />
      <MemberSignature Language="F#" Value="abstract member GetSupportedAttributes : unit -&gt; string[]&#xA;override this.GetSupportedAttributes : unit -&gt; string[]" Usage="fileLogTraceListener.GetSupportedAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1324d-238">Obtient les attributs de configuration XML personnalisés pris en charge par l'écouteur Trace.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-238">Gets the custom XML configuration attributes supported by the trace listener.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1324d-239">Tableau <see langword="String" /> contenant les attributs de configuration XML reconnus par cet écouteur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-239">
              <see langword="String" /> array containing the XML configuration attributes recognized by this listener.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-240">Les attributs personnalisés de la <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> peut être utilisé dans le fichier de configuration XML pour contrôler le comportement d’une instance de la <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> classe.</span><span class="sxs-lookup"><span data-stu-id="1324d-240">The custom attributes for the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> can be used in the XML configuration file for controlling the behavior of an instance of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class.</span></span> <span data-ttu-id="1324d-241">À l’aide de n’importe quel autre attribut provoque une exception de configuration.</span><span class="sxs-lookup"><span data-stu-id="1324d-241">Using any other attribute causes a configuration exception.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Diagnostics.TraceSource.GetSupportedAttributes" />
      </Docs>
    </Member>
    <Member MemberName="IncludeHostName">
      <MemberSignature Language="C#" Value="public bool IncludeHostName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeHostName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeHostName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeHostName { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeHostName : bool with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1324d-242">Indique si le nom d'hôte de l'ordinateur d'enregistrement doit être ou non inclus dans la sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-242">Indicates whether or not the host name of the logging machine should be included in the output.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1324d-243">
            <see langword="Boolean" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-243">
              <see langword="Boolean" />.</span>
          </span>
          <span data-ttu-id="1324d-244">Utilise <see langword="True" /> si l'identificateur hôte doit être inclus ; sinon, utilise <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-244">Use <see langword="True" /> if the host identifier should be included; otherwise use <see langword="False" />.</span>
          </span>
          <span data-ttu-id="1324d-245">La valeur par défaut est <see langword="False" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-245">The default value is <see langword="False" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-246">Utilisez la propriété pour configurer le comportement de la <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> et <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="1324d-246">Use the property to configure the behavior of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> and <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileLocation Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileLocation Location" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      <MemberSignature Language="VB.NET" Value="Public Property Location As LogFileLocation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileLocation Location { Microsoft::VisualBasic::Logging::LogFileLocation get(); void set(Microsoft::VisualBasic::Logging::LogFileLocation value); };" />
      <MemberSignature Language="F#" Value="member this.Location : Microsoft.VisualBasic.Logging.LogFileLocation with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileLocation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1324d-247">Obtient ou définit l'emplacement des fichiers journaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-247">Gets or sets location for the log files.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1324d-248">
            <see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />, qui est l'emplacement du fichier journal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-248">
              <see cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />, which is the location for the log file.</span>
          </span>
          <span data-ttu-id="1324d-249">La valeur par défaut est <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-249">The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-250">Utilisez le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> propriété à définir le chemin d’accès du journal à un des chemins d’accès prédéfinis, déterminés par le <xref:Microsoft.VisualBasic.Logging.LogFileLocation> valeurs d’énumération.</span><span class="sxs-lookup"><span data-stu-id="1324d-250">Use the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Location%2A> property to set the log path to one of the predefined paths, determined by the <xref:Microsoft.VisualBasic.Logging.LogFileLocation> enumeration values.</span></span>  
  
|<span data-ttu-id="1324d-251">**Valeur de l’emplacement**</span><span class="sxs-lookup"><span data-stu-id="1324d-251">**Location value**</span></span>|<span data-ttu-id="1324d-252">**Chemin**</span><span class="sxs-lookup"><span data-stu-id="1324d-252">**Path**</span></span>|  
|------------------------|--------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.CommonApplicationDirectory>|<span data-ttu-id="1324d-253">Le chemin d’accès pour les données d’application qui sont partagées entre tous les utilisateurs, avec le format :</span><span class="sxs-lookup"><span data-stu-id="1324d-253">The path for the application data that is shared among all users, with the format:</span></span><br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> <span data-ttu-id="1324d-254">Une valeur typique pour `BasePath` est :</span><span class="sxs-lookup"><span data-stu-id="1324d-254">A typical value for `BasePath` is:</span></span><br /><br /> <span data-ttu-id="1324d-255">C:\Documents and Settings\All Users\Application Data</span><span class="sxs-lookup"><span data-stu-id="1324d-255">C:\Documents and Settings\All Users\Application Data</span></span><br /><br /> <span data-ttu-id="1324d-256">Les valeurs de `CompanyName`, `ProductName`, et `ProductVersion` proviennent de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1324d-256">The values of `CompanyName`, `ProductName`, and `ProductVersion` come from the assembly.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.ExecutableDirectory>|<span data-ttu-id="1324d-257">Chemin d’accès au fichier exécutable ayant démarré l’application.</span><span class="sxs-lookup"><span data-stu-id="1324d-257">The path for the executable file that started the application.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.LocalUserApplicationDirectory>|<span data-ttu-id="1324d-258">Le chemin d’accès pour les données d’application d’un utilisateur, avec le format :</span><span class="sxs-lookup"><span data-stu-id="1324d-258">The path for the application data of a user, with the format:</span></span><br /><br /> `BasePath`\\`CompanyName`\\`ProductName`\\`ProductVersion`<br /><br /> <span data-ttu-id="1324d-259">Une valeur typique pour `BasePath` est :</span><span class="sxs-lookup"><span data-stu-id="1324d-259">A typical value for `BasePath` is:</span></span><br /><br /> <span data-ttu-id="1324d-260">C:\Documents and Settings\\`username`\Application Data</span><span class="sxs-lookup"><span data-stu-id="1324d-260">C:\Documents and Settings\\`username`\Application Data</span></span><br /><br /> <span data-ttu-id="1324d-261">Les valeurs de `CompanyName`, `ProductName`, et `ProductVersion` viennent de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="1324d-261">The values of `CompanyName`, `ProductName`, and `ProductVersion` come form the assembly.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.TempDirectory>|<span data-ttu-id="1324d-262">Le chemin d’accès du dossier temporaire du système en cours.</span><span class="sxs-lookup"><span data-stu-id="1324d-262">The path of the current system's temporary folder.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileLocation.Custom>|<span data-ttu-id="1324d-263">Si la chaîne spécifiée par <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> est pas vide, puis utilisez-le comme le chemin d’accès ; sinon, utilisez le chemin d’accès pour les données d’application d’un utilisateur.</span><span class="sxs-lookup"><span data-stu-id="1324d-263">If the string specified by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.CustomLocation%2A> is not empty, then use it as the path; otherwise use the path for the application data of a user.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileLocation" />
      </Docs>
    </Member>
    <Member MemberName="LogFileCreationSchedule">
      <MemberSignature Language="C#" Value="public Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption LogFileCreationSchedule" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      <MemberSignature Language="VB.NET" Value="Public Property LogFileCreationSchedule As LogFileCreationScheduleOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption LogFileCreationSchedule { Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption get(); void set(Microsoft::VisualBasic::Logging::LogFileCreationScheduleOption value); };" />
      <MemberSignature Language="F#" Value="member this.LogFileCreationSchedule : Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1324d-264">Détermine la date à inclure dans les noms des fichiers journaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-264">Determines which date to include in the names of the log files.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1324d-265">
            <see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-265">
              <see cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />.</span>
          </span>
          <span data-ttu-id="1324d-266">Indique quelle date inclure dans les noms de fichiers journaux.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-266">This indicates which date to include in the log-file names.</span>
          </span>
          <span data-ttu-id="1324d-267">La valeur par défaut est <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-267">The default value is <see cref="F:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-268">Attribuer l’un de la <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> valeurs d’énumération pour le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> propriété pour spécifier la date à inclure dans les noms des fichiers journaux.</span><span class="sxs-lookup"><span data-stu-id="1324d-268">Assign one of the <xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption> enumeration values to the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.LogFileCreationSchedule%2A> property to specify which date to include in the names of the log files.</span></span>  
  
 <span data-ttu-id="1324d-269">Le format de la date est AAAA-MM-JJ.</span><span class="sxs-lookup"><span data-stu-id="1324d-269">The format of the date is YYYY-MM-DD.</span></span> <span data-ttu-id="1324d-270">Pour plus d’informations sur le format du nom de fichier du journal, consultez <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span><span class="sxs-lookup"><span data-stu-id="1324d-270">For more information on the format of the log file name, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
|<span data-ttu-id="1324d-271">**Valeur de LogFileCreationSchedule**</span><span class="sxs-lookup"><span data-stu-id="1324d-271">**LogFileCreationSchedule value**</span></span>|<span data-ttu-id="1324d-272">**Date dans le nom de fichier journal**</span><span class="sxs-lookup"><span data-stu-id="1324d-272">**Date in the log file name**</span></span>|  
|---------------------------------------|-----------------------------------|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Daily>|<span data-ttu-id="1324d-273">Incluez la date du jour dans le nom du fichier journal.</span><span class="sxs-lookup"><span data-stu-id="1324d-273">Include the current date in the log file name.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.None>|<span data-ttu-id="1324d-274">N'incluez pas la date dans le nom du fichier journal.</span><span class="sxs-lookup"><span data-stu-id="1324d-274">Do not include the date in the log file name.</span></span>|  
|<xref:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption.Weekly>|<span data-ttu-id="1324d-275">Incluez le premier jour de la semaine actuelle dans le nom du fichier journal.</span><span class="sxs-lookup"><span data-stu-id="1324d-275">Include the first day of the current week in the log file name.</span></span><br /><br /> <span data-ttu-id="1324d-276">La semaine commence le samedi.</span><span class="sxs-lookup"><span data-stu-id="1324d-276">The week starts on Saturday.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.VisualBasic.Logging.LogFileCreationScheduleOption" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="MaxFileSize">
      <MemberSignature Language="C#" Value="public long MaxFileSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxFileSize" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxFileSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxFileSize { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.MaxFileSize : int64 with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1324d-277">Obtient ou définit la taille maximale autorisée du fichier journal, en octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-277">Gets or sets the maximum allowed size of the log file, in bytes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1324d-278">
            <see langword="Long" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-278">
              <see langword="Long" />.</span>
          </span>
          <span data-ttu-id="1324d-279">Taille maximale autorisée pour les fichiers journaux, en octets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-279">This is the maximum allowed log-file size, in bytes.</span>
          </span>
          <span data-ttu-id="1324d-280">La valeur par défaut est 5000000.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-280">The default value is 5000000.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-281">Utilisez cette propriété pour vous assurer que les fichiers journaux n’augmentent pas trop volumineux.</span><span class="sxs-lookup"><span data-stu-id="1324d-281">Use this property to make sure that the log files do not grow too large.</span></span>  
  
 <span data-ttu-id="1324d-282">Si le fichier journal taille (en octets) est supérieure à la valeur de cette propriété, lorsque la <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> classe tente d’écrire un message dans le journal, le message est ignoré et l’échec est silencieux ou une exception est levée en fonction de la valeur de la <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-282">If the log file size (in bytes) is greater than the value of this property, then when the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property.</span></span> <span data-ttu-id="1324d-283">Sinon, le message est écrit dans le journal, si la quantité d’espace disque libre (en octets) est inférieure à <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>.</span><span class="sxs-lookup"><span data-stu-id="1324d-283">Otherwise, the message is written to the log, if the amount of free disk space (in bytes) is less than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1324d-284">Lorsque cette propriété a une valeur inférieure à 1 000.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-284">When this property is set to a value less than 1000.</span>
          </span>
        </exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
      </Docs>
    </Member>
    <Member MemberName="ReserveDiskSpace">
      <MemberSignature Language="C#" Value="public long ReserveDiskSpace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 ReserveDiskSpace" />
      <MemberSignature Language="DocId" Value="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
      <MemberSignature Language="VB.NET" Value="Public Property ReserveDiskSpace As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long ReserveDiskSpace { long get(); void set(long value); };" />
      <MemberSignature Language="F#" Value="member this.ReserveDiskSpace : int64 with get, set" Usage="Microsoft.VisualBasic.Logging.FileLogTraceListener.ReserveDiskSpace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1324d-285">Obtient ou définit la quantité d'espace disque disponible (en octets) nécessaire pour que les messages puissent être écrits dans le fichier journal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-285">Gets or sets the amount of free disk space, in bytes, necessary before messages can be written to the log file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1324d-286">
            <see langword="Long" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-286">
              <see langword="Long" />.</span>
          </span>
          <span data-ttu-id="1324d-287">Quantité d'espace disque libre nécessaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-287">This is the amount of free disk space necessary.</span>
          </span>
          <span data-ttu-id="1324d-288">La valeur par défaut est 10 000 000.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-288">The default value is 10000000.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-289">Utilisez cette propriété pour vous assurer que les fichiers journaux ne remplissent pas complètement le disque.</span><span class="sxs-lookup"><span data-stu-id="1324d-289">Use this property to make sure that the log files do not completely fill the disk.</span></span>  
  
 <span data-ttu-id="1324d-290">Si la quantité d’espace disque libre espace (en octets) est inférieure à la valeur de cette propriété, lorsque la <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> classe tente d’écrire un message dans le journal, le message est ignoré et l’échec est silencieux ou une exception est levée en fonction de la valeur de la < C2 > <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A>  propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-290">If the amount of free disk space (in bytes) is less than the value of this property, then when the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener> class attempts to write a message to the log, the message is discarded and the failure is either silent or an exception is thrown depending on the value of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior%2A> property.</span></span> <span data-ttu-id="1324d-291">Sinon, le message est écrit dans le journal, si la taille du fichier journal (en octets) est supérieure à <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>.</span><span class="sxs-lookup"><span data-stu-id="1324d-291">Otherwise, the message is written to the log, if the log file size (in bytes) is greater than <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.MaxFileSize%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1324d-292">Lorsque cette propriété a une valeur inférieure à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-292">When this property is set to a value less than 0.</span>
          </span>
        </exception>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.DiskSpaceExhaustedBehavior" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceData">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1324d-293">Écrit les données de trace dans le fichier de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-293">Writes trace data to the output file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-294"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> méthodes ne sont pas destinées à être appelé par le code d’application.</span><span class="sxs-lookup"><span data-stu-id="1324d-294"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="1324d-295">Ces méthodes sont appelées par les membres de la <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, et <xref:System.Diagnostics.TraceSource> classes pour écrire des données de trace en sortie.</span><span class="sxs-lookup"><span data-stu-id="1324d-295">These methods are called by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit&#xA;override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj -&gt; unit" Usage="fileLogTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="1324d-296">Objet <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-296">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="1324d-297">Nom de la source de trace qui a appelé cette méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-297">A name of the trace source that invoked this method.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="1324d-298">Une des valeurs d'énumération <see cref="T:System.Diagnostics.TraceEventType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-298">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="1324d-299">Identificateur numérique pour l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-299">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="1324d-300">Données de trace à émettre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-300">The trace data to emit.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1324d-301">Écrit des informations de traçage, un objet de données et des informations d'événement dans le fichier ou le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-301">Writes trace information, a data object, and event information to the output file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-302">Cette méthode :</span><span class="sxs-lookup"><span data-stu-id="1324d-302">This method:</span></span>  
  
1.  <span data-ttu-id="1324d-303">Met en forme les informations de données et le contexte pour la sortie.</span><span class="sxs-lookup"><span data-stu-id="1324d-303">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="1324d-304">Crée un nouveau fichier journal, si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="1324d-304">Creates a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="1324d-305">Écrit les informations dans le fichier journal.</span><span class="sxs-lookup"><span data-stu-id="1324d-305">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="1324d-306">Pour plus d’informations sur la création de nouveaux fichiers journaux, consultez <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span><span class="sxs-lookup"><span data-stu-id="1324d-306">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="1324d-307">Le tableau suivant répertorie les champs de sortie dans l’ordre de qu'apparition.</span><span class="sxs-lookup"><span data-stu-id="1324d-307">The following table lists the output fields in the order they appear.</span></span> <span data-ttu-id="1324d-308">Les champs sont délimités par la chaîne qui le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> propriété spécifie et sont suivies d’un terminateur de ligne.</span><span class="sxs-lookup"><span data-stu-id="1324d-308">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="1324d-309">**Champ**</span><span class="sxs-lookup"><span data-stu-id="1324d-309">**Field**</span></span>|<span data-ttu-id="1324d-310">**Condition de sortie**</span><span class="sxs-lookup"><span data-stu-id="1324d-310">**Output condition**</span></span>|<span data-ttu-id="1324d-311">**Description**</span><span class="sxs-lookup"><span data-stu-id="1324d-311">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="1324d-312">Toujours</span><span class="sxs-lookup"><span data-stu-id="1324d-312">Always</span></span>|<span data-ttu-id="1324d-313">la valeur de la propriété `name` ;</span><span class="sxs-lookup"><span data-stu-id="1324d-313">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="1324d-314">Toujours</span><span class="sxs-lookup"><span data-stu-id="1324d-314">Always</span></span>|<span data-ttu-id="1324d-315">Le nom de la valeur d’énumération de `eventType`.</span><span class="sxs-lookup"><span data-stu-id="1324d-315">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="1324d-316">Toujours</span><span class="sxs-lookup"><span data-stu-id="1324d-316">Always</span></span>|<span data-ttu-id="1324d-317">Représentation sous forme de chaîne de `id`.</span><span class="sxs-lookup"><span data-stu-id="1324d-317">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="1324d-318">Toujours</span><span class="sxs-lookup"><span data-stu-id="1324d-318">Always</span></span>|<span data-ttu-id="1324d-319">Représentation sous forme de chaîne de `data`.</span><span class="sxs-lookup"><span data-stu-id="1324d-319">The string representation of `data`.</span></span>|  
|`callStack`|<span data-ttu-id="1324d-320">Lorsque le <xref:System.Diagnostics.TraceOptions.Callstack> indicateur est défini dans le <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-320">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="1324d-321">Le <xref:System.Diagnostics.TraceEventCache.Callstack%2A> propriété du `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="1324d-321">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="1324d-322">Lorsque le <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> indicateur est défini dans le <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-322">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="1324d-323">Le <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> propriété du `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="1324d-323">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="1324d-324">Lorsque le <xref:System.Diagnostics.TraceOptions.DateTime> indicateur est défini dans le <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-324">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="1324d-325">La représentation sous forme de chaîne de la <xref:System.Diagnostics.TraceEventCache.DateTime%2A> propriété du `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="1324d-325">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="1324d-326">La culture dite indifférente est utilisée pour la conversion de chaîne.</span><span class="sxs-lookup"><span data-stu-id="1324d-326">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="1324d-327">Lorsque le <xref:System.Diagnostics.TraceOptions.ProcessId> indicateur est défini dans le <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-327">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="1324d-328">La représentation sous forme de chaîne de la <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> propriété du `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="1324d-328">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="1324d-329">La culture dite indifférente est utilisée pour la conversion de chaîne.</span><span class="sxs-lookup"><span data-stu-id="1324d-329">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="1324d-330">Lorsque le <xref:System.Diagnostics.TraceOptions.ThreadId> indicateur est défini dans le <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-330">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="1324d-331">Le <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> propriété du `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="1324d-331">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="1324d-332">Lorsque le <xref:System.Diagnostics.TraceOptions.Timestamp> indicateur est défini dans le <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-332">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="1324d-333">La représentation sous forme de chaîne de la <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> propriété du `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="1324d-333">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="1324d-334">La culture dite indifférente est utilisée pour la conversion de chaîne.</span><span class="sxs-lookup"><span data-stu-id="1324d-334">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="1324d-335">Lorsque le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> propriété est `True`.</span><span class="sxs-lookup"><span data-stu-id="1324d-335">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="1324d-336">Le nom de l’ordinateur.</span><span class="sxs-lookup"><span data-stu-id="1324d-336">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceData">
      <MemberSignature Language="C#" Value="public override void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, params object[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceData(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, object[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceData (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, ParamArray data As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceData(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, ... cli::array &lt;System::Object ^&gt; ^ data);" />
      <MemberSignature Language="F#" Value="abstract member TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit&#xA;override this.TraceData : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * obj[] -&gt; unit" Usage="fileLogTraceListener.TraceData (eventCache, source, eventType, id, data)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="data" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="1324d-337">Objet <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-337">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="1324d-338">Nom de la source de trace qui a appelé cette méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-338">The name of the trace source that invoked this method.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="1324d-339">Une des valeurs d'énumération <see cref="T:System.Diagnostics.TraceEventType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-339">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="1324d-340">Identificateur numérique pour l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-340">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="data">
          <span data-ttu-id="1324d-341">Tableau d'objets à émettre comme données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-341">An array of objects to emit as data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1324d-342">Écrit des informations de traçage, un tableau d'objets de données et des informations d'événement dans le fichier ou le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-342">Writes trace information, an array of data objects, and event information to the output file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-343">Cette méthode :</span><span class="sxs-lookup"><span data-stu-id="1324d-343">This method:</span></span>  
  
1.  <span data-ttu-id="1324d-344">Met en forme les informations de données et le contexte pour la sortie,</span><span class="sxs-lookup"><span data-stu-id="1324d-344">Formats the data and context information for output,</span></span>  
  
2.  <span data-ttu-id="1324d-345">Crée un nouveau fichier journal, si nécessaire,</span><span class="sxs-lookup"><span data-stu-id="1324d-345">Creates a new log file, if necessary,</span></span>  
  
3.  <span data-ttu-id="1324d-346">Écrit les informations dans le fichier journal.</span><span class="sxs-lookup"><span data-stu-id="1324d-346">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="1324d-347">Pour plus d’informations sur la création de nouveaux fichiers journaux, consultez <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span><span class="sxs-lookup"><span data-stu-id="1324d-347">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="1324d-348">Ce tableau répertorie les champs de sortie dans l’ordre de qu'apparition.</span><span class="sxs-lookup"><span data-stu-id="1324d-348">This table lists the output fields in the order they appear.</span></span> <span data-ttu-id="1324d-349">Les champs sont délimités par la chaîne qui le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> propriété spécifie et sont suivies d’un terminateur de ligne.</span><span class="sxs-lookup"><span data-stu-id="1324d-349">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="1324d-350">**Champ**</span><span class="sxs-lookup"><span data-stu-id="1324d-350">**Field**</span></span>|<span data-ttu-id="1324d-351">**Condition de sortie**</span><span class="sxs-lookup"><span data-stu-id="1324d-351">**Output condition**</span></span>|<span data-ttu-id="1324d-352">**Description**</span><span class="sxs-lookup"><span data-stu-id="1324d-352">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="1324d-353">Toujours</span><span class="sxs-lookup"><span data-stu-id="1324d-353">Always</span></span>|<span data-ttu-id="1324d-354">la valeur de la propriété `name` ;</span><span class="sxs-lookup"><span data-stu-id="1324d-354">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="1324d-355">Toujours</span><span class="sxs-lookup"><span data-stu-id="1324d-355">Always</span></span>|<span data-ttu-id="1324d-356">Le nom de la valeur d’énumération de `eventType`.</span><span class="sxs-lookup"><span data-stu-id="1324d-356">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="1324d-357">Toujours</span><span class="sxs-lookup"><span data-stu-id="1324d-357">Always</span></span>|<span data-ttu-id="1324d-358">Représentation sous forme de chaîne de `id`.</span><span class="sxs-lookup"><span data-stu-id="1324d-358">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="1324d-359">Toujours</span><span class="sxs-lookup"><span data-stu-id="1324d-359">Always</span></span>|<span data-ttu-id="1324d-360">La chaîne qui se compose de la représentation sous forme de chaîne de chaque élément dans `data`, chacun étant séparé par <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>.</span><span class="sxs-lookup"><span data-stu-id="1324d-360">The string consisting of the string representation of each element in `data`, each separated by <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A>.</span></span>|  
|`callStack`|<span data-ttu-id="1324d-361">Lorsque le <xref:System.Diagnostics.TraceOptions.Callstack> indicateur est défini dans le <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-361">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="1324d-362">Le <xref:System.Diagnostics.TraceEventCache.Callstack%2A> propriété du `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="1324d-362">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="1324d-363">Lorsque le <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> indicateur est défini dans le <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-363">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="1324d-364">Le <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> propriété du `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="1324d-364">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="1324d-365">Lorsque le <xref:System.Diagnostics.TraceOptions.DateTime> indicateur est défini dans le <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-365">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="1324d-366">La représentation sous forme de chaîne de la <xref:System.Diagnostics.TraceEventCache.DateTime%2A> propriété du `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="1324d-366">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="1324d-367">La culture dite indifférente est utilisée pour la conversion de chaîne.</span><span class="sxs-lookup"><span data-stu-id="1324d-367">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="1324d-368">Lorsque le <xref:System.Diagnostics.TraceOptions.ProcessId> indicateur est défini dans le <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-368">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="1324d-369">La représentation sous forme de chaîne de la <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> propriété du `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="1324d-369">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="1324d-370">La culture dite indifférente est utilisée pour la conversion de chaîne.</span><span class="sxs-lookup"><span data-stu-id="1324d-370">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="1324d-371">Lorsque le <xref:System.Diagnostics.TraceOptions.ThreadId> indicateur est défini dans le <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-371">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="1324d-372">Le <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> propriété du `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="1324d-372">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="1324d-373">Lorsque le <xref:System.Diagnostics.TraceOptions.Timestamp> indicateur est défini dans le <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-373">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="1324d-374">La représentation sous forme de chaîne de la <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> propriété du `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="1324d-374">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="1324d-375">La culture dite indifférente est utilisée pour la conversion de chaîne.</span><span class="sxs-lookup"><span data-stu-id="1324d-375">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="1324d-376">Lorsque le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> propriété est `True`.</span><span class="sxs-lookup"><span data-stu-id="1324d-376">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="1324d-377">Le nom de l’ordinateur.</span><span class="sxs-lookup"><span data-stu-id="1324d-377">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TraceEvent">
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1324d-378">Écrit les informations sur la trace et sur les événements dans le fichier ou le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-378">Writes trace and event information to the output file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-379"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> méthodes ne sont pas destinées à être appelé par le code d’application.</span><span class="sxs-lookup"><span data-stu-id="1324d-379"><xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent%2A> methods are not intended to be called by application code.</span></span> <span data-ttu-id="1324d-380">Ces méthodes sont appelées par les membres de la <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, et <xref:System.Diagnostics.TraceSource> classes pour écrire des données de trace en sortie.</span><span class="sxs-lookup"><span data-stu-id="1324d-380">These methods are called by members of the <xref:System.Diagnostics.Debug>, <xref:System.Diagnostics.Trace>, and <xref:System.Diagnostics.TraceSource> classes to write trace data to output.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit&#xA;override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string -&gt; unit" Usage="fileLogTraceListener.TraceEvent (eventCache, source, eventType, id, message)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="1324d-381">Objet <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-381">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="1324d-382">Nom de la source de trace qui a appelé cette méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-382">A name of the trace source that invoked this method.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="1324d-383">Une des valeurs d'énumération <see cref="T:System.Diagnostics.TraceEventType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-383">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="1324d-384">Identificateur numérique pour l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-384">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="1324d-385">Message à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-385">A message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1324d-386">Écrit des informations de traçage, un message et des informations d'événement dans le fichier ou le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-386">Writes trace information, a message and event information to the output file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-387">Cette méthode :</span><span class="sxs-lookup"><span data-stu-id="1324d-387">This method:</span></span>  
  
1.  <span data-ttu-id="1324d-388">Met en forme les informations de données et le contexte pour la sortie.</span><span class="sxs-lookup"><span data-stu-id="1324d-388">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="1324d-389">Crée un nouveau fichier journal, si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="1324d-389">Creates a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="1324d-390">Écrit les informations dans le fichier journal.</span><span class="sxs-lookup"><span data-stu-id="1324d-390">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="1324d-391">Pour plus d’informations sur la création de nouveaux fichiers journaux, consultez <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span><span class="sxs-lookup"><span data-stu-id="1324d-391">For more information on creating new log files, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="1324d-392">Ce tableau répertorie les champs de sortie dans l’ordre dans lequel ils apparaissent.</span><span class="sxs-lookup"><span data-stu-id="1324d-392">This table lists the output fields in the order in which they appear.</span></span> <span data-ttu-id="1324d-393">Les champs sont délimités par la chaîne qui le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> propriété spécifie et sont suivies d’un terminateur de ligne.</span><span class="sxs-lookup"><span data-stu-id="1324d-393">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and are followed by a line terminator.</span></span>  
  
|<span data-ttu-id="1324d-394">**Champ**</span><span class="sxs-lookup"><span data-stu-id="1324d-394">**Field**</span></span>|<span data-ttu-id="1324d-395">**Condition de sortie**</span><span class="sxs-lookup"><span data-stu-id="1324d-395">**Output condition**</span></span>|<span data-ttu-id="1324d-396">**Description**</span><span class="sxs-lookup"><span data-stu-id="1324d-396">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="1324d-397">Toujours.</span><span class="sxs-lookup"><span data-stu-id="1324d-397">Always.</span></span>|<span data-ttu-id="1324d-398">la valeur de la propriété `name` ;</span><span class="sxs-lookup"><span data-stu-id="1324d-398">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="1324d-399">Toujours.</span><span class="sxs-lookup"><span data-stu-id="1324d-399">Always.</span></span>|<span data-ttu-id="1324d-400">Le nom de la valeur d’énumération de `eventType`.</span><span class="sxs-lookup"><span data-stu-id="1324d-400">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="1324d-401">Toujours.</span><span class="sxs-lookup"><span data-stu-id="1324d-401">Always.</span></span>|<span data-ttu-id="1324d-402">Représentation sous forme de chaîne de `id`.</span><span class="sxs-lookup"><span data-stu-id="1324d-402">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="1324d-403">Toujours.</span><span class="sxs-lookup"><span data-stu-id="1324d-403">Always.</span></span>|<span data-ttu-id="1324d-404">la valeur de la propriété `message` ;</span><span class="sxs-lookup"><span data-stu-id="1324d-404">The value of `message`.</span></span>|  
|`callStack`|<span data-ttu-id="1324d-405">Lorsque le <xref:System.Diagnostics.TraceOptions.Callstack> indicateur est défini dans le <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-405">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="1324d-406">Le <xref:System.Diagnostics.TraceEventCache.Callstack%2A> propriété du `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="1324d-406">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="1324d-407">Lorsque le <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> indicateur est défini dans le <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-407">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="1324d-408">Le <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> propriété du `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="1324d-408">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="1324d-409">Lorsque le <xref:System.Diagnostics.TraceOptions.DateTime> indicateur est défini dans le <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-409">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="1324d-410">La représentation sous forme de chaîne de la <xref:System.Diagnostics.TraceEventCache.DateTime%2A> propriété du `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="1324d-410">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="1324d-411">La culture dite indifférente est utilisée pour la conversion de chaîne.</span><span class="sxs-lookup"><span data-stu-id="1324d-411">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="1324d-412">Lorsque le <xref:System.Diagnostics.TraceOptions.ProcessId> indicateur est défini dans le <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-412">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="1324d-413">La représentation sous forme de chaîne de la <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> propriété du `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="1324d-413">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="1324d-414">La culture dite indifférente est utilisée pour la conversion de chaîne.</span><span class="sxs-lookup"><span data-stu-id="1324d-414">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="1324d-415">Lorsque le <xref:System.Diagnostics.TraceOptions.ThreadId> indicateur est défini dans le <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-415">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="1324d-416">Le <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> propriété du `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="1324d-416">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="1324d-417">Lorsque le <xref:System.Diagnostics.TraceOptions.Timestamp> indicateur est défini dans le <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-417">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="1324d-418">La représentation sous forme de chaîne de la <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> propriété du `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="1324d-418">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="1324d-419">La culture dite indifférente est utilisée pour la conversion de chaîne.</span><span class="sxs-lookup"><span data-stu-id="1324d-419">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="1324d-420">Lorsque le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> propriété est `True`.</span><span class="sxs-lookup"><span data-stu-id="1324d-420">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="1324d-421">Le nom de l’ordinateur.</span><span class="sxs-lookup"><span data-stu-id="1324d-421">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="TraceEvent">
      <MemberSignature Language="C#" Value="public override void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void TraceEvent(class System.Diagnostics.TraceEventCache eventCache, string source, valuetype System.Diagnostics.TraceEventType eventType, int32 id, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub TraceEvent (eventCache As TraceEventCache, source As String, eventType As TraceEventType, id As Integer, format As String, ParamArray args As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void TraceEvent(System::Diagnostics::TraceEventCache ^ eventCache, System::String ^ source, System::Diagnostics::TraceEventType eventType, int id, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit&#xA;override this.TraceEvent : System.Diagnostics.TraceEventCache * string * System.Diagnostics.TraceEventType * int * string * obj[] -&gt; unit" Usage="fileLogTraceListener.TraceEvent (eventCache, source, eventType, id, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventCache" Type="System.Diagnostics.TraceEventCache" />
        <Parameter Name="source" Type="System.String" />
        <Parameter Name="eventType" Type="System.Diagnostics.TraceEventType" />
        <Parameter Name="id" Type="System.Int32" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="eventCache">
          <span data-ttu-id="1324d-422">Objet <see cref="T:System.Diagnostics.TraceEventCache" /> qui contient les informations actuelles sur l'ID de processus, l'ID de thread et la trace de la pile.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-422">A <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains the current process ID, thread ID, and stack trace information.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="1324d-423">Nom de la source de trace qui a appelé cette méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-423">A name of the trace source that invoked this method.</span>
          </span>
        </param>
        <param name="eventType">
          <span data-ttu-id="1324d-424">Une des valeurs d'énumération <see cref="T:System.Diagnostics.TraceEventType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-424">One of the <see cref="T:System.Diagnostics.TraceEventType" /> enumeration values.</span>
          </span>
        </param>
        <param name="id">
          <span data-ttu-id="1324d-425">Identificateur numérique pour l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-425">A numeric identifier for the event.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="1324d-426">Chaîne de format qui contient zéro élément de format ou plus, lesquels correspondent aux objets dans le tableau <c>args</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-426">A format string that contains zero or more format items, which correspond to objects in the <c>args</c> array.</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="1324d-427">
            <see langword="Object" /> Tableau qui contient zéro ou plusieurs objets à mettre en forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-427">An <see langword="Object" /> array containing zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1324d-428">Écrit des informations de traçage, un tableau d'objets mis en forme et des informations d'événement dans le fichier ou le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-428">Writes trace information, a formatted array of objects, and event information to the output file or stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-429">Cette méthode :</span><span class="sxs-lookup"><span data-stu-id="1324d-429">This method:</span></span>  
  
1.  <span data-ttu-id="1324d-430">Met en forme les informations de données et le contexte pour la sortie.</span><span class="sxs-lookup"><span data-stu-id="1324d-430">Formats the data and context information for output.</span></span>  
  
2.  <span data-ttu-id="1324d-431">Crée un nouveau fichier de journal, si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="1324d-431">Creates a new a new log file, if necessary.</span></span>  
  
3.  <span data-ttu-id="1324d-432">Écrit les informations dans le fichier journal.</span><span class="sxs-lookup"><span data-stu-id="1324d-432">Writes the information to the log file.</span></span>  
  
 <span data-ttu-id="1324d-433">Pour plus d’informations sur la création du nouveau fichier journal, consultez <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span><span class="sxs-lookup"><span data-stu-id="1324d-433">For more information on creating new log file, see <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName%2A>.</span></span>  
  
 <span data-ttu-id="1324d-434">Ce tableau répertorie les champs de sortie dans l’ordre dans lequel ils apparaissent.</span><span class="sxs-lookup"><span data-stu-id="1324d-434">This table lists the output fields in the order in which they appear.</span></span> <span data-ttu-id="1324d-435">Les champs sont délimités par la chaîne qui le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> propriété spécifie et suivie d’un terminateur de ligne.</span><span class="sxs-lookup"><span data-stu-id="1324d-435">The fields are delimited by the string that the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Delimiter%2A> property specifies, and followed by a line terminator.</span></span>  
  
|<span data-ttu-id="1324d-436">**Champ**</span><span class="sxs-lookup"><span data-stu-id="1324d-436">**Field**</span></span>|<span data-ttu-id="1324d-437">**Condition de sortie**</span><span class="sxs-lookup"><span data-stu-id="1324d-437">**Output condition**</span></span>|<span data-ttu-id="1324d-438">**Description**</span><span class="sxs-lookup"><span data-stu-id="1324d-438">**Description**</span></span>|  
|---------------|--------------------------|---------------------|  
|`source`|<span data-ttu-id="1324d-439">Toujours</span><span class="sxs-lookup"><span data-stu-id="1324d-439">Always</span></span>|<span data-ttu-id="1324d-440">la valeur de la propriété `name` ;</span><span class="sxs-lookup"><span data-stu-id="1324d-440">The value of `name`.</span></span>|  
|`severity`|<span data-ttu-id="1324d-441">Toujours</span><span class="sxs-lookup"><span data-stu-id="1324d-441">Always</span></span>|<span data-ttu-id="1324d-442">Le nom de la valeur d’énumération de `eventType`.</span><span class="sxs-lookup"><span data-stu-id="1324d-442">The enumeration-value name of `eventType`.</span></span>|  
|`id`|<span data-ttu-id="1324d-443">Toujours</span><span class="sxs-lookup"><span data-stu-id="1324d-443">Always</span></span>|<span data-ttu-id="1324d-444">Représentation sous forme de chaîne de `id`.</span><span class="sxs-lookup"><span data-stu-id="1324d-444">The string representation of `id`.</span></span>|  
|`message`|<span data-ttu-id="1324d-445">Toujours</span><span class="sxs-lookup"><span data-stu-id="1324d-445">Always</span></span>|<span data-ttu-id="1324d-446">Les données dans `args` formatés avec le `format` chaîne et à l’aide de la culture dite indifférente pour les conversions de chaînes.</span><span class="sxs-lookup"><span data-stu-id="1324d-446">The data in `args` formatted with the `format` string and using the invariant culture for string conversions.</span></span>|  
|`callStack`|<span data-ttu-id="1324d-447">Lorsque le <xref:System.Diagnostics.TraceOptions.Callstack> indicateur est défini dans le <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-447">When the <xref:System.Diagnostics.TraceOptions.Callstack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="1324d-448">Le <xref:System.Diagnostics.TraceEventCache.Callstack%2A> propriété du `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="1324d-448">The <xref:System.Diagnostics.TraceEventCache.Callstack%2A> property of `eventCache`.</span></span>|  
|`CorrelationID`|<span data-ttu-id="1324d-449">Lorsque le <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> indicateur est défini dans le <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-449">When the <xref:System.Diagnostics.TraceOptions.LogicalOperationStack> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="1324d-450">Le <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> propriété du `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="1324d-450">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`DateTime`|<span data-ttu-id="1324d-451">Lorsque le <xref:System.Diagnostics.TraceOptions.DateTime> indicateur est défini dans le <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-451">When the <xref:System.Diagnostics.TraceOptions.DateTime> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="1324d-452">La représentation sous forme de chaîne de la <xref:System.Diagnostics.TraceEventCache.DateTime%2A> propriété du `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="1324d-452">The string representation of the <xref:System.Diagnostics.TraceEventCache.DateTime%2A> property of `eventCache`.</span></span> <span data-ttu-id="1324d-453">La culture dite indifférente est utilisée pour la conversion de chaîne.</span><span class="sxs-lookup"><span data-stu-id="1324d-453">The invariant culture is used for the string conversion.</span></span>|  
|`ProcessID`|<span data-ttu-id="1324d-454">Lorsque le <xref:System.Diagnostics.TraceOptions.ProcessId> indicateur est défini dans le <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-454">When the <xref:System.Diagnostics.TraceOptions.ProcessId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="1324d-455">La représentation sous forme de chaîne de la <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> propriété du `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="1324d-455">The string representation of the <xref:System.Diagnostics.TraceEventCache.ProcessId%2A> property of `eventCache`.</span></span> <span data-ttu-id="1324d-456">La culture dite indifférente est utilisée pour la conversion de chaîne.</span><span class="sxs-lookup"><span data-stu-id="1324d-456">The invariant culture is used for the string conversion.</span></span>|  
|`ThreadID`|<span data-ttu-id="1324d-457">Lorsque le <xref:System.Diagnostics.TraceOptions.ThreadId> indicateur est défini dans le <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-457">When the <xref:System.Diagnostics.TraceOptions.ThreadId> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="1324d-458">Le <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> propriété du `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="1324d-458">The <xref:System.Diagnostics.TraceEventCache.ThreadId%2A> property of `eventCache`.</span></span>|  
|`Timestamp`|<span data-ttu-id="1324d-459">Lorsque le <xref:System.Diagnostics.TraceOptions.Timestamp> indicateur est défini dans le <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="1324d-459">When the <xref:System.Diagnostics.TraceOptions.Timestamp> flag is set in the <xref:System.Diagnostics.TraceListener.TraceOutputOptions%2A> property.</span></span>|<span data-ttu-id="1324d-460">La représentation sous forme de chaîne de la <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> propriété du `eventCache`.</span><span class="sxs-lookup"><span data-stu-id="1324d-460">The string representation of the <xref:System.Diagnostics.TraceEventCache.Timestamp%2A> property of `eventCache`.</span></span> <span data-ttu-id="1324d-461">La culture dite indifférente est utilisée pour la conversion de chaîne.</span><span class="sxs-lookup"><span data-stu-id="1324d-461">The invariant culture is used for the string conversion.</span></span>|  
|`HostName`|<span data-ttu-id="1324d-462">Lorsque le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> propriété est `True`.</span><span class="sxs-lookup"><span data-stu-id="1324d-462">When the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.IncludeHostName%2A> property is `True`.</span></span>|<span data-ttu-id="1324d-463">Le nom de l’ordinateur.</span><span class="sxs-lookup"><span data-stu-id="1324d-463">The name of the computer.</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Diagnostics.TraceListener" />
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="P:System.Diagnostics.TraceListener.TraceOutputOptions" />
        <altmember cref="T:System.Diagnostics.TraceEventCache" />
        <altmember cref="T:System.Diagnostics.TraceEventType" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member Write : string -&gt; unit&#xA;override this.Write : string -&gt; unit" Usage="fileLogTraceListener.Write message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="1324d-464">
            <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-464">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="1324d-465">Message personnalisé à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-465">The custom message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1324d-466">Écrit mot à mot un message à disque, sans informations de contexte supplémentaires.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-466">Writes a verbatim message to disk, without any additional context information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-467">Le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A> méthode écrit un message spécifique dans le fichier journal, sans informations de contexte supplémentaires.</span><span class="sxs-lookup"><span data-stu-id="1324d-467">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.Write%2A> method writes a specific message to the log file, without any additional context information.</span></span>  
  
 <span data-ttu-id="1324d-468">Utilisez l’une de la <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> méthodes à inclure les informations de contexte dans la sortie du journal.</span><span class="sxs-lookup"><span data-stu-id="1324d-468">Use the one of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods to include the context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string -&gt; unit&#xA;override this.WriteLine : string -&gt; unit" Usage="fileLogTraceListener.WriteLine message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.VisualBasic</AssemblyName>
        <AssemblyVersion>8.0.0.0</AssemblyVersion>
        <AssemblyVersion>10.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="1324d-469">
            <see langword="String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-469">
              <see langword="String" />.</span>
          </span>
          <span data-ttu-id="1324d-470">Message personnalisé à écrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-470">The custom message to write.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1324d-471">Écrit un message mot pour mot sur le disque, suivi par la marque de fin de ligne en cours, sans informations de contexte supplémentaires.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1324d-471">Writes a verbatim message to disk, followed by the current line terminator, without any additional context information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1324d-472">Le <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A> méthode écrit un message spécifique dans le fichier journal, sans informations de contexte supplémentaires.</span><span class="sxs-lookup"><span data-stu-id="1324d-472">The <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.WriteLine%2A> method writes a specific message to the log file, without any additional context information.</span></span>  
  
 <span data-ttu-id="1324d-473">Utilisez l’une de la <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> méthodes à inclure les informations de contexte dans la sortie du journal.</span><span class="sxs-lookup"><span data-stu-id="1324d-473">Use the one of the <xref:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData%2A> methods to include the context information in the log output.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:Microsoft.VisualBasic.Logging.FileLogTraceListener.FullLogFileName" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)" />
        <altmember cref="M:Microsoft.VisualBasic.Logging.FileLogTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>