<Type Name="ClientRoleProvider" FullName="System.Web.ClientServices.Providers.ClientRoleProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9e8b4d5edd2625fe8e807650cbd3a97ebfe48a19" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46588820" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClientRoleProvider : System.Web.Security.RoleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ClientRoleProvider extends System.Web.Security.RoleProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.ClientServices.Providers.ClientRoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientRoleProvider&#xA;Inherits RoleProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientRoleProvider : System::Web::Security::RoleProvider" />
  <TypeSignature Language="F#" Value="type ClientRoleProvider = class&#xA;    inherit RoleProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.RoleProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Obtient des informations de rôle pour les applications Windows à partir d’un service de rôles Microsoft Ajax.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser les services d’application cliente pour récupérer des informations de rôle à partir d’un service de rôles existant en configurant votre application pour utiliser la <xref:System.Web.ClientServices.Providers.ClientRoleProvider> classe. Après la configuration, vous pouvez déterminer si un utilisateur authentifié est dans un rôle particulier en appelant le <xref:System.Security.Principal.IPrincipal.IsInRole%2A> méthode de la <xref:System.Security.Principal.IPrincipal> retourné par la `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> propriété. Pour les applications configurées pour utiliser les services d'application cliente, cette propriété retourne un <xref:System.Web.ClientServices.ClientRolePrincipal>. Étant donné que cette classe implémente l'interface <xref:System.Security.Principal.IPrincipal> , vous n'avez pas besoin de la référencer explicitement. Le <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=nameWithType> méthode appelle en interne la <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A?displayProperty=nameWithType> (méthode).  
  
 Le <xref:System.Web.ClientServices.Providers.ClientRoleProvider> classe est un fournisseur d’appartenances de rôle en lecture seule qui extrait les informations de rôle pour les utilisateurs authentifiés du service de rôles indiqué par la <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A> propriété. La valeur de la <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A> propriété est généralement récupérée à partir du fichier de configuration d’application, ainsi que d’autres valeurs de configuration. Pour plus d'informations, consultez [How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).  
  
 Vous pouvez récupérer le cours <xref:System.Web.ClientServices.Providers.ClientRoleProvider> instance via le `static` <xref:System.Web.Security.Roles.Provider%2A?displayProperty=nameWithType> propriété.  
  
 Le <xref:System.Web.ClientServices.Providers.ClientRoleProvider> classe prend en charge uniquement le <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> et <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> méthodes de la <xref:System.Web.Security.RoleProvider> classe abstraite. Lorsque vous appelez une des méthodes suivantes pour un utilisateur particulier, le fournisseur de services vérifie d’abord le cache de données local pour les informations de rôle. Si le cache ne contient-elle pas les informations de rôle ou le cache a expiré, le fournisseur de services récupère les informations de rôle du service de rôles et l’ajoute au cache.  
  
 Vous pouvez spécifier le délai d’attente pour le cache de rôles lorsque vous configurez des services d’application cliente. Pour forcer le <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> méthode pour récupérer des données de rôle du service au lieu du cache local, l’appel de la <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache%2A> méthode première.  
  
 Vous ne pouvez pas utiliser le <xref:System.Web.ClientServices.Providers.ClientRoleProvider> classe pour créer ou supprimer des rôles, ou pour modifier l’appartenance au rôle d’utilisateurs. Pour créer ou modifier les informations de rôle, vous devez modifier la configuration du service de rôle sur le serveur.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser cette propriété pour définir par programmation les rôles d’emplacement du service.  
  
 [!code-csharp[ClientApplicationServices#302](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#302)]
 [!code-vb[ClientApplicationServices#302](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#302)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
    <altmember cref="T:System.Web.ClientServices.ClientRolePrincipal" />
    <altmember cref="M:System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)" />
    <altmember cref="P:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri" />
    <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)" />
    <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)" />
    <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache" />
    <related type="Article" href="http://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Services d'application cliente</related>
    <related type="Article" href="http://msdn.microsoft.com/library/34a8688a-a32c-40d3-94be-c8e610c6a4e8">Comment : configurer les services d'application cliente</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientRoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientRoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.ClientServices.Providers.ClientRoleProvider" />.</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Services d'application cliente</related>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public override void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.AddUsersToRoles : string[] * string[] -&gt; unit" Usage="clientRoleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Non utilisé.</param>
        <param name="roleNames">Non utilisé.</param>
        <summary>Cette méthode n'est pas utilisée par cette classe.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Toujours levée.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Services d'application cliente</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.ClientServices.Providers.ClientRoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété n'est pas utilisée par cette classe.</summary>
        <value>Le nom de l'application pour le fournisseur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Définition de cette propriété n’a aucun effet.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Services d'application cliente</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public override void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.CreateRole : string -&gt; unit" Usage="clientRoleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Non utilisé.</param>
        <summary>Cette méthode n'est pas utilisée par cette classe.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Toujours levée.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Services d'application cliente</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="override this.DeleteRole : string * bool -&gt; bool" Usage="clientRoleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">Non utilisé.</param>
        <param name="throwOnPopulatedRole">Non utilisé.</param>
        <summary>Cette méthode n'est pas utilisée par cette classe.</summary>
        <returns>Non applicable. Cette méthode lève toujours une exception.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Toujours levée.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Services d'application cliente</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="override this.FindUsersInRole : string * string -&gt; string[]" Usage="clientRoleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Non utilisé.</param>
        <param name="usernameToMatch">Non utilisé.</param>
        <summary>Cette méthode n'est pas utilisée par cette classe.</summary>
        <returns>Non applicable. Cette méthode lève toujours une exception.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Toujours levée.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Services d'application cliente</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public override string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="override this.GetAllRoles : unit -&gt; string[]" Usage="clientRoleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cette méthode n'est pas utilisée par cette classe.</summary>
        <returns>Non applicable. Cette méthode lève toujours une exception.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Toujours levée.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Services d'application cliente</related>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public override string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.GetRolesForUser : string -&gt; string[]" Usage="clientRoleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nom de l'utilisateur pour lequel extraire des rôles.</param>
        <summary>Obtient les noms des rôles auxquels l'utilisateur spécifié appartient.</summary>
        <returns>Noms des rôles auxquels <paramref name="username" /> appartient ou tableau vide si l'utilisateur n'est pas authentifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> méthode récupère les informations de rôle pour l’utilisateur authentifié actuel, que vous devez spécifier dans le `username` paramètre. Vous pouvez obtenir le nom d’utilisateur via le `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> propriété comme suit : `Thread.CurrentPrincipal.Identity.Name`.  
  
 Le fournisseur de services met en cache les informations de rôle sur le système de fichiers local pour éviter des appels de service inutiles. Pour plus d’informations, consultez le <xref:System.Web.ClientServices.Providers.ClientRoleProvider> vue d’ensemble de la classe.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser cette méthode pour déterminer si la connexion de l’utilisateur a expiré avant de tester l’appartenance au rôle. Ce code part du principe que tous les utilisateurs valides sont associés avec un ou plusieurs rôles. Dans ce cas, le <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> méthode ne retournera pas de rôles pour un utilisateur authentifié précédemment dont la connexion a expiré. Si la connexion de l’utilisateur a expiré, ce code affiche la boîte de dialogue de connexion. Sinon, elle appelle le <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> méthode pour déterminer si l’utilisateur est dans le rôle « manager ». Le code restreint est dans un `PerformManagerTask` (méthode), ce qui n’est pas fourni.  
  
 [!code-csharp[ClientApplicationServices#321](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#321)]
 [!code-vb[ClientApplicationServices#321](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#321)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> est <see cref="F:System.String.Empty" /> ou <see langword="null" />.  
  
- ou - 
 <paramref name="username" /> n'est pas le nom d'utilisateur de l'utilisateur authentifié actuel.</exception>
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)" />
        <related type="Article" href="http://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Services d'application cliente</related>
        <related type="Article" href="http://msdn.microsoft.com/library/34a8688a-a32c-40d3-94be-c8e610c6a4e8">Comment : configurer les services d'application cliente</related>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.GetUsersInRole : string -&gt; string[]" Usage="clientRoleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Non utilisé.</param>
        <summary>Cette méthode n'est pas utilisée par cette classe.</summary>
        <returns>Non applicable. Cette méthode lève toujours une exception.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Toujours levée.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Services d'application cliente</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="clientRoleProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Nom convivial du fournisseur.</param>
        <param name="config">Collection des paires nom/valeur qui représentent les attributs spécifiques au fournisseur spécifiés dans la configuration pour ce fournisseur.</param>
        <summary>Initialise le fournisseur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] les appels de modèle d’extensibilité le <xref:System.Web.ClientServices.Providers.ClientRoleProvider.Initialize%2A> méthode pour initialiser le <xref:System.Web.ClientServices.Providers.ClientRoleProvider> à l’aide des informations dans votre fichier de configuration d’application. Cette méthode reconnaît les attributs de configuration de service rôle suivants :  
  
-   `name`  
  
-   `description`  
  
-   `cacheTimeout`  
  
-   `connectionStringName`  
  
-   `serviceUri`  
  
-   `honorCookieExpiry`  
  
 Pour plus d’informations sur ces attributs, consultez [Comment : configurer les Services d’Application cliente](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="name" /> est <see langword="null" />.  
  
- ou - 
 <paramref name="config" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="name" /> est vide.  
  
- ou - 
 <paramref name="config" /> contient une valeur non reconnue.</exception>
        <exception cref="T:System.InvalidOperationException">Ce <see cref="T:System.Web.ClientServices.Providers.ClientRoleProvider" /> a déjà été initialisé.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="config" /> contient une valeur <c>cacheTimeout</c>qui n’est pas au format correct pour la conversion en valeur <see cref="T:System.Int32" />.</exception>
        <exception cref="T:System.OverflowException">
          <paramref name="config" /> contient une valeur <c>cacheTimeout</c> qui représente un nombre inférieur à <see cref="F:System.Int32.MinValue" /> ou supérieur à <see cref="F:System.Int32.MaxValue" />.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Services d'application cliente</related>
        <related type="Article" href="http://msdn.microsoft.com/library/34a8688a-a32c-40d3-94be-c8e610c6a4e8">Comment : configurer les services d'application cliente</related>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public override bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.IsUserInRole : string * string -&gt; bool" Usage="clientRoleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nom de l'utilisateur.</param>
        <param name="roleName">Nom du rôle.</param>
        <summary>Obtient une valeur indiquant si l'utilisateur spécifié figure dans le rôle spécifié.</summary>
        <returns>
          <see langword="true" /> si l'utilisateur spécifié est dans le rôle spécifié ; <see langword="false" /> si l'utilisateur spécifié n'est pas dans le rôle spécifié ou n'est pas authentifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez déterminer si un utilisateur authentifié est dans un rôle particulier en appelant le <xref:System.Security.Principal.IPrincipal.IsInRole%2A> méthode de la <xref:System.Security.Principal.IPrincipal> retourné par la `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> propriété. Pour les applications configurées pour utiliser les services d'application cliente, cette propriété retourne un <xref:System.Web.ClientServices.ClientRolePrincipal>. Étant donné que cette classe implémente l'interface <xref:System.Security.Principal.IPrincipal> , vous n'avez pas besoin de la référencer explicitement. Le <xref:System.Web.ClientServices.ClientRolePrincipal.IsInRole%2A?displayProperty=nameWithType> méthode appelle en interne la <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> (méthode). Le <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> méthode utilise le <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> méthode pour déterminer si l’utilisateur indiqué par `username` figure dans le rôle indiqué par `roleName`.  
  
 Le fournisseur de services met en cache les informations de rôle sur le système de fichiers local pour éviter des appels de service inutiles. Pour plus d’informations, consultez le <xref:System.Web.ClientServices.Providers.ClientRoleProvider> vue d’ensemble de la classe.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment accéder à cette méthode directement pour déterminer si l’utilisateur est dans un rôle particulier. Ce code teste tout d’abord si la connexion de l’utilisateur a expiré. Explicite <xref:System.Web.ClientServices.Providers.ClientRoleProvider> référence est requis pour appeler le <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> (méthode), la même référence est utilisée pour appeler le <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> (méthode). Si l’utilisateur est dans le rôle « manager », ce code appelle un `PerformManagerTask` (méthode), ce qui n’est pas fourni.  
  
 [!code-csharp[ClientApplicationServices#321](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#321)]
 [!code-vb[ClientApplicationServices#321](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#321)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> est <see cref="F:System.String.Empty" /> ou <see langword="null" />.  
  
- ou - 
 <paramref name="username" /> n'est pas le nom d'utilisateur de l'utilisateur authentifié actuel.</exception>
        <exception cref="T:System.Net.WebException">L'utilisateur n'est plus authentifié.  
  
- ou - 
Le service de rôles n'est pas disponible.</exception>
        <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)" />
        <altmember cref="P:System.Threading.Thread.CurrentPrincipal" />
        <altmember cref="T:System.Web.ClientServices.ClientRolePrincipal" />
        <altmember cref="M:System.Web.ClientServices.ClientRolePrincipal.IsInRole(System.String)" />
        <related type="Article" href="http://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Services d'application cliente</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="clientRoleProvider.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Non utilisé.</param>
        <param name="roleNames">Non utilisé.</param>
        <summary>Cette méthode n'est pas utilisée par cette classe.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Toujours levée.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Services d'application cliente</related>
      </Docs>
    </Member>
    <Member MemberName="ResetCache">
      <MemberSignature Language="C#" Value="public void ResetCache ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetCache() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetCache ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetCache();" />
      <MemberSignature Language="F#" Value="member this.ResetCache : unit -&gt; unit" Usage="clientRoleProvider.ResetCache " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Efface les informations de rôle mises en cache et réinitialise le délai d'attente du cache.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ResetCache%2A> méthode supprime toutes les informations de rôle à partir du cache local et provoque l’expiration du cache. Après avoir appelé cette méthode, votre appel suivant à la <xref:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser%2A> ou <xref:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole%2A> méthode pour récupérer les informations de rôle à partir du service de rôle configuré au lieu du cache local.  
  
 Vous pouvez utiliser cette méthode pour permettre aux utilisateurs d’actualiser le cache de rôles lorsque leur rôle a changé mais que le cache n’a pas encore expiré. Pour plus d’informations sur la définition de l’intervalle de délai d’expiration du cache des rôles, consultez [Comment : configurer les Services d’Application cliente](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser cette méthode pour réinitialiser le cache local de rôles.  
  
 [!code-csharp[ClientApplicationServices#314](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#314)]
 [!code-vb[ClientApplicationServices#314](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#314)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.GetRolesForUser(System.String)" />
        <altmember cref="M:System.Web.ClientServices.Providers.ClientRoleProvider.IsUserInRole(System.String,System.String)" />
        <related type="Article" href="http://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Services d'application cliente</related>
        <related type="Article" href="http://msdn.microsoft.com/library/34a8688a-a32c-40d3-94be-c8e610c6a4e8">Comment : configurer les services d'application cliente</related>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public override bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ClientServices.Providers.ClientRoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.RoleExists : string -&gt; bool" Usage="clientRoleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Non utilisé.</param>
        <summary>Cette méthode n'est pas utilisée par cette classe.</summary>
        <returns>Non applicable. Cette méthode lève toujours une exception.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">Toujours levée.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Services d'application cliente</related>
      </Docs>
    </Member>
    <Member MemberName="ServiceUri">
      <MemberSignature Language="C#" Value="public string ServiceUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ServiceUri" />
      <MemberSignature Language="DocId" Value="P:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceUri As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ServiceUri { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ServiceUri : string with get, set" Usage="System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'URI du service de rôle.</summary>
        <value>L'URI du service de rôle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez définir le <xref:System.Web.ClientServices.Providers.ClientRoleProvider.ServiceUri%2A> propriété dans votre code d’application, mais vous définissent généralement la valeur dans votre fichier de configuration d’application. Cela vous permet de modifier l’emplacement de service sans avoir à recompiler votre code. Pour plus d'informations, consultez [How to: Configure Client Application Services](~/docs/framework/common-client-technologies/how-to-configure-client-application-services.md).  
  
 Lorsque vous définissez l’emplacement du service par programme, vous devez spécifier l’URI, qui se termine toujours par « Role_JSON_AppService.axd » du service terminé.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser cette propriété pour définir par programmation les rôles d’emplacement du service.  
  
 [!code-csharp[ClientApplicationServices#302](~/samples/snippets/csharp/VS_Snippets_Winforms/ClientApplicationServices/CS/Class1.cs#302)]
 [!code-vb[ClientApplicationServices#302](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClientApplicationServices/VB/Class1.vb#302)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Lors de l'obtention de cette propriété, aucun URI de service n'a été trouvé dans le fichier de configuration de l'application, et cette propriété n'a pas été définie précédemment.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/1487d8df-089e-4f21-abfb-a791a652b58e">Services d'application cliente</related>
        <related type="Article" href="http://msdn.microsoft.com/library/34a8688a-a32c-40d3-94be-c8e610c6a4e8">Comment : configurer les services d'application cliente</related>
      </Docs>
    </Member>
  </Members>
</Type>