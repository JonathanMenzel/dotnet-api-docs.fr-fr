<Type Name="InvalidProjectFileException" FullName="Microsoft.Build.Exceptions.InvalidProjectFileException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c5ee56bb4e803e907ddde8d0f626732ad674cc6d" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55339919" /></Metadata><TypeSignature Language="C#" Value="public sealed class InvalidProjectFileException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit InvalidProjectFileException extends System.Exception" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Exceptions.InvalidProjectFileException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class InvalidProjectFileException&#xA;Inherits Exception" />
  <TypeSignature Language="C++ CLI" Value="public ref class InvalidProjectFileException sealed : Exception" />
  <TypeSignature Language="F#" Value="type InvalidProjectFileException = class&#xA;    inherit Exception" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Cette exception est levée à chaque fois qu'il y a un problème avec le fichier projet XML de l'utilisateur. Le problème peut être sémantique ou syntactique. Ce dernier serait généralement d'un type intercepté par la validation XSD (si elle a été exécutée par le writer de projet).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Avertissement : marquer un type [Serializable] sans implémenter ISerializable impose un contrat de sérialisation : il s’agit une promesse de ne jamais changer le type des champs par exemple, le type est immuable ; Ajout de nouveaux champs dans la prochaine version du type sans suivre certaines indications FX spéciales, peuvent empêcher la compatibilité ascendante et descendante  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ce constructeur existe seulement pour répondre aux instructions de codage .NET. Utilisez un constructeur riche chaque fois que possible.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidProjectFileException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Exceptions.InvalidProjectFileException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidProjectFileException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Constructeur par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur existe seulement pour répondre aux instructions de codage .NET. Utilisez un constructeur riche chaque fois que possible.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidProjectFileException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Exceptions.InvalidProjectFileException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidProjectFileException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Exceptions.InvalidProjectFileException : string -&gt; Microsoft.Build.Exceptions.InvalidProjectFileException" Usage="new Microsoft.Build.Exceptions.InvalidProjectFileException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Message d'erreur.</param>
        <summary>Crée une instance de cette exception à l'aide du message d'erreur spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur existe seulement pour répondre aux instructions de codage .NET. Utilisez un constructeur riche chaque fois que possible.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidProjectFileException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Exceptions.InvalidProjectFileException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidProjectFileException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Exceptions.InvalidProjectFileException : string * Exception -&gt; Microsoft.Build.Exceptions.InvalidProjectFileException" Usage="new Microsoft.Build.Exceptions.InvalidProjectFileException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Message d'erreur.</param>
        <param name="innerException">Exception interne.</param>
        <summary>Crée une instance de cette exception à l'aide du message d'erreur et de l'exception interne spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur existe seulement pour répondre aux instructions de codage .NET. Utilisez un constructeur riche chaque fois que possible.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InvalidProjectFileException (string projectFile, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, string message, string errorSubcategory, string errorCode, string helpKeyword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string projectFile, int32 lineNumber, int32 columnNumber, int32 endLineNumber, int32 endColumnNumber, string message, string errorSubcategory, string errorCode, string helpKeyword) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Exceptions.InvalidProjectFileException.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (projectFile As String, lineNumber As Integer, columnNumber As Integer, endLineNumber As Integer, endColumnNumber As Integer, message As String, errorSubcategory As String, errorCode As String, helpKeyword As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InvalidProjectFileException(System::String ^ projectFile, int lineNumber, int columnNumber, int endLineNumber, int endColumnNumber, System::String ^ message, System::String ^ errorSubcategory, System::String ^ errorCode, System::String ^ helpKeyword);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Exceptions.InvalidProjectFileException : string * int * int * int * int * string * string * string * string -&gt; Microsoft.Build.Exceptions.InvalidProjectFileException" Usage="new Microsoft.Build.Exceptions.InvalidProjectFileException (projectFile, lineNumber, columnNumber, endLineNumber, endColumnNumber, message, errorSubcategory, errorCode, helpKeyword)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="projectFile" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="columnNumber" Type="System.Int32" />
        <Parameter Name="endLineNumber" Type="System.Int32" />
        <Parameter Name="endColumnNumber" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="errorSubcategory" Type="System.String" />
        <Parameter Name="errorCode" Type="System.String" />
        <Parameter Name="helpKeyword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="projectFile">Fichier projet non valide (peut être une chaîne vide).</param>
        <param name="lineNumber">Numéro de ligne non valide dans le projet (a la valeur zéro si non disponible).</param>
        <param name="columnNumber">Numéro de colonne non valide dans le projet (a la valeur zéro si non disponible).</param>
        <param name="endLineNumber">Fin d'une plage de lignes non valides dans le projet (a la valeur zéro si non disponible).</param>
        <param name="endColumnNumber">Fin d'une plage de colonnes non valides dans le projet (a la valeur zéro si non disponible).</param>
        <param name="message">Message d'erreur pour l'exception.</param>
        <param name="errorSubcategory">Sous-catégorie d'erreur qui décrit l'erreur (peut être Null).</param>
        <param name="errorCode">Code d'erreur (peut être Null).</param>
        <param name="helpKeyword">Mot clé d'aide F1 pour l'IDE hôte (peut être Null).</param>
        <summary>Crée une instance de cette exception à l'aide des informations d'erreur enrichies.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur est préférable aux constructeurs de base.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseMessage">
      <MemberSignature Language="C#" Value="public string BaseMessage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BaseMessage" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Exceptions.InvalidProjectFileException.BaseMessage" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseMessage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BaseMessage { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseMessage : string" Usage="Microsoft.Build.Exceptions.InvalidProjectFileException.BaseMessage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le message d'exception, à l'exception du fichier projet.</summary>
        <value>Chaîne du message d'erreur uniquement.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ColumnNumber">
      <MemberSignature Language="C#" Value="public int ColumnNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Exceptions.InvalidProjectFileException.ColumnNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnNumber { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnNumber : int" Usage="Microsoft.Build.Exceptions.InvalidProjectFileException.ColumnNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le numéro de colonne non valide (le cas échéant) dans le projet.</summary>
        <value>Numéro de colonne non valide, ou zéro.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndColumnNumber">
      <MemberSignature Language="C#" Value="public int EndColumnNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EndColumnNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Exceptions.InvalidProjectFileException.EndColumnNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndColumnNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EndColumnNumber { int get(); };" />
      <MemberSignature Language="F#" Value="member this.EndColumnNumber : int" Usage="Microsoft.Build.Exceptions.InvalidProjectFileException.EndColumnNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le dernier numéro de colonne (le cas échéant) d'une plage de colonnes non valides dans le projet.</summary>
        <value>Dernier numéro de colonne non valide, ou zéro.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndLineNumber">
      <MemberSignature Language="C#" Value="public int EndLineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EndLineNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Exceptions.InvalidProjectFileException.EndLineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndLineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int EndLineNumber { int get(); };" />
      <MemberSignature Language="F#" Value="member this.EndLineNumber : int" Usage="Microsoft.Build.Exceptions.InvalidProjectFileException.EndLineNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le dernier numéro de ligne (le cas échéant) d'une plage de lignes non valides dans le projet.</summary>
        <value>Dernier numéro de ligne non valide, ou zéro.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorCode">
      <MemberSignature Language="C#" Value="public string ErrorCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Exceptions.InvalidProjectFileException.ErrorCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorCode As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorCode { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorCode : string" Usage="Microsoft.Build.Exceptions.InvalidProjectFileException.ErrorCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le code d'erreur (le cas échéant) associé au message d'exception.</summary>
        <value>Chaîne de code d'erreur, ou Null.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorSubcategory">
      <MemberSignature Language="C#" Value="public string ErrorSubcategory { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ErrorSubcategory" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Exceptions.InvalidProjectFileException.ErrorSubcategory" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorSubcategory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ErrorSubcategory { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ErrorSubcategory : string" Usage="Microsoft.Build.Exceptions.InvalidProjectFileException.ErrorSubcategory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la sous-catégorie d'erreur (le cas échéant) qui décrit le type de cette erreur.</summary>
        <value>Chaîne de sous-catégorie ou null.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Exceptions.InvalidProjectFileException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="invalidProjectFileException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Informations sur l'erreur.</param>
        <param name="context">Contexte d'erreur.</param>
        <summary>Méthode ISerializable que nous devons substituer puisque Exception implémente cette interface. Si un jour nous ajoutons de nouveaux membres à cette classe, nous devrons mettre ceci à jour.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HasBeenLogged">
      <MemberSignature Language="C#" Value="public bool HasBeenLogged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasBeenLogged" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Exceptions.InvalidProjectFileException.HasBeenLogged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasBeenLogged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasBeenLogged { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasBeenLogged : bool" Usage="Microsoft.Build.Exceptions.InvalidProjectFileException.HasBeenLogged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un indicateur qui détermine si l'exception a déjà été enregistrée. Permet à l'exception d'être enregistrée à l'emplacement le plus approprié tout en continuant d'être propagée.</summary>
        <value>Retourne un indicateur qui détermine si l'exception a déjà été enregistrée.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HelpKeyword">
      <MemberSignature Language="C#" Value="public string HelpKeyword { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HelpKeyword" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Exceptions.InvalidProjectFileException.HelpKeyword" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HelpKeyword As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HelpKeyword { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HelpKeyword : string" Usage="Microsoft.Build.Exceptions.InvalidProjectFileException.HelpKeyword" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le mot clé d'aide F1 (le cas échéant) associé à cette erreur, pour l'IDE hôte.</summary>
        <value>Chaîne de mot clé, ou Null.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Exceptions.InvalidProjectFileException.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumber { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LineNumber : int" Usage="Microsoft.Build.Exceptions.InvalidProjectFileException.LineNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le numéro de ligne non valide (le cas échéant) dans le projet.</summary>
        <value>Numéro de ligne non valide, ou zéro.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Exceptions.InvalidProjectFileException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="Microsoft.Build.Exceptions.InvalidProjectFileException.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le message d'exception, y compris le fichier projet concerné (le cas échéant).</summary>
        <value>Chaîne du message complet.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProjectFile">
      <MemberSignature Language="C#" Value="public string ProjectFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProjectFile" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Exceptions.InvalidProjectFileException.ProjectFile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProjectFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProjectFile { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProjectFile : string" Usage="Microsoft.Build.Exceptions.InvalidProjectFileException.ProjectFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le fichier (le cas échéant) associé à cette exception. Il peut s'agir d'un fichier importé.</summary>
        <value>Chaîne de nom de fichier/chemin d'accès de projet, ou Null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le nom est mal choisi car cela peut être un fichier de cibles, mais le nom a maintenant été fourni.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>