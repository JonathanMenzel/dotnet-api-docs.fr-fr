<Type Name="NativeActivityMetadata" FullName="System.Activities.NativeActivityMetadata">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4750f30568e911b33488d4d76f2ae0e4a3b78d39" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct NativeActivityMetadata" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit NativeActivityMetadata extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Activities.NativeActivityMetadata" />
  <TypeSignature Language="VB.NET" Value="Public Structure NativeActivityMetadata" />
  <TypeSignature Language="C++ CLI" Value="public value class NativeActivityMetadata" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="66960-101">Représente le jeu d'arguments, d'activités enfants, de variables et de délégués qu'un objet <see cref="T:System.Activities.NativeActivity" /> configuré présente à l'environnement d'exécution.</span>
      <span class="sxs-lookup">
        <span data-stu-id="66960-101">Represents the set of arguments, child activities, variables, and delegates that a configured <see cref="T:System.Activities.NativeActivity" /> introduces to the execution environment.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AddArgument">
      <MemberSignature Language="C#" Value="public void AddArgument (System.Activities.RuntimeArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArgument(class System.Activities.RuntimeArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddArgument(System.Activities.RuntimeArgument)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArgument (argument As RuntimeArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArgument(System::Activities::RuntimeArgument ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Activities.RuntimeArgument" />
      </Parameters>
      <Docs>
        <param name="argument">
          <span data-ttu-id="66960-102">Argument à ajouter à la collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-102">The argument to add to the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-103">Ajoute un argument à la collection d’arguments d’une activité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-103">Adds an argument to the collection of arguments of an activity.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddChild">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="66960-104">Ajoute l'activité spécifiée à la liste des métadonnées des activités enfants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-104">Adds the specified activity to the metadata’s list of child activities.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (System.Activities.Activity child);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddChild(class System.Activities.Activity child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddChild(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChild (child As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddChild(System::Activities::Activity ^ child);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="66960-105">Activité à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-105">The activity to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-106">Ajoute l'activité spécifiée à la liste des métadonnées des activités enfants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-106">Adds the specified activity to the metadata’s list of child activities.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66960-107">Une activité ajoutée à l'aide de la méthode <xref:System.Activities.NativeActivityMetadata.AddChild%2A> est une activité enfant que l'activité parent peut planifier directement.</span><span class="sxs-lookup"><span data-stu-id="66960-107">An activity added using <xref:System.Activities.NativeActivityMetadata.AddChild%2A> is a child activity that the parent activity can schedule directly.</span></span> <span data-ttu-id="66960-108">Ces activités doivent être fournies par le consommateur de l'activité.</span><span class="sxs-lookup"><span data-stu-id="66960-108">These activities are to be provided by the consumer of the activity.</span></span> <span data-ttu-id="66960-109">Tel est le cas de la collection <xref:System.Activities.Statements.Sequence.Activities%2A> d'une activité <xref:System.Activities.Statements.Sequence>.</span><span class="sxs-lookup"><span data-stu-id="66960-109">An example of this is the <xref:System.Activities.Statements.Sequence.Activities%2A> collection of a <xref:System.Activities.Statements.Sequence> activity.</span></span> <span data-ttu-id="66960-110">Ces activités (et toutes les activités ajoutées à l'aide des méthodes <xref:System.Activities.NativeActivityMetadata.AddChild%2A> ou <xref:System.Activities.NativeActivityMetadata.AddImportedChild%2A>) ont accès aux variables ajoutées via <xref:System.Activities.NativeActivityMetadata.AddVariable%2A>.</span><span class="sxs-lookup"><span data-stu-id="66960-110">These activities (and any activities they add using <xref:System.Activities.NativeActivityMetadata.AddChild%2A> or <xref:System.Activities.NativeActivityMetadata.AddImportedChild%2A>) have access to variables added through <xref:System.Activities.NativeActivityMetadata.AddVariable%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddChild">
      <MemberSignature Language="C#" Value="public void AddChild (System.Activities.Activity child, object origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddChild(class System.Activities.Activity child, object origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddChild(System.Activities.Activity,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddChild (child As Activity, origin As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddChild(System::Activities::Activity ^ child, System::Object ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Activities.Activity" />
        <Parameter Name="origin" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="66960-111">Activité à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-111">The activity to add.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="66960-112">Origine de l'activité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-112">The origin of the activity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-113">Ajoute l'activité spécifiée à la liste des métadonnées des activités enfants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-113">Adds the specified activity to the metadata’s list of child activities.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDefaultExtensionProvider&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void AddDefaultExtensionProvider&lt;T&gt; (Func&lt;T&gt; extensionProvider) where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDefaultExtensionProvider&lt;class T&gt;(class System.Func`1&lt;!!T&gt; extensionProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddDefaultExtensionProvider``1(System.Func{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddDefaultExtensionProvider(Of T As Class) (extensionProvider As Func(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class void AddDefaultExtensionProvider(Func&lt;T&gt; ^ extensionProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="extensionProvider" Type="System.Func&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="66960-114">Type du fournisseur d’extensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-114">The type of the extension provider.</span>
          </span>
        </typeparam>
        <param name="extensionProvider">
          <span data-ttu-id="66960-115">Fonction qui retourne l’extension.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-115">The function that returns the extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-116">Ajoute le fournisseur d’extensions spécifié à la collection de fournisseurs d’extensions par défaut pour l’activité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-116">Adds the specified extension provider to the collection of default extension providers for the activity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66960-117">Si l'hôte ne fournit pas une extension de type `T`, il appartient au fournisseur d'extensions d'en fournir une.</span><span class="sxs-lookup"><span data-stu-id="66960-117">If the host does not provide an extension of type `T`, then this extension provider is evaluated to provide one.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddDelegate">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="66960-118">Ajoute le délégué spécifié à la liste de métadonnées des délégués.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-118">Adds the specified delegate to the metadata’s list of delegates.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddDelegate">
      <MemberSignature Language="C#" Value="public void AddDelegate (System.Activities.ActivityDelegate activityDelegate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDelegate(class System.Activities.ActivityDelegate activityDelegate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddDelegate(System.Activities.ActivityDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddDelegate(System::Activities::ActivityDelegate ^ activityDelegate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityDelegate" Type="System.Activities.ActivityDelegate" />
      </Parameters>
      <Docs>
        <param name="activityDelegate">
          <span data-ttu-id="66960-119">Délégué à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-119">The delegate to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-120">Ajoute le délégué spécifié à la liste de métadonnées des délégués.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-120">Adds the specified delegate to the metadata’s list of delegates.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDelegate">
      <MemberSignature Language="C#" Value="public void AddDelegate (System.Activities.ActivityDelegate activityDelegate, object origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDelegate(class System.Activities.ActivityDelegate activityDelegate, object origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddDelegate(System.Activities.ActivityDelegate,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddDelegate(System::Activities::ActivityDelegate ^ activityDelegate, System::Object ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityDelegate" Type="System.Activities.ActivityDelegate" />
        <Parameter Name="origin" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="activityDelegate">
          <span data-ttu-id="66960-121">Délégué à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-121">The delegate to add.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="66960-122">Origine du délégué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-122">The origin of the delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-123">Ajoute le délégué spécifié à la liste de métadonnées des délégués.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-123">Adds the specified delegate to the metadata’s list of delegates.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImplementationChild">
      <MemberSignature Language="C#" Value="public void AddImplementationChild (System.Activities.Activity implementationChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImplementationChild(class System.Activities.Activity implementationChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddImplementationChild(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImplementationChild (implementationChild As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImplementationChild(System::Activities::Activity ^ implementationChild);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementationChild" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="implementationChild">
          <span data-ttu-id="66960-124">Activité à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-124">The activity to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-125">Ajoute l'activité spécifiée à la liste des métadonnées des activités d'implémentation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-125">Adds the specified activity to the metadata’s list of implementation activities.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66960-126">Une activité ajoutée à l'aide de la méthode <xref:System.Activities.NativeActivityMetadata.AddImplementationChild%2A> est une activité enfant que l'activité parent peut planifier directement.</span><span class="sxs-lookup"><span data-stu-id="66960-126">An activity added using <xref:System.Activities.NativeActivityMetadata.AddImplementationChild%2A> is a child activity that the parent activity can schedule directly.</span></span>  <span data-ttu-id="66960-127">Ces activités sont les détails d'implémentation de l'activité.</span><span class="sxs-lookup"><span data-stu-id="66960-127">These activities are implementation details of the activity.</span></span> <span data-ttu-id="66960-128">Ces activités (et toutes les activités ajoutées par les méthodes <xref:System.Activities.NativeActivityMetadata.AddChild%2A> ou <xref:System.Activities.NativeActivityMetadata.AddImportedChild%2A>) ont accès aux arguments de l'activité ainsi qu'aux variables ajoutées via <xref:System.Activities.NativeActivityMetadata.AddImplementationVariable%2A>.</span><span class="sxs-lookup"><span data-stu-id="66960-128">These activities (and any activities they add using <xref:System.Activities.NativeActivityMetadata.AddChild%2A> or <xref:System.Activities.NativeActivityMetadata.AddImportedChild%2A>) have access to this activity’s arguments as well as variables added through <xref:System.Activities.NativeActivityMetadata.AddImplementationVariable%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImplementationDelegate">
      <MemberSignature Language="C#" Value="public void AddImplementationDelegate (System.Activities.ActivityDelegate implementationDelegate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImplementationDelegate(class System.Activities.ActivityDelegate implementationDelegate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddImplementationDelegate(System.Activities.ActivityDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImplementationDelegate (implementationDelegate As ActivityDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImplementationDelegate(System::Activities::ActivityDelegate ^ implementationDelegate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementationDelegate" Type="System.Activities.ActivityDelegate" />
      </Parameters>
      <Docs>
        <param name="implementationDelegate">
          <span data-ttu-id="66960-129">Délégué à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-129">The delegate to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-130">Ajoute le délégué spécifié à la liste des métadonnées des délégués d'implémentation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-130">Adds the specified delegate to the metadata’s list of implementation delegates.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImplementationVariable">
      <MemberSignature Language="C#" Value="public void AddImplementationVariable (System.Activities.Variable implementationVariable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImplementationVariable(class System.Activities.Variable implementationVariable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddImplementationVariable(System.Activities.Variable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImplementationVariable (implementationVariable As Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImplementationVariable(System::Activities::Variable ^ implementationVariable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementationVariable" Type="System.Activities.Variable" />
      </Parameters>
      <Docs>
        <param name="implementationVariable">
          <span data-ttu-id="66960-131">Variable à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-131">The variable to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-132">Ajoute la variable spécifiée à la collection des métadonnées des variables d’implémentation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-132">Adds the specified variable to the metadata’s collection of implementation variables.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddImportedChild">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="66960-133">Ajoute l'activité spécifiée à la liste des métadonnées des activités enfants importées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-133">Adds the specified activity to the metadata’s list of imported child activities.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddImportedChild">
      <MemberSignature Language="C#" Value="public void AddImportedChild (System.Activities.Activity importedChild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImportedChild(class System.Activities.Activity importedChild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddImportedChild(System.Activities.Activity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImportedChild (importedChild As Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImportedChild(System::Activities::Activity ^ importedChild);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedChild" Type="System.Activities.Activity" />
      </Parameters>
      <Docs>
        <param name="importedChild">
          <span data-ttu-id="66960-134">Activité à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-134">The activity to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-135">Ajoute l'activité spécifiée à la liste des métadonnées des activités enfants importées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-135">Adds the specified activity to the metadata’s list of imported child activities.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66960-136">Une activité enfant importée est une activité enfant que l'activité parent ne planifie pas directement.</span><span class="sxs-lookup"><span data-stu-id="66960-136">An imported child activity is a child activity that the parent activity does not schedule directly.</span></span> <span data-ttu-id="66960-137">Le parent utilise alors cette activité pour configurer une autre activité enfant.</span><span class="sxs-lookup"><span data-stu-id="66960-137">Rather, then parent uses this activity to configure some other child activity.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImportedChild">
      <MemberSignature Language="C#" Value="public void AddImportedChild (System.Activities.Activity importedChild, object origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImportedChild(class System.Activities.Activity importedChild, object origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddImportedChild(System.Activities.Activity,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImportedChild (importedChild As Activity, origin As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImportedChild(System::Activities::Activity ^ importedChild, System::Object ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedChild" Type="System.Activities.Activity" />
        <Parameter Name="origin" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="importedChild">
          <span data-ttu-id="66960-138">Activité à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-138">The activity to add.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="66960-139">Origine de l'activité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-139">The origin of the activity.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-140">Ajoute l'activité spécifiée à la liste des métadonnées des activités enfants importées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-140">Adds the specified activity to the metadata’s list of imported child activities.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddImportedDelegate">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="66960-141">Ajoute le délégué spécifié à la liste des métadonnées des délégués importés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-141">Adds the specified delegate to the metadata’s list of imported delegates.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddImportedDelegate">
      <MemberSignature Language="C#" Value="public void AddImportedDelegate (System.Activities.ActivityDelegate importedDelegate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImportedDelegate(class System.Activities.ActivityDelegate importedDelegate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImportedDelegate (importedDelegate As ActivityDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImportedDelegate(System::Activities::ActivityDelegate ^ importedDelegate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedDelegate" Type="System.Activities.ActivityDelegate" />
      </Parameters>
      <Docs>
        <param name="importedDelegate">
          <span data-ttu-id="66960-142">Délégué à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-142">The delegate to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-143">Ajoute le délégué spécifié à la liste des métadonnées des délégués importés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-143">Adds the specified delegate to the metadata’s list of imported delegates.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddImportedDelegate">
      <MemberSignature Language="C#" Value="public void AddImportedDelegate (System.Activities.ActivityDelegate importedDelegate, object origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddImportedDelegate(class System.Activities.ActivityDelegate importedDelegate, object origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddImportedDelegate(System.Activities.ActivityDelegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddImportedDelegate (importedDelegate As ActivityDelegate, origin As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddImportedDelegate(System::Activities::ActivityDelegate ^ importedDelegate, System::Object ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedDelegate" Type="System.Activities.ActivityDelegate" />
        <Parameter Name="origin" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="importedDelegate">
          <span data-ttu-id="66960-144">Délégué à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-144">The delegate to add.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="66960-145">Origine du délégué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-145">The origin of the delegate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-146">Ajoute le délégué spécifié à la liste des métadonnées des délégués importés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-146">Adds the specified delegate to the metadata’s list of imported delegates.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddValidationError">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="66960-147">Ajoute une erreur de validation à la collection des métadonnées des erreurs de validation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-147">Adds a validation error to the metadata’ collection of validation errors.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="66960-148"> [Validation basée sur le Code impératif](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md).</span><span class="sxs-lookup"><span data-stu-id="66960-148"> [Imperative Code-Based Validation](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddValidationError">
      <MemberSignature Language="C#" Value="public void AddValidationError (System.Activities.Validation.ValidationError validationError);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValidationError(class System.Activities.Validation.ValidationError validationError) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddValidationError(System.Activities.Validation.ValidationError)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValidationError(System::Activities::Validation::ValidationError ^ validationError);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationError" Type="System.Activities.Validation.ValidationError" />
      </Parameters>
      <Docs>
        <param name="validationError">
          <span data-ttu-id="66960-149">Erreur de validation à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-149">The validation error to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-150">Ajoute l’erreur de validation spécifiée à la collection des métadonnées des erreurs de validation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-150">Adds the specified validation error to the metadata’s collection of validation errors.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="66960-151"> [Validation basée sur le Code impératif](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md).</span><span class="sxs-lookup"><span data-stu-id="66960-151"> [Imperative Code-Based Validation](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddValidationError">
      <MemberSignature Language="C#" Value="public void AddValidationError (string validationErrorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddValidationError(string validationErrorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddValidationError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddValidationError (validationErrorMessage As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddValidationError(System::String ^ validationErrorMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationErrorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="validationErrorMessage">
          <span data-ttu-id="66960-152">Message qui décrit l’erreur de validation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-152">A message that describes the validation error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-153">Ajoute une erreur de validation à la collection des métadonnées des erreurs de validation à l’aide de la description spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-153">Adds a validation error to the metadata’s collection of validation errors using the specified description.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[crdefault](~/includes/crdefault-md.md)]<span data-ttu-id="66960-154"> [Validation basée sur le Code impératif](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md).</span><span class="sxs-lookup"><span data-stu-id="66960-154"> [Imperative Code-Based Validation](~/docs/framework/windows-workflow-foundation/imperative-code-based-validation.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddVariable">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="66960-155">Ajoute la variable spécifiée à la collection des métadonnées des variables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-155">Adds the specified variable to the metadata’s collection of variables.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddVariable">
      <MemberSignature Language="C#" Value="public void AddVariable (System.Activities.Variable variable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddVariable(class System.Activities.Variable variable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddVariable(System.Activities.Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddVariable(System::Activities::Variable ^ variable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
      </Parameters>
      <Docs>
        <param name="variable">
          <span data-ttu-id="66960-156">Variable à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-156">The variable to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-157">Ajoute la variable spécifiée à la collection des métadonnées des variables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-157">Adds the specified variable to the metadata’s collection of variables.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66960-158">Les variables ajoutées à l'aide de cette méthode sont considérées comme partie de la surface publiquement configurable de l'activité, autrement dit, elles doivent être fournies par le consommateur de l'activité.</span><span class="sxs-lookup"><span data-stu-id="66960-158">Variables added using this method are considered part of the activity’s publicly configurable surface, that is, they are to be provided by the consumer of the activity.</span></span> <span data-ttu-id="66960-159">L'implémentation d'une activité ne peut pas accéder aux variables ajoutées à l'aide de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="66960-159">An activity’s implementation cannot access variables added using this method.</span></span> <span data-ttu-id="66960-160">Les activités ajoutées via les méthodes <xref:System.Activities.NativeActivityMetadata.AddImportedChild%2A> ou <xref:System.Activities.NativeActivityMetadata.AddChild%2A> (et n'importe laquelle de leurs activités enfants de non-implémentation) peuvent accéder aux variables ajoutées à l'aide de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="66960-160">Activities added through <xref:System.Activities.NativeActivityMetadata.AddImportedChild%2A> or <xref:System.Activities.NativeActivityMetadata.AddChild%2A> (and any of their non-implementation child activities) can access variables added using this method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddVariable">
      <MemberSignature Language="C#" Value="public void AddVariable (System.Activities.Variable variable, object origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddVariable(class System.Activities.Variable variable, object origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.AddVariable(System.Activities.Variable,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddVariable(System::Activities::Variable ^ variable, System::Object ^ origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variable" Type="System.Activities.Variable" />
        <Parameter Name="origin" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="variable">
          <span data-ttu-id="66960-161">Variable à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-161">The variable to add.</span>
          </span>
        </param>
        <param name="origin">
          <span data-ttu-id="66960-162">Origine de la variable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-162">The origin of the variable.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-163">Ajoute la variable spécifiée à la collection des métadonnées des variables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-163">Adds the specified variable to the metadata’s collection of variables.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Bind">
      <MemberSignature Language="C#" Value="public void Bind (System.Activities.Argument binding, System.Activities.RuntimeArgument argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Bind(class System.Activities.Argument binding, class System.Activities.RuntimeArgument argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.Bind(System.Activities.Argument,System.Activities.RuntimeArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Bind(System::Activities::Argument ^ binding, System::Activities::RuntimeArgument ^ argument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.Activities.Argument" />
        <Parameter Name="argument" Type="System.Activities.RuntimeArgument" />
      </Parameters>
      <Docs>
        <param name="binding">
          <span data-ttu-id="66960-164">
            <see cref="T:System.Activities.Argument" /> à lier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-164">The <see cref="T:System.Activities.Argument" /> to bind.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="66960-165">
            <see cref="T:System.Activities.RuntimeArgument" /> à lier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-165">The <see cref="T:System.Activities.RuntimeArgument" /> to bind.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-166">Lie l'objet <see cref="T:System.Activities.Argument" /> spécifié à l'objet <see cref="T:System.Activities.RuntimeArgument" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-166">Binds the specified <see cref="T:System.Activities.Argument" /> to the specified <see cref="T:System.Activities.RuntimeArgument" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Environment">
      <MemberSignature Language="C#" Value="public System.Activities.LocationReferenceEnvironment Environment { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Activities.LocationReferenceEnvironment Environment" />
      <MemberSignature Language="DocId" Value="P:System.Activities.NativeActivityMetadata.Environment" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Environment As LocationReferenceEnvironment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Activities::LocationReferenceEnvironment ^ Environment { System::Activities::LocationReferenceEnvironment ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Activities.LocationReferenceEnvironment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66960-167">Obtient l'environnement de référence <see cref="T:System.Activities.LocationReferenceEnvironment" /> des arguments, variables, arguments délégués ou symboles de l'activité, introduits par un objet <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-167">Gets the activity’s <see cref="T:System.Activities.LocationReferenceEnvironment" /> of arguments, variables, delegate arguments, or symbols introduced by a <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66960-168">Environnement des références d'emplacement des arguments, variables, arguments délégués ou symboles introduits par un objet <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-168">The activity’s location reference environment of arguments, variables, delegate arguments, or symbols introduced by a <see cref="T:System.Activities.Hosting.SymbolResolver" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="66960-169">Objet à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-169">The object to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-170">Détermine si l'objet spécifié est égal à l'instance des métadonnées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-170">Determines whether the specified object is equal to this metadata instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66960-171">
            <see langword="true" /> si l'objet spécifié équivaut à cette instance de métadonnées ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-171">
              <see langword="true" /> if the specified object is equal to this metadata instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetArgumentsWithReflection">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.RuntimeArgument&gt; GetArgumentsWithReflection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.RuntimeArgument&gt; GetArgumentsWithReflection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.GetArgumentsWithReflection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetArgumentsWithReflection () As Collection(Of RuntimeArgument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::Activities::RuntimeArgument ^&gt; ^ GetArgumentsWithReflection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.RuntimeArgument&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="66960-172">Retourne une collection d’arguments obtenue à l’aide de la réflexion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-172">Returns a collection of arguments obtained by using reflection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66960-173">Collection d’arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-173">A collection of arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66960-174">Cette méthode utilise un objet <xref:System.ComponentModel.TypeDescriptor> d'une activité pour examiner toutes les propriétés publiques de type <xref:System.Activities.Argument> et les retourne dans une collection.</span><span class="sxs-lookup"><span data-stu-id="66960-174">This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Argument> and returns them in a collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetChildrenWithReflection">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt; GetChildrenWithReflection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Activity&gt; GetChildrenWithReflection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.GetChildrenWithReflection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildrenWithReflection () As Collection(Of Activity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::Activities::Activity ^&gt; ^ GetChildrenWithReflection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="66960-175">Retourne une collection d’activités enfants à l’aide de la réflexion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-175">Returns a collection of child activities using reflection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66960-176">Collection d’activités enfants.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-176">A collection of child activities.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66960-177">Cette méthode utilise l’activité <xref:System.ComponentModel.TypeDescriptor> pour examiner toutes les propriétés publiques de type <xref:System.Activities.Activity>, ou `IList<T>` ou `ICollection<T>` où `T` dérive <xref:System.Activities.Activity>et les retourne dans une collection.</span><span class="sxs-lookup"><span data-stu-id="66960-177">This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Activity>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.Activity>, and returns them in a collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDelegatesWithReflection">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt; GetDelegatesWithReflection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.ActivityDelegate&gt; GetDelegatesWithReflection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.GetDelegatesWithReflection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDelegatesWithReflection () As Collection(Of ActivityDelegate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::Activities::ActivityDelegate ^&gt; ^ GetDelegatesWithReflection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="66960-178">Retourne une collection de délégués à l'aide de la réflexion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-178">Returns a collection of delegates using reflection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66960-179">Collection de délégués.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-179">A collection of delegates.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66960-180">Cette méthode utilise l’activité <xref:System.ComponentModel.TypeDescriptor> pour examiner toutes les propriétés publiques de type <xref:System.Activities.ActivityDelegate>, ou `IList<T>` ou `ICollection<T>` où `T` dérive <xref:System.Activities.ActivityDelegate>et les retourne dans une collection.</span><span class="sxs-lookup"><span data-stu-id="66960-180">This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.ActivityDelegate>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.ActivityDelegate>, and returns them in a collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="66960-181">Retourne un identificateur unique de l'instance de métadonnées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-181">Returns a unique identifier for this metadata instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66960-182">Entier qui identifie de façon unique l'instance de métadonnées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-182">An integer that uniquely identifies this metadata instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVariablesWithReflection">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt; GetVariablesWithReflection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Variable&gt; GetVariablesWithReflection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.GetVariablesWithReflection" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVariablesWithReflection () As Collection(Of Variable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ObjectModel::Collection&lt;System::Activities::Variable ^&gt; ^ GetVariablesWithReflection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="66960-183">Retourne une collection de variables à l’aide de la réflexion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-183">Returns a collection of variables using reflection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66960-184">Collection de variables.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-184">A collection of variables.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66960-185">Cette méthode utilise l’activité <xref:System.ComponentModel.TypeDescriptor> pour examiner toutes les propriétés publiques de type <xref:System.Activities.Variable>, ou `IList<T>` ou `ICollection<T>` où `T` dérive <xref:System.Activities.Variable>et les retourne dans une collection.</span><span class="sxs-lookup"><span data-stu-id="66960-185">This method uses an activity’s <xref:System.ComponentModel.TypeDescriptor> to examine all public properties of type <xref:System.Activities.Variable>, or `IList<T>` or `ICollection<T>` where `T` derives from <xref:System.Activities.Variable>, and returns them in a collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasViolations">
      <MemberSignature Language="C#" Value="public bool HasViolations { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasViolations" />
      <MemberSignature Language="DocId" Value="P:System.Activities.NativeActivityMetadata.HasViolations" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasViolations As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasViolations { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="66960-186">Obtient une valeur qui indique si des erreurs de validation se sont produites dans les métadonnées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-186">Gets a value that indicates whether there are any validation errors in the metadata.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="66960-187">
            <see langword="true" /> s'il existe des erreurs de validation ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-187">
              <see langword="true" /> if validation errors are present; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Activities.NativeActivityMetadata left, System.Activities.NativeActivityMetadata right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Activities.NativeActivityMetadata left, valuetype System.Activities.NativeActivityMetadata right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.op_Equality(System.Activities.NativeActivityMetadata,System.Activities.NativeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As NativeActivityMetadata, right As NativeActivityMetadata) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Activities::NativeActivityMetadata left, System::Activities::NativeActivityMetadata right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Activities.NativeActivityMetadata" />
        <Parameter Name="right" Type="System.Activities.NativeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="66960-188">Premier élément à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-188">The first item to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="66960-189">Deuxième élément à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-189">The second item to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-190">Retourne une valeur qui indique si les deux instances de métadonnées spécifiées sont égales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-190">Returns a value that indicates whether the two specified metadata instances are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66960-191">
            <see langword="true" /> si les deux éléments sont égaux ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-191">
              <see langword="true" /> if the two items are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Activities.NativeActivityMetadata left, System.Activities.NativeActivityMetadata right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Activities.NativeActivityMetadata left, valuetype System.Activities.NativeActivityMetadata right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.op_Inequality(System.Activities.NativeActivityMetadata,System.Activities.NativeActivityMetadata)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As NativeActivityMetadata, right As NativeActivityMetadata) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Activities::NativeActivityMetadata left, System::Activities::NativeActivityMetadata right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Activities.NativeActivityMetadata" />
        <Parameter Name="right" Type="System.Activities.NativeActivityMetadata" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="66960-192">Premier élément à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-192">The first item to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="66960-193">Deuxième élément à comparer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-193">The second item to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-194">Retourne une valeur qui indique si les deux instances de métadonnées spécifiées ne sont pas égales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-194">Returns a value that indicates whether the two specified metadata instances are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="66960-195">
            <see langword="true" /> si les deux éléments ne sont pas égaux ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-195">
              <see langword="true" /> if the two items are not equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireExtension">
      <MemberSignature Language="C#" Value="public void RequireExtension (Type extensionType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequireExtension(class System.Type extensionType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.RequireExtension(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RequireExtension (extensionType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RequireExtension(Type ^ extensionType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extensionType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="extensionType">
          <span data-ttu-id="66960-196">Type de l’extension.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-196">The type of the extension.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-197">Spécifie que l’activité requiert pendant l’exécution une extension du type spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-197">Specifies that the activity requires an extension of the specified type at runtime.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66960-198">Si l’hôte ne peut pas fournir une extension du type spécifié, la validation échoue.</span><span class="sxs-lookup"><span data-stu-id="66960-198">If the host fails to provide an extension of the specified type, validation fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequireExtension&lt;T&gt;">
      <MemberSignature Language="C#" Value="public void RequireExtension&lt;T&gt; () where T : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RequireExtension&lt;class T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.RequireExtension``1" />
      <MemberSignature Language="VB.NET" Value="Public Sub RequireExtension(Of T As Class) ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; where T : class void RequireExtension();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="66960-199">Type de l’extension.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-199">The type of the extension.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="66960-200">Spécifie que l’activité requiert pendant l’exécution une extension du type générique spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-200">Specifies that the activity requires an extension of the specified generic type at runtime.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66960-201">Si l’hôte ne peut pas fournir une extension du type spécifié, la validation échoue.</span><span class="sxs-lookup"><span data-stu-id="66960-201">If the host fails to provide an extension of the specified type, validation fails.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetArgumentsCollection">
      <MemberSignature Language="C#" Value="public void SetArgumentsCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.RuntimeArgument&gt; arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetArgumentsCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.RuntimeArgument&gt; arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetArgumentsCollection(System.Collections.ObjectModel.Collection{System.Activities.RuntimeArgument})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetArgumentsCollection (arguments As Collection(Of RuntimeArgument))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetArgumentsCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::RuntimeArgument ^&gt; ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.RuntimeArgument&gt;" />
      </Parameters>
      <Docs>
        <param name="arguments">
          <span data-ttu-id="66960-202">Arguments à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-202">The arguments to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-203">Ajoute la collection spécifiée d’arguments aux arguments de l’activité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-203">Adds the specified collection of arguments to the activity’s arguments.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetChildrenCollection">
      <MemberSignature Language="C#" Value="public void SetChildrenCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt; children);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetChildrenCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Activity&gt; children) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetChildrenCollection (children As Collection(Of Activity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetChildrenCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::Activity ^&gt; ^ children);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="children" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="children">
          <span data-ttu-id="66960-204">Activités à ajouter</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-204">The activities to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-205">Ajoute la collection spécifiée comme activités enfants de l’activité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-205">Adds the specified collection as child activities of the activity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66960-206">Il s'agit de l'équivalent de l'appel de la méthode <xref:System.Activities.NativeActivityMetadata.AddChild%2A> pour chaque élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="66960-206">This is the equivalent of calling <xref:System.Activities.NativeActivityMetadata.AddChild%2A> for each item in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDelegatesCollection">
      <MemberSignature Language="C#" Value="public void SetDelegatesCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt; delegates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDelegatesCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.ActivityDelegate&gt; delegates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDelegatesCollection (delegates As Collection(Of ActivityDelegate))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDelegatesCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::ActivityDelegate ^&gt; ^ delegates);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegates" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt;" />
      </Parameters>
      <Docs>
        <param name="delegates">
          <span data-ttu-id="66960-207">Délégués à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-207">The delegates to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-208">Ajoute la collection spécifiée comme délégués de l’activité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-208">Adds the specified collection as delegates of the activity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66960-209">Il s'agit de l'équivalent de l'appel de la méthode <xref:System.Activities.NativeActivityMetadata.AddDelegate%2A> pour chaque élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="66960-209">This is the equivalent of calling <xref:System.Activities.NativeActivityMetadata.AddDelegate%2A> for each item in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImplementationChildrenCollection">
      <MemberSignature Language="C#" Value="public void SetImplementationChildrenCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt; implementationChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImplementationChildrenCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Activity&gt; implementationChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetImplementationChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetImplementationChildrenCollection (implementationChildren As Collection(Of Activity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImplementationChildrenCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::Activity ^&gt; ^ implementationChildren);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementationChildren" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="implementationChildren">
          <span data-ttu-id="66960-210">Activités à ajouter</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-210">The activities to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-211">Ajoute la collection spécifiée comme activités enfants d’implémentation de l’activité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-211">Adds the specified collection as implementation child activities of the activity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66960-212">Il s'agit de l'équivalent de l'appel de la méthode <xref:System.Activities.NativeActivityMetadata.AddImplementationChild%2A> pour chaque élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="66960-212">This is the equivalent of calling <xref:System.Activities.NativeActivityMetadata.AddImplementationChild%2A> for each item in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImplementationDelegatesCollection">
      <MemberSignature Language="C#" Value="public void SetImplementationDelegatesCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt; implementationDelegates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImplementationDelegatesCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.ActivityDelegate&gt; implementationDelegates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetImplementationDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetImplementationDelegatesCollection (implementationDelegates As Collection(Of ActivityDelegate))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImplementationDelegatesCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::ActivityDelegate ^&gt; ^ implementationDelegates);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementationDelegates" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt;" />
      </Parameters>
      <Docs>
        <param name="implementationDelegates">
          <span data-ttu-id="66960-213">Délégués à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-213">The delegates to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-214">Ajoute la collection spécifiée comme délégués d’implémentation de l’activité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-214">Adds the specified collection as implementation delegates of the activity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66960-215">Il s'agit de l'équivalent de l'appel de la méthode <xref:System.Activities.NativeActivityMetadata.AddImplementationDelegate%2A> pour chaque élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="66960-215">This is the equivalent of calling <xref:System.Activities.NativeActivityMetadata.AddImplementationDelegate%2A> for each item in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImplementationVariablesCollection">
      <MemberSignature Language="C#" Value="public void SetImplementationVariablesCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt; implementationVariables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImplementationVariablesCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Variable&gt; implementationVariables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetImplementationVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetImplementationVariablesCollection (implementationVariables As Collection(Of Variable))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImplementationVariablesCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::Variable ^&gt; ^ implementationVariables);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="implementationVariables" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt;" />
      </Parameters>
      <Docs>
        <param name="implementationVariables">
          <span data-ttu-id="66960-216">Délégués à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-216">The delegates to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-217">Ajoute la collection spécifiée comme variables d’implémentation de l’activité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-217">Adds the specified collection as implementation variables of the activity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66960-218">Il s'agit de l'équivalent de l'appel de la méthode <xref:System.Activities.NativeActivityMetadata.AddImplementationVariable%2A> pour chaque élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="66960-218">This is the equivalent of calling <xref:System.Activities.NativeActivityMetadata.AddImplementationVariable%2A> for each item in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImportedChildrenCollection">
      <MemberSignature Language="C#" Value="public void SetImportedChildrenCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt; importedChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImportedChildrenCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Activity&gt; importedChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetImportedChildrenCollection(System.Collections.ObjectModel.Collection{System.Activities.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetImportedChildrenCollection (importedChildren As Collection(Of Activity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImportedChildrenCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::Activity ^&gt; ^ importedChildren);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedChildren" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="importedChildren">
          <span data-ttu-id="66960-219">Activités à ajouter</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-219">The activities to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-220">Ajoute la collection spécifiée comme activités enfants importées de l’activité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-220">Adds the specified collection as imported child activities of the activity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66960-221">Il s'agit de l'équivalent de l'appel de la méthode <xref:System.Activities.NativeActivityMetadata.AddImportedChild%2A> pour chaque élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="66960-221">This is the equivalent of calling <xref:System.Activities.NativeActivityMetadata.AddImportedChild%2A> for each item in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetImportedDelegatesCollection">
      <MemberSignature Language="C#" Value="public void SetImportedDelegatesCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt; importedDelegates);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImportedDelegatesCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.ActivityDelegate&gt; importedDelegates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetImportedDelegatesCollection(System.Collections.ObjectModel.Collection{System.Activities.ActivityDelegate})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetImportedDelegatesCollection (importedDelegates As Collection(Of ActivityDelegate))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImportedDelegatesCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::ActivityDelegate ^&gt; ^ importedDelegates);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="importedDelegates" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.ActivityDelegate&gt;" />
      </Parameters>
      <Docs>
        <param name="importedDelegates">
          <span data-ttu-id="66960-222">Délégués à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-222">The delegates to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-223">Ajoute la collection spécifiée comme délégués importés de l’activité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-223">Adds the specified collection as imported delegates of the activity.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="66960-224">Il s'agit de l'équivalent de l'appel de la méthode <xref:System.Activities.NativeActivityMetadata.AddImportedDelegate%2A> pour chaque élément de la collection.</span><span class="sxs-lookup"><span data-stu-id="66960-224">This is the equivalent of calling <xref:System.Activities.NativeActivityMetadata.AddImportedDelegate%2A> for each item in the collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetValidationErrorsCollection">
      <MemberSignature Language="C#" Value="public void SetValidationErrorsCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.Validation.ValidationError&gt; validationErrors);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValidationErrorsCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Validation.ValidationError&gt; validationErrors) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetValidationErrorsCollection(System.Collections.ObjectModel.Collection{System.Activities.Validation.ValidationError})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValidationErrorsCollection (validationErrors As Collection(Of ValidationError))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValidationErrorsCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::Validation::ValidationError ^&gt; ^ validationErrors);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="validationErrors" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.Validation.ValidationError&gt;" />
      </Parameters>
      <Docs>
        <param name="validationErrors">
          <span data-ttu-id="66960-225">Erreurs de validation à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-225">The validation errors to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-226">Ajoute la collection spécifiée d’erreurs de validation à la collection des métadonnées des erreurs de validation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-226">Adds the specified collection of validation errors to the metadata’s collection of validation errors.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetVariablesCollection">
      <MemberSignature Language="C#" Value="public void SetVariablesCollection (System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt; variables);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetVariablesCollection(class System.Collections.ObjectModel.Collection`1&lt;class System.Activities.Variable&gt; variables) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.NativeActivityMetadata.SetVariablesCollection(System.Collections.ObjectModel.Collection{System.Activities.Variable})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetVariablesCollection (variables As Collection(Of Variable))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetVariablesCollection(System::Collections::ObjectModel::Collection&lt;System::Activities::Variable ^&gt; ^ variables);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="variables" Type="System.Collections.ObjectModel.Collection&lt;System.Activities.Variable&gt;" />
      </Parameters>
      <Docs>
        <param name="variables">
          <span data-ttu-id="66960-227">Variables à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-227">The variables to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="66960-228">Ajoute la collection spécifiée de variables aux variables de l’activité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="66960-228">Adds the specified collection of variables to the activity’s variables.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>