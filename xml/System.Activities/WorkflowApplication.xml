<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WorkflowApplication.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae25fbb5-14a8-44f2-90c2-3c6d6fcaae7f535887d666f18d24fe0c2433f2c0e212e3219233.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">535887d666f18d24fe0c2433f2c0e212e3219233</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b899505ed6d42225f2b3c9150bfdc080d0d1f9b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/28/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Provides a host for a single instance of a workflow.</source>
          <target state="translated">Fournit un hôte pour une instance unique d'un flux de travail.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>The <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> class provides a host for a single workflow instance.</source>
          <target state="translated">La classe <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> fournit un hôte pour une instance de flux de travail unique.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>It is a proxy to the actual workflow instance that is managed by the workflow runtime.</source>
          <target state="translated">Il s'agit d'un proxy à l'instance de flux de travail gérée par l'exécution du flux de travail.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>Users of <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> can instruct the workflow runtime to perform actions on a workflow instance by calling the appropriate methods on a <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> object.</source>
          <target state="translated">Les utilisateurs de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> peuvent indiquer à l'exécution du flux de travail d'effectuer des actions sur une instance de flux de travail en appelant les méthodes appropriées sur un objet <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>If a requested action is not valid, an exception is thrown.</source>
          <target state="translated">Si une action demandée n'est pas valide, une exception est levée.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>Using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> you can perform the following tasks:</source>
          <target state="translated">Vous pouvez effectuer les tâches suivantes à l'aide de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> :</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>Create a new workflow instance, or load a workflow instance from an instance store.</source>
          <target state="translated">Créer une instance de flux de travail ou charger une instance de flux de travail à partir d'un magasin d'instances.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>Provide extensions to be used by activities within a workflow instance.</source>
          <target state="translated">Fournir les extensions à utiliser par les activités dans une instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>Control the execution of a workflow instance.</source>
          <target state="translated">Contrôler l'exécution de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>Resume a bookmark created by an activity within a workflow instance.</source>
          <target state="translated">Reprendre un signet créé par une activité dans une instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>Persist or unload a workflow instance.</source>
          <target state="translated">Rendre persistante ou décharger une instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>Be notified of workflow instance lifecycle events.</source>
          <target state="translated">Être informé des événements de cycle de vie de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>The following example hosts a workflow using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</source>
          <target state="translated">L'exemple suivant héberge un workflow à l'aide de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>A <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</source>
          <target state="translated">Une instance de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> est construite à l'aide de la définition de flux de travail spécifiée, les événements de cycle de vie souhaités du flux de travail sont gérés et le flux de travail est appelé au moyen d'un appel à <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>When the workflow is completed, the following output is displayed to the console.</source>
          <target state="translated">Lorsque le flux de travail est terminé, la sortie suivante s'affiche sur la console.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Activities.WorkflowApplication" /&gt;</ph> class.</source>
          <target state="translated">Crée une instance de la classe <ph id="ph1">&lt;see cref="T:System.Activities.WorkflowApplication" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)">
          <source>The workflow definition.</source>
          <target state="translated">Définition de flux de travail.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Activities.WorkflowApplication" /&gt;</ph> class with the specified workflow definition.</source>
          <target state="translated">Initialise une instance de la classe <ph id="ph1">&lt;see cref="T:System.Activities.WorkflowApplication" /&gt;</ph> avec la définition de flux de travail spécifiée.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)">
          <source>The following example hosts a workflow using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</source>
          <target state="translated">L'exemple suivant héberge un workflow à l'aide de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)">
          <source>A <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance is constructed using using a workflow definition consisting of a single <ph id="ph2">`DiceRoll`</ph> activity.</source>
          <target state="translated">Une instance de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> est construite à l'aide d'une définition de workflow qui se compose d'une activité <ph id="ph2">`DiceRoll`</ph> unique.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)">
          <source>The <ph id="ph1">`DiceRoll`</ph> activity has two output arguments that represent the results of the dice roll operation.</source>
          <target state="translated">L'activité <ph id="ph1">`DiceRoll`</ph> a deux arguments de sortie qui représentent les résultats du jet de dés.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity)">
          <source>When the workflow completes, the outputs are retrieved in the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handler, and the following output is displayed to the console.</source>
          <target state="translated">Lorsque le flux de travail se termine, les sorties sont récupérées dans le gestionnaire d'événements <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> et la sortie suivante s'affiche sur la console.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)">
          <source>The workflow definition.</source>
          <target state="translated">Définition de flux de travail.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)">
          <source>The definition identity.</source>
          <target state="translated">Identité de définition.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Activities.WorkflowApplication" /&gt;</ph> class with the specified workflow definition and definition identity.</source>
          <target state="translated">Initialise une instance de la classe <ph id="ph1">&lt;see cref="T:System.Activities.WorkflowApplication" /&gt;</ph> avec la définition de flux de travail et l'identité de définition spécifiées.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>The workflow definition.</source>
          <target state="translated">Définition de flux de travail.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>The values for arguments defined on the root activity of the workflow definition, keyed by argument name.</source>
          <target state="translated">Valeurs des arguments définis sur l’activité racine de la définition de flux de travail ; elles sont indexées par nom d’argument.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Activities.WorkflowApplication" /&gt;</ph> class that uses the specified workflow definition and argument values.</source>
          <target state="translated">Crée une instance de la classe <ph id="ph1">&lt;see cref="T:System.Activities.WorkflowApplication" /&gt;</ph> qui utilise la définition de flux de travail et les valeurs d'argument spécifiées.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>The following example hosts a workflow using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</source>
          <target state="translated">L'exemple suivant héberge un workflow à l'aide de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>A <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance is constructed using using a workflow definition consisting of a single <ph id="ph2">`Divide`</ph> activity that takes two input arguments, and a dictionary of input arguments containing the two values to be passed, keyed by argument name.</source>
          <target state="translated">Une instance de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> est construite à l'aide d'une définition de flux de travail qui comprend une activité <ph id="ph2">`Divide`</ph> unique acceptant deux arguments d'entrée et d'un dictionnaire d'arguments d'entrée contenant les deux valeurs à passer, indexées par nom d'argument.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>The desired workflow lifecycle events are handled, and the workflow is invoked with a call to <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</source>
          <target state="translated">Les événements de cycle de vie souhaités du flux de travail sont gérés et le flux de travail est appelé au moyen d'un appel à <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object})">
          <source>When the workflow is completed, the following output is displayed to the console.</source>
          <target state="translated">Lorsque le flux de travail est terminé, la sortie suivante s'affiche sur la console.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)">
          <source>The workflow definition.</source>
          <target state="translated">Définition de flux de travail.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)">
          <source>The definition identity.</source>
          <target state="translated">Identité de définition.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)">
          <source>The values for arguments defined on the root activity of the workflow definition, keyed by argument name.</source>
          <target state="translated">Valeurs des arguments définis sur l’activité racine de la définition de flux de travail ; elles sont indexées par nom d’argument.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.#ctor(System.Activities.Activity,System.Collections.Generic.IDictionary{System.String,System.Object},System.Activities.WorkflowIdentity)">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Activities.WorkflowApplication" /&gt;</ph> class that uses the specified workflow definition and argument values, and definition identity.</source>
          <target state="translated">Crée une instance de la classe <ph id="ph1">&lt;see cref="T:System.Activities.WorkflowApplication" /&gt;</ph> qui utilise la définition de flux de travail, les valeurs d'argument et l'identité de définition spécifiées.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Notifies the workflow runtime that this workflow instance should abort.</source>
          <target state="translated">Notifie l'exécution du flux de travail que cette instance de flux de travail doit être abandonnée.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>When a workflow hosted by a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> is aborted, the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Aborted%2A&gt;</ph> handler is invoked and the <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handler is not invoked.</source>
          <target state="translated">Lorsqu'un flux de travail hébergé par un <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> est abandonné, le gestionnaire d'événements <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Aborted%2A&gt;</ph> est appelé, mais pas le gestionnaire d'événements <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Abort">
          <source>Notifies the workflow runtime that this workflow instance should abort.</source>
          <target state="translated">Notifie l'exécution du flux de travail que cette instance de flux de travail doit être abandonnée.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Abort">
          <source>When a workflow hosted by a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> is aborted, the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Aborted%2A&gt;</ph> handler is invoked and the <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handler is not invoked.</source>
          <target state="translated">Lorsqu'un flux de travail hébergé par un <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> est abandonné, le gestionnaire d'événements <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Aborted%2A&gt;</ph> est appelé, mais pas le gestionnaire d'événements <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Abort">
          <source>The following example hosts a workflow using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</source>
          <target state="translated">L'exemple suivant héberge un workflow à l'aide de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Abort">
          <source>A <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</source>
          <target state="translated">Une instance de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> est construite à l'aide de la définition de flux de travail spécifiée, les événements de cycle de vie souhaités du flux de travail sont gérés et le flux de travail est appelé au moyen d'un appel à <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Abort">
          <source>After the workflow is started, <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Abort%2A&gt;</ph> is called.</source>
          <target state="translated">Une fois que le flux de travail a démarré, la méthode <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Abort%2A&gt;</ph> est appelée.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Abort">
          <source>When the workflow is aborted, the following output is displayed to the console.</source>
          <target state="translated">Lorsque le flux de travail est abandonné, la sortie suivante s'affiche sur la console.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Abort(System.String)">
          <source>The reason for the request to abort.</source>
          <target state="translated">Motif de la demande d'abandon.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Abort(System.String)">
          <source>Notifies the workflow runtime that this workflow instance should abort for the specified reason.</source>
          <target state="translated">Notifie l'exécution du flux de travail que cette instance de flux de travail doit être abandonnée pour la raison spécifiée.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Abort(System.String)">
          <source>When a workflow hosted by a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> is aborted, the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Aborted%2A&gt;</ph> handler is invoked and the <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handler is not invoked.</source>
          <target state="translated">Lorsqu'un flux de travail hébergé par un <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> est abandonné, le gestionnaire d'événements <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Aborted%2A&gt;</ph> est appelé, mais pas le gestionnaire d'événements <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Abort(System.String)">
          <source>The following example hosts a workflow using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</source>
          <target state="translated">L'exemple suivant héberge un workflow à l'aide de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Abort(System.String)">
          <source>A <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</source>
          <target state="translated">Une instance de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> est construite à l'aide de la définition de flux de travail spécifiée, les événements de cycle de vie souhaités du flux de travail sont gérés et le flux de travail est appelé au moyen d'un appel à <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Abort(System.String)">
          <source>After the workflow is started, <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Abort%2A&gt;</ph> is called.</source>
          <target state="translated">Une fois que le flux de travail a démarré, la méthode <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Abort%2A&gt;</ph> est appelée.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Abort(System.String)">
          <source>When the workflow is aborted, the following output is displayed to the console.</source>
          <target state="translated">Lorsque le flux de travail est abandonné, la sortie suivante s'affiche sur la console.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Activities.WorkflowApplication.Aborted">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Action`1" /&gt;</ph> that is invoked when the workflow instance is aborted.</source>
          <target state="translated">Obtient ou définit l'objet <ph id="ph1">&lt;see cref="T:System.Action`1" /&gt;</ph> qui est appelé lorsque l'instance de flux de travail est abandonnée.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Aborted">
          <source>The action that is invoked when the workflow instance is aborted.</source>
          <target state="translated">Action appelée lorsque l'instance de flux de travail est abandonnée.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Aborted">
          <source>When a workflow hosted by a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> is aborted, the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Aborted%2A&gt;</ph> handler is invoked and the <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handler is not invoked.</source>
          <target state="translated">Lorsqu'un flux de travail hébergé par un <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> est abandonné, le gestionnaire d'événements <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Aborted%2A&gt;</ph> est appelé, mais pas le gestionnaire d'événements <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Aborted">
          <source>The following code example inspects the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplicationAbortedEventArgs&gt;</ph> passed into the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Aborted%2A&gt;</ph> handler of a <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance and displays information about why workflow was aborted.</source>
          <target state="translated">L'exemple de code suivant inspecte l'objet <ph id="ph1">&lt;xref:System.Activities.WorkflowApplicationAbortedEventArgs&gt;</ph> passé dans le gestionnaire d'événements <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Aborted%2A&gt;</ph> d'une instance de <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> et indique la raison pour laquelle le flux de travail a été abandonné.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
          <source>The metadata values to be included with the first persistence.</source>
          <target state="translated">Valeurs de métadonnées à inclure avec la première persistance.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.AddInitialInstanceValues(System.Collections.Generic.IDictionary{System.Xml.Linq.XName,System.Object})">
          <source>Specifies instance metadata values that are included with the first persistence of a new instance.</source>
          <target state="translated">Spécifie les valeurs des métadonnées de l'instance qui sont incluses avec la première persistance d'une nouvelle instance.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Cancels a workflow asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Annule de façon asynchrone un flux de travail à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)">
          <source>The method to be called when the cancel operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération d'annulation est terminée.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)">
          <source>Cancels a workflow instance asynchronously using the specified <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> and user-provided state.</source>
          <target state="translated">Annule de façon asynchrone une instance de flux de travail à l'aide de l'objet <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> spécifié et de l'état fourni par l'utilisateur.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous cancel operation.</source>
          <target state="translated">Référence à l'opération d'annulation asynchrone.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)">
          <source>To determine whether the cancel operation was successful, call <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph>.</source>
          <target state="translated">Pour déterminer si l'opération d'annulation a réussi, appelez <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph> can be called from inside or outside of the <ph id="ph2">`callback`</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph> peut être appelée à l'intérieur ou à l'extérieur de la méthode <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph> is called before the cancel operation completes, it blocks until the cancel operation completes.</source>
          <target state="translated">Si la méthode <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph> est appelée avant la fin de l'opération d'annulation, elle demeure bloquée jusqu'à la fin de l'opération d'annulation.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)">
          <source>By default, the cancel operation must complete in 30 seconds or a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph>.</source>
          <target state="translated">Par défaut, l'opération d'annulation doit être réalisée en 30 secondes, à défaut de quoi une <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> est levée depuis <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)">
          <source>This method cancels a workflow asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Cette méthode annule de façon asynchrone un flux de travail à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.AsyncCallback,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the cancel operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervalle dans lequel l'opération d'annulation doit être réalisée avant que l'opération ne soit annulée et qu'une <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> ne soit levée.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the cancel operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération d'annulation est terminée.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Cancels a workflow instance asynchronously using the specified time-out interval, <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph>, and user-provided state.</source>
          <target state="translated">Annule de façon asynchrone une instance de flux de travail à l'aide du délai d'attente spécifié, de l'objet <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> et de l'état fourni par l'utilisateur.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous cancel operation.</source>
          <target state="translated">Référence à l'opération d'annulation asynchrone.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To determine whether the cancel operation was successful, call <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph>.</source>
          <target state="translated">Pour déterminer si l'opération d'annulation a réussi, appelez <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph> can be called from inside or outside of the method specified in the <ph id="ph2">`callback`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph> peut être appelée à l'intérieur ou à l'extérieur de la méthode spécifiée dans le paramètre <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph> is called before the cancel operation completes, it blocks until the cancel operation completes.</source>
          <target state="translated">Si la méthode <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph> est appelée avant la fin de l'opération d'annulation, elle demeure bloquée jusqu'à la fin de l'opération d'annulation.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If the cancel operation does not complete in the interval specified by the <ph id="ph1">`timeOut`</ph> parameter, a <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph>.</source>
          <target state="translated">Si l'opération d'annulation ne se réalise pas dans l'intervalle spécifié par le paramètre <ph id="ph1">`timeOut`</ph>, une <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> est levée depuis <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.EndCancel%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method cancels a workflow asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Cette méthode annule de façon asynchrone un flux de travail à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginCancel(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Creates a default instance owner asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Crée un propriétaire d'instance par défaut de façon asynchrone à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">Accès à un état persistant de l'instance actuelle de l'application de flux de travail.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)">
          <source>The definition identity.</source>
          <target state="translated">Identité de définition.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)">
          <source>The identity filter.</source>
          <target state="translated">Filtre d'identité.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération de chargement est terminée.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)">
          <source>Creates a default instance owner asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern with specified instance store, definition identity, identity filter, callback and state.</source>
          <target state="translated">Crée un propriétaire d'instance par défaut de façon asynchrone à l'aide du modèle de design asynchrone <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> avec un magasin d'instances, une identité de définition, un filtre d'identité, un rappel et un état spécifiés.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation.</source>
          <target state="translated">Référence à l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">Accès à un état persistant de l'instance actuelle de l'application de flux de travail.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The definition identity.</source>
          <target state="translated">Identité de définition.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The identity filter.</source>
          <target state="translated">Filtre d'identité.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the begin load operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervalle dans lequel l'opération de chargement doit être réalisée avant que l'opération ne soit annulée et qu'une <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> ne soit levée.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération de chargement est terminée.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Creates a default instance owner asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern with specified instance store, definition identity, identity filter, timeout interval, callback and state.</source>
          <target state="translated">Crée un propriétaire d'instance par défaut de façon asynchrone à l'aide du modèle de design asynchrone <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> avec un magasin d'instances, une identité de définition, un filtre d'identité, un intervalle de délai d'expiration, un rappel et un état spécifiés.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginCreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation.</source>
          <target state="translated">Référence à l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Deletes a default instance owner asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Supprime un propriétaire d'instance par défaut de façon asynchrone à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">Accès à un état persistant de l'instance actuelle de l'application de flux de travail.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération de chargement est terminée.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>Deletes a default instance owner asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern with specified instance store, callback, and state.</source>
          <target state="translated">Supprime un propriétaire d'instance par défaut de façon asynchrone à l'aide du modèle de conception de façon asynchrone <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> avec les fonctions d'enregistrement, de rappel et d'état de l'instance spécifiée.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation.</source>
          <target state="translated">Référence à l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">Accès à un état persistant de l'instance actuelle de l'application de flux de travail.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the begin load operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervalle dans lequel l'opération de chargement doit être réalisée avant que l'opération ne soit annulée et qu'une <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> ne soit levée.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération de chargement est terminée.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Deletes a default instance owner asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern with specified instance store, timeout interval, callback, and state.</source>
          <target state="translated">Supprime un propriétaire d'instance par défaut de façon asynchrone à l'aide du modèle de conception de façon asynchrone <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> avec les fonctions d'enregistrement, d'intervalle de délai d'attente, de rappel et d'état de l'instance spécifiée.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginDeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation.</source>
          <target state="translated">Référence à l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Retrieves an instance owner asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Récupère un propriétaire d'instance de façon asynchrone à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>The instance identifier.</source>
          <target state="translated">Identificateur d'instance.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">Accès à un état persistant de l'instance actuelle de l'application de flux de travail.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération de chargement est terminée.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>Retrieves an instance owner asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern with specified instance identifier, instance store, callback, and state.</source>
          <target state="translated">Extrait un propriétaire d'instance de façon asynchrone à l'aide du modèle de design asynchrone <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> avec l'identificateur d'instance, le magasin d'instance, le rappel et l'état spécifiés.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation.</source>
          <target state="translated">Référence à l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The instance identifier.</source>
          <target state="translated">Identificateur d'instance.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">Accès à un état persistant de l'instance actuelle de l'application de flux de travail.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the begin load operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervalle dans lequel l'opération de chargement doit être réalisée avant que l'opération ne soit annulée et qu'une <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> ne soit levée.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération de chargement est terminée.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Retrieves an instance owner asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern with specified instance identifier, instance store, timeout interval, callback, and state.</source>
          <target state="translated">Extrait un propriétaire d'instance de façon asynchrone à l'aide du modèle de design asynchrone <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> avec l'identificateur d'instance, le magasin d'instance, l'intervalle de délai d'expiration, le rappel et l'état spécifiés.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation.</source>
          <target state="translated">Référence à l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Retrieves a runnable instance owner asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Récupère un propriétaire d'instance exécutable de façon asynchrone à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">Accès à un état persistant de l'instance actuelle de l'application de flux de travail.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération de chargement est terminée.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>Retrieves a runnable instance owner asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern with specified instance store, callback, and state.</source>
          <target state="translated">Extrait un propriétaire d'instance exécutable de façon asynchrone à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> avec les fonctions d'enregistrement, de rappel et d'état de l'instance spécifiée.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation.</source>
          <target state="translated">Référence à l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">Accès à un état persistant de l'instance actuelle de l'application de flux de travail.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the begin load operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervalle dans lequel l'opération de chargement doit être réalisée avant que l'opération ne soit annulée et qu'une <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> ne soit levée.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération de chargement est terminée.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Retrieves a runnable instance owner asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern with specified instance store, timeout interval, callback, and state.</source>
          <target state="translated">Extrait un propriétaire d'instance exécutable de façon asynchrone à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> avec les fonctions d'enregistrement, d'intervalle de délai d'expiration, de rappel et d'état de l'instance spécifiée.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginGetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation.</source>
          <target state="translated">Référence à l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Loads a workflow asynchronously from an instance store using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Charge de façon asynchrone un flux de travail à partir d'un magasin d'instances à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)">
          <source>The instance.</source>
          <target state="translated">Instance.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération de chargement est terminée.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)">
          <source>Loads a workflow asynchronously from an instance store using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern with specified instance, callback and state.</source>
          <target state="translated">Charge de façon asynchrone un flux de travail à partir d'un magasin d'instances à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> avec l'instance, le rappel et l'état spécifiés.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation.</source>
          <target state="translated">Référence à l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)">
          <source>A globally unique 128-bit identifier for the workflow instance.</source>
          <target state="translated">Identificateur 128 bits global unique de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération de chargement est terminée.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)">
          <source>Loads a workflow asynchronously from an instance store using the specified instance identifier, callback method, and user-provided state.</source>
          <target state="translated">Charge de façon asynchrone un flux de travail à partir d'un magasin d'instances à l'aide de l'identificateur d'instance, de la méthode de rappel et de l'état fourni par l'utilisateur qui sont spécifiés.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.AsyncCallback,System.Object)">
          <source>The status of an asynchronous operation.</source>
          <target state="translated">État d'une opération asynchrone.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)">
          <source>The instance.</source>
          <target state="translated">Instance.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)">
          <source>The update map.</source>
          <target state="translated">Carte de mise à jour.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération de chargement est terminée.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)">
          <source>Loads a workflow asynchronously from an instance store using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern with specified instance, update map, callback and state.</source>
          <target state="translated">Charge de façon asynchrone un flux de travail à partir d'un magasin d'instances à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> avec l'instance, la carte de mise à jour, le rappel et l'état spécifiés.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation.</source>
          <target state="translated">Référence à l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The instance.</source>
          <target state="translated">Instance.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the begin load operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervalle dans lequel l'opération de chargement doit être réalisée avant que l'opération ne soit annulée et qu'une <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> ne soit levée.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération de chargement est terminée.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Loads a workflow asynchronously from an instance store using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern with specified instance, timeout interval, callback and state.</source>
          <target state="translated">Charge de façon asynchrone un flux de travail à partir d'un magasin d'instances à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> avec l'instance, l'intervalle de délai d'expiration, le rappel et l'état spécifiés.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation.</source>
          <target state="translated">Référence à l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A globally unique 128-bit identifier for the workflow instance.</source>
          <target state="translated">Identificateur 128 bits global unique de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the begin load operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervalle dans lequel l'opération de chargement doit être réalisée avant que l'opération ne soit annulée et qu'une <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> ne soit levée.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération de chargement est terminée.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Loads a workflow asynchronously from an instance store using the specified instance identifier, timeout period, callback method, and user-provided state.</source>
          <target state="translated">Charge de façon asynchrone un flux de travail à partir d'un magasin d'instances à l'aide de l'identificateur d'instance, du délai, de la méthode de rappel et de l'état fourni par l'utilisateur.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Guid,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The status of an asynchronous operation.</source>
          <target state="translated">État d'une opération asynchrone.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The instance.</source>
          <target state="translated">Instance.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The update map.</source>
          <target state="translated">Carte de mise à jour.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the begin load operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervalle dans lequel l'opération de chargement doit être réalisée avant que l'opération ne soit annulée et qu'une <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> ne soit levée.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the begin load operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération de chargement est terminée.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Loads a workflow asynchronously from an instance store using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern with specified instance, update map, timeout interval, callback and state.</source>
          <target state="translated">Charge de façon asynchrone un flux de travail à partir d'un magasin d'instances à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> avec l'instance, la carte de mise à jour, l'intervalle de délai d'attente, le rappel et l'état spécifiés.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoad(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation.</source>
          <target state="translated">Référence à l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Initiates the asynchronous process of loading a runnable workflow instance from the <ph id="ph1">&lt;see cref="P:System.Activities.WorkflowApplication.InstanceStore" /&gt;</ph>.</source>
          <target state="translated">Initialise le processus asynchrone du chargement d'une instance de flux de travail exécutable à partir de la propriété <ph id="ph1">&lt;see cref="P:System.Activities.WorkflowApplication.InstanceStore" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>A runnable instance is an instance for which a timer or instance lock has expired.</source>
          <target state="translated">Une instance exécutable est une instance pour laquelle une horloge ou un verrou d'instance a expiré.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)">
          <source>The method to be called when the operation is complete.</source>
          <target state="translated">Méthode à appeler lorsque l'opération est terminée.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)">
          <source>An optional application-specific object containing information about the asynchronous operation.</source>
          <target state="translated">Objet facultatif spécifique à l'application qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)">
          <source>Initiates an operation to load a runnable workflow instance from the <ph id="ph1">&lt;see cref="P:System.Activities.WorkflowApplication.InstanceStore" /&gt;</ph>.</source>
          <target state="translated">Initialise une opération pour charger une instance de flux de travail exécutable à partir de la propriété <ph id="ph1">&lt;see cref="P:System.Activities.WorkflowApplication.InstanceStore" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation</source>
          <target state="translated">Référence à l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)">
          <source>A runnable instance is an instance for which a timer or instance lock has expired.</source>
          <target state="translated">Une instance exécutable est une instance pour laquelle une horloge ou un verrou d'instance a expiré.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)">
          <source>To determine if the load operation was successful, call <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph>.</source>
          <target state="translated">Pour déterminer si l'opération de chargement a réussi, appelez <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph> can be called from inside or outside of the <ph id="ph2">`callback`</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph> peut être appelée à l'intérieur ou à l'extérieur de la méthode <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph> is called before the resume operation completes, it blocks until the resume operation completes.</source>
          <target state="translated">Si la méthode <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph> est appelée avant la fin de l'opération de reprise, elle demeure bloquée jusqu'à la fin de l'opération de reprise.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)">
          <source>By default, the resume operation must complete in 30 seconds or else a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph>.</source>
          <target state="translated">Par défaut, l'opération de reprise doit être réalisée en 30 secondes, à défaut de quoi une <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> est levée depuis <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)">
          <source>This method loads a workflow asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Cette méthode charge de façon asynchrone un flux de travail à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.AsyncCallback,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the load operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervalle dans lequel l'opération de chargement doit être réalisée avant que l'opération ne soit annulée et qu'une <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> ne soit levée.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the operation is complete.</source>
          <target state="translated">Méthode à appeler lorsque l'opération est terminée.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object containing information about the asynchronous operation.</source>
          <target state="translated">Objet facultatif spécifique à l'application qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Initiates an operation to load a runnable workflow instance from the <ph id="ph1">&lt;see cref="P:System.Activities.WorkflowApplication.InstanceStore" /&gt;</ph> using the specified time-out interval.</source>
          <target state="translated">Initialise une opération pour charger une instance de flux de travail exécutable à partir de la propriété <ph id="ph1">&lt;see cref="P:System.Activities.WorkflowApplication.InstanceStore" /&gt;</ph> à l'aide de l'intervalle de délai d'attente spécifié.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous operation</source>
          <target state="translated">Référence à l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A runnable instance is an instance for which a timer or instance lock has expired.</source>
          <target state="translated">Une instance exécutable est une instance pour laquelle une horloge ou un verrou d'instance a expiré.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To determine if the load operation was successful, call <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph>.</source>
          <target state="translated">Pour déterminer si l'opération de chargement a réussi, appelez <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph> can be called from inside or outside of the <ph id="ph2">`callback`</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph> peut être appelée à l'intérieur ou à l'extérieur de la méthode <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph> is called before the resume operation completes, it blocks until the resume operation completes.</source>
          <target state="translated">Si la méthode <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph> est appelée avant la fin de l'opération de reprise, elle demeure bloquée jusqu'à la fin de l'opération de reprise.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If the load operation does not complete within the specified time-out interval a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph>.</source>
          <target state="translated">Si l'opération de chargement ne se termine pas dans le délai d'attente spécifié, une <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> est levée depuis <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndLoadRunnableInstance%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method loads a workflow asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Cette méthode charge de façon asynchrone un flux de travail à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginLoadRunnableInstance(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Persists a workflow instance to an instance store asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Rend persistante de façon asynchrone une instance de flux de travail dans un magasin d'instances à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>If the workflow instance was previously loaded from persistence, then the same <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> used to load the workflow is used for persistence.</source>
          <target state="translated">Si l'instance de workflow a été précédemment chargée à partir d'un point de persistance, alors, le même <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> utilisé pour charger le workflow est utilisé pour la persistance.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>If the workflow was created and has not yet been persisted, then an <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> must be configured before calling this method or else an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when this method is called.</source>
          <target state="translated">Si le workflow a été créé et n'a pas encore été rendu persistant, alors un <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> doit être configuré avant d'appeler cette méthode ou bien une exception <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> est levée lorsque cette méthode est appelée.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
          <source>The method to be called when the persist operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération de persistance est terminée.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
          <source>Persists a workflow instance to an instance store asynchronously using the specified callback method and user-provided state.</source>
          <target state="translated">Rend persistante de façon asynchrone une instance de flux de travail dans un magasin d'instances à l'aide de la méthode de rappel spécifiée et de l'état fourni par l'utilisateur.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous persist operation.</source>
          <target state="translated">Référence à l'opération de persistance asynchrone.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
          <source>To determine whether the persist operation was successful, call <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph>.</source>
          <target state="translated">Pour déterminer si l'opération de persistance a réussi, appelez <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph> can be called from inside or outside of the method referenced in the <ph id="ph2">`callback`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph> peut être appelée à l'intérieur ou à l'extérieur de la méthode référencée dans le paramètre <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph> is called before the persist operation completes, it blocks until the persist operation completes.</source>
          <target state="translated">Si la méthode <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph> est appelée avant la fin de l'opération asynchrone, elle demeure bloquée jusqu'à ce que l'opération de persistance soit terminée.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
          <source>If the persist operation does not complete within 30 seconds, a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph>.</source>
          <target state="translated">Si l'opération de persistance ne se réalise pas dans un délai de 30 secondes, une <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> est levée depuis <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
          <source>If the workflow instance was previously loaded from persistence, then the same <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> used to load the workflow is used for persistence.</source>
          <target state="translated">Si l'instance de workflow a été précédemment chargée à partir d'un point de persistance, alors, le même <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> utilisé pour charger le workflow est utilisé pour la persistance.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
          <source>If the workflow was created and has not yet been persisted, then an <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> must be configured before calling this method or else an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when this method is called.</source>
          <target state="translated">Si le workflow a été créé et n'a pas encore été rendu persistant, alors un <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> doit être configuré avant d'appeler cette méthode ou bien une exception <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> est levée lorsque cette méthode est appelée.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
          <source>This method persists a workflow asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Cette méthode rend persistant de façon asynchrone un flux de travail à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.AsyncCallback,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the persist operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervalle au cours duquel l'opération de persistance doit être exécutée ; au-delà de ce délai, l'opération est annulée et une exception <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the persist operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération de persistance est terminée.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Persists a workflow instance to an instance store asynchronously using the specified time-out interval, callback method, and user-provided state.</source>
          <target state="translated">Rend persistante de façon asynchrone une instance de flux de travail dans un magasin d'instances à l'aide du délai spécifié, de la méthode de rappel et de l'état fourni par l'utilisateur.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous persist operation.</source>
          <target state="translated">Référence à l'opération de persistance asynchrone.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To determine whether the persist operation was successful, call <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph>.</source>
          <target state="translated">Pour déterminer si l'opération de persistance a réussi, appelez <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph> can be called from inside or outside of the method referenced in the <ph id="ph2">`callback`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph> peut être appelée à l'intérieur ou à l'extérieur de la méthode référencée dans le paramètre <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph> is called before the persist operation completes, it blocks until the persist operation completes.</source>
          <target state="translated">Si la méthode <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph> est appelée avant la fin de l'opération asynchrone, elle demeure bloquée jusqu'à ce que l'opération de persistance soit terminée.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If the persist operation does not complete within the specified time-out interval, a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph>.</source>
          <target state="translated">Si l'opération de persistance ne se termine pas avant l'issue du délai spécifié, une <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> est levée depuis <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndPersist%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If the workflow instance was previously loaded from persistence, then the same <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> used to load the workflow is used for persistence.</source>
          <target state="translated">Si l'instance de workflow a été précédemment chargée à partir d'un point de persistance, alors, le même <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> utilisé pour charger le workflow est utilisé pour la persistance.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If the workflow was created and has not yet been persisted, then an <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> must be configured before calling this method or else an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when this method is called.</source>
          <target state="translated">Si le workflow a été créé et n'a pas encore été rendu persistant, alors un <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> doit être configuré avant d'appeler cette méthode ou bien une exception <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> est levée lorsque cette méthode est appelée.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method persists a workflow instance asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Cette méthode rend persistante de façon asynchrone une instance de flux de travail à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginPersist(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Initiates an asynchronous operation to resume a bookmark.</source>
          <target state="translated">Lance une opération asynchrone pour reprendre un signet.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
          <source>The bookmark to resume.</source>
          <target state="translated">Signet à reprendre.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
          <source>An object passed as a parameter to the method that is invoked when the bookmark resumes.</source>
          <target state="translated">Objet passé comme paramètre à la méthode appelée lors de la reprise du signet.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
          <source>The method to be called when the resume operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération de reprise est terminée.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
          <source>Initiates an operation to resume a bookmark using the specified value, callback method, and state.</source>
          <target state="translated">Initialise une opération pour reprendre un signet à l'aide de la valeur, de la méthode de rappel et de l'état.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous bookmark resume operation.</source>
          <target state="translated">Référence à l'opération de reprise de signet asynchrone.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
          <source>To determine if the resume operation was successful, call <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph>.</source>
          <target state="translated">Pour déterminer si l'opération de reprise a réussi, appelez <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph> can be called from inside or outside of the <ph id="ph2">`callback`</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph> peut être appelée à l'intérieur ou à l'extérieur de la méthode <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph> is called before the resume operation completes, it blocks until the resume operation completes.</source>
          <target state="translated">Si la méthode <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph> est appelée avant la fin de l'opération de reprise, elle demeure bloquée jusqu'à la fin de l'opération de reprise.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
          <source>By default, the resume operation must complete in 30 seconds or else a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph>.</source>
          <target state="translated">Par défaut, l'opération de reprise doit être réalisée en 30 secondes, à défaut de quoi une <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> est levée depuis <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
          <source>This method resumes a bookmark asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Cette méthode reprend de façon asynchrone un signet à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.AsyncCallback,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)">
          <source>The name of the bookmark to be resumed.</source>
          <target state="translated">Nom du signet à reprendre.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)">
          <source>An object passed as a parameter to the method that is invoked when the bookmark resumes.</source>
          <target state="translated">Objet passé comme paramètre à la méthode appelée lors de la reprise du signet.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)">
          <source>The method that is called when the asynchronous operation completes.</source>
          <target state="translated">Méthode appelée lorsque l'opération asynchrone est terminée.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)">
          <source>The state of execution of a workflow that was preserved by the calling thread before an asynchronous operation began.</source>
          <target state="translated">État d'exécution d'un flux de travail qui a été conservé par le thread appelant avant qu'une opération asynchrone ait commencé.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)">
          <source>Initiates an asynchronous operation to resume the bookmark with the specified name, using the specified value, callback method, and state.</source>
          <target state="translated">Initialise une opération asynchrone pour reprendre le signet avec le nom spécifié, à l'aide de la valeur, de la méthode de rappel et de l'état.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)">
          <source>The bookmark to be resumed is previously created by an activity within the workflow instance.</source>
          <target state="translated">Le signet à reprendre est créé précédemment par une activité dans l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)">
          <source>The result of the bookmark resumption operation.</source>
          <target state="translated">Résultat de l'opération de reprise de signet.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.AsyncCallback,System.Object)">
          <source>The bookmark result indicates whether the resumption operation succeeded or failed.</source>
          <target state="translated">Le résultat indique si l'opération de reprise a réussi ou échoué.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The bookmark to resume.</source>
          <target state="translated">Signet à reprendre.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object passed as a parameter to the method that is invoked when the bookmark resumes.</source>
          <target state="translated">Objet passé comme paramètre à la méthode appelée lors de la reprise du signet.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the resume operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervalle dans lequel l'opération de reprise doit être réalisée avant que l'opération ne soit annulée et qu'une <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> ne soit levée.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the resume operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération de reprise est terminée.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Initiates an operation to resume a bookmark using the specified value, time-out interval, callback method, and state.</source>
          <target state="translated">Initialise une opération pour reprendre un signet, à l'aide de la valeur, du délai d'attente, de la méthode de rappel et de l'état.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous bookmark resume operation.</source>
          <target state="translated">Référence à l'opération de reprise de signet asynchrone.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To determine if the resume operation was successful, call <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph>.</source>
          <target state="translated">Pour déterminer si l'opération de reprise a réussi, appelez <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph> can be called from inside or outside of the <ph id="ph2">`callback`</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph> peut être appelée à l'intérieur ou à l'extérieur de la méthode <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph> is called before the resume operation completes, it blocks until the resume operation completes.</source>
          <target state="translated">Si la méthode <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph> est appelée avant la fin de l'opération de reprise, elle demeure bloquée jusqu'à la fin de l'opération de reprise.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If the resume operation does not complete within the specified time-out interval a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph>.</source>
          <target state="translated">Si l'opération de reprise ne se termine pas avant l'issue du délai spécifié, une <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> est levée depuis <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndResumeBookmark%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method resumes a bookmark asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Cette méthode reprend de façon asynchrone un signet à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The name of the bookmark to be resumed.</source>
          <target state="translated">Nom du signet à reprendre.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An object passed as a parameter to the method that is invoked when the bookmark resumes.</source>
          <target state="translated">Objet passé comme paramètre à la méthode appelée lors de la reprise du signet.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The time interval during which the bookmark must be resumed.</source>
          <target state="translated">Intervalle de temps pendant lequel le signet doit être repris.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method that is called when the asynchronous operation completes.</source>
          <target state="translated">Méthode appelée lorsque l'opération asynchrone est terminée.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The state of execution of a workflow that was saved by the calling thread before an asynchronous operation began.</source>
          <target state="translated">État d'exécution d'un flux de travail qui a été sauvegardé par le thread appelant avant qu'une opération asynchrone ait commencé.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Initiates an asynchronous operation to resume the bookmark with the specified name, using the specified value, time-out interval, callback method, and state.</source>
          <target state="translated">Initialise une opération asynchrone pour reprendre le signet avec le nom spécifié, à l'aide de la valeur, du délai d'attente, de la méthode de rappel et de l'état.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The bookmark to be resumed is previously created by an activity within the workflow instance.</source>
          <target state="translated">Le signet à reprendre est créé précédemment par une activité dans l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The result of the bookmark resumption operation.</source>
          <target state="translated">Résultat de l'opération de reprise de signet.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginResumeBookmark(System.String,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The bookmark result indicates whether the resumption operation succeeded or failed.</source>
          <target state="translated">Le résultat indique si l'opération de reprise a réussi ou échoué.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Starts or resumes a workflow instance asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Démarre ou reprend de façon asynchrone une instance de flux de travail à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)">
          <source>The method to be called when the resume operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération de reprise est terminée.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)">
          <source>Starts or resumes a workflow instance asynchronously using the specified callback method and user-provided state.</source>
          <target state="translated">Démarre ou reprend de façon asynchrone une instance de flux de travail à l'aide de la méthode de rappel spécifiée et de l'état fourni par l'utilisateur.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous run operation.</source>
          <target state="translated">Référence à l'opération d'exécution asynchrone.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)">
          <source>To determine whether the run operation was successful, call <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph>.</source>
          <target state="translated">Pour déterminer si l'opération d'exécution a réussi, appelez <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph> can be called from inside or outside of the method referenced in the <ph id="ph2">`callback`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph> peut être appelée à l'intérieur ou à l'extérieur de la méthode référencée dans le paramètre <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph> is called before the resume operation completes, it blocks until the resume operation completes.</source>
          <target state="translated">Si la méthode <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph> est appelée avant la fin de l'opération de reprise, elle demeure bloquée jusqu'à la fin de l'opération de reprise.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)">
          <source>By default, the resume operation must complete in 30 seconds or a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph>.</source>
          <target state="translated">Par défaut, l'opération de reprise doit être réalisée en 30 secondes, à défaut de quoi une <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> est levée depuis <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)">
          <source>This method starts or resumes a workflow asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Cette méthode démarre ou reprend de façon asynchrone une instance de flux de travail à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginRun(System.AsyncCallback,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the resume operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervalle dans lequel l'opération de reprise doit être réalisée avant que l'opération ne soit annulée et qu'une <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> ne soit levée.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the resume operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération de reprise est terminée.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Starts or resumes a workflow instance asynchronously using the specified time-out interval, callback method, and user-provided state.</source>
          <target state="translated">Démarre ou reprend de façon asynchrone une instance de flux de travail à l'aide de l'intervalle spécifié, de la méthode de rappel et de l'état fourni par l'utilisateur.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous run operation.</source>
          <target state="translated">Référence à l'opération d'exécution asynchrone.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To determine whether the run operation was successful, call <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph>.</source>
          <target state="translated">Pour déterminer si l'opération d'exécution a réussi, appelez <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph> can be called from inside or outside of the method reference in the <ph id="ph2">`callback`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph> peut être appelée à l'intérieur ou à l'extérieur de la méthode référencée dans le paramètre <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph> is called before the resume operation completes, it blocks until the resume operation completes.</source>
          <target state="translated">Si la méthode <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph> est appelée avant la fin de l'opération de reprise, elle demeure bloquée jusqu'à la fin de l'opération de reprise.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If the resume operation does not complete within the specified time-out interval a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph>.</source>
          <target state="translated">Si l'opération de reprise ne se termine pas avant l'issue du délai spécifié, une <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> est levée depuis <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndRun%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method starts or resumes a workflow asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Cette méthode démarre ou reprend de façon asynchrone une instance de flux de travail à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginRun(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Terminates a workflow instance asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Termine de façon asynchrone une instance de flux de travail à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
          <source>The reason the workflow instance is terminated.</source>
          <target state="translated">Motif de fin de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
          <source>The method to be called when the <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> est terminée.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
          <source>Terminates a workflow instance asynchronously using the specified exception, callback method, and user-provided state.</source>
          <target state="translated">Termine de façon asynchrone une instance de flux de travail à l'aide de l'exception spécifiée, de la méthode de rappel et de l'état fourni par l'utilisateur.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
          <source>A reference to the current <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> operation.</source>
          <target state="translated">Référence à l'opération en cours <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
          <source>This method schedules the termination of the workflow instance.</source>
          <target state="translated">Cette méthode planifie l'arrêt de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
          <source>To be notified when the termination has completed, use the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handle.</source>
          <target state="translated">Pour être averti lorsque l'arrêt est terminé, utilisez le handle <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
          <source>To determine whether the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation was successful, call <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</source>
          <target state="translated">Pour déterminer si l'opération <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> a réussi, appelez <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> can be called from inside or outside of the method referenced in the <ph id="ph2">`callback`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> peut être appelée à l'intérieur ou à l'extérieur de la méthode référencée dans le paramètre <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> is called before the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation completes, it blocks until the <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation completes.</source>
          <target state="translated">Si la méthode <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> est appelée avant que l'opération <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> ne se termine, elle demeure bloquée jusqu'à ce que l'opération <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> soit terminée.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation must complete in 30 seconds or a <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</source>
          <target state="translated">Par défaut, l'opération <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> doit être réalisée en 30 secondes, à défaut de quoi une <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> est levée depuis <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
          <source>This method terminates a workflow asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Cette méthode termine de façon asynchrone un flux de travail à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.AsyncCallback,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
          <source>The reason for terminating the workflow instance.</source>
          <target state="translated">Motif de fin de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
          <source>The method to be called when the <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> est terminée.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
          <source>Terminates a workflow instance asynchronously using the specified error message, callback method, and user-provided state.</source>
          <target state="translated">Termine de façon asynchrone une instance de flux de travail à l'aide du message d'erreur, de la méthode de rappel et de l'état fourni par l'utilisateur.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
          <source>A reference to the current <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> operation.</source>
          <target state="translated">Référence à l'opération en cours <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
          <source>This method schedules the termination of the workflow instance.</source>
          <target state="translated">Cette méthode planifie l'arrêt de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
          <source>To be notified when the termination has completed, use the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handle.</source>
          <target state="translated">Pour être averti lorsque l'arrêt est terminé, utilisez le handle <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
          <source>To determine whether the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation was successful, call <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</source>
          <target state="translated">Pour déterminer si l'opération <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> a réussi, appelez <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> can be called from inside or outside of the method reference in the <ph id="ph2">`callback`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> peut être appelée à l'intérieur ou à l'extérieur de la méthode référencée dans le paramètre <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> is called before the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation completes, it blocks until the <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation completes.</source>
          <target state="translated">Si la méthode <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> est appelée avant que l'opération <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> ne se termine, elle demeure bloquée jusqu'à ce que l'opération <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> soit terminée.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation must complete in 30 seconds or a <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</source>
          <target state="translated">Par défaut, l'opération <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> doit être réalisée en 30 secondes, à défaut de quoi une <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> est levée depuis <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
          <source>This method terminates a workflow instance asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Cette méthode termine de façon asynchrone une instance de flux de travail à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.AsyncCallback,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The reason for terminating the workflow instance.</source>
          <target state="translated">Motif de fin de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> operation must complete before the operation is canceled and a <ph id="ph2">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervalle dans lequel l'opération <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> doit être réalisée avant que l'opération ne soit annulée et qu'une <ph id="ph2">&lt;see cref="T:System.TimeoutException" /&gt;</ph> ne soit levée.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> est terminée.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Terminates a workflow instance asynchronously using the specified exception, time-out interval, callback method, and user-provided state.</source>
          <target state="translated">Termine de façon asynchrone une instance de flux de travail à l'aide de l'exception, du délai, de la méthode de rappel et de l'état fourni par l'utilisateur.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the current <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> operation.</source>
          <target state="translated">Référence à l'opération en cours <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method schedules the termination of the workflow instance.</source>
          <target state="translated">Cette méthode planifie l'arrêt de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To be notified when the termination has completed, use the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handle.</source>
          <target state="translated">Pour être averti lorsque l'arrêt est terminé, utilisez le handle <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To determine whether the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation was successful, call <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</source>
          <target state="translated">Pour déterminer si l'opération <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> a réussi, appelez <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> can be called from inside or outside of the <ph id="ph2">`callback`</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> peut être appelée à l'intérieur ou à l'extérieur de la méthode <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> is called before the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation completes, it blocks until the <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation completes.</source>
          <target state="translated">Si la méthode <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> est appelée avant que l'opération <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> ne se termine, elle demeure bloquée jusqu'à ce que l'opération <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> soit terminée.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation does not complete within the specified time-out interval a <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> is thrown.</source>
          <target state="translated">Si l'opération <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> ne se termine pas avant l'issue du délai spécifié, un objet <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> est généré.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This or any other exceptions that occur during the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> process is thrown from <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</source>
          <target state="translated">Cette exception ou toute autre exception qui se produit pendant le processus <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> est levée depuis <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method terminates a workflow asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Cette méthode termine de façon asynchrone un flux de travail à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.Exception,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The reason for terminating the workflow instance.</source>
          <target state="translated">Motif de fin de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> operation must complete before the operation is canceled and a <ph id="ph2">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervalle dans lequel l'opération <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> doit être réalisée avant que l'opération ne soit annulée et qu'une <ph id="ph2">&lt;see cref="T:System.TimeoutException" /&gt;</ph> ne soit levée.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> est terminée.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Terminates a workflow instance asynchronously using the specified error message, time-out interval, callback method, and user-provided state.</source>
          <target state="translated">Termine de façon asynchrone une instance de flux de travail à l'aide du message d'erreur, du délai, de la méthode de rappel et de l'état fourni par l'utilisateur.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> operation.</source>
          <target state="translated">Référence à l'opération asynchrone <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method schedules the termination of the workflow instance.</source>
          <target state="translated">Cette méthode planifie l'arrêt de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To be notified when the termination has completed, use the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handle.</source>
          <target state="translated">Pour être averti lorsque l'arrêt est terminé, utilisez le handle <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To determine whether the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation was successful, call <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</source>
          <target state="translated">Pour déterminer si l'opération <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> a réussi, appelez <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> can be called from inside or outside of the method reference in the <ph id="ph2">`callback`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> peut être appelée à l'intérieur ou à l'extérieur de la méthode référencée dans le paramètre <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> is called before the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation completes, it blocks until the <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation completes.</source>
          <target state="translated">Si la méthode <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph> est appelée avant que l'opération <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> ne se termine, elle demeure bloquée jusqu'à ce que l'opération <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> soit terminée.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation does not complete within the specified time-out interval a <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</source>
          <target state="translated">Si l'opération <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> ne se termine pas avant l'issue du délai spécifié, une <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> est levée depuis <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.EndTerminate%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method terminates a workflow instance asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Cette méthode termine de façon asynchrone une instance de flux de travail à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginTerminate(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Persists and disposes a workflow instance asynchronously using the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Rend persistante et supprime de façon asynchrone une instance de flux de travail à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>If the workflow instance was previously loaded from persistence, then the same <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> used to load the workflow is used for persistence.</source>
          <target state="translated">Si l'instance de workflow a été précédemment chargée à partir d'un point de persistance, alors, le même <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> utilisé pour charger le workflow est utilisé pour la persistance.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>If the workflow was created and has not yet been persisted, then an <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> must be configured before calling this method or else an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when this method is called.</source>
          <target state="translated">Si le workflow a été créé et n'a pas encore été rendu persistant, alors un <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> doit être configuré avant d'appeler cette méthode ou bien une exception <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> est levée lorsque cette méthode est appelée.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
          <source>The method to be called when the <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /&gt;</ph> operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /&gt;</ph> est terminée.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
          <source>Persists and disposes a workflow instance asynchronously using the specified callback method and user-provided state.</source>
          <target state="translated">Rend persistante et supprime de façon asynchrone une instance de flux de travail à l'aide de la méthode de rappel et de l'état fourni par l'utilisateur.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /&gt;</ph> operation.</source>
          <target state="translated">Référence à l'opération asynchrone <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
          <source>To determine whether the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> operation was successful, call <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph>.</source>
          <target state="translated">Pour déterminer si l'opération <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> a réussi, appelez <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph> can be called from inside or outside of the method reference in the <ph id="ph2">`callback`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph> peut être appelée à l'intérieur ou à l'extérieur de la méthode référencée dans le paramètre <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph> is called before the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> operation completes, it blocks until the <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> operation completes.</source>
          <target state="translated">Si la méthode <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph> est appelée avant que l'opération <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> ne se termine, elle demeure bloquée jusqu'à ce que l'opération <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> soit terminée.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> operation must complete in 30 seconds or a <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph>.</source>
          <target state="translated">Par défaut, l'opération <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> doit être réalisée en 30 secondes, à défaut de quoi une <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> est levée depuis <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
          <source>If the workflow instance was previously loaded from persistence, then the same <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> used to load the workflow is used for persistence.</source>
          <target state="translated">Si l'instance de workflow a été précédemment chargée à partir d'un point de persistance, alors, le même <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> utilisé pour charger le workflow est utilisé pour la persistance.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
          <source>If the workflow was created and has not yet been persisted, then an <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> must be configured before calling this method or else an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when this method is called.</source>
          <target state="translated">Si le workflow a été créé et n'a pas encore été rendu persistant, alors un <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> doit être configuré avant d'appeler cette méthode ou bien une exception <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> est levée lorsque cette méthode est appelée.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
          <source>This method persists and disposes a workflow instance asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Cette méthode rend persistante et supprime de façon asynchrone une instance de flux de travail à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.AsyncCallback,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The interval in which the <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> operation must complete before the operation is canceled and a <ph id="ph2">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervalle dans lequel l'opération <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginTerminate" /&gt;</ph> doit être réalisée avant que l'opération ne soit annulée et qu'une <ph id="ph2">&lt;see cref="T:System.TimeoutException" /&gt;</ph> ne soit levée.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>The method to be called when the <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /&gt;</ph> operation has completed.</source>
          <target state="translated">Méthode à appeler lorsque l'opération <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /&gt;</ph> est terminée.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>An optional application-specific object that contains information about the asynchronous operation.</source>
          <target state="translated">Objet spécifique à l'application facultatif qui contient les informations sur l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>Persists and disposes a workflow instance asynchronously using the specified time-out interval, callback method, and user-provided state.</source>
          <target state="translated">Rend persistante et supprime de façon asynchrone une instance de flux de travail à l'aide du délai, de la méthode de rappel et de l'état fourni par l'utilisateur.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>A reference to the asynchronous <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /&gt;</ph> operation.</source>
          <target state="translated">Référence à l'opération asynchrone <ph id="ph1">&lt;see cref="Overload:System.Activities.WorkflowApplication.BeginUnload" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>To determine whether the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> operation was successful, call <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph>.</source>
          <target state="translated">Pour déterminer si l'opération <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> a réussi, appelez <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph> can be called from inside or outside of the method reference in the <ph id="ph2">`callback`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph> peut être appelée à l'intérieur ou à l'extérieur de la méthode référencée dans le paramètre <ph id="ph2">`callback`</ph>.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph> is called before the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> operation completes, it blocks until the <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> operation completes.</source>
          <target state="translated">Si la méthode <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph> est appelée avant que l'opération <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> ne se termine, elle demeure bloquée jusqu'à ce que l'opération <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> soit terminée.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> operation does not complete within the specified time-out interval a <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> is thrown from <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph>.</source>
          <target state="translated">Si l'opération <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> ne se termine pas avant l'issue du délai spécifié, une <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> est levée depuis <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication.EndUnload%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If the workflow instance was previously loaded from persistence, then the same <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> used to load the workflow is used for persistence.</source>
          <target state="translated">Si l'instance de workflow a été précédemment chargée à partir d'un point de persistance, alors, le même <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> utilisé pour charger le workflow est utilisé pour la persistance.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>If the workflow was created and has not yet been persisted, then an <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> must be configured before calling this method or else an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when this method is called.</source>
          <target state="translated">Si le workflow a été créé et n'a pas encore été rendu persistant, alors un <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> doit être configuré avant d'appeler cette méthode ou bien une exception <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> est levée lorsque cette méthode est appelée.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>This method persists and unloads a workflow instance asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Cette méthode rend persistante et décharge de façon asynchrone une instance de flux de travail à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.BeginUnload(System.TimeSpan,System.AsyncCallback,System.Object)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Cancels the workflow instance.</source>
          <target state="translated">Annule l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>This method schedules the cancellation of the workflow instance.</source>
          <target state="translated">Cette méthode planifie l'annulation de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>To be notified when the cancellation has completed, use the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handle.</source>
          <target state="translated">Pour être informé que l'annulation s'est correctement déroulée, utilisez le handle <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>By default, the cancel operation must complete in 30 seconds or a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown.</source>
          <target state="translated">Par défaut, l'opération d'annulation doit être exécutée dans un délai de 30 secondes, sinon une exception <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Cancel">
          <source>Cancels the workflow instance.</source>
          <target state="translated">Annule l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Cancel">
          <source>This method schedules the cancellation of the workflow instance.</source>
          <target state="translated">Cette méthode planifie l'annulation de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Cancel">
          <source>To be notified when the cancellation has completed, use the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handler.</source>
          <target state="translated">Pour être averti lorsque l'annulation est terminée, utilisez le gestionnaire d'événements <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Cancel">
          <source>By default, the cancel operation must complete in 30 seconds or a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown.</source>
          <target state="translated">Par défaut, l'opération d'annulation doit être exécutée dans un délai de 30 secondes, sinon une exception <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Cancel">
          <source>The following example hosts a workflow using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</source>
          <target state="translated">L'exemple suivant héberge un workflow à l'aide de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Cancel">
          <source>A <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</source>
          <target state="translated">Une instance de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> est construite à l'aide de la définition de flux de travail spécifiée, les événements de cycle de vie souhaités du flux de travail sont gérés et le flux de travail est appelé au moyen d'un appel à <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Cancel">
          <source>After the workflow is started, <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Cancel%2A&gt;</ph> is called.</source>
          <target state="translated">Une fois que le flux de travail a démarré, la méthode <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Cancel%2A&gt;</ph> est appelée.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Cancel">
          <source>When the workflow is cancelled, the following output is displayed to the console.</source>
          <target state="translated">Lorsque le flux de travail est annulé, la sortie suivante s'affiche sur la console.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)">
          <source>The interval in which the cancel operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervalle dans lequel l'opération d'annulation doit être réalisée avant que l'opération ne soit annulée et qu'une <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> ne soit levée.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)">
          <source>Cancels the workflow instance using the specified time-out interval.</source>
          <target state="translated">Annule l'instance de flux de travail à l'aide du délai d'attente spécifié.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)">
          <source>This method schedules the cancellation of the workflow instance.</source>
          <target state="translated">Cette méthode planifie l'annulation de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)">
          <source>To be notified when the cancellation has completed, use the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handler.</source>
          <target state="translated">Pour être averti lorsque l'annulation est terminée, utilisez le gestionnaire d'événements <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)">
          <source>The following example hosts a workflow using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</source>
          <target state="translated">L'exemple suivant héberge un workflow à l'aide de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)">
          <source>A <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</source>
          <target state="translated">Une instance de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> est construite à l'aide de la définition de flux de travail spécifiée, les événements de cycle de vie souhaités du flux de travail sont gérés et le flux de travail est appelé au moyen d'un appel à <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)">
          <source>After the workflow is started, <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Cancel%2A&gt;</ph> is called.</source>
          <target state="translated">Une fois que le flux de travail a démarré, la méthode <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Cancel%2A&gt;</ph> est appelée.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Cancel(System.TimeSpan)">
          <source>When the workflow is cancelled, the following output is displayed to the console.</source>
          <target state="translated">Lorsque le flux de travail est annulé, la sortie suivante s'affiche sur la console.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="P:System.Activities.WorkflowApplication.Completed">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Action`1" /&gt;</ph> that is invoked when the workflow instance completes.</source>
          <target state="translated">Obtient ou définit l'objet <ph id="ph1">&lt;see cref="T:System.Action`1" /&gt;</ph> qui est appelé lorsque l'instance de flux de travail se termine.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Completed">
          <source>The action that is invoked when the workflow instance is complete.</source>
          <target state="translated">Action appelée lorsque l'instance de flux de travail est terminée.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Completed">
          <source>The following code example inspects the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplicationCompletedEventArgs&gt;</ph> passed into the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handler of a <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance and displays information about how the workflow completed.</source>
          <target state="translated">L'exemple de code suivant inspecte l'objet <ph id="ph1">&lt;xref:System.Activities.WorkflowApplicationCompletedEventArgs&gt;</ph> passé dans le gestionnaire d'événements <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> d'une instance de <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> et indique la façon dont le flux de travail s'est terminé.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Creates a default instance owner for the workflow.</source>
          <target state="translated">Crée un propriétaire d'instance par défaut du flux de travail.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">Accès à un état persistant de l'instance actuelle de l'application de flux de travail.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)">
          <source>The definition identity of the workflow.</source>
          <target state="translated">Identité de la définition du flux de travail.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)">
          <source>The identity filter.</source>
          <target state="translated">Filtre d'identité.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter)">
          <source>Creates a default instance owner for the workflow using specified instance store, definition identity, and identity filter.</source>
          <target state="translated">Crée un propriétaire d'instance par défaut pour le flux de travail à l'aide d'un magasin d'instances, d'une identité de définition et d'un filtre d'identité spécifiés.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">Accès à un état persistant de l'instance actuelle de l'application de flux de travail.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)">
          <source>The definition identity of the workflow.</source>
          <target state="translated">Identité de la définition du flux de travail.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)">
          <source>The identity filter.</source>
          <target state="translated">Filtre d'identité.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)">
          <source>The interval in which the begin load operation must complete before the operation is canceled.</source>
          <target state="translated">Intervalle dans lequel l'opération de chargement doit être réalisée avant que l'opération ne soit annulée.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.CreateDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.Activities.WorkflowIdentity,System.Activities.WorkflowIdentityFilter,System.TimeSpan)">
          <source>Creates a default instance owner for the workflow using specified instance store, definition identity, and identity filter and timeout interval.</source>
          <target state="translated">Crée un propriétaire d'instance par défaut pour le flux de travail à l'aide d'un magasin d'instances, d'une identité de définition, d'un filtre d'identité et d'un intervalle de délai d'expiration spécifiés.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Deletes a default instance owner for the workflow.</source>
          <target state="translated">Supprime un propriétaire d'instance par défaut du flux de travail.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">Accès à un état persistant de l'instance actuelle de l'application de flux de travail.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore)">
          <source>Deletes a default instance owner for the workflow with specified instance store.</source>
          <target state="translated">Supprime un propriétaire d'instance par défaut du flux de travail avec la fonction d'enregistrement de l'instance spécifiée.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">Accès à un état persistant de l'instance actuelle de l'application de flux de travail.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
          <source>The interval in which the begin load operation must complete before the operation is canceled.</source>
          <target state="translated">Intervalle dans lequel l'opération de chargement doit être réalisée avant que l'opération ne soit annulée.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.DeleteDefaultInstanceOwner(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
          <source>Deletes a default instance owner for the workflow with specified instance store and timeout interval..</source>
          <target state="translated">Supprime un propriétaire d'instance par défaut du flux de travail avec les fonctions d'enregistrement et d'intervalle de délai d'attente de l'instance spécifiée.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)">
          <source>The asynchronous cancel operation.</source>
          <target state="translated">Opération d'annulation asynchrone.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)">
          <source>Waits for the pending asynchronous cancel operation to complete.</source>
          <target state="translated">Attend que l'opération d'annulation asynchrone en attente soit terminée.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)">
          <source>This method determines whether a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginCancel%2A&gt;</ph> operation was successful.</source>
          <target state="translated">Cette méthode détermine si une opération <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginCancel%2A&gt;</ph> a réussi.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)">
          <source>If called before the cancel operation completes, it blocks until the cancel operation is complete.</source>
          <target state="translated">Si la méthode est appelée avant la fin de l'opération d'annulation, elle demeure bloquée jusqu'à la fin de l'opération d'annulation.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)">
          <source>This method completes the asynchronous cancel operation using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Cette méthode complète l'opération d'annulation asynchrone à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndCancel(System.IAsyncResult)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner(System.IAsyncResult)">
          <source>The asynchronous result.</source>
          <target state="translated">Résultat asynchrone.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndCreateDefaultInstanceOwner(System.IAsyncResult)">
          <source>Waits for the creation of default instance owner to complete.</source>
          <target state="translated">Attend que la création du propriétaire d'instance par défaut soit terminée.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner(System.IAsyncResult)">
          <source>The asynchronous result.</source>
          <target state="translated">Résultat asynchrone.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndDeleteDefaultInstanceOwner(System.IAsyncResult)">
          <source>Waits for the deletion of default instance owner to complete.</source>
          <target state="translated">Attend que la suppression du propriétaire d'instance par défaut soit terminée.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndGetInstance(System.IAsyncResult)">
          <source>The asynchronous result.</source>
          <target state="translated">Résultat asynchrone.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndGetInstance(System.IAsyncResult)">
          <source>Waits for the instance retrieval to complete.</source>
          <target state="translated">Attend que la récupération d'instance soit terminée.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndGetInstance(System.IAsyncResult)">
          <source>The result of the operation.</source>
          <target state="translated">Résultat de l'opération.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndGetRunnableInstance(System.IAsyncResult)">
          <source>The asynchronous result.</source>
          <target state="translated">Résultat asynchrone.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndGetRunnableInstance(System.IAsyncResult)">
          <source>Waits for the asynchronous retrieval of runnable instance operation to complete.</source>
          <target state="translated">Attend que récupération asynchrone de l'opération de l'instance exécutable se termine.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndGetRunnableInstance(System.IAsyncResult)">
          <source>The result of the operation.</source>
          <target state="translated">Résultat de l'opération.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)">
          <source>The asynchronous load operation.</source>
          <target state="translated">Opération de chargement asynchrone.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)">
          <source>Waits for the pending asynchronous load operation to complete.</source>
          <target state="translated">Attend que l'opération de chargement asynchrone en attente soit terminée.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)">
          <source>If this method is called before the loading operation completes, it blocks until the loading operation is complete.</source>
          <target state="translated">Si cette méthode est appelée avant que l'opération de chargement ne soit terminée, elle s'interrompt jusqu'à ce que l'opération de chargement soit terminée.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)">
          <source>This method completes the asynchronous load operation using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Cette méthode complète l'opération de chargement asynchrone à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndLoad(System.IAsyncResult)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)">
          <source>A reference to the asynchronous load operation.</source>
          <target state="translated">Référence à l'opération de chargement asynchrone.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)">
          <source>Waits for the asynchronous load runnable instance operation to complete.</source>
          <target state="translated">Attend que l'opération de l'instance exécutable de chargement asynchrone soit terminée.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)">
          <source>This method determines whether a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginLoadRunnableInstance%2A&gt;</ph> operation was successful.</source>
          <target state="translated">Cette méthode détermine si une opération <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginLoadRunnableInstance%2A&gt;</ph> a réussi.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)">
          <source>If called before the load operation completes, it blocks until the operation is complete.</source>
          <target state="translated">Si la méthode est appelée avant que l'opération de chargement soit terminée, elle demeure bloquée jusqu'à ce que l'opération soit terminée.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)">
          <source>This method loads workflows asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Cette méthode charge de façon asynchrone les flux de travail à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndLoadRunnableInstance(System.IAsyncResult)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)">
          <source>The asynchronous persist operation.</source>
          <target state="translated">Opération de persistance asynchrone.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)">
          <source>Waits for the pending asynchronous persist operation to complete.</source>
          <target state="translated">Attend que l'opération de persistance asynchrone en attente soit terminée.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)">
          <source>This method determines whether a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginPersist%2A&gt;</ph> operation was successful.</source>
          <target state="translated">Cette méthode détermine si une opération <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginPersist%2A&gt;</ph> a réussi.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)">
          <source>If called before the persist operation completes, it blocks until the persist operation is complete.</source>
          <target state="translated">Si la méthode est appelée avant la fin de l'opération asynchrone, elle demeure bloquée jusqu'à ce que l'opération de persistance soit terminée.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)">
          <source>This method completes the asynchronous persist operation using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Cette méthode complète l'opération de persistance asynchrone à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndPersist(System.IAsyncResult)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)">
          <source>A reference to the asynchronous bookmark resume operation.</source>
          <target state="translated">Référence à l'opération de reprise de signet asynchrone.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)">
          <source>Waits for a bookmark resume operation to complete.</source>
          <target state="translated">Attend qu'une opération de reprise de signet soit terminée.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)">
          <source>One of the enumeration values that indicates the results of a bookmark resumption operation.</source>
          <target state="translated">L'une des valeurs d'énumération qui indique les résultats d'une opération de reprise de signet.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)">
          <source>This method determines whether a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginResumeBookmark%2A&gt;</ph> operation was successful.</source>
          <target state="translated">Cette méthode détermine si une opération <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginResumeBookmark%2A&gt;</ph> a réussi.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)">
          <source>If called before the load operation completes, it blocks until the operation is complete.</source>
          <target state="translated">Si la méthode est appelée avant que l'opération de chargement soit terminée, elle demeure bloquée jusqu'à ce que l'opération soit terminée.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)">
          <source>This method resumes a bookmark asynchronously using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Cette méthode reprend de façon asynchrone un signet à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndResumeBookmark(System.IAsyncResult)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)">
          <source>The asynchronous run operation.</source>
          <target state="translated">Opération d'exécution asynchrone.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)">
          <source>Waits for the pending asynchronous run operation to complete.</source>
          <target state="translated">Attend que l'opération d'exécution asynchrone en attente soit terminée.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)">
          <source>This method determines whether a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginRun%2A&gt;</ph> operation was successful.</source>
          <target state="translated">Cette méthode détermine si une opération <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginRun%2A&gt;</ph> a réussi.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)">
          <source>If called before the resume operation completes, it blocks until the resume operation is complete.</source>
          <target state="translated">Si cette méthode est appelée avant la fin de l'opération de reprise, elle demeure bloquée jusqu'à la fin de l'opération de reprise.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)">
          <source>This method completes an asynchronous run operation using the <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Cette méthode complète l'opération d'exécution asynchrone à l'aide du modèle de conception asynchrone <ph id="ph1">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndRun(System.IAsyncResult)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)">
          <source>The asynchronous terminate operation.</source>
          <target state="translated">Opération d'arrêt asynchrone.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)">
          <source>Waits for the pending asynchronous terminate operation to complete.</source>
          <target state="translated">Attend que l'opération de fin asynchrone en attente soit terminée.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)">
          <source>This method can be called to determine whether a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation was successful.</source>
          <target state="translated">Cette méthode peut être appelée pour déterminer si une opération <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> a réussi.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)">
          <source>If called before the terminate operation completes, it blocks until the operation is complete.</source>
          <target state="translated">Si la méthode est appelée avant que l'opération de fin soit terminée, elle demeure bloquée jusqu'à ce que l'opération soit terminée.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)">
          <source>This method completes an asynchronous <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> operation using the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Cette méthode complète une opération <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginTerminate%2A&gt;</ph> asynchrone à l'aide du modèle de conception asynchrone <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndTerminate(System.IAsyncResult)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)">
          <source>The asynchronous unload operation.</source>
          <target state="translated">Opération de déchargement asynchrone.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)">
          <source>Waits for the pending asynchronous unload operation to complete.</source>
          <target state="translated">Attend que l'opération de déchargement asynchrone en attente soit terminée.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)">
          <source>This method can be called to determine whether a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> operation was successful.</source>
          <target state="translated">Cette méthode peut être appelée pour déterminer si une opération <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> a réussi.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)">
          <source>If called before the unload operation completes, it blocks until the operation is complete.</source>
          <target state="translated">Si la méthode est appelée avant que l'opération de déchargement soit terminée, elle demeure bloquée jusqu'à ce que l'opération soit terminée.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)">
          <source>This method completes an asynchronous <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> operation using the <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph> asynchronous design pattern.</source>
          <target state="translated">Cette méthode complète une opération <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.BeginUnload%2A&gt;</ph> asynchrone à l'aide du modèle de conception asynchrone <ph id="ph2">&lt;xref:System.IAsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.EndUnload(System.IAsyncResult)">
          <source>For more information, see <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Asynchronous Programming Overview<ept id="p1">](http://go.microsoft.com/fwlink/?LinkId=141764)</ept>.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="P:System.Activities.WorkflowApplication.Extensions">
          <source>Gets the collection of extensions for the current workflow instance.</source>
          <target state="translated">Obtient la collection d’extensions pour l’instance de flux de travail actuelle.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Extensions">
          <source>A collection of objects.</source>
          <target state="translated">Collection d’objets.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Returns the collection of bookmarks for the workflow instance.</source>
          <target state="translated">Retourne la collection de signets de l’instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetBookmarks">
          <source>Returns the collection of bookmarks for the workflow instance.</source>
          <target state="translated">Retourne la collection de signets de l’instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetBookmarks">
          <source>A read-only collection of bookmarks for the workflow instance.</source>
          <target state="translated">Collection en lecture seule de signets de l’instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.GetBookmarks">
          <source>If this operation does not complete within 30 seconds, a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown.</source>
          <target state="translated">Si cette opération n'est pas exécutée dans un délai de 30 secondes, une exception <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.GetBookmarks">
          <source>The following example creates a workflow that uses a <ph id="ph1">`ReadLine`</ph> activity that creates a <ph id="ph2">&lt;xref:System.Activities.Bookmark&gt;</ph>.</source>
          <target state="translated">L'exemple suivant génère un flux de travail utilisant une activité <ph id="ph1">`ReadLine`</ph> qui crée un <ph id="ph2">&lt;xref:System.Activities.Bookmark&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.GetBookmarks">
          <source>The workflow is started, and once the <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> is created and the workflow goes idle, <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.GetBookmarks%2A&gt;</ph> is called.</source>
          <target state="translated">Le workflow démarre et, une fois que <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> est créé et que le workflow est inactif, la méthode <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.GetBookmarks%2A&gt;</ph> est appelée.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.GetBookmarks">
          <source>When the workflow is completed, the following output is displayed to the console.</source>
          <target state="translated">Lorsque le flux de travail est terminé, la sortie suivante s'affiche sur la console.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)">
          <source>The interval in which this method must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervalle durant lequel cette méthode doit se terminer avant que l'opération ne soit annulée et qu'une <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> ne soit levée.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)">
          <source>Returns the collection of bookmarks for the workflow instance using the specified time-out interval.</source>
          <target state="translated">Retourne la collection de signets pour l’instance de flux de travail à l’aide du délai d’attente spécifié.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)">
          <source>A read-only collection of bookmarks for the workflow instance.</source>
          <target state="translated">Collection en lecture seule de signets de l’instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)">
          <source>The following example creates a workflow that uses a <ph id="ph1">`ReadLine`</ph> activity that creates a <ph id="ph2">&lt;xref:System.Activities.Bookmark&gt;</ph>.</source>
          <target state="translated">L'exemple suivant génère un flux de travail utilisant une activité <ph id="ph1">`ReadLine`</ph> qui crée un <ph id="ph2">&lt;xref:System.Activities.Bookmark&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)">
          <source>The workflow is started, and once the <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> is created and the workflow goes idle, <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.GetBookmarks%2A&gt;</ph> is called.</source>
          <target state="translated">Le workflow démarre et, une fois que <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> est créé et que le workflow est inactif, la méthode <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.GetBookmarks%2A&gt;</ph> est appelée.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.GetBookmarks(System.TimeSpan)">
          <source>When the workflow is completed, the following output is displayed to the console.</source>
          <target state="translated">Lorsque le flux de travail est terminé, la sortie suivante s'affiche sur la console.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Retrieves the workflow instance.</source>
          <target state="translated">Extrait l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)">
          <source>The instance identifier.</source>
          <target state="translated">Identificateur d'instance.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">Accès à un état persistant de l'instance actuelle de l'application de flux de travail.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)">
          <source>Retrieves the workflow instance using specified instance identifier and instance store.</source>
          <target state="translated">Récupère l'instance de flux de travail à l'aide de l'identificateur d'instance et du magasin d'instances spécifiés.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore)">
          <source>The retrieved instance.</source>
          <target state="translated">Instance récupérée.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
          <source>The instance identifier.</source>
          <target state="translated">Identificateur d'instance.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
          <source>The access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">Accès à un état persistant de l'instance actuelle de l'application de flux de travail.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
          <source>The interval in which the begin load operation must complete before the operation is canceled.</source>
          <target state="translated">Intervalle dans lequel l'opération de chargement doit être réalisée avant que l'opération ne soit annulée.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
          <source>Retrieves the workflow instance using specified instance identifier, instance store and timeout interval.</source>
          <target state="translated">Récupère l'instance de flux de travail à l'aide de l'identificateur d'instance, du magasin d'instances et de l'intervalle de délai d'expiration spécifiés.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetInstance(System.Guid,System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
          <source>A reference to the asynchronous operation.</source>
          <target state="translated">Référence à l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Retrieves the runnable instance of the workflow.</source>
          <target state="translated">Récupère l'instance exécutable du flux de travail.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)">
          <source>The access to the persisted state of the current instance of the workflow application</source>
          <target state="translated">Accès à un état persistant de l'instance actuelle de l'application de flux de travail</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)">
          <source>Retrieves the runnable instance of the workflow with specified instance store.</source>
          <target state="translated">Récupère l'instance exécutable du flux de travail avec le magasin d'instance spécifié.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore)">
          <source>The runnable instance.</source>
          <target state="translated">Instance exécutable.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
          <source>The access to the persisted state of the current instance of the workflow application</source>
          <target state="translated">Accès à un état persistant de l'instance actuelle de l'application de flux de travail</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
          <source>The interval in which the begin load operation must complete before the operation is canceled.</source>
          <target state="translated">Intervalle dans lequel l'opération de chargement doit être réalisée avant que l'opération ne soit annulée.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
          <source>Retrieves the runnable instance of the workflow with specified instance store and timeout interval.</source>
          <target state="translated">Récupère l'instance exécutable du flux de travail avec le magasin d'instance spécifié et l'intervalle de délai d'expiration.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.GetRunnableInstance(System.Runtime.DurableInstancing.InstanceStore,System.TimeSpan)">
          <source>The runnable instance.</source>
          <target state="translated">Instance exécutable.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="P:System.Activities.WorkflowApplication.Id">
          <source>Gets the 128-bit GUID identifier of the current workflow application instance.</source>
          <target state="translated">Obtient l'identificateur GUID 128 bits de l'instance d'application de flux de travail actuelle.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Id">
          <source>A 128-bit GUID identifier.</source>
          <target state="translated">Identificateur GUID 128 bits.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Id">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance and then displays the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Id%2A&gt;</ph> value to the console.</source>
          <target state="translated">L'exemple suivant crée une instance de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>, puis affiche la valeur <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Id%2A&gt;</ph> sur la console.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" uid="P:System.Activities.WorkflowApplication.Idle">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Action`1" /&gt;</ph> that is invoked when the current workflow instance becomes idle.</source>
          <target state="translated">Obtient ou définit l'objet <ph id="ph1">&lt;see cref="T:System.Action`1" /&gt;</ph> appelé lorsque l'instance de flux de travail active devient inactive.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Idle">
          <source>An action that executes when a workflow instance becomes idle.</source>
          <target state="translated">Action qui s'exécute lorsqu'une instance de flux de travail devient inactive.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Idle">
          <source>The following code example inspects the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplicationIdleEventArgs&gt;</ph> passed into the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Idle%2A&gt;</ph> handler of a <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance.</source>
          <target state="translated">L'exemple de code suivant inspecte l'objet <ph id="ph1">&lt;xref:System.Activities.WorkflowApplicationIdleEventArgs&gt;</ph> passé dans le gestionnaire <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Idle%2A&gt;</ph> d'une instance de <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Idle">
          <source>In this example the workflow going idle has one <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> with a name of <ph id="ph2">`EnterGuess`</ph>, owned by an activity named <ph id="ph3">`ReadInt`</ph>.</source>
          <target state="translated">Dans cet exemple, le workflow qui devient inactif comporte un <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> portant le nom <ph id="ph2">`EnterGuess`</ph> et appartenant à une activité nommée <ph id="ph3">`ReadInt`</ph>.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Idle">
          <source>This code example is based off of <bpt id="p1">[</bpt>How to: Run a Workflow<ept id="p1">](~/docs/framework/windows-workflow-foundation/how-to-run-a-workflow.md)</ept>, which is part of the <bpt id="p2">[</bpt>Getting Started Tutorial &amp;#91;.NET Framework 4.5&amp;#93;<ept id="p2">](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md)</ept>.</source>
          <target state="translated">Cet exemple de code est basé dérivé de <bpt id="p1">[</bpt>Comment : exécuter un Workflow<ept id="p1">](~/docs/framework/windows-workflow-foundation/how-to-run-a-workflow.md)</ept>, qui fait partie de la <bpt id="p2">[</bpt>Getting Started Tutorial &amp;#91;.NET Framework 4.5&amp;#93;<ept id="p2">](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md)</ept>.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Idle">
          <source>If the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Idle%2A&gt;</ph> handler in that step is modified to contain the code from this example, the following output is displayed.</source>
          <target state="translated">Si le gestionnaire <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Idle%2A&gt;</ph> utilisé dans cette étape est modifié de façon à contenir le code de cet exemple, la sortie suivante s'affiche.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="P:System.Activities.WorkflowApplication.InstanceStore">
          <source>Gets or sets an object that provides access to the persisted state of the current instance of the workflow application.</source>
          <target state="translated">Obtient ou définit un objet qui permet d'accéder à l'état persistant de l'instance actuelle de l'application de flux de travail.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.InstanceStore">
          <source>An instance store.</source>
          <target state="translated">Magasin d'instances.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.InstanceStore">
          <source>The following example creates a WorkflowApplication instance and then configures the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> using a <ph id="ph2">&lt;xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore&gt;</ph>.</source>
          <target state="translated">L'exemple suivant crée une instance de WorkflowApplication, puis configure la propriété <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> à l'aide d'un <ph id="ph2">&lt;xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.InstanceStore">
          <source>This code example is part of <bpt id="p1">[</bpt>How to: Create and Run a Long Running Workflow<ept id="p1">](~/docs/framework/windows-workflow-foundation/how-to-create-and-run-a-long-running-workflow.md)</ept>, which is part of the <bpt id="p2">[</bpt>Getting Started Tutorial &amp;#91;.NET Framework 4.5&amp;#93;<ept id="p2">](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md)</ept>.</source>
          <target state="translated">Cet exemple de code fait partie de <bpt id="p1">[</bpt>Comment : créer et exécuter un Workflow de longue durée<ept id="p1">](~/docs/framework/windows-workflow-foundation/how-to-create-and-run-a-long-running-workflow.md)</ept>, qui fait partie de la <bpt id="p2">[</bpt>Getting Started Tutorial &amp;#91;.NET Framework 4.5&amp;#93;<ept id="p2">](~/docs/framework/windows-workflow-foundation/getting-started-tutorial.md)</ept>.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Loads a workflow instance from an instance store.</source>
          <target state="translated">Charge une instance de flux de travail à partir d'un magasin d'instances.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance)">
          <source>The instance.</source>
          <target state="translated">Instance.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance)">
          <source>Loads a workflow instance from an instance store with specified instance.</source>
          <target state="translated">Charge une instance de flux de travail à partir d'un magasin d'instances avec l'instance spécifiée.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Guid)">
          <source>A globally unique 128-bit identifier for the workflow instance.</source>
          <target state="translated">Identificateur 128 bits global unique de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Guid)">
          <source>Loads the specified workflow instance into memory from an instance store.</source>
          <target state="translated">Charge l'instance de flux de travail spécifiée en mémoire à partir d'un magasin d'instances.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Load(System.Guid)">
          <source>The following example calls <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Load%2A&gt;</ph> to load persisted workflow instance from a <ph id="ph2">&lt;xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore&gt;</ph>.</source>
          <target state="translated">L'exemple suivant appelle <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Load%2A&gt;</ph> pour charger l'instance de flux de travail persistante à partir d'un <ph id="ph2">&lt;xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Load(System.Guid)">
          <source>This example is from the <ph id="ph1">`LoadAndCompleteInstance`</ph> method in the <bpt id="p1">[</bpt>Persisting a Workflow Application<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md)</ept> sample.</source>
          <target state="translated">Cet exemple est issu le <ph id="ph1">`LoadAndCompleteInstance`</ph> méthode dans le <bpt id="p1">[</bpt>persistance d’une Application de Workflow<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md)</ept> exemple.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>The instance.</source>
          <target state="translated">Instance.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>The update map.</source>
          <target state="translated">Carte de mise à jour.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap)">
          <source>Loads a workflow instance from an instance store with specified instance and update map.</source>
          <target state="translated">Charge une instance du flux de travail à partir d'un magasin d'instances avec l'instance et la carte de mise à jour spécifiés.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)">
          <source>The instance.</source>
          <target state="translated">Instance.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)">
          <source>The interval in which the begin load operation must complete before the operation is canceled.</source>
          <target state="translated">Intervalle dans lequel l'opération de chargement doit être réalisée avant que l'opération ne soit annulée.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.TimeSpan)">
          <source>Loads a workflow instance from an instance store with specified instance and timeout interval.</source>
          <target state="translated">Charge une instance du flux de travail à partir d'un magasin d'instances avec l'instance et l'intervalle de délai d'attente spécifiés.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)">
          <source>A globally unique 128-bit identifier for the workflow instance.</source>
          <target state="translated">Identificateur 128 bits global unique de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)">
          <source>The interval in which the load operation must complete before the load operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervalle au cours duquel l'opération de chargement doit être exécutée ; au-delà de ce délai, l'opération de chargement est annulée et une exception <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)">
          <source>Loads the specified workflow instance into memory from an instance store using the specified time-out interval.</source>
          <target state="translated">Charge en mémoire l'instance de flux de travail spécifiée à partir d'un magasin d'instances à l'aide de l'intervalle de délai d'attente spécifié.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)">
          <source>The following example calls <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Load%2A&gt;</ph> to load persisted workflow instance from a <ph id="ph2">&lt;xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore&gt;</ph>.</source>
          <target state="translated">L'exemple suivant appelle <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Load%2A&gt;</ph> pour charger l'instance de flux de travail persistante à partir d'un <ph id="ph2">&lt;xref:System.Activities.DurableInstancing.SqlWorkflowInstanceStore&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Load(System.Guid,System.TimeSpan)">
          <source>This example is from the <ph id="ph1">`LoadAndCompleteInstance`</ph> method in the <bpt id="p1">[</bpt>Persisting a Workflow Application<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md)</ept> sample.</source>
          <target state="translated">Cet exemple est issu le <ph id="ph1">`LoadAndCompleteInstance`</ph> méthode dans le <bpt id="p1">[</bpt>persistance d’une Application de Workflow<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md)</ept> exemple.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)">
          <source>The instance.</source>
          <target state="translated">Instance.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)">
          <source>The update map.</source>
          <target state="translated">Carte de mise à jour.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)">
          <source>The interval in which the begin load operation must complete before the operation is canceled.</source>
          <target state="translated">Intervalle dans lequel l'opération de chargement doit être réalisée avant que l'opération ne soit annulée.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Load(System.Activities.WorkflowApplicationInstance,System.Activities.DynamicUpdate.DynamicUpdateMap,System.TimeSpan)">
          <source>Loads a workflow instance from an instance store with specified instance, update map and timeout interval.</source>
          <target state="translated">Charge une instance du flux de travail à partir d'un magasin d'instances avec l'instance, la carte de mise à jour et l'intervalle de délai d'attente spécifiés.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Loads a runnable workflow instance from the <ph id="ph1">&lt;see cref="P:System.Activities.WorkflowApplication.InstanceStore" /&gt;</ph>.</source>
          <target state="translated">Charge une instance de flux de travail exécutable à partir de la propriété <ph id="ph1">&lt;see cref="P:System.Activities.WorkflowApplication.InstanceStore" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>A runnable instance is an instance for which a timer or instance lock has expired.</source>
          <target state="translated">Une instance exécutable est une instance pour laquelle une horloge ou un verrou d'instance a expiré.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.LoadRunnableInstance">
          <source>Loads a runnable workflow instance from the <ph id="ph1">&lt;see cref="P:System.Activities.WorkflowApplication.InstanceStore" /&gt;</ph>.</source>
          <target state="translated">Charge une instance de flux de travail exécutable à partir de la propriété <ph id="ph1">&lt;see cref="P:System.Activities.WorkflowApplication.InstanceStore" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.LoadRunnableInstance">
          <source>A runnable instance is an instance for which a timer or instance lock has expired.</source>
          <target state="translated">Une instance exécutable est une instance pour laquelle une horloge ou un verrou d'instance a expiré.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.LoadRunnableInstance">
          <source>By default, the load operation must complete in 30 seconds or a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown.</source>
          <target state="translated">Par défaut, l'opération de chargement doit être réalisée en 30 secondes, à défaut de quoi une <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)">
          <source>The interval in which the load operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervalle dans lequel l'opération de chargement doit être réalisée avant que l'opération ne soit annulée et qu'une <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> ne soit levée.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)">
          <source>Loads a runnable workflow instance from the <ph id="ph1">&lt;see cref="P:System.Activities.WorkflowApplication.InstanceStore" /&gt;</ph> using the specified time-out interval.</source>
          <target state="translated">Charge une instance de flux de travail exécutable à partir de la propriété <ph id="ph1">&lt;see cref="P:System.Activities.WorkflowApplication.InstanceStore" /&gt;</ph> à l'aide du délai d'attente spécifié.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.LoadRunnableInstance(System.TimeSpan)">
          <source>A runnable instance is an instance for which a timer or instance lock has expired.</source>
          <target state="translated">Une instance exécutable est une instance pour laquelle une horloge ou un verrou d'instance a expiré.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="P:System.Activities.WorkflowApplication.OnUnhandledException">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Func`2" /&gt;</ph> that is invoked when the current workflow instance encounters an unhandled exception.</source>
          <target state="translated">Obtient ou définit l'objet <ph id="ph1">&lt;see cref="T:System.Func`2" /&gt;</ph> qui est appelé lorsque l'instance de flux de travail actuelle rencontre une exception non gérée.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.OnUnhandledException">
          <source>The delegate that is invoked when a workflow instance encounters an unhandled exception.</source>
          <target state="translated">Délégué appelé lorsqu'une instance de flux de travail rencontre une exception non gérée.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.OnUnhandledException">
          <source>Both <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.OnUnhandledException%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior&gt;</ph> dictate the behavior of the runtime when an exception is not handled in the workflow; however, <ph id="ph3">&lt;xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior&gt;</ph> has the option of leaving a suspended workflow in the persistence store, while <ph id="ph4">&lt;xref:System.Activities.WorkflowApplication.OnUnhandledException%2A&gt;</ph> does not.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.OnUnhandledException%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior&gt;</ph> dictent le comportement du runtime lorsqu'une exception n'est pas gérée dans le workflow ; toutefois, <ph id="ph3">&lt;xref:System.ServiceModel.Activities.Description.WorkflowUnhandledExceptionBehavior&gt;</ph> peut laisser en suspens le workflow dans le magasin de persistance, contrairement à <ph id="ph4">&lt;xref:System.Activities.WorkflowApplication.OnUnhandledException%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.OnUnhandledException">
          <source>The reason for this is that what happens to a suspended workflow is host-specific, and <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> is not.</source>
          <target state="translated">La raison de cela est que ce qui arrive à un workflow suspendu est spécifique à l'hôte, contrairement à <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.OnUnhandledException">
          <source>To implement this functionality using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>, create a custom <ph id="ph2">&lt;xref:System.Activities.Persistence.PersistenceParticipant&gt;</ph> that has this behavior.</source>
          <target state="translated">Pour implémenter cette fonctionnalité à l'aide de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>, créez un <ph id="ph2">&lt;xref:System.Activities.Persistence.PersistenceParticipant&gt;</ph> personnalisé qui a ce comportement.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.OnUnhandledException">
          <source>The following example invokes a workflow that throws an exception.</source>
          <target state="translated">L'exemple suivant appelle un workflow qui lève une exception.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.OnUnhandledException">
          <source>The exception is unhandled by the workflow and the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.OnUnhandledException%2A&gt;</ph> handler is invoked.</source>
          <target state="translated">L'exception n'est pas prise en charge par le workflow et le gestionnaire <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.OnUnhandledException%2A&gt;</ph> est appelé.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.OnUnhandledException">
          <source>The <ph id="ph1">&lt;xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs&gt;</ph> are inspected to provide information about the exception, and the workflow is terminated.</source>
          <target state="translated">L'objet <ph id="ph1">&lt;xref:System.Activities.WorkflowApplicationUnhandledExceptionEventArgs&gt;</ph> est inspecté de façon à fournir des informations sur l'exception, et le workflow est arrêté.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Persists a workflow instance to an instance store.</source>
          <target state="translated">Rend une instance de flux de travail persistante dans un magasin d'instances.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>If the workflow instance was previously loaded from persistence, then the same <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> used to load the workflow is used for persistence.</source>
          <target state="translated">Si l'instance de workflow a été précédemment chargée à partir d'un point de persistance, alors, le même <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> utilisé pour charger le workflow est utilisé pour la persistance.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>If the workflow was created and has not yet been persisted, then an <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> must be configured before calling this method or else an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when this method is called.</source>
          <target state="translated">Si le workflow a été créé et n'a pas encore été rendu persistant, alors un <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> doit être configuré avant d'appeler cette méthode ou bien une exception <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> est levée lorsque cette méthode est appelée.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Persist">
          <source>Persists a workflow instance to an instance store.</source>
          <target state="translated">Rend une instance de flux de travail persistante dans un magasin d'instances.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Persist">
          <source>If the persist operation does not complete within 30 seconds, a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown.</source>
          <target state="translated">Si l'opération de persistance n'est pas exécutée dans un délai de 30 secondes, une exception <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Persist">
          <source>If the workflow instance was previously loaded from persistence, then the same <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> used to load the workflow is used for persistence.</source>
          <target state="translated">Si l'instance de workflow a été précédemment chargée à partir d'un point de persistance, alors, le même <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> utilisé pour charger le workflow est utilisé pour la persistance.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Persist">
          <source>If the workflow was created and has not yet been persisted, then an <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> must be configured before calling this method or else an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when this method is called.</source>
          <target state="translated">Si le workflow a été créé et n'a pas encore été rendu persistant, alors un <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> doit être configuré avant d'appeler cette méthode ou bien une exception <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> est levée lorsque cette méthode est appelée.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Persist">
          <source>The following example calls <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Persist%2A&gt;</ph> to persist a workflow instance before the workflow is started.</source>
          <target state="translated">L'exemple suivant appelle <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Persist%2A&gt;</ph> pour rendre une instance de flux de travail persistante avant le démarrage du flux de travail.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Persist">
          <source>This example is part of the <ph id="ph1">`StartAndUnloadInstance`</ph> method in the <bpt id="p1">[</bpt>Persisting a Workflow Application<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md)</ept> sample.</source>
          <target state="translated">Cet exemple fait partie de la <ph id="ph1">`StartAndUnloadInstance`</ph> méthode dans le <bpt id="p1">[</bpt>persistance d’une Application de Workflow<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md)</ept> exemple.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)">
          <source>The interval in which the persist operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervalle au cours duquel l'opération de persistance doit être exécutée ; au-delà de ce délai, l'opération est annulée et une exception <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)">
          <source>Persists a workflow instance to an instance store using the specified time-out interval.</source>
          <target state="translated">Rend une instance de flux de travail persistante dans un magasin d'instances avec l'intervalle de délai d'attente spécifié.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)">
          <source>If the workflow instance was previously loaded from persistence, then the same <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> used to load the workflow is used for persistence.</source>
          <target state="translated">Si l'instance de workflow a été précédemment chargée à partir d'un point de persistance, alors, le même <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> utilisé pour charger le workflow est utilisé pour la persistance.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)">
          <source>If the workflow was created and has not yet been persisted, then an <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> must be configured before calling this method or else an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when this method is called.</source>
          <target state="translated">Si le workflow a été créé et n'a pas encore été rendu persistant, alors un <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> doit être configuré avant d'appeler cette méthode ou bien une exception <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> est levée lorsque cette méthode est appelée.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)">
          <source>The following example calls <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Persist%2A&gt;</ph> to persist a workflow instance before the workflow is started.</source>
          <target state="translated">L'exemple suivant appelle <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Persist%2A&gt;</ph> pour rendre une instance de flux de travail persistante avant le démarrage du flux de travail.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Persist(System.TimeSpan)">
          <source>This example is from the <ph id="ph1">`StartAndUnloadInstance`</ph> method in the <bpt id="p1">[</bpt>Persisting a Workflow Application<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md)</ept> sample.</source>
          <target state="translated">Cet exemple est issu le <ph id="ph1">`StartAndUnloadInstance`</ph> méthode dans le <bpt id="p1">[</bpt>persistance d’une Application de Workflow<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/persisting-a-workflow-application.md)</ept> exemple.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" uid="P:System.Activities.WorkflowApplication.PersistableIdle">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Activities.ActivityFunc" /&gt;</ph> that is invoked when the current workflow instance is idle and can be persisted.</source>
          <target state="translated">Obtient ou définit l'objet <ph id="ph1">&lt;see cref="T:System.Activities.ActivityFunc" /&gt;</ph> qui est appelé lorsque l'instance de flux de travail actuelle est inactive et peut être rendue persistante.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.PersistableIdle">
          <source>The <ph id="ph1">&lt;see cref="T:System.Activities.ActivityFunc" /&gt;</ph> that is invoked when the current workflow instance is idle and can be persisted.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Activities.ActivityFunc" /&gt;</ph> appelé lorsque l'instance de flux de travail actuelle est inactive et peut être rendue persistante.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.PersistableIdle">
          <source>When a workflow becomes idle and can be persisted, both <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Idle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.PersistableIdle%2A&gt;</ph> are invoked, in that order.</source>
          <target state="translated">Lorsqu'un flux de travail devient inactif et peut être rendu persistant, les propriétés <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Idle%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.PersistableIdle%2A&gt;</ph> sont appelées, dans cet ordre.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.PersistableIdle">
          <source>The <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.PersistableIdle%2A&gt;</ph> handler returns one of the <ph id="ph2">&lt;xref:System.Activities.PersistableIdleAction&gt;</ph> enumeration values of <ph id="ph3">&lt;xref:System.Activities.PersistableIdleAction.None&gt;</ph>, <ph id="ph4">&lt;xref:System.Activities.PersistableIdleAction.Persist&gt;</ph>, or <ph id="ph5">&lt;xref:System.Activities.PersistableIdleAction.Unload&gt;</ph>.</source>
          <target state="translated">Le gestionnaire d'événements <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.PersistableIdle%2A&gt;</ph> retourne une des valeurs d'énumération <ph id="ph2">&lt;xref:System.Activities.PersistableIdleAction&gt;</ph> de <ph id="ph3">&lt;xref:System.Activities.PersistableIdleAction.None&gt;</ph>, <ph id="ph4">&lt;xref:System.Activities.PersistableIdleAction.Persist&gt;</ph> ou <ph id="ph5">&lt;xref:System.Activities.PersistableIdleAction.Unload&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.PersistableIdle">
          <source>The following example handles the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.PersistableIdle%2A&gt;</ph> handler and instructs the runtime to persist and unload the workflow.</source>
          <target state="translated">L'exemple suivant gère le gestionnaire d'événements <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.PersistableIdle%2A&gt;</ph> et indique au runtime qu'il doit rendre le flux de travail persistant et le décharger.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Initiates an operation to resume a bookmark.</source>
          <target state="translated">Lance une opération pour reprendre un signet.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)">
          <source>The bookmark to resume.</source>
          <target state="translated">Signet à reprendre.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)">
          <source>An object passed as a parameter to the method that is invoked when the bookmark resumes.</source>
          <target state="translated">Objet passé comme paramètre à la méthode appelée lors de la reprise du signet.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)">
          <source>Initiates an operation to resume the specified bookmark, using the specified value.</source>
          <target state="translated">Initialise une opération pour reprendre le signet spécifié, à l'aide de la valeur spécifiée.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)">
          <source>The bookmark to be resumed is previously created by an activity within the workflow instance.</source>
          <target state="translated">Le signet à reprendre est créé précédemment par une activité dans l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)">
          <source>The result of the bookmark resumption operation.</source>
          <target state="translated">Résultat de l'opération de reprise de signet.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)">
          <source>The bookmark result indicates whether the resumption operation succeeded or failed.</source>
          <target state="translated">Le résultat indique si l'opération de reprise a réussi ou échoué.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)">
          <source>The following example creates a workflow that uses a <ph id="ph1">`ReadLine`</ph> activity that creates a <ph id="ph2">&lt;xref:System.Activities.Bookmark&gt;</ph>.</source>
          <target state="translated">L'exemple suivant génère un flux de travail utilisant une activité <ph id="ph1">`ReadLine`</ph> qui crée un <ph id="ph2">&lt;xref:System.Activities.Bookmark&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object)">
          <source>The workflow is started, and once the <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</source>
          <target state="translated">Le flux de travail démarre, et une fois que le <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> est créé et que le flux de travail est inactif, l'entrée de l'utilisateur est collectée et le signet est repris.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)">
          <source>The name of the bookmark to be resumed.</source>
          <target state="translated">Nom du signet à reprendre.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)">
          <source>An object passed as a parameter to the method that is invoked when the bookmark resumes.</source>
          <target state="translated">Objet passé comme paramètre à la méthode appelée lors de la reprise du signet.</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)">
          <source>Initiates an operation to resume the bookmark with the specified name, using the specified value.</source>
          <target state="translated">Lance une opération pour reprendre le signet portant le nom spécifié, à l'aide de la valeur indiquée.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)">
          <source>The bookmark to be resumed is previously created by an activity within the workflow instance.</source>
          <target state="translated">Le signet à reprendre est créé précédemment par une activité dans l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)">
          <source>The result of the bookmark resumption operation.</source>
          <target state="translated">Résultat de l'opération de reprise de signet.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)">
          <source>The bookmark result indicates whether the resumption operation succeeded or failed.</source>
          <target state="translated">Le résultat indique si l'opération de reprise a réussi ou échoué.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)">
          <source>The following example creates a workflow that uses a <ph id="ph1">`ReadLine`</ph> activity that creates a <ph id="ph2">&lt;xref:System.Activities.Bookmark&gt;</ph>.</source>
          <target state="translated">L'exemple suivant génère un flux de travail utilisant une activité <ph id="ph1">`ReadLine`</ph> qui crée un <ph id="ph2">&lt;xref:System.Activities.Bookmark&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object)">
          <source>The workflow is started, and once the <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</source>
          <target state="translated">Le flux de travail démarre, et une fois que le <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> est créé et que le flux de travail est inactif, l'entrée de l'utilisateur est collectée et le signet est repris.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)">
          <source>The bookmark to resume.</source>
          <target state="translated">Signet à reprendre.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)">
          <source>An object passed as a parameter to the method that is invoked when the bookmark resumes.</source>
          <target state="translated">Objet passé comme paramètre à la méthode appelée lors de la reprise du signet.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)">
          <source>The time interval during which the bookmark must be resumed.</source>
          <target state="translated">Intervalle de temps pendant lequel le signet doit être repris.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)">
          <source>Initiates an operation to resume the specified bookmark, using the specified value and time-out interval.</source>
          <target state="translated">Lance une opération pour reprendre le signet spécifié, à l'aide de la valeur et de l'intervalle de délai d'attente indiqués.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)">
          <source>The bookmark to be resumed is previously created by an activity within the workflow instance.</source>
          <target state="translated">Le signet à reprendre est créé précédemment par une activité dans l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)">
          <source>The result of the bookmark resumption operation.</source>
          <target state="translated">Résultat de l'opération de reprise de signet.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)">
          <source>The bookmark result indicates whether the resumption operation succeeded or failed.</source>
          <target state="translated">Le résultat indique si l'opération de reprise a réussi ou échoué.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)">
          <source>The following example creates a workflow that uses a <ph id="ph1">`ReadLine`</ph> activity that creates a <ph id="ph2">&lt;xref:System.Activities.Bookmark&gt;</ph>.</source>
          <target state="translated">L'exemple suivant génère un flux de travail utilisant une activité <ph id="ph1">`ReadLine`</ph> qui crée un <ph id="ph2">&lt;xref:System.Activities.Bookmark&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan)">
          <source>The workflow is started, and once the <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</source>
          <target state="translated">Le flux de travail démarre, et une fois que le <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> est créé et que le flux de travail est inactif, l'entrée de l'utilisateur est collectée et le signet est repris.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)">
          <source>The name of the bookmark to be resumed.</source>
          <target state="translated">Nom du signet à reprendre.</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)">
          <source>An object passed as a parameter to the method that is invoked when the bookmark resumes.</source>
          <target state="translated">Objet passé comme paramètre à la méthode appelée lors de la reprise du signet.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)">
          <source>The time interval during which the bookmark must be resumed.</source>
          <target state="translated">Intervalle de temps pendant lequel le signet doit être repris.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)">
          <source>Initiates an operation to resume the bookmark with the specified name, using the specified value and time-out interval.</source>
          <target state="translated">Lance une opération pour reprendre le signet portant le nom spécifié, à l'aide de la valeur et de l'intervalle de délai d'attente indiqués.</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)">
          <source>The bookmark to be resumed is previously created by an activity within the workflow instance.</source>
          <target state="translated">Le signet à reprendre est créé précédemment par une activité dans l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)">
          <source>The result of the bookmark resumption operation.</source>
          <target state="translated">Résultat de l'opération de reprise de signet.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)">
          <source>The bookmark result indicates whether the resumption operation succeeded or failed.</source>
          <target state="translated">Le résultat indique si l'opération de reprise a réussi ou échoué.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)">
          <source>The following example creates a workflow that uses a <ph id="ph1">`ReadLine`</ph> activity that creates a <ph id="ph2">&lt;xref:System.Activities.Bookmark&gt;</ph>.</source>
          <target state="translated">L'exemple suivant génère un flux de travail utilisant une activité <ph id="ph1">`ReadLine`</ph> qui crée un <ph id="ph2">&lt;xref:System.Activities.Bookmark&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.ResumeBookmark(System.String,System.Object,System.TimeSpan)">
          <source>The workflow is started, and once the <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> is created and the workflow goes idle, the user's input is gathered and the bookmark is resumed.</source>
          <target state="translated">Le flux de travail démarre, et une fois que le <ph id="ph1">&lt;xref:System.Activities.Bookmark&gt;</ph> est créé et que le flux de travail est inactif, l'entrée de l'utilisateur est collectée et le signet est repris.</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Begins or resumes the execution of a workflow instance.</source>
          <target state="translated">Commence ou reprend l'exécution d'une instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>Call this method to initiate execution of a newly created workflow instance.</source>
          <target state="translated">Appelez cette méthode pour lancer l'exécution d'une instance de flux de travail récemment créée.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Run">
          <source>Begins or resumes the execution of a workflow instance.</source>
          <target state="translated">Commence ou reprend l'exécution d'une instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Run">
          <source>Call this method to initiate execution of a newly created workflow instance.</source>
          <target state="translated">Appelez cette méthode pour lancer l'exécution d'une instance de flux de travail récemment créée.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Run">
          <source>If the run operation does not complete within 30 seconds, a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown.</source>
          <target state="translated">Si l'opération d'exécution n'est pas réalisée dans un délai de 30 secondes, une exception <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Run">
          <source>The following example hosts a workflow using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</source>
          <target state="translated">L'exemple suivant héberge un workflow à l'aide de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Run">
          <source>A <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</source>
          <target state="translated">Une instance de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> est construite à l'aide de la définition de flux de travail spécifiée, les événements de cycle de vie souhaités du flux de travail sont gérés et le flux de travail est appelé au moyen d'un appel à <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Run">
          <source>When the workflow is completed, the following output is displayed to the console.</source>
          <target state="translated">Lorsque le flux de travail est terminé, la sortie suivante s'affiche sur la console.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)">
          <source>Call this method to initiate execution of a newly created workflow instance.</source>
          <target state="translated">Appelez cette méthode pour lancer l'exécution d'une instance de flux de travail récemment créée.</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)">
          <source>The interval in which the run operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervalle au cours duquel l'opération d'exécution doit être réalisée ; au-delà de ce délai, l'opération est annulée et une exception <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)">
          <source>Begins or resumes the execution of a workflow instance using the specified time-out interval.</source>
          <target state="translated">Commence ou continue l'exécution d'une instance de flux de travail à l'aide du délai d'attente spécifié.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)">
          <source>Note that unlike <ph id="ph1">&lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt;</ph>, this method will time out only if the workflow doesn't start in the specified amount of time, rather than needing to complete in the specified amount of time.</source>
          <target state="translated">Notez que contrairement à la méthode <ph id="ph1">&lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt;</ph>, cette méthode expirera uniquement si le workflow ne démarre pas dans le délai  spécifié, au lieu d'expirer si elle n'est pas terminée dans le délai imparti.</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)">
          <source>The reason for this is that <ph id="ph1">&lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt;</ph> executes the workflow synchronously (blocking the host thread), while <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph> executes asynchronously, only blocking the host thread for the amount of time it takes the workflow to start.</source>
          <target state="translated">La raison de cela est que <ph id="ph1">&lt;xref:System.Activities.WorkflowInvoker.Invoke%2A&gt;</ph> exécute le workflow de façon synchrone (en bloquant le thread hôte), tandis que <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph> s'exécute de façon asynchrone, en bloquant uniquement le thread hôte le temps nécessaire pour que le workflow démarre.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)">
          <source>The following example hosts a workflow using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</source>
          <target state="translated">L'exemple suivant héberge un workflow à l'aide de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)">
          <source>A <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</source>
          <target state="translated">Une instance de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> est construite à l'aide de la définition de flux de travail spécifiée, les événements de cycle de vie souhaités du flux de travail sont gérés et le flux de travail est appelé au moyen d'un appel à <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Run(System.TimeSpan)">
          <source>When the workflow is completed, the following output is displayed to the console.</source>
          <target state="translated">Lorsque le flux de travail est terminé, la sortie suivante s'affiche sur la console.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Terminates a workflow instance.</source>
          <target state="translated">Met fin à une instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception)">
          <source>The reason for terminating the workflow instance.</source>
          <target state="translated">Motif de fin de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception)">
          <source>Terminates a workflow instance using the specified exception.</source>
          <target state="translated">Met fin à une instance de flux de travail à l'aide de l'exception spécifiée.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception)">
          <source>This method schedules the termination of the workflow instance.</source>
          <target state="translated">Cette méthode planifie l'arrêt de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception)">
          <source>To be notified when the termination has completed, use the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handle.</source>
          <target state="translated">Pour être averti lorsque l'arrêt est terminé, utilisez le handle <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph> operation must complete in 30 seconds or a <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> is thrown.</source>
          <target state="translated">Par défaut, l'opération <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph> doit être exécutée dans un délai de 30 secondes, sinon une exception <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception)">
          <source>The following example hosts a workflow using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</source>
          <target state="translated">L'exemple suivant héberge un workflow à l'aide de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception)">
          <source>A <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</source>
          <target state="translated">Une instance de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> est construite à l'aide de la définition de flux de travail spécifiée, les événements de cycle de vie souhaités du flux de travail sont gérés et le flux de travail est appelé au moyen d'un appel à <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception)">
          <source>After the workflow is started, <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph> is called.</source>
          <target state="translated">Une fois que le flux de travail a démarré, la méthode <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph> est appelée.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception)">
          <source>When the workflow is terminated, the following output is displayed to the console.</source>
          <target state="translated">Lorsque le flux de travail est arrêté, la sortie suivante s'affiche sur la console.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Terminate(System.String)">
          <source>The reason for terminating the workflow instance.</source>
          <target state="translated">Motif de fin de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Terminate(System.String)">
          <source>Terminates a workflow instance using the specified error message.</source>
          <target state="translated">Met fin à une instance de flux de travail avec le message d'erreur spécifié.</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.String)">
          <source>This method schedules the termination of the workflow instance.</source>
          <target state="translated">Cette méthode planifie l'arrêt de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.String)">
          <source>To be notified when the termination has completed, use the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handle.</source>
          <target state="translated">Pour être averti lorsque l'arrêt est terminé, utilisez le handle <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.String)">
          <source>By default, the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph> operation must complete in 30 seconds or a <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> is thrown.</source>
          <target state="translated">Par défaut, l'opération <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph> doit être exécutée dans un délai de 30 secondes, sinon une exception <ph id="ph2">&lt;xref:System.TimeoutException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.String)">
          <source>The following example hosts a workflow using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</source>
          <target state="translated">L'exemple suivant héberge un workflow à l'aide de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.String)">
          <source>A <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</source>
          <target state="translated">Une instance de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> est construite à l'aide de la définition de flux de travail spécifiée, les événements de cycle de vie souhaités du flux de travail sont gérés et le flux de travail est appelé au moyen d'un appel à <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.String)">
          <source>After the workflow is started, <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph> is called.</source>
          <target state="translated">Une fois que le flux de travail a démarré, la méthode <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph> est appelée.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.String)">
          <source>When the workflow is terminated, the following output is displayed to the console.</source>
          <target state="translated">Lorsque le flux de travail est arrêté, la sortie suivante s'affiche sur la console.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)">
          <source>The reason for terminating the workflow instance.</source>
          <target state="translated">Motif de fin de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)">
          <source>The interval in which the <ph id="ph1">&lt;see cref="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" /&gt;</ph> operation must complete before the operation is canceled and a <ph id="ph2">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervalle dans lequel l'opération <ph id="ph1">&lt;see cref="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)" /&gt;</ph> doit être réalisée avant que l'opération ne soit annulée et qu'une <ph id="ph2">&lt;see cref="T:System.TimeoutException" /&gt;</ph> ne soit levée.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)">
          <source>Terminates a workflow instance using the specified exception and time-out interval.</source>
          <target state="translated">Met fin à une instance de flux de travail avec l'exception et l'intervalle de délai d'attente spécifiés.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)">
          <source>This method schedules the termination of the workflow.</source>
          <target state="translated">Cette méthode planifie l'arrêt du flux de travail.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)">
          <source>To be notified when the termination has completed, use the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handle.</source>
          <target state="translated">Pour être averti lorsque l'arrêt est terminé, utilisez le handle <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)">
          <source>The following example hosts a workflow using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</source>
          <target state="translated">L'exemple suivant héberge un workflow à l'aide de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)">
          <source>A <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</source>
          <target state="translated">Une instance de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> est construite à l'aide de la définition de flux de travail spécifiée, les événements de cycle de vie souhaités du flux de travail sont gérés et le flux de travail est appelé au moyen d'un appel à <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)">
          <source>After the workflow is started, <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph> is called.</source>
          <target state="translated">Une fois que le flux de travail a démarré, la méthode <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph> est appelée.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.Exception,System.TimeSpan)">
          <source>When the workflow is terminated, the following output is displayed to the console.</source>
          <target state="translated">Lorsque le flux de travail est arrêté, la sortie suivante s'affiche sur la console.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)">
          <source>The reason for terminating the workflow instance.</source>
          <target state="translated">Motif de fin de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)">
          <source>The interval in which the <ph id="ph1">&lt;see cref="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" /&gt;</ph> operation must complete before the operation is canceled and a <ph id="ph2">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervalle dans lequel l'opération <ph id="ph1">&lt;see cref="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)" /&gt;</ph> doit être réalisée avant que l'opération ne soit annulée et qu'une <ph id="ph2">&lt;see cref="T:System.TimeoutException" /&gt;</ph> ne soit levée.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)">
          <source>Terminates a workflow instance using the specified error message and time-out interval.</source>
          <target state="translated">Met fin à une instance de flux de travail avec le message d'erreur et l'intervalle de délai d'attente spécifiés.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)">
          <source>This method schedules the termination of the workflow instance.</source>
          <target state="translated">Cette méthode planifie l'arrêt de l'instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)">
          <source>To be notified when the termination has completed, use the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph> handle.</source>
          <target state="translated">Pour être averti lorsque l'arrêt est terminé, utilisez le handle <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Completed%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)">
          <source>The following example hosts a workflow using <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</source>
          <target state="translated">L'exemple suivant héberge un workflow à l'aide de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)">
          <source>A <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance is constructed using the specified workflow definition, the desired workflow lifecycle events are handled, and the workflow is invoked with a call to <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</source>
          <target state="translated">Une instance de <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> est construite à l'aide de la définition de flux de travail spécifiée, les événements de cycle de vie souhaités du flux de travail sont gérés et le flux de travail est appelé au moyen d'un appel à <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Run%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)">
          <source>After the workflow is started, <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph> is called.</source>
          <target state="translated">Une fois que le flux de travail a démarré, la méthode <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Terminate%2A&gt;</ph> est appelée.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Terminate(System.String,System.TimeSpan)">
          <source>When the workflow is terminated, the following output is displayed to the console.</source>
          <target state="translated">Lorsque le flux de travail est arrêté, la sortie suivante s'affiche sur la console.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" uid="T:System.Activities.WorkflowApplication">
          <source>Persists and unloads a workflow instance.</source>
          <target state="translated">Rend persistante et décharge une instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>By default, the unload operation must complete in 30 seconds or a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown.</source>
          <target state="translated">Par défaut, l'opération de déchargement doit être exécutée dans un délai de 30 secondes, sinon une exception <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>If the workflow instance was previously loaded from persistence, then the same <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> used to load the workflow is used for persistence.</source>
          <target state="translated">Si l'instance de workflow a été précédemment chargée à partir d'un point de persistance, alors, le même <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> utilisé pour charger le workflow est utilisé pour la persistance.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Activities.WorkflowApplication">
          <source>If the workflow was created and has not yet been persisted, then an <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> must be configured before calling this method or else an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when this method is called.</source>
          <target state="translated">Si le workflow a été créé et n'a pas encore été rendu persistant, alors un <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> doit être configuré avant d'appeler cette méthode ou bien une exception <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> est levée lorsque cette méthode est appelée.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Unload">
          <source>Persists and unloads a workflow instance.</source>
          <target state="translated">Rend persistante et décharge une instance de flux de travail.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Unload">
          <source>By default, the unload operation must complete in 30 seconds or a <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> is thrown.</source>
          <target state="translated">Par défaut, l'opération de déchargement doit être exécutée dans un délai de 30 secondes, sinon une exception <ph id="ph1">&lt;xref:System.TimeoutException&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Unload">
          <source>If the workflow instance was previously loaded from persistence, then the same <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> used to load the workflow is used for persistence.</source>
          <target state="translated">Si l'instance de workflow a été précédemment chargée à partir d'un point de persistance, alors, le même <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> utilisé pour charger le workflow est utilisé pour la persistance.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Unload">
          <source>If the workflow was created and has not yet been persisted, then an <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> must be configured before calling this method or else an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when this method is called.</source>
          <target state="translated">Si le workflow a été créé et n'a pas encore été rendu persistant, alors un <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> doit être configuré avant d'appeler cette méthode ou bien une exception <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> est levée lorsque cette méthode est appelée.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Unload">
          <source>The following code example is part of the <bpt id="p1">[</bpt>NoPersistScope Activity<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md)</ept> sample.</source>
          <target state="translated">L’exemple de code suivant fait partie de la <bpt id="p1">[</bpt>activité NoPersistScope<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md)</ept> exemple.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Unload">
          <source>In this example, the workflow is idle and the host application is waiting for user input.</source>
          <target state="translated">Dans cet exemple, le flux de travail est inactif et l'application hôte attend des entrées d'utilisateur.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Unload">
          <source>If the user chooses to unload, <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Unload%2A&gt;</ph> is called.</source>
          <target state="translated">Si l'utilisateur choisit de procéder au déchargement, la méthode <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Unload%2A&gt;</ph> est appelée.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Unload">
          <source>If successful, the workflow is persisted and unloaded from memory.</source>
          <target state="translated">Si l'opération réussit, le flux de travail est rendu persistant et déchargé de la mémoire.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)">
          <source>The interval in which the unload operation must complete before the operation is canceled and a <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> is thrown.</source>
          <target state="translated">Intervalle au cours duquel l'opération de déchargement doit être exécutée ; au-delà de ce délai, l'opération est annulée et une exception <ph id="ph1">&lt;see cref="T:System.TimeoutException" /&gt;</ph> est levée.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)">
          <source>Persists and unloads a workflow instance using the specified time-out interval.</source>
          <target state="translated">Rend persistante et décharge une instance de flux de travail à l'aide du délai d'attente spécifié.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)">
          <source>If the workflow instance was previously loaded from persistence, then the same <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> used to load the workflow is used for persistence.</source>
          <target state="translated">Si l'instance de workflow a été précédemment chargée à partir d'un point de persistance, alors, le même <ph id="ph1">&lt;xref:System.Runtime.DurableInstancing.InstanceStore&gt;</ph> utilisé pour charger le workflow est utilisé pour la persistance.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)">
          <source>If the workflow was created and has not yet been persisted, then an <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> must be configured before calling this method or else an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown when this method is called.</source>
          <target state="translated">Si le workflow a été créé et n'a pas encore été rendu persistant, alors un <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.InstanceStore%2A&gt;</ph> doit être configuré avant d'appeler cette méthode ou bien une exception <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> est levée lorsque cette méthode est appelée.</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)">
          <source>The following code example is part of the <bpt id="p1">[</bpt>NoPersistScope Activity<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md)</ept> sample.</source>
          <target state="translated">L’exemple de code suivant fait partie de la <bpt id="p1">[</bpt>activité NoPersistScope<ept id="p1">](~/docs/framework/windows-workflow-foundation/samples/nopersistscope-activity.md)</ept> exemple.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)">
          <source>In this example, the workflow is idle and the host application is waiting for user input.</source>
          <target state="translated">Dans cet exemple, le flux de travail est inactif et l'application hôte attend des entrées d'utilisateur.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)">
          <source>If the user chooses to unload, <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Unload%2A&gt;</ph> is called.</source>
          <target state="translated">Si l'utilisateur choisit de procéder au déchargement, la méthode <ph id="ph1">&lt;xref:System.Activities.WorkflowApplication.Unload%2A&gt;</ph> est appelée.</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Activities.WorkflowApplication.Unload(System.TimeSpan)">
          <source>If successful, the workflow is persisted and unloaded from memory.</source>
          <target state="translated">Si l'opération réussit, le flux de travail est rendu persistant et déchargé de la mémoire.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" uid="P:System.Activities.WorkflowApplication.Unloaded">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Action`1" /&gt;</ph> that is invoked when the current workflow unloads.</source>
          <target state="translated">Obtient ou définit l'objet <ph id="ph1">&lt;see cref="T:System.Action`1" /&gt;</ph> qui est appelé lorsque le flux de travail actuel est déchargé.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Unloaded">
          <source>An action that is invoked when a workflow instance is unloaded.</source>
          <target state="translated">Action appelée lorsqu'une instance de flux de travail est déchargée.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Activities.WorkflowApplication.Unloaded">
          <source>The following code example inspects the <ph id="ph1">&lt;xref:System.Activities.WorkflowApplicationEventArgs&gt;</ph> passed into the <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Unloaded%2A&gt;</ph> handler of a <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> instance and displays the <ph id="ph4">&lt;xref:System.Activities.WorkflowApplicationEventArgs.InstanceId%2A&gt;</ph> of the workflow that was unloaded.</source>
          <target state="translated">L'exemple de code suivant inspecte l'objet <ph id="ph1">&lt;xref:System.Activities.WorkflowApplicationEventArgs&gt;</ph> passé dans le gestionnaire d'événements <ph id="ph2">&lt;xref:System.Activities.WorkflowApplication.Unloaded%2A&gt;</ph> d'une instance de <ph id="ph3">&lt;xref:System.Activities.WorkflowApplication&gt;</ph> et affiche la propriété <ph id="ph4">&lt;xref:System.Activities.WorkflowApplicationEventArgs.InstanceId%2A&gt;</ph> du flux de travail déchargé.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>