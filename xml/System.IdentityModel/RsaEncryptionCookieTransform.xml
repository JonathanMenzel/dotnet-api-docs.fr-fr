<Type Name="RsaEncryptionCookieTransform" FullName="System.IdentityModel.RsaEncryptionCookieTransform">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7d02fd2ee3359dd56854ae4efe9a31b907a000cd" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="36556020" /></Metadata><TypeSignature Language="C#" Value="public class RsaEncryptionCookieTransform : System.IdentityModel.CookieTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RsaEncryptionCookieTransform extends System.IdentityModel.CookieTransform" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.RsaEncryptionCookieTransform" />
  <TypeSignature Language="VB.NET" Value="Public Class RsaEncryptionCookieTransform&#xA;Inherits CookieTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class RsaEncryptionCookieTransform : System::IdentityModel::CookieTransform" />
  <TypeSignature Language="F#" Value="type RsaEncryptionCookieTransform = class&#xA;    inherit CookieTransform" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.CookieTransform</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Chiffre un cookie à l'aide de <see cref="T:System.Security.Cryptography.RSA" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les cookies chiffrées avec cette transformation peuvent être déchiffrées par n’importe quel ordinateur qui partage la même clé privée RSA (généralement associée à un certificat X.509).  
  
 Les données fournies sont chiffrées à l’aide d’une clé aléatoire de AES256. Cette clé est ensuite chiffrée à l’aide de RSA, et la clé publique RSA est envoyée en texte brut, afin que lorsque la classe de décodage sache quelle clé RSA à utiliser.  
  
> [!IMPORTANT]
>  Lorsque vous utilisez le <xref:System.IdentityModel.RsaEncryptionCookieTransform> avec un service, si une clé fournie par une modification du certificat du service doit être redémarré.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.RsaEncryptionCookieTransform" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RsaEncryptionCookieTransform (System.Security.Cryptography.RSA key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.RSA key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.RsaEncryptionCookieTransform.#ctor(System.Security.Cryptography.RSA)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As RSA)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RsaEncryptionCookieTransform(System::Security::Cryptography::RSA ^ key);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.RsaEncryptionCookieTransform : System.Security.Cryptography.RSA -&gt; System.IdentityModel.RsaEncryptionCookieTransform" Usage="new System.IdentityModel.RsaEncryptionCookieTransform key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.RSA" />
      </Parameters>
      <Docs>
        <param name="key">Clé à utiliser comme clé de chiffrement et de déchiffrement par défaut. Initialise les propriétés <see cref="P:System.IdentityModel.RsaEncryptionCookieTransform.DecryptionKeys" /> et <see cref="P:System.IdentityModel.RsaEncryptionCookieTransform.EncryptionKey" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.RsaEncryptionCookieTransform" /> qui utilise la clé spécifiée pour le chiffrement et le déchiffrement.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="key" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RsaEncryptionCookieTransform (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.RsaEncryptionCookieTransform.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RsaEncryptionCookieTransform(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.RsaEncryptionCookieTransform : System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; System.IdentityModel.RsaEncryptionCookieTransform" Usage="new System.IdentityModel.RsaEncryptionCookieTransform certificate" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate">Certificat dont la clé privée est utilisée pour chiffrer et déchiffrer.  
  
Certificat dont la clé privée sera utilisée comme clé de chiffrement et de déchiffrement par défaut. Initialise les propriétés <see cref="P:System.IdentityModel.RsaEncryptionCookieTransform.DecryptionKeys" /> et <see cref="P:System.IdentityModel.RsaEncryptionCookieTransform.EncryptionKey" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.RsaEncryptionCookieTransform" /> qui utilise la clé privée du certificat X.509 spécifié pour le chiffrement et le déchiffrement.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="certificate" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="certificate" /> ne possède pas de clé privée.  
  
- ou - 
La clé privée n'est pas RSA.</exception>
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public override byte[] Decode (byte[] encoded);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Decode(unsigned int8[] encoded) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.RsaEncryptionCookieTransform.Decode(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Decode (encoded As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ Decode(cli::array &lt;System::Byte&gt; ^ encoded);" />
      <MemberSignature Language="F#" Value="override this.Decode : byte[] -&gt; byte[]" Usage="rsaEncryptionCookieTransform.Decode encoded" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoded" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="encoded">Données encodées</param>
        <summary>Déchiffre les données spécifiées à l'aide de clés RSA fournies pour déchiffrer une clé AES, qui déchiffre le cookie.</summary>
        <returns>Données décodées.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="encoded" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="encoded" /> contient zéro octet.</exception>
        <exception cref="T:System.NotSupportedException">La plateforme ne prend pas en charge l'algorithme demandé.</exception>
        <exception cref="T:System.InvalidOperationException">Il n'existe aucune clé de déchiffrement ou aucune des clés ne correspond à celle recherchée.</exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptionKeys">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Cryptography.RSA&gt; DecryptionKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Cryptography.RSA&gt; DecryptionKeys" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.RsaEncryptionCookieTransform.DecryptionKeys" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DecryptionKeys As ReadOnlyCollection(Of RSA)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Cryptography::RSA ^&gt; ^ DecryptionKeys { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Cryptography::RSA ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DecryptionKeys : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Cryptography.RSA&gt;" Usage="System.IdentityModel.RsaEncryptionCookieTransform.DecryptionKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Cryptography.RSA&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient les clés utilisées pour le déchiffrement par défaut, cette propriété retourne une liste qui contient uniquement la clé de chiffrement.</summary>
        <value>Clés à utiliser pour le déchiffrement.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public override byte[] Encode (byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Encode(unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.RsaEncryptionCookieTransform.Encode(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Encode (value As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ Encode(cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="override this.Encode : byte[] -&gt; byte[]" Usage="rsaEncryptionCookieTransform.Encode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="value">Données à encoder</param>
        <summary>Encode les données spécifiées. Les données sont chiffrées à l'aide de l'algorithme de chiffrement par défaut (AES-256), puis la clé AES est chiffrée à l'aide de RSA et la clé publique RSA est ajoutée.</summary>
        <returns>Données encodées</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="value" /> contient zéro octet.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.IdentityModel.RsaEncryptionCookieTransform.EncryptionKey" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptionKey">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.RSA EncryptionKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.RSA EncryptionKey" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.RsaEncryptionCookieTransform.EncryptionKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EncryptionKey As RSA" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::RSA ^ EncryptionKey { System::Security::Cryptography::RSA ^ get(); void set(System::Security::Cryptography::RSA ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionKey : System.Security.Cryptography.RSA with get, set" Usage="System.IdentityModel.RsaEncryptionCookieTransform.EncryptionKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.RSA</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la clé RSA utilisée pour le chiffrement.</summary>
        <value>Clé RSA utilisée pour le chiffrement.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Définition de cette propriété définit également le <xref:System.IdentityModel.RsaEncryptionCookieTransform.DecryptionKeys%2A> propriété à une collection qui contient la même clé que seul élément.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashName">
      <MemberSignature Language="C#" Value="public string HashName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HashName" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.RsaEncryptionCookieTransform.HashName" />
      <MemberSignature Language="VB.NET" Value="Public Property HashName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HashName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HashName : string with get, set" Usage="System.IdentityModel.RsaEncryptionCookieTransform.HashName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de l'algorithme de hachage à utiliser.</summary>
        <value>Nom de l'algorithme de hachage à utiliser. La valeur par défaut est « SHA2566 ».</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SHA256 est l’algorithme par défaut. Cela peut nécessiter une plateforme minimale de Windows Server 2003 et .NET 3.5 SP1.  
  
 Si SHA256 n’est pas pris en charge, définissez le <xref:System.IdentityModel.RsaEncryptionCookieTransform.HashName%2A> propriété à « SHA1 ».  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>