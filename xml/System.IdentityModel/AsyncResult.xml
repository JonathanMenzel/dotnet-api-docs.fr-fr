<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="AsyncResult.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac523d8860c780243a3a6d8738333fbea20284fb841.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">23d8860c780243a3a6d8738333fbea20284fb841</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.AsyncResult">
          <source>An abstract base class that implements the <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> interface.</source>
          <target state="translated">Classe de base abstraite qui implémente l'interface <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.AsyncResult">
          <source>Serves as a base class from which to derive <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> objects that can be used for common asynchronous programming scenarios.</source>
          <target state="translated">Sert de classe de base de laquelle dériver les objets <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> qui peuvent être utilisés pour des scénarios de programmation asynchrones courants.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.AsyncResult">
          <source>For more information see the <ph id="ph1">&lt;xref:System.IAsyncResult?displayProperty=nameWithType&gt;</ph> interface.</source>
          <target state="translated">Pour plus d’informations, consultez le <ph id="ph1">&lt;xref:System.IAsyncResult?displayProperty=nameWithType&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IdentityModel.AsyncResult">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.TypedAsyncResult%601&gt;</ph> class derives from <ph id="ph2">&lt;xref:System.IdentityModel.AsyncResult&gt;</ph>.</source>
          <target state="translated">La classe <ph id="ph1">&lt;xref:System.IdentityModel.TypedAsyncResult%601&gt;</ph> dérive de la classe <ph id="ph2">&lt;xref:System.IdentityModel.AsyncResult&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.AsyncResult">
          <source>Called from constructors in derived classes to initialize the <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> class.</source>
          <target state="translated">Appelée à partir des constructeurs des classes dérivées pour initialiser la classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.#ctor">
          <source>Called from constructors in derived classes to initialize an instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> class that does not have a callback delegate or  a state object.</source>
          <target state="translated">Appelé à partir des constructeurs dans les classes dérivées pour initialiser une instance de la classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> qui n’a pas de délégué de rappel ni d’objet d’état.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.#ctor(System.Object)">
          <source>A user-defined object that qualifies or contains information about an asynchronous operation.</source>
          <target state="translated">Objet défini par l’utilisateur qui qualifie ou contient des informations sur une opération asynchrone.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.#ctor(System.Object)">
          <source>Called from constructors in derived classes to initialize an instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> class that does not have a callback delegate but does have  a state object.</source>
          <target state="translated">Appelé à partir des constructeurs dans les classes dérivées pour initialiser une instance de la classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> qui n’a pas de délégué de rappel, mais possède un objet d’état.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.#ctor(System.AsyncCallback,System.Object)">
          <source>The method to be called when the asynchronous operation completes.</source>
          <target state="translated">Méthode à appeler lorsque l'opération de lecture asynchrone est terminée.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.#ctor(System.AsyncCallback,System.Object)">
          <source>A user-defined object that qualifies or contains information about an asynchronous operation.</source>
          <target state="translated">Objet défini par l’utilisateur qui qualifie ou contient des informations sur une opération asynchrone.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.#ctor(System.AsyncCallback,System.Object)">
          <source>Called from constructors in derived classes to initialize an instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> class that has a callback delegate and  a state object.</source>
          <target state="translated">Appelé à partir des constructeurs dans les classes dérivées pour initialiser une instance de la classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> qui a un délégué de rappel et un objet d’état.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.AsyncResult.AsyncState">
          <source>Gets a user-defined object that qualifies or contains information about an asynchronous operation.</source>
          <target state="translated">Obtient un objet défini par l’utilisateur qui qualifie ou contient des informations sur une opération asynchrone.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.AsyncResult.AsyncState">
          <source>A user-defined object that qualifies or contains information about an asynchronous operation.</source>
          <target state="translated">Objet défini par l’utilisateur qui qualifie ou contient des informations sur une opération asynchrone.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.AsyncResult.AsyncState">
          <source>For more information see the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncState%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Pour plus d’informations, consultez le <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncState%2A?displayProperty=nameWithType&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.AsyncResult.AsyncWaitHandle">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> that is used to wait for an asynchronous operation to complete.</source>
          <target state="translated">Obtient un <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> qui est utilisé pour attendre qu’une opération asynchrone se termine.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.AsyncResult.AsyncWaitHandle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> that is used to wait for an asynchronous operation to complete.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Threading.WaitHandle" /&gt;</ph> utilisé pour attendre qu’une opération asynchrone se termine.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.AsyncResult.AsyncWaitHandle">
          <source>For more information see the <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Pour plus d’informations, consultez le <ph id="ph1">&lt;xref:System.IAsyncResult.AsyncWaitHandle%2A?displayProperty=nameWithType&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.AsyncResult">
          <source>Called to complete the asynchronous operation.</source>
          <target state="translated">Appelée pour exécuter l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Complete(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the asynchronous operation completed synchronously; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'opération asynchrone a été terminée de manière synchrone ; sinon <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Complete(System.Boolean)">
          <source>Call this version of complete when your asynchronous operation is complete and no exception was encountered.</source>
          <target state="translated">Appelez cette version de "complete" lorsque l'opération asynchrone est terminée et qu'aucune exception n'est survenue.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Complete(System.Boolean)">
          <source>It updates the state of the operation and notifies the callback.</source>
          <target state="translated">Elle met à jour l'état de l'opération et notifie le rappel.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the asynchronous operation completed synchronously; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'opération asynchrone a été terminée de manière synchrone ; sinon <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)">
          <source>The exception that occurred during the processing of the asynchronous operation.</source>
          <target state="translated">Exception levée au cours du traitement de l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)">
          <source>Call this version of complete if you raise an exception during processing.</source>
          <target state="translated">Appelez cette version de "complete" si vous déclenchez une exception pendant le traitement.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)">
          <source>In addition to notifying the callback, it captures the exception and stores it to be thrown during the call to the <ph id="ph1">&lt;see cref="M:System.IdentityModel.AsyncResult.End(System.IAsyncResult)" /&gt;</ph> method.</source>
          <target state="translated">En plus de notifier le rappel, elle capture l'exception et l'enregistre pour la lever pendant l'appel à la méthode <ph id="ph1">&lt;see cref="M:System.IdentityModel.AsyncResult.End(System.IAsyncResult)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.AsyncResult.CompletedSynchronously">
          <source>Gets a value that indicates whether the asynchronous operation completed synchronously.</source>
          <target state="translated">Obtient une valeur qui indique si l’opération asynchrone s’est terminée de manière synchrone.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.AsyncResult.CompletedSynchronously">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the asynchronous operation completed synchronously; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l’opération asynchrone s’est terminée de manière synchrone ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.AsyncResult.CompletedSynchronously">
          <source>For more information see the <ph id="ph1">&lt;xref:System.IAsyncResult.CompletedSynchronously%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Pour plus d’informations, consultez le <ph id="ph1">&lt;xref:System.IAsyncResult.CompletedSynchronously%2A?displayProperty=nameWithType&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.AsyncResult">
          <source>Releases the resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> class.</source>
          <target state="translated">Libère les ressources utilisées par l'instance actuelle de la classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Dispose">
          <source>Releases the resources used by the current instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> class.</source>
          <target state="translated">Libère les ressources utilisées par l'instance actuelle de la classe <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour libérer les ressources managées et non managées ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour libérer uniquement les ressources non managées.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> indicates that this is an explicit call to Dispose.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> indique qu'il s'agit d'un appel explicite à Dispose.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Dispose(System.Boolean)">
          <source>Called by the <ph id="ph1">&lt;see cref="M:System.IdentityModel.AsyncResult.Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.IdentityModel.AsyncResult.Finalize" /&gt;</ph> methods to release the managed and unmanaged resources used by the current instance of the <ph id="ph3">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> class.</source>
          <target state="translated">Appelé par les méthodes <ph id="ph1">&lt;see cref="M:System.IdentityModel.AsyncResult.Dispose" /&gt;</ph> et <ph id="ph2">&lt;see cref="M:System.IdentityModel.AsyncResult.Finalize" /&gt;</ph> pour libérer les ressources managées et non managées utilisées par l'instance actuelle de la classe <ph id="ph3">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.End(System.IAsyncResult)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> representing the status of the asynchronous operation.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> représentant l'état de l'opération asynchrone.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.End(System.IAsyncResult)">
          <source>Call this method when the <bpt id="p1">&lt;c&gt;</bpt>End<ept id="p1">&lt;/c&gt;</ept> function for the asynchronous operation is complete.</source>
          <target state="translated">Appelez cette méthode quand la fonction <bpt id="p1">&lt;c&gt;</bpt>End<ept id="p1">&lt;/c&gt;</ept> pour l’opération asynchrone est terminée.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.End(System.IAsyncResult)">
          <source>It ensures that the asynchronous operation is complete, and does some common validation.</source>
          <target state="translated">Elle garantit que l'opération asynchrone est terminée, et effectue une validation commune.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.AsyncResult.Finalize">
          <source>Allows the <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">Autorise l'objet <ph id="ph1">&lt;see cref="T:System.IdentityModel.AsyncResult" /&gt;</ph> à tenter de libérer des ressources et d'exécuter d'autres opérations de nettoyage avant qu'il ne soit récupéré par l'opération garbage collection.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.AsyncResult.IsCompleted">
          <source>Gets a value that indicates whether the asynchronous operation has completed.</source>
          <target state="translated">Obtient une valeur qui indique si l’opération asynchrone est terminée.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.AsyncResult.IsCompleted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the operation is complete; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'opération est terminée ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>