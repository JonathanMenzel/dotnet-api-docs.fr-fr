<Type Name="AsyncResult" FullName="System.IdentityModel.AsyncResult">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="23d8860c780243a3a6d8738333fbea20284fb841" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class AsyncResult : IAsyncResult, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit AsyncResult extends System.Object implements class System.IAsyncResult, class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.AsyncResult" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class AsyncResult&#xA;Implements IAsyncResult, IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncResult abstract : IAsyncResult, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IAsyncResult</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="5a434-101">Classe de base abstraite qui implémente l'interface <see cref="T:System.IAsyncResult" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5a434-101">An abstract base class that implements the <see cref="T:System.IAsyncResult" /> interface.</span>
      </span>
      <span data-ttu-id="5a434-102">Sert de classe de base de laquelle dériver les objets <see cref="T:System.IAsyncResult" /> qui peuvent être utilisés pour des scénarios de programmation asynchrones courants.</span>
      <span class="sxs-lookup">
        <span data-stu-id="5a434-102">Serves as a base class from which to derive <see cref="T:System.IAsyncResult" /> objects that can be used for common asynchronous programming scenarios.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a434-103">Pour plus d’informations, consultez le <xref:System.IAsyncResult?displayProperty=nameWithType> interface.</span><span class="sxs-lookup"><span data-stu-id="5a434-103">For more information see the <xref:System.IAsyncResult?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="5a434-104">La classe <xref:System.IdentityModel.TypedAsyncResult%601> dérive de la classe <xref:System.IdentityModel.AsyncResult>.</span><span class="sxs-lookup"><span data-stu-id="5a434-104">The <xref:System.IdentityModel.TypedAsyncResult%601> class derives from <xref:System.IdentityModel.AsyncResult>.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5a434-105">Appelée à partir des constructeurs des classes dérivées pour initialiser la classe <see cref="T:System.IdentityModel.AsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-105">Called from constructors in derived classes to initialize the <see cref="T:System.IdentityModel.AsyncResult" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsyncResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.AsyncResult.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsyncResult();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a434-106">Appelé à partir des constructeurs dans les classes dérivées pour initialiser une instance de la classe <see cref="T:System.IdentityModel.AsyncResult" /> qui n’a pas de délégué de rappel ni d’objet d’état.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-106">Called from constructors in derived classes to initialize an instance of the <see cref="T:System.IdentityModel.AsyncResult" /> class that does not have a callback delegate or  a state object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsyncResult (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.AsyncResult.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsyncResult(System::Object ^ state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">
          <span data-ttu-id="5a434-107">Objet défini par l’utilisateur qui qualifie ou contient des informations sur une opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-107">A user-defined object that qualifies or contains information about an asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a434-108">Appelé à partir des constructeurs dans les classes dérivées pour initialiser une instance de la classe <see cref="T:System.IdentityModel.AsyncResult" /> qui n’a pas de délégué de rappel, mais possède un objet d’état.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-108">Called from constructors in derived classes to initialize an instance of the <see cref="T:System.IdentityModel.AsyncResult" /> class that does not have a callback delegate but does have  a state object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected AsyncResult (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.AsyncResult.#ctor(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (callback As AsyncCallback, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; AsyncResult(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="5a434-109">Méthode à appeler lorsque l'opération de lecture asynchrone est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-109">The method to be called when the asynchronous operation completes.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="5a434-110">Objet défini par l’utilisateur qui qualifie ou contient des informations sur une opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-110">A user-defined object that qualifies or contains information about an asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a434-111">Appelé à partir des constructeurs dans les classes dérivées pour initialiser une instance de la classe <see cref="T:System.IdentityModel.AsyncResult" /> qui a un délégué de rappel et un objet d’état.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-111">Called from constructors in derived classes to initialize an instance of the <see cref="T:System.IdentityModel.AsyncResult" /> class that has a callback delegate and  a state object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public object AsyncState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.AsyncResult.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AsyncState { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a434-112">Obtient un objet défini par l’utilisateur qui qualifie ou contient des informations sur une opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-112">Gets a user-defined object that qualifies or contains information about an asynchronous operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a434-113">Objet défini par l’utilisateur qui qualifie ou contient des informations sur une opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-113">A user-defined object that qualifies or contains information about an asynchronous operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a434-114">Pour plus d’informations, consultez le <xref:System.IAsyncResult.AsyncState%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="5a434-114">For more information see the <xref:System.IAsyncResult.AsyncState%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncWaitHandle">
      <MemberSignature Language="C#" Value="public virtual System.Threading.WaitHandle AsyncWaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle AsyncWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.AsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AsyncWaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Threading::WaitHandle ^ AsyncWaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.AsyncWaitHandle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a434-115">Obtient un <see cref="T:System.Threading.WaitHandle" /> qui est utilisé pour attendre qu’une opération asynchrone se termine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-115">Gets a <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a434-116">
            <see cref="T:System.Threading.WaitHandle" /> utilisé pour attendre qu’une opération asynchrone se termine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-116">A <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a434-117">Pour plus d’informations, consultez le <xref:System.IAsyncResult.AsyncWaitHandle%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="5a434-117">For more information see the <xref:System.IAsyncResult.AsyncWaitHandle%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Complete">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5a434-118">Appelée pour exécuter l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-118">Called to complete the asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="protected void Complete (bool completedSynchronously);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Complete(bool completedSynchronously) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.AsyncResult.Complete(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Complete (completedSynchronously As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Complete(bool completedSynchronously);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completedSynchronously" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="completedSynchronously">
          <span data-ttu-id="5a434-119">
            <see langword="true" /> si l'opération asynchrone a été terminée de manière synchrone ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-119">
              <see langword="true" /> if the asynchronous operation completed synchronously; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a434-120">Appelez cette version de "complete" lorsque l'opération asynchrone est terminée et qu'aucune exception n'est survenue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-120">Call this version of complete when your asynchronous operation is complete and no exception was encountered.</span>
          </span>
          <span data-ttu-id="5a434-121">Elle met à jour l'état de l'opération et notifie le rappel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-121">It updates the state of the operation and notifies the callback.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="protected void Complete (bool completedSynchronously, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Complete(bool completedSynchronously, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.AsyncResult.Complete(System.Boolean,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Complete(bool completedSynchronously, Exception ^ exception);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="completedSynchronously" Type="System.Boolean" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="completedSynchronously">
          <span data-ttu-id="5a434-122">
            <see langword="true" /> si l'opération asynchrone a été terminée de manière synchrone ; sinon <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-122">
              <see langword="true" /> if the asynchronous operation completed synchronously; otherwise <see langword="false" />.</span>
          </span>
        </param>
        <param name="exception">
          <span data-ttu-id="5a434-123">Exception levée au cours du traitement de l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-123">The exception that occurred during the processing of the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a434-124">Appelez cette version de "complete" si vous déclenchez une exception pendant le traitement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-124">Call this version of complete if you raise an exception during processing.</span>
          </span>
          <span data-ttu-id="5a434-125">En plus de notifier le rappel, elle capture l'exception et l'enregistre pour la lever pendant l'appel à la méthode <see cref="M:System.IdentityModel.AsyncResult.End(System.IAsyncResult)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-125">In addition to notifying the callback, it captures the exception and stores it to be thrown during the call to the <see cref="M:System.IdentityModel.AsyncResult.End(System.IAsyncResult)" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompletedSynchronously">
      <MemberSignature Language="C#" Value="public bool CompletedSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CompletedSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.AsyncResult.CompletedSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompletedSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CompletedSynchronously { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.CompletedSynchronously</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a434-126">Obtient une valeur qui indique si l’opération asynchrone s’est terminée de manière synchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-126">Gets a value that indicates whether the asynchronous operation completed synchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a434-127">
            <see langword="true" /> si l’opération asynchrone s’est terminée de manière synchrone ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-127">
              <see langword="true" /> if the asynchronous operation completed synchronously; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a434-128">Pour plus d’informations, consultez le <xref:System.IAsyncResult.CompletedSynchronously%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="5a434-128">For more information see the <xref:System.IAsyncResult.CompletedSynchronously%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Dispose">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="5a434-129">Libère les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.IdentityModel.AsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-129">Releases the resources used by the current instance of the <see cref="T:System.IdentityModel.AsyncResult" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.AsyncResult.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a434-130">Libère les ressources utilisées par l'instance actuelle de la classe <see cref="T:System.IdentityModel.AsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-130">Releases the resources used by the current instance of the <see cref="T:System.IdentityModel.AsyncResult" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool isExplicitDispose);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool isExplicitDispose) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.AsyncResult.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (isExplicitDispose As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool isExplicitDispose);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isExplicitDispose" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isExplicitDispose">
          <span data-ttu-id="5a434-131">
            <see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-131">
              <see langword="true" /> to release managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
          <span data-ttu-id="5a434-132">
            <see langword="true" /> indique qu'il s'agit d'un appel explicite à Dispose.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-132">
              <see langword="true" /> indicates that this is an explicit call to Dispose.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a434-133">Appelé par les méthodes <see cref="M:System.IdentityModel.AsyncResult.Dispose" /> et <see cref="M:System.IdentityModel.AsyncResult.Finalize" /> pour libérer les ressources managées et non managées utilisées par l'instance actuelle de la classe <see cref="T:System.IdentityModel.AsyncResult" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-133">Called by the <see cref="M:System.IdentityModel.AsyncResult.Dispose" /> and <see cref="M:System.IdentityModel.AsyncResult.Finalize" /> methods to release the managed and unmanaged resources used by the current instance of the <see cref="T:System.IdentityModel.AsyncResult" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="End">
      <MemberSignature Language="C#" Value="public static void End (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void End(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.AsyncResult.End(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub End (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void End(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="5a434-134">
            <see cref="T:System.IAsyncResult" /> représentant l'état de l'opération asynchrone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-134">The <see cref="T:System.IAsyncResult" /> representing the status of the asynchronous operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a434-135">Appelez cette méthode quand la fonction <c>End</c> pour l’opération asynchrone est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-135">Call this method when the <c>End</c> function for the asynchronous operation is complete.</span>
          </span>
          <span data-ttu-id="5a434-136">Elle garantit que l'opération asynchrone est terminée, et effectue une validation commune.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-136">It ensures that the asynchronous operation is complete, and does some common validation.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AsyncResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.AsyncResult.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AsyncResult ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a434-137">Autorise l'objet <see cref="T:System.IdentityModel.AsyncResult" /> à tenter de libérer des ressources et d'exécuter d'autres opérations de nettoyage avant qu'il ne soit récupéré par l'opération garbage collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-137">Allows the <see cref="T:System.IdentityModel.AsyncResult" /> object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.AsyncResult.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.IAsyncResult.IsCompleted</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a434-138">Obtient une valeur qui indique si l’opération asynchrone est terminée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-138">Gets a value that indicates whether the asynchronous operation has completed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a434-139">
            <see langword="true" /> si l'opération est terminée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a434-139">
              <see langword="true" /> if the operation is complete; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>