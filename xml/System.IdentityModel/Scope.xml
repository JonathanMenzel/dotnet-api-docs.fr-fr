<Type Name="Scope" FullName="System.IdentityModel.Scope">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cbda5bd67c72c4d9884252a477e0a43e1876e3e7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30418883" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Scope" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Scope extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Scope" />
  <TypeSignature Language="VB.NET" Value="Public Class Scope" />
  <TypeSignature Language="C++ CLI" Value="public ref class Scope" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente la configuration de la demande d'émission de jeton.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.IdentityModel.Scope> classe encapsule des informations sur la partie de confiance (RP) associé à une demande de jeton de sécurité (RST). Ces informations sont utilisées par les implémentations de la <xref:System.IdentityModel.SecurityTokenService> classe (STS) dans le pipeline d’émission de jeton pour renvoyer une réponse (RSTR) à une demande de jeton de sécurité (RST).  
  
 <xref:System.IdentityModel.Scope> les objets contiennent des informations sur l’adresse de la partie de confiance, le chiffrement et signature des informations d’identification à utiliser avec le jeton de sécurité émis, et si le jeton lui-même ou les clés symétriques émis avec le jeton doit être chiffré. Par défaut, les clés symétriques et jetons sont chiffrées. Vous pouvez étendre la <xref:System.IdentityModel.Scope> classe pour effectuer plus d’informations sur la demande, tels que les types de jeton accepté par la partie de confiance, par défaut, durée de vie de jeton, durée de vie de jeton maximale, suites algorithmiques utilisées par la partie de confiance, et ainsi de suite ; Toutefois, les informations encapsulées dans Cette classe ne doit pas varier des requêtes individuelles.  
  
 Le pipeline d’émission de jeton est implémenté dans le <xref:System.IdentityModel.SecurityTokenService.Issue%2A> méthode et cette méthode appelle la <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> méthode pour obtenir la configuration pour le RST. Vous devez implémenter un <xref:System.IdentityModel.SecurityTokenService.GetScope%2A> méthode dans votre STS personnalisé, puis revenez un <xref:System.IdentityModel.Scope> objet approprié pour la partie de confiance et de l’implémentation de votre STS.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Scope" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Scope" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant montre les valeurs initiales des propriétés pour le nouveau <xref:System.IdentityModel.Scope> instance.  
  
|Property|Valeur.|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|`null` .|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`.|  
|<xref:System.IdentityModel.Scope.Properties%2A>|Un dictionnaire vide.|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|`null`.|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appliesToAddress As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress">Adresse appliesTo de la partie de confiance. Il s'agit en général d'un URI.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Scope" /> avec l'adresse appliesTo spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant montre les valeurs initiales des propriétés pour le nouveau <xref:System.IdentityModel.Scope> instance.  
  
|Property|Valeur.|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|Valeur du paramètre `appliesToAddress`.|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`.|  
|<xref:System.IdentityModel.Scope.Properties%2A>|Un dictionnaire vide.|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|`null`.|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress, System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress, class System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress, System::IdentityModel::Tokens::EncryptingCredentials ^ encryptingCredentials);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
        <Parameter Name="encryptingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress">Adresse appliesTo de la partie de confiance. Il s'agit en général d'un URI.</param>
        <param name="encryptingCredentials">Informations d'identification de chiffrement pour la partie de confiance.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Scope" /> avec l'adresse appliesTo et les informations d'identification de chiffrement spécifiées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant montre les valeurs initiales des propriétés pour le nouveau <xref:System.IdentityModel.Scope> instance.  
  
|Property|Valeur.|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|Valeur du paramètre `appliesToAddress`.|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`.|  
|<xref:System.IdentityModel.Scope.Properties%2A>|Un dictionnaire vide.|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|Valeur du paramètre `signingCredentials`.|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress, System.IdentityModel.Tokens.SigningCredentials signingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress, class System.IdentityModel.Tokens.SigningCredentials signingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress, System::IdentityModel::Tokens::SigningCredentials ^ signingCredentials);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
        <Parameter Name="signingCredentials" Type="System.IdentityModel.Tokens.SigningCredentials" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress">Adresse appliesTo de la partie de confiance. Il s'agit en général d'un URI.</param>
        <param name="signingCredentials">Informations d'identification de signature de la partie de confiance.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Scope" /> avec l'adresse appliesTo et les informations d'identification de signature spécifiées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant montre les valeurs initiales des propriétés pour le nouveau <xref:System.IdentityModel.Scope> instance.  
  
|Property|Valeur.|  
|--------------|------------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|Valeur du paramètre `appliesToAddress`.|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|`null`.|  
|<xref:System.IdentityModel.Scope.Properties%2A>|Un dictionnaire vide.|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|Valeur du paramètre `signingCredentials`.|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Scope (string appliesToAddress, System.IdentityModel.Tokens.SigningCredentials signingCredentials, System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appliesToAddress, class System.IdentityModel.Tokens.SigningCredentials signingCredentials, class System.IdentityModel.Tokens.EncryptingCredentials encryptingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Scope.#ctor(System.String,System.IdentityModel.Tokens.SigningCredentials,System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Scope(System::String ^ appliesToAddress, System::IdentityModel::Tokens::SigningCredentials ^ signingCredentials, System::IdentityModel::Tokens::EncryptingCredentials ^ encryptingCredentials);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appliesToAddress" Type="System.String" />
        <Parameter Name="signingCredentials" Type="System.IdentityModel.Tokens.SigningCredentials" />
        <Parameter Name="encryptingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="appliesToAddress">Adresse appliesTo de la partie de confiance. Il s'agit en général d'un URI.</param>
        <param name="signingCredentials">Informations d'identification de signature de la partie de confiance.</param>
        <param name="encryptingCredentials">Informations d'identification de chiffrement pour la partie de confiance.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Scope" /> avec l'adresse appliesTo, les informations d'identification de signature et les informations d'identification de chiffrement spécifiées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le tableau suivant montre les valeurs initiales des propriétés pour le nouveau <xref:System.IdentityModel.Scope> instance.  
  
|Property|Value|  
|--------------|-----------|  
|<xref:System.IdentityModel.Scope.AppliesToAddress%2A>|Valeur du paramètre `appliesToAddress`.|  
|<xref:System.IdentityModel.Scope.EncryptingCredentials%2A>|Valeur du paramètre `encryptingCredentials`.|  
|<xref:System.IdentityModel.Scope.Properties%2A>|Un dictionnaire vide.|  
|<xref:System.IdentityModel.Scope.ReplyToAddress%2A>|`null`.|  
|<xref:System.IdentityModel.Scope.SigningCredentials%2A>|Valeur du paramètre `signingCredentials`.|  
|<xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A>|`true`.|  
|<xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A>|`true`.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppliesToAddress">
      <MemberSignature Language="C#" Value="public virtual string AppliesToAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AppliesToAddress" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.AppliesToAddress" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AppliesToAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AppliesToAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'adresse appliesTo de la partie de confiance.</summary>
        <value>Adresse appliesTo de la partie de confiance. Il s'agit en général d'un URI.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptingCredentials">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.EncryptingCredentials EncryptingCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.EncryptingCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EncryptingCredentials As EncryptingCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IdentityModel::Tokens::EncryptingCredentials ^ EncryptingCredentials { System::IdentityModel::Tokens::EncryptingCredentials ^ get(); void set(System::IdentityModel::Tokens::EncryptingCredentials ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.EncryptingCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit les informations d'identification de chiffrement pour la partie de confiance.</summary>
        <value>Informations d'identification de chiffrement à utiliser pour la partie de confiance.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> propriété est `true`, les informations d’identification sont utilisées pour chiffrer les jetons de sécurité émis. Si le <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> propriété est `true`, les informations d’identification sont utilisées pour chiffrer les clés symétriques émis avec des jetons de sécurité.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.Dictionary&lt;string,object&gt; Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, object&gt; Properties" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.Properties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Properties As Dictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ Properties { System::Collections::Generic::Dictionary&lt;System::String ^, System::Object ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le conteneur de propriétés utilisé pour étendre l'objet.</summary>
        <value>Conteneur de propriétés.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReplyToAddress">
      <MemberSignature Language="C#" Value="public virtual string ReplyToAddress { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ReplyToAddress" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.ReplyToAddress" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReplyToAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ReplyToAddress { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'adresse replyTo de la partie de confiance.</summary>
        <value>Adresse replyTo de la partie de confiance. Il s'agit en général d'un URI.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningCredentials">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SigningCredentials SigningCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.SigningCredentials" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SigningCredentials As SigningCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IdentityModel::Tokens::SigningCredentials ^ SigningCredentials { System::IdentityModel::Tokens::SigningCredentials ^ get(); void set(System::IdentityModel::Tokens::SigningCredentials ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SigningCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit les informations d'identification de signature pour la partie de confiance.</summary>
        <value>Informations d'identification de signature à utiliser pour la partie de confiance.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SymmetricKeyEncryptionRequired">
      <MemberSignature Language="C#" Value="public virtual bool SymmetricKeyEncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SymmetricKeyEncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SymmetricKeyEncryptionRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SymmetricKeyEncryptionRequired { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si les clés symétriques émises doivent être chiffrées.</summary>
        <value>
          <see langword="true" /> si les clés symétriques doivent être chiffrées ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.IdentityModel.Scope.SymmetricKeyEncryptionRequired%2A> propriété `true`, clés symétriques sont chiffrées à l’aide des informations d’identification dans le <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TokenEncryptionRequired">
      <MemberSignature Language="C#" Value="public virtual bool TokenEncryptionRequired { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TokenEncryptionRequired" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Scope.TokenEncryptionRequired" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TokenEncryptionRequired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool TokenEncryptionRequired { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si les jetons de sécurité émis doivent être chiffrés.</summary>
        <value>
          <see langword="true" /> si les jetons de sécurité doivent être chiffrés ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.IdentityModel.Scope.TokenEncryptionRequired%2A> propriété `true`, jetons de sécurité sont chiffrées à l’aide des informations d’identification dans le <xref:System.IdentityModel.Scope.EncryptingCredentials%2A> propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>