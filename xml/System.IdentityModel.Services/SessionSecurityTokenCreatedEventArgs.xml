<Type Name="SessionSecurityTokenCreatedEventArgs" FullName="System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9d41e37adce0811fb518ab5e742eb6889a354a14" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30416703" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SessionSecurityTokenCreatedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SessionSecurityTokenCreatedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SessionSecurityTokenCreatedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SessionSecurityTokenCreatedEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit des données pour l'événement <see cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated" /> et pour l'événement <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut :  
  
-   Dans le module d’authentification de session (SAM) le <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated> événement est déclenché à partir du <xref:System.IdentityModel.Services.SessionAuthenticationModule.OnAuthenticateRequest%2A?displayProperty=nameWithType> méthode après un jeton de session (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) a été créé. Cela se produit, par exemple, si un gestionnaire d’événements pour le <xref:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenReceived> événement modifie le jeton. Vous pouvez utiliser la <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs> pour modifier le jeton de session avant qu’il est passé sur le pipeline et est utilisé pour authentifier l’entité qui effectue la demande (utilisateur).  
  
-   Dans le module d’authentification WS-Federation (WSFAM), le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> événement est déclenché dans le pipeline de traitement de demande juste après un jeton de session a été créé à partir du message de réponse de connexion WS-Federation reçu de STS et juste avant que le SAM est appelé pour définir le principal thread et écrire le cookie de session.  
  
 Vous pouvez utiliser le <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A> propriété à modifier ou remplacer le jeton. Vous pouvez définir le <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A> pour spécifier si le cookie de session doit-elle être écrit (ou réécrit).  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.IdentityModel.Services.SessionAuthenticationModule.SessionSecurityTokenCreated" />
    <altmember cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SessionSecurityTokenCreatedEventArgs (System.IdentityModel.Tokens.SessionSecurityToken sessionToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.SessionSecurityToken sessionToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.#ctor(System.IdentityModel.Tokens.SessionSecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sessionToken As SessionSecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SessionSecurityTokenCreatedEventArgs(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionToken);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
      </Parameters>
      <Docs>
        <param name="sessionToken">Jeton de sécurité de session qui a été créé.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" /> à l'aide du jeton de sécurité de session spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A> est définie sur le jeton spécifié par le `sessionToken` paramètre. La propriété <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A> est initialisée à `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sessionToken" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SessionToken">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SessionSecurityToken SessionToken { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SessionSecurityToken SessionToken" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken" />
      <MemberSignature Language="VB.NET" Value="Public Property SessionToken As SessionSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SessionSecurityToken ^ SessionToken { System::IdentityModel::Tokens::SessionSecurityToken ^ get(); void set(System::IdentityModel::Tokens::SessionSecurityToken ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SessionSecurityToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le jeton de sécurité de session qui a été créé.</summary>
        <value>Jeton de session qui a été créé.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteSessionCookie">
      <MemberSignature Language="C#" Value="public bool WriteSessionCookie { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool WriteSessionCookie" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie" />
      <MemberSignature Language="VB.NET" Value="Public Property WriteSessionCookie As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool WriteSessionCookie { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si un cookie doit figurer dans la réponse.</summary>
        <value>
          <see langword="true" /> pour écrire un cookie dans la réponse ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />, le cookie n'est pas écrit dans la réponse.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>