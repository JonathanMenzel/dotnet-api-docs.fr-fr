<Type Name="WSFederationAuthenticationModule" FullName="System.IdentityModel.Services.WSFederationAuthenticationModule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4946a226efb8c22b2cb54ac00bf7e2cedea35d6e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36558374" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WSFederationAuthenticationModule : System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WSFederationAuthenticationModule extends System.IdentityModel.Services.HttpModuleBase" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />
  <TypeSignature Language="VB.NET" Value="Public Class WSFederationAuthenticationModule&#xA;Inherits HttpModuleBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class WSFederationAuthenticationModule : System::IdentityModel::Services::HttpModuleBase" />
  <TypeSignature Language="F#" Value="type WSFederationAuthenticationModule = class&#xA;    inherit HttpModuleBase" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel.Services</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Services.HttpModuleBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> est un module HTTP utilisé pour sécuriser une application ASP.NET en appliquant des paramètres d’authentification fédérée aux requêtes entrantes. <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> est le module principal prêt à l’emploi proposé par WIF pour gérer l’accès aux identités basées sur les revendications dans les applications ASP.NET.  <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> déclenche plusieurs événements, ce qui permet aux développeurs ASP.NET de modifier le comportement par défaut et de contrôler les détails relatifs à l'authentification et au traitement des revendications. La fonctionnalité <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> est divisée en méthodes spécifiques aux tâches.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> classe implémente un module HTTP connu en tant que le Module d’authentification WS-Federation (WSFAM). Le WSFAM est mis en œuvre la zone par Windows Identity Foundation (WIF). Le WSFAM est ajouté au pipeline ASP.NET en créant une entrée dans le fichier web.config. Elle est dérivée de <xref:System.IdentityModel.Services.HttpModuleBase>, qui implémente <xref:System.Web.IHttpModule>. Il inscrit avec le runtime ASP.NET pour écouter le <xref:System.Web.HttpApplication.EndRequest> et <xref:System.Web.HttpApplication.AuthenticateRequest> les événements. À l’écoute de le <xref:System.Web.HttpApplication.EndRequest> événement, permet la WSFAM de rediriger les clients vers un service de jeton de sécurité (STS) pour obtenir un jeton de sécurité en cas d’échec de l’autorisation sur une ressource demandée. À l’écoute de le <xref:System.Web.HttpApplication.AuthenticateRequest> événement permet le WSFAM surveiller les requêtes HTTP pour une réponse de STS qui contient le jeton demandé. Lorsque ce jeton est présent et valide, il crée une instance de <xref:System.Security.Claims.ClaimsPrincipal> pour l’utilisateur authentifié avec les revendications qui sont présentes dans le jeton.  
  
 Lorsque vous utilisez la WSFAM, la gestion de session est fournie par un module d’authentification de session (SAM), qui est une instance de la <xref:System.IdentityModel.Services.SessionAuthenticationModule> classe ou une classe dérivée à partir de celui-ci. Le SAM est également ajouté au pipeline ASP.NET dans le fichier de configuration. SAM surveille les demandes pour les cookies d’authentification (session). Lorsque ces cookies sont présentes et correctes, le module extrait le <xref:System.Security.Claims.ClaimsPrincipal> pour l’utilisateur authentifié à partir de la <xref:System.IdentityModel.Tokens.SessionSecurityToken> et définit les <xref:System.Web.HttpContext.User%2A?displayProperty=nameWithType> propriété et le principal thread <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> propriétés.  
  
 Le WSFAM fournit :  
  
-   La possibilité pour une application ASP.NET pour sous-traiter l’authentification à un service de jeton de sécurité (STS) à l’aide du protocole WS-Federation. Identité peut être fédéré entre un ou plusieurs domaines d’identité et impliquer plusieurs serveurs STS.  
  
-   Identités basée sur les revendications pour les applications ASP.NET. Lors de l’authentification, le WSFAM génère un principal à partir des revendications dans le jeton de sécurité envoyé par le STS et définit ce principal de revendications en tant que le principal thread. Vous pouvez ensuite utiliser cette entité de sécurité pour effectuer d’autres décisions logique sur l’utilisateur, qu'elle représente, présentation et autorisation dans votre code.  
  
 Le WSFAM expose plusieurs propriétés qui fournissent par défaut des paramètres de message à utiliser sur les demandes de connexion et de déconnexion WS-Federation. Ces propriétés sont généralement initialisées à partir du [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) élément dans un fichier de configuration. La plus importante de ces propriétés est :  
  
-   Le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propriété qui spécifie l’adresse du service de jeton de sécurité (STS) auquel vous souhaitez envoyer des demandes de connexion et déconnexion WS-Federation.  
  
-   Le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm%2A> propriété qui spécifie le paramètre wtrealm à utiliser dans les demandes de connexion WS-Federation. Le paramètre wtrealm identifie le domaine de la sécurité de l’application de confiance de partie de confiance à STS.  
  
 Paramètres de message de connexion peuvent également être modifiés sur une base par demande en fournissant un délégué de gestionnaire d’événements pour le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> événement.  
  
 Deux propriétés contrôlent le comportement du module. Ces deux propriétés sont généralement initialisés à partir du `<wsFederation>` élément de configuration.  
  
-   Le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> propriété spécifie si le module doit effectuer les redirections passives à destination du STS pour l’authentification.  
  
-   Le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects%2A> propriété spécifie si les sessions doivent être persistantes. Si cette propriété a la valeur true, le SAM est utilisé pour écrire un cookie de session sur le client. Pour les demandes suivantes à partir du client, le SAM fournit l’authentification en utilisant le jeton rendues persistantes dans le cookie de session.  
  
 Le WSFAM déclenche plusieurs événements pendant la connexion et déconnexion, qui permettent aux développeurs d’ASP.NET modifier le comportement par défaut du module et de contrôler les détails de la manière dont le traitement des revendications et l’authentification avoir lieu.  
  
 Les événements suivants sont déclenchés avant que la demande de connexion WS-Federation est envoyée vers STS :  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed>: Déclenché lors de la redirection passive est activée et l’autorisation échoue sur une ressource demandée.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider>: Déclenché juste avant le WSFAM envoie la demande de connexion WS-Federation vers STS. Vous pouvez utiliser cet événement pour modifier les paramètres dans la demande de connexion.  
  
 Les événements suivants sont déclenchés lorsqu’une réponse de connexion (émise le jeton de sécurité) est reçue de STS :  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived>: Déclenché juste après que le jeton de sécurité envoyé par le STS est lu à partir de la réponse.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated>: Déclenché juste après que le jeton a été validé. Vous pouvez utiliser cet événement pour filtrer, transformer ou ajouter des revendications au principal de revendications (<xref:System.Security.Claims.ClaimsPrincipal>) créé à partir du jeton de sécurité.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated>: Déclenché juste avant le jeton de session (<xref:System.IdentityModel.Tokens.SessionSecurityToken>) créé à partir de revendications principal est utilisé pour définir le thread principal et de l’utilisateur actuel et est écrit dans le cookie de session. Vous donne la possibilité de modifier le jeton de session ou d’activer ou de désactiver l’écriture de cookie de session.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn>: Déclenché à la fin de l’authentification juste après le thread principal et en cours de l’utilisateur ont été définis.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError>: Déclenché si une exception se produit pendant la connexion. Vous pouvez annuler la demande et empêcher l’exception ne soit retournée à l’appelant.  
  
 Lorsque vous vous connectez à une session ou lors du traitement d’une demande de nettoyage déconnexion WS-Federation (wsignoutcleanup1.0), les événements suivants sont déclenchés :  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>: Déclenché juste avant que la session est supprimée pour vous permettre d’effectuer tout nettoyage peut-être dépendre de la session ou d’annuler la déconnexion.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>: Déclenché juste après que la session a été supprimée.  
  
-   <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError>: Déclenché si une exception se produit lors de la déconnexion. Vous pouvez annuler la déconnexion et empêcher l’exception ne soit retournée à l’appelant.  
  
> [!NOTE]
>  Les événements de déconnexion ne sont pas déclenchés lors de la déconnexion à STS en appelant le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> (méthode).  
  
 Il existe deux façons de se connecter à un STS à l’aide de WSFAM. Le premier consiste à activer les redirections passives via le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> propriété. Dans ce cas, lorsque l’autorisation échoue sur une ressource demandée, plutôt que de retourner un `401:Access Denied` réponse au client, WSFAM génère un message de demande de connexion WS-Federation à partir de ses propriétés et redirige le client vers le STS pour récupérer un jeton de sécurité. La seconde consiste à rediriger explicitement le client auprès du STS en appelant le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> méthode à partir d’une page web ou d’un contrôle personnalisé dans votre application. Le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> méthode utilise également les propriétés de la WSFAM pour construire la demande de connexion.  
  
 Un des surchargées <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> méthodes peuvent être utilisées pour vous déconnecter de la session. Cette opération supprime le cookie de session sur le client. Il n’envoie pas d’un message de déconnexion WS-Federation (« wsignout1.0 ») à destination du STS. À la déconnexion à STS, vous devez utiliser le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> (méthode).  
  
 Le WSFAM gère les demandes de nettoyage déconnexion WS-Federation (« wsignoutcleanup1.0 »), en supprimant sa session avec le client. Si le paramètre wreply dans le message de nettoyage de déconnexion n’est pas défini, la WSFAM retourne une image d’une coche verte auprès du STS qui a envoyé le message. Cette fonctionnalité peut être utilisée par un STS comme un accusé de réception que la partie de confiance a terminé sa déconnexion.  
  
 Le WSFAM expose ses fonctionnalités--par exemple, son pipeline de traitement de demande--via plusieurs méthodes spécifiques à une tâche. Vous pouvez substituer ces méthodes dans les classes dérivées de modifier le comportement de la WSFAM.  
  
 Pour être utilisé, le module doit être ajouté au pipeline, comme dans le code XML suivant :  
  
```  
<configuration>  
  <system.webServer>  
    <modules>  
      <add name="WsFederationAuthenticationModule" type="System.IdentityModel.Services.WSFederationAuthenticationModule, System.IdentityModel.Services, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"/>  
    </modules>  
  </system.webServer>  
</configuration>  
```  
  
 Une fois configuré, le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule> déclenche des événements à différents stades du traitement d’une demande HTTP. Les développeurs ASP.NET peuvent gérer ces événements dans le fichier global.asax.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#1](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WSFederationAuthenticationModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WSFederationAuthenticationModule();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Appelé par les constructeurs dans les classes dérivées pour initialiser la classe <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationType">
      <MemberSignature Language="C#" Value="public string AuthenticationType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AuthenticationType" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType" />
      <MemberSignature Language="VB.NET" Value="Public Property AuthenticationType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AuthenticationType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AuthenticationType : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur du paramètre wauth à utiliser dans les demandes de connexion WS-Federation ("wsignin1.0").</summary>
        <value>URI qui spécifie le type d'authentification.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le paramètre wauth est facultatif. Si le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthenticationType%2A> est définie sur `null` ou une chaîne vide, le paramètre wauth n’est pas incluse dans la demande de connexion.  
  
 Vous pouvez remplacer ce paramètre sur chaque requête HTTP en ajoutant un gestionnaire pour le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> événement. Cet événement est déclenché juste avant que le module redirige vers le service d’émission de jeton de sécurité (STS) avec un message de demande de connexion WS-Federation. STS est spécifié par le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AuthorizationFailed">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; AuthorizationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; AuthorizationFailed" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed" />
      <MemberSignature Language="VB.NET" Value="Public Event AuthorizationFailed As EventHandler(Of AuthorizationFailedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::AuthorizationFailedEventArgs ^&gt; ^ AuthorizationFailed;" />
      <MemberSignature Language="F#" Value="member this.AuthorizationFailed : EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; " Usage="member this.AuthorizationFailed : System.EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.AuthorizationFailedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque le module détermine s'il doit rediriger l'utilisateur vers l'émetteur configuré à authentifier.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed> événement est déclenché lorsque l’autorisation a échoué pour une requête HTTP. Il est déclenché à partir du <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> délégué de gestionnaire d’événements via un appel à la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthorizationFailed%2A> (méthode).  
  
 Vous pouvez définir le <xref:System.IdentityModel.Services.AuthorizationFailedEventArgs.RedirectToIdentityProvider%2A?displayProperty=nameWithType> propriété pour contrôler si la requête est redirigée vers le fournisseur d’identité. Le framework initialise cette propriété à `false` si l’utilisateur a déjà été authentifié. Dans ce cas, définissez la propriété à `true` peut provoquer une boucle circulaire avec le STS.  
  
> [!NOTE]
>  Le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> événement peut être utilisé pour modifier l’URL ou d’annuler la redirection.  
  
 Pour gérer l’événement dans une application ASP.NET, créez une méthode nommée `WSFederationAuthentication_AuthorizationFailed` dans le fichier global.asax.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CanReadSignInResponse">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Retourne une valeur qui indique si la requête HTTP spécifiée est un message de réponse de connexion WS-Federation. Si le message est un message de nettoyage de déconnexion WS-Federation ("wsignoutcleanup1.0"), cette méthode traite la requête.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un message de réponse de connexion est envoyé à la partie de confiance (RP) par un service de jeton de sécurité (STS) en réponse à un message de demande de connexion.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CanReadSignInResponse">
      <MemberSignature Language="C#" Value="public bool CanReadSignInResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CanReadSignInResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanReadSignInResponse (request As HttpRequestBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanReadSignInResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="member this.CanReadSignInResponse : System.Web.HttpRequestBase -&gt; bool" Usage="wSFederationAuthenticationModule.CanReadSignInResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Requête HTTP entrantes.</param>
        <summary>Retourne une valeur qui indique si la requête HTTP spécifiée est un message de réponse de connexion WS-Federation. Si le message est un message de nettoyage de déconnexion WS-Federation ("wsignoutcleanup1.0"), cette méthode traite la requête.</summary>
        <returns>
          <see langword="true" /> si la requête HTTP spécifiée contient une publication de formulaire dans laquelle le paramètre wa a la valeur "wsignout1.0" et le paramètre wresult n’est pas vide ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée depuis le pipeline de traitement de demande pour déterminer si la requête HTTP entrante est une publication de formulaire qui contient un message de réponse de connexion WS-Federation.  
  
 Il appelle le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%2CSystem.Boolean%29?displayProperty=nameWithType> surcharger avec la `onPage` jeu de paramètres `false` pour indiquer que l’appel ne provenait pas lors du traitement d’une page.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> est <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="CanReadSignInResponse">
      <MemberSignature Language="C#" Value="public virtual bool CanReadSignInResponse (System.Web.HttpRequestBase request, bool onPage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanReadSignInResponse(class System.Web.HttpRequestBase request, bool onPage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanReadSignInResponse (request As HttpRequestBase, onPage As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanReadSignInResponse(System::Web::HttpRequestBase ^ request, bool onPage);" />
      <MemberSignature Language="F#" Value="abstract member CanReadSignInResponse : System.Web.HttpRequestBase * bool -&gt; bool&#xA;override this.CanReadSignInResponse : System.Web.HttpRequestBase * bool -&gt; bool" Usage="wSFederationAuthenticationModule.CanReadSignInResponse (request, onPage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
        <Parameter Name="onPage" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="request">Requête HTTP entrantes.</param>
        <param name="onPage">
          <see langword="true" /> si l'appel commence lors du traitement d'une requête de page. <see langword="false" /> si l'appelant est un module HTTP. Ce paramètre détermine comment terminer le traitement ou effectuer une redirection si le message entrant est un message de nettoyage de déconnexion WS-Federation ("wsignoutcleanup1.0").</param>
        <summary>Retourne une valeur qui indique si la requête HTTP spécifiée est un message de réponse de connexion WS-Federation. Si le message est un message de nettoyage de déconnexion WS-Federation ("wsignoutcleanup1.0"), cette méthode traite la requête.</summary>
        <returns>
          <see langword="true" /> si la requête HTTP spécifiée contient une publication de formulaire dans laquelle le paramètre wa a la valeur "wsignout1.0" et le paramètre wresult n’est pas vide ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée depuis le pipeline de traitement de la demande via le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29?displayProperty=nameWithType> surcharge pour déterminer si la requête HTTP entrante est une publication qui contient un message de réponse de connexion WS-Federation de formulaire.  
  
 L’implémentation par défaut effectue les opérations suivantes :  
  
-   Si la demande entrante est une publication de formulaire, elle appelle la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.IsSignInResponse%2A> méthode pour déterminer si la publication de formulaire contient une réponse de connexion.  
  
-   Si la demande entrante n’est pas une publication de formulaire, et que la demande contient une demande de nettoyage déconnexion WS-Federation (le paramètre wa est « wsignoutcleanup1.0 »), déconnexion nettoyage est effectuée. Dans ce cas, le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> méthode est appelée (avec le paramètre défini sur `true` pour indiquer un nettoyage déconnexion) pour vous déconnecter de la session. Cela entraîne également les événements de déconnexion à signaler.  
  
     Ensuite, si la demande de nettoyage de déconnexion contient un paramètre de wreply, le client est redirigé vers l’URL retournée par la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignOutRedirectUrl%2A> méthode ; sinon, une image d’une coche verte est retournée au STS. La réception de cette image peut être utilisée par le STS confirmer que la demande de nettoyage de déconnexion a été reçue et traitée par la partie de confiance.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> est <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse(System.Web.HttpRequestBase)" />
      </Docs>
    </Member>
    <Member MemberName="CreateSignInRequest">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Services.SignInRequestMessage CreateSignInRequest (string uniqueId, string returnUrl, bool rememberMeSet);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IdentityModel.Services.SignInRequestMessage CreateSignInRequest(string uniqueId, string returnUrl, bool rememberMeSet) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSignInRequest (uniqueId As String, returnUrl As String, rememberMeSet As Boolean) As SignInRequestMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::IdentityModel::Services::SignInRequestMessage ^ CreateSignInRequest(System::String ^ uniqueId, System::String ^ returnUrl, bool rememberMeSet);" />
      <MemberSignature Language="F#" Value="member this.CreateSignInRequest : string * string * bool -&gt; System.IdentityModel.Services.SignInRequestMessage" Usage="wSFederationAuthenticationModule.CreateSignInRequest (uniqueId, returnUrl, rememberMeSet)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.SignInRequestMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="returnUrl" Type="System.String" />
        <Parameter Name="rememberMeSet" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uniqueId">Le module WSFAM enregistre cette valeur du paramètre wctx dans la demande de connexion WS-Federation. Toutefois, le module ne l'utilise pas lors du traitement des demandes de connexion ou des réponses de connexion. Vous pouvez lui affecter n'importe quelle valeur. Ne doit pas nécessairement pas être unique.</param>
        <param name="returnUrl">URL à laquelle le module doit retourner la valeur lors de l'authentification.</param>
        <param name="rememberMeSet">Le module WSFAM enregistre cette valeur du paramètre wctx dans la demande de connexion WS-Federation. Toutefois, le module ne l'utilise pas lors du traitement des demandes de connexion ou des réponses de connexion. Vous pouvez lui affecter la valeur <see langword="true" /> ou <see langword="false" />.</param>
        <summary>Crée un message de demande de connexion WS-Federation à l'aide des paramètres WS-Federation configurés sur le module.</summary>
        <returns>Message de demande de connexion WS-Federation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Crée une demande de connexion WS-Federation qui est représentée par un <xref:System.IdentityModel.Services.SignInRequestMessage> objet. Les propriétés de la nouvelle <xref:System.IdentityModel.Services.SignInRequestMessage> objet sont définies comme suit :  
  
-   Le <xref:System.IdentityModel.Services.WSFederationMessage.Context%2A> (le paramètre wctx) est définie sur une valeur créée à l’aide des paramètres de la méthode.  
  
-   Le <xref:System.IdentityModel.Services.SignInRequestMessage.CurrentTime%2A> (le paramètre Wait Chain Traversal) est définie sur l’heure actuelle.  
  
-   Toutes les autres propriétés sont définies en utilisant les propriétés équivalentes de l’instance actuelle.  
  
 Les paramètres passés à la méthode sont utilisés pour créer le paramètre de message wctx. Il s’agit d’une chaîne au format suivant : `ru=returnUrl&cx=SignInContext&rm=rememberMeSet&id=uniqueId`.  
  
-   Le `ru` a la valeur à la valeur de le `returnUrl` paramètre transmis à la méthode et elle spécifie l’URL que le module doit acheminer le navigateur après l’authentification réussie. Il s’agit de la seule valeur stockée dans la chaîne wctx qui est utilisée par le WSFAM. Les appels de module le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> méthode pour extraire cette valeur à partir du paramètre wctx lors du traitement d’une réponse de connexion WS-Federation. Il ne doit pas être confondu avec le paramètre de message wreply qui est spécifié par le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A> propriété et qui fournit l’adresse à la partie de confiance à laquelle le service de jeton de sécurité (STS) doit directement sa réponse.  
  
-   Le `cx` est affectée à la valeur de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> propriété. Cette propriété est exposée pour vous permettre de définir n’importe quel contexte défini par l’application qui doit être stocké dans la chaîne wctx ; Toutefois, WSFAM n’expose pas une méthode pour extraire cette valeur dans la réponse. Si la valeur est requis par votre application, vous devez fournir le code pour analyser la chaîne wctx et de lire cette valeur lors du traitement de la réponse. Vous pouvez accomplir cela en substituant le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> (méthode).  
  
-   Ni le `rm` valeur, qui est définie à la valeur de la `rememberMeSet` paramètre, ni le `id` paramètre, qui est définie à la valeur de le `uniqueId` paramètre sont utilisés par WSFAM. Ils peuvent être définis pour n’importe quelle valeur.  
  
 Le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> méthode est appelée à partir de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">La propriété <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> a la valeur <see langword="null" /> ou est une chaîne vide.  - ou - La propriété <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> est <see langword="null" /> ou est une chaîne vide.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FederatedSignOut">
      <MemberSignature Language="C#" Value="public static void FederatedSignOut (Uri signOutUrl, Uri replyUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FederatedSignOut(class System.Uri signOutUrl, class System.Uri replyUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut(System.Uri,System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FederatedSignOut (signOutUrl As Uri, replyUrl As Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FederatedSignOut(Uri ^ signOutUrl, Uri ^ replyUrl);" />
      <MemberSignature Language="F#" Value="static member FederatedSignOut : Uri * Uri -&gt; unit" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut (signOutUrl, replyUrl)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signOutUrl" Type="System.Uri" />
        <Parameter Name="replyUrl" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="signOutUrl">URL du STS qui reçoit le message de requête de déconnexion WS-Federation. Ne peut pas être <see langword="null" />.</param>
        <param name="replyUrl">URL à envoyer comme valeur wreply dans le message de requête de déconnexion.</param>
        <summary>Se déconnecte au service d'émission de jeton de sécurité spécifié via le protocole WS-Federation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelez cette méthode pour envoyer un message de demande de déconnexion WS-Federation vers STS spécifié. Vous pouvez éventuellement fournir une valeur pour le paramètre wreply dans la demande de déconnexion.  
  
 La méthode effectue les opérations suivantes :  
  
1.  Crée un message de demande de déconnexion WS-Federation en utilisant les paramètres spécifiés.  
  
2.  Appelle la <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A?displayProperty=nameWithType> méthode du SAM pour supprimer le cookie de session.  
  
3.  Effectue une redirection vers STS en utilisant le message de demande de déconnexion à partir de la première étape.  
  
 Aucun des événements de déconnexion : <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut>, <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut>, ou <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> sont déclenchés par cette méthode. Pour supprimer la session sans envoyer un message de demande de déconnexion au STS, appelez l’une des surchargées <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> méthodes.  
  
> [!NOTE]
>  Pour effectuer la déconnexion de passif à l’aide du jeton de session, le module s’appuie sur une valeur qui a été enregistrée dans le <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A?displayProperty=nameWithType> propriété pendant la connexion, pour plus d’informations, voir la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="signOutUrl" /> n'est pas <see langword="null" /> et n'est pas un URI absolu.  - ou - <paramref name="replyUrl" /> n’est pas <see langword="null" /> et n’est pas un URI absolu.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="signOutUrl" /> est <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext" />
      </Docs>
    </Member>
    <Member MemberName="Freshness">
      <MemberSignature Language="C#" Value="public string Freshness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Freshness" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness" />
      <MemberSignature Language="VB.NET" Value="Public Property Freshness As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Freshness { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Freshness : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur du paramètre wfresh à utiliser dans les demandes de connexion WS-Federation ("wsignin1.0").</summary>
        <value>Âge maximal souhaité des demandes d'authentification, en minutes.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le paramètre wfresh est facultatif. Si le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Freshness%2A> est définie sur `null` ou une chaîne vide, le paramètre wfresh n’est pas incluse dans la demande de connexion.  
  
 Vous pouvez remplacer ce paramètre sur chaque requête HTTP en ajoutant un gestionnaire pour le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> événement. Cet événement est déclenché juste avant que le module redirige vers le service d’émission de jeton de sécurité (STS) avec un message de demande de connexion WS-Federation. STS est spécifié par le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFederationPassiveSignOutUrl">
      <MemberSignature Language="C#" Value="public static string GetFederationPassiveSignOutUrl (string issuer, string signOutReply, string signOutQueryString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetFederationPassiveSignOutUrl(string issuer, string signOutReply, string signOutQueryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFederationPassiveSignOutUrl (issuer As String, signOutReply As String, signOutQueryString As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetFederationPassiveSignOutUrl(System::String ^ issuer, System::String ^ signOutReply, System::String ^ signOutQueryString);" />
      <MemberSignature Language="F#" Value="static member GetFederationPassiveSignOutUrl : string * string * string -&gt; string" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl (issuer, signOutReply, signOutQueryString)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="issuer" Type="System.String" />
        <Parameter Name="signOutReply" Type="System.String" />
        <Parameter Name="signOutQueryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="issuer">Adresse d'émetteur. Adresse du service d'émission de jeton de sécurité (STS) vers lequel diriger la requête.</param>
        <param name="signOutReply">URL qui spécifie l'adresse à laquelle revenir après la déconnexion. Cela définit le paramètre wreply dans la requête de déconnexion. Peut être <see langword="null" /> ou vide si aucun paramètre wreply ne doit être inclus dans la demande de déconnexion générée. Il doit s'agir d'un URI absolu.</param>
        <param name="signOutQueryString">Paramètres supplémentaires de chaîne de requête à inclure dans la demande de déconnexion. Peut être <see langword="null" /> ou vide si aucun paramètre supplémentaire n'est inclus dans la demande de déconnexion générée. Il doit s'agir d'un URI relatif.</param>
        <summary>Retourne une URL qui représente une demande de déconnexion WS-Federation adressée à l'émetteur spécifié et qui contient le paramètre wreply spécifié et les paramètres supplémentaires spécifiés.</summary>
        <returns>URL qui contient une demande de déconnexion du protocole passif WS-Federation qui est générée à l'aide des paramètres spécifiés.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans l’URL qui est retourné : l’URI a la valeur de base `issuer`; le paramètre wa a la valeur « wsignout1.0 » ; le paramètre wreply est défini sur `signOutReply`; et les paramètres spécifiés dans `signOutQueryString` sont présents en tant que paramètres de chaîne de requête supplémentaires.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="issuer" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedResult">
      <MemberSignature Language="C#" Value="protected virtual string GetReferencedResult (string resultPtr);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetReferencedResult(string resultPtr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReferencedResult(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReferencedResult (resultPtr As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetReferencedResult(System::String ^ resultPtr);" />
      <MemberSignature Language="F#" Value="abstract member GetReferencedResult : string -&gt; string&#xA;override this.GetReferencedResult : string -&gt; string" Usage="wSFederationAuthenticationModule.GetReferencedResult resultPtr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resultPtr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resultPtr">URL qui spécifie l'adresse du résultat de l'émission.</param>
        <summary>Obtient le résultat d'émission (en général le jeton émis) de l'URL spécifiée. Résout l'URL spécifiée dans le paramètre wresultptr dans un message de réponse de connexion.</summary>
        <returns>Résultat d'émission référencé par l'URL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelée par le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage%28System.IdentityModel.Services.SignInResponseMessage%29?displayProperty=nameWithType> méthode à partir de dans le pipeline de traitement pour résoudre l’URL spécifiée dans le paramètre wresultptr dans le message de réponse de connexion reçu à partir d’un service de jeton de sécurité (STS).  
  
 Par défaut, cette méthode lève un <xref:System.NotSupportedException>. Substituez cette méthode dans une classe dérivée pour prendre en charge le paramètre wresultptr. L’URL pointe vers le résultat de l’émission, qui doit être un des éléments suivants : un `<wst:RequestSecurityTokenResponse>` élément, un `<wst:RequestSecurityTokenResponseCollection>` élément, une réponse SOAP ou un protocole SOAP `<S:Fault>` élément.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Cette méthode n'est pas prise en charge dans la classe de base. Vous devez le substituer dans une classe dérivée.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetReturnUrlFromResponse">
      <MemberSignature Language="C#" Value="protected virtual string GetReturnUrlFromResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetReturnUrlFromResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetReturnUrlFromResponse (request As HttpRequestBase) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetReturnUrlFromResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetReturnUrlFromResponse : System.Web.HttpRequestBase -&gt; string&#xA;override this.GetReturnUrlFromResponse : System.Web.HttpRequestBase -&gt; string" Usage="wSFederationAuthenticationModule.GetReturnUrlFromResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Requête HTTP qui contient un POST de formulaire, qui contient le message de réponse de connexion WS-Federation.</param>
        <summary>Extrait l'URL de la page initialement demandée à partir de la réponse de connexion.</summary>
        <returns>URL de la page qui a été initialement demandée par le client. Il s'agit de l'URL (au niveau de la partie de confiance) à laquelle le client doit être redirigé une fois la connexion réussie.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée depuis le pipeline de traitement de la demande (le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> méthode) pour obtenir l’URL de la page à la partie de confiance (RP) pour indiquer au client après authentification réussie. Il s’agit, en règle générale, l’URL de la ressource de partie de confiance à laquelle le client a demandé l’accès.  
  
 Par défaut, WSFAM enregistre l’URL de renvoi à l’intérieur du paramètre de message wctx lorsqu’il envoie la demande de connexion WS-Federation pour le service de jeton de sécurité (STS). Conformément à la spécification WS-Federation, le paramètre wctx est conservé entre les entités qui transmet le message et est retournée inchangée dans le message de réponse de connexion WS-Federation qui est envoyé par le STS.  
  
 L’implémentation par défaut Obtient l’URL de retour à partir du paramètre wctx dans la réponse de connexion. Pour plus d’informations sur le format du paramètre wctx qui est utilisé par WSFAM, consultez le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> est <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSecurityToken">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Lit un jeton de sécurité à partir d'une demande spécifiée.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken GetSecurityToken (System.IdentityModel.Services.SignInResponseMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetSecurityToken(class System.IdentityModel.Services.SignInResponseMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.IdentityModel.Services.SignInResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityToken (message As SignInResponseMessage) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ GetSecurityToken(System::IdentityModel::Services::SignInResponseMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityToken : System.IdentityModel.Services.SignInResponseMessage -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.GetSecurityToken : System.IdentityModel.Services.SignInResponseMessage -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="wSFederationAuthenticationModule.GetSecurityToken message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
      </Parameters>
      <Docs>
        <param name="message">Message de réponse de connexion dans lequel lire le jeton.</param>
        <summary>Lit un jeton de sécurité à partir du message de réponse de connexion WS Federation spécifié.</summary>
        <returns>Jeton de sécurité qui a été lu dans le message.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’implémentation par défaut appelle la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage%28System.IdentityModel.Services.SignInResponseMessage%2CSystem.IdentityModel.Services.WSFederationSerializer%29?displayProperty=nameWithType> méthode pour obtenir le jeton et le lit en utilisant le gestionnaire approprié dans les gestionnaires de jetons de sécurité configuré.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSecurityToken">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Tokens.SecurityToken GetSecurityToken (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Tokens.SecurityToken GetSecurityToken(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSecurityToken (request As HttpRequestBase) As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Tokens::SecurityToken ^ GetSecurityToken(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetSecurityToken : System.Web.HttpRequestBase -&gt; System.IdentityModel.Tokens.SecurityToken&#xA;override this.GetSecurityToken : System.Web.HttpRequestBase -&gt; System.IdentityModel.Tokens.SecurityToken" Usage="wSFederationAuthenticationModule.GetSecurityToken request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Requête HTTP depuis laquelle lire le jeton.</param>
        <summary>Lit un jeton de sécurité à partir d'une demande HTTP spécifiée.</summary>
        <returns>Jeton de sécurité ayant été lu.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelé dans le pipeline de traitement de demande pour obtenir le message de demande de connexion WS-Federation en tant qu’un <xref:System.IdentityModel.Tokens.SecurityToken> objet.  
  
 L’implémentation par défaut appelle la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignInResponseMessage%2A> méthode pour obtenir un <xref:System.IdentityModel.Services.SignInResponseMessage> de l’objet, puis appelle la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.IdentityModel.Services.SignInResponseMessage%29?displayProperty=nameWithType> de surcharge.  
  
 Utilisez une classe dérivée pour interpréter un type spécifique de la demande.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSessionTokenContext">
      <MemberSignature Language="C#" Value="protected virtual string GetSessionTokenContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetSessionTokenContext() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSessionTokenContext () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetSessionTokenContext();" />
      <MemberSignature Language="F#" Value="abstract member GetSessionTokenContext : unit -&gt; string&#xA;override this.GetSessionTokenContext : unit -&gt; string" Usage="wSFederationAuthenticationModule.GetSessionTokenContext " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient une valeur qui doit être persistante avec le cookie de session dans la propriété <see cref="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" />.</summary>
        <returns>Chaîne à rendre persistante dans le cookie de session.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSessionTokenContext%2A> méthode est appelée depuis le pipeline de traitement de requête lors du traitement d’un message de réponse de connexion WS-Federation pour obtenir la valeur à stocker dans le <xref:System.IdentityModel.Tokens.SessionSecurityToken.Context%2A?displayProperty=nameWithType> propriété dans le cookie de session.  
  
 Vous pouvez substituer cette méthode pour fournir une valeur spécifique à l’application à stocker dans le cookie. WSFAM n’expose pas de méthode pour récupérer la valeur à partir du cookie. Vous devez fournir la logique dans votre application pour lire la valeur de retour à partir du cookie s’il est nécessaire.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propriété <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> a la valeur <see langword="null" />.</exception>
        <altmember cref="P:System.IdentityModel.Tokens.SessionSecurityToken.Context" />
      </Docs>
    </Member>
    <Member MemberName="GetSignInResponseMessage">
      <MemberSignature Language="C#" Value="public virtual System.IdentityModel.Services.SignInResponseMessage GetSignInResponseMessage (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IdentityModel.Services.SignInResponseMessage GetSignInResponseMessage(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignInResponseMessage(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSignInResponseMessage (request As HttpRequestBase) As SignInResponseMessage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::IdentityModel::Services::SignInResponseMessage ^ GetSignInResponseMessage(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member GetSignInResponseMessage : System.Web.HttpRequestBase -&gt; System.IdentityModel.Services.SignInResponseMessage&#xA;override this.GetSignInResponseMessage : System.Web.HttpRequestBase -&gt; System.IdentityModel.Services.SignInResponseMessage" Usage="wSFederationAuthenticationModule.GetSignInResponseMessage request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Services.SignInResponseMessage</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Requête HTTP dans laquelle lire le message de réponse de connexion. La requête doit représenter un formulaire POST.</param>
        <summary>Lit un objet <see cref="T:System.IdentityModel.Services.SignInResponseMessage" /> à partir du paramètre POST de formulaire représenté par la requête HTTP spécifiée.</summary>
        <returns>Message de réponse de connexion qui a été créé.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelée à partir de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.Web.HttpRequestBase%29?displayProperty=nameWithType> méthode dans le pipeline de traitement de demande pour obtenir un message de réponse de connexion à partir du formulaire POST contenue dans la requête HTTP.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> est <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Un message de réponse de connexion n'a pas pu être lu à partir de la demande spécifiée.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignOutRedirectUrl">
      <MemberSignature Language="C#" Value="protected virtual string GetSignOutRedirectUrl (System.IdentityModel.Services.SignOutCleanupRequestMessage signOutMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetSignOutRedirectUrl(class System.IdentityModel.Services.SignOutCleanupRequestMessage signOutMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSignOutRedirectUrl(System.IdentityModel.Services.SignOutCleanupRequestMessage)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetSignOutRedirectUrl (signOutMessage As SignOutCleanupRequestMessage) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetSignOutRedirectUrl(System::IdentityModel::Services::SignOutCleanupRequestMessage ^ signOutMessage);" />
      <MemberSignature Language="F#" Value="abstract member GetSignOutRedirectUrl : System.IdentityModel.Services.SignOutCleanupRequestMessage -&gt; string&#xA;override this.GetSignOutRedirectUrl : System.IdentityModel.Services.SignOutCleanupRequestMessage -&gt; string" Usage="wSFederationAuthenticationModule.GetSignOutRedirectUrl signOutMessage" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="signOutMessage" Type="System.IdentityModel.Services.SignOutCleanupRequestMessage" />
      </Parameters>
      <Docs>
        <param name="signOutMessage">Requête de nettoyage de déconnexion.</param>
        <summary>Détermine l'URL de redirection lors du traitement d'une demande de nettoyage de déconnexion WS-Federation (wsignoutcleanup1.0) qui contient un paramètre wreply.</summary>
        <returns>URL vers laquelle la redirection doit être effectuée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée à partir de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%2A> méthode dans le pipeline de traitement de demande pour déterminer l’URL de redirection après le traitement d’une demande de nettoyage de déconnexion WS-Federation. Il est appelé uniquement si le message a un paramètre de wreply (le `signOutMessage` le paramètre a un <xref:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply%2A> propriété qui n’est ni `null` ni vide).  
  
 L’implémentation par défaut valide de l’URL de réponse contenue dans le message (le <xref:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply%2A?displayProperty=nameWithType> propriété) par rapport à l’adresse de la forme de service de jeton de sécurité (STS) qui est spécifié par le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propriété. Les conditions suivantes doivent être remplies pour l’URL de réponse soit valide :  
  
1.  L’URL de réponse est une URL absolue.  
  
2.  L’URL de réponse a le même schéma que l’émetteur.  
  
3.  L’URL de réponse a le même port que l’émetteur.  
  
4.  L’URL de réponse est le même hôte que l’émetteur, soit l’URL de réponse spécifie un sous-domaine de l’émetteur.  
  
 Si toutes les conditions suivantes sont remplies, que l’URL de réponse (réponse) est retourné ; Sinon, l’URL spécifiée par la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propriété est renvoyée.  
  
 Substituez cette méthode pour fournir la validation supplémentaire pour l’URL de réponse.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="signOutMessage" /> a une propriété <see cref="P:System.IdentityModel.Services.SignOutCleanupRequestMessage.Reply" /> qui est de type <see langword="null" /> ou vide.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="signOutMessage" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetXmlTokenFromMessage">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Extrait le jeton émis du message de réponse de connexion WS Federation spécifié.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetXmlTokenFromMessage">
      <MemberSignature Language="C#" Value="public virtual string GetXmlTokenFromMessage (System.IdentityModel.Services.SignInResponseMessage message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetXmlTokenFromMessage(class System.IdentityModel.Services.SignInResponseMessage message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlTokenFromMessage (message As SignInResponseMessage) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetXmlTokenFromMessage(System::IdentityModel::Services::SignInResponseMessage ^ message);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage -&gt; string&#xA;override this.GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage -&gt; string" Usage="wSFederationAuthenticationModule.GetXmlTokenFromMessage message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
      </Parameters>
      <Docs>
        <param name="message">Message de réponse de connexion à partir duquel extraire le jeton. La réponse de connexion contient le jeton émis par STS.</param>
        <summary>Extrait le jeton émis du message de réponse de connexion WS Federation spécifié.</summary>
        <returns>Chaîne qui contient le code XML représentant le jeton émis. Il s'agit d'un élément <see langword="&lt;wst:RequestSecurityTokenResponse&gt;" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 S’il n’existe aucun paramètre de paramètre wresult dans le message de réponse de connexion, le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReferencedResult%2A> méthode est appelée pour essayer d’obtenir le jeton à l’aide du paramètre wresultptr.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> est <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="message" /> ne contient pas de jeton. (Elle ne contient pas de paramètre wresult ou wresultptr valide).</exception>
      </Docs>
    </Member>
    <Member MemberName="GetXmlTokenFromMessage">
      <MemberSignature Language="C#" Value="public virtual string GetXmlTokenFromMessage (System.IdentityModel.Services.SignInResponseMessage message, System.IdentityModel.Services.WSFederationSerializer federationSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetXmlTokenFromMessage(class System.IdentityModel.Services.SignInResponseMessage message, class System.IdentityModel.Services.WSFederationSerializer federationSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.GetXmlTokenFromMessage(System.IdentityModel.Services.SignInResponseMessage,System.IdentityModel.Services.WSFederationSerializer)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXmlTokenFromMessage (message As SignInResponseMessage, federationSerializer As WSFederationSerializer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetXmlTokenFromMessage(System::IdentityModel::Services::SignInResponseMessage ^ message, System::IdentityModel::Services::WSFederationSerializer ^ federationSerializer);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage * System.IdentityModel.Services.WSFederationSerializer -&gt; string&#xA;override this.GetXmlTokenFromMessage : System.IdentityModel.Services.SignInResponseMessage * System.IdentityModel.Services.WSFederationSerializer -&gt; string" Usage="wSFederationAuthenticationModule.GetXmlTokenFromMessage (message, federationSerializer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.IdentityModel.Services.SignInResponseMessage" />
        <Parameter Name="federationSerializer" Type="System.IdentityModel.Services.WSFederationSerializer" />
      </Parameters>
      <Docs>
        <param name="message">Message de réponse de connexion à partir duquel extraire le jeton. La réponse de connexion contient le jeton émis par STS.</param>
        <param name="federationSerializer">Sérialiseur de WS-Federation à utiliser pour désérialiser le message de réponse de connexion.</param>
        <summary>Extrait le jeton émis du message spécifié de réponse de connexion WS-Federation à l'aide du sérialiseur WS-Federation spécifié.</summary>
        <returns>Chaîne qui contient le code XML représentant le jeton émis. Il s'agit d'un élément <see langword="&lt;wst:RequestSecurityTokenResponse&gt;" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="message" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="HomeRealm">
      <MemberSignature Language="C#" Value="public string HomeRealm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HomeRealm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm" />
      <MemberSignature Language="VB.NET" Value="Public Property HomeRealm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HomeRealm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HomeRealm : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur du paramètre whr à utiliser dans les demandes de connexion WS-Federation ("wsignin1.0").</summary>
        <value>Adresse de l'identité du fournisseur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le paramètre whr est facultatif. Si le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.HomeRealm%2A> est définie sur `null` ou une chaîne vide, le paramètre whr n’est pas incluse dans la demande de connexion.  
  
 Vous pouvez remplacer ce paramètre sur chaque requête HTTP en ajoutant un gestionnaire pour le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> événement. Cet événement est déclenché juste avant que le module redirige vers le service d’émission de jeton de sécurité (STS) avec un message de demande de connexion WS-Federation. STS est spécifié par le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeModule">
      <MemberSignature Language="C#" Value="protected override void InitializeModule (System.Web.HttpApplication context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializeModule(class System.Web.HttpApplication context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializeModule(System.Web.HttpApplication)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializeModule (context As HttpApplication)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializeModule(System::Web::HttpApplication ^ context);" />
      <MemberSignature Language="F#" Value="override this.InitializeModule : System.Web.HttpApplication -&gt; unit" Usage="wSFederationAuthenticationModule.InitializeModule context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpApplication" />
      </Parameters>
      <Docs>
        <param name="context">Objet d'application HTTP qui contient ce module.</param>
        <summary>Initialise le module et le prépare à gérer les événements provenant de l’objet d’application [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] du module.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ajoute des gestionnaires d’événements du pipeline ASP.NET conformément au tableau suivant.  
  
|événement|Gestionnaire|  
|-----------|-------------|  
|<xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A>|  
|<xref:System.Web.HttpApplication.EndRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A>|  
|<xref:System.Web.HttpApplication.PostAuthenticateRequest?displayProperty=nameWithType>|<xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnPostAuthenticateRequest%2A>|  
  
> [!NOTE]
>  Les propriétés du module, tel que <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> , sont initialisés à partir du <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="context" /> est <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration" />
      </Docs>
    </Member>
    <Member MemberName="InitializePropertiesFromConfiguration">
      <MemberSignature Language="C#" Value="protected override void InitializePropertiesFromConfiguration ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InitializePropertiesFromConfiguration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializePropertiesFromConfiguration" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InitializePropertiesFromConfiguration ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InitializePropertiesFromConfiguration();" />
      <MemberSignature Language="F#" Value="override this.InitializePropertiesFromConfiguration : unit -&gt; unit" Usage="wSFederationAuthenticationModule.InitializePropertiesFromConfiguration " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialise les propriétés du module selon la configuration spécifiée par la propriété <see cref="P:System.IdentityModel.Services.HttpModuleBase.FederationConfiguration" /> du module.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les propriétés du module sont initialisées à l’aide des propriétés équivalentes de la <xref:System.IdentityModel.Services.Configuration.WsFederationConfiguration> objet spécifié par le <xref:System.IdentityModel.Services.Configuration.FederationConfiguration.WsFederationConfiguration%2A?displayProperty=nameWithType> propriété.  
  
 Vous pouvez spécifier des paramètres dans un fichier de configuration via la [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) élément.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSignInResponse">
      <MemberSignature Language="C#" Value="public virtual bool IsSignInResponse (System.Web.HttpRequestBase request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsSignInResponse(class System.Web.HttpRequestBase request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.IsSignInResponse(System.Web.HttpRequestBase)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsSignInResponse (request As HttpRequestBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsSignInResponse(System::Web::HttpRequestBase ^ request);" />
      <MemberSignature Language="F#" Value="abstract member IsSignInResponse : System.Web.HttpRequestBase -&gt; bool&#xA;override this.IsSignInResponse : System.Web.HttpRequestBase -&gt; bool" Usage="wSFederationAuthenticationModule.IsSignInResponse request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Web.HttpRequestBase" />
      </Parameters>
      <Docs>
        <param name="request">Requête HTTP entrantes.</param>
        <summary>Obtient une valeur qui indique si la demande spécifiée est un message de réponse de connexion WS-Federation.</summary>
        <returns>
          <see langword="true" /> si la requête est un message de réponse de connexion WS-Federation ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée à partir de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%2A> méthode dans le pipeline de traitement de demande pour déterminer si la requête HTTP entrante est un message de réponse de connexion WS-Federation.  
  
 L’implémentation par défaut retourne `true` si le paramètre wa est « wsignin1.0 » et le wreq et les paramètres wreqptr sont pas définis.  
  
 Vous pouvez substituer cette méthode dans les classes dérivées pour effectuer une validation supplémentaire.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="request" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Issuer">
      <MemberSignature Language="C#" Value="public string Issuer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Issuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />
      <MemberSignature Language="VB.NET" Value="Public Property Issuer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Issuer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Issuer : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'URI qui identifie l'émetteur attendu du jeton de sécurité.</summary>
        <value>URI qui identifie le service d'émission de jetons de sécurité (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété est obligatoire. Elle doit être définie si les redirections passives sont activées. Elle spécifie l’URL du service de jeton de sécurité (STS) à laquelle les demandes WS-Federation doivent être émis.  
  
 Vous pouvez remplacer ce paramètre sur chaque requête HTTP en ajoutant un gestionnaire pour le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> événement. Cet événement est déclenché juste avant que le module redirige vers le service d’émission de jeton de sécurité (STS) avec un message de demande de connexion WS-Federation. STS est spécifié par le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il est tenté de définir la propriété sur <see langword="null" /> ou une chaîne vide.  - ou - Une tentative de définition de la propriété sur une valeur qui n’est pas un URI absolu valide se produit.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthenticateRequest (object sender, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthenticateRequest(object sender, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthenticateRequest (sender As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthenticateRequest(System::Object ^ sender, EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthenticateRequest : obj * EventArgs -&gt; unit&#xA;override this.OnAuthenticateRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnAuthenticateRequest (sender, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Source de l'événement. Il s'agira d'un objet <see cref="T:System.Web.HttpApplication" />.</param>
        <param name="args">Données de l'événement.</param>
        <summary>Gère l’événement <see cref="E:System.Web.HttpApplication.AuthenticateRequest" /> provenant du pipeline [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)].</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> méthode implémente le pipeline de traitement de demande WS-Federation. Il est ajouté à la <xref:System.Web.HttpApplication.AuthenticateRequest?displayProperty=nameWithType> événement dans le [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] de pipeline par le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.InitializeModule%2A> (méthode).  
  
 La méthode effectue les opérations suivantes :  
  
1.  Appelle la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29> méthode pour déterminer si un message de réponse de connexion WS-Federation (« wsignin1.0 ») a été reçu. Si la réponse est une demande de nettoyage déconnexion (« wsignoutcleanup1.0 »), WS-Federation <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%29> traite le message, met fin à la demande et redirige le client en fonction des paramètres dans la demande WS-Federation. Si le message n’est pas une réponse de connexion ou d’une demande de nettoyage de déconnexion, le module renvoie simplement ; dans le cas contraire, il effectue les étapes suivantes pour traiter la réponse de connexion.  
  
2.  Appelle le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetSecurityToken%28System.Web.HttpRequestBase%29> méthode pour désérialiser une <xref:System.IdentityModel.Tokens.SecurityToken> objet à partir de la demande.  
  
3.  Déclenche l'événement <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived>. Vous pouvez annuler un traitement supplémentaire ou modifier le jeton de sécurité reçu dans un gestionnaire pour cet événement. Un gestionnaire est généralement utilisé pour modifier la <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A?displayProperty=nameWithType> ou <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A?displayProperty=nameWithType> propriétés.  
  
4.  Valide le jeton de sécurité et crée un <xref:System.Security.Claims.ClaimsPrincipal> objet à partir des revendications dans le jeton de sécurité.  
  
5.  Déclenche l'événement <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated>. Vous pouvez annuler un traitement supplémentaire ou modifier le principal de revendications dans un gestionnaire pour cet événement.  
  
6.  Utilise le module d’authentification de session configurée (SAM) pour créer un <xref:System.IdentityModel.Tokens.SessionSecurityToken> objet. (Le SAM configuré est la <xref:System.IdentityModel.Services.SessionAuthenticationModule> objet retourné par la <xref:System.IdentityModel.Services.FederatedAuthentication.SessionAuthenticationModule%2A?displayProperty=nameWithType> propriété.) Le jeton de session est créé à l’aide de la principal de revendications retourné à l’étape 5. Le <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidFrom%2A?displayProperty=nameWithType> et <xref:System.IdentityModel.Tokens.SessionSecurityToken.ValidTo%2A?displayProperty=nameWithType> propriétés sont définies à l’aide de la <xref:System.IdentityModel.Tokens.SecurityToken.ValidFrom%2A> et <xref:System.IdentityModel.Tokens.SecurityToken.ValidTo%2A> propriétés de la <xref:System.IdentityModel.Tokens.SecurityToken> retourné à l’étape 3 et sont validés par rapport à l’heure actuelle et la durée de vie de jeton spécifié par les deux <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.DefaultTokenLifetime%2A>ou <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler.TokenLifetime%2A> propriété de la <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> objet dans la collection du Gestionnaire de jetons utilisée par WSFAM. La durée de vie de jeton sur le Gestionnaire de jetons de session peut être spécifiée dans la configuration via la [ &lt;sessionTokenRequirement&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/sessiontokenrequirement.md) élément. Remarque : Le <xref:System.IdentityModel.Services.CookieHandler.PersistentSessionLifetime%2A> propriété sur le Gestionnaire de cookie configuré pour le SAM n’est pas utilisé.  
  
7.  Appelle la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken%2A> méthode avec le jeton de session pour écrire le cookie de session. Le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken%2A> méthode déclenche d’abord le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> événement. Vous pouvez modifier les propriétés sur le jeton de session ou la modifier si le cookie doit être persistante dans un gestionnaire pour cet événement. Une fois que l’événement est déclenché, la méthode écrit ensuite le cookie à l’aide de SAM.  
  
    > [!NOTE]
    >  Le <xref:System.IdentityModel.Tokens.SessionSecurityTokenHandler> ensemble dans la configuration n’est pas utilisé pour écrire le cookie.  
  
8.  Appelle le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedIn%2A> méthode pour déclencher le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn> événement.  
  
9. Appelle la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetReturnUrlFromResponse%2A> méthode pour obtenir la page RP vers laquelle rediriger le client. Par défaut, cette méthode lit l’URL de retour à partir du paramètre wctx dans la réponse de connexion. Pour plus d’informations sur la manière dont WSFAM stocke l’URL de renvoi, consultez le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAuthorizationFailed">
      <MemberSignature Language="C#" Value="protected virtual void OnAuthorizationFailed (System.IdentityModel.Services.AuthorizationFailedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnAuthorizationFailed(class System.IdentityModel.Services.AuthorizationFailedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthorizationFailed(System.IdentityModel.Services.AuthorizationFailedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnAuthorizationFailed (e As AuthorizationFailedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnAuthorizationFailed(System::IdentityModel::Services::AuthorizationFailedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnAuthorizationFailed : System.IdentityModel.Services.AuthorizationFailedEventArgs -&gt; unit&#xA;override this.OnAuthorizationFailed : System.IdentityModel.Services.AuthorizationFailedEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnAuthorizationFailed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.AuthorizationFailedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Données de l'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelée à partir de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> délégué de gestionnaire d’événements lors de l’échec de l’autorisation.  
  
 Initialise le <xref:System.IdentityModel.Services.AuthorizationFailedEventArgs.RedirectToIdentityProvider%2A?displayProperty=nameWithType> propriété avant le déclenchement de le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.AuthorizationFailed> événement afin d’empêcher les redirections circulaires si l’utilisateur a déjà été authentifié. Si l’utilisateur est déjà authentifié, la propriété est initialisée à `false` pour empêcher redirige ; sinon, elle est initialisée à `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnEndRequest (object sender, EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEndRequest(object sender, class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEndRequest (sender As Object, args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEndRequest(System::Object ^ sender, EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnEndRequest : obj * EventArgs -&gt; unit&#xA;override this.OnEndRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnEndRequest (sender, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Source de l'événement. Il s'agira d'un objet <see cref="T:System.Web.HttpApplication" />.</param>
        <param name="args">Données de l'événement.</param>
        <summary>Gère l’événement <see cref="E:System.Web.HttpApplication.EndRequest" /> provenant du pipeline [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)].</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’événement est ignorée sauf si le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> propriété est `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPostAuthenticateRequest">
      <MemberSignature Language="C#" Value="protected virtual void OnPostAuthenticateRequest (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPostAuthenticateRequest(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnPostAuthenticateRequest(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPostAuthenticateRequest (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPostAuthenticateRequest(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPostAuthenticateRequest : obj * EventArgs -&gt; unit&#xA;override this.OnPostAuthenticateRequest : obj * EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnPostAuthenticateRequest (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Source de l'événement. Il s'agira d'un objet <see cref="T:System.Web.HttpApplication" />.</param>
        <param name="e">Données de l'événement.</param>
        <summary>Gère l’événement <see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /> provenant du pipeline [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)].</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, il s’agit d’un gestionnaire vide.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnRedirectingToIdentityProvider">
      <MemberSignature Language="C#" Value="protected virtual void OnRedirectingToIdentityProvider (System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRedirectingToIdentityProvider(class System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider(System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRedirectingToIdentityProvider (e As RedirectingToIdentityProviderEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRedirectingToIdentityProvider(System::IdentityModel::Services::RedirectingToIdentityProviderEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnRedirectingToIdentityProvider : System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs -&gt; unit&#xA;override this.OnRedirectingToIdentityProvider : System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnRedirectingToIdentityProvider e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Données de l'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnSessionSecurityTokenCreated (System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSessionSecurityTokenCreated(class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSessionSecurityTokenCreated(System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSessionSecurityTokenCreated (args As SessionSecurityTokenCreatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSessionSecurityTokenCreated(System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSessionSecurityTokenCreated : System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs -&gt; unit&#xA;override this.OnSessionSecurityTokenCreated : System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSessionSecurityTokenCreated args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Données de l'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignedIn">
      <MemberSignature Language="C#" Value="protected virtual void OnSignedIn (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignedIn(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedIn(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignedIn (args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignedIn(EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignedIn : EventArgs -&gt; unit&#xA;override this.OnSignedIn : EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignedIn args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Données de l'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSignedOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSignedOut (EventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignedOut(class System.EventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignedOut (args As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignedOut(EventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignedOut : EventArgs -&gt; unit&#xA;override this.OnSignedOut : EventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignedOut args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Données de l'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelée à partir de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> méthode juste après la session est supprimée.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnSignInError">
      <MemberSignature Language="C#" Value="protected virtual void OnSignInError (System.IdentityModel.Services.ErrorEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignInError(class System.IdentityModel.Services.ErrorEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignInError(System.IdentityModel.Services.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignInError (args As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignInError(System::IdentityModel::Services::ErrorEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignInError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit&#xA;override this.OnSignInError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignInError args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Données de l'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSigningOut">
      <MemberSignature Language="C#" Value="protected virtual void OnSigningOut (System.IdentityModel.Services.SigningOutEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSigningOut(class System.IdentityModel.Services.SigningOutEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut(System.IdentityModel.Services.SigningOutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSigningOut (args As SigningOutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSigningOut(System::IdentityModel::Services::SigningOutEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSigningOut : System.IdentityModel.Services.SigningOutEventArgs -&gt; unit&#xA;override this.OnSigningOut : System.IdentityModel.Services.SigningOutEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSigningOut args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.SigningOutEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Données de l'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelée à partir de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> méthode juste avant que la session est supprimée.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="OnSignOutError">
      <MemberSignature Language="C#" Value="protected virtual void OnSignOutError (System.IdentityModel.Services.ErrorEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSignOutError(class System.IdentityModel.Services.ErrorEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError(System.IdentityModel.Services.ErrorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSignOutError (args As ErrorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSignOutError(System::IdentityModel::Services::ErrorEventArgs ^ args);" />
      <MemberSignature Language="F#" Value="abstract member OnSignOutError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit&#xA;override this.OnSignOutError : System.IdentityModel.Services.ErrorEventArgs -&gt; unit" Usage="wSFederationAuthenticationModule.OnSignOutError args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.IdentityModel.Services.ErrorEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">Données de l'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelée à partir de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> méthode si une exception se produit au cours du traitement.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PassiveRedirectEnabled">
      <MemberSignature Language="C#" Value="public bool PassiveRedirectEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PassiveRedirectEnabled" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property PassiveRedirectEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PassiveRedirectEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PassiveRedirectEnabled : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui spécifie si le module est activé pour initialiser la redirection du protocole WS-Federation.</summary>
        <value>
          <see langword="true" /> pour permettre les redirections ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le module ne va pas lancer les redirections du protocole WS-Federation lorsque ce mode n’est pas activé. Si cette propriété est `true`, le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propriété doit être définie à l’URL du Service STS (Security Token) à laquelle l’appelant doit être redirigé.  
  
> [!WARNING]
>  Code de l’application peut émettre explicitement des demandes de connexion WS-Federation à l’aide de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> (méthode), quelle que soit la valeur de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled%2A> propriété.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      </Docs>
    </Member>
    <Member MemberName="PersistentCookiesOnPassiveRedirects">
      <MemberSignature Language="C#" Value="public bool PersistentCookiesOnPassiveRedirects { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PersistentCookiesOnPassiveRedirects" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      <MemberSignature Language="VB.NET" Value="Public Property PersistentCookiesOnPassiveRedirects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PersistentCookiesOnPassiveRedirects { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PersistentCookiesOnPassiveRedirects : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.PersistentCookiesOnPassiveRedirects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui spécifie si un cookie de session persistante est publiée lors de l'authentification réussie.</summary>
        <value>
          <see langword="true" /> pour émettre un cookie de session persistant ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez remplacer ce paramètre sur chaque requête HTTP en ajoutant un gestionnaire pour le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> événement. Cet événement est déclenché à partir de la demande de pipeline de traitement lors du traitement d’un message de réponse de connexion WS-Federation à partir d’un service de jeton de sécurité (STS).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.PassiveRedirectEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Policy">
      <MemberSignature Language="C#" Value="public string Policy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Policy" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Policy" />
      <MemberSignature Language="VB.NET" Value="Public Property Policy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Policy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Policy : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Policy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur du paramètre wp à utiliser dans les demandes de connexion WS-Federation ("wsignin1.0").</summary>
        <value>URL qui identifie la stratégie à utiliser.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le paramètre wp est facultatif. Si le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Policy%2A> est définie sur `null` ou une chaîne vide, le paramètre wp n’est pas incluse dans la demande de connexion.  
  
 Vous pouvez remplacer ce paramètre sur chaque requête HTTP en ajoutant un gestionnaire pour le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> événement. Cet événement est déclenché juste avant que le module redirige vers le service d’émission de jeton de sécurité (STS) avec un message de demande de connexion WS-Federation. STS est spécifié par le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Realm">
      <MemberSignature Language="C#" Value="public string Realm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Realm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />
      <MemberSignature Language="VB.NET" Value="Public Property Realm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Realm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Realm : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur du paramètre wtrealm à utiliser pour les demandes de connexion WS-Federation ("wsignin1.0").</summary>
        <value>URI qui identifie la partie de confiance (RP) au service d'émission de jeton de sécurité (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il s’agit d’une propriété requise pour les demandes de connexion WS-Federation. Elle doit être définie si les redirections passives sont activées. L’URI identifie la partie de confiance pour le STS. (Pour identifier le STS pour la partie de confiance, consultez le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propriété).  
  
 La valeur de cette propriété est sérialisée en tant que le paramètre de chaîne de requête wtrealm dans le protocole WS-Federation. Il identifie la partie de confiance pour le STS. Il est utilisé par le STS pour décider quelle stratégie à appliquer pour l’émission de jetons et de redirection de l’utilisateur d’après l’émission du jeton. (Pour identifier le STS pour la partie de confiance, consultez <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A>.)  
  
 Vous pouvez remplacer ce paramètre sur chaque requête HTTP en ajoutant un gestionnaire pour le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> événement. Cet événement est déclenché juste avant que le module redirige vers le service d’émission de jeton de sécurité (STS) avec un message de demande de connexion WS-Federation. STS est spécifié par le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il est tenté de définir la propriété sur <see langword="null" /> ou une chaîne vide.  - ou - Une tentative de définition de la propriété sur une valeur qui n’est pas un URI absolu valide se produit.</exception>
      </Docs>
    </Member>
    <Member MemberName="RedirectingToIdentityProvider">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; RedirectingToIdentityProvider;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; RedirectingToIdentityProvider" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider" />
      <MemberSignature Language="VB.NET" Value="Public Event RedirectingToIdentityProvider As EventHandler(Of RedirectingToIdentityProviderEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::RedirectingToIdentityProviderEventArgs ^&gt; ^ RedirectingToIdentityProvider;" />
      <MemberSignature Language="F#" Value="member this.RedirectingToIdentityProvider : EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; " Usage="member this.RedirectingToIdentityProvider : System.EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque le module va rediriger l'utilisateur vers le fournisseur d'identité.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez accéder et modifier la demande de connexion WS-Federation via le <xref:System.IdentityModel.Services.RedirectingToIdentityProviderEventArgs.SignInRequestMessage%2A?displayProperty=nameWithType> propriété. Par exemple, vous pouvez modifier le <xref:System.IdentityModel.Services.FederationMessage.BaseUri%2A> propriété dans le message de connexion pour modifier le fournisseur d’identité à laquelle la demande s’affichera. Le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> événement est un événement annulable, vous pouvez définir le <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriété `true` pour annuler la redirection.  
  
 L’événement est déclenché à partir d’à l’intérieur de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> méthode via un appel à la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider%2A> (méthode).  
  
 Pour gérer cet événement dans une application ASP.NET, créez une méthode appelée `WSFederationAuthentication_RedirectingToIdentityProvider` dans le fichier global.asax.  
  
   
  
## Examples  
 Le code suivant montre comment ajouter un gestionnaire pour le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> événement dans le `Application_Init` événement dans le fichier global.asax. Le code provient de la `FederationForWebApps` exemple. Pour plus d’informations sur cet exemple, consultez [exemple d’Index de Code WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
  
  
 Le code suivant montre le gestionnaire pour le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> événement dans le dans le fichier global.asax d’une partie de confiance. Le code vérifie si la requête HTTP entrante contient un paramètre whr et, dans ce cas, il définit ce paramètre sur la demande de connexion WS-Federation qui sera envoyée au STS. Le code provient de la `FederationForWebApps` exemple. Pour plus d’informations sur cet exemple, consultez [exemple d’Index de Code WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
  
  
 Le code suivant montre le gestionnaire pour le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> événement dans le dans le fichier global.asax d’un fournisseur de fédération STS. Le code vérifie si la requête HTTP entrante contient un paramètre whr. Si la demande contient le paramètre whr, le client est dirigé vers l’IP-STS pour la connexion ; Si ce n’est pas le cas, le client est dirigé vers une page de découverte du domaine d’accueil pour sélectionner le STS de IP à laquelle se connecter. Le code provient de la `FederationForWebApps` exemple. Pour plus d’informations sur cet exemple, consultez [exemple d’Index de Code WIF](~/docs/framework/security/wif-code-sample-index.md).  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RedirectToIdentityProvider">
      <MemberSignature Language="C#" Value="public virtual void RedirectToIdentityProvider (string uniqueId, string returnUrl, bool persist);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RedirectToIdentityProvider(string uniqueId, string returnUrl, bool persist) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RedirectToIdentityProvider (uniqueId As String, returnUrl As String, persist As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RedirectToIdentityProvider(System::String ^ uniqueId, System::String ^ returnUrl, bool persist);" />
      <MemberSignature Language="F#" Value="abstract member RedirectToIdentityProvider : string * string * bool -&gt; unit&#xA;override this.RedirectToIdentityProvider : string * string * bool -&gt; unit" Usage="wSFederationAuthenticationModule.RedirectToIdentityProvider (uniqueId, returnUrl, persist)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="returnUrl" Type="System.String" />
        <Parameter Name="persist" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="uniqueId">Le module WSFAM enregistre cette valeur du paramètre wctx dans la demande de connexion WS-Federation. Toutefois, le module ne l'utilise pas lors du traitement des demandes de connexion ou des réponses de connexion. Vous pouvez lui affecter n'importe quelle valeur. Ne doit pas nécessairement pas être unique. Pour plus d'informations, voir la méthode <see cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />.</param>
        <param name="returnUrl">URL à laquelle le module doit retourner la valeur lors de l'authentification.</param>
        <param name="persist">Le module WSFAM enregistre cette valeur du paramètre wctx dans la demande de connexion WS-Federation. Toutefois, le module ne l'utilise pas lors du traitement des demandes de connexion ou des réponses de connexion. Vous pouvez lui affecter la valeur <see langword="true" /> ou <see langword="false" />.</param>
        <summary>Redirige l'utilisateur vers le service d'émission de jeton de sécurité spécifié par la propriété <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> pour obtenir un jeton de sécurité à l'aide du protocole WS-Federation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> méthode est appelée à partir de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> méthode lors de la demande est émise à partir d’une page web présentée par la partie de confiance (RP) ou à partir de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnEndRequest%2A> délégué de gestionnaire d’événements pour effectuer une redirection passive pour le fournisseur d’identité sur Échec d’autorisation.  
  
 Les paramètres passés à la méthode sont utilisés pour créer le paramètre de message wctx. Le seul paramètre est le `returnUrl` paramètre. Spécifie l’URL que la partie de confiance doit acheminer le navigateur après l’authentification réussie. Il ne doit pas être confondu avec le paramètre de message wreply qui est spécifié par le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A> propriété et qui fournit l’adresse à la partie de confiance à laquelle le service de jeton de sécurité (STS) doit directement sa réponse.  
  
 La méthode effectue les opérations suivantes :  
  
1.  Appelle la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.VerifyProperties%2A> méthode pour s’assurer qu’une demande de connexion valide peut être émise par le module.  
  
2.  Appelle la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> méthode pour créer la demande de connexion à partir des propriétés configurées sur le module.  
  
3.  Appelle le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnRedirectingToIdentityProvider%2A> méthode pour déclencher le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> événement. Vous pouvez annuler la redirection ou modifiez le message de demande de connexion dans le Gestionnaire d’événements pour cet événement.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> est soit <see langword="null" /> soit une chaîne vide.  - ou - <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> est <see langword="null" /> ou est une chaîne vide.  - ou - La propriété <see cref="P:System.Web.HttpContext.Current" /> est <see langword="null" /> ou vide.  - ou - La propriété <see cref="P:System.Web.HttpContext.Response" /> du contexte retourné par <see cref="P:System.Web.HttpContext.Current" /> a la valeur <see langword="null" /> ou est vide.</exception>
      </Docs>
    </Member>
    <Member MemberName="Reply">
      <MemberSignature Language="C#" Value="public string Reply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Reply" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply" />
      <MemberSignature Language="VB.NET" Value="Public Property Reply As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Reply { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Reply : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Reply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur du paramètre wreply à utiliser dans les demandes de connexion WS-Federation ("wsignin1.0").</summary>
        <value>URL qui identifie l'adresse de préférence de l'application de partie de confiance (RP) pour recevoir des réponses du service d'émission de jeton de sécurité (Security Token Service STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le paramètre wreply est facultatif. Si le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Reply%2A> est définie sur `null` ou une chaîne vide, le paramètre wreply n’est pas incluse dans la demande de connexion.  
  
 Le paramètre wreply est utilisé par le STS pour décider de redirection de l’utilisateur d’après l’émission du jeton. Il n’est pas recommandé pour le service STS à l’aveugle utiliser cette adresse pour rediriger l’utilisateur, comme la redirection de ce type a des failles de sécurité. L’adresse de réponse doit être validée par le STS (éventuellement en comparant à un ensemble d’adresses de réponse préconfiguré pour les besoins ou toute autre méthode) pour vous assurer que la réponse est envoyée à compris les emplacement connu et sécurisé.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il est tenté de définir la propriété sur une valeur qui n'est pas un URI absolu valide.</exception>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public string Request { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Request" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Request" />
      <MemberSignature Language="VB.NET" Value="Public Property Request As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Request { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Request : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Request" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur du paramètre wreq à utiliser dans les demandes de connexion WS-Federation ("wsignin1.0").</summary>
        <value>Demande d'émission de jeton exprimée comme un élément <see langword="&lt;wst:RequestSecurityToken&gt;" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le paramètre wreq est facultatif. Si le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Request%2A> est définie sur `null` ou une chaîne vide, le paramètre wreq n’est pas incluse dans la demande de connexion.  
  
 Vous pouvez remplacer ce paramètre sur chaque requête HTTP en ajoutant un gestionnaire pour le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> événement. Cet événement est déclenché juste avant que le module redirige vers le service d’émission de jeton de sécurité (STS) avec un message de demande de connexion WS-Federation. STS est spécifié par le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestPtr">
      <MemberSignature Language="C#" Value="public string RequestPtr { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RequestPtr" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr" />
      <MemberSignature Language="VB.NET" Value="Public Property RequestPtr As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RequestPtr { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestPtr : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur du paramètre wreqptr à utiliser dans les demandes de connexion WS-Federation ("wsignin1.0").</summary>
        <value>URL qui spécifie l'emplacement de la demande d'émission de jeton, exprimée sous forme d'un élément <see langword="&lt;wst:RequestSecurityToken&gt;" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le paramètre wreqptr est facultatif. Si le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RequestPtr%2A> est définie sur `null` ou une chaîne vide, le paramètre wreq n’est pas incluse dans la demande de connexion.  
  
 Vous pouvez remplacer ce paramètre sur chaque requête HTTP en ajoutant un gestionnaire pour le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> événement. Cet événement est déclenché juste avant que le module redirige vers le service d’émission de jeton de sécurité (STS) avec un message de demande de connexion WS-Federation. STS est spécifié par le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Il est tenté de définir la propriété sur une valeur qui n'est pas un URI absolu valide.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequireHttps">
      <MemberSignature Language="C#" Value="public bool RequireHttps { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequireHttps" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />
      <MemberSignature Language="VB.NET" Value="Public Property RequireHttps As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RequireHttps { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RequireHttps : bool with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui spécifie si la communication avec le service STS doit utiliser le protocole HTTPS.</summary>
        <value>
          <see langword="true" /> si la communication avec le service d'émission de jeton de sécurité doit être sécurisée à l'aide du protocole HTTPS ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resource">
      <MemberSignature Language="C#" Value="public string Resource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Resource" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Resource" />
      <MemberSignature Language="VB.NET" Value="Public Property Resource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Resource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resource : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.Resource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur du paramètre wres à utiliser dans les demandes de connexion WS-Federation ("wsignin1.0").</summary>
        <value>URI qui identifie la ressource faisant l'objet d'une tentative d'accès, de la partie de confiance (RP) au service d'émission de jeton de sécurité (STS).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le paramètre wtrealm, qui est défini par le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm%2A> propriété, doit être utilisée à la place.  
  
 Le paramètre wres est facultatif. Si le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Resource%2A> est définie sur `null` ou une chaîne vide, le paramètre wres n’est pas incluse dans la demande de connexion.  
  
 Vous pouvez remplacer ce paramètre sur chaque requête HTTP en ajoutant un gestionnaire pour le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> événement. Cet événement est déclenché juste avant que le module redirige vers le service d’émission de jeton de sécurité (STS) avec un message de demande de connexion WS-Federation. STS est spécifié par le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propriété.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenReceived">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; SecurityTokenReceived;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; SecurityTokenReceived" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived" />
      <MemberSignature Language="VB.NET" Value="Public Event SecurityTokenReceived As EventHandler(Of SecurityTokenReceivedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SecurityTokenReceivedEventArgs ^&gt; ^ SecurityTokenReceived;" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenReceived : EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; " Usage="member this.SecurityTokenReceived : System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenReceivedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'un jeton de sécurité a été reçu d'un service d'émission de jeton de sécurité.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez ajouter un gestionnaire d’événements pour modifier le jeton avant qu’il est validé. Dans l’événement Gestionnaire vous pouvez accéder au jeton de sécurité via le <xref:System.IdentityModel.Services.SecurityTokenReceivedEventArgs.SecurityToken%2A?displayProperty=nameWithType> propriété. Le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenReceived> événement est un événement annulable, vous pouvez définir le <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriété `true` dans le Gestionnaire d’événements pour terminer le traitement du message de réponse de connexion WS-Federation.  
  
 Cet événement est déclenché à partir d’à l’intérieur de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> délégué de gestionnaire d’événements lors du traitement d’un message de réponse de connexion de WS-Federation (« wsignin1.0 ») reçu par le service de jeton de sécurité (STS). Il est déclenché juste après qu’un jeton de sécurité a été désérialisé à partir du paramètre wresult ou wresultptr paramètre dans le message de réponse de connexion, mais avant que le jeton de sécurité est validé.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#6](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IdentityModel.Services.SecurityTokenReceivedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SecurityTokenValidated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; SecurityTokenValidated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; SecurityTokenValidated" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated" />
      <MemberSignature Language="VB.NET" Value="Public Event SecurityTokenValidated As EventHandler(Of SecurityTokenValidatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SecurityTokenValidatedEventArgs ^&gt; ^ SecurityTokenValidated;" />
      <MemberSignature Language="F#" Value="member this.SecurityTokenValidated : EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; " Usage="member this.SecurityTokenValidated : System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SecurityTokenValidatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit après qu'un jeton de sécurité reçu du service d'émission de jeton (STS) de sécurité a été validé mais avant la création du jeton de sécurité de session.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez ajouter un gestionnaire d’événements pour modifier l’entité de sécurité créée lors du traitement d’un message de réponse de connexion WS-Federation à partir d’un service de jeton de sécurité (STS) avant d’être utilisée pour créer le jeton de session. Dans l’événement gestionnaire, vous pouvez accéder à l’entité de sécurité via le <xref:System.IdentityModel.Services.SecurityTokenValidatedEventArgs.ClaimsPrincipal%2A> propriété. Le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SecurityTokenValidated> événement est un événement annulable, vous pouvez définir le <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriété `true` dans le Gestionnaire d’événements pour terminer le traitement du message de réponse de connexion WS-Federation.  
  
 Cet événement est déclenché à partir d’à l’intérieur de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> délégué de gestionnaire d’événements lors du traitement d’un message de réponse de connexion de WS-Federation (« wsignin1.0 ») reçu par le service de jeton de sécurité (STS). Il est déclenché juste après le jeton de sécurité qui a été désérialisé à partir du paramètre wresult ou le paramètre wresultptr dans le message de réponse de connexion a été validé, et avant de la sécurité de session le jeton est créé.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SessionSecurityTokenCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; SessionSecurityTokenCreated" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated" />
      <MemberSignature Language="VB.NET" Value="Public Event SessionSecurityTokenCreated As EventHandler(Of SessionSecurityTokenCreatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SessionSecurityTokenCreatedEventArgs ^&gt; ^ SessionSecurityTokenCreated;" />
      <MemberSignature Language="F#" Value="member this.SessionSecurityTokenCreated : EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; " Usage="member this.SessionSecurityTokenCreated : System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'un jeton de sécurité de session a été créé à partir du jeton de sécurité reçu d'un service d'émission de jeton de sécurité.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez ajouter un gestionnaire d’événements pour modifier le jeton de session avant qu’il est utilisé pour définir le principal thread et est écrit dans le cookie de session. Dans l’événement gestionnaire, vous pouvez accéder au jeton de session via le <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> propriété. Vous pouvez spécifier si un cookie de session doit être écrits en définissant le <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.WriteSessionCookie%2A?displayProperty=nameWithType> propriété.  
  
 Cet événement est déclenché à partir d’à l’intérieur de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> délégué de gestionnaire d’événements lors du traitement d’un message de réponse de connexion de WS-Federation (« wsignin1.0 ») reçu par le service de jeton de sécurité (STS). Il est déclenché juste après le jeton de sécurité qui a été désérialisé à partir du paramètre wresult ou wresultptr paramètre dans le message de réponse de connexion a été validé, et avant les revendications principal est défini sur le <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=nameWithType> (et dans le <xref:System.Web.HttpContext.User%2A> propriété de <xref:System.Web.HttpContext.Current%2A?displayProperty=nameWithType>).  
  
> [!IMPORTANT]
>  Pour fonctionner en mode de référence, les sessions Microsoft recommande fournissant un gestionnaire pour le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated?displayProperty=nameWithType> événement dans le paramètre et le fichier global.asax.cs le <xref:System.IdentityModel.Tokens.SessionSecurityToken.IsReferenceMode%2A?displayProperty=nameWithType> propriété sur le jeton passé dans le <xref:System.IdentityModel.Services.SessionSecurityTokenCreatedEventArgs.SessionToken%2A?displayProperty=nameWithType> propriété. Cela permet de garantir que le jeton de session fonctionne en mode de référence pour chaque demande et est favorisé au paramètre simplement le <xref:System.IdentityModel.Services.SessionAuthenticationModule.IsReferenceMode%2A?displayProperty=nameWithType> propriété sur le Module d’authentification de Session.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetPrincipalAndWriteSessionToken">
      <MemberSignature Language="C#" Value="public void SetPrincipalAndWriteSessionToken (System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool isSession);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPrincipalAndWriteSessionToken(class System.IdentityModel.Tokens.SessionSecurityToken sessionToken, bool isSession) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken(System.IdentityModel.Tokens.SessionSecurityToken,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPrincipalAndWriteSessionToken (sessionToken As SessionSecurityToken, isSession As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPrincipalAndWriteSessionToken(System::IdentityModel::Tokens::SessionSecurityToken ^ sessionToken, bool isSession);" />
      <MemberSignature Language="F#" Value="member this.SetPrincipalAndWriteSessionToken : System.IdentityModel.Tokens.SessionSecurityToken * bool -&gt; unit" Usage="wSFederationAuthenticationModule.SetPrincipalAndWriteSessionToken (sessionToken, isSession)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionToken" Type="System.IdentityModel.Tokens.SessionSecurityToken" />
        <Parameter Name="isSession" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="sessionToken">Jeton de sécurité de session qui a été créé à partir du message de réponse de connexion WS-Federation de STS.</param>
        <param name="isSession">
          <see langword="true" /> pour écrire un cookie qui représente la session incluse dans la réponse ; sinon, <see langword="false" />.</param>
        <summary>Définit l'entité de sécurité de thread et écrit éventuellement le cookie de session.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appelée à partir de la demande de traitement pipeline implémenté dans le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest%2A> délégué de gestionnaire d’événements. Cette méthode effectue les opérations suivantes :  
  
1.  Appelle le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSessionSecurityTokenCreated%2A> méthode pour déclencher le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SessionSecurityTokenCreated> événement. Vous pouvez utiliser cet événement pour modifier le jeton de session avant d’être utilisé pour définir le principal thread et écrite dans le cookie de session et spécifier si le cookie de session doit être écrits.  
  
2.  Appelle le <xref:System.IdentityModel.Services.SessionAuthenticationModule.AuthenticateSessionSecurityToken%2A> méthode sur le module d’authentification de session configurée (<xref:System.IdentityModel.Services.SessionAuthenticationModule>) pour définir le principal thread et éventuellement écrire le cookie de session.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="sessionToken" /> est <see langword="null" />.</exception>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.OnAuthenticateRequest(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SignedIn">
      <MemberSignature Language="C#" Value="public event EventHandler SignedIn;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SignedIn" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedIn" />
      <MemberSignature Language="VB.NET" Value="Public Event SignedIn As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SignedIn;" />
      <MemberSignature Language="F#" Value="member this.SignedIn : EventHandler " Usage="member this.SignedIn : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit après que l'utilisateur ouvre une session.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la demande est validée dans la page de connexion, un contrôle sur la page déclenche cet événement, pas ce module.  
  
   
  
## Examples  
 [!code-csharp[WifWSFAM#3](~/samples/snippets/csharp/VS_Snippets_Misc/wifwsfam/cs/webapplication1/global.asax.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignedOut">
      <MemberSignature Language="C#" Value="public event EventHandler SignedOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SignedOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut" />
      <MemberSignature Language="VB.NET" Value="Public Event SignedOut As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SignedOut;" />
      <MemberSignature Language="F#" Value="member this.SignedOut : EventHandler " Usage="member this.SignedOut : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit juste après la suppression de la session pendant la fermeture de session.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cet événement est déclenché par un appel à la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut%2A> méthode à partir d’à l’intérieur du <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> méthode lors de la déconnexion de la session à la partie de confiance (RP). L’événement n’est pas déclenché lorsque cette opération fédéré déconnexion via le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> (méthode).  
  
 Vous pouvez ajouter un gestionnaire d’événements pour effectuer tout traitement supplémentaire qui est requis par votre application une fois que le cookie de session a été supprimé.  
  
 Cet événement n’est pas garanti d’être appelée pour chaque session. Les cookies peuvent être supprimées du côté client, par exemple, cet événement ne serait jamais être déclenché.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignIn">
      <MemberSignature Language="C#" Value="public virtual void SignIn (string ControlId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignIn(string ControlId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignIn (ControlId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignIn(System::String ^ ControlId);" />
      <MemberSignature Language="F#" Value="abstract member SignIn : string -&gt; unit&#xA;override this.SignIn : string -&gt; unit" Usage="wSFederationAuthenticationModule.SignIn ControlId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ControlId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="ControlId">Le module WSFAM enregistre cette valeur du paramètre wctx dans la demande de connexion WS-Federation. Toutefois, le module ne l'utilise pas lors du traitement des demandes de connexion ou des réponses de connexion. Vous pouvez lui affecter n'importe quelle valeur. Ne doit pas nécessairement pas être unique. Pour plus d'informations, voir la méthode <see cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />.</param>
        <summary>Exécute la connexion à un service d'émission de jeton de sécurité (STS) via le protocole WS-Federation.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’implémentation par défaut appelle la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> méthode pour effectuer l’authentification.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInContext">
      <MemberSignature Language="C#" Value="public string SignInContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignInContext" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext" />
      <MemberSignature Language="VB.NET" Value="Public Property SignInContext As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignInContext { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignInContext : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur de contexte spécifique à l'application à inclure dans le paramètre wctx dans les requêtes de connexion WS-Federation.</summary>
        <value>Valeur de contexte spécifique à l'application à inclure dans le paramètre de wctx pour les requêtes de connexion.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> méthode est appelée, le message de connexion qui est généré contient un paramètre wctx qui a le format suivant : `ru=returnUrl&cx=SignInContext&rm=rememberMeSet&id=uniqueId`. La valeur de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> est stocké dans le `cx` paramètre. <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> peut être appelée directement depuis votre code. Il est également appelé lorsque le WSFAM effectuer les redirections passives et également lorsque soit la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignIn%2A> (méthode) ou le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectToIdentityProvider%2A> méthode est appelée par le code d’application.  
  
 Bien que le WSFAM enregistre la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInContext%2A> valeur dans les messages de demande de connexion, si la valeur est utilisée par votre application pendant le traitement des réponses, vous devez fournir la logique pour l’extraire à partir du paramètre wctx dans le message de réponse de connexion.  
  
 Pour plus d’informations sur le format et le traitement du paramètre wctx, consultez le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.IdentityModel.Services.WSFederationAuthenticationModule.CreateSignInRequest(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SignInError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; SignInError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.ErrorEventArgs&gt; SignInError" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInError" />
      <MemberSignature Language="VB.NET" Value="Public Event SignInError As EventHandler(Of ErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::ErrorEventArgs ^&gt; ^ SignInError;" />
      <MemberSignature Language="F#" Value="member this.SignInError : EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " Usage="member this.SignInError : System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Déclenché lorsqu'une erreur se produit pendant la connexion.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si la demande est validée dans la page de connexion, un contrôle sur la page déclenche cet événement, pas ce module.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningOut">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.SigningOutEventArgs&gt; SigningOut" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut" />
      <MemberSignature Language="VB.NET" Value="Public Event SigningOut As EventHandler(Of SigningOutEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::SigningOutEventArgs ^&gt; ^ SigningOut;" />
      <MemberSignature Language="F#" Value="member this.SigningOut : EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; " Usage="member this.SigningOut : System.EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.SigningOutEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit avant de supprimer la session pendant la fermeture de session.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cet événement est déclenché par un appel à la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut%2A> méthode à partir d’à l’intérieur du <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> méthode lors de la déconnexion de la session à la partie de confiance (RP). L’événement n’est pas déclenché lorsque cette opération fédéré déconnexion via le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> (méthode).  
  
 Vous pouvez ajouter un gestionnaire d’événements pour effectuer un traitement supplémentaire requis par votre application avant que le cookie de session est supprimé. Vous pouvez lire le <xref:System.IdentityModel.Services.SigningOutEventArgs.IsIPInitiated*> propriété dans le Gestionnaire d’événements pour déterminer si le processus de déconnexion est le résultat de la réception d’un message de demande de nettoyage de déconnexion WS-Federation (« wsignoutcleanup1.0 ») à partir d’un service de jeton de sécurité (STS) ou si elle a été initiée dans la partie de confiance.  
  
 Cet événement n’est pas garanti d’être appelée pour chaque session. Les cookies peuvent être supprimées du côté client, par exemple, cet événement ne serait jamais être déclenché.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignInQueryString">
      <MemberSignature Language="C#" Value="public string SignInQueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignInQueryString" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignInQueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property SignInQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignInQueryString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignInQueryString : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignInQueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une chaîne de requête qui contient tous les paramètres supplémentaires à envoyer lors de demandes de connexion WS-Federation ("wsignin1.0").</summary>
        <value>Un fragment d’URL qui contient les paramètres de message supplémentaires dans le format suivant : <c>param1 = value1&amp;param2 = valeur2&amp;paramN = valeurN</c>. La valeur par défaut est une chaîne vide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette propriété pour envoyer des paramètres supplémentaires dans une demande de connexion. Il s’agit des paramètres spécifiques à l’application qui ne sont pas l’un des paramètres qui sont spécifiés par le protocole WS-Federation. Pour supprimer des paramètres supplémentaires à partir de la demande de définie la propriété à une chaîne vide.  
  
 Vous pouvez remplacer ce paramètre sur chaque requête HTTP en ajoutant un gestionnaire pour le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.RedirectingToIdentityProvider> événement. Cet événement est déclenché juste avant que le module redirige vers le service d’émission de jeton de sécurité (STS) avec un message de demande de connexion WS-Federation. STS est spécifié par le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il est tenté de définir la propriété sur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="SignOut">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Ferme la session active.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Supprime la session active.  
  
 Aucun message de demande de déconnexion (« wsignout1.0 ») est envoyé pour le service de jeton de sécurité (STS). À la déconnexion à STS à l’aide du protocole WS-Federation, utilisez le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut();" />
      <MemberSignature Language="F#" Value="abstract member SignOut : unit -&gt; unit&#xA;override this.SignOut : unit -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ferme la session active et demande à être redirigé vers l'URL spécifiée dans la requête HTTP actuelle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Supprime la session en cours et redirige le navigateur vers l’URL spécifiée dans la requête HTTP actuelle.  
  
 Appelle le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.String%29?displayProperty=nameWithType> méthode avec le `redirectUrl` paramètre défini à l’URL de la requête actuelle.  
  
 Aucun message de demande de déconnexion (« wsignout1.0 ») est envoyé pour le service de jeton de sécurité (STS). À la déconnexion à STS à l’aide du protocole WS-Federation, utilisez le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (bool isIPRequest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(bool isIPRequest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (isIPRequest As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(bool isIPRequest);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : bool -&gt; unit&#xA;override this.SignOut : bool -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut isIPRequest" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isIPRequest" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isIPRequest">
          <see langword="true" /> si la requête a été lancée par l’IP-STS via un message de requête de nettoyage de déconnexion WS-Federation ("wsignoutcleanup1.0") ; sinon, <see langword="false" />.</param>
        <summary>Ferme la session active et déclenche les événements appropriés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode effectue le travail réel de la session en cours de suppression et de déclencher les événements de déconnexion appropriés. La méthode effectue les opérations suivantes :  
  
1.  Appelle le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSigningOut%2A> méthode pour déclencher le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SigningOut> événement. Un gestionnaire d’événements peut fournir tout traitement nécessaire avant que la session est supprimée. Le <xref:System.IdentityModel.Services.SigningOutEventArgs.IsIPInitiated%2A?displayProperty=nameWithType> propriété est définie en fonction de la `isIPRequest` paramètre.  
  
2.  Appelle la <xref:System.IdentityModel.Services.SessionAuthenticationModule.DeleteSessionTokenCookie%2A?displayProperty=nameWithType> méthode sur le Gestionnaire d’authentification de session en cours pour supprimer le cookie de session.  
  
     Appelle le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignedOut%2A> méthode pour déclencher le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignedOut> événement.  
  
3.  Si une erreur se produit pendant le traitement de déconnexion, appelle le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError%2A> méthode pour déclencher le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> événement. Un gestionnaire d’événements peut annuler le traitement et éviter qu’une exception ne soit retournée à l’appelant de <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A>  
  
 Vous pouvez appeler la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A?displayProperty=nameWithType> méthode avec la `isIPRequest` jeu de paramètres `false` vous déconnecter d’une session sans effectuer une redirection. La méthode est finalement appelée par tous les autres surchargées <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%2A> méthodes (avec la `isIPRequest` paramètre `false`) pour effectuer le traitement de déconnexion. La méthode est appelée à partir de la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.CanReadSignInResponse%28System.Web.HttpRequestBase%2CSystem.Boolean%29?displayProperty=nameWithType> méthode avec la `isIPRequest` jeu de paramètres `true` pour vous déconnecter de la session lorsqu’il traite un message de nettoyage déconnexion WS-Federation (« wsignoutcleanup1.0 »).  
  
 Aucun message de demande de déconnexion (« wsignout1.0 ») est envoyé pour le service de jeton de sécurité (STS). À la déconnexion à STS à l’aide du protocole WS-Federation, utilisez le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (string redirectUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(string redirectUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (redirectUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(System::String ^ redirectUrl);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : string -&gt; unit&#xA;override this.SignOut : string -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut redirectUrl" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redirectUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="redirectUrl">URL vers laquelle le navigateur doit être redirigé une fois la session supprimée.</param>
        <summary>Ferme la session active et demande à être redirigé vers l'URL spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Supprime la session en cours et redirige le navigateur vers l’URL spécifiée.  
  
 Appelle le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.String%2CSystem.Boolean%29?displayProperty=nameWithType> méthode avec la `redirectUrl` paramètre et avec le `initiateSignoutCleanup` définir `false`.  
  
 Aucun message de demande de déconnexion (« wsignout1.0 ») est envoyé pour le service de jeton de sécurité (STS). À la déconnexion à STS à l’aide du protocole WS-Federation, utilisez le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="redirectUrl" /> n'est pas un URI valide.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public virtual void SignOut (string redirectUrl, bool initiateSignoutCleanup);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SignOut(string redirectUrl, bool initiateSignoutCleanup) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SignOut (redirectUrl As String, initiateSignoutCleanup As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SignOut(System::String ^ redirectUrl, bool initiateSignoutCleanup);" />
      <MemberSignature Language="F#" Value="abstract member SignOut : string * bool -&gt; unit&#xA;override this.SignOut : string * bool -&gt; unit" Usage="wSFederationAuthenticationModule.SignOut (redirectUrl, initiateSignoutCleanup)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="redirectUrl" Type="System.String" />
        <Parameter Name="initiateSignoutCleanup" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="redirectUrl">URL vers laquelle le navigateur doit être redirigé après la déconnexion.</param>
        <param name="initiateSignoutCleanup">Définit toujours <see langword="false" />. La définition de ce paramètre sur <see langword="true" /> n'est pas prise en charge.</param>
        <summary>Ferme la session active et demande à être redirigé vers l'URL spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Supprime la session en cours et redirige le navigateur vers l’URL spécifiée.  
  
 Appelle le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> méthode avec la `initiateSignoutCleanup` jeu de paramètres `false`.  
  
 Aucun message de demande de déconnexion (« wsignout1.0 ») est envoyé pour le service de jeton de sécurité (STS). À la déconnexion à STS à l’aide du protocole WS-Federation, utilisez le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="redirectUrl" /> n'est pas un URI valide.</exception>
        <exception cref="T:System.NotImplementedException">La classe <see cref="T:System.IdentityModel.Services.WSFederationAuthenticationModule" /> lève cette exception si <paramref name="initiateSignoutCleanup" /> a la valeur <see langword="true" />. Ne définit pas la valeur <see langword="true" /> pour ce paramètre.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOutError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.IdentityModel.Services.ErrorEventArgs&gt; SignOutError" />
      <MemberSignature Language="DocId" Value="E:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError" />
      <MemberSignature Language="VB.NET" Value="Public Event SignOutError As EventHandler(Of ErrorEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::IdentityModel::Services::ErrorEventArgs ^&gt; ^ SignOutError;" />
      <MemberSignature Language="F#" Value="member this.SignOutError : EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " Usage="member this.SignOutError : System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.IdentityModel.Services.ErrorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Déclenché lorsqu'une erreur se produit pendant la déconnexion.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cet événement est déclenché par un appel à la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.OnSignOutError%2A> méthode à partir d’à l’intérieur du <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOut%28System.Boolean%29?displayProperty=nameWithType> méthode lors de la déconnexion de la session à la partie de confiance (RP). L’événement n’est pas déclenché lorsque cette opération fédéré déconnexion via le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> (méthode).  
  
 Le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutError> événement est un événement annulable. Vous pouvez définir le <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> propriété dans un gestionnaire d’événements afin d’éviter l’exception qui a provoqué l’erreur ne soit retournée à l’initiateur de la déconnexion.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SignOutQueryString">
      <MemberSignature Language="C#" Value="public string SignOutQueryString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignOutQueryString" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutQueryString" />
      <MemberSignature Language="VB.NET" Value="Public Property SignOutQueryString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignOutQueryString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignOutQueryString : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutQueryString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une chaîne de requête qui contient tous les paramètres supplémentaires à envoyer lors de demandes de déconnexion WS-Federation ("wsignout1.0").</summary>
        <value>Un fragment d’URL qui contient les paramètres de message supplémentaires dans le format suivant : <c>param1 = value1&amp;param2 = valeur2&amp;paramN = valeurN</c>. La valeur par défaut est une chaîne vide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, cette propriété est initialisée à partir de la `signOutQueryString` attribut de la [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) élément dans le fichier de configuration. Il est destiné à contenir tous les paramètres spécifiques à l’application à envoyer dans une demande de déconnexion WS-Federation. Pour supprimer ces paramètres, vous pouvez définir la propriété à une chaîne vide.  
  
 Le WSFAM n’utilise pas cette propriété directement. Toutefois, vous pouvez passer à la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl%2A> méthode pour créer une URL de déconnexion WS-Federation complète qui peut ensuite être utilisée par votre code.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Il est tenté de définir la propriété sur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SignOutReply">
      <MemberSignature Language="C#" Value="public string SignOutReply { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SignOutReply" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply" />
      <MemberSignature Language="VB.NET" Value="Public Property SignOutReply As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SignOutReply { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SignOutReply : string with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur du paramètre wreply à utiliser dans les demandes de déconnexion WS-Federation ("wsignout1.0").</summary>
        <value>URL vers laquelle le client doit être redirigé par le service d'émission de jeton de sécurité (STS) suite à la déconnexion via le protocole WS-Federation.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, cette propriété est initialisée à partir de la `signOutReply` attribut de la [ &lt;wsFederation&gt; ](~/docs/framework/configure-apps/file-schema/windows-identity-foundation/wsfederation.md) élément dans le fichier de configuration. Elle est destinée à représenter le paramètre wreply dans une demande de déconnexion WS-Federation.  
  
 Le paramètre wreply est facultatif. Si le <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.SignOutReply%2A> est définie sur `null` ou une chaîne vide, le paramètre wreply n’est pas incluse dans la demande de déconnexion.  
  
 Le WSFAM n’utilise pas cette propriété directement. Toutefois, vous pouvez passer à la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.FederatedSignOut%2A> méthode lors de l’exécution de déconnexion WS-Federation à partir de votre code ou que vous pouvez passer à la <xref:System.IdentityModel.Services.WSFederationAuthenticationModule.GetFederationPassiveSignOutUrl%2A> méthode pour créer une URL de déconnexion WS-Federation complète.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyProperties">
      <MemberSignature Language="C#" Value="public void VerifyProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Services.WSFederationAuthenticationModule.VerifyProperties" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyProperties ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyProperties();" />
      <MemberSignature Language="F#" Value="member this.VerifyProperties : unit -&gt; unit" Usage="wSFederationAuthenticationModule.VerifyProperties " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Vérifie que les propriétés <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> et <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> ne sont pas vides, et, que, si la propriété <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> est <see langword="true" />, que les URI spécifiés pour <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> et <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> sont conformes Https..</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> est soit <see langword="null" /> soit une chaîne vide.  - ou - <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> est <see langword="null" /> ou est une chaîne vide.  - ou - <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> est <see langword="true" /> et <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Issuer" /> n’est pas conforme à HTTPS.  - ou - <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.RequireHttps" /> est <see langword="true" /> et <see cref="P:System.IdentityModel.Services.WSFederationAuthenticationModule.Realm" /> n’est pas conforme à HTTPS.</exception>
      </Docs>
    </Member>
    <Member MemberName="XmlDictionaryReaderQuotas">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDictionaryReaderQuotas XmlDictionaryReaderQuotas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDictionaryReaderQuotas XmlDictionaryReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Services.WSFederationAuthenticationModule.XmlDictionaryReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlDictionaryReaderQuotas As XmlDictionaryReaderQuotas" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDictionaryReaderQuotas ^ XmlDictionaryReaderQuotas { System::Xml::XmlDictionaryReaderQuotas ^ get(); void set(System::Xml::XmlDictionaryReaderQuotas ^ value); };" />
      <MemberSignature Language="F#" Value="member this.XmlDictionaryReaderQuotas : System.Xml.XmlDictionaryReaderQuotas with get, set" Usage="System.IdentityModel.Services.WSFederationAuthenticationModule.XmlDictionaryReaderQuotas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDictionaryReaderQuotas</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'objet <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> à utiliser lors de la désérialisation des messages de réponse de connexion WS-Federation pour obtenir le jeton émis par le service de token de sécurité (STS).</summary>
        <value>Objet <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> à utiliser lors de la désérialisation des messages de réponse de connexion WS-Federation pour obtenir le jeton émis par le service de token de sécurité (STS).</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Il est tenté de définir la propriété sur <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>