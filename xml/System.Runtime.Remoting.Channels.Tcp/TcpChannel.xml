<Type Name="TcpChannel" FullName="System.Runtime.Remoting.Channels.Tcp.TcpChannel">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e287a6f8652016561a1f28cacae4a74c7c72fc5c" /><Meta Name="ms.sourcegitcommit" Value="42a3c35677e9d87eeb503607ae50c9d39827d414" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/17/2018" /><Meta Name="ms.locfileid" Value="53470132" /></Metadata><TypeSignature Language="C#" Value="public class TcpChannel : System.Runtime.Remoting.Channels.IChannelReceiver, System.Runtime.Remoting.Channels.IChannelSender, System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpChannel extends System.Object implements class System.Runtime.Remoting.Channels.IChannel, class System.Runtime.Remoting.Channels.IChannelReceiver, class System.Runtime.Remoting.Channels.IChannelSender, class System.Runtime.Remoting.Channels.ISecurableChannel" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpChannel&#xA;Implements IChannelReceiver, IChannelSender, ISecurableChannel" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpChannel : System::Runtime::Remoting::Channels::IChannelReceiver, System::Runtime::Remoting::Channels::IChannelSender, System::Runtime::Remoting::Channels::ISecurableChannel" />
  <TypeSignature Language="F#" Value="type TcpChannel = class&#xA;    interface IChannelReceiver&#xA;    interface IChannel&#xA;    interface IChannelSender&#xA;    interface ISecurableChannel" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Remoting</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannel</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelReceiver</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.IChannelSender</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Remoting.Channels.ISecurableChannel</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="20ecb-101">Fournit une implémentation de canal qui utilise le protocole TCP pour transmettre des messages.</span><span class="sxs-lookup"><span data-stu-id="20ecb-101">Provides a channel implementation that uses the TCP protocol to transmit messages.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-class-note](~/includes/untrusted-data-class-note.md)]

 <span data-ttu-id="20ecb-102">Les canaux transportent des messages au-delà des limites de communication à distance (par exemple, entre ordinateurs dans des domaines d’application).</span><span class="sxs-lookup"><span data-stu-id="20ecb-102">Channels transport messages across remoting boundaries (for example, between computers on application domains).</span></span> <span data-ttu-id="20ecb-103">Le <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> classe est une classe pratique combinant les fonctionnalités de la <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> classe et la <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> classe.</span><span class="sxs-lookup"><span data-stu-id="20ecb-103">The <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> class is a convenience class combining the functionality of the <xref:System.Runtime.Remoting.Channels.Tcp.TcpClientChannel> class and the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> class.</span></span>  
  
 <span data-ttu-id="20ecb-104">Les canaux sont utilisés par l’infrastructure .NET Framework remoting pour transporter des appels distants.</span><span class="sxs-lookup"><span data-stu-id="20ecb-104">Channels are used by the .NET Framework remoting infrastructure to transport remote calls.</span></span> <span data-ttu-id="20ecb-105">Lorsqu’un client effectue un appel à un objet distant, l’appel est sérialisé dans un message envoyé par un canal client et reçu par un canal serveur.</span><span class="sxs-lookup"><span data-stu-id="20ecb-105">When a client makes a call to a remote object, the call is serialized into a message that is sent by a client channel and received by a server channel.</span></span> <span data-ttu-id="20ecb-106">Il est ensuite désérialisé et traité.</span><span class="sxs-lookup"><span data-stu-id="20ecb-106">It is then deserialized and processed.</span></span> <span data-ttu-id="20ecb-107">Toutes les valeurs retournées sont transmises par le canal serveur et reçus par le canal client.</span><span class="sxs-lookup"><span data-stu-id="20ecb-107">Any returned values are transmitted by the server channel and received by the client channel.</span></span>  
  
 <span data-ttu-id="20ecb-108">Pour effectuer un traitement supplémentaire des messages, vous pouvez spécifier les implémentations de la <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider> et <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> via lequel tous les messages traités par le <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> sont passés.</span><span class="sxs-lookup"><span data-stu-id="20ecb-108">To perform additional processing of messages, you can specify implementations of the <xref:System.Runtime.Remoting.Channels.IClientChannelSinkProvider> and <xref:System.Runtime.Remoting.Channels.IServerChannelSinkProvider> through which all messages processed by the <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> are passed.</span></span>  
  
 <span data-ttu-id="20ecb-109">A <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> objet associé à des propriétés de configuration qui peuvent être définies au moment de l’exécution, soit dans un fichier de configuration (en appelant la méthode statique <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> méthode) ou par programme (en passant un <xref:System.Collections.IDictionary> collection à la <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.%23ctor%2A> constructeur).</span><span class="sxs-lookup"><span data-stu-id="20ecb-109">A <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> object has associated configuration properties that can be set at run time either in a configuration file (by invoking the static <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%2A?displayProperty=nameWithType> method) or programmatically (by passing a <xref:System.Collections.IDictionary> collection to the <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.%23ctor%2A> constructor).</span></span> <span data-ttu-id="20ecb-110">Pour plus d’informations sur les propriétés de configuration de canal, consultez [Channel and Formatter Configuration Properties](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="20ecb-110">For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="20ecb-111">Si l’ordinateur du serveur est en cours d’exécution Windows 95/98/Me, le serveur <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> ne peut pas être spécifié comme sécurisé.</span><span class="sxs-lookup"><span data-stu-id="20ecb-111">If the server computer is running Windows 95/98/Me, the server <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> cannot be specified as secure.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20ecb-112">L’exemple de code suivant montre comment utiliser un <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> pour configurer un serveur de communication à distance et son client.</span><span class="sxs-lookup"><span data-stu-id="20ecb-112">The following code example shows how to use a <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> to set up a remoting server and its client.</span></span> <span data-ttu-id="20ecb-113">L’exemple contient trois parties, un serveur, un client et un objet distant utilisé par le serveur et le client.</span><span class="sxs-lookup"><span data-stu-id="20ecb-113">The example contains three parts, a server, a client, and a remote object used by the server and the client.</span></span>  
  
 <span data-ttu-id="20ecb-114">L’exemple de code suivant montre un serveur :</span><span class="sxs-lookup"><span data-stu-id="20ecb-114">The following code example shows a server:</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/server.cpp#1)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/server.cs#1)]  
  
 <span data-ttu-id="20ecb-115">L’exemple de code suivant montre un client pour ce serveur :</span><span class="sxs-lookup"><span data-stu-id="20ecb-115">The following code example shows a client for this server:</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#10](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/client.cpp#10)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#10](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/client.cs#10)]  
  
 <span data-ttu-id="20ecb-116">L’exemple de code suivant montre l’objet distant utilisé par le serveur et le client :</span><span class="sxs-lookup"><span data-stu-id="20ecb-116">The following code example shows the remote object used by the server and the client:</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#20](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/common.cpp#20)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#20](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/common.cs#20)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="20ecb-117">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />.</span><span class="sxs-lookup"><span data-stu-id="20ecb-117">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpChannel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpChannel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="20ecb-118">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> en activant uniquement un canal client et non un canal serveur.</span><span class="sxs-lookup"><span data-stu-id="20ecb-118">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> class, activating only a client channel, and not a server channel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20ecb-119">Le constructeur par défaut initialise tous les champs à leurs valeurs par défaut.</span><span class="sxs-lookup"><span data-stu-id="20ecb-119">The default constructor initializes all fields to their default values.</span></span> <span data-ttu-id="20ecb-120">Si le constructeur par défaut est utilisé, le canal fonctionne uniquement comme un canal client et n’écoute pas sur les ports.</span><span class="sxs-lookup"><span data-stu-id="20ecb-120">If the default constructor is used, the channel functions only as a client channel, and does not listen on any ports.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20ecb-121">L’exemple de code suivant montre comment utiliser ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="20ecb-121">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#11](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/client.cpp#11)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#11](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/client.cs#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpChannel (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpChannel(int port);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Tcp.TcpChannel : int -&gt; System.Runtime.Remoting.Channels.Tcp.TcpChannel" Usage="new System.Runtime.Remoting.Channels.Tcp.TcpChannel port" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port"><span data-ttu-id="20ecb-122">Port sur lequel le canal serveur est à l'écoute.</span><span class="sxs-lookup"><span data-stu-id="20ecb-122">The port on which the server channel listens.</span></span></param>
        <summary><span data-ttu-id="20ecb-123">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> avec un canal serveur qui écoute sur le port spécifié.</span><span class="sxs-lookup"><span data-stu-id="20ecb-123">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> class with a server channel that listens on the specified port.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20ecb-124">Pour demander que le système de communication à distance choisit un port ouvert sur votre nom, spécifiez le port 0 (zéro).</span><span class="sxs-lookup"><span data-stu-id="20ecb-124">To request that the remoting system choose an open port on your behalf, specify port 0 (zero).</span></span> <span data-ttu-id="20ecb-125">Cela créera un <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> instance pour écouter les demandes sur le port affecté dynamiquement.</span><span class="sxs-lookup"><span data-stu-id="20ecb-125">This will create a <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> instance to listen for requests on the dynamically assigned port.</span></span> <span data-ttu-id="20ecb-126">Cela est généralement effectué sur le client pour vous assurer qu’un <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> écoute les méthodes de rappel.</span><span class="sxs-lookup"><span data-stu-id="20ecb-126">This is typically done on the client to make sure that a <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel> is listening for callback methods.</span></span>  
  
 <span data-ttu-id="20ecb-127">Si 0 est passé au constructeur le <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> est instancié pour utiliser un port disponible.</span><span class="sxs-lookup"><span data-stu-id="20ecb-127">If 0 is passed to the constructor the <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> is instantiated to use a free port.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20ecb-128">L’exemple de code suivant illustre l’utilisation de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="20ecb-128">The following code example demonstrates using this method.</span></span> <span data-ttu-id="20ecb-129">Pour demander qu’un port disponible soit assigné dynamiquement, affectez la `port` paramètre à zéro.</span><span class="sxs-lookup"><span data-stu-id="20ecb-129">To request that an available port be dynamically assigned, set the `port` parameter to zero.</span></span>  
  
 [!code-cpp[RemotingConfiguration.ServerActivation#2](~/samples/snippets/cpp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation/CPP/server.cpp#2)]
 [!code-csharp[RemotingConfiguration.ServerActivation#2](~/samples/snippets/csharp/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation/CS/server.cs#2)]
 [!code-vb[RemotingConfiguration.ServerActivation#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/RemotingConfiguration.ServerActivation/VB/server.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpChannel (System.Collections.IDictionary properties, System.Runtime.Remoting.Channels.IClientChannelSinkProvider clientSinkProvider, System.Runtime.Remoting.Channels.IServerChannelSinkProvider serverSinkProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.IDictionary properties, class System.Runtime.Remoting.Channels.IClientChannelSinkProvider clientSinkProvider, class System.Runtime.Remoting.Channels.IServerChannelSinkProvider serverSinkProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.#ctor(System.Collections.IDictionary,System.Runtime.Remoting.Channels.IClientChannelSinkProvider,System.Runtime.Remoting.Channels.IServerChannelSinkProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (properties As IDictionary, clientSinkProvider As IClientChannelSinkProvider, serverSinkProvider As IServerChannelSinkProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpChannel(System::Collections::IDictionary ^ properties, System::Runtime::Remoting::Channels::IClientChannelSinkProvider ^ clientSinkProvider, System::Runtime::Remoting::Channels::IServerChannelSinkProvider ^ serverSinkProvider);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Remoting.Channels.Tcp.TcpChannel : System.Collections.IDictionary * System.Runtime.Remoting.Channels.IClientChannelSinkProvider * System.Runtime.Remoting.Channels.IServerChannelSinkProvider -&gt; System.Runtime.Remoting.Channels.Tcp.TcpChannel" Usage="new System.Runtime.Remoting.Channels.Tcp.TcpChannel (properties, clientSinkProvider, serverSinkProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
        <Parameter Name="clientSinkProvider" Type="System.Runtime.Remoting.Channels.IClientChannelSinkProvider" />
        <Parameter Name="serverSinkProvider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
      </Parameters>
      <Docs>
        <param name="properties"><span data-ttu-id="20ecb-130">Collection <see cref="T:System.Collections.IDictionary" /> qui spécifie les valeurs des propriétés de configuration devant être utilisées par les canaux client et serveur.</span><span class="sxs-lookup"><span data-stu-id="20ecb-130">A <see cref="T:System.Collections.IDictionary" /> collection that specifies values for configuration properties to be used by the client and server channels.</span></span></param>
        <param name="clientSinkProvider"><span data-ttu-id="20ecb-131">Implémentation de <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> devant être utilisée par le canal client.</span><span class="sxs-lookup"><span data-stu-id="20ecb-131">The <see cref="T:System.Runtime.Remoting.Channels.IClientChannelSinkProvider" /> implementation to be used by the client channel.</span></span></param>
        <param name="serverSinkProvider"><span data-ttu-id="20ecb-132">Implémentation de <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> devant être utilisée par le canal serveur.</span><span class="sxs-lookup"><span data-stu-id="20ecb-132">The <see cref="T:System.Runtime.Remoting.Channels.IServerChannelSinkProvider" /> implementation to be used by the server channel.</span></span></param>
        <summary><span data-ttu-id="20ecb-133">Initialise une nouvelle instance de la classe <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> avec les propriétés de configuration et les récepteurs spécifiés.</span><span class="sxs-lookup"><span data-stu-id="20ecb-133">Initializes a new instance of the <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> class with the specified configuration properties and sinks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20ecb-134">Pour plus d’informations sur les propriétés de configuration de canal, consultez [Channel and Formatter Configuration Properties](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="20ecb-134">For more information about channel configuration properties, see [Channel and Formatter Configuration Properties](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="20ecb-135">Si l’ordinateur du serveur est en cours d’exécution Windows 95/98/Me, le serveur <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> ne peut pas être spécifié comme sécurisé.</span><span class="sxs-lookup"><span data-stu-id="20ecb-135">If the server computer is running Windows 95/98/Me, the server <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel> cannot be specified as secure.</span></span>  
  
 <span data-ttu-id="20ecb-136">Les récepteurs de canal fournissent un point de plug-in qui permet d’accéder aux messages sous-jacents transitant par le canal, ainsi que le flux utilisé par le mécanisme de transport pour envoyer des messages à un objet distant.</span><span class="sxs-lookup"><span data-stu-id="20ecb-136">Channel sinks provide a plug-in point that allows access to the underlying messages flowing through the channel as well as the stream used by the transport mechanism to send messages to a remote object.</span></span> <span data-ttu-id="20ecb-137">Les récepteurs de canal sont également responsables de transport des messages entre le client et le serveur.</span><span class="sxs-lookup"><span data-stu-id="20ecb-137">Channel sinks are also responsible for transporting messages between the client and the server.</span></span> <span data-ttu-id="20ecb-138">Les récepteurs de canal sont liés dans une chaîne, et tous les messages sont transférés par cette chaîne de récepteurs de canal avant que le message est sérialisé puis transporté.</span><span class="sxs-lookup"><span data-stu-id="20ecb-138">Channel sinks are linked together in a chain, and all channel messages flow through this chain of sinks before the message is finally serialized and transported.</span></span> <span data-ttu-id="20ecb-139">Si vous ne nécessitent pas de fonctionnalité de récepteur, définissez le `clientSinkProvider` et `serverSinkProvider` paramètres `null`.</span><span class="sxs-lookup"><span data-stu-id="20ecb-139">If you do not require sink functionality, set the `clientSinkProvider` and `serverSinkProvider` parameters to `null`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20ecb-140">L’exemple de code suivant montre comment utiliser ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="20ecb-140">The following code example shows how to use this constructor.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel2#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel2/CPP/server.cpp#1)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel2#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel2/CS/server.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="20ecb-141">La mise en forme d'une propriété de canal fourni est incorrecte.</span><span class="sxs-lookup"><span data-stu-id="20ecb-141">A provided channel property was improperly formatted.</span></span></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/kw7c6kwc(v=vs.100)"><span data-ttu-id="20ecb-142">Propriétés de configuration du canal et du formateur</span><span class="sxs-lookup"><span data-stu-id="20ecb-142">Channel and Formatter Configuration Properties</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ChannelData">
      <MemberSignature Language="C#" Value="public object ChannelData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ChannelData" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelData As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ChannelData { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelData : obj" Usage="System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelData" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IChannelReceiver.ChannelData</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20ecb-143">Obtient les données spécifiques de canal.</span><span class="sxs-lookup"><span data-stu-id="20ecb-143">Gets the channel-specific data.</span></span></summary>
        <value><span data-ttu-id="20ecb-144">Instance de <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> contenant les données spécifiques de canal.</span><span class="sxs-lookup"><span data-stu-id="20ecb-144">A <see cref="T:System.Runtime.Remoting.Channels.ChannelDataStore" /> instance that contains channel-specific data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20ecb-145">Bien qu’il est retourné comme une instance de <xref:System.Object?displayProperty=nameWithType>, la valeur de cette propriété peut être castée en une instance de <xref:System.Runtime.Remoting.Channels.ChannelDataStore> décrivant le canal auquel le <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> est à l’écoute de l’objet.</span><span class="sxs-lookup"><span data-stu-id="20ecb-145">Although returned as an instance of <xref:System.Object?displayProperty=nameWithType>, the value of this property can be cast to an instance of <xref:System.Runtime.Remoting.Channels.ChannelDataStore> describing the channel to which the <xref:System.Runtime.Remoting.Channels.Http.HttpServerChannel> object listens.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20ecb-146">L’exemple de code suivant montre comment utiliser cette propriété.</span><span class="sxs-lookup"><span data-stu-id="20ecb-146">The following code example shows how to use this property.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/server.cpp#5)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/server.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelName">
      <MemberSignature Language="C#" Value="public string ChannelName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ChannelName" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ChannelName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelName : string" Usage="System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IChannel.ChannelName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20ecb-147">Obtient le nom du canal en cours.</span><span class="sxs-lookup"><span data-stu-id="20ecb-147">Gets the name of the current channel.</span></span></summary>
        <value><span data-ttu-id="20ecb-148"><see cref="T:System.String" /> contenant le nom du canal.</span><span class="sxs-lookup"><span data-stu-id="20ecb-148">A <see cref="T:System.String" /> that contains the name of the channel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20ecb-149">Chaque canal enregistré a un nom unique.</span><span class="sxs-lookup"><span data-stu-id="20ecb-149">Every registered channel has a unique name.</span></span> <span data-ttu-id="20ecb-150">Le nom est utilisé pour récupérer un canal spécifique lors de l’appel <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>.</span><span class="sxs-lookup"><span data-stu-id="20ecb-150">The name is used to retrieve a specific channel when calling <xref:System.Runtime.Remoting.Channels.ChannelServices.GetChannel%2A>.</span></span> <span data-ttu-id="20ecb-151">Pour définir le <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName%2A> propriété, affectez la valeur pour le « nom » indexée propriété dans le dictionnaire passé à la <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.%23ctor%28System.Collections.IDictionary%2CSystem.Runtime.Remoting.Channels.IClientChannelSinkProvider%2CSystem.Runtime.Remoting.Channels.IServerChannelSinkProvider%29> constructeur.</span><span class="sxs-lookup"><span data-stu-id="20ecb-151">To set the <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelName%2A> property, assign the value to the "name" indexed property in the dictionary passed to the <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.%23ctor%28System.Collections.IDictionary%2CSystem.Runtime.Remoting.Channels.IClientChannelSinkProvider%2CSystem.Runtime.Remoting.Channels.IServerChannelSinkProvider%29> constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20ecb-152">L’exemple de code suivant montre comment utiliser cette propriété.</span><span class="sxs-lookup"><span data-stu-id="20ecb-152">The following code example shows how to use this property.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/server.cpp#3)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/server.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelPriority">
      <MemberSignature Language="C#" Value="public int ChannelPriority { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ChannelPriority" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelPriority" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelPriority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ChannelPriority { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ChannelPriority : int" Usage="System.Runtime.Remoting.Channels.Tcp.TcpChannel.ChannelPriority" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.IChannel.ChannelPriority</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20ecb-153">Obtient la priorité du canal actuel.</span><span class="sxs-lookup"><span data-stu-id="20ecb-153">Gets the priority of the current channel.</span></span></summary>
        <value><span data-ttu-id="20ecb-154">Entier qui représente la priorité assignée au canal.</span><span class="sxs-lookup"><span data-stu-id="20ecb-154">An integer that represents the priority assigned to the channel.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="20ecb-155">L’exemple de code suivant montre comment utiliser cette propriété.</span><span class="sxs-lookup"><span data-stu-id="20ecb-155">The following code example shows how to use this property.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/server.cpp#4)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/server.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateMessageSink">
      <MemberSignature Language="C#" Value="public System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink (string url, object remoteChannelData, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Remoting.Messaging.IMessageSink CreateMessageSink(string url, object remoteChannelData, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink(System.String,System.Object,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateMessageSink (url As String, remoteChannelData As Object, ByRef objectURI As String) As IMessageSink" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Runtime::Remoting::Messaging::IMessageSink ^ CreateMessageSink(System::String ^ url, System::Object ^ remoteChannelData, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberSignature Language="F#" Value="abstract member CreateMessageSink : string * obj *  -&gt; System.Runtime.Remoting.Messaging.IMessageSink&#xA;override this.CreateMessageSink : string * obj *  -&gt; System.Runtime.Remoting.Messaging.IMessageSink" Usage="tcpChannel.CreateMessageSink (url, remoteChannelData, objectURI)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannelSender.CreateMessageSink(System.String,System.Object,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Remoting.Messaging.IMessageSink</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="remoteChannelData" Type="System.Object" />
        <Parameter Name="objectURI" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="20ecb-156">URL à laquelle le nouveau récepteur doit délivrer les messages.</span><span class="sxs-lookup"><span data-stu-id="20ecb-156">The URL to which the new sink should deliver messages.</span></span> <span data-ttu-id="20ecb-157">Peut être <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="20ecb-157">Can be <see langword="null" />.</span></span></param>
        <param name="remoteChannelData"><span data-ttu-id="20ecb-158">Objet de données de canal de l'hôte distant auquel le nouveau récepteur doit délivrer les messages.</span><span class="sxs-lookup"><span data-stu-id="20ecb-158">The channel data object of the remote host to which the new sink should deliver messages.</span></span> <span data-ttu-id="20ecb-159">Peut être <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="20ecb-159">Can be <see langword="null" />.</span></span></param>
        <param name="objectURI"><span data-ttu-id="20ecb-160">Cette méthode retourne un URI du nouveau récepteur de messages de canal qui remet des messages à l'URL ou à l'objet de données de canal spécifié.</span><span class="sxs-lookup"><span data-stu-id="20ecb-160">When this method returns, contains a URI of the new channel message sink that delivers messages to the specified URL or channel data object.</span></span> <span data-ttu-id="20ecb-161">Ce paramètre est passé sans être initialisé.</span><span class="sxs-lookup"><span data-stu-id="20ecb-161">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="20ecb-162">Retourne un récepteur de messages de canal qui remet les messages à l'URL ou à l'objet de données de canal spécifié.</span><span class="sxs-lookup"><span data-stu-id="20ecb-162">Returns a channel message sink that delivers messages to the specified URL or channel data object.</span></span></summary>
        <returns><span data-ttu-id="20ecb-163">Récepteur de messages de canal qui remet les messages à l'URL ou à l'objet de données de canal spécifié.</span><span class="sxs-lookup"><span data-stu-id="20ecb-163">A channel message sink that delivers messages to the specified URL or channel data object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20ecb-164">Le <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink%2A> méthode retourne un récepteur de messages de canal qui remet des messages à l’objet de données URL ou de canal spécifié.</span><span class="sxs-lookup"><span data-stu-id="20ecb-164">The <xref:System.Runtime.Remoting.Channels.Tcp.TcpChannel.CreateMessageSink%2A> method returns a channel message sink that delivers messages to either the specified URL or channel data object.</span></span> <span data-ttu-id="20ecb-165">Si le `uri` paramètre est `null`, `remoteChannelData` est utilisé en tant que cible pour le récepteur.</span><span class="sxs-lookup"><span data-stu-id="20ecb-165">If the `uri` parameter is `null`, `remoteChannelData` is used as a target for the sink.</span></span> <span data-ttu-id="20ecb-166">Soit le `url` ou `remoteChannelData` paramètres peuvent être `null`, mais pas les deux.</span><span class="sxs-lookup"><span data-stu-id="20ecb-166">Either the `url` or `remoteChannelData` parameters can be `null`, but not both.</span></span>  
  
 <span data-ttu-id="20ecb-167">Les récepteurs de canal fournissent un point de plug-in qui permet d’accéder aux messages sous-jacents transitant par le canal, ainsi que le flux utilisé par le mécanisme de transport pour envoyer des messages à un objet distant.</span><span class="sxs-lookup"><span data-stu-id="20ecb-167">Channel sinks provide a plug-in point that allows access to the underlying messages flowing through the channel as well as the stream used by the transport mechanism to send messages to a remote object.</span></span> <span data-ttu-id="20ecb-168">Les récepteurs de canal sont liés dans une chaîne de `ChannelSinkProviders` et tous les messages sont transférés par cette chaîne de récepteurs de canal avant que le message est sérialisé puis transporté.</span><span class="sxs-lookup"><span data-stu-id="20ecb-168">Channel sinks are linked together in a chain of `ChannelSinkProviders` and all channel messages flow through this chain of sinks before the message is finally serialized and transported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20ecb-169">L'exemple de code suivant montre comment utiliser cette méthode.</span><span class="sxs-lookup"><span data-stu-id="20ecb-169">The following code example shows how to use this method.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#12](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/client.cpp#12)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#12](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/client.cs#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetUrlsForUri">
      <MemberSignature Language="C#" Value="public string[] GetUrlsForUri (string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUrlsForUri(string objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.GetUrlsForUri(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUrlsForUri (objectURI As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::String ^&gt; ^ GetUrlsForUri(System::String ^ objectURI);" />
      <MemberSignature Language="F#" Value="abstract member GetUrlsForUri : string -&gt; string[]&#xA;override this.GetUrlsForUri : string -&gt; string[]" Usage="tcpChannel.GetUrlsForUri objectURI" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannelReceiver.GetUrlsForUri(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectURI" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="objectURI"><span data-ttu-id="20ecb-170">URI de l'objet pour lequel des URL sont requises.</span><span class="sxs-lookup"><span data-stu-id="20ecb-170">The URI of the object for which URLs are required.</span></span></param>
        <summary><span data-ttu-id="20ecb-171">Retourne un tableau de toutes les URL d'un objet doté de l'URI spécifié qui sont hébergées sur <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> en cours.</span><span class="sxs-lookup"><span data-stu-id="20ecb-171">Returns an array of all the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />.</span></span></summary>
        <returns><span data-ttu-id="20ecb-172">Tableau de toutes les URL d'un objet doté de l'URI spécifié qui sont hébergées sur <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" /> en cours.</span><span class="sxs-lookup"><span data-stu-id="20ecb-172">An array of the URLs for an object with the specified URI, hosted on the current <see cref="T:System.Runtime.Remoting.Channels.Tcp.TcpChannel" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20ecb-173">Cette méthode est utilisée par <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="20ecb-173">This method is used by <xref:System.Runtime.Remoting.Channels.ChannelServices.GetUrlsForObject%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20ecb-174">L'exemple de code suivant montre comment utiliser cette méthode.</span><span class="sxs-lookup"><span data-stu-id="20ecb-174">The following code example shows how to use this method.</span></span>  
  
 [!code-cpp[TcpChannel.GetUrlsForUri#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpChannel.GetUrlsForUri/CPP/class1.cpp#1)]
 [!code-csharp[TcpChannel.GetUrlsForUri#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpChannel.GetUrlsForUri/CS/class1.cs#1)]
 [!code-vb[TcpChannel.GetUrlsForUri#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpChannel.GetUrlsForUri/VB/class1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSecured">
      <MemberSignature Language="C#" Value="public bool IsSecured { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSecured" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Remoting.Channels.Tcp.TcpChannel.IsSecured" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSecured As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSecured { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsSecured : bool with get, set" Usage="System.Runtime.Remoting.Channels.Tcp.TcpChannel.IsSecured" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.Remoting.Channels.ISecurableChannel.IsSecured</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="20ecb-175">Obtient ou définit une valeur Boolean qui indique si le canal actuel est sécurisé.</span><span class="sxs-lookup"><span data-stu-id="20ecb-175">Gets or sets a Boolean value that indicates whether the current channel is secure.</span></span></summary>
        <value><span data-ttu-id="20ecb-176">Valeur booléenne qui indique si l'instance actuelle est sécurisée.</span><span class="sxs-lookup"><span data-stu-id="20ecb-176">A Boolean value that indicates whether the current instance is secure.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20ecb-177">Cette propriété ne doive pas être définie explicitement, car elle est suffisante pour définir le paramètre ensureSecurity de <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%28System.String%2CSystem.Boolean%29>.</span><span class="sxs-lookup"><span data-stu-id="20ecb-177">This property need not be set explicitly, as it is sufficient to set the ensureSecurity parameter of <xref:System.Runtime.Remoting.RemotingConfiguration.Configure%28System.String%2CSystem.Boolean%29>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public string Parse (string url, out string objectURI);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string Parse(string url, [out] string&amp; objectURI) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.Parse(System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Parse (url As String, ByRef objectURI As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ Parse(System::String ^ url, [Runtime::InteropServices::Out] System::String ^ % objectURI);" />
      <MemberSignature Language="F#" Value="abstract member Parse : string *  -&gt; string&#xA;override this.Parse : string *  -&gt; string" Usage="tcpChannel.Parse (url, objectURI)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannel.Parse(System.String,System.String@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="objectURI" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="url"><span data-ttu-id="20ecb-178">URL à partir de laquelle est extrait l'URI de l'objet connu distant.</span><span class="sxs-lookup"><span data-stu-id="20ecb-178">The URL from which to extract the URI of the remote well-known object.</span></span></param>
        <param name="objectURI"><span data-ttu-id="20ecb-179">Cette méthode retourne un <see cref="T:System.String" /> contenant l'URI de l'objet connu distant.</span><span class="sxs-lookup"><span data-stu-id="20ecb-179">When this method returns, contains a <see cref="T:System.String" /> that holds the URI of the remote well-known object.</span></span> <span data-ttu-id="20ecb-180">Ce paramètre est passé sans être initialisé.</span><span class="sxs-lookup"><span data-stu-id="20ecb-180">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="20ecb-181">Extrait l'URI du canal et de l'objet connu distant à partir de l'URL spécifiée.</span><span class="sxs-lookup"><span data-stu-id="20ecb-181">Extracts the channel URI and the remote well-known object URI from the specified URL.</span></span></summary>
        <returns><span data-ttu-id="20ecb-182">URI du canal en cours.</span><span class="sxs-lookup"><span data-stu-id="20ecb-182">The URI of the current channel.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20ecb-183">Un URI d’un objet est une valeur qui identifie de façon unique une instance d’objet spécifique.</span><span class="sxs-lookup"><span data-stu-id="20ecb-183">A URI of an object is a value that uniquely identifies a specific object instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20ecb-184">L'exemple de code suivant montre comment utiliser cette méthode.</span><span class="sxs-lookup"><span data-stu-id="20ecb-184">The following code example shows how to use this method.</span></span>  
  
 [!code-cpp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CPP/server.cpp#6)]
 [!code-csharp[System.Runtime.Remoting.Channels.Tcp.TcpChannel#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Runtime.Remoting.Channels.Tcp.TcpChannel/CS/server.cs#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="public void StartListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.StartListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartListening (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StartListening(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member StartListening : obj -&gt; unit&#xA;override this.StartListening : obj -&gt; unit" Usage="tcpChannel.StartListening data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannelReceiver.StartListening(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="20ecb-185">Informations d'initialisation facultatives.</span><span class="sxs-lookup"><span data-stu-id="20ecb-185">Optional initialization information.</span></span></param>
        <summary><span data-ttu-id="20ecb-186">Commande au canal en cours de démarrer l'écoute des demandes.</span><span class="sxs-lookup"><span data-stu-id="20ecb-186">Instructs the current channel to start listening for requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20ecb-187">Il n’est pas nécessaire d’appeler cette méthode pour commencer à écouter sur un canal qui vient d’être initialisé.</span><span class="sxs-lookup"><span data-stu-id="20ecb-187">It is not necessary to call this method to begin listening on a newly initialized channel.</span></span>  
  
 <span data-ttu-id="20ecb-188">Utilisez cette méthode pour redémarrer l’écoute sur un canal après le <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening%2A> méthode a été appelée.</span><span class="sxs-lookup"><span data-stu-id="20ecb-188">Use this method to restart listening on a channel after the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StopListening%2A> method has been called.</span></span>  
  
 <span data-ttu-id="20ecb-189">Si votre canal utilise un numéro de port affecté dynamiquement, votre numéro de port peut changer lorsque vous redémarrez à l’écoute.</span><span class="sxs-lookup"><span data-stu-id="20ecb-189">If your channel uses a dynamically assigned port number, your port number might change when you restart listening.</span></span>  
  
 <span data-ttu-id="20ecb-190">Le `data` paramètre peut être utilisé pour passer un état d’initialisation spécifique au canal.</span><span class="sxs-lookup"><span data-stu-id="20ecb-190">The `data` parameter can be used to pass a specific initialization state to the channel.</span></span> <span data-ttu-id="20ecb-191">Si vous ne souhaitez pas passer un état spécifique au canal, définissez `data` à `null`.</span><span class="sxs-lookup"><span data-stu-id="20ecb-191">If you do not want to pass a specific state to the channel, set `data` to `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopListening">
      <MemberSignature Language="C#" Value="public void StopListening (object data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StopListening(object data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Remoting.Channels.Tcp.TcpChannel.StopListening(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopListening (data As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void StopListening(System::Object ^ data);" />
      <MemberSignature Language="F#" Value="abstract member StopListening : obj -&gt; unit&#xA;override this.StopListening : obj -&gt; unit" Usage="tcpChannel.StopListening data" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Remoting.Channels.IChannelReceiver.StopListening(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Remoting</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="data"><span data-ttu-id="20ecb-192">Informations d'état facultatives pour le canal.</span><span class="sxs-lookup"><span data-stu-id="20ecb-192">Optional state information for the channel.</span></span></param>
        <summary><span data-ttu-id="20ecb-193">Commande au canal en cours d'arrêter l'écoute des demandes.</span><span class="sxs-lookup"><span data-stu-id="20ecb-193">Instructs the current channel to stop listening for requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20ecb-194">Utilisez cette méthode pour arrêter l’écoute sur un canal.</span><span class="sxs-lookup"><span data-stu-id="20ecb-194">Use this method to stop listening on a channel.</span></span> <span data-ttu-id="20ecb-195">Pour redémarrer à l’écoute, utilisez la <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="20ecb-195">To restart listening, use the <xref:System.Runtime.Remoting.Channels.Tcp.TcpServerChannel.StartListening%2A> method.</span></span>  
  
 <span data-ttu-id="20ecb-196">Si votre canal utilise un numéro de port affecté dynamiquement, votre numéro de port peut changer lorsque vous redémarrez à l’écoute.</span><span class="sxs-lookup"><span data-stu-id="20ecb-196">If your channel uses a dynamically assigned port number, your port number might change when you restart listening.</span></span>  
  
 <span data-ttu-id="20ecb-197">Le `data` paramètre peut être utilisé pour passer un état d’initialisation spécifique au canal.</span><span class="sxs-lookup"><span data-stu-id="20ecb-197">The `data` parameter can be used to pass a specific initialization state to the channel.</span></span> <span data-ttu-id="20ecb-198">Si vous ne souhaitez pas passer un état spécifique au canal, définissez `data` à `null`.</span><span class="sxs-lookup"><span data-stu-id="20ecb-198">If you do not want to pass a specific state to the channel, set `data` to `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>