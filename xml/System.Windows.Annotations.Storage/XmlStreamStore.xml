<Type Name="XmlStreamStore" FullName="System.Windows.Annotations.Storage.XmlStreamStore">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b9d6181228aa153a4b751834f14be88d5ec49614" />
    <Meta Name="ms.sourcegitcommit" Value="058bfa0b75b777d3171411d35da8f11617fc06b0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="05/04/2018" />
    <Meta Name="ms.locfileid" Value="33659355" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class XmlStreamStore : System.Windows.Annotations.Storage.AnnotationStore" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlStreamStore extends System.Windows.Annotations.Storage.AnnotationStore" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Annotations.Storage.XmlStreamStore" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlStreamStore&#xA;Inherits AnnotationStore" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlStreamStore sealed : System::Windows::Annotations::Storage::AnnotationStore" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Annotations.Storage.AnnotationStore</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b746e-101">Représente un magasin de données XML pour écrire et lire des annotations utilisateur.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b746e-101">Represents an XML data store for writing and reading user annotations.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b746e-102">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-102">Initializes a new instance of the <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlStreamStore (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlStreamStore(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="b746e-103">Flux de données E/S pour lire et écrire des annotations utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-103">The I/O stream for reading and writing user annotations.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b746e-104">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> avec un <see cref="T:System.IO.Stream" /> E/S spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-104">Initializes a new instance of the <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> class with a specified I/O <see cref="T:System.IO.Stream" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b746e-105">`stream` doit être au format XML valid et doit respecter le [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)] schéma.</span><span class="sxs-lookup"><span data-stu-id="b746e-105">`stream` must be in valid XML format and comply with the [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)] schema.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlStreamStore (System.IO.Stream stream, System.Collections.Generic.IDictionary&lt;Uri,System.Collections.Generic.IList&lt;Uri&gt;&gt; knownNamespaces);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, class System.Collections.Generic.IDictionary`2&lt;class System.Uri, class System.Collections.Generic.IList`1&lt;class System.Uri&gt;&gt; knownNamespaces) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.#ctor(System.IO.Stream,System.Collections.Generic.IDictionary{System.Uri,System.Collections.Generic.IList{System.Uri}})" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlStreamStore(System::IO::Stream ^ stream, System::Collections::Generic::IDictionary&lt;Uri ^, System::Collections::Generic::IList&lt;Uri ^&gt; ^&gt; ^ knownNamespaces);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="knownNamespaces" Type="System.Collections.Generic.IDictionary&lt;System.Uri,System.Collections.Generic.IList&lt;System.Uri&gt;&gt;" />
      </Parameters>
      <Docs>
        <param name="stream">
          <span data-ttu-id="b746e-106">Flux de données E/S pour lire et écrire des annotations utilisateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-106">The I/O stream for reading and writing user annotations.</span>
          </span>
        </param>
        <param name="knownNamespaces">
          <span data-ttu-id="b746e-107">Dictionnaire avec une liste d'espaces de noms compatibles connus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-107">A dictionary with a list of known compatible namespaces.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b746e-108">Initialise une nouvelle instance de la classe <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> avec un <see cref="T:System.IO.Stream" /> E/S spécifié et un dictionnaire des espaces de noms compatibles connus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-108">Initializes a new instance of the <see cref="T:System.Windows.Annotations.Storage.XmlStreamStore" /> class with a specified I/O <see cref="T:System.IO.Stream" /> and dictionary of known compatible namespaces.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b746e-109">Cela <xref:System.Windows.Annotations.Storage.XmlStreamStore.%23ctor%2A> constructeur Active l’inscription de connu des espaces de noms spécifiques à l’application.</span><span class="sxs-lookup"><span data-stu-id="b746e-109">This <xref:System.Windows.Annotations.Storage.XmlStreamStore.%23ctor%2A> constructor enables the registration of application-specific known namespaces.</span></span>  
  
 <span data-ttu-id="b746e-110">Le `knownNamespace` dictionnaire définit les espaces de noms d’application utilisés lorsque vous stockez un contenu personnalisé dans le cadre d’une annotation.</span><span class="sxs-lookup"><span data-stu-id="b746e-110">The `knownNamespace` dictionary defines application namespaces that are used when you store custom content as part of an annotation.</span></span>  <span data-ttu-id="b746e-111">La clé de dictionnaire est l’espace de noms principal connu à l’application.</span><span class="sxs-lookup"><span data-stu-id="b746e-111">The dictionary key is the primary namespace known to the application program.</span></span>  <span data-ttu-id="b746e-112">La clé de l’espace de noms est associée à une liste de valeurs d’espaces de noms plus anciens qui sont compatibles avec l’espace de noms « clé ».</span><span class="sxs-lookup"><span data-stu-id="b746e-112">The namespace key is associated with a value list of older namespaces that are compatible with the "key" namespace.</span></span>  <span data-ttu-id="b746e-113">Lorsque les annotations sont chargées des espaces de noms à partir de cette liste seront remplacées par l’espace de noms « clé ».</span><span class="sxs-lookup"><span data-stu-id="b746e-113">When annotations are loaded all namespaces from this list will be replaced by the "key" namespace.</span></span>  
  
 <span data-ttu-id="b746e-114">`stream` doit être au format XML valid et doit respecter le [Annotations de schéma](~/docs/framework/wpf/advanced/annotations-schema.md).</span><span class="sxs-lookup"><span data-stu-id="b746e-114">`stream` must be in valid XML format and comply with the [Annotations Schema](~/docs/framework/wpf/advanced/annotations-schema.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b746e-115">
            <paramref name="stream" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-115">
              <paramref name="stream" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Xml.XmlException">
          <span data-ttu-id="b746e-116">
            <paramref name="stream" /> contient un XML non valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-116">
              <paramref name="stream" /> contains invalid XML.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b746e-117">Le dictionnaire <paramref name="knownNamespaces" /> contient un espace de noms dupliqué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-117">The <paramref name="knownNamespaces" /> dictionary contains a duplicate namespace.</span>
          </span>
          <span data-ttu-id="b746e-118">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-118">-or-</span>
          </span>
          <span data-ttu-id="b746e-119">Le dictionnaire <paramref name="knownNamespaces" /> contient un élément qui possède une clé <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-119">The <paramref name="knownNamespaces" /> dictionary contains an element that has a <see langword="null" /> key.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddAnnotation">
      <MemberSignature Language="C#" Value="public override void AddAnnotation (System.Windows.Annotations.Annotation newAnnotation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddAnnotation(class System.Windows.Annotations.Annotation newAnnotation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation(System.Windows.Annotations.Annotation)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddAnnotation (newAnnotation As Annotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddAnnotation(System::Windows::Annotations::Annotation ^ newAnnotation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newAnnotation" Type="System.Windows.Annotations.Annotation" />
      </Parameters>
      <Docs>
        <param name="newAnnotation">
          <span data-ttu-id="b746e-120">Annotation à ajouter au magasin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-120">The annotation to add to the store.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b746e-121">Ajoute une nouvelle <see cref="T:System.Windows.Annotations.Annotation" /> au magasin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-121">Adds a new <see cref="T:System.Windows.Annotations.Annotation" /> to the store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b746e-122">Lorsque <xref:System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation%2A> est appelée, le <xref:System.Windows.Annotations.Annotation.Id%2A> de la <xref:System.Windows.Annotations.Annotation> est vérifié pour voir si le <xref:System.Windows.Annotations.Annotation> a déjà été ajoutée au magasin.</span><span class="sxs-lookup"><span data-stu-id="b746e-122">When <xref:System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation%2A> is called, the <xref:System.Windows.Annotations.Annotation.Id%2A> of the <xref:System.Windows.Annotations.Annotation> is checked to see whether the <xref:System.Windows.Annotations.Annotation> already has been added to the store.</span></span>  <span data-ttu-id="b746e-123">Si le <xref:System.Windows.Annotations.Annotation> déjà a été ajoutée et se trouve dans le magasin une <xref:System.ArgumentException> erreur est levée.</span><span class="sxs-lookup"><span data-stu-id="b746e-123">If the <xref:System.Windows.Annotations.Annotation> already has been added and is in the store an <xref:System.ArgumentException> error is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b746e-124">
            <paramref name="newAnnotation" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-124">
              <paramref name="newAnnotation" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b746e-125">Une <see cref="T:System.Windows.Annotations.Annotation" /> avec le même <see cref="P:System.Windows.Annotations.Annotation.Id" /> existe déjà dans le magasin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-125">An <see cref="T:System.Windows.Annotations.Annotation" /> with the same <see cref="P:System.Windows.Annotations.Annotation.Id" /> already is in the store.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b746e-126">Aucun <see cref="T:System.IO.Stream" /> E/S n'a été défini pour le magasin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-126">An I/O <see cref="T:System.IO.Stream" /> has not been set for the store.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="b746e-127">
            <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> a été appelé sur le magasin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-127">
              <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation(System.Guid)" />
      </Docs>
    </Member>
    <Member MemberName="AutoFlush">
      <MemberSignature Language="C#" Value="public override bool AutoFlush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoFlush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.Storage.XmlStreamStore.AutoFlush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoFlush As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoFlush { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b746e-128">Obtient ou définit une valeur qui indique si les données des mémoires tampon d'annotation seront écrites immédiatement dans le magasin de données physique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-128">Gets or sets a value that indicates whether data in annotation buffers is to be written immediately to the physical data store.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b746e-129">
            <see langword="true" /> si les données des mémoires tampon d'annotation doivent être écrites immédiatement dans le magasin de données physique pour chaque opération ; sinon, <see langword="false" /> si les données des mémoires tampon d'annotation doivent être écrites lorsque l'application appelle explicitement <see cref="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-129">
              <see langword="true" /> if data in annotation buffers is to be written immediately to the physical data store for each operation; otherwise, <see langword="false" /> if data in the annotation buffers is to be written when the application explicitly calls <see cref="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush" />
      </Docs>
    </Member>
    <Member MemberName="DeleteAnnotation">
      <MemberSignature Language="C#" Value="public override System.Windows.Annotations.Annotation DeleteAnnotation (Guid annotationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Windows.Annotations.Annotation DeleteAnnotation(valuetype System.Guid annotationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteAnnotation (annotationId As Guid) As Annotation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Windows::Annotations::Annotation ^ DeleteAnnotation(Guid annotationId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Annotations.Annotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="annotationId">
          <span data-ttu-id="b746e-130">Propriété de l’identificateur global unique (GUID) <see cref="P:System.Windows.Annotations.Annotation.Id" /> de l’annotation à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-130">The globally unique identifier (GUID) <see cref="P:System.Windows.Annotations.Annotation.Id" /> property of the annotation to be deleted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b746e-131">Supprime l'annotation avec la <see cref="P:System.Windows.Annotations.Annotation.Id" /> spécifiée du magasin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-131">Deletes the annotation with the specified <see cref="P:System.Windows.Annotations.Annotation.Id" /> from the store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b746e-132">Annotation supprimée ; sinon, <see langword="null" /> si une annotation avec la <paramref name="annotationId" /> spécifiée était introuvable dans le magasin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-132">The annotation that was deleted; otherwise, <see langword="null" /> if an annotation with the specified <paramref name="annotationId" /> was not found in the store.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b746e-133">L’exemple suivant illustre l’utilisation de la <xref:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation%2A> et <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="b746e-133">The following example shows use of the <xref:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation%2A> and <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> methods.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerDelete](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserdelete)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="b746e-134">
            <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> a été appelé sur le magasin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-134">
              <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b746e-135">Aucun <see cref="T:System.IO.Stream" /> E/S n'a été défini pour le magasin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-135">An I/O <see cref="T:System.IO.Stream" /> has not been set for the store.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.AddAnnotation(System.Windows.Annotations.Annotation)" />
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)" />
        <altmember cref="Overload:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b746e-136">Force l'écriture de toutes les données d'annotation conservées dans les mémoires tampon internes dans le dispositif de stockage sous-jacent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-136">Forces any annotation data retained in internal buffers to be written to the underlying storage device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b746e-137">L’exemple suivant montre comment utiliser le <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> méthode lorsque l’application se ferme le <xref:System.Windows.Annotations.AnnotationService>.</span><span class="sxs-lookup"><span data-stu-id="b746e-137">The following example shows how to use the <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> method when the application closes the <xref:System.Windows.Annotations.AnnotationService>.</span></span>  
  
 [!code-csharp[DocViewerAnnotationsXps#StopAnnotations](~/samples/snippets/csharp/VS_Snippets_Wpf/DocViewerAnnotationsXps/CSharp/AnnotationsHelperXps.cs#stopannotations)]
 [!code-vb[DocViewerAnnotationsXps#StopAnnotations](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DocViewerAnnotationsXps/visualbasic/annotationshelperxps.vb#stopannotations)]  
  
 <span data-ttu-id="b746e-138">L’exemple suivant illustre l’utilisation de la <xref:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation%2A> et <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="b746e-138">The following example shows use of the <xref:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation%2A> and <xref:System.Windows.Annotations.Storage.XmlStreamStore.Flush%2A> methods.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerDelete](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserdelete)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="b746e-139">
            <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> a été appelé sur le magasin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-139">
              <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b746e-140">Aucun <see cref="T:System.IO.Stream" /> E/S n'a été défini pour le magasin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-140">An I/O <see cref="T:System.IO.Stream" /> has not been set for the store.</span>
          </span>
        </exception>
        <exception cref="T:System.UnauthorizedAccessException">
          <span data-ttu-id="b746e-141">Le <see cref="T:System.IO.Stream" /> E/S du magasin est en lecture seule et n'est pas accessible pour la sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-141">The store I/O <see cref="T:System.IO.Stream" /> is read-only and cannot be accessed for output.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Annotations.Storage.XmlStreamStore.AutoFlush" />
      </Docs>
    </Member>
    <Member MemberName="GetAnnotation">
      <MemberSignature Language="C#" Value="public override System.Windows.Annotations.Annotation GetAnnotation (Guid annotationId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Windows.Annotations.Annotation GetAnnotation(valuetype System.Guid annotationId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAnnotation (annotationId As Guid) As Annotation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Windows::Annotations::Annotation ^ GetAnnotation(Guid annotationId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Annotations.Annotation</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="annotationId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="annotationId">
          <span data-ttu-id="b746e-142">Propriété GUID <see cref="P:System.Windows.Annotations.Annotation.Id" /> de l'annotation à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-142">The GUID <see cref="P:System.Windows.Annotations.Annotation.Id" /> property of the annotation to be returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b746e-143">Retourne l'annotation avec la <see cref="P:System.Windows.Annotations.Annotation.Id" /> spécifiée à partir du magasin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-143">Returns the annotation with the specified <see cref="P:System.Windows.Annotations.Annotation.Id" /> from the store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b746e-144">Annotation avec l'<paramref name="annotationId" /> donné ; sinon, <see langword="null" /> si une annotation avec l'<paramref name="annotationId" /> spécifié était introuvable dans le magasin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-144">The annotation with the given <paramref name="annotationId" />; otherwise, <see langword="null" /> if an annotation with the specified <paramref name="annotationId" /> was not found in the store.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="b746e-145">
            <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> a été appelé sur le magasin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-145">
              <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations" />
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.DeleteAnnotation(System.Guid)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAnnotations">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b746e-146">Retourne une liste de toutes les annotations du magasin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-146">Returns a list of all the annotations in the store.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b746e-147">L’exemple suivant montre comment utiliser la <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> méthode pour déterminer s’il existe des annotations dans le magasin.</span><span class="sxs-lookup"><span data-stu-id="b746e-147">The following example shows how to use the <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> method to determine whether there are any annotations contained in the store.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerCloseFile](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserclosefile)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAnnotations">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt; GetAnnotations ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Windows.Annotations.Annotation&gt; GetAnnotations() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAnnotations () As IList(Of Annotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::Windows::Annotations::Annotation ^&gt; ^ GetAnnotations();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b746e-148">Retourne une liste de toutes les annotations du magasin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-148">Returns a list of all the annotations in the store.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b746e-149">Liste de toutes les annotations qui sont actuellement dans le magasin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-149">The list of all annotations that are currently in the store.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b746e-150">Le <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> méthode ne retourne jamais `null`; Cependant, la liste peut être vide si le magasin ne contient aucune annotation.</span><span class="sxs-lookup"><span data-stu-id="b746e-150">The <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> method will never return `null`; however the list may be empty if the store contains no annotations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b746e-151">L’exemple suivant montre comment utiliser la <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> méthode pour déterminer s’il existe des annotations dans le magasin.</span><span class="sxs-lookup"><span data-stu-id="b746e-151">The following example shows how to use the <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> method to determine whether there are any annotations in the store.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerCloseFile](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserclosefile)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="b746e-152">
            <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> a été appelé sur le magasin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-152">
              <see cref="Overload:System.Windows.Annotations.Storage.AnnotationStore.Dispose" /> has been called on the store.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)" />
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations(System.Windows.Annotations.ContentLocator)" />
      </Docs>
    </Member>
    <Member MemberName="GetAnnotations">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt; GetAnnotations (System.Windows.Annotations.ContentLocator anchorLocator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Windows.Annotations.Annotation&gt; GetAnnotations(class System.Windows.Annotations.ContentLocator anchorLocator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations(System.Windows.Annotations.ContentLocator)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAnnotations (anchorLocator As ContentLocator) As IList(Of Annotation)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::Windows::Annotations::Annotation ^&gt; ^ GetAnnotations(System::Windows::Annotations::ContentLocator ^ anchorLocator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Windows.Annotations.Annotation&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anchorLocator" Type="System.Windows.Annotations.ContentLocator" />
      </Parameters>
      <Docs>
        <param name="anchorLocator">
          <span data-ttu-id="b746e-153">Séquence <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> initiale pour laquelle retourner des annotations correspondantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-153">The starting <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> sequence to return matching annotations for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b746e-154">Retourne une liste d'annotations qui ont des <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> avec des localisateurs qui commencent par une séquence <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> correspondante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-154">Returns a list of annotations that have <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> with locators that begin with a matching <see cref="T:System.Windows.Annotations.ContentLocatorPart" /> sequence.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b746e-155">Liste des annotations qui ont des <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> avec des localisateurs qui commencent et correspondent à l'<paramref name="anchorLocator" /> donné ; sinon, <see langword="null" /> si aucune annotation correspondante n'est trouvée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-155">The list of annotations that have <see cref="P:System.Windows.Annotations.Annotation.Anchors" /> with locators that start and match the given <paramref name="anchorLocator" />; otherwise, <see langword="null" /> if no matching annotations were found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b746e-156">Cela <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> méthode utilise en interne la <xref:System.Windows.Annotations.ContentLocator.StartsWith%2A> méthode de la <xref:System.Windows.Annotations.ContentLocator> classe pour effectuer une recherche et la correspondance pour les annotations à retourner.</span><span class="sxs-lookup"><span data-stu-id="b746e-156">This <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> method internally uses the <xref:System.Windows.Annotations.ContentLocator.StartsWith%2A> method of the <xref:System.Windows.Annotations.ContentLocator> class to search and match for the annotations to return.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b746e-157">L’exemple suivant montre comment utiliser la <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> méthode pour déterminer s’il existe des annotations dans le magasin.</span><span class="sxs-lookup"><span data-stu-id="b746e-157">The following example shows how to use the <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotations%2A> method to determine whether there are any annotations in the store.</span></span>  
  
 [!code-csharp[DocumentSerialize#DocSerCloseFile](~/samples/snippets/csharp/VS_Snippets_Wpf/DocumentSerialize/CSharp/ThumbViewer.cs#docserclosefile)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetAnnotation(System.Guid)" />
        <altmember cref="M:System.Windows.Annotations.ContentLocator.StartsWith(System.Windows.Annotations.ContentLocator)" />
      </Docs>
    </Member>
    <Member MemberName="GetWellKnownCompatibleNamespaces">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Uri&gt; GetWellKnownCompatibleNamespaces (Uri name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.Generic.IList`1&lt;class System.Uri&gt; GetWellKnownCompatibleNamespaces(class System.Uri name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetWellKnownCompatibleNamespaces (name As Uri) As IList(Of Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Collections::Generic::IList&lt;Uri ^&gt; ^ GetWellKnownCompatibleNamespaces(Uri ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Uri&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="b746e-158">Séquence URI initiale pour laquelle retourner la liste d'espaces de noms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-158">The starting URI sequence to return the list of namespaces for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b746e-159">Retourne une liste d'espaces de noms qui sont compatibles comme espace de noms d'entrée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-159">Returns a list of namespaces that are compatible as an input namespace.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b746e-160">Liste d'espaces de noms compatibles qui correspondent à <paramref name="name" /> ; sinon, <see langword="null" /> si aucun espace de noms compatible n'est trouvé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-160">A list of compatible namespaces that match <paramref name="name" />; otherwise, <see langword="null" /> if there are no compatible namespaces found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b746e-161">Le `name` paramètre fonctionne uniquement pour les prédéfinies [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)] espaces de noms.</span><span class="sxs-lookup"><span data-stu-id="b746e-161">The `name` parameter works only for predefined [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)] namespaces.</span></span>  <span data-ttu-id="b746e-162">Pour tout autre espace de noms donné dans le `name` paramètre <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces%2A> retournera `null`, même les espaces de noms inscrits via le `knownNamespaces` paramètre de la <xref:System.Windows.Annotations.Storage.XmlStreamStore.%23ctor%2A> constructeur.</span><span class="sxs-lookup"><span data-stu-id="b746e-162">For any other namespace given in the `name` parameter <xref:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces%2A> will return `null`, even those namespaces registered through the `knownNamespaces` parameter of the <xref:System.Windows.Annotations.Storage.XmlStreamStore.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="b746e-163">Les espaces de noms prédéfinis par le [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)] incluent les éléments suivants :</span><span class="sxs-lookup"><span data-stu-id="b746e-163">The namespaces predefined by the [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)] include the following:</span></span>  
  
-   http://schemas.microsoft.com/windows/annotations/2003/11/core  
  
-   http://schemas.microsoft.com/windows/annotations/2003/11/base  
  
-   http://schemas.microsoft.com/winfx/2006/xaml/presentation  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces" />
        <altmember cref="P:System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces" />
      </Docs>
    </Member>
    <Member MemberName="IgnoredNamespaces">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;Uri&gt; IgnoredNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Uri&gt; IgnoredNamespaces" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IgnoredNamespaces As IList(Of Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;Uri ^&gt; ^ IgnoredNamespaces { System::Collections::Generic::IList&lt;Uri ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Uri&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b746e-164">Obtient la liste des espaces de noms ignorés pendant le chargement du flux XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-164">Gets a list of the namespaces that were ignored when the XML stream was loaded.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b746e-165">Liste des espaces de noms ignorés pendant le chargement du flux XML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-165">The list of the namespaces that were ignored when the XML stream was loaded.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b746e-166">Le <xref:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces%2A> propriété ne retourne jamais `null`, mais la liste renvoyée peut être vide si aucun espace de noms n’est ignorés.</span><span class="sxs-lookup"><span data-stu-id="b746e-166">The <xref:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces%2A> property will never return `null`, however the returned list can be empty if no namespaces are ignored.</span></span>  
  
 <span data-ttu-id="b746e-167"><xref:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces%2A> facilite la compatibilité du balisage XML lorsque le programme lit le contenu d’annotations créé par différentes versions de la [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)].</span><span class="sxs-lookup"><span data-stu-id="b746e-167"><xref:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces%2A> helps in XML markup compatibility when the program reads annotation content created by different versions of the [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)].</span></span>  <span data-ttu-id="b746e-168">Lorsqu’une application plus ancienne reçoit un contenu d’annotation créé à l’aide d’une version plus récente de la [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)], <xref:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces%2A> retourne une liste des espaces de noms XML pour les éléments et attributs non connus de l’infrastructure plus ancienne.</span><span class="sxs-lookup"><span data-stu-id="b746e-168">When an older application is given annotation content created using a newer version of the [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)], <xref:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces%2A> returns a list of the XML namespaces for elements and attributes not known to the older framework.</span></span>  <span data-ttu-id="b746e-169">Inconnu éléments et attributs XML associés à des espaces de noms plus récents sont ignorés lorsque le contenu de l’annotation est lu et désérialisé par l’application plus ancienne.</span><span class="sxs-lookup"><span data-stu-id="b746e-169">Unknown XML elements and attributes associated with newer namespaces are ignored when the annotation content is read and deserialized by the older application.</span></span>  <span data-ttu-id="b746e-170">Pour plus d’informations, consultez la *spécification de compatibilité du balisage XML* disponible à l’adresse [ http://go.microsoft.com/fwlink/?LinkId=73824 ](http://go.microsoft.com/fwlink/?LinkId=73824).</span><span class="sxs-lookup"><span data-stu-id="b746e-170">For more information see the *XML Markup Compatibility Specification* available at [http://go.microsoft.com/fwlink/?LinkId=73824](http://go.microsoft.com/fwlink/?LinkId=73824).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces" />
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces(System.Uri)" />
      </Docs>
    </Member>
    <Member MemberName="OnStoreContentChanged">
      <MemberSignature Language="C#" Value="protected override void OnStoreContentChanged (System.Windows.Annotations.Storage.StoreContentChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnStoreContentChanged(class System.Windows.Annotations.Storage.StoreContentChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Annotations.Storage.XmlStreamStore.OnStoreContentChanged(System.Windows.Annotations.Storage.StoreContentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnStoreContentChanged (e As StoreContentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnStoreContentChanged(System::Windows::Annotations::Storage::StoreContentChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Annotations.Storage.StoreContentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WellKnownNamespaces">
      <MemberSignature Language="C#" Value="public static System.Collections.Generic.IList&lt;Uri&gt; WellKnownNamespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.Generic.IList`1&lt;class System.Uri&gt; WellKnownNamespaces" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Annotations.Storage.XmlStreamStore.WellKnownNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property WellKnownNamespaces As IList(Of Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::Generic::IList&lt;Uri ^&gt; ^ WellKnownNamespaces { System::Collections::Generic::IList&lt;Uri ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Uri&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b746e-171">Obtient une liste de tous les espaces de noms prédéfinis par [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-171">Gets a list of all namespaces that are predefined by the [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)].</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b746e-172">Liste des espaces de noms prédéfinis par [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="b746e-172">The list of namespaces that are predefined by the [!INCLUDE[TLA#tla_caf](~/includes/tlasharptla-caf-md.md)].</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b746e-173">Les espaces de noms prédéfinis par le [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)] incluent les éléments suivants :</span><span class="sxs-lookup"><span data-stu-id="b746e-173">The namespaces predefined by the [!INCLUDE[TLA2#tla_caf](~/includes/tla2sharptla-caf-md.md)] include the following:</span></span>  
  
-   http://schemas.microsoft.com/windows/annotations/2003/11/core  
  
-   http://schemas.microsoft.com/windows/annotations/2003/11/base  
  
-   http://schemas.microsoft.com/winfx/2006/xaml/presentation  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Annotations.Storage.XmlStreamStore.IgnoredNamespaces" />
        <altmember cref="M:System.Windows.Annotations.Storage.XmlStreamStore.GetWellKnownCompatibleNamespaces(System.Uri)" />
      </Docs>
    </Member>
  </Members>
</Type>