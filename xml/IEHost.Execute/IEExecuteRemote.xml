<Type Name="IEExecuteRemote" FullName="IEHost.Execute.IEExecuteRemote">
  <Metadata><Meta Name="ms.openlocfilehash" Value="298188c728a47ea732e5ba93af7f23ef7d595b7e" /><Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/27/2018" /><Meta Name="ms.locfileid" Value="52372990" /></Metadata><TypeSignature Language="C#" Value="public class IEExecuteRemote : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit IEExecuteRemote extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:IEHost.Execute.IEExecuteRemote" />
  <TypeSignature Language="VB.NET" Value="Public Class IEExecuteRemote&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class IEExecuteRemote : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type IEExecuteRemote = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>IEExecRemote</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Exécute une application managée via Internet.</summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public IEExecuteRemote ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:IEHost.Execute.IEExecuteRemote.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IEExecuteRemote();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>IEExecRemote</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:IEHost.Execute.IEExecuteRemote" />.</summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.IO.Stream Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream Exception" />
      <MemberSignature Language="DocId" Value="P:IEHost.Execute.IEExecuteRemote.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ Exception { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : System.IO.Stream" Usage="IEHost.Execute.IEExecuteRemote.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>IEExecRemote</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une exception si une exception a été levée.</summary>
        <value>L’exception sérialisée, ou null (Nothing en Visual Basic) si une exception a été pas levée.</value>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExecuteAsAssembly">
      <MemberSignature Language="C#" Value="public int ExecuteAsAssembly (string file, System.Security.Policy.Evidence evidence, byte[] hash, System.Configuration.Assemblies.AssemblyHashAlgorithm id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteAsAssembly(string file, class System.Security.Policy.Evidence evidence, unsigned int8[] hash, valuetype System.Configuration.Assemblies.AssemblyHashAlgorithm id) cil managed" />
      <MemberSignature Language="DocId" Value="M:IEHost.Execute.IEExecuteRemote.ExecuteAsAssembly(System.String,System.Security.Policy.Evidence,System.Byte[],System.Configuration.Assemblies.AssemblyHashAlgorithm)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteAsAssembly(System::String ^ file, System::Security::Policy::Evidence ^ evidence, cli::array &lt;System::Byte&gt; ^ hash, System::Configuration::Assemblies::AssemblyHashAlgorithm id);" />
      <MemberSignature Language="F#" Value="member this.ExecuteAsAssembly : string * System.Security.Policy.Evidence * byte[] * System.Configuration.Assemblies.AssemblyHashAlgorithm -&gt; int" Usage="iEExecuteRemote.ExecuteAsAssembly (file, evidence, hash, id)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>IEExecRemote</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        <Parameter Name="hash" Type="System.Byte[]" />
        <Parameter Name="id" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
      </Parameters>
      <Docs>
        <param name="file">Nom ou chemin d’accès du fichier qui contient le manifeste d’assembly.</param>
        <param name="evidence">Preuve de chargement de l'assembly.</param>
        <param name="hash">Valeur du code de hachage calculé.</param>
        <param name="id">Algorithme de hachage qui a été utilisé pour hacher les fichiers et pour générer le nom fort.</param>
        <summary>Charge un assembly et appelle le point d’entrée en fonction de son nom de fichier ou de son chemin d’accès, de la preuve de sécurité, de la valeur de hachage et de l’algorithme de hachage.</summary>
        <returns>Assembly chargé.</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ExecuteAsDll">
      <MemberSignature Language="C#" Value="public int ExecuteAsDll (string file, System.Security.Policy.Evidence evidence, object pars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 ExecuteAsDll(string file, class System.Security.Policy.Evidence evidence, object pars) cil managed" />
      <MemberSignature Language="DocId" Value="M:IEHost.Execute.IEExecuteRemote.ExecuteAsDll(System.String,System.Security.Policy.Evidence,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int ExecuteAsDll(System::String ^ file, System::Security::Policy::Evidence ^ evidence, System::Object ^ pars);" />
      <MemberSignature Language="F#" Value="member this.ExecuteAsDll : string * System.Security.Policy.Evidence * obj -&gt; int" Usage="iEExecuteRemote.ExecuteAsDll (file, evidence, pars)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>IEExecRemote</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
        <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        <Parameter Name="pars" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="file">Non utilisé.</param>
        <param name="evidence">Non utilisé.</param>
        <param name="pars">Non utilisé.</param>
        <summary>Cette API prend en charge l'infrastructure .NET Framework et n'est pas destinée à être directement utilisée à partir de votre code.</summary>
        <returns>Toujours E_NOTIMPL.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:IEHost.Execute.IEExecuteRemote.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="iEExecuteRemote.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>IEExecRemote</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Donne à l'objet <see cref="T:IEHost.Execute.IEExecuteRemote" /> une durée de vie infinie en empêchant toute création de bail.</summary>
        <returns>Toujours une référence null (Nothing en Visual Basic).</returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>