<Type Name="CompositeActivityDesigner" FullName="System.Workflow.ComponentModel.Design.CompositeActivityDesigner">
  <Metadata><Meta Name="ms.openlocfilehash" Value="260754abfe74eb835291dcfc4079315c3b6166fb" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55395650" /></Metadata><TypeSignature Language="C#" Value="public abstract class CompositeActivityDesigner : System.Workflow.ComponentModel.Design.ActivityDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CompositeActivityDesigner extends System.Workflow.ComponentModel.Design.ActivityDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CompositeActivityDesigner&#xA;Inherits ActivityDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositeActivityDesigner abstract : System::Workflow::ComponentModel::Design::ActivityDesigner" />
  <TypeSignature Language="F#" Value="type CompositeActivityDesigner = class&#xA;    inherit ActivityDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Workflow.ComponentModel.Design.ActivityDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Design.CompositeActivityDesignerLayoutSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Workflow.ComponentModel.Design.ActivityDesignerTheme(typeof(System.Workflow.ComponentModel.Design.CompositeDesignerTheme))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fournit un concepteur qui vous permet de concevoir visuellement des activités composites.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 Utilisez le <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> pour concevoir visuellement des activités composites, pour personnaliser la disposition et gérer le dessin du <xref:System.Workflow.ComponentModel.CompositeActivity>.  
  
 Le <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> vous permet également de gérer les événements des concepteurs d'activités contenus. Il permet enfin de personnaliser et de gérer la position, la taille et la disposition des concepteurs d'activités contenus.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CompositeActivityDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CompositeActivityDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>En cas d'implémentation dans une classe dérivée, initialise une instance de la classe <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AccessibilityObject">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.AccessibleObject AccessibilityObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.AccessibleObject AccessibilityObject" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.AccessibilityObject" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property AccessibilityObject As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::AccessibleObject ^ AccessibilityObject { System::Windows::Forms::AccessibleObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AccessibilityObject : System.Windows.Forms.AccessibleObject" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.AccessibilityObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un <see cref="T:System.Windows.Forms.AccessibleObject" /> que les applications d'accessibilité utilisent afin d'adapter l'apparence et la convivialité de l'application pour les personnes présentant un handicap.</summary>
        <value><see cref="T:System.Windows.Forms.AccessibleObject" /> associé au contrôle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si aucun <xref:System.Windows.Forms.AccessibleObject> n'est actuellement assigné au contrôle, une nouvelle instance est créée.  
  
> [!NOTE]
>  Pour obtenir ou définir la propriété <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.AccessibilityObject%2A>, vous devez ajouter une référence à l'assembly d'accessibilité installé avec le .NET Framework.  
  
 Pour plus d'informations sur les objets accessibles, consultez la section Active Accessibility de MSDN Library.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanExpandCollapse">
      <MemberSignature Language="C#" Value="public virtual bool CanExpandCollapse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanExpandCollapse" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanExpandCollapse" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanExpandCollapse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanExpandCollapse { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanExpandCollapse : bool" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanExpandCollapse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si le <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> peut être réduit.</summary>
        <value><see langword="true" /> si le concepteur d'activité composite spécifié peut être réduit ; sinon <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Certains concepteurs composites contiendront plusieurs concepteurs. Ces concepteurs peuvent implémenter le développement ou la réduction pour gagner de l’espace à l’écran.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInsertActivities">
      <MemberSignature Language="C#" Value="public virtual bool CanInsertActivities (System.Workflow.ComponentModel.Design.HitTestInfo insertLocation, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToInsert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanInsertActivities(class System.Workflow.ComponentModel.Design.HitTestInfo insertLocation, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToInsert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanInsertActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanInsertActivities (insertLocation As HitTestInfo, activitiesToInsert As ReadOnlyCollection(Of Activity)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanInsertActivities(System::Workflow::ComponentModel::Design::HitTestInfo ^ insertLocation, System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activitiesToInsert);" />
      <MemberSignature Language="F#" Value="abstract member CanInsertActivities : System.Workflow.ComponentModel.Design.HitTestInfo * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; bool&#xA;override this.CanInsertActivities : System.Workflow.ComponentModel.Design.HitTestInfo * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; bool" Usage="compositeActivityDesigner.CanInsertActivities (insertLocation, activitiesToInsert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="insertLocation" Type="System.Workflow.ComponentModel.Design.HitTestInfo" />
        <Parameter Name="activitiesToInsert" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="insertLocation">Emplacement où insérer les activités.</param>
        <param name="activitiesToInsert">Tableau en lecture seule des <see cref="T:System.Workflow.ComponentModel.Activity" /> à insérer.</param>
        <summary>Retourne une valeur qui indique si des activités peuvent être insérées dans l'activité composite associée au concepteur.</summary>
        <returns><see langword="true" /> si les activités peuvent être insérées dans l'activité composite associée au concepteur ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanInsertActivities%2A> pour déterminer si une liste d'activités peut être insérée dans une activité composite.  
  
   
  
## Examples  
 L'exemple suivant montre comment verrouiller un <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> en n'autorisant pas l'insertion d'activités enfants.  
  
 [!code-csharp[WF_Samples#25](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#25)]
 [!code-vb[WF_Samples#25](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanMoveActivities">
      <MemberSignature Language="C#" Value="public virtual bool CanMoveActivities (System.Workflow.ComponentModel.Design.HitTestInfo moveLocation, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToMove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanMoveActivities(class System.Workflow.ComponentModel.Design.HitTestInfo moveLocation, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToMove) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanMoveActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanMoveActivities (moveLocation As HitTestInfo, activitiesToMove As ReadOnlyCollection(Of Activity)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanMoveActivities(System::Workflow::ComponentModel::Design::HitTestInfo ^ moveLocation, System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activitiesToMove);" />
      <MemberSignature Language="F#" Value="abstract member CanMoveActivities : System.Workflow.ComponentModel.Design.HitTestInfo * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; bool&#xA;override this.CanMoveActivities : System.Workflow.ComponentModel.Design.HitTestInfo * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; bool" Usage="compositeActivityDesigner.CanMoveActivities (moveLocation, activitiesToMove)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moveLocation" Type="System.Workflow.ComponentModel.Design.HitTestInfo" />
        <Parameter Name="activitiesToMove" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="moveLocation">Emplacement depuis lequel déplacer les activités.</param>
        <param name="activitiesToMove">Tableau en lecture seule des activités à déplacer.</param>
        <summary>Retourne une valeur qui indique si les activités contenues dans l'activité composite peuvent être déplacées en dehors de l'activité composite associée au concepteur.</summary>
        <returns><see langword="true" /> si les activités peuvent être déplacées à partir de l'activité composite ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanMoveActivities%2A> pour déterminer si une liste d'activités peut être déplacée à partir d'une activité composite.  
  
   
  
## Examples  
 L'exemple suivant montre comment substituer la méthode <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanMoveActivities%2A> de manière à autoriser le déplacement d'activités enfants dans le <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.  
  
 [!code-csharp[WF_Samples#26](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#26)]
 [!code-vb[WF_Samples#26](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#26)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanRemoveActivities">
      <MemberSignature Language="C#" Value="public virtual bool CanRemoveActivities (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanRemoveActivities(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanRemoveActivities(System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanRemoveActivities (activitiesToRemove As ReadOnlyCollection(Of Activity)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanRemoveActivities(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activitiesToRemove);" />
      <MemberSignature Language="F#" Value="abstract member CanRemoveActivities : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; bool&#xA;override this.CanRemoveActivities : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; bool" Usage="compositeActivityDesigner.CanRemoveActivities activitiesToRemove" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activitiesToRemove" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="activitiesToRemove">Tableau en lecture seule des activités à supprimer de l'activité composite associée au concepteur.</param>
        <summary>Retourne une valeur qui indique si des activités peuvent être supprimées de l'activité composite associée au concepteur.</summary>
        <returns><see langword="true" /> si les activités peuvent être supprimées de l'activité composite ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanRemoveActivities%2A> pour déterminer si une liste d'activités contenues peut être supprimée de l'activité composite.  
  
   
  
## Examples  
 L'exemple suivant montre comment substituer la méthode <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanRemoveActivities%2A> de manière à autoriser le déplacement d'activités enfants dans le <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.  
  
 [!code-csharp[WF_Samples#27](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#27)]
 [!code-vb[WF_Samples#27](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainedDesigners">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ActivityDesigner&gt; ContainedDesigners { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Design.ActivityDesigner&gt; ContainedDesigners" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ContainedDesigners" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ContainedDesigners As ReadOnlyCollection(Of ActivityDesigner)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::ActivityDesigner ^&gt; ^ ContainedDesigners { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Design::ActivityDesigner ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContainedDesigners : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ActivityDesigner&gt;" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ContainedDesigners" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Design.ActivityDesigner&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le tableau des <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> contenus dans le <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</summary>
        <value>Collection en lecture seule de <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez l’accesseur <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ContainedDesigners%2A> pour récupérer une collection en lecture seule des concepteurs contenus dans le <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeserializeActivitiesFromDataObject">
      <MemberSignature Language="C#" Value="public static System.Workflow.ComponentModel.Activity[] DeserializeActivitiesFromDataObject (IServiceProvider serviceProvider, System.Windows.Forms.IDataObject dataObj);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Workflow.ComponentModel.Activity[] DeserializeActivitiesFromDataObject(class System.IServiceProvider serviceProvider, class System.Windows.Forms.IDataObject dataObj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.DeserializeActivitiesFromDataObject(System.IServiceProvider,System.Windows.Forms.IDataObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeserializeActivitiesFromDataObject (serviceProvider As IServiceProvider, dataObj As IDataObject) As Activity()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Workflow::ComponentModel::Activity ^&gt; ^ DeserializeActivitiesFromDataObject(IServiceProvider ^ serviceProvider, System::Windows::Forms::IDataObject ^ dataObj);" />
      <MemberSignature Language="F#" Value="static member DeserializeActivitiesFromDataObject : IServiceProvider * System.Windows.Forms.IDataObject -&gt; System.Workflow.ComponentModel.Activity[]" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.DeserializeActivitiesFromDataObject (serviceProvider, dataObj)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Activity[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="dataObj" Type="System.Windows.Forms.IDataObject" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Service de sérialisation de composants.</param>
        <param name="dataObj">Objet qui contient les activités à désérialiser.</param>
        <summary>Désérialise les éléments d’un <see cref="T:System.Windows.Forms.IDataObject" /> reçu au cours d’une opération de glisser-déposer ou provenant du Presse-papiers.</summary>
        <returns>Tableau des activités désérialisées à partir d'un <see cref="T:System.Windows.Forms.IDataObject" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-method-note](~/includes/untrusted-data-method-note.md)]
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="compositeActivityDesigner.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing"><see langword="true" /> pour libérer les ressources managées et non managées ; <see langword="false" /> pour libérer uniquement les ressources non managées.</param>
        <summary>Libère les ressources non managées utilisées par <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> et libère éventuellement les ressources managées.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureVisibleContainedDesigner">
      <MemberSignature Language="C#" Value="public virtual void EnsureVisibleContainedDesigner (System.Workflow.ComponentModel.Design.ActivityDesigner containedDesigner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnsureVisibleContainedDesigner(class System.Workflow.ComponentModel.Design.ActivityDesigner containedDesigner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.EnsureVisibleContainedDesigner(System.Workflow.ComponentModel.Design.ActivityDesigner)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EnsureVisibleContainedDesigner (containedDesigner As ActivityDesigner)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnsureVisibleContainedDesigner(System::Workflow::ComponentModel::Design::ActivityDesigner ^ containedDesigner);" />
      <MemberSignature Language="F#" Value="abstract member EnsureVisibleContainedDesigner : System.Workflow.ComponentModel.Design.ActivityDesigner -&gt; unit&#xA;override this.EnsureVisibleContainedDesigner : System.Workflow.ComponentModel.Design.ActivityDesigner -&gt; unit" Usage="compositeActivityDesigner.EnsureVisibleContainedDesigner containedDesigner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containedDesigner" Type="System.Workflow.ComponentModel.Design.ActivityDesigner" />
      </Parameters>
      <Docs>
        <param name="containedDesigner">Concepteur contenu à rendre visible.</param>
        <summary>Vérifie que le concepteur contenu est visible.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.EnsureVisibleContainedDesigner%2A> pour vous assurer que le concepteur contenu est visible. Dans un concepteur personnalisé, vous pouvez utiliser <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.EnsureVisibleContainedDesigner%2A> pour rendre visible un concepteur qui se trouve dans un concepteur composite réduit.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExpandButtonRectangle">
      <MemberSignature Language="C#" Value="protected virtual System.Drawing.Rectangle ExpandButtonRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ExpandButtonRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ExpandButtonRectangle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ExpandButtonRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Rectangle ExpandButtonRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpandButtonRectangle : System.Drawing.Rectangle" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ExpandButtonRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le <see cref="T:System.Drawing.Rectangle" /> qui contient le bouton de développement ou de réduction.</summary>
        <value><see cref="T:System.Drawing.Rectangle" /> qui englobe le bouton de développement ou de réduction.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ExpandButtonRectangle%2A> pour retourner un <xref:System.Drawing.Rectangle> qui décrit la zone de l’écran qui englobe le bouton de développement sur un <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>. Ceci est utile pour détecter des événements de souris en réponse à vos demandes de développement ou de réduction d'un <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Expanded">
      <MemberSignature Language="C#" Value="public virtual bool Expanded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Expanded" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Expanded" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Expanded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Expanded { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Expanded : bool with get, set" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Expanded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si le <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> est développé.</summary>
        <value><see langword="true" /> si le <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> est développé ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnMouseDown%2A> en combinaison avec <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ExpandButtonRectangle%2A> et <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Expanded%2A> pour déterminer l’action appropriée lorsqu’un utilisateur clique sur le bouton de développement ou de réduction sur le <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment vous pouvez définir la propriété <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Expanded%2A> basée sur une valeur `Boolean` passée sous forme d’argument à une méthode.  
  
 Cet exemple de code fait partie de l'exemple du Kit de développement logiciel Workflow Monitor (SDK) et provient du fichier ViewHost.cs. Pour plus d’informations, consultez [Workflow Monitor](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)).  
  
 [!code-csharp[WF_Samples#135](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets1.cs#135)]
 [!code-vb[WF_Samples#135](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets1.vb#135)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/dotnet/netframework-3.5/ms741706(v=vs.90)">Analyse de flux de travail</related>
      </Docs>
    </Member>
    <Member MemberName="FirstSelectableObject">
      <MemberSignature Language="C#" Value="public virtual object FirstSelectableObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object FirstSelectableObject" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.FirstSelectableObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FirstSelectableObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ FirstSelectableObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstSelectableObject : obj" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.FirstSelectableObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le premier objet sélectionnable dans l'ordre de navigation du <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</summary>
        <value>Premier objet sélectionnable contenu dans le concepteur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En cas de substitution dans une classe dérivée, utilisez <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.FirstSelectableObject%2A> pour retourner le premier objet sélectionnable contenu dans le <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntersectingDesigners">
      <MemberSignature Language="C#" Value="public static System.Workflow.ComponentModel.Design.ActivityDesigner[] GetIntersectingDesigners (System.Workflow.ComponentModel.Design.ActivityDesigner topLevelDesigner, System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Workflow.ComponentModel.Design.ActivityDesigner[] GetIntersectingDesigners(class System.Workflow.ComponentModel.Design.ActivityDesigner topLevelDesigner, valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.GetIntersectingDesigners(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Workflow::ComponentModel::Design::ActivityDesigner ^&gt; ^ GetIntersectingDesigners(System::Workflow::ComponentModel::Design::ActivityDesigner ^ topLevelDesigner, System::Drawing::Rectangle rectangle);" />
      <MemberSignature Language="F#" Value="static member GetIntersectingDesigners : System.Workflow.ComponentModel.Design.ActivityDesigner * System.Drawing.Rectangle -&gt; System.Workflow.ComponentModel.Design.ActivityDesigner[]" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.GetIntersectingDesigners (topLevelDesigner, rectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesigner[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="topLevelDesigner" Type="System.Workflow.ComponentModel.Design.ActivityDesigner" />
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="topLevelDesigner">Concepteur de niveau supérieur à analyser.</param>
        <param name="rectangle">Zone du concepteur de niveau supérieur à analyser.</param>
        <summary>Récupère les concepteurs appartenant à l'activité racine spécifiée qui croisent une zone spécifiée.</summary>
        <returns>Tableau d'objets <see cref="T:System.Workflow.ComponentModel.Design.ActivityDesigner" /> qui croisent une partie du Rectangle spécifié.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextSelectableObject">
      <MemberSignature Language="C#" Value="public virtual object GetNextSelectableObject (object current, System.Workflow.ComponentModel.Design.DesignerNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetNextSelectableObject(object current, valuetype System.Workflow.ComponentModel.Design.DesignerNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.GetNextSelectableObject(System.Object,System.Workflow.ComponentModel.Design.DesignerNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetNextSelectableObject (current As Object, direction As DesignerNavigationDirection) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetNextSelectableObject(System::Object ^ current, System::Workflow::ComponentModel::Design::DesignerNavigationDirection direction);" />
      <MemberSignature Language="F#" Value="abstract member GetNextSelectableObject : obj * System.Workflow.ComponentModel.Design.DesignerNavigationDirection -&gt; obj&#xA;override this.GetNextSelectableObject : obj * System.Workflow.ComponentModel.Design.DesignerNavigationDirection -&gt; obj" Usage="compositeActivityDesigner.GetNextSelectableObject (current, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="current" Type="System.Object" />
        <Parameter Name="direction" Type="System.Workflow.ComponentModel.Design.DesignerNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="current">Objet actuel dans l'ordre de navigation.</param>
        <param name="direction">Direction dans laquelle naviguer. 0 = suivant ; 1 = précédent ; 2 = gauche ; 3 = droite.</param>
        <summary>Obtient l'objet suivant dans l'ordre de navigation.</summary>
        <returns>L'objet suivant dans l'ordre de navigation.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.GetNextSelectableObject%2A> déplace la sélection sur l'objet sélectionnable suivant dans la direction spécifiée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Glyphs">
      <MemberSignature Language="C#" Value="protected internal override System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection Glyphs { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection Glyphs" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Glyphs" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides ReadOnly Property Glyphs As ActivityDesignerGlyphCollection" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Workflow::ComponentModel::Design::ActivityDesignerGlyphCollection ^ Glyphs { System::Workflow::ComponentModel::Design::ActivityDesignerGlyphCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Glyphs : System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Glyphs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection de glyphes avec lequel orner le concepteur d’activités composite.</summary>
        <value><see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerGlyphCollection" /> qui contient les glyphes à afficher sur le concepteur.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public override System.Workflow.ComponentModel.Design.HitTestInfo HitTest (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Workflow.ComponentModel.Design.HitTestInfo HitTest(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.HitTest(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Workflow::ComponentModel::Design::HitTestInfo ^ HitTest(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="override this.HitTest : System.Drawing.Point -&gt; System.Workflow.ComponentModel.Design.HitTestInfo" Usage="compositeActivityDesigner.HitTest point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Workflow.ComponentModel.Design.HitTestInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point"><see cref="T:System.Drawing.Point" /> qui représente une coordonnée x et y unique.</param>
        <summary>Obtient des informations sur le <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> qui se trouve à un point spécifique de l'écran.</summary>
        <returns><see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> qui contient des informations sur le <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> à un point spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Workflow.ComponentModel.Design.HitTestInfo> est utilisé avec la méthode <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.HitTest%2A> du contrôle <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> pour déterminer la partie d'un contrôle <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> sur laquelle vous avez cliqué. Le <xref:System.Workflow.ComponentModel.Design.HitTestInfo> contient les coordonnées logiques du point sur le <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> où le clic de souris a été effectué.  
  
 La méthode <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.HitTest%2A> reçoit un <xref:System.Drawing.Point> qui contient une coordonnée x et y.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageRectangle">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle ImageRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle ImageRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property ImageRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Rectangle ImageRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.ImageRectangle : System.Drawing.Rectangle" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur pour les limites englobantes de l'image associée au concepteur en coordonnées logiques.</summary>
        <value>Rectangle qui englobe le <see cref="T:System.Drawing.Image" /> affiché pour le <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle%2A> pour récupérer les coordonnées du rectangle qui englobe l'image associée au concepteur. Vous pouvez utiliser ces coordonnées pour dessiner des connecteurs ou recouvrir des graphiques.  
  
   
  
## Examples  
 L'exemple qui suit montre comment substituer la propriété <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle%2A>. Dans cet exemple, le <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle%2A> est calculé à l'aide des limites du <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.  
  
 [!code-csharp[WF_Samples#74](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#74)]
 [!code-vb[WF_Samples#74](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#74)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected override void Initialize (System.Workflow.ComponentModel.Activity activity);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Initialize(class System.Workflow.ComponentModel.Activity activity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Initialize(System.Workflow.ComponentModel.Activity)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Initialize(System::Workflow::ComponentModel::Activity ^ activity);" />
      <MemberSignature Language="F#" Value="override this.Initialize : System.Workflow.ComponentModel.Activity -&gt; unit" Usage="compositeActivityDesigner.Initialize activity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activity" Type="System.Workflow.ComponentModel.Activity" />
      </Parameters>
      <Docs>
        <param name="activity"><see cref="T:System.Workflow.ComponentModel.Activity" /> avec lequel le concepteur doit être initialisé.</param>
        <summary>Initialise le concepteur avec le <see cref="T:System.Workflow.ComponentModel.Activity" /> associé.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Initialize%2A> charge le concepteur avec le <xref:System.Workflow.ComponentModel.Activity> spécifié. Le concepteur charge le service d'activité, met à jour les verbes associés à l'activité et assigne le texte et l'image par défaut au concepteur.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InsertActivities">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Insère des activités dans le concepteur.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InsertActivities">
      <MemberSignature Language="C#" Value="public virtual void InsertActivities (System.Workflow.ComponentModel.Design.HitTestInfo insertLocation, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToInsert);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertActivities(class System.Workflow.ComponentModel.Design.HitTestInfo insertLocation, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToInsert) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertActivities (insertLocation As HitTestInfo, activitiesToInsert As ReadOnlyCollection(Of Activity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertActivities(System::Workflow::ComponentModel::Design::HitTestInfo ^ insertLocation, System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activitiesToInsert);" />
      <MemberSignature Language="F#" Value="abstract member InsertActivities : System.Workflow.ComponentModel.Design.HitTestInfo * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; unit&#xA;override this.InsertActivities : System.Workflow.ComponentModel.Design.HitTestInfo * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; unit" Usage="compositeActivityDesigner.InsertActivities (insertLocation, activitiesToInsert)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="insertLocation" Type="System.Workflow.ComponentModel.Design.HitTestInfo" />
        <Parameter Name="activitiesToInsert" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="insertLocation">Emplacement dans le concepteur où insérer les activités.</param>
        <param name="activitiesToInsert">Liste des activités à insérer.</param>
        <summary>Insère les activités spécifiées dans le concepteur à l'emplacement indiqué.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities%2A> pour insérer une liste d'activités dans l'emplacement spécifié.  
  
 Avant d'appeler <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities%2A>, utilisez <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanInsertActivities%2A> pour vous assurer que les activités spécifiées peuvent être insérées.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertActivities">
      <MemberSignature Language="C#" Value="public static void InsertActivities (System.Workflow.ComponentModel.Design.CompositeActivityDesigner compositeActivityDesigner, System.Workflow.ComponentModel.Design.HitTestInfo insertLocation, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToInsert, string undoTransactionDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InsertActivities(class System.Workflow.ComponentModel.Design.CompositeActivityDesigner compositeActivityDesigner, class System.Workflow.ComponentModel.Design.HitTestInfo insertLocation, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToInsert, string undoTransactionDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities(System.Workflow.ComponentModel.Design.CompositeActivityDesigner,System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity},System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InsertActivities(System::Workflow::ComponentModel::Design::CompositeActivityDesigner ^ compositeActivityDesigner, System::Workflow::ComponentModel::Design::HitTestInfo ^ insertLocation, System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activitiesToInsert, System::String ^ undoTransactionDescription);" />
      <MemberSignature Language="F#" Value="static member InsertActivities : System.Workflow.ComponentModel.Design.CompositeActivityDesigner * System.Workflow.ComponentModel.Design.HitTestInfo * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; * string -&gt; unit" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities (compositeActivityDesigner, insertLocation, activitiesToInsert, undoTransactionDescription)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="compositeActivityDesigner" Type="System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />
        <Parameter Name="insertLocation" Type="System.Workflow.ComponentModel.Design.HitTestInfo" />
        <Parameter Name="activitiesToInsert" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
        <Parameter Name="undoTransactionDescription" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="compositeActivityDesigner">Concepteur dans lequel les activités seront insérées.</param>
        <param name="insertLocation">Emplacement dans le concepteur où les activités seront insérées.</param>
        <param name="activitiesToInsert">Liste des activités à insérer.</param>
        <param name="undoTransactionDescription">Description de la transaction de concepteur créée par l’insertion.</param>
        <summary>Insère des activités dans le concepteur à l’emplacement spécifié à l’aide d’une transaction.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities%2A> pour insérer une liste d'activités dans l'activité composite.  
  
 Avant d'appeler <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities%2A>, utilisez <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanInsertActivities%2A> pour vous assurer que la liste d'activités spécifiée peut être insérée.  
  
   
  
## Examples  
 L’exemple suivant montre comment ajouter une nouvelle branche à l’aide d’un concepteur dérivé de la classe <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>.  Si <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.CanInsertActivities%2A> retourne la valeur true, une nouvelle branche est créée à l’aide de la méthode <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.InsertActivities%2A>.  
  
 [!code-csharp[WF_Samples#28](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#28)]
 [!code-vb[WF_Samples#28](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContainedDesignerVisible">
      <MemberSignature Language="C#" Value="public virtual bool IsContainedDesignerVisible (System.Workflow.ComponentModel.Design.ActivityDesigner containedDesigner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsContainedDesignerVisible(class System.Workflow.ComponentModel.Design.ActivityDesigner containedDesigner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.IsContainedDesignerVisible(System.Workflow.ComponentModel.Design.ActivityDesigner)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsContainedDesignerVisible (containedDesigner As ActivityDesigner) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsContainedDesignerVisible(System::Workflow::ComponentModel::Design::ActivityDesigner ^ containedDesigner);" />
      <MemberSignature Language="F#" Value="abstract member IsContainedDesignerVisible : System.Workflow.ComponentModel.Design.ActivityDesigner -&gt; bool&#xA;override this.IsContainedDesignerVisible : System.Workflow.ComponentModel.Design.ActivityDesigner -&gt; bool" Usage="compositeActivityDesigner.IsContainedDesignerVisible containedDesigner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containedDesigner" Type="System.Workflow.ComponentModel.Design.ActivityDesigner" />
      </Parameters>
      <Docs>
        <param name="containedDesigner">Concepteur contenu dans le CompositeActivityDesigner dont la visibilité doit être testée.</param>
        <summary>Obtient une valeur qui indique si le concepteur contenu est visible.</summary>
        <returns><see langword="true" /> si le concepteur contenu est visible ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.IsContainedDesignerVisible%2A> pour déterminer si le concepteur spécifié est visible.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEditable">
      <MemberSignature Language="C#" Value="public bool IsEditable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEditable" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.IsEditable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEditable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEditable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEditable : bool" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.IsEditable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si le concepteur peut être modifié.</summary>
        <value><see langword="true" /> si le concepteur peut être modifié ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il est possible que certaines activités personnalisées ne vous permettent pas de modifier les propriétés ou d'autres paramètres dans l'environnement de conception. La propriété <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.IsEditable%2A> doit déterminer si le concepteur autorise les modifications au moment de la conception.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LastSelectableObject">
      <MemberSignature Language="C#" Value="public virtual object LastSelectableObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object LastSelectableObject" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LastSelectableObject" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property LastSelectableObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ LastSelectableObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LastSelectableObject : obj" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LastSelectableObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le dernier objet sélectionnable contenu dans le <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</summary>
        <value>Dernier objet sélectionnable contenu dans le <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En cas de substitution dans une classe dérivée, utilisez <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LastSelectableObject%2A> pour retourner le dernier objet sélectionnable contenu dans le concepteur.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (System.IO.BinaryReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(class System.IO.BinaryReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LoadViewState(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (reader As BinaryReader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::IO::BinaryReader ^ reader);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : System.IO.BinaryReader -&gt; unit" Usage="compositeActivityDesigner.LoadViewState reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="reader"><see cref="T:System.IO.BinaryReader" /> à partir duquel charger l'état d'affichage. </param>
        <summary>Restaure l'état d'affichage à partir d'un flux binaire.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LoadViewState%2A> pour restaurer un état préalablement enregistré du concepteur à l'aide de <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.SaveViewState%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public override System.Drawing.Point Location { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Point Location" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Location" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Location As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Point Location { System::Drawing::Point get(); void set(System::Drawing::Point value); };" />
      <MemberSignature Language="F#" Value="member this.Location : System.Drawing.Point with get, set" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Location" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'emplacement du concepteur en coordonnées logiques.</summary>
        <value>Emplacement du concepteur en coordonnées logiques.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.Location%2A> pour positionner le concepteur au moment de la conception ou de l'exécution.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveActivities">
      <MemberSignature Language="C#" Value="public virtual void MoveActivities (System.Workflow.ComponentModel.Design.HitTestInfo moveLocation, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToMove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MoveActivities(class System.Workflow.ComponentModel.Design.HitTestInfo moveLocation, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToMove) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.MoveActivities(System.Workflow.ComponentModel.Design.HitTestInfo,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub MoveActivities (moveLocation As HitTestInfo, activitiesToMove As ReadOnlyCollection(Of Activity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MoveActivities(System::Workflow::ComponentModel::Design::HitTestInfo ^ moveLocation, System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activitiesToMove);" />
      <MemberSignature Language="F#" Value="abstract member MoveActivities : System.Workflow.ComponentModel.Design.HitTestInfo * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; unit&#xA;override this.MoveActivities : System.Workflow.ComponentModel.Design.HitTestInfo * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; unit" Usage="compositeActivityDesigner.MoveActivities (moveLocation, activitiesToMove)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="moveLocation" Type="System.Workflow.ComponentModel.Design.HitTestInfo" />
        <Parameter Name="activitiesToMove" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="moveLocation"><see cref="T:System.Workflow.ComponentModel.Design.HitTestInfo" /> qui décrit l'emplacement vers lequel déplacer les activités.</param>
        <param name="activitiesToMove">Liste des activités à déplacer.</param>
        <summary>Déplace les activités d'un concepteur vers un autre.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.MoveActivities%2A> pour déplacer une liste d'activités d'une activité composite vers une autre.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveDesigners">
      <MemberSignature Language="C#" Value="public static void MoveDesigners (System.Workflow.ComponentModel.Design.ActivityDesigner activityDesigner, bool moveBack);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void MoveDesigners(class System.Workflow.ComponentModel.Design.ActivityDesigner activityDesigner, bool moveBack) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.MoveDesigners(System.Workflow.ComponentModel.Design.ActivityDesigner,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void MoveDesigners(System::Workflow::ComponentModel::Design::ActivityDesigner ^ activityDesigner, bool moveBack);" />
      <MemberSignature Language="F#" Value="static member MoveDesigners : System.Workflow.ComponentModel.Design.ActivityDesigner * bool -&gt; unit" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.MoveDesigners (activityDesigner, moveBack)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activityDesigner" Type="System.Workflow.ComponentModel.Design.ActivityDesigner" />
        <Parameter Name="moveBack" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="activityDesigner">Concepteur d'activités à déplacer.</param>
        <param name="moveBack"><see langword="true" /> pour déplacer le concepteur vers l'arrière ; <see langword="false" /> pour déplacer le concepteur vers l'avant.</param>
        <summary>Déplace un concepteur vers l'avant ou vers l'arrière dans l'index au sein de l'activité composite.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.MoveDesigners%2A> pour déplacer une activité contenue dans l'activité composite vers l'avant ou vers l'arrière dans l'index des activités contenues.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContainedActivitiesChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContainedActivitiesChanged (System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs listChangeArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContainedActivitiesChanged(class System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs listChangeArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivitiesChanged(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContainedActivitiesChanged (listChangeArgs As ActivityCollectionChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContainedActivitiesChanged(System::Workflow::ComponentModel::ActivityCollectionChangeEventArgs ^ listChangeArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnContainedActivitiesChanged : System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs -&gt; unit&#xA;override this.OnContainedActivitiesChanged : System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs -&gt; unit" Usage="compositeActivityDesigner.OnContainedActivitiesChanged listChangeArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listChangeArgs" Type="System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="listChangeArgs"><see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" /> qui contient des informations sur la modification.</param>
        <summary>Se produit lorsque plusieurs activités contenues dans les concepteurs ont subi des modifications. Cela se produit par exemple lorsqu'une nouvelle activité enfant est ajoutée ou lorsqu'une activité enfant existante est supprimée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivitiesChanged%2A> pour répondre aux modifications des activités au sein de l'activité composite.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="listChangeArgs" /> contient une référence Null (<see langword="Nothing" /> en Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnContainedActivitiesChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnContainedActivitiesChanging (System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs listChangeArgs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContainedActivitiesChanging(class System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs listChangeArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivitiesChanging(System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContainedActivitiesChanging (listChangeArgs As ActivityCollectionChangeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContainedActivitiesChanging(System::Workflow::ComponentModel::ActivityCollectionChangeEventArgs ^ listChangeArgs);" />
      <MemberSignature Language="F#" Value="abstract member OnContainedActivitiesChanging : System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs -&gt; unit&#xA;override this.OnContainedActivitiesChanging : System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs -&gt; unit" Usage="compositeActivityDesigner.OnContainedActivitiesChanging listChangeArgs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="listChangeArgs" Type="System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" />
      </Parameters>
      <Docs>
        <param name="listChangeArgs"><see cref="T:System.Workflow.ComponentModel.ActivityCollectionChangeEventArgs" /> qui contient des informations sur la modification.</param>
        <summary>Se produit lorsqu'une activité ou un groupe d'activités contenu dans le concepteur subissent des modifications. Cela se produit par exemple lorsqu'une nouvelle activité enfant est ajoutée ou lorsqu'une activité enfant existante est supprimée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivitiesChanging%2A> pour répondre aux modifications apportées aux activités contenues dans l'activité composite.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="listChangeArgs" /> contient une référence Null (<see langword="Nothing" /> en Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnContainedActivityChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnContainedActivityChanged (System.Workflow.ComponentModel.Design.ActivityChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContainedActivityChanged(class System.Workflow.ComponentModel.Design.ActivityChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivityChanged(System.Workflow.ComponentModel.Design.ActivityChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContainedActivityChanged (e As ActivityChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContainedActivityChanged(System::Workflow::ComponentModel::Design::ActivityChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContainedActivityChanged : System.Workflow.ComponentModel.Design.ActivityChangedEventArgs -&gt; unit&#xA;override this.OnContainedActivityChanged : System.Workflow.ComponentModel.Design.ActivityChangedEventArgs -&gt; unit" Usage="compositeActivityDesigner.OnContainedActivityChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Workflow.ComponentModel.Design.ActivityChangedEventArgs" /> qui contient des informations sur la modification.</param>
        <summary>Se produit lorsqu'une activité contenue dans le concepteur a subi des modifications.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnContainedActivityChanged%2A> pour répondre aux modifications apportées aux activités contenues dans l'activité composite.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="e" /> contient une référence Null (<see langword="Nothing" /> en Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="compositeActivityDesigner.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.KeyEventArgs" /> qui contient les données d'événement.</param>
        <summary>Appelé lorsqu'une touche est enfoncé alors que le concepteur a le focus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLayoutPosition">
      <MemberSignature Language="C#" Value="protected override void OnLayoutPosition (System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLayoutPosition(class System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnLayoutPosition(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLayoutPosition (e As ActivityDesignerLayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLayoutPosition(System::Workflow::ComponentModel::Design::ActivityDesignerLayoutEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLayoutPosition : System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs -&gt; unit" Usage="compositeActivityDesigner.OnLayoutPosition e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> qui contient les données d'événement.</param>
        <summary>Exécute des tâches de disposition et de positionnement pour les signaux visuels ou concepteurs contenus sur le <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" /> de manière à repositionner leurs activités enfants.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnLayoutPosition%2A> effectue des tâches de disposition pour tous les concepteurs d'activité enfants que le <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner> contient.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="e" /> contient une référence Null (<see langword="Nothing" /> en Visual Basic).</exception>
      </Docs>
    </Member>
    <Member MemberName="OnLayoutSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size OnLayoutSize (System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Drawing.Size OnLayoutSize(class System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnLayoutSize(System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnLayoutSize (e As ActivityDesignerLayoutEventArgs) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Drawing::Size OnLayoutSize(System::Workflow::ComponentModel::Design::ActivityDesignerLayoutEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLayoutSize : System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs -&gt; System.Drawing.Size" Usage="compositeActivityDesigner.OnLayoutSize e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerLayoutEventArgs" /> qui contient les données d'événement.</param>
        <summary>Appelé pour calculer la taille nécessaire d’une activité en fonction de son état actuel (réduit ou développé) et de sa liste d’activités enfants.</summary>
        <returns><see cref="T:System.Drawing.Size" /> qui contient les nouveaux paramètres de taille du <see cref="T:System.Workflow.ComponentModel.Design.CompositeActivityDesigner" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnLayoutSize%2A> effectue des tâches de redimensionnement pour chaque concepteur d'activités que contient le concepteur d'activités composite.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Forms.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="compositeActivityDesigner.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Windows.Forms.MouseEventArgs" /> qui contient les données d'événement.</param>
        <summary>Appelé lors d'un clic sur la souris alors que le pointeur se trouve dans les limites du concepteur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les lignes suivantes décrivent de quelle façon et à quel moment se déclenchent les événements liés aux opérations de glisser-déposer.  
  
 Si le concepteur est une cible de dépôt valide, l’événement <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> est déclenché avec l’effet de glisser-déposer spécifié. Pour obtenir la liste des effets de glisser-déposer, consultez l’énumération <xref:System.Windows.Forms.DragDropEffects>.  
  
-   Les modifications de la position du pointeur, de l'état du clavier et de l'état du bouton de souris sont suivies.  
  
-   Si l'utilisateur se déplace hors des limites du concepteur, l'événement <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> se déclenche.  
  
-   Si la souris entre dans un autre concepteur, le <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragEnter%2A> de ce concepteur se déclenche.  
  
-   Si la souris se déplace uniquement dans les limites du même concepteur, l'événement <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> est déclenché.  
  
-   En cas de modification de l’état du clavier ou de la souris, l’événement <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnQueryContinueDrag%2A> est déclenché et détermine s’il faut continuer l’opération glisser, déposer les données ou annuler l’opération en fonction de la valeur de la propriété `Action` de l’événement <xref:System.Windows.Forms.QueryContinueDragEventArgs>.  
  
 Si la valeur est `DragAction.Continue`, l'événement <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> est déclenché pour poursuivre l'opération et l'événement <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> est déclenché avec le nouvel effet, pour fournir une rétroaction visuelle appropriée. Pour obtenir la liste des effets de dépôt valides, consultez l’énumération <xref:System.Windows.Forms.DragDropEffects>.  
  
> [!NOTE]
>  Les événements <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragOver%2A> et <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnGiveFeedback%2A> sont associés de telle sorte que lorsque la souris se trouve sur la cible de déplacement, l'utilisateur reçoit les commentaires les plus actuels sur la position de la souris.  
  
 Si la valeur est `DragAction.Drop`, la valeur de l’effet de dépôt est retournée à la source. Ainsi, l’application source peut effectuer l’opération appropriée sur les données sources ; par exemple, couper les données si l’opération était un déplacement.  
  
 Si la valeur est `DragAction.Cancel`, l'événement <xref:System.Workflow.ComponentModel.Design.ActivityDesigner.OnDragLeave%2A> est déclenché.  
  
 Pour plus d’informations sur la façon de gérer les événements, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (e As ActivityDesignerPaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Workflow::ComponentModel::Design::ActivityDesignerPaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs -&gt; unit" Usage="compositeActivityDesigner.OnPaint e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" /> qui contient les données de dessin.</param>
        <summary>Dessine la représentation visuelle d'une activité composite au moment de la conception.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnThemeChange">
      <MemberSignature Language="C#" Value="protected override void OnThemeChange (System.Workflow.ComponentModel.Design.ActivityDesignerTheme designerTheme);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnThemeChange(class System.Workflow.ComponentModel.Design.ActivityDesignerTheme designerTheme) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnThemeChange(System.Workflow.ComponentModel.Design.ActivityDesignerTheme)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnThemeChange (designerTheme As ActivityDesignerTheme)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnThemeChange(System::Workflow::ComponentModel::Design::ActivityDesignerTheme ^ designerTheme);" />
      <MemberSignature Language="F#" Value="override this.OnThemeChange : System.Workflow.ComponentModel.Design.ActivityDesignerTheme -&gt; unit" Usage="compositeActivityDesigner.OnThemeChange designerTheme" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designerTheme" Type="System.Workflow.ComponentModel.Design.ActivityDesignerTheme" />
      </Parameters>
      <Docs>
        <param name="designerTheme"><see cref="T:System.Workflow.ComponentModel.Design.ActivityDesignerTheme" /> qui contient les données d'événement.</param>
        <summary>Signale au concepteur que le thème associé a changé.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnThemeChange%2A> se produit dès que le thème associé au concepteur change. Lorsque le thème change, il est probable que l'apparence et la convivialité du concepteur doivent changer.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PaintContainedDesigners">
      <MemberSignature Language="C#" Value="protected void PaintContainedDesigners (System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PaintContainedDesigners(class System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.PaintContainedDesigners(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PaintContainedDesigners (e As ActivityDesignerPaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PaintContainedDesigners(System::Workflow::ComponentModel::Design::ActivityDesignerPaintEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="member this.PaintContainedDesigners : System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs -&gt; unit" Usage="compositeActivityDesigner.PaintContainedDesigners e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><see cref="T:System.EventArgs" /> à utiliser pour peindre.</param>
        <summary>Ajuste la zone de découpage sur l'objet Graphics et appelle <see cref="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.OnPaint(System.Workflow.ComponentModel.Design.ActivityDesignerPaintEventArgs)" /> sur tous les concepteurs contenus.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="RemoveActivities">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Supprime toutes les activités du concepteur d'activités composite.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.RemoveActivities%2A> pour supprimer les activités de l'activité composite.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="RemoveActivities">
      <MemberSignature Language="C#" Value="public virtual void RemoveActivities (System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveActivities(class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.RemoveActivities(System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveActivities (activitiesToRemove As ReadOnlyCollection(Of Activity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveActivities(System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activitiesToRemove);" />
      <MemberSignature Language="F#" Value="abstract member RemoveActivities : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; unit&#xA;override this.RemoveActivities : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; -&gt; unit" Usage="compositeActivityDesigner.RemoveActivities activitiesToRemove" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activitiesToRemove" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
      </Parameters>
      <Docs>
        <param name="activitiesToRemove">Liste d'activités à supprimer du concepteur.</param>
        <summary>Supprime une liste d'activités du concepteur d'activités composite.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Supprime la liste d'activités de l'activité composite.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveActivities">
      <MemberSignature Language="C#" Value="public static void RemoveActivities (IServiceProvider serviceProvider, System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; activitiesToRemove, string transactionDescription);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveActivities(class System.IServiceProvider serviceProvider, class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Workflow.ComponentModel.Activity&gt; activitiesToRemove, string transactionDescription) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.RemoveActivities(System.IServiceProvider,System.Collections.ObjectModel.ReadOnlyCollection{System.Workflow.ComponentModel.Activity},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveActivities (serviceProvider As IServiceProvider, activitiesToRemove As ReadOnlyCollection(Of Activity), transactionDescription As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveActivities(IServiceProvider ^ serviceProvider, System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activitiesToRemove, System::String ^ transactionDescription);" />
      <MemberSignature Language="F#" Value="static member RemoveActivities : IServiceProvider * System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt; * string -&gt; unit" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.RemoveActivities (serviceProvider, activitiesToRemove, transactionDescription)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="activitiesToRemove" Type="System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Workflow.ComponentModel.Activity&gt;" />
        <Parameter Name="transactionDescription" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Fournisseur de services associé au concepteur.</param>
        <param name="activitiesToRemove">Liste des activités à supprimer.</param>
        <param name="transactionDescription">Description de la transaction créée.</param>
        <summary>Supprime la liste d’activités du concepteur à l’aide d’une transaction.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.RemoveActivities%2A> pour supprimer la liste d’activités spécifiée de l’activité composite dans la transaction spécifiée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override void SaveViewState (System.IO.BinaryWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SaveViewState(class System.IO.BinaryWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.SaveViewState(System.IO.BinaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SaveViewState (writer As BinaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SaveViewState(System::IO::BinaryWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : System.IO.BinaryWriter -&gt; unit" Usage="compositeActivityDesigner.SaveViewState writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.IO.BinaryWriter" /> dans lequel l'état d'affichage est stocké.</param>
        <summary>Enregistre l'état d'affichage dans un flux binaire.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.SaveViewState%2A> pour enregistrer l'état d'une activité composite dans un flux de données. Pour restaurer l'état d'affiche, utilisez <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.LoadViewState%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeActivitiesToDataObject">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.IDataObject SerializeActivitiesToDataObject (IServiceProvider serviceProvider, System.Workflow.ComponentModel.Activity[] activities);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.IDataObject SerializeActivitiesToDataObject(class System.IServiceProvider serviceProvider, class System.Workflow.ComponentModel.Activity[] activities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.SerializeActivitiesToDataObject(System.IServiceProvider,System.Workflow.ComponentModel.Activity[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SerializeActivitiesToDataObject (serviceProvider As IServiceProvider, activities As Activity()) As IDataObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::IDataObject ^ SerializeActivitiesToDataObject(IServiceProvider ^ serviceProvider, cli::array &lt;System::Workflow::ComponentModel::Activity ^&gt; ^ activities);" />
      <MemberSignature Language="F#" Value="static member SerializeActivitiesToDataObject : IServiceProvider * System.Workflow.ComponentModel.Activity[] -&gt; System.Windows.Forms.IDataObject" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.SerializeActivitiesToDataObject (serviceProvider, activities)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.IDataObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="activities" Type="System.Workflow.ComponentModel.Activity[]" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Service de sérialisation de composants.</param>
        <param name="activities">Tableau d'activités à sérialiser.</param>
        <summary>Sérialise un tableau d’activités en un <see cref="T:System.Windows.Forms.IDataObject" /> qui peut être placé dans le Presse-papiers ou utilisé lors de l’initialisation d’une opération de glisser-déposer.</summary>
        <returns><see cref="T:System.Windows.Forms.IDataObject" /> qui contient des activités sérialisées.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TextRectangle">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Rectangle TextRectangle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Rectangle TextRectangle" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TextRectangle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TextRectangle As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Rectangle TextRectangle { System::Drawing::Rectangle get(); };" />
      <MemberSignature Language="F#" Value="member this.TextRectangle : System.Drawing.Rectangle" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TextRectangle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur du rectangle de description en coordonnées logiques.</summary>
        <value>Valeur du rectangle de description en coordonnées logiques.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Permet de déterminer l'emplacement sur le concepteur où la description de texte sera affichée.  
  
   
  
## Examples  
 L'exemple qui suit montre comment substituer la propriété <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TextRectangle%2A>. Dans cet exemple, le <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TextRectangle%2A> est calculé à l'aide des limites du <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner>, ainsi que de l'emplacement et de la taille du <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.ImageRectangle%2A>.  
  
 [!code-csharp[WF_Samples#75](~/samples/snippets/csharp/VS_Snippets_CFX/wf_samples/cs/snippets.cs#75)]
 [!code-vb[WF_Samples#75](~/samples/snippets/visualbasic/VS_Snippets_CFX/wf_samples/vb/snippets.vb#75)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleHeight">
      <MemberSignature Language="C#" Value="protected virtual int TitleHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TitleHeight" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TitleHeight" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TitleHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int TitleHeight { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TitleHeight : int" Usage="System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TitleHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la hauteur de la zone de titre du concepteur.</summary>
        <value>Hauteur en pixels de la zone de titre du concepteur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Workflow.ComponentModel.Design.CompositeActivityDesigner.TitleHeight%2A> décrit la hauteur de la zone de titre du concepteur. Il peut généralement contenir l’en-tête, l’icône, ainsi que le bouton de développement ou de réduction.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>