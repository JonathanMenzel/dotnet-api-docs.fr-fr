<Type Name="HttpGetClientProtocol" FullName="System.Web.Services.Protocols.HttpGetClientProtocol">
  <Metadata><Meta Name="ms.openlocfilehash" Value="355fdc2b93a4a6df6ad5b8362fc0832b5f9236ae" /><Meta Name="ms.sourcegitcommit" Value="7461f9e28c2f184bd1596e6f07c25a3f34984516" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="03/28/2019" /><Meta Name="ms.locfileid" Value="58548664" /></Metadata><TypeSignature Language="C#" Value="public class HttpGetClientProtocol : System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HttpGetClientProtocol extends System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.HttpGetClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpGetClientProtocol&#xA;Inherits HttpSimpleClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpGetClientProtocol : System::Web::Services::Protocols::HttpSimpleClientProtocol" />
  <TypeSignature Language="F#" Value="type HttpGetClientProtocol = class&#xA;    inherit HttpSimpleClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpSimpleClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Classe de base de proxies clients de services Web XML qui utilisent le protocole HTTP-GET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’un client de service Web XML utilise le protocole HTTP-GET, les paramètres sont encodés dans l’URL et la réponse est renvoyée en XML brut.  
  
 Si vous générez un client de service Web XML à l’aide d’ASP.NET, puis une classe proxy dérivée indirectement ou directement à partir de <xref:System.Web.Services.Protocols.WebClientProtocol> doit être créé pour le service Web XML que vous souhaitez appeler. Lorsque le client du service Web XML appelle le service Web XML à l’aide de HTTP, dérivez la classe de proxy de <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, qui dérive à son tour de <xref:System.Web.Services.Protocols.WebClientProtocol>.  
  
 <xref:System.Web.Services.Protocols.HttpGetClientProtocol> et <xref:System.Web.Services.Protocols.HttpPostClientProtocol> dérivent <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol>, fournissant la prise en charge pour l’appel d’une méthode de service Web XML en utilisant les protocoles HTTP-GET et HTTP-POST respectivement. Clients appelant un service Web XML à l’aide de SOAP doivent dériver de <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>.  
  
 Pour plus d’informations sur la création d’une classe proxy, consultez [création d’un Proxy de Service Web XML](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/d2s8y7bs(v=vs.100)).  
  
   
  
## Examples  
 L’exemple suivant est une classe proxy générée par Wsdl.exe pour la `Math` service Web XML ci-dessous. La classe proxy dérivée de <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, qui dérive de la classe abstraite <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> classe.  
  
 [!code-cpp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpGetClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/VB/source.vb#1)]  
  
 L’exemple suivant est le `Math` service Web XML, à partir de laquelle la classe proxy ci-dessus a été créée.  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.HttpPostClientProtocol" />
    <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpGetClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpGetClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpGetClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Services.Protocols.HttpGetClientProtocol" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-cpp[HttpGetClientProtocol_Constructor#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpGetClientProtocol_Constructor/CPP/httpgetclientprotocol_constructor.cpp#1)]
 [!code-csharp[HttpGetClientProtocol_Constructor#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpGetClientProtocol_Constructor/CS/httpgetclientprotocol_constructor.cs#1)]
 [!code-vb[HttpGetClientProtocol_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpGetClientProtocol_Constructor/VB/httpgetclientprotocol_constructor.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWebRequest">
      <MemberSignature Language="C#" Value="protected override System.Net.WebRequest GetWebRequest (Uri uri);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Net.WebRequest GetWebRequest(class System.Uri uri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpGetClientProtocol.GetWebRequest(System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Net::WebRequest ^ GetWebRequest(Uri ^ uri);" />
      <MemberSignature Language="F#" Value="override this.GetWebRequest : Uri -&gt; System.Net.WebRequest" Usage="httpGetClientProtocol.GetWebRequest uri" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.WebRequest</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="uri"><see cref="T:System.Uri" /> à utiliser lors de la création de <see cref="T:System.Net.WebRequest" />.</param>
        <summary>Crée une instance de <see cref="T:System.Net.WebRequest" /> pour l'URI spécifié.</summary>
        <returns>Instance <see cref="T:System.Net.WebRequest" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode remplace la version de base de <xref:System.Web.Services.Protocols.WebClientProtocol.GetWebRequest%2A> pour spécifier que la requête HTTP au service Web XML est effectuée à l’aide de HTTP-GET. En substituant cette méthode, des personnalisations supplémentaires peuvent être apportées à la <xref:System.Net.WebRequest> avant la demande de service Web XML de l’objet. Par exemple, vous pouvez ajouter un en-tête personnalisé à la demande.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Le paramètre <paramref name="uri" /> a la valeur null ou possède une longueur zéro.</exception>
        <altmember cref="T:System.Net.WebRequest" />
        <altmember cref="T:System.Web.Services.Protocols.WebClientProtocol" />
        <altmember cref="T:System.Uri" />
      </Docs>
    </Member>
  </Members>
</Type>