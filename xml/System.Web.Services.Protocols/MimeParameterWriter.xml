<Type Name="MimeParameterWriter" FullName="System.Web.Services.Protocols.MimeParameterWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="12c5239d92253e53af2ce55738eea504b5ac1711" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37603340" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MimeParameterWriter : System.Web.Services.Protocols.MimeFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MimeParameterWriter extends System.Web.Services.Protocols.MimeFormatter" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.MimeParameterWriter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MimeParameterWriter&#xA;Inherits MimeFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MimeParameterWriter abstract : System::Web::Services::Protocols::MimeFormatter" />
  <TypeSignature Language="F#" Value="type MimeParameterWriter = class&#xA;    inherit MimeFormatter" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.MimeFormatter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit une implémentation de base commune pour les writers des paramètres de la demande sortante pour les clients des services Web implémentés via le protocole HTTP mais sans SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Services.Protocols.MimeParameterWriter> et d’autres classes dans le <xref:System.Web.Services.Protocols> espace de noms prennent en charge les implémentations .NET Framework des services Web via les opérations HTTP-GET et HTTP-POST. Lecteurs et enregistreurs de service web sérialiser et désérialiser, respectivement, entre les paramètres ou les objets de retour des méthodes Web et les flux de demande ou réponse HTTP. Lecteurs et enregistreurs de service web utilisent HTTP pour le transport, mais n’échangent des messages à l’aide de la norme SOAP.  
  
 Le <xref:System.Web.Services.Protocols.MimeParameterWriter> classe établit un format d’écriture de demande commun pour l’écriture de côté client des paramètres de méthode Web dans le flux de demande HTTP.  
  
 Vous ne devez généralement pas à utiliser <xref:System.Web.Services.Protocols.MimeParameterWriter> ou ses classes descendantes directement. En revanche, lorsque l’outil Wsdl.exe génère le code proxy client selon les implémentations HTTP-GET ou HTTP-POST, il applique le <xref:System.Web.Services.Protocols.HttpMethodAttribute> à chaque méthode Web et définit l’attribut <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> propriété vers le type approprié.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.MimeFormatter" />
    <altmember cref="T:System.Web.Services.Protocols.UrlEncodedParameterWriter" />
    <altmember cref="T:System.Web.Services.Protocols.HtmlFormParameterWriter" />
    <altmember cref="T:System.Web.Services.Protocols.UrlParameterWriter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MimeParameterWriter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeParameterWriter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MimeParameterWriter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Services.Protocols.MimeParameterWriter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequestUrl">
      <MemberSignature Language="C#" Value="public virtual string GetRequestUrl (string url, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetRequestUrl(string url, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeParameterWriter.GetRequestUrl(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetRequestUrl (url As String, parameters As Object()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetRequestUrl(System::String ^ url, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="abstract member GetRequestUrl : string * obj[] -&gt; string&#xA;override this.GetRequestUrl : string * obj[] -&gt; string" Usage="mimeParameterWriter.GetRequestUrl (url, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="url">URL (Uniform Resource Locator) d'origine de la demande HTTP.</param>
        <param name="parameters">Valeurs des paramètres de la méthode Web à ajouter à l'URL, si nécessaire.</param>
        <summary>En cas de substitution dans une classe dérivée, modifie l'URL (Uniform Request Locator) d'une demande HTTP sortante.</summary>
        <returns>Objet <see cref="T:System.String" /> qui contient l'URL (Uniform Request Locator) de la demande HTTP sortante modifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Des classes dérivées de <xref:System.Web.Services.Protocols.MimeParameterWriter>, seuls <xref:System.Web.Services.Protocols.UrlParameterWriter> modifie l’URL de requête HTTP.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeRequest">
      <MemberSignature Language="C#" Value="public virtual void InitializeRequest (System.Net.WebRequest request, object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeRequest(class System.Net.WebRequest request, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeParameterWriter.InitializeRequest(System.Net.WebRequest,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeRequest (request As WebRequest, values As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeRequest(System::Net::WebRequest ^ request, cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRequest : System.Net.WebRequest * obj[] -&gt; unit&#xA;override this.InitializeRequest : System.Net.WebRequest * obj[] -&gt; unit" Usage="mimeParameterWriter.InitializeRequest (request, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Net.WebRequest" />
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="request">Demande sortante, où la classe <see cref="T:System.Net.WebRequest" /> autorise des protocoles de transport en plus du protocole HTTP.</param>
        <param name="values">Valeurs des paramètres de la méthode Web.</param>
        <summary>En cas de substitution dans une classe dérivée, initialise la demande HTTP sortante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Des classes dérivées de <xref:System.Web.Services.Protocols.MimeParameterWriter>, seuls <xref:System.Web.Services.Protocols.HtmlFormParameterWriter> implémente le <xref:System.Web.Services.Protocols.MimeParameterWriter> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequestEncoding">
      <MemberSignature Language="C#" Value="public virtual System.Text.Encoding RequestEncoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding RequestEncoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.MimeParameterWriter.RequestEncoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RequestEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ RequestEncoding { System::Text::Encoding ^ get(); void set(System::Text::Encoding ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RequestEncoding : System.Text.Encoding with get, set" Usage="System.Web.Services.Protocols.MimeParameterWriter.RequestEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l’encodage utilisé pour écrire les paramètres dans la requête HTTP.</summary>
        <value>L’encodage utilisé pour écrire les paramètres dans la requête HTTP.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un encodage, tel que représenté par le <xref:System.Text.Encoding> de classe, définit la transformation des caractères en une séquence d’octets.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UsesWriteRequest">
      <MemberSignature Language="C#" Value="public virtual bool UsesWriteRequest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsesWriteRequest" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.MimeParameterWriter.UsesWriteRequest" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property UsesWriteRequest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UsesWriteRequest { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.UsesWriteRequest : bool" Usage="System.Web.Services.Protocols.MimeParameterWriter.UsesWriteRequest" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si les valeurs des paramètres de la méthode Web sont sérialisées dans le corps de la demande HTTP sortante.</summary>
        <value>
          <see langword="true" /> si les valeurs des paramètres de la méthode Web sont sérialisées dans le corps de la demande HTTP sortante ; sinon <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Services.Protocols.MimeParameterWriter.UsesWriteRequest%2A> propriété détermine si le <xref:System.Web.Services.Protocols.MimeParameterWriter.WriteRequest%2A> méthode est appelée.  
  
 Le <xref:System.Web.Services.Protocols.MimeParameterWriter> implémentation d’une classe <xref:System.Web.Services.Protocols.MimeParameterWriter.UsesWriteRequest%2A> retourne une valeur de `false`. La seule classe dérivée qui substitue <xref:System.Web.Services.Protocols.MimeParameterWriter.UsesWriteRequest%2A> est <xref:System.Web.Services.Protocols.HtmlFormParameterWriter>, dont l’implémentation retourne une valeur de `true`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WriteRequest">
      <MemberSignature Language="C#" Value="public virtual void WriteRequest (System.IO.Stream requestStream, object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteRequest(class System.IO.Stream requestStream, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeParameterWriter.WriteRequest(System.IO.Stream,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteRequest (requestStream As Stream, values As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteRequest(System::IO::Stream ^ requestStream, cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="abstract member WriteRequest : System.IO.Stream * obj[] -&gt; unit&#xA;override this.WriteRequest : System.IO.Stream * obj[] -&gt; unit" Usage="mimeParameterWriter.WriteRequest (requestStream, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestStream" Type="System.IO.Stream" />
        <Parameter Name="values" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="requestStream">Flux d'entrée pour le corps de la demande HTTP sortante.</param>
        <param name="values">Valeurs des paramètres de la méthode Web.</param>
        <summary>En cas de substitution dans une classe dérivée, sérialise les valeurs des paramètres de la méthode Web dans un flux de données représentant le corps de la demande HTTP sortante.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Des classes dérivées de <xref:System.Web.Services.Protocols.MimeParameterWriter>, seuls <xref:System.Web.Services.Protocols.HtmlFormParameterWriter> implémente le <xref:System.Web.Services.Protocols.MimeParameterWriter.WriteRequest%2A> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>