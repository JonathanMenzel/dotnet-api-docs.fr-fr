<Type Name="HttpSimpleClientProtocol" FullName="System.Web.Services.Protocols.HttpSimpleClientProtocol">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ba2a15e866d0ac323f6ffa1f3130a66bc0bfe453" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52196918" /></Metadata><TypeSignature Language="C#" Value="public abstract class HttpSimpleClientProtocol : System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpSimpleClientProtocol extends System.Web.Services.Protocols.HttpWebClientProtocol" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpSimpleClientProtocol&#xA;Inherits HttpWebClientProtocol" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpSimpleClientProtocol abstract : System::Web::Services::Protocols::HttpWebClientProtocol" />
  <TypeSignature Language="F#" Value="type HttpSimpleClientProtocol = class&#xA;    inherit HttpWebClientProtocol" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Services.Protocols.HttpWebClientProtocol</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ccfe8-101">Représente la classe de base permettant de communiquer avec un service Web XML en utilisant les liaisons de protocoles simples HTTP-GET et HTTP-POST.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-101">Represents the base class for communicating with an XML Web service using the simple HTTP-GET and HTTP-POST protocols bindings.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccfe8-102">Cette classe spécifie la majeure partie de l’implémentation pour la communication avec un service Web XML sur HTTP à l’aide des encodeurs pour encoder les paramètres et valeurs de retour en formats MIME communs.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-102">This class specifies most of the implementation for communicating with an XML Web service over HTTP using encoders to encode the parameters and return values into common MIME formats.</span></span> <span data-ttu-id="ccfe8-103">Ces encodeurs dérivent la <xref:System.Web.Services.Protocols.MimeFormatter> classe.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-103">These encoders derive from the <xref:System.Web.Services.Protocols.MimeFormatter> class.</span></span> <span data-ttu-id="ccfe8-104">Par défaut, une classe proxy dérivée de <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> encode les paramètres en utilisant le type MIME application/x--www-form-urlencoded et la réponse en XML brut.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-104">By default, a proxy class deriving from <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> encodes parameters using the application/x-www-form-urlencoded MIME type and the response in plain XML.</span></span> <span data-ttu-id="ccfe8-105">Les formateurs mime personnalisé peuvent être spécifiés à l’aide de la <xref:System.Web.Services.Protocols.HttpMethodAttribute> d’attribut, toutefois, il n’existe aucune prise en charge pour l’intégration de cela dans une génération de proxy et la description de service.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-105">Custom mime formatters can be specified using the <xref:System.Web.Services.Protocols.HttpMethodAttribute> attribute, however, there is no support for integrating this into a service description and proxy generation.</span></span>  
  
 <span data-ttu-id="ccfe8-106">`Notes to Inheritors:` Lorsque vous substituez cette classe, vous pouvez introduire dans la classe dérivée, les méthodes qui sont spécifiques à un type particulier d’un service Web XML.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-106">`Notes to Inheritors:` When you override this class, you can introduce methods in the derived class that are specific to a particular type of an XML Web service.</span></span> <span data-ttu-id="ccfe8-107">Les méthodes simplement capturent les paramètres et appellent la classe de base pour faire le travail de communiquer avec le site.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-107">The methods simply capture the parameters, and call the base class to do the work of communicating with the site.</span></span> <span data-ttu-id="ccfe8-108">Si les méthodes introduites sont asynchrones, appelez le <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> et <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-108">If the introduced methods are asynchronous, call the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> and <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke%2A> methods.</span></span> <span data-ttu-id="ccfe8-109">Si les méthodes introduites sont synchrones, appelez le <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ccfe8-109">If the introduced methods are synchronous, call the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method.</span></span> <span data-ttu-id="ccfe8-110">Le constructeur substitué affecte généralement les <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> propriété à l’URI de la méthode de service Web XML.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-110">The overridden constructor typically sets the <xref:System.Web.Services.Protocols.WebClientProtocol.Url%2A> property to the URI of the XML Web service method.</span></span>  
  
 <span data-ttu-id="ccfe8-111">L’outil Web Services Description Language (Wsdl.exe) génère des classes dérivées de <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> pour obtenir une Description de Service donnée.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-111">The Web Services Description Language tool (Wsdl.exe) generates derived classes of <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> for a given Service Description.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccfe8-112">L’exemple de code suivant est une classe proxy générée par Wsdl.exe pour la `Math` service Web XML ci-dessous.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-112">The following code example is a proxy class generated by Wsdl.exe for the `Math` XML Web service below.</span></span> <span data-ttu-id="ccfe8-113">La classe proxy dérivée de <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, qui dérive de la classe abstraite <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> classe.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-113">The proxy class derives from <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, which derives from the abstract <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol> class.</span></span>  
  
 [!code-cpp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpGetClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpGetClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpGetClientProtocol Example/VB/source.vb#1)]  
  
 <span data-ttu-id="ccfe8-114">L’exemple de code suivant est le `Math` service Web XML, à partir de laquelle la classe proxy précédente a été créée.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-114">The following code example is the `Math` XML Web service, from which the preceding proxy class was created.</span></span>  
  
 [!code-cpp[Classic HttpSimpleClientProtocol Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol Example/CPP/source.cpp#1)]
 [!code-csharp[Classic HttpSimpleClientProtocol Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol Example/CS/source.cs#1)]
 [!code-vb[Classic HttpSimpleClientProtocol Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="ccfe8-115">Ce type est thread-safe.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-115">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.Web.Services.Protocols.SoapHttpClientProtocol" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpSimpleClientProtocol ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpSimpleClientProtocol();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ccfe8-116">Initialise une nouvelle instance de la classe <see cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" />.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-116">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.HttpSimpleClientProtocol" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginInvoke">
      <MemberSignature Language="C#" Value="protected IAsyncResult BeginInvoke (string methodName, string requestUrl, object[] parameters, AsyncCallback callback, object asyncState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IAsyncResult BeginInvoke(string methodName, string requestUrl, object[] parameters, class System.AsyncCallback callback, object asyncState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Function BeginInvoke (methodName As String, requestUrl As String, parameters As Object(), callback As AsyncCallback, asyncState As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; IAsyncResult ^ BeginInvoke(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters, AsyncCallback ^ callback, System::Object ^ asyncState);" />
      <MemberSignature Language="F#" Value="member this.BeginInvoke : string * string * obj[] * AsyncCallback * obj -&gt; IAsyncResult" Usage="httpSimpleClientProtocol.BeginInvoke (methodName, requestUrl, parameters, callback, asyncState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="requestUrl" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="asyncState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="ccfe8-117">Nom de la méthode de service Web XML.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-117">The name of the XML Web service method.</span></span></param>
        <param name="requestUrl"><span data-ttu-id="ccfe8-118">URL à utiliser lors de la création de <see cref="T:System.Net.WebRequest" />.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-118">The URL to use when creating the <see cref="T:System.Net.WebRequest" />.</span></span></param>
        <param name="parameters"><span data-ttu-id="ccfe8-119">Tableau d'objets contenant les paramètres à passer à la méthode de service Web XML.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-119">An array of objects containing the parameters to pass to the XML Web service method.</span></span> <span data-ttu-id="ccfe8-120">L'ordre des valeurs du tableau correspond à l'ordre des paramètres dans la méthode appelante de la classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-120">The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</span></span></param>
        <param name="callback"><span data-ttu-id="ccfe8-121">Délégué à appeler une fois l'appel de la méthode asynchrone terminé.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-121">The delegate to call when the asynchronous method call is complete.</span></span> <span data-ttu-id="ccfe8-122">Si <paramref name="callback" /> a la valeur <see langword="null" />, le délégué n'est pas appelé.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-122">If <paramref name="callback" /> is <see langword="null" />, the delegate is not called.</span></span></param>
        <param name="asyncState"><span data-ttu-id="ccfe8-123">Informations supplémentaires fournies par un client.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-123">The additional information supplied by a client.</span></span></param>
        <summary><span data-ttu-id="ccfe8-124">Démarre un appel asynchrone d'une méthode d'un service Web XML.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-124">Starts an asynchronous invocation of a method of an XML Web service.</span></span></summary>
        <returns><span data-ttu-id="ccfe8-125"><see cref="T:System.IAsyncResult" /> qui peut être passé à la méthode <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" /> pour obtenir les valeurs de retour de la méthode de service Web XML.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-125">An <see cref="T:System.IAsyncResult" /> that can be passed to the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" /> method to obtain the return values from the XML Web service method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccfe8-126">Le `methodName` paramètre est utilisé pour rechercher les types des paramètres et valeurs de retour de la méthode qui appelle le <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ccfe8-126">The `methodName` parameter is used to find the types of the parameters and return values of the method that is invoking the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> method.</span></span> <span data-ttu-id="ccfe8-127">Il est également utilisé pour rechercher les attributs personnalisés qui peuvent avoir été ajoutés à la méthode.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-127">It is also used to find custom attributes that may have been added to the method.</span></span> <span data-ttu-id="ccfe8-128"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>, <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>, et <xref:System.Xml.Serialization.XmlElementAttribute> fournissent des informations supplémentaires sur la méthode dérivée qui est requise pour le protocole HTTP.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-128"><xref:System.Web.Services.Protocols.SoapDocumentMethodAttribute>, <xref:System.Web.Services.Protocols.SoapRpcMethodAttribute>, and <xref:System.Xml.Serialization.XmlElementAttribute> provide additional information on the derived method that is required for the HTTP protocol.</span></span>  
  
 <span data-ttu-id="ccfe8-129">`asyncState` est passé dans `callback` et est inclus dans le <xref:System.IAsyncResult> qui est retourné à partir de la <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ccfe8-129">`asyncState` is passed into `callback` and is included in the <xref:System.IAsyncResult> that is returned from the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke%2A> method.</span></span> <span data-ttu-id="ccfe8-130">Il est utile pour passer des informations à partir du contexte de l’appel asynchrone à la gestion du résultat asynchrone dans `callback`.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-130">It is useful for passing information from the context of the asynchronous call to the handling of the asynchronous result in `callback`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccfe8-131">L’exemple de code suivant est un Web Form ASP.NET qui appelle un service Web XML nommé `Math`.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-131">The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="ccfe8-132">Dans le `EnterBtn_Click` (fonction), le Web Form commence et se termine un appel asynchrone de la `Add` méthode de service Web XML.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-132">Within the `EnterBtn_Click` function, the Web Form starts and completes an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-aspx-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/sourcevb.aspx#1)]  
  
 <span data-ttu-id="ccfe8-133">L’exemple de code suivant est une classe proxy générée par l’outil Web Services Description Language (Wsdl.exe) pour le `Math` service Web XML ci-dessous.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-133">The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below.</span></span> <span data-ttu-id="ccfe8-134">Dans le `BeginAdd` méthode de la classe proxy, le <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> méthode commence un appel asynchrone de la `Add` méthode de service Web XML.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-134">Within the `BeginAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.BeginInvoke%2A> method starts an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-cpp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CPP/source.cpp#2)]
 [!code-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/source.cs#2)]
 [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/source.vb#2)]  
  
 <span data-ttu-id="ccfe8-135">L’exemple de code suivant est le `Math` service Web XML, à partir de laquelle la classe proxy précédente a été créée.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-135">The following code example is the `Math` XML Web service, from which the preceding proxy class was created.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="ccfe8-136">La demande a atteint le serveur, mais n'a pas été traitée correctement.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-136">The request reached the server computer, but was not processed successfully.</span></span></exception>
        <altmember cref="T:System.IAsyncResult" />
      </Docs>
    </Member>
    <Member MemberName="EndInvoke">
      <MemberSignature Language="C#" Value="protected object EndInvoke (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object EndInvoke(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.EndInvoke(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EndInvoke (asyncResult As IAsyncResult) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ EndInvoke(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndInvoke : IAsyncResult -&gt; obj" Usage="httpSimpleClientProtocol.EndInvoke asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="ccfe8-137">Le <see cref="T:System.IAsyncResult" /> retourné par la méthode <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-137">The <see cref="T:System.IAsyncResult" /> returned from the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="ccfe8-138">Met fin à l'appel asynchrone d'une méthode de service Web XML utilisant HTTP.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-138">Completes asynchronous invocation of an XML Web service method using HTTP.</span></span></summary>
        <returns><span data-ttu-id="ccfe8-139">Tableau d'objets contenant la valeur de retour, ainsi que les paramètres de référence ou paramètres <paramref name="out" /> éventuels de la méthode de service Web XML.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-139">An array of objects containing the return value and any by reference or <paramref name="out" /> parameters for the XML Web service method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ccfe8-140">L’exemple de code suivant est un Web Form ASP.NET qui appelle un service Web XML nommé `Math`.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-140">The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="ccfe8-141">Dans le `EnterBtn_Click` (fonction), le Web Form commence et se termine un appel asynchrone de la `Add` méthode de service Web XML.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-141">Within the `EnterBtn_Click` function, the Web Form starts and completes an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-aspx-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/sourcevb.aspx#1)]  
  
 <span data-ttu-id="ccfe8-142">L’exemple de code suivant est une classe proxy générée par l’outil Web Services Description Language (Wsdl.exe) pour le `Math` service Web XML ci-dessous.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-142">The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below.</span></span> <span data-ttu-id="ccfe8-143">Dans le `EndAdd` méthode de la classe proxy, le <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> méthode commence un appel asynchrone de la `Add` méthode de service Web XML.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-143">Within the `EndAdd` method of the proxy class, the <xref:System.Web.Services.Protocols.SoapHttpClientProtocol.EndInvoke%2A> method starts an asynchronous invocation of the `Add` XML Web service method.</span></span>  
  
 [!code-cpp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CPP/source.cpp#2)]
 [!code-csharp[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/CS/source.cs#2)]
 [!code-vb[Classic HttpSimpleClientProtocol.EndInvoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic HttpSimpleClientProtocol.EndInvoke Example/VB/source.vb#2)]  
  
 <span data-ttu-id="ccfe8-144">L’exemple de code suivant est le `Math` service Web XML, à partir de laquelle la classe proxy ci-dessus a été créée.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-144">The following code example is the `Math` XML Web service, from which the above proxy class was created.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ccfe8-145"><paramref name="asyncResult" /> n'est pas la valeur de retour de la méthode <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-145"><paramref name="asyncResult" /> is not the return value from the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.BeginInvoke(System.String,System.String,System.Object[],System.AsyncCallback,System.Object)" /> method.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="protected object Invoke (string methodName, string requestUrl, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance object Invoke(string methodName, string requestUrl, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Function Invoke (methodName As String, requestUrl As String, parameters As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Object ^ Invoke(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Invoke : string * string * obj[] -&gt; obj" Usage="httpSimpleClientProtocol.Invoke (methodName, requestUrl, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="requestUrl" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="ccfe8-146">Nom de la méthode de service Web XML dans la classe dérivée qui appelle la méthode <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" />.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-146">The name of the XML Web service method in the derived class that is invoking the <see cref="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke(System.String,System.String,System.Object[])" /> method.</span></span></param>
        <param name="requestUrl"><span data-ttu-id="ccfe8-147">URL de la méthode de service Web XML demandée par le client.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-147">The URL of the XML Web service method that the client is requesting.</span></span></param>
        <param name="parameters"><span data-ttu-id="ccfe8-148">Tableau d'objets contenant les paramètres à passer au service Web XML distant.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-148">An array of objects containing the parameters to pass to the remote XML Web service.</span></span> <span data-ttu-id="ccfe8-149">L'ordre des valeurs du tableau correspond à l'ordre des paramètres dans la méthode appelante de la classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-149">The order of the values in the array corresponds to the order of the parameters in the calling method of the derived class.</span></span></param>
        <summary><span data-ttu-id="ccfe8-150">Appelle une méthode de service Web XML utilisant HTTP.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-150">Invokes an XML Web service method using HTTP.</span></span></summary>
        <returns><span data-ttu-id="ccfe8-151">Tableau d'objets contenant la valeur de retour et les éventuels paramètres <paramref name="out" /> ou passés par référence de la méthode de la classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-151">An array of objects containing the return value and any by-reference or <paramref name="out" /> parameters of the derived class method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccfe8-152">Le `methodName` paramètre est utilisé pour rechercher les types des paramètres et valeurs de retour de la méthode qui appelle le <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="ccfe8-152">The `methodName` parameter is used to find the types of the parameters and return values of the method that is invoking the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method.</span></span> <span data-ttu-id="ccfe8-153">Il est également utilisé pour rechercher les attributs personnalisés peuvent avoir été ajoutés à la méthode.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-153">It is also used to find custom attributes which may have been added to the method.</span></span> <span data-ttu-id="ccfe8-154"><xref:System.Web.Services.Protocols.HttpMethodAttribute> et <xref:System.Xml.Serialization.XmlElementAttribute> fournissent des informations supplémentaires sur la méthode dérivée qui est requise pour le protocole SOAP.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-154"><xref:System.Web.Services.Protocols.HttpMethodAttribute> and <xref:System.Xml.Serialization.XmlElementAttribute> provide additional information on the derived method that is required for the SOAP protocol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccfe8-155">L’exemple de code suivant est un Web Form ASP.NET qui appelle un service Web XML nommé `Math`.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-155">The following code example is an ASP.NET Web Form, which calls an XML Web service named `Math`.</span></span> <span data-ttu-id="ccfe8-156">Dans le `EnterBtn_Click` (fonction), le formulaire Web appelle de façon synchrone le `Add` méthode de service Web XML.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-156">Within the `EnterBtn_Click` function, the Web Form synchronously invokes the `Add` XML Web service method.</span></span>  
  
 [!code-csharp[HttpSimpleClientProtocol.Invoke Example#2](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/CS/sourcecs.aspx#2)]
 [!code-vb[HttpSimpleClientProtocol.Invoke Example#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/VB/sourcevb.aspx#2)]  
  
 <span data-ttu-id="ccfe8-157">L’exemple de code suivant est une classe proxy générée par l’outil Web Services Description Language (Wsdl.exe) pour le `Math` service Web XML ci-dessous.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-157">The following code example is a proxy class generated by the Web Services Description Language tool (Wsdl.exe) for the `Math` XML Web service below.</span></span> <span data-ttu-id="ccfe8-158">Dans le `Add` méthode de la classe proxy, le <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> méthode appelle de façon synchrone le `Add` méthode de Service Web.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-158">Within the `Add` method of the proxy class, the <xref:System.Web.Services.Protocols.HttpSimpleClientProtocol.Invoke%2A> method synchronously invokes the `Add` Web Service method.</span></span>  
  
 [!code-cpp[HttpSimpleClientProtocol.Invoke Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/CPP/source.cpp#1)]
 [!code-csharp[HttpSimpleClientProtocol.Invoke Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/CS/source.cs#1)]
 [!code-vb[HttpSimpleClientProtocol.Invoke Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/HttpSimpleClientProtocol.Invoke Example/VB/source.vb#1)]  
  
 <span data-ttu-id="ccfe8-159">L’exemple de code suivant est le `Math` service Web XML, à partir de laquelle la classe proxy ci-dessus a été créée.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-159">The following code example is the `Math` XML Web service, from which the above proxy class was created.</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="ccfe8-160">La demande a atteint le serveur, mais n'a pas été traitée correctement.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-160">The request reached the server computer, but was not processed successfully.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeAsync">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ccfe8-161">Appelle la méthode spécifiée de manière asynchrone.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-161">Invokes the specified method asynchronously.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, string requestUrl, object[] parameters, System.Threading.SendOrPostCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, string requestUrl, object[] parameters, class System.Threading.SendOrPostCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, requestUrl As String, parameters As Object(), callback As SendOrPostCallback)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * string * obj[] * System.Threading.SendOrPostCallback -&gt; unit" Usage="httpSimpleClientProtocol.InvokeAsync (methodName, requestUrl, parameters, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="requestUrl" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="ccfe8-162">Nom de la méthode à appeler.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-162">The name of the method to invoke.</span></span></param>
        <param name="requestUrl"><span data-ttu-id="ccfe8-163">URL de la demande du service Web appelé.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-163">The request URL of the invoked web service.</span></span></param>
        <param name="parameters"><span data-ttu-id="ccfe8-164">Paramètres à passer à la méthode.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-164">The parameters to pass to the method.</span></span></param>
        <param name="callback"><span data-ttu-id="ccfe8-165">Délégué appelé lorsque l'appel de la méthode est terminé.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-165">The delegate called when the method invocation has completed.</span></span></param>
        <summary><span data-ttu-id="ccfe8-166">Appelle la méthode spécifiée de manière asynchrone.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-166">Invokes the specified method asynchronously.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeAsync">
      <MemberSignature Language="C#" Value="protected void InvokeAsync (string methodName, string requestUrl, object[] parameters, System.Threading.SendOrPostCallback callback, object userState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void InvokeAsync(string methodName, string requestUrl, object[] parameters, class System.Threading.SendOrPostCallback callback, object userState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.HttpSimpleClientProtocol.InvokeAsync(System.String,System.String,System.Object[],System.Threading.SendOrPostCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub InvokeAsync (methodName As String, requestUrl As String, parameters As Object(), callback As SendOrPostCallback, userState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void InvokeAsync(System::String ^ methodName, System::String ^ requestUrl, cli::array &lt;System::Object ^&gt; ^ parameters, System::Threading::SendOrPostCallback ^ callback, System::Object ^ userState);" />
      <MemberSignature Language="F#" Value="member this.InvokeAsync : string * string * obj[] * System.Threading.SendOrPostCallback * obj -&gt; unit" Usage="httpSimpleClientProtocol.InvokeAsync (methodName, requestUrl, parameters, callback, userState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodName" Type="System.String" />
        <Parameter Name="requestUrl" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="callback" Type="System.Threading.SendOrPostCallback" />
        <Parameter Name="userState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="methodName"><span data-ttu-id="ccfe8-167">Nom de la méthode à appeler.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-167">The name of the method to invoke.</span></span></param>
        <param name="requestUrl"><span data-ttu-id="ccfe8-168">URL de la demande du service Web appelé.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-168">The request URL of the invoked web service.</span></span></param>
        <param name="parameters"><span data-ttu-id="ccfe8-169">Paramètres à passer à la méthode.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-169">The parameters to pass to the method.</span></span></param>
        <param name="callback"><span data-ttu-id="ccfe8-170">Délégué appelé lorsque l'appel de la méthode est terminé.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-170">The delegate called when the method invocation has completed.</span></span></param>
        <param name="userState"><span data-ttu-id="ccfe8-171">Objet contenant des informations d'état associé passées au délégué <paramref name="callback" /> lorsque la méthode est terminée.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-171">An object containing associated state information that is passed to the <paramref name="callback" /> delegate when the method has completed.</span></span></param>
        <summary><span data-ttu-id="ccfe8-172">Appelle la méthode spécifiée de manière asynchrone tout en conservant un état associé.</span><span class="sxs-lookup"><span data-stu-id="ccfe8-172">Invokes the specified method asynchronously while maintaining an associated state.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>