<Type Name="SoapHeaderAttribute" FullName="System.Web.Services.Protocols.SoapHeaderAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7940f05baef8f3379c814ba7460e0069e616736e" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39930577" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SoapHeaderAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SoapHeaderAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.SoapHeaderAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SoapHeaderAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class SoapHeaderAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type SoapHeaderAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Cet attribut est appliqué à une méthode de service Web XML ou à un client de service Web XML pour spécifier l'en-tête SOAP que la méthode ou le client du service Web XML peut traiter. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Étapes de base de recevoir et traiter un en-tête SOAP sont :  
  
1.  Créez une classe dérivant de <xref:System.Web.Services.Protocols.SoapHeader> représentant les données passées dans l’en-tête SOAP.  
  
2.  Ajouter un membre à la classe de service Web XML ou de la classe de proxy de client de service Web XML du type créé à l’étape 1.  
  
3.  Appliquer un <xref:System.Web.Services.Protocols.SoapHeaderAttribute> à la méthode de service Web XML ou la méthode correspondante dans la classe proxy, en spécifiant le membre créé à l’étape 2 dans le <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> propriété.  
  
4.  Dans la méthode de service Web XML ou un code de client de service Web XML, accéder à la <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> propriété pour traiter les données envoyées dans l’en-tête SOAP.  
  
 Pour plus d’informations, consultez le <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> propriété.  
  
   
  
## Examples  
 Ce qui suit `MyWebService` service Web XML définit un <xref:System.Web.Services.Protocols.SoapHeader> de type `MyHeader`. Le `Hello` méthode de service Web XML, le client doit appeler la méthode de service Web XML avec ce <xref:System.Web.Services.Protocols.SoapHeader>. Le `Hello` service Web XML intercepte également tous les en-têtes SOAP autres que `MyHeader`.  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName" />
    <altmember cref="T:System.Web.Services.Protocols.SoapHeader" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SoapHeaderAttribute (string memberName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string memberName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.SoapHeaderAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (memberName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SoapHeaderAttribute(System::String ^ memberName);" />
      <MemberSignature Language="F#" Value="new System.Web.Services.Protocols.SoapHeaderAttribute : string -&gt; System.Web.Services.Protocols.SoapHeaderAttribute" Usage="new System.Web.Services.Protocols.SoapHeaderAttribute memberName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="memberName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="memberName">Membre de la classe de service Web XML représentant le contenu de l'en-tête SOAP. La propriété <see cref="P:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName" /> prend la valeur de ce paramètre.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Services.Protocols.SoapHeaderAttribute" />, définissant le membre de la classe du service Web XML représentant le contenu de l'en-tête SOAP.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un client de service Web XML ou d’un service Web XML peut spécifier les en-têtes SOAP qu’il souhaite traiter pour des méthodes de service Web XML spécifiques en appliquant un <xref:System.Web.Services.Protocols.SoapHeaderAttribute> à la méthode de service Web XML dans la classe de service Web XML ou la méthode correspondante dans la classe proxy. Afin que la méthode de service Web XML à recevoir le contenu de l’en-tête SOAP, un membre est ajouté à la classe de service Web XML d’un <xref:System.Type> dérivé <xref:System.Web.Services.Protocols.SoapHeader>. De même, un client de service Web XML ajoute un membre à la classe proxy dérivée de <xref:System.Web.Services.Protocols.SoapHeader>. Qui <xref:System.Type> dérivant de <xref:System.Web.Services.Protocols.SoapHeader> représente le contenu de l’en-tête SOAP et est créé par le développeur du service Web XML ou du client de service Web XML qui souhaite recevoir l’en-tête SOAP. Une fois que la classe est créée, un <xref:System.Web.Services.Protocols.SoapHeaderAttribute> peut être appliqué à la méthode de service Web XML ou la méthode correspondante dans le XML Web service proxy classe client le membre de l’en-tête SOAP de recevoir le contenu avec le `memberName` paramètre à ce constructeur ou le <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> propriété.  
  
 Une méthode de service Web XML peut recevoir plusieurs en-têtes SOAP en ajoutant plusieurs membres à la classe de service Web XML ou de la classe de proxy de service Web XML et appliquez plusieurs <xref:System.Web.Services.Protocols.SoapHeaderAttribute> des attributs à la méthode de service Web XML.  
  
 Pour recevoir et traiter des en-têtes SOAP inconnus au moment de l’écriture de service Web XML, spécifiez la <xref:System.Type> du membre soit <xref:System.Web.Services.Protocols.SoapUnknownHeader>, <xref:System.Web.Services.Protocols.SoapHeader> ou un tableau de ces deux classes.  
  
   
  
## Examples  
 Ce qui suit `MyWebService` service Web XML définit un <xref:System.Web.Services.Protocols.SoapHeader> de type `MyHeader`. Le `Hello` méthode de service Web XML spécifie le `myHeader` membre en tant que le <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> propriété à recevoir le contenu de `MyHeader` en-têtes SOAP passé dans la méthode de service Web XML.  
  
 [!code-cpp[Classic SoapHeaderAttribute.MemberName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHeaderAttribute.MemberName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHeaderAttribute.MemberName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHeaderAttribute.MemberName Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHeaderAttribute.MemberName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHeaderAttribute.MemberName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Web.Services.Protocols.SoapHeaderDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Services.Protocols.SoapHeaderDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeaderAttribute.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As SoapHeaderDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Services::Protocols::SoapHeaderDirection Direction { System::Web::Services::Protocols::SoapHeaderDirection get(); void set(System::Web::Services::Protocols::SoapHeaderDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Web.Services.Protocols.SoapHeaderDirection with get, set" Usage="System.Web.Services.Protocols.SoapHeaderAttribute.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.SoapHeaderDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit si l'en-tête SOAP s'adresse au service Web XML, à son client ou aux deux.</summary>
        <value>Destinataire de l'en-tête SOAP. Par défaut, il s'agit de <see cref="F:System.Web.Services.Protocols.SoapHeaderDirection.In" />, ce qui signifie que le destinataire attendu est simplement le service Web XML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Ce qui suit `MyWebService` service Web XML définit un <xref:System.Web.Services.Protocols.SoapHeader> de type `MyHeader`. Le `Hello` méthode de service Web XML spécifie que `MyHeader` doivent être envoyés à la méthode de service Web XML et le client pour que la méthode de service Web XML.  
  
 [!code-cpp[Classic SoapHeaderAttribute.MemberName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHeaderAttribute.MemberName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHeaderAttribute.MemberName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHeaderAttribute.MemberName Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHeaderAttribute.MemberName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHeaderAttribute.MemberName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MemberName">
      <MemberSignature Language="C#" Value="public string MemberName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MemberName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName" />
      <MemberSignature Language="VB.NET" Value="Public Property MemberName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MemberName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MemberName : string with get, set" Usage="System.Web.Services.Protocols.SoapHeaderAttribute.MemberName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le membre de la classe de service Web XML représentant le contenu de l'en-tête SOAP.</summary>
        <value>Membre de la classe de service Web XML représentant le contenu de l'en-tête SOAP. Il n'y a pas de valeur par défaut.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un service Web XML ou un client de service Web XML peut spécifier les en-têtes SOAP qu’il souhaite traiter en appliquant un <xref:System.Web.Services.Protocols.SoapHeaderAttribute> à la méthode de service Web XML dans la classe de service Web XML ou la méthode correspondante dans la classe proxy. Dans l’ordre pour la méthode de service Web XML à recevoir le contenu de l’en-tête SOAP, un membre est ajouté à la classe de service Web XML d’un type dérivé <xref:System.Web.Services.Protocols.SoapHeader>. De même, un client de service Web XML ajoute un membre à la classe proxy dérivée de <xref:System.Web.Services.Protocols.SoapHeader>. Le <xref:System.Type> dérivant de <xref:System.Web.Services.Protocols.SoapHeader> représente le contenu de l’en-tête SOAP et est créé par le développeur du service Web XML ou du client de service Web XML qui souhaite recevoir l’en-tête SOAP. Une fois que la classe est créée, un <xref:System.Web.Services.Protocols.SoapHeaderAttribute> peut être appliqué à la méthode de service Web XML ou la méthode correspondante dans la classe de proxy de client de service Web XML en spécifiant le membre pour recevoir le contenu d’en-tête SOAP avec le <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> propriété.  
  
 Une méthode de service Web XML peut recevoir plusieurs en-têtes SOAP en ajoutant plusieurs membres à la classe de service Web XML ou de la classe de proxy de service Web XML et appliquez plusieurs <xref:System.Web.Services.Protocols.SoapHeaderAttribute> des attributs à la méthode de service Web XML.  
  
 Pour recevoir et traiter des en-têtes SOAP inconnus au moment de l’écriture de service Web XML, spécifiez le type du membre soit <xref:System.Web.Services.Protocols.SoapUnknownHeader>, <xref:System.Web.Services.Protocols.SoapHeader> ou un tableau de ces deux classes.  
  
   
  
## Examples  
 Ce qui suit `MyWebService` service Web XML définit un <xref:System.Web.Services.Protocols.SoapHeader> de type `MyHeader`. Le `Hello` méthode de service Web XML spécifie le `myHeader` membre en tant que le <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> propriété à recevoir le contenu de `MyHeader` en-têtes SOAP passé dans la méthode de service Web XML.  
  
 [!code-cpp[Classic SoapHeaderAttribute.MemberName Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic SoapHeaderAttribute.MemberName Example/CPP/source.cpp#1)]
 [!code-csharp[Classic SoapHeaderAttribute.MemberName Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic SoapHeaderAttribute.MemberName Example/CS/source.cs#1)]
 [!code-vb[Classic SoapHeaderAttribute.MemberName Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic SoapHeaderAttribute.MemberName Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Required">
      <MemberSignature Language="C#" Value="public bool Required { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Required" />
      <MemberSignature Language="DocId" Value="P:System.Web.Services.Protocols.SoapHeaderAttribute.Required" />
      <MemberSignature Language="VB.NET" Value="Public Property Required As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Required { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Required : bool with get, set" Usage="System.Web.Services.Protocols.SoapHeaderAttribute.Required" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("This property will be removed from a future version. The presence of a particular header in a SOAP message is no longer enforced", false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ce membre est obsolète et ne dispose d'aucune fonctionnalité.</summary>
        <value>Valeur <see cref="T:System.Boolean" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour vérifier qu’un en-tête SOAP est envoyé à un service Web XML, vérifiez que le membre spécifié dans le <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> propriété est `null`. S’il s’agit `null`, l’en-tête SOAP n’a pas été envoyé.  
  
 Dans la version 1.0 du .NET Framework SDK, le <xref:System.Web.Services.Protocols.SoapHeaderAttribute.Required%2A> propriété indique si un en-tête SOAP doit être compris et traité par le service Web XML destinataire ou le client du service Web XML. Si un destinataire n’a pas traité l’en-tête SOAP, une exception a été levée.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>