<Type Name="MimeFormatter" FullName="System.Web.Services.Protocols.MimeFormatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="543984d441712e59cbc38c02dc486c49a04def76" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30549093" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MimeFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MimeFormatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.MimeFormatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MimeFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MimeFormatter abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit une classe de base abstraite pour tous les lecteurs et writers, pour les services Web et les clients implémentés via le protocole HTTP mais sans SOAP.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lecteurs et writers de service web sérialiser et désérialiser, respectivement, entre les objets de paramètre ou de retour des méthodes Web et les flux de demande ou de réponse HTTP. La <xref:System.Web.Services.Protocols.MimeFormatter> classe établit une interface commune et des fonctionnalités pour les classes de lecture et d’écriture, dans le client et côté service.  
  
 La <xref:System.Web.Services.Protocols.MimeFormatter> classe prend en charge les implémentations du .NET Framework de services Web via les opérations HTTP-GET et HTTP-POST. Dans les opérations HTTP-GET, paramètres de la demande sont codés dans de la requête HTTP localisateur URL (Uniform Resource). Dans les opérations HTTP-POST, les paramètres de la demande sont codés dans le corps de demande HTTP, comme avec un formulaire HTML. Avec les deux implémentations, la valeur de retour s’affiche dans le corps de réponse HTTP comme un document XML non - SOAP.  
  
 Un développeur ne doit généralement pas utiliser directement <xref:System.Web.Services.Protocols.MimeFormatter> ou ses classes descendantes. En revanche, lorsque l’outil Wsdl.exe génère le code proxy client selon les implémentations HTTP-GET ou HTTP-POST, il applique le <xref:System.Web.Services.Protocols.HttpMethodAttribute> à chaque méthode Web et définit l’attribut <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> et <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> propriétés vers le type approprié dérivé de la <xref:System.Web.Services.Protocols.MimeFormatter> classe. Sur le serveur, les types dérivés appropriés sont utilisés en fonction des paramètres dans un fichier de configuration ASP.NET (Web.config). Sur le client, les types dérivés appropriés sont déterminés à partir de WSDL.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpMethodAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MimeFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MimeFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.MimeFormatter CreateInstance (Type type, object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.MimeFormatter CreateInstance(class System.Type type, object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Services::Protocols::MimeFormatter ^ CreateInstance(Type ^ type, System::Object ^ initializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.MimeFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">Type, dérivé de <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, duquel une instance doit être créée.</param>
        <param name="initializer">Objet utilisé pour initialiser l'instance obtenue précédemment via l'implémentation de la classe dérivée de la méthode <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />.</param>
        <summary>Crée et initialise une instance d'une classe concrète dérivée de <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</summary>
        <returns>Objet <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> méthode crée une instance de la classe dérivée et appelle l’implémentation de la classe dérivée de l’abstraite <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> (méthode). Le <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> méthode est appelée lors du traitée d’une demande ou réponse.  
  
 Un initialiseur est un objet passé comme paramètre à la <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> (méthode). L’initialiseur passé en tant que paramètre à la <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> méthode obtenue à partir d’une autre instance de la classe dérivée, en appelant le <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> méthode pendant l’initialisation du client ou du service.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializer">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>En cas de substitution dans une classe dérivée, retourne un initialiseur pour la méthode spécifiée.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo">
          <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> qui spécifie la méthode web pour laquelle l’initialiseur est récupéré.</param>
        <summary>En cas de substitution dans une classe dérivée, retourne un initialiseur pour la méthode spécifiée.</summary>
        <returns>
          <see cref="T:System.Object" /> qui contient l’initialiseur de la méthode spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un initialiseur est un objet passé comme paramètre à la <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> (méthode).  
  
 Implémentation d’une classe dérivée de la <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> méthode d’instance est appelée pendant l’initialisation du client ou du service. Ultérieurement, au moment d’une demande ou une réponse est traitée, l’objet de l’initialiseur est passé à la méthode statique <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> (méthode), qui crée une instance d’un autre objet de la classe dérivée, puis au <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> méthode pour l’initialiser. L’autre objet exécute la lecture réelle ou l’écriture.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public static object GetInitializer (Type type, System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetInitializer(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetInitializer(Type ^ type, System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="type">Type, dérivé de <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, pour lequel un initialiseur est obtenu.</param>
        <param name="methodInfo">
          <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> qui spécifie la méthode web pour laquelle l’initialiseur est récupéré.</param>
        <summary>Retourne un initialiseur pour la méthode spécifiée.</summary>
        <returns>Objet <see cref="T:System.Object" /> contenant l'initialiseur pour la méthode spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un initialiseur est un objet passé comme paramètre à la <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> (méthode).  
  
 La méthode statique <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> méthode appelle la classe dérivée <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> méthode, en créant implicitement une instance de la classe dérivée. Au moment d’une demande ou une réponse est traitée, l’objet de l’initialiseur est passé à la <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> méthode d’une autre instance de la classe dérivée. L’objet de ce dernier effectue la lecture réelle ou l’écriture.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializers">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>En cas de substitution dans une classe dérivée, retourne un tableau des objets de l'initialiseur correspondant à un tableau d'entrée des définitions de la méthode.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public virtual object[] GetInitializers (System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetInitializers(class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInitializers (methodInfos As LogicalMethodInfo()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetInitializers(cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="methodInfos">Tableau des méthodes Web dans lequel, pour chaque méthode, l'objet de l'index correspondant dans le tableau de l'initialiseur retourné est obtenu.</param>
        <summary>En cas de substitution dans une classe dérivée, retourne un tableau des objets de l'initialiseur correspondant à un tableau d'entrée des définitions de la méthode.</summary>
        <returns>Tableau des objets de l'initialiseur correspondant au tableau d'entrée des définitions de la méthode.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un initialiseur est un objet passé comme paramètre à la <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> (méthode).  
  
 Le <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> méthode d’instance appelle la <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> pour chaque méthode d’instance d’entrée de méthode Web. Cela signifie qu’une instance d’une classe dérivée de <xref:System.Web.Services.Protocols.MimeFormatter> a déjà été créé. Au moment d’une demande ou une réponse est traitée, l’initialiseur est passé à la <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> méthode d’une autre instance de la classe dérivée. L’objet de ce dernier effectue la lecture réelle ou l’écriture.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public static object[] GetInitializers (Type type, System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetInitializers(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ GetInitializers(Type ^ type, cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="type">Type, dérivé de <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, pour lequel les initialiseurs sont obtenus.</param>
        <param name="methodInfos">Tableau de type <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> spécifiant les méthodes Web pour lesquelles les initialiseurs sont obtenus.</param>
        <summary>Retourne un tableau des objets de l'initialiseur correspondant à un tableau d'entrée des définitions de la méthode pour une classe spécifiée dérivée de <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</summary>
        <returns>Tableau des objets de l'initialiseur correspondant au tableau d'entrée des définitions de la méthode pour une classe spécifiée dérivée de <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un initialiseur est un objet passé comme paramètre à la <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> (méthode).  
  
 La méthode statique <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> méthode provoque l’appel de la <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> méthode appartenant à la classe dérivée spécifiée par le `type` paramètre.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(System::Object ^ initializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer">Objet d'un type approprié à la classe particulière implémentant la méthode.</param>
        <summary>En cas de substitution dans une classe dérivée, initialise une instance.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> méthode est appelée lors du traitée d’une demande ou réponse ; Toutefois, l’initialiseur est obtenu en appelant le <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> méthode sur une autre instance pendant l’initialisation du client ou du service.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>