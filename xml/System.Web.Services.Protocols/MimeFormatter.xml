<Type Name="MimeFormatter" FullName="System.Web.Services.Protocols.MimeFormatter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="543984d441712e59cbc38c02dc486c49a04def76" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MimeFormatter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MimeFormatter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Services.Protocols.MimeFormatter" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MimeFormatter" />
  <TypeSignature Language="C++ CLI" Value="public ref class MimeFormatter abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0300e-101">Fournit une classe de base abstraite pour tous les lecteurs et writers, pour les services Web et les clients implémentés via le protocole HTTP mais sans SOAP.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0300e-101">Provides an abstract base class for all readers and writers for Web services and clients implemented using HTTP but without SOAP.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0300e-102">Lecteurs et writers de service web sérialiser et désérialiser, respectivement, entre les objets de paramètre ou de retour des méthodes Web et les flux de demande ou de réponse HTTP.</span><span class="sxs-lookup"><span data-stu-id="0300e-102">Web service writers and readers serialize and deserialize, respectively, between the parameter or return objects of Web methods and the HTTP request or response streams.</span></span> <span data-ttu-id="0300e-103">La <xref:System.Web.Services.Protocols.MimeFormatter> classe établit une interface commune et des fonctionnalités pour les classes de lecture et d’écriture, dans le client et côté service.</span><span class="sxs-lookup"><span data-stu-id="0300e-103">The <xref:System.Web.Services.Protocols.MimeFormatter> class establishes a common interface and functionality for reader and writer classes, in both client and service-side .</span></span>  
  
 <span data-ttu-id="0300e-104">La <xref:System.Web.Services.Protocols.MimeFormatter> classe prend en charge les implémentations du .NET Framework de services Web via les opérations HTTP-GET et HTTP-POST.</span><span class="sxs-lookup"><span data-stu-id="0300e-104">The <xref:System.Web.Services.Protocols.MimeFormatter> class supports the .NET Framework's implementations of Web services via the HTTP-GET and HTTP-POST operations.</span></span> <span data-ttu-id="0300e-105">Dans les opérations HTTP-GET, paramètres de la demande sont codés dans de la requête HTTP localisateur URL (Uniform Resource).</span><span class="sxs-lookup"><span data-stu-id="0300e-105">In HTTP-GET operations request parameters are encoded in the HTTP request's Uniform Resource Locator (URL).</span></span> <span data-ttu-id="0300e-106">Dans les opérations HTTP-POST, les paramètres de la demande sont codés dans le corps de demande HTTP, comme avec un formulaire HTML.</span><span class="sxs-lookup"><span data-stu-id="0300e-106">In HTTP-POST operations, request parameters are encoded in the HTTP request body, as with an HTML form.</span></span> <span data-ttu-id="0300e-107">Avec les deux implémentations, la valeur de retour s’affiche dans le corps de réponse HTTP comme un document XML non - SOAP.</span><span class="sxs-lookup"><span data-stu-id="0300e-107">With both implementations, the return value appears in the HTTP response body as a non-SOAP XML document.</span></span>  
  
 <span data-ttu-id="0300e-108">Un développeur ne doit généralement pas utiliser directement <xref:System.Web.Services.Protocols.MimeFormatter> ou ses classes descendantes.</span><span class="sxs-lookup"><span data-stu-id="0300e-108">A developer typically does not need to directly use <xref:System.Web.Services.Protocols.MimeFormatter> or its descendant classes.</span></span> <span data-ttu-id="0300e-109">En revanche, lorsque l’outil Wsdl.exe génère le code proxy client selon les implémentations HTTP-GET ou HTTP-POST, il applique le <xref:System.Web.Services.Protocols.HttpMethodAttribute> à chaque méthode Web et définit l’attribut <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> et <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> propriétés vers le type approprié dérivé de la <xref:System.Web.Services.Protocols.MimeFormatter> classe.</span><span class="sxs-lookup"><span data-stu-id="0300e-109">Instead, when the Wsdl.exe tool generates client proxy code according to the HTTP-GET or HTTP-POST implementations, it applies the <xref:System.Web.Services.Protocols.HttpMethodAttribute> to each Web method and sets the attribute's <xref:System.Web.Services.Protocols.HttpMethodAttribute.ParameterFormatter%2A> and <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> properties to the appropriate type derived from the <xref:System.Web.Services.Protocols.MimeFormatter> class.</span></span> <span data-ttu-id="0300e-110">Sur le serveur, les types dérivés appropriés sont utilisés en fonction des paramètres dans un fichier de configuration ASP.NET (Web.config).</span><span class="sxs-lookup"><span data-stu-id="0300e-110">On the server, the appropriate derived types are used according to settings in an ASP.NET configuration file (Web.config).</span></span> <span data-ttu-id="0300e-111">Sur le client, les types dérivés appropriés sont déterminés à partir de WSDL.</span><span class="sxs-lookup"><span data-stu-id="0300e-111">On the client the appropriate derived types are determined from the WSDL.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Services.Protocols.HttpMethodAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MimeFormatter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MimeFormatter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0300e-112">Initialise une nouvelle instance de la classe <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0300e-112">Initializes a new instance of the <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static System.Web.Services.Protocols.MimeFormatter CreateInstance (Type type, object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Services.Protocols.MimeFormatter CreateInstance(class System.Type type, object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Services::Protocols::MimeFormatter ^ CreateInstance(Type ^ type, System::Object ^ initializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Services.Protocols.MimeFormatter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0300e-113">Type, dérivé de <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, duquel une instance doit être créée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0300e-113">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, of which to create an instance.</span>
          </span>
        </param>
        <param name="initializer">
          <span data-ttu-id="0300e-114">Objet utilisé pour initialiser l'instance obtenue précédemment via l'implémentation de la classe dérivée de la méthode <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0300e-114">An object used to initialize the instance obtained earlier through the derived class's implementation of the <see cref="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0300e-115">Crée et initialise une instance d'une classe concrète dérivée de <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0300e-115">Creates and initializes an instance of a concrete class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0300e-116">Objet <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0300e-116">A <see cref="T:System.Web.Services.Protocols.MimeFormatter" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0300e-117">Le <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> méthode crée une instance de la classe dérivée et appelle l’implémentation de la classe dérivée de l’abstraite <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0300e-117">The <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method creates an instance of the derived class and invokes the derived class's implementation of the abstract <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span> <span data-ttu-id="0300e-118">Le <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> méthode est appelée lors du traitée d’une demande ou réponse.</span><span class="sxs-lookup"><span data-stu-id="0300e-118">The <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method is invoked at the time a request or response is processed.</span></span>  
  
 <span data-ttu-id="0300e-119">Un initialiseur est un objet passé comme paramètre à la <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0300e-119">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span> <span data-ttu-id="0300e-120">L’initialiseur passé en tant que paramètre à la <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> méthode obtenue à partir d’une autre instance de la classe dérivée, en appelant le <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> méthode pendant l’initialisation du client ou du service.</span><span class="sxs-lookup"><span data-stu-id="0300e-120">The initializer passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method is obtained from another instance of the derived class, by invoking the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method during client or service initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializer">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0300e-121">En cas de substitution dans une classe dérivée, retourne un initialiseur pour la méthode spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0300e-121">When overridden in a derived class, returns an initializer for the specified method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public abstract object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetInitializer(class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetInitializer (methodInfo As LogicalMethodInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ GetInitializer(System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="methodInfo">
          <span data-ttu-id="0300e-122">
            <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> qui spécifie la méthode web pour laquelle l’initialiseur est récupéré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0300e-122">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0300e-123">En cas de substitution dans une classe dérivée, retourne un initialiseur pour la méthode spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0300e-123">When overridden in a derived class, returns an initializer for the specified method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0300e-124">
            <see cref="T:System.Object" /> qui contient l’initialiseur de la méthode spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0300e-124">An <see cref="T:System.Object" /> that contains the initializer for the specified method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0300e-125">Un initialiseur est un objet passé comme paramètre à la <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0300e-125">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="0300e-126">Implémentation d’une classe dérivée de la <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> méthode d’instance est appelée pendant l’initialisation du client ou du service.</span><span class="sxs-lookup"><span data-stu-id="0300e-126">A derived class's implementation of the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> instance method is invoked during client or service initialization.</span></span> <span data-ttu-id="0300e-127">Ultérieurement, au moment d’une demande ou une réponse est traitée, l’objet de l’initialiseur est passé à la méthode statique <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> (méthode), qui crée une instance d’un autre objet de la classe dérivée, puis au <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> méthode pour l’initialiser.</span><span class="sxs-lookup"><span data-stu-id="0300e-127">Later, at the time a request or response is processed, the initializer object is passed to the static <xref:System.Web.Services.Protocols.MimeFormatter.CreateInstance%2A> method, which creates an instance of another object of the derived class, and then to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method to initialize it.</span></span> <span data-ttu-id="0300e-128">L’autre objet exécute la lecture réelle ou l’écriture.</span><span class="sxs-lookup"><span data-stu-id="0300e-128">The other object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializer">
      <MemberSignature Language="C#" Value="public static object GetInitializer (Type type, System.Web.Services.Protocols.LogicalMethodInfo methodInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetInitializer(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo methodInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetInitializer(Type ^ type, System::Web::Services::Protocols::LogicalMethodInfo ^ methodInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfo" Type="System.Web.Services.Protocols.LogicalMethodInfo" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0300e-129">Type, dérivé de <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, pour lequel un initialiseur est obtenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0300e-129">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />,- for which an initializer is obtained.</span>
          </span>
        </param>
        <param name="methodInfo">
          <span data-ttu-id="0300e-130">
            <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> qui spécifie la méthode web pour laquelle l’initialiseur est récupéré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0300e-130">A <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web method for which the initializer is obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0300e-131">Retourne un initialiseur pour la méthode spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0300e-131">Returns an initializer for the specified method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0300e-132">Objet <see cref="T:System.Object" /> contenant l'initialiseur pour la méthode spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0300e-132">A <see cref="T:System.Object" /> object that contains the initializer for the specified method.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0300e-133">Un initialiseur est un objet passé comme paramètre à la <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0300e-133">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="0300e-134">La méthode statique <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> méthode appelle la classe dérivée <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> méthode, en créant implicitement une instance de la classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="0300e-134">The static <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method invokes the derived class's <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method, implicitly creating an instance of the derived class.</span></span> <span data-ttu-id="0300e-135">Au moment d’une demande ou une réponse est traitée, l’objet de l’initialiseur est passé à la <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> méthode d’une autre instance de la classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="0300e-135">At the time a request or response is processed, the initializer object is passed to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method of another instance of the derived class.</span></span> <span data-ttu-id="0300e-136">L’objet de ce dernier effectue la lecture réelle ou l’écriture.</span><span class="sxs-lookup"><span data-stu-id="0300e-136">The latter object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetInitializers">
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0300e-137">En cas de substitution dans une classe dérivée, retourne un tableau des objets de l'initialiseur correspondant à un tableau d'entrée des définitions de la méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0300e-137">When overridden in a derived class, returns an array of initializer objects corresponding to an input array of method definitions.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public virtual object[] GetInitializers (System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object[] GetInitializers(class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInitializers (methodInfos As LogicalMethodInfo()) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;System::Object ^&gt; ^ GetInitializers(cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="methodInfos">
          <span data-ttu-id="0300e-138">Tableau des méthodes Web dans lequel, pour chaque méthode, l'objet de l'index correspondant dans le tableau de l'initialiseur retourné est obtenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0300e-138">An array of Web methods where, for each method, the object of the corresponding index in the returned initializer array is obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0300e-139">En cas de substitution dans une classe dérivée, retourne un tableau des objets de l'initialiseur correspondant à un tableau d'entrée des définitions de la méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0300e-139">When overridden in a derived class, returns an array of initializer objects corresponding to an input array of method definitions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0300e-140">Tableau des objets de l'initialiseur correspondant au tableau d'entrée des définitions de la méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0300e-140">An array of initializer objects corresponding to the input array of method definitions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0300e-141">Un initialiseur est un objet passé comme paramètre à la <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0300e-141">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="0300e-142">Le <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> méthode d’instance appelle la <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> pour chaque méthode d’instance d’entrée de méthode Web.</span><span class="sxs-lookup"><span data-stu-id="0300e-142">The <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> instance method invokes the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> instance method for each input Web method.</span></span> <span data-ttu-id="0300e-143">Cela signifie qu’une instance d’une classe dérivée de <xref:System.Web.Services.Protocols.MimeFormatter> a déjà été créé.</span><span class="sxs-lookup"><span data-stu-id="0300e-143">This means an instance of a class derived from <xref:System.Web.Services.Protocols.MimeFormatter> has already been created.</span></span> <span data-ttu-id="0300e-144">Au moment d’une demande ou une réponse est traitée, l’initialiseur est passé à la <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> méthode d’une autre instance de la classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="0300e-144">At the time a request or response is processed, the initializer is passed to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method of another instance of the derived class.</span></span> <span data-ttu-id="0300e-145">L’objet de ce dernier effectue la lecture réelle ou l’écriture.</span><span class="sxs-lookup"><span data-stu-id="0300e-145">The latter object performs the actual reading or writing.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetInitializers">
      <MemberSignature Language="C#" Value="public static object[] GetInitializers (Type type, System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object[] GetInitializers(class System.Type type, class System.Web.Services.Protocols.LogicalMethodInfo[] methodInfos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Object ^&gt; ^ GetInitializers(Type ^ type, cli::array &lt;System::Web::Services::Protocols::LogicalMethodInfo ^&gt; ^ methodInfos);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="methodInfos" Type="System.Web.Services.Protocols.LogicalMethodInfo[]" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="0300e-146">Type, dérivé de <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, pour lequel les initialiseurs sont obtenus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0300e-146">The Type, derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />, for which initializers are obtained.</span>
          </span>
        </param>
        <param name="methodInfos">
          <span data-ttu-id="0300e-147">Tableau de type <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> spécifiant les méthodes Web pour lesquelles les initialiseurs sont obtenus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0300e-147">An array of type <see cref="T:System.Web.Services.Protocols.LogicalMethodInfo" /> that specifies the Web methods for which the initializers are obtained.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0300e-148">Retourne un tableau des objets de l'initialiseur correspondant à un tableau d'entrée des définitions de la méthode pour une classe spécifiée dérivée de <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0300e-148">Returns an array of initializer objects corresponding to an input array of method definitions for a specified class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0300e-149">Tableau des objets de l'initialiseur correspondant au tableau d'entrée des définitions de la méthode pour une classe spécifiée dérivée de <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0300e-149">An array of initializer objects corresponding to the input array of method definitions for a specified class derived from <see cref="T:System.Web.Services.Protocols.MimeFormatter" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0300e-150">Un initialiseur est un objet passé comme paramètre à la <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0300e-150">An initializer is an object passed as a parameter to the <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method.</span></span>  
  
 <span data-ttu-id="0300e-151">La méthode statique <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> méthode provoque l’appel de la <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> méthode appartenant à la classe dérivée spécifiée par le `type` paramètre.</span><span class="sxs-lookup"><span data-stu-id="0300e-151">The static <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializers%2A> method causes the invocation of the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method belonging to the derived class specified by the `type` parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public abstract void Initialize (object initializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(object initializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Services.Protocols.MimeFormatter.Initialize(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Initialize (initializer As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Initialize(System::Object ^ initializer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="initializer" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="initializer">
          <span data-ttu-id="0300e-152">Objet d'un type approprié à la classe particulière implémentant la méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0300e-152">An object of a type appropriate to the particular class that is implementing the method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0300e-153">En cas de substitution dans une classe dérivée, initialise une instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0300e-153">When overridden in a derived class, initializes an instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0300e-154">Le <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> méthode est appelée lors du traitée d’une demande ou réponse ; Toutefois, l’initialiseur est obtenu en appelant le <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> méthode sur une autre instance pendant l’initialisation du client ou du service.</span><span class="sxs-lookup"><span data-stu-id="0300e-154">The <xref:System.Web.Services.Protocols.MimeFormatter.Initialize%2A> method is invoked at the time a request or response is processed; however, the initializer is obtained by calling the <xref:System.Web.Services.Protocols.MimeFormatter.GetInitializer%2A> method on another instance during client or service initialization.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>