<Type Name="EncryptedType" FullName="System.Security.Cryptography.Xml.EncryptedType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7e84823dee630d42fcee25e0a8d5066956518c9a" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37465061" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class EncryptedType" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit EncryptedType extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.EncryptedType" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class EncryptedType" />
  <TypeSignature Language="C++ CLI" Value="public ref class EncryptedType abstract" />
  <TypeSignature Language="F#" Value="type EncryptedType = class" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente la classe de base abstraite d'où dérivent les classes <see cref="T:System.Security.Cryptography.Xml.EncryptedData" /> et <see cref="T:System.Security.Cryptography.Xml.EncryptedKey" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.Cryptography.Xml.EncryptedType> classe représente la classe de base abstraite à partir de laquelle les classes <xref:System.Security.Cryptography.Xml.EncryptedData> et <xref:System.Security.Cryptography.Xml.EncryptedKey> dériver. Ces deux classes contiennent les données chiffrées ou réelles des informations de clé de chiffrement XML. Pour être conforme aux normes de chiffrement XML, vous devez utiliser ces deux classes dérivées.  
  
 Pour plus d’informations sur les normes de chiffrement XML, consultez [XML Encryption Syntax et traitement Version 1.1](https://www.w3.org/TR/xmlenc-core/).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment chiffrer et déchiffrer un élément XML en utilisant le <xref:System.Security.Cryptography.Xml.EncryptedData> classe qui dérive de la <xref:System.Security.Cryptography.Xml.EncryptedType> classe.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected EncryptedType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; EncryptedType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.Xml.EncryptedType" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur crée une nouvelle instance de la <xref:System.Security.Cryptography.Xml.EncryptedType> classe. Cette classe représente la classe de base abstraite à partir de laquelle les classes <xref:System.Security.Cryptography.Xml.EncryptedData> et <xref:System.Security.Cryptography.Xml.EncryptedKey> dériver. Pour être conforme aux normes de chiffrement XML, vous devez utiliser les deux classes dérivées. Pour plus d’informations sur les normes de chiffrement XML, consultez [XML Encryption Syntax et traitement Version 1.1](https://www.w3.org/TR/xmlenc-core/).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment chiffrer et déchiffrer un élément XML en utilisant le <xref:System.Security.Cryptography.Xml.EncryptedData> classe qui dérive de la <xref:System.Security.Cryptography.Xml.EncryptedType> classe.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProperty">
      <MemberSignature Language="C#" Value="public void AddProperty (System.Security.Cryptography.Xml.EncryptionProperty ep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddProperty(class System.Security.Cryptography.Xml.EncryptionProperty ep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.AddProperty(System.Security.Cryptography.Xml.EncryptionProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddProperty (ep As EncryptionProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddProperty(System::Security::Cryptography::Xml::EncryptionProperty ^ ep);" />
      <MemberSignature Language="F#" Value="member this.AddProperty : System.Security.Cryptography.Xml.EncryptionProperty -&gt; unit" Usage="encryptedType.AddProperty ep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ep" Type="System.Security.Cryptography.Xml.EncryptionProperty" />
      </Parameters>
      <Docs>
        <param name="ep">Objet <see cref="T:System.Security.Cryptography.Xml.EncryptionProperty" />.</param>
        <summary>Ajoute un élément enfant <see langword="&lt;EncryptionProperty&gt;" /> à l'élément <see langword="&lt;EncryptedProperties&gt;" /> dans l'objet <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> actuel du chiffrement XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode peut être utilisée pour ajouter `<EncryptionProperty>` éléments enfants pour le `<EncryptedProperties>` élément. Le `<EncryptedProperties>` élément fournit des informations supplémentaires pour le `<EncryptedType>` élément.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CipherData">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.Xml.CipherData CipherData { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.CipherData CipherData" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.CipherData" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CipherData As CipherData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::Xml::CipherData ^ CipherData { System::Security::Cryptography::Xml::CipherData ^ get(); void set(System::Security::Cryptography::Xml::CipherData ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CipherData : System.Security.Cryptography.Xml.CipherData with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.CipherData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.CipherData</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur <see cref="T:System.Security.Cryptography.Xml.CipherData" /> d'une instance de la classe <see cref="T:System.Security.Cryptography.Xml.EncryptedType" />.</summary>
        <value>Objet <see cref="T:System.Security.Cryptography.Xml.CipherData" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `<CipherData>` élément est un élément requis dans le chiffrement XML qui fournit les données chiffrées. Il doit contenir soit la séquence d’octets chiffrée en tant que le texte codé en base64 de la <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> propriété, ou fournir une référence à un emplacement externe qui contient la séquence d’octets chiffrée à l’aide du <xref:System.Security.Cryptography.Xml.CipherData.CipherReference%2A> propriété.  
  
 Pour plus d’informations sur cet élément, consultez <xref:System.Security.Cryptography.Xml.CipherData>.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment chiffrer et déchiffrer un élément XML en utilisant le <xref:System.Security.Cryptography.Xml.EncryptedData> classe qui dérive de la <xref:System.Security.Cryptography.Xml.EncryptedType> classe.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propriété <see cref="P:System.Security.Cryptography.Xml.EncryptedType.CipherData" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public virtual string Encoding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Encoding As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Encoding { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'attribut <see langword="Encoding" /> d'une instance <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> du chiffrement XML.</summary>
        <value>Chaîne qui décrit le codage des données chiffrées.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété décrit le codage des données chiffrées. Par exemple, si les données chiffrées sont un PNG codé en base 64, le codage peut être spécifié commehttp://www.w3.org/2000/09/xmldsig#base64'.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment chiffrer et déchiffrer un élément XML en utilisant le <xref:System.Security.Cryptography.Xml.EncryptedData> classe qui dérive de la <xref:System.Security.Cryptography.Xml.EncryptedType> classe. Cet exemple affiche ensuite les diverses propriétés de la <xref:System.Security.Cryptography.Xml.EncryptedData> classe à la console.  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionMethod">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.Xml.EncryptionMethod EncryptionMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.EncryptionMethod EncryptionMethod" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EncryptionMethod As EncryptionMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::Xml::EncryptionMethod ^ EncryptionMethod { System::Security::Cryptography::Xml::EncryptionMethod ^ get(); void set(System::Security::Cryptography::Xml::EncryptionMethod ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionMethod : System.Security.Cryptography.Xml.EncryptionMethod with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.EncryptionMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptionMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'élément <see langword="&lt;EncryptionMethod&gt;" /> pour le chiffrement XML.</summary>
        <value>Objet <see cref="T:System.Security.Cryptography.Xml.EncryptionMethod" /> qui représente l'élément <see langword="&lt;EncryptionMethod&gt;" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `<EncryptionMethod>` est un élément facultatif qui décrit l’algorithme de chiffrement appliqué aux données chiffrées. Si l’élément est absent, l’algorithme de chiffrement doit être connu par le destinataire ou le déchiffrement échoue.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment chiffrer et déchiffrer un élément XML en utilisant le <xref:System.Security.Cryptography.Xml.EncryptedData> classe qui dérive de la <xref:System.Security.Cryptography.Xml.EncryptedType> classe.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EncryptionProperties">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.Xml.EncryptionPropertyCollection EncryptionProperties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.EncryptionPropertyCollection EncryptionProperties" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EncryptionProperties As EncryptionPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::Xml::EncryptionPropertyCollection ^ EncryptionProperties { System::Security::Cryptography::Xml::EncryptionPropertyCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionProperties : System.Security.Cryptography.Xml.EncryptionPropertyCollection" Usage="System.Security.Cryptography.Xml.EncryptedType.EncryptionProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.EncryptionPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'élément <see langword="&lt;EncryptionProperties&gt;" /> du chiffrement XML.</summary>
        <value>Objet <see cref="T:System.Security.Cryptography.Xml.EncryptionPropertyCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `<EncryptionProperties>` élément peut contenir des informations supplémentaires sur la création de la <xref:System.Security.Cryptography.Xml.EncryptedType> instance, par exemple un cachet de date et d’heure ou le numéro de série du matériel de chiffrement utilisé pendant le chiffrement.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment chiffrer et déchiffrer un élément XML en utilisant le <xref:System.Security.Cryptography.Xml.EncryptedData> classe qui dérive de la <xref:System.Security.Cryptography.Xml.EncryptedType> classe. Cet exemple affiche ensuite les diverses propriétés de la <xref:System.Security.Cryptography.Xml.EncryptedData> classe à la console.  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public abstract System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Xml::XmlElement ^ GetXml();" />
      <MemberSignature Language="F#" Value="abstract member GetXml : unit -&gt; System.Xml.XmlElement" Usage="encryptedType.GetXml " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne la représentation XML de l'objet <see cref="T:System.Security.Cryptography.Xml.EncryptedType" />.</summary>
        <returns>Objet <see cref="T:System.Xml.XmlElement" /> qui représente l'élément <see langword="&lt;EncryptedType&gt;" /> du chiffrement XML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode permet de générer le `<EncryptedType>` élément dans XML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public virtual string Id { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Id" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.Id" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Id As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Id { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Id : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'attribut <see langword="Id" /> d'une instance <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> du chiffrement XML.</summary>
        <value>Chaîne de l'attribut <see langword="Id" /> de l'élément <see langword="&lt;EncryptedType&gt;" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `Id` attribut est un attribut facultatif de le `<EncryptedType>` élément qui fournit une méthode standard pour l’affectation d’un identificateur de chaîne à un élément dans un document XML.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment chiffrer et déchiffrer un élément XML en utilisant le <xref:System.Security.Cryptography.Xml.EncryptedData> classe qui dérive de la <xref:System.Security.Cryptography.Xml.EncryptedType> classe. Cet exemple affiche ensuite les diverses propriétés de la <xref:System.Security.Cryptography.Xml.EncryptedData> classe à la console.  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyInfo">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.KeyInfo KeyInfo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.KeyInfo KeyInfo" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.KeyInfo" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyInfo As KeyInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::KeyInfo ^ KeyInfo { System::Security::Cryptography::Xml::KeyInfo ^ get(); void set(System::Security::Cryptography::Xml::KeyInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.KeyInfo : System.Security.Cryptography.Xml.KeyInfo with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.KeyInfo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.KeyInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'élément <see langword="&lt;KeyInfo&gt;" /> du chiffrement XML.</summary>
        <value>Objet <see cref="T:System.Security.Cryptography.Xml.KeyInfo" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `<KeyInfo>` est un élément facultatif qui contient des informations sur la clé utilisée pour chiffrer les données.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment chiffrer et déchiffrer un élément XML en utilisant le <xref:System.Security.Cryptography.Xml.EncryptedData> classe qui dérive de la <xref:System.Security.Cryptography.Xml.EncryptedType> classe. Cet exemple affiche ensuite les diverses propriétés de la <xref:System.Security.Cryptography.Xml.EncryptedData> classe à la console.  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public abstract void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.EncryptedType.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberSignature Language="F#" Value="abstract member LoadXml : System.Xml.XmlElement -&gt; unit" Usage="encryptedType.LoadXml value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">Objet <see cref="T:System.Xml.XmlElement" /> qui représente un élément XML à utiliser dans l'élément <see langword="&lt;EncryptedType&gt;" />.</param>
        <summary>Charge les informations XML dans l'élément <see langword="&lt;EncryptedType&gt;" /> du chiffrement XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour charger un élément XML existant dans le <xref:System.Security.Cryptography.Xml.EncryptedType> objet.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment chiffrer et déchiffrer un élément XML en utilisant le <xref:System.Security.Cryptography.Xml.EncryptedData> classe qui dérive de la <xref:System.Security.Cryptography.Xml.EncryptedType> classe.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'objet <paramref name="value" /> fourni est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MimeType">
      <MemberSignature Language="C#" Value="public virtual string MimeType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MimeType" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.MimeType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property MimeType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ MimeType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MimeType : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.MimeType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'attribut <see langword="MimeType" /> d'une instance <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> du chiffrement XML.</summary>
        <value>Chaîne qui décrit le type de média des données chiffrées.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `MimeType` attribut est un attribut facultatif qui décrit le type de média des données chiffrées. La valeur de cet attribut est une chaîne avec les valeurs définies par [RFC 2045 : Multipurpose Internet Mail Extensions MIME (), partie un : Format du corps de Message Internet](https://www.ietf.org/rfc/rfc2045.txt). Par exemple, si les données chiffrées sont un PNG codé en base 64, le `Encoding` attribut serait «http://www.w3.org/2000/09/xmldsig#base64» et le `MimeType` serait « image/png ». Cet attribut est facultatif et aucune validation de la `MimeType` informations sont requises. L’attribut n’indique pas que l’application de chiffrement doit effectuer un traitement supplémentaire. Notez que ces informations ne peuvent pas être nécessaires si elle est déjà liée à l’identificateur dans le `Type` attribut.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment chiffrer et déchiffrer un élément XML en utilisant le <xref:System.Security.Cryptography.Xml.EncryptedData> classe qui dérive de la <xref:System.Security.Cryptography.Xml.EncryptedType> classe. Cet exemple affiche ensuite les diverses propriétés de la <xref:System.Security.Cryptography.Xml.EncryptedData> classe à la console.  
  
 [!code-csharp[Cryptography.XML.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML.EncryptedData/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML.EncryptedData/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public virtual string Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.EncryptedType.Type" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Type { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Type : string with get, set" Usage="System.Security.Cryptography.Xml.EncryptedType.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'attribut <see langword="Type" /> d'une instance <see cref="T:System.Security.Cryptography.Xml.EncryptedType" /> du chiffrement XML.</summary>
        <value>Chaîne qui décrit la forme textuelle des données chiffrées.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `Type` attribut est un attribut facultatif qui identifie le type d’informations sur la forme de texte du contenu chiffré. Bien que facultative, il est important et est utilisé dans le traitement obligatoire décrit dans [règles de traitement : déchiffrement](https://www.w3.org/TR/xmlenc-core/) (section 4.2) de la spécification XML Encryption Syntax and Processing (https://www.w3.org/TR/xmlenc-core/). Si le `<EncryptedData>` élément contient des données de type `'element'` ou élément `'content'`et remplace que les données dans un document XML, il est fortement recommandé que le `Type` attribut être fourni. Sans ces informations, l’application tente de déchiffrer les informations sera impossible de restaurer automatiquement le document XML à sa forme de texte d’origine.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment chiffrer et déchiffrer un élément XML en utilisant le <xref:System.Security.Cryptography.Xml.EncryptedData> classe qui dérive de la <xref:System.Security.Cryptography.Xml.EncryptedType> classe.  
  
 [!code-csharp[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/csharp/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/cs/sample.cs#1)]
 [!code-vb[Cryptography.XML-EncryptedData - EncryptedType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Cryptography.XML-EncryptedData - EncryptedType/vb/sample.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>