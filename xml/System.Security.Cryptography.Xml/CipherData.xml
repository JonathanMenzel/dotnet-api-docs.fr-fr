<Type Name="CipherData" FullName="System.Security.Cryptography.Xml.CipherData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="47b5b94cf8d541a56d1d0e71246b5b93a6c1fa0a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30499263" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CipherData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CipherData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Security.Cryptography.Xml.CipherData" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CipherData" />
  <TypeSignature Language="C++ CLI" Value="public ref class CipherData sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Security</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente l'élément <see langword="&lt;CipherData&gt;" /> utilisé dans le chiffrement XML. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.Cryptography.Xml.CipherData> classe représente le `<CipherData>` élément dans le chiffrement XML. Il s’agit d’un élément requis qui fournit les données chiffrées. Il doit contenir les données chiffrées en tant que texte codé en base64 de la `<CipherValue>` élément, ou fournir une référence à un emplacement externe qui contient les données chiffrées à l’aide de la `<CipherReference>` élément.  
  
 Dans de nombreux cas, vous n’avez pas besoin de créer directement une nouvelle instance de la <xref:System.Security.Cryptography.Xml.CipherData> classe.  Le <xref:System.Security.Cryptography.Xml.SignedXml.EncryptedXml%2A>, <xref:System.Security.Cryptography.Xml.EncryptedData>, et <xref:System.Security.Cryptography.Xml.EncryptedKey> classes créent des instances pour vous.  
  
> [!NOTE]
>  A <xref:System.Security.Cryptography.Xml.CipherData> objet peut avoir soit une <xref:System.Security.Cryptography.Xml.CipherReference> propriété ou un <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> propriété, mais pas les deux. A <xref:System.Security.Cryptography.CryptographicException> est levée si les deux sont affectées à un <xref:System.Security.Cryptography.Xml.CipherData> objet.  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Security.Cryptography.Xml.EncryptedData> classe pour créer une <`EncryptedData`> élément qui contient un <`CipherData`> élément, puis écrit le XML dans un fichier XML.  
  
 [!code-cpp[cryptgraphy.Xml.EncryptedData#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/cpp/encrypteddata.cpp#1)]
 [!code-csharp[cryptgraphy.Xml.EncryptedData#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/CS/encrypteddata.cs#1)]
 [!code-vb[cryptgraphy.Xml.EncryptedData#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/VB/encrypteddata.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.Xml.CipherData" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CipherData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherData.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CipherData();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.Xml.CipherData" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur crée un <xref:System.Security.Cryptography.Xml.CipherData> objet qui représente le `<CipherData>` élément dans le chiffrement XML. Le `<CipherData>` élément est un élément requis dans le chiffrement XML.  
  
   
  
## Examples  
 L'exemple suivant illustre la création d'une nouvelle instance de la classe <xref:System.Security.Cryptography.Xml.CipherData>. L’exemple complet peut être trouvé dans le <xref:System.Security.Cryptography.Xml.CipherData> rubrique de la classe.  
  
 [!code-cpp[cryptgraphy.Xml.EncryptedData#2](~/samples/snippets/cpp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/cpp/encrypteddata.cpp#2)]
 [!code-csharp[cryptgraphy.Xml.EncryptedData#2](~/samples/snippets/csharp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/CS/encrypteddata.cs#2)]
 [!code-vb[cryptgraphy.Xml.EncryptedData#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/VB/encrypteddata.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CipherData (byte[] cipherValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] cipherValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherData.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cipherValue As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CipherData(cli::array &lt;System::Byte&gt; ^ cipherValue);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cipherValue" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="cipherValue">Données chiffrées à utiliser pour l'élément <see langword="&lt;CipherValue&gt;" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.Xml.CipherData" /> à l'aide d'un tableau d'octets comme valeur <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur crée un <xref:System.Security.Cryptography.Xml.CipherData> objet qui représente le `<CipherData>` élément dans le chiffrement XML. Le constructeur affecte la `cipherValue` valeur le <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> réelle de la propriété des données chiffrées.  
  
> [!NOTE]
>  Le `<CipherData>` élément peut avoir soit une <xref:System.Security.Cryptography.Xml.CipherReference> ou un <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> un élément enfant, mais pas les deux. A <xref:System.Security.Cryptography.CryptographicException> est levée si les deux sont affectées à un <xref:System.Security.Cryptography.Xml.CipherData> objet.  
  
   
  
## Examples  
 L'exemple suivant illustre la création d'une nouvelle instance de la classe <xref:System.Security.Cryptography.Xml.CipherData>.  
  
 [!code-cpp[cryptography.Xml.EncryptedData2#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/CPP/encrypteddata.cpp#1)]
 [!code-csharp[cryptography.Xml.EncryptedData2#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/CS/encrypteddata.cs#1)]
 [!code-vb[cryptography.Xml.EncryptedData2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/VB/encrypteddata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="cipherValue" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La propriété <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> a déjà été définie.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CipherData (System.Security.Cryptography.Xml.CipherReference cipherReference);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.Xml.CipherReference cipherReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherData.#ctor(System.Security.Cryptography.Xml.CipherReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CipherData(System::Security::Cryptography::Xml::CipherReference ^ cipherReference);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cipherReference" Type="System.Security.Cryptography.Xml.CipherReference" />
      </Parameters>
      <Docs>
        <param name="cipherReference">L'objet <see cref="T:System.Security.Cryptography.Xml.CipherReference" /> à utiliser.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Security.Cryptography.Xml.CipherData" /> à l'aide d'un objet <see cref="T:System.Security.Cryptography.Xml.CipherReference" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur crée un <xref:System.Security.Cryptography.Xml.CipherData> objet qui représente le `<CipherData>` élément dans le chiffrement XML et lui affecte le `cipherReference` valeur le <xref:System.Security.Cryptography.Xml.CipherReference> propriété. Le <xref:System.Security.Cryptography.Xml.CipherReference> objet représente le `<CipherReference>` élément, qui fournit l’emplacement des données chiffrées.  
  
> [!NOTE]
>  A <xref:System.Security.Cryptography.Xml.CipherData> objet peut avoir soit une <xref:System.Security.Cryptography.Xml.CipherReference> propriété ou un <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> propriété, mais pas les deux. A <xref:System.Security.Cryptography.CryptographicException> est levée si les deux sont affectées à un <xref:System.Security.Cryptography.Xml.CipherData> objet.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer une nouvelle instance de la <xref:System.Security.Cryptography.Xml.CipherData> à l’aide de la classe <xref:System.Security.Cryptography.Xml.CipherReference> plus d’informations.  
  
 [!code-cpp[cryptography.Xml.CipherReference#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CPP/example.cpp#1)]
 [!code-csharp[cryptography.Xml.CipherReference#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CS/example.cs#1)]
 [!code-vb[cryptography.Xml.CipherReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.CipherReference/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="cipherValue" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La propriété <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> a déjà été définie.</exception>
      </Docs>
    </Member>
    <Member MemberName="CipherReference">
      <MemberSignature Language="C#" Value="public System.Security.Cryptography.Xml.CipherReference CipherReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.Xml.CipherReference CipherReference" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.CipherData.CipherReference" />
      <MemberSignature Language="VB.NET" Value="Public Property CipherReference As CipherReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Cryptography::Xml::CipherReference ^ CipherReference { System::Security::Cryptography::Xml::CipherReference ^ get(); void set(System::Security::Cryptography::Xml::CipherReference ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.Xml.CipherReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'élément <see langword="&lt;CipherReference&gt;" />.</summary>
        <value>Objet <see cref="T:System.Security.Cryptography.Xml.CipherReference" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `<CipherReference>` élément identifie une source qui, après traitement, produit les données chiffrées. Pour plus d’informations sur cet élément, consultez <xref:System.Security.Cryptography.Xml.CipherReference>.  
  
> [!NOTE]
>  A <xref:System.Security.Cryptography.Xml.CipherData> objet peut avoir soit une <xref:System.Security.Cryptography.Xml.CipherReference> propriété ou un <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> propriété, mais pas les deux. A <xref:System.Security.Cryptography.CryptographicException> est levée si les deux sont affectées à un <xref:System.Security.Cryptography.Xml.CipherData> objet.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer une nouvelle instance de la <xref:System.Security.Cryptography.Xml.CipherData> à l’aide de la classe <xref:System.Security.Cryptography.Xml.CipherReference> plus d’informations.  
  
 [!code-cpp[cryptography.Xml.CipherReference#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CPP/example.cpp#1)]
 [!code-csharp[cryptography.Xml.CipherReference#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.CipherReference/CS/example.cs#1)]
 [!code-vb[cryptography.Xml.CipherReference#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.CipherReference/VB/example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propriété <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La propriété <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" /> a été définie plus d'une fois.</exception>
      </Docs>
    </Member>
    <Member MemberName="CipherValue">
      <MemberSignature Language="C#" Value="public byte[] CipherValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] CipherValue" />
      <MemberSignature Language="DocId" Value="P:System.Security.Cryptography.Xml.CipherData.CipherValue" />
      <MemberSignature Language="VB.NET" Value="Public Property CipherValue As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ CipherValue { cli::array &lt;System::Byte&gt; ^ get(); void set(cli::array &lt;System::Byte&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'élément <see langword="&lt;CipherValue&gt;" />.</summary>
        <value>Tableau d'octets qui représente l'élément <see langword="&lt;CipherValue&gt;" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur constitue les données chiffrées.  
  
> [!NOTE]
>  Le `<CipherData>` élément peut avoir soit une <xref:System.Security.Cryptography.Xml.CipherReference> ou un <xref:System.Security.Cryptography.Xml.CipherData.CipherValue%2A> un élément enfant, mais pas les deux. A <xref:System.Security.Cryptography.CryptographicException> est levée si les deux sont affectées à un <xref:System.Security.Cryptography.Xml.CipherData> objet.  
  
   
  
## Examples  
 L'exemple suivant illustre la création d'une nouvelle instance de la classe <xref:System.Security.Cryptography.Xml.CipherData>.  
  
 [!code-cpp[cryptography.Xml.EncryptedData2#1](~/samples/snippets/cpp/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/CPP/encrypteddata.cpp#1)]
 [!code-csharp[cryptography.Xml.EncryptedData2#1](~/samples/snippets/csharp/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/CS/encrypteddata.cs#1)]
 [!code-vb[cryptography.Xml.EncryptedData2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptography.Xml.EncryptedData2/VB/encrypteddata.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">La propriété <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La propriété <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> a été définie plus d'une fois.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetXml">
      <MemberSignature Language="C#" Value="public System.Xml.XmlElement GetXml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlElement GetXml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherData.GetXml" />
      <MemberSignature Language="VB.NET" Value="Public Function GetXml () As XmlElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlElement ^ GetXml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlElement</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient les valeurs XML pour l'objet <see cref="T:System.Security.Cryptography.Xml.CipherData" />.</summary>
        <returns>Objet <see cref="T:System.Xml.XmlElement" /> qui représente les informations XML pour l'objet <see cref="T:System.Security.Cryptography.Xml.CipherData" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour sortir du XML pour un <xref:System.Security.Cryptography.Xml.CipherData> objet.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment créer une nouvelle instance de la <xref:System.Security.Cryptography.Xml.CipherData> objet.  
  
 [!code-cpp[cryptgraphy.Xml.EncryptedData#2](~/samples/snippets/cpp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/cpp/encrypteddata.cpp#2)]
 [!code-csharp[cryptgraphy.Xml.EncryptedData#2](~/samples/snippets/csharp/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/CS/encrypteddata.cs#2)]
 [!code-vb[cryptgraphy.Xml.EncryptedData#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/cryptgraphy.Xml.EncryptedData/VB/encrypteddata.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La propriété <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> et la propriété <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" /> sont <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadXml">
      <MemberSignature Language="C#" Value="public void LoadXml (System.Xml.XmlElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LoadXml(class System.Xml.XmlElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Security.Cryptography.Xml.CipherData.LoadXml(System.Xml.XmlElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub LoadXml (value As XmlElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LoadXml(System::Xml::XmlElement ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Security</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Security.Cryptography.Xml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Xml.XmlElement" />
      </Parameters>
      <Docs>
        <param name="value">
          <see cref="T:System.Xml.XmlElement" /> qui représente les données XML à charger.</param>
        <summary>Charge les données XML provenant d'un <see cref="T:System.Xml.XmlElement" /> dans un objet <see cref="T:System.Security.Cryptography.Xml.CipherData" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Security.Cryptography.Xml.CipherData.LoadXml%2A> méthode le remplace les éléments XML existants avec les `value` paramètre.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le paramètre <paramref name="value" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.Security.Cryptography.CryptographicException">La propriété <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherValue" /> et la propriété <see cref="P:System.Security.Cryptography.Xml.CipherData.CipherReference" /> sont <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>