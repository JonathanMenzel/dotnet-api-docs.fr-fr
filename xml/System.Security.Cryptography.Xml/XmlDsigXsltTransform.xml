<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlDsigXsltTransform.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac520a7e194ca93ccd3dd718357991a711900f1c62e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">20a7e194ca93ccd3dd718357991a711900f1c62e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform">
          <source>Represents the XSLT transform for a digital signature as defined by the W3C.</source>
          <target state="translated">Représente la transformation XSLT pour une signature numérique, conformément à la définition du W3C (World Wide Web Consortium).</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform">
          <source>The <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform&gt;</ph> class allows you to address an XML document using an XSLT transformation.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXPathTransform&gt;</ph> classe vous permet d’adresser un document XML à l’aide d’une transformation XSLT.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform">
          <source>This class uses XSLT to transform XML nodes into other XML nodes that you want to sign or encrypt.</source>
          <target state="translated">Cette classe utilise XSLT pour transformer des nœuds XML dans les autres nœuds XML que vous souhaitez signer ou chiffrer.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform">
          <source>Use the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> class to sign or encrypt specific parts of an XML document using an XSLT transformation.</source>
          <target state="translated">Utilisez la <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> classe pour signer ou chiffrer des parties spécifiques d’un document XML à l’aide d’une transformation XSLT.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform">
          <source>The Uniform Resource Identifier (URI) that describes the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> class is defined by the <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl&gt;</ph> field.</source>
          <target state="translated">L’identificateur de ressource uniforme (URI) qui décrit le <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> classe est définie par le <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.SignedXml.XmlDsigXsltTransformUrl&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform">
          <source>For more information about the XSLT transform, see Section 6.6.5 of the XMLDSIG specification, which is available from the W3C at www.w3.org/TR/xmldsig-core/.</source>
          <target state="translated">Pour plus d’informations sur la transformation XSLT, consultez la Section 6.6.5 de la spécification XMLDSIG, qui est disponible auprès du W3C à www.w3.org/TR/xmldsig-core/.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform">
          <source>This section contains two code examples.</source>
          <target state="translated">Cette section contient deux exemples de code.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform">
          <source>The first code example shows how to sign and verify an XML document using the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> class with an envelope signature.</source>
          <target state="translated">Le premier exemple de code montre comment signer et vérifier un document XML à l’aide la <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> classe avec une signature d’enveloppe.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform">
          <source>The second code example demonstrates how to use members of the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> class.</source>
          <target state="translated">Le deuxième exemple de code montre comment utiliser des membres de la <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform">
          <source><bpt id="p1">**</bpt>Example #1<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Exemple #1<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform">
          <source><bpt id="p1">**</bpt>Example #2<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>Exemple #2<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.#ctor">
          <source>The following code example shows how to sign and verify an XML document using the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> class with an envelope signature.</source>
          <target state="translated">L’exemple de code suivant montre comment signer et vérifier un document XML à l’aide la <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> classe avec une signature d’enveloppe.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.#ctor(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to include comments; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour inclure des commentaires ; sinon <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.#ctor(System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> class with comments, if specified.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> avec des commentaires (s'ils sont spécifiés).</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetInnerXml">
          <source>Returns an XML representation of the parameters of the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> object that are suitable to be included as subelements of an XMLDSIG <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">Retourne la représentation XML des paramètres de l'objet <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> qui conviennent pour être inclus comme sous-éléments d'un élément <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> XMLDSIG.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetInnerXml">
          <source>A list of the XML nodes that represent the transform-specific content needed to describe the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> object in an XMLDSIG <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">Liste des nœuds XML qui représentent le contenu propre à la transformation qui est nécessaire pour décrire l'objet <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> en cours dans un élément <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> XMLDSIG.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform">
          <source>Returns the output of the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> object.</source>
          <target state="translated">Retourne la sortie de l'objet <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> en cours.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput">
          <source>Returns the output of the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> object.</source>
          <target state="translated">Retourne la sortie de l'objet <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> en cours.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput">
          <source>The output of the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> object.</source>
          <target state="translated">Sortie de l'objet <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> en cours.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput">
          <source>The type of the returned object must be <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>.</source>
          <target state="translated">Le type de l’objet retourné doit être <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput%2A&gt;</ph> method to retrieve the output of the current <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> object.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput%2A&gt;</ph> pour récupérer la sortie d’actuel <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput(System.Type)">
          <source>The type of the output to return.</source>
          <target state="translated">Type de sortie à retourner.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput(System.Type)">
          <source><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> is the only valid type for this parameter.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.Stream" /&gt;</ph> est le seul type valide pour ce paramètre.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput(System.Type)">
          <source>Returns the output of the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> object of type <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">Retourne la sortie de l'objet <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> en cours, de type <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput(System.Type)">
          <source>The output of the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> object of type <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">Sortie de l'objet <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> en cours de type <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput(System.Type)">
          <source>The type of the returned object must be <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>.</source>
          <target state="translated">Le type de l’objet retourné doit être <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput(System.Type)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput%2A&gt;</ph> method to retrieve the output of the current <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> object.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput%2A&gt;</ph> pour récupérer la sortie d’actuel <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput(System.Type)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput(System.Type)">
          <source>The <ph id="ph1">&lt;paramref name="type" /&gt;</ph> parameter is not a <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph> object.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="type" /&gt;</ph> n'est pas un objet <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.Xml.XmlDsigXsltTransform.InputTypes">
          <source>Gets an array of types that are valid inputs to the <ph id="ph1">&lt;see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)" /&gt;</ph> method of the current <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> object.</source>
          <target state="translated">Obtient un tableau de types qui constituent des entrées valides dans les méthodes <ph id="ph1">&lt;see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)" /&gt;</ph> de l'objet <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> en cours.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlDsigXsltTransform.InputTypes">
          <source>An array of valid input types for the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> object; you can pass only objects of one of these types to the <ph id="ph2">&lt;see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)" /&gt;</ph> method of the current <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> object.</source>
          <target state="translated">Tableau de types d'entrées valides pour l'objet <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> en cours ; vous ne pouvez passer que des objets de ces types à la méthode <ph id="ph2">&lt;see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)" /&gt;</ph> de l'objet <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> en cours.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlDsigXsltTransform.InputTypes">
          <source>The valid input types to <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> are <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlDocument&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.XmlNodeList&gt;</ph>.</source>
          <target state="translated">Types de l’entrée valide à <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> sont <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlDocument&gt;</ph>, et <ph id="ph4">&lt;xref:System.Xml.XmlNodeList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlDsigXsltTransform.InputTypes">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform.InputTypes%2A&gt;</ph> property to retrieve the valid input types for the current transform.</source>
          <target state="translated">L’exemple de code suivant montre comment appeler le <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform.InputTypes%2A&gt;</ph> propriété à récupérer les types d’entrées valides pour la transformation en cours.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlDsigXsltTransform.InputTypes">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInnerXml(System.Xml.XmlNodeList)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> object that encapsulates an XSLT style sheet to load into the current <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> object.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> qui encapsule une feuille de styles XSLT à charger dans l'objet <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> en cours.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInnerXml(System.Xml.XmlNodeList)">
          <source>This style sheet is applied to the document loaded by the <ph id="ph1">&lt;see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Cette feuille de styles est appliquée au document chargé par la méthode <ph id="ph1">&lt;see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInnerXml(System.Xml.XmlNodeList)">
          <source>Parses the specified <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> object as transform-specific content of a <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> element and configures the internal state of the current <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> object to match the <ph id="ph4">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">Analyse l'objet <ph id="ph1">&lt;see cref="T:System.Xml.XmlNodeList" /&gt;</ph> spécifié en tant que contenu propre à la transformation d'un élément <ph id="ph2">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph> et configure l'état interne de l'objet <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> en cours pour qu'il corresponde à l'élément <ph id="ph4">&lt;see langword="&amp;lt;Transform&amp;gt;" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInnerXml(System.Xml.XmlNodeList)">
          <source>This method is used to process subelements of a <ph id="ph1">`&lt;Transform&gt;`</ph> element.</source>
          <target state="translated">Cette méthode est utilisée pour traiter des sous-éléments d’un <ph id="ph1">`&lt;Transform&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInnerXml(System.Xml.XmlNodeList)">
          <source>The following code example shows how to sign and verify an XML document using the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> class with an envelope signature.</source>
          <target state="translated">L’exemple de code suivant montre comment signer et vérifier un document XML à l’aide la <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> classe avec une signature d’enveloppe.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInnerXml(System.Xml.XmlNodeList)">
          <source>The <ph id="ph1">&lt;paramref name="nodeList" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="nodeList" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInnerXml(System.Xml.XmlNodeList)">
          <source>-or-</source>
          <target state="translated">- ou -</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInnerXml(System.Xml.XmlNodeList)">
          <source>The <ph id="ph1">&lt;paramref name="nodeList" /&gt;</ph> parameter does not contain an <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> object.</source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;paramref name="nodeList" /&gt;</ph> ne contient pas d'objet <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)">
          <source>The input to load into the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> object.</source>
          <target state="translated">Entrée à charger dans l'objet <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> en cours.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)">
          <source>Loads the specified input into the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> object.</source>
          <target state="translated">Charge l'entrée spécifiée dans l'objet <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> en cours.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)">
          <source>The type of the input object must be one of the types in the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform.InputTypes%2A&gt;</ph> property.</source>
          <target state="translated">Le type de l’objet d’entrée doit être un des types dans le <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform.InputTypes%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)">
          <source>The valid input types to <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> are <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlDocument&gt;</ph>, and <ph id="ph4">&lt;xref:System.Xml.XmlNodeList&gt;</ph>.</source>
          <target state="translated">Types de l’entrée valide à <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> sont <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>, <ph id="ph3">&lt;xref:System.Xml.XmlDocument&gt;</ph>, et <ph id="ph4">&lt;xref:System.Xml.XmlNodeList&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput%2A&gt;</ph> method using the specified <ph id="ph2">&lt;xref:System.Xml.XmlDocument&gt;</ph> object as the input.</source>
          <target state="translated">L’exemple de code suivant montre comment appeler le <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput%2A&gt;</ph> à l’aide de la méthode de <ph id="ph2">&lt;xref:System.Xml.XmlDocument&gt;</ph> objet comme entrée.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.LoadInput(System.Object)">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Security.Cryptography.Xml.XmlDsigXsltTransform.OutputTypes">
          <source>Gets an array of types that are possible outputs from the <ph id="ph1">&lt;see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput" /&gt;</ph> methods of the current <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> object.</source>
          <target state="translated">Obtient un tableau de types qui constituent des sorties valides des méthodes <ph id="ph1">&lt;see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput" /&gt;</ph> de l'objet <ph id="ph2">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> en cours.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlDsigXsltTransform.OutputTypes">
          <source>An array of valid output types for the current <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> object; only objects of one of these types are returned from the <ph id="ph2">&lt;see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput" /&gt;</ph> methods of the current <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> object.</source>
          <target state="translated">Tableau des types de sorties valides pour l'objet <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> en cours ; les méthodes <ph id="ph2">&lt;see cref="M:System.Security.Cryptography.Xml.XmlDsigXsltTransform.GetOutput" /&gt;</ph> de l'objet <ph id="ph3">&lt;see cref="T:System.Security.Cryptography.Xml.XmlDsigXsltTransform" /&gt;</ph> en cours retournent uniquement des objets de l'un de ces types.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlDsigXsltTransform.OutputTypes">
          <source><ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> is the only valid output type for <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> est le type de sortie valide uniquement pour <ph id="ph2">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlDsigXsltTransform.OutputTypes">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform.OutputTypes%2A&gt;</ph> property to retrieve the valid output types for the current transform.</source>
          <target state="translated">L’exemple de code suivant montre comment appeler le <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform.OutputTypes%2A&gt;</ph> propriété à récupérer les types de sortie valide pour la transformation en cours.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Security.Cryptography.Xml.XmlDsigXsltTransform.OutputTypes">
          <source>This code example is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> class.</source>
          <target state="translated">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Security.Cryptography.Xml.XmlDsigXsltTransform&gt;</ph> classe.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>