<Type Name="QuaternionConverter" FullName="System.Windows.Media.Media3D.QuaternionConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ff3c6da98be85fd19869e25e8e58c17c918025b8" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37498034" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class QuaternionConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit QuaternionConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Media3D.QuaternionConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class QuaternionConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class QuaternionConverter sealed : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type QuaternionConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b8871-101">Convertit les instances d'autres types vers et à partir des instances de <see cref="T:System.Windows.Media.Media3D.Quaternion" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b8871-101">Converts instances of other types to and from instances of <see cref="T:System.Windows.Media.Media3D.Quaternion" />.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QuaternionConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.QuaternionConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QuaternionConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b8871-102">Initialise une instance de la classe <see cref="T:System.Windows.Media.Media3D.QuaternionConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8871-102">Initializes an instance of the <see cref="T:System.Windows.Media.Media3D.QuaternionConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.QuaternionConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="quaternionConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b8871-103">ITypeDescriptorContext pour cet appel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8871-103">ITypeDescriptorContext for this call.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="b8871-104">Type interrogé pour la prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8871-104">Type being queried for support.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8871-105">Obtient une valeur qui indique si ce convertisseur de type peut convertir à partir d'un type donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8871-105">Gets a value that indicates whether this type converter can convert from a given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8871-106">True si ce convertisseur peut convertir à partir du type fourni, sinon false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8871-106">True if this converter can convert from the provided type, false otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.QuaternionConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool&#xA;override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="quaternionConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b8871-107">ITypeDescriptorContext pour cet appel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8871-107">ITypeDescriptorContext for this call.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="b8871-108">Type interrogé pour la prise en charge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8871-108">Type being queried for support.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8871-109">Obtient une valeur qui indique si ce convertisseur de type peut convertir vers le type donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8871-109">Gets a value that indicates whether this type converter can convert to the given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8871-110">True si ce convertisseur peut convertir vers le type fourni, sinon false.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8871-110">True if this converter can convert to the provided type, false otherwise.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.QuaternionConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj&#xA;override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="quaternionConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b8871-111">ITypeDescriptorContext pour cet appel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8871-111">ITypeDescriptorContext for this call.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="b8871-112">CultureInfo à respecter lors de la conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8871-112">CultureInfo to be respected when converting.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b8871-113">Objet à convertir en une instance de Quaternion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8871-113">Object to convert to an instance of Quaternion.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8871-114">Convertit l'objet spécifié en <see cref="T:System.Windows.Media.Media3D.Quaternion" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8871-114">Converts the specified object to a <see cref="T:System.Windows.Media.Media3D.Quaternion" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8871-115">Quaternion qui a été construit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8871-115">Quaternion that was constructed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Media3D.QuaternionConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="abstract member ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj&#xA;override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="quaternionConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b8871-116">ITypeDescriptorContext pour cet appel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8871-116">The ITypeDescriptorContext for this call.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="b8871-117">CultureInfo respecté lors de la conversion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8871-117">The CultureInfo which is respected when converting.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b8871-118">Objet à convertir en une instance de <c>destinationType</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8871-118">The object to convert to an instance of <c>destinationType</c>.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="b8871-119">Type vers lequel l'instance Matrix3D sera convertie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8871-119">The type to which the Matrix3D instance will be converted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b8871-120">Tente de convertir une instance de <see cref="T:System.Windows.Media.Media3D.Quaternion" /> vers le type donné.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8871-120">Attempts to convert an instance of <see cref="T:System.Windows.Media.Media3D.Quaternion" /> to the given type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b8871-121">Objet qui a été construit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b8871-121">Object that was constructed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>