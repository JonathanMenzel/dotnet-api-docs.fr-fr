<Type Name="ToolTask" FullName="Microsoft.Build.Utilities.ToolTask">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="57c54120a16bf1466b84eaa1dd29666f08c6c05e" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51312456" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ToolTask : Microsoft.Build.Utilities.Task, Microsoft.Build.Framework.ICancelableTask" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ToolTask extends Microsoft.Build.Utilities.Task implements class Microsoft.Build.Framework.ICancelableTask, class Microsoft.Build.Framework.ITask" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.ToolTask" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ToolTask&#xA;Inherits Task&#xA;Implements ICancelableTask" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolTask abstract : Microsoft::Build::Utilities::Task, Microsoft::Build::Framework::ICancelableTask" />
  <TypeSignature Language="F#" Value="type ToolTask = class&#xA;    inherit Task&#xA;    interface ICancelableTask&#xA;    interface ITask" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Utilities.Task</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ICancelableTask</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ITask</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>En cas de substitution dans un formulaire dérivé, fournit les fonctionnalités pour une tâche qui encapsule un outil en ligne de commande.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette classe abstraite fournit des implémentations par défaut pour les méthodes et propriétés d’une tâche qui encapsule un outil de ligne de commande.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:Microsoft.Build.Utilities.ToolTask> qui exécute [Ilasm.exe (assembleur IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md). Le <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, et <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes sont utilisées pour générer les informations nécessaires pour exécuter la tâche.  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.Build.Utilities.ToolTask" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ToolTask ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ToolTask();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.Build.Utilities.ToolTask" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ToolTask (System.Resources.ResourceManager taskResources);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Resources.ResourceManager taskResources) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.#ctor(System.Resources.ResourceManager)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (taskResources As ResourceManager)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ToolTask(System::Resources::ResourceManager ^ taskResources);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Utilities.ToolTask : System.Resources.ResourceManager -&gt; Microsoft.Build.Utilities.ToolTask" Usage="new Microsoft.Build.Utilities.ToolTask taskResources" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="taskResources" Type="System.Resources.ResourceManager" />
      </Parameters>
      <Docs>
        <param name="taskResources">
          <see cref="T:System.Resources.ResourceManager" /> pour les ressources de la tâche.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.Build.Utilities.ToolTask" /> avec le <see cref="T:System.Resources.ResourceManager" /> spécifié.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ToolTask (System.Resources.ResourceManager taskResources, string helpKeywordPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Resources.ResourceManager taskResources, string helpKeywordPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.#ctor(System.Resources.ResourceManager,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (taskResources As ResourceManager, helpKeywordPrefix As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ToolTask(System::Resources::ResourceManager ^ taskResources, System::String ^ helpKeywordPrefix);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Utilities.ToolTask : System.Resources.ResourceManager * string -&gt; Microsoft.Build.Utilities.ToolTask" Usage="new Microsoft.Build.Utilities.ToolTask (taskResources, helpKeywordPrefix)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="taskResources" Type="System.Resources.ResourceManager" />
        <Parameter Name="helpKeywordPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="taskResources">
          <see cref="T:System.Resources.ResourceManager" /> pour les ressources de la tâche.</param>
        <param name="helpKeywordPrefix">Mot clé d’aide à utiliser pour les messages générés par la tâche.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:Microsoft.Build.Utilities.ToolTask" /> avec le préfixe du mot clé d’aide et le <see cref="T:System.Resources.ResourceManager" /> spécifiés.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CallHostObjectToExecute">
      <MemberSignature Language="C#" Value="protected virtual bool CallHostObjectToExecute ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool CallHostObjectToExecute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.CallHostObjectToExecute" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CallHostObjectToExecute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool CallHostObjectToExecute();" />
      <MemberSignature Language="F#" Value="abstract member CallHostObjectToExecute : unit -&gt; bool&#xA;override this.CallHostObjectToExecute : unit -&gt; bool" Usage="toolTask.CallHostObjectToExecute " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Appelle l’objet hôte pour effectuer le travail lié à la tâche.</summary>
        <returns>
          <see langword="true" /> si la méthode a abouti ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public virtual void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Cancel();" />
      <MemberSignature Language="F#" Value="abstract member Cancel : unit -&gt; unit&#xA;override this.Cancel : unit -&gt; unit" Usage="toolTask.Cancel " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ICancelableTask.Cancel</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Annule le processus exécutant la tâche en lui demandant de se fermer correctement, puis après une brève période, en forçant l'arrêt.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteTempFile">
      <MemberSignature Language="C#" Value="protected void DeleteTempFile (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void DeleteTempFile(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.DeleteTempFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub DeleteTempFile (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void DeleteTempFile(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.DeleteTempFile : string -&gt; unit" Usage="toolTask.DeleteTempFile fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">Nom du fichier temporaire à supprimer.</param>
        <summary>Supprime le fichier temporaire spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si l’opération de suppression échoue pour une raison quelconque (par exemple si un fichier est verrouillé par un logiciel antivirus), puis cette méthode journalise un avertissement plutôt que de lever une exception, ce qui provoquerait l’échec de la build.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EchoOff">
      <MemberSignature Language="C#" Value="public bool EchoOff { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EchoOff" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.EchoOff" />
      <MemberSignature Language="VB.NET" Value="Public Property EchoOff As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EchoOff { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EchoOff : bool with get, set" Usage="Microsoft.Build.Utilities.ToolTask.EchoOff" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indique que l'affichage de la ligne de commande (Echo Off) est désactivé.</summary>
        <value>True lorsque l'affichage de la ligne de commande (Echo Off) est désactivé.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 MSBuild désactive la ligne de commande reproduit en écho en passant /Q sur la ligne de commande cmd.exe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvironmentOverride">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Specialized.StringDictionary EnvironmentOverride { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.StringDictionary EnvironmentOverride" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.EnvironmentOverride" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property EnvironmentOverride As StringDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::Specialized::StringDictionary ^ EnvironmentOverride { System::Collections::Specialized::StringDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnvironmentOverride : System.Collections.Specialized.StringDictionary" Usage="Microsoft.Build.Utilities.ToolTask.EnvironmentOverride" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("Use EnvironmentVariables property")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.StringDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un ensemble de paires nom-valeur de variables d’environnement. Conçu pour être substitué dans une classe de tâche personnalisée (dérivée de ToolTask) pour retourner un ensemble de variables d’environnement nouvelles ou modifiées permettant de créer le contexte d’exécution de l’outil associé.</summary>
        <value>Retourne un ensemble de variables d’environnement. Chaque clé de dictionnaire est le nom de la variable d’environnement à substituer et la valeur de dictionnaire est la valeur à définir pour cette variable d’environnement. L’implémentation par défaut d’EnvironmentOverride retourne la valeur null.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode ExecuteTool passe ces variables d’environnement au StartInfo du processus dans lequel s’exécute l’outil. Les variables d’environnement ne pas inclus dans le dictionnaire d’EnvironmentOverride sont hérités du processus dans lequel la méthode ExecuteTool s’exécute.  
  
   
  
## Examples  
  
```csharp  
using System;  
using Microsoft.Build.Utilities;  
using System.Collections.Specialized;  
  
/// <summary>  
/// CustomToolTask overrides the EnvironmentOverride property of ToolTask to add a directory  
/// to the Path environment variable of the process being executed  
/// </summary>  
abstract class CustomToolTask : ToolTask  
{  
      protected override StringDictionary EnvironmentOverride  
      {  
            get  
            {  
                  string newPath = Environment.GetEnvironmentVariable("Path", EnvironmentVariableTarget.Process) + @";C:\MyDirectory";  
                  StringDictionary result = new StringDictionary();  
                  result.Add("Path", newPath);  
                  return result;  
            }  
      }  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnvironmentVariables">
      <MemberSignature Language="C#" Value="public string[] EnvironmentVariables { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] EnvironmentVariables" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.EnvironmentVariables" />
      <MemberSignature Language="VB.NET" Value="Public Property EnvironmentVariables As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ EnvironmentVariables { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EnvironmentVariables : string[] with get, set" Usage="Microsoft.Build.Utilities.ToolTask.EnvironmentVariables" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tableau de paires séparées par un signe égal des variables d'environnement qui doivent être passées au fichier exécutable généré et qui viennent s'ajouter (ou se substituer de manière sélective) au bloc environnement normal.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette option au lieu d’EnvironmentOverride qui prend un StringDictionary, qui ne peut pas être défini à partir d’un projet MSBuild.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public override bool Execute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Execute() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.Execute" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Execute () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Execute();" />
      <MemberSignature Language="F#" Value="override this.Execute : unit -&gt; bool" Usage="toolTask.Execute " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ITask.Execute</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Exécute le fichier exécutable avec les paramètres de la tâche spécifiée.</summary>
        <returns>
          <see langword="true" /> si la tâche s’exécute correctement ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteTool">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteTool (string pathToTool, string responseFileCommands, string commandLineCommands);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteTool(string pathToTool, string responseFileCommands, string commandLineCommands) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.ExecuteTool(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteTool (pathToTool As String, responseFileCommands As String, commandLineCommands As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteTool(System::String ^ pathToTool, System::String ^ responseFileCommands, System::String ^ commandLineCommands);" />
      <MemberSignature Language="F#" Value="abstract member ExecuteTool : string * string * string -&gt; int&#xA;override this.ExecuteTool : string * string * string -&gt; int" Usage="toolTask.ExecuteTool (pathToTool, responseFileCommands, commandLineCommands)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathToTool" Type="System.String" />
        <Parameter Name="responseFileCommands" Type="System.String" />
        <Parameter Name="commandLineCommands" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathToTool">Chemin du fichier exécutable.</param>
        <param name="responseFileCommands">Arguments de ligne de commande à placer dans le fichier .rsp.</param>
        <param name="commandLineCommands">Arguments de ligne de commande à passer directement au fichier exécutable.</param>
        <summary>Crée un fichier réponse temporaire (.rsp) et exécute le fichier exécutable.</summary>
        <returns>Code de sortie retourné du fichier exécutable. Si la tâche a enregistré des erreurs, mais que le fichier exécutable a retourné un code de sortie égal à 0, cette méthode retourne -1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExitCode">
      <MemberSignature Language="C#" Value="public int ExitCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExitCode" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ExitCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExitCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExitCode { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ExitCode : int" Usage="Microsoft.Build.Utilities.ToolTask.ExitCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>Microsoft.Build.Framework.Output</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le code de sortie retourné du fichier exécutable.</summary>
        <value>Code de sortie retourné du fichier exécutable Si la tâche a enregistré des erreurs, mais que le fichier exécutable a retourné un code de sortie égal à 0, cette méthode retourne -1.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateCommandLineCommands">
      <MemberSignature Language="C#" Value="protected virtual string GenerateCommandLineCommands ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GenerateCommandLineCommands() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GenerateCommandLineCommands" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GenerateCommandLineCommands () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GenerateCommandLineCommands();" />
      <MemberSignature Language="F#" Value="abstract member GenerateCommandLineCommands : unit -&gt; string&#xA;override this.GenerateCommandLineCommands : unit -&gt; string" Usage="toolTask.GenerateCommandLineCommands " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une valeur de chaîne contenant les arguments de ligne de commande à passer directement au fichier exécutable.</summary>
        <returns>Valeur de chaîne contenant les arguments de ligne de commande à passer directement au fichier exécutable.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée après <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A> et <xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A>.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:Microsoft.Build.Utilities.ToolTask> qui exécute [Ilasm.exe (assembleur IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md). Le <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, et <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes sont utilisées pour générer les informations nécessaires pour exécuter la tâche.  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateFullPathToTool">
      <MemberSignature Language="C#" Value="protected abstract string GenerateFullPathToTool ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GenerateFullPathToTool() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GenerateFullPathToTool" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GenerateFullPathToTool () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::String ^ GenerateFullPathToTool();" />
      <MemberSignature Language="F#" Value="abstract member GenerateFullPathToTool : unit -&gt; string" Usage="toolTask.GenerateFullPathToTool " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne le chemin complet du fichier exécutable.</summary>
        <returns>Chemin complet du fichier exécutable.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode retourne la valeur de la <xref:Microsoft.Build.Utilities.ToolTask.ToolName%2A> propriété si l’outil se trouve dans le chemin d’accès système.  
  
   
  
## Examples  
 L’exemple suivant crée un <xref:Microsoft.Build.Utilities.ToolTask> qui exécute [Ilasm.exe (assembleur IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md). Le <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, et <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes sont utilisées pour générer les informations nécessaires pour exécuter la tâche.  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateResponseFileCommands">
      <MemberSignature Language="C#" Value="protected virtual string GenerateResponseFileCommands ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GenerateResponseFileCommands() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GenerateResponseFileCommands () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GenerateResponseFileCommands();" />
      <MemberSignature Language="F#" Value="abstract member GenerateResponseFileCommands : unit -&gt; string&#xA;override this.GenerateResponseFileCommands : unit -&gt; string" Usage="toolTask.GenerateResponseFileCommands " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une valeur de chaîne contenant les arguments de ligne de commande à ajouter au fichier réponse (.rsp) avant d’exécuter le fichier exécutable.</summary>
        <returns>Valeur de chaîne contenant les arguments de ligne de commande à ajouter au fichier réponse (.rsp) avant d’exécuter le fichier exécutable.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée après <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A> et <xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetProcessStartInfo">
      <MemberSignature Language="C#" Value="protected System.Diagnostics.ProcessStartInfo GetProcessStartInfo (string pathToTool, string commandLineCommands, string responseFileSwitch);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Diagnostics.ProcessStartInfo GetProcessStartInfo(string pathToTool, string commandLineCommands, string responseFileSwitch) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GetProcessStartInfo(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetProcessStartInfo (pathToTool As String, commandLineCommands As String, responseFileSwitch As String) As ProcessStartInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Diagnostics::ProcessStartInfo ^ GetProcessStartInfo(System::String ^ pathToTool, System::String ^ commandLineCommands, System::String ^ responseFileSwitch);" />
      <MemberSignature Language="F#" Value="member this.GetProcessStartInfo : string * string * string -&gt; System.Diagnostics.ProcessStartInfo" Usage="toolTask.GetProcessStartInfo (pathToTool, commandLineCommands, responseFileSwitch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Diagnostics.ProcessStartInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pathToTool" Type="System.String" />
        <Parameter Name="commandLineCommands" Type="System.String" />
        <Parameter Name="responseFileSwitch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pathToTool">Chemin d'accès à l'outil.</param>
        <param name="commandLineCommands">Commandes de la ligne de commande.</param>
        <param name="responseFileSwitch">Commutateur du fichier réponse.</param>
        <summary>Initialise les informations requises pour générer le processus exécutant l'outil.</summary>
        <returns>Informations requises pour démarrer le processus.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetResponseFileSwitch">
      <MemberSignature Language="C#" Value="protected virtual string GetResponseFileSwitch (string responseFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetResponseFileSwitch(string responseFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GetResponseFileSwitch(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetResponseFileSwitch (responseFilePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetResponseFileSwitch(System::String ^ responseFilePath);" />
      <MemberSignature Language="F#" Value="abstract member GetResponseFileSwitch : string -&gt; string&#xA;override this.GetResponseFileSwitch : string -&gt; string" Usage="toolTask.GetResponseFileSwitch responseFilePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="responseFilePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="responseFilePath">Chemin complet du fichier .rsp temporaire.</param>
        <summary>Retourne le commutateur de ligne de commande utilisé par le fichier exécutable pour spécifier un fichier réponse (.rsp).</summary>
        <returns>Commutateur de ligne de commande utilisé par le fichier exécutable pour spécifier un fichier réponse (.rsp).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée uniquement si <xref:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands%2A> retourne une valeur de chaîne non vide.  
  
 Cette méthode est appelée après <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A>, <xref:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution%2A> et <xref:Microsoft.Build.Utilities.ToolTask.GenerateResponseFileCommands%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetWorkingDirectory">
      <MemberSignature Language="C#" Value="protected virtual string GetWorkingDirectory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetWorkingDirectory() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.GetWorkingDirectory" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetWorkingDirectory () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetWorkingDirectory();" />
      <MemberSignature Language="F#" Value="abstract member GetWorkingDirectory : unit -&gt; string&#xA;override this.GetWorkingDirectory : unit -&gt; string" Usage="toolTask.GetWorkingDirectory " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne le répertoire dans lequel exécuter le fichier exécutable.</summary>
        <returns>Répertoire dans lequel exécuter le fichier exécutable, ou référence null (<see langword="Nothing" /> en Visual Basic) si le fichier exécutable doit être exécuté dans le répertoire actif.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Il s’agit d’une méthode, plutôt qu’une propriété afin que les classes dérivées (comme Exec) peuvent choisir d’exposer une propriété WorkingDirectory publique, et il serait déroutant ont deux propriétés.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HandleTaskExecutionErrors">
      <MemberSignature Language="C#" Value="protected virtual bool HandleTaskExecutionErrors ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool HandleTaskExecutionErrors() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.HandleTaskExecutionErrors" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function HandleTaskExecutionErrors () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool HandleTaskExecutionErrors();" />
      <MemberSignature Language="F#" Value="abstract member HandleTaskExecutionErrors : unit -&gt; bool&#xA;override this.HandleTaskExecutionErrors : unit -&gt; bool" Usage="toolTask.HandleTaskExecutionErrors " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gère les erreurs d’exécution levées par le fichier exécutable.</summary>
        <returns>
          <see langword="true" /> si la méthode s’exécute correctement ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée uniquement si le fichier exécutable retourne un code de sortie différent de zéro.  
  
 La valeur de retour de cette méthode est utilisée comme valeur de retour de la tâche.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasLoggedErrors">
      <MemberSignature Language="C#" Value="protected virtual bool HasLoggedErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasLoggedErrors" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.HasLoggedErrors" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property HasLoggedErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool HasLoggedErrors { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasLoggedErrors : bool" Usage="Microsoft.Build.Utilities.ToolTask.HasLoggedErrors" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indique si ce ToolTask a enregistré des erreurs.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeHostObject">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.Build.Utilities.HostObjectInitializationStatus InitializeHostObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype Microsoft.Build.Utilities.HostObjectInitializationStatus InitializeHostObject() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.InitializeHostObject" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function InitializeHostObject () As HostObjectInitializationStatus" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Microsoft::Build::Utilities::HostObjectInitializationStatus InitializeHostObject();" />
      <MemberSignature Language="F#" Value="abstract member InitializeHostObject : unit -&gt; Microsoft.Build.Utilities.HostObjectInitializationStatus&#xA;override this.InitializeHostObject : unit -&gt; Microsoft.Build.Utilities.HostObjectInitializationStatus" Usage="toolTask.InitializeHostObject " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Utilities.HostObjectInitializationStatus</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialise l’objet hôte de la tâche.</summary>
        <returns>
          <see cref="T:Microsoft.Build.Utilities.HostObjectInitializationStatus" /> de l’objet hôte.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogEventsFromTextOutput">
      <MemberSignature Language="C#" Value="protected virtual void LogEventsFromTextOutput (string singleLine, Microsoft.Build.Framework.MessageImportance messageImportance);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LogEventsFromTextOutput(string singleLine, valuetype Microsoft.Build.Framework.MessageImportance messageImportance) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.LogEventsFromTextOutput(System.String,Microsoft.Build.Framework.MessageImportance)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LogEventsFromTextOutput(System::String ^ singleLine, Microsoft::Build::Framework::MessageImportance messageImportance);" />
      <MemberSignature Language="F#" Value="abstract member LogEventsFromTextOutput : string * Microsoft.Build.Framework.MessageImportance -&gt; unit&#xA;override this.LogEventsFromTextOutput : string * Microsoft.Build.Framework.MessageImportance -&gt; unit" Usage="toolTask.LogEventsFromTextOutput (singleLine, messageImportance)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="singleLine" Type="System.String" />
        <Parameter Name="messageImportance" Type="Microsoft.Build.Framework.MessageImportance" />
      </Parameters>
      <Docs>
        <param name="singleLine">Ligne de texte unique pour la méthode à analyser.</param>
        <param name="messageImportance">Valeur de <see cref="T:Microsoft.Build.Framework.MessageImportance" /> qui indique le niveau d’importance avec lequel le message doit être consigné.</param>
        <summary>Analyse une ligne de texte unique pour identifier les erreurs ou les avertissements au format canonique.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogPathToTool">
      <MemberSignature Language="C#" Value="protected virtual void LogPathToTool (string toolName, string pathToTool);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LogPathToTool(string toolName, string pathToTool) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.LogPathToTool(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LogPathToTool (toolName As String, pathToTool As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LogPathToTool(System::String ^ toolName, System::String ^ pathToTool);" />
      <MemberSignature Language="F#" Value="abstract member LogPathToTool : string * string -&gt; unit&#xA;override this.LogPathToTool : string * string -&gt; unit" Usage="toolTask.LogPathToTool (toolName, pathToTool)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="toolName" Type="System.String" />
        <Parameter Name="pathToTool" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="toolName">Nom de fichier de l’exécutable.</param>
        <param name="pathToTool">Chemin du fichier exécutable.</param>
        <summary>Enregistre le nom et le chemin de l’outil dans tous les enregistreurs d’événements inscrits.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogStandardErrorAsError">
      <MemberSignature Language="C#" Value="public bool LogStandardErrorAsError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LogStandardErrorAsError" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.LogStandardErrorAsError" />
      <MemberSignature Language="VB.NET" Value="Public Property LogStandardErrorAsError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LogStandardErrorAsError { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LogStandardErrorAsError : bool with get, set" Usage="Microsoft.Build.Utilities.ToolTask.LogStandardErrorAsError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>TOUS les messages reçus sur le flux d'erreur standard doivent-ils être enregistrés en tant qu'erreurs ?</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LogToolCommand">
      <MemberSignature Language="C#" Value="protected virtual void LogToolCommand (string message);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LogToolCommand(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.LogToolCommand(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LogToolCommand (message As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LogToolCommand(System::String ^ message);" />
      <MemberSignature Language="F#" Value="abstract member LogToolCommand : string -&gt; unit&#xA;override this.LogToolCommand : string -&gt; unit" Usage="toolTask.LogToolCommand message" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Message descriptif pour fournir les enregistreurs d’événements, généralement la ligne de commande et les commutateurs.</param>
        <summary>Enregistre le point de départ de l’exécution dans tous les enregistreurs d’événements inscrits.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseFileEncoding">
      <MemberSignature Language="C#" Value="protected virtual System.Text.Encoding ResponseFileEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding ResponseFileEncoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ResponseFileEncoding" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ResponseFileEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Text::Encoding ^ ResponseFileEncoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ResponseFileEncoding : System.Text.Encoding" Usage="Microsoft.Build.Utilities.ToolTask.ResponseFileEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le <see cref="T:System.Text.Encoding" /> du fichier réponse.</summary>
        <value>
          <see cref="T:System.Text.Encoding" /> du fichier réponse.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’encodage est <xref:System.Text.Encoding.UTF8%2A> par défaut.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResponseFileEscape">
      <MemberSignature Language="C#" Value="protected virtual string ResponseFileEscape (string responseString);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string ResponseFileEscape(string responseString) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.ResponseFileEscape(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ResponseFileEscape (responseString As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ ResponseFileEscape(System::String ^ responseString);" />
      <MemberSignature Language="F#" Value="abstract member ResponseFileEscape : string -&gt; string&#xA;override this.ResponseFileEscape : string -&gt; string" Usage="toolTask.ResponseFileEscape responseString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="responseString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="responseString">Chaîne de réponse.</param>
        <summary>Méthode remplaçable pour échapper au contenu du fichier réponse.</summary>
        <returns>Retourne la chaîne de réponse.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipTaskExecution">
      <MemberSignature Language="C#" Value="protected virtual bool SkipTaskExecution ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool SkipTaskExecution() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.SkipTaskExecution" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SkipTaskExecution () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool SkipTaskExecution();" />
      <MemberSignature Language="F#" Value="abstract member SkipTaskExecution : unit -&gt; bool&#xA;override this.SkipTaskExecution : unit -&gt; bool" Usage="toolTask.SkipTaskExecution " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indique si l’exécution de la tâche doit être ignorée.</summary>
        <returns>
          <see langword="true" /> pour ignorer l’exécution de la tâche ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée après <xref:Microsoft.Build.Utilities.ToolTask.ValidateParameters%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardErrorEncoding">
      <MemberSignature Language="C#" Value="protected virtual System.Text.Encoding StandardErrorEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardErrorEncoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardErrorEncoding" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property StandardErrorEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Text::Encoding ^ StandardErrorEncoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StandardErrorEncoding : System.Text.Encoding" Usage="Microsoft.Build.Utilities.ToolTask.StandardErrorEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le <see cref="T:System.Text.Encoding" /> du flux d’erreurs standard de la tâche.</summary>
        <value>
          <see cref="T:System.Text.Encoding" /> du fichier réponse.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sur la console de sortie utilise la page de code OEM actuelle par défaut. Notez que nous ne devons pas utiliser Console.OutputEncoding ici dans la mesure où les processus que nous exécutons n’avons pas vraiment grand-chose à voir avec notre fenêtre de console (et également Console.OutputEncoding ne retourne pas la page de codes OEM si l’application en cours d’exécution qui héberge MSBuild n’est pas une console application).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardErrorImportance">
      <MemberSignature Language="C#" Value="public string StandardErrorImportance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardErrorImportance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardErrorImportance" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardErrorImportance As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StandardErrorImportance { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StandardErrorImportance : string with get, set" Usage="Microsoft.Build.Utilities.ToolTask.StandardErrorImportance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Paramètre de tâche : importance avec laquelle le texte doit être enregistré à partir du flux d’erreur standard.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardErrorImportanceToUse">
      <MemberSignature Language="C#" Value="protected Microsoft.Build.Framework.MessageImportance StandardErrorImportanceToUse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.MessageImportance StandardErrorImportanceToUse" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardErrorImportanceToUse" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StandardErrorImportanceToUse As MessageImportance" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Microsoft::Build::Framework::MessageImportance StandardErrorImportanceToUse { Microsoft::Build::Framework::MessageImportance get(); };" />
      <MemberSignature Language="F#" Value="member this.StandardErrorImportanceToUse : Microsoft.Build.Framework.MessageImportance" Usage="Microsoft.Build.Utilities.ToolTask.StandardErrorImportanceToUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.MessageImportance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'importance réelle à partir de laquelle les messages d'erreur standard seront enregistrés.</summary>
        <value>Retourne l'importance réelle à partir de laquelle les messages d'erreur standard seront enregistrés.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardErrorLoggingImportance">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.Build.Framework.MessageImportance StandardErrorLoggingImportance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.MessageImportance StandardErrorLoggingImportance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardErrorLoggingImportance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property StandardErrorLoggingImportance As MessageImportance" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Microsoft::Build::Framework::MessageImportance StandardErrorLoggingImportance { Microsoft::Build::Framework::MessageImportance get(); };" />
      <MemberSignature Language="F#" Value="member this.StandardErrorLoggingImportance : Microsoft.Build.Framework.MessageImportance" Usage="Microsoft.Build.Utilities.ToolTask.StandardErrorLoggingImportance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.MessageImportance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le <see cref="T:Microsoft.Build.Framework.MessageImportance" /> avec lequel consigner les erreurs.</summary>
        <value>
          <see cref="T:Microsoft.Build.Framework.MessageImportance" /> avec lequel consigner les erreurs.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutputEncoding">
      <MemberSignature Language="C#" Value="protected virtual System.Text.Encoding StandardOutputEncoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding StandardOutputEncoding" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardOutputEncoding" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property StandardOutputEncoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Text::Encoding ^ StandardOutputEncoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.StandardOutputEncoding : System.Text.Encoding" Usage="Microsoft.Build.Utilities.ToolTask.StandardOutputEncoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le <see cref="T:System.Text.Encoding" /> du flux de sortie standard de la tâche.</summary>
        <value>
          <see cref="T:System.Text.Encoding" /> du fichier réponse.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sur la console de sortie utilise la page de code OEM actuelle par défaut. Notez que nous ne devons pas utiliser Console.OutputEncoding ici dans la mesure où les processus que nous exécutons n’avons pas vraiment grand-chose à voir avec notre fenêtre de console (et également Console.OutputEncoding ne retourne pas la page de codes OEM si l’application en cours d’exécution qui héberge MSBuild n’est pas une console application).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutputImportance">
      <MemberSignature Language="C#" Value="public string StandardOutputImportance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StandardOutputImportance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardOutputImportance" />
      <MemberSignature Language="VB.NET" Value="Public Property StandardOutputImportance As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StandardOutputImportance { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StandardOutputImportance : string with get, set" Usage="Microsoft.Build.Utilities.ToolTask.StandardOutputImportance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Paramètre de tâche : importance avec laquelle le texte doit être enregistré à partir du flux de sortie standard.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutputImportanceToUse">
      <MemberSignature Language="C#" Value="protected Microsoft.Build.Framework.MessageImportance StandardOutputImportanceToUse { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.MessageImportance StandardOutputImportanceToUse" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardOutputImportanceToUse" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property StandardOutputImportanceToUse As MessageImportance" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property Microsoft::Build::Framework::MessageImportance StandardOutputImportanceToUse { Microsoft::Build::Framework::MessageImportance get(); };" />
      <MemberSignature Language="F#" Value="member this.StandardOutputImportanceToUse : Microsoft.Build.Framework.MessageImportance" Usage="Microsoft.Build.Utilities.ToolTask.StandardOutputImportanceToUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.MessageImportance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'importance réelle à partir de laquelle les messages de sortie standard seront enregistrés.</summary>
        <value>Retourne l'importance réelle à partir de laquelle les messages de sortie standard seront enregistrés.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StandardOutputLoggingImportance">
      <MemberSignature Language="C#" Value="protected virtual Microsoft.Build.Framework.MessageImportance StandardOutputLoggingImportance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.MessageImportance StandardOutputLoggingImportance" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.StandardOutputLoggingImportance" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property StandardOutputLoggingImportance As MessageImportance" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Microsoft::Build::Framework::MessageImportance StandardOutputLoggingImportance { Microsoft::Build::Framework::MessageImportance get(); };" />
      <MemberSignature Language="F#" Value="member this.StandardOutputLoggingImportance : Microsoft.Build.Framework.MessageImportance" Usage="Microsoft.Build.Utilities.ToolTask.StandardOutputLoggingImportance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.MessageImportance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le <see cref="T:Microsoft.Build.Framework.MessageImportance" /> avec lequel consigner les erreurs.</summary>
        <value>
          <see cref="T:Microsoft.Build.Framework.MessageImportance" /> avec lequel consigner les erreurs.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TaskProcessTerminationTimeout">
      <MemberSignature Language="C#" Value="protected int TaskProcessTerminationTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TaskProcessTerminationTimeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.TaskProcessTerminationTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Property TaskProcessTerminationTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property int TaskProcessTerminationTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TaskProcessTerminationTimeout : int with get, set" Usage="Microsoft.Build.Utilities.ToolTask.TaskProcessTerminationTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Délai d'attente avant qu'une tâche ne se termine avant toute suppression. En millisecondes.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public virtual int Timeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timeout" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Timeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int Timeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : int with get, set" Usage="Microsoft.Build.Utilities.ToolTask.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la durée au-delà de laquelle la tâche exécutable est interrompue.</summary>
        <value>Durée du délai d’attente, en millisecondes.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolCanceled">
      <MemberSignature Language="C#" Value="protected System.Threading.ManualResetEvent ToolCanceled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.ManualResetEvent ToolCanceled" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ToolCanceled" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ToolCanceled As ManualResetEvent" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Threading::ManualResetEvent ^ ToolCanceled { System::Threading::ManualResetEvent ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToolCanceled : System.Threading.ManualResetEvent" Usage="Microsoft.Build.Utilities.ToolTask.ToolCanceled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Threading.ManualResetEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Utilisé pour signaler lorsqu'un outil a été annulé.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolExe">
      <MemberSignature Language="C#" Value="public virtual string ToolExe { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolExe" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ToolExe" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ToolExe As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ToolExe { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolExe : string with get, set" Usage="Microsoft.Build.Utilities.ToolTask.ToolExe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Les projets peuvent définir ce paramètre pour substituer le ToolName d’une tâche. Les tâches peuvent substituer cette valeur pour éviter cela.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolName">
      <MemberSignature Language="C#" Value="protected abstract string ToolName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ToolName" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride ReadOnly Property ToolName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract property System::String ^ ToolName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToolName : string" Usage="Microsoft.Build.Utilities.ToolTask.ToolName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom du fichier exécutable à exécuter.</summary>
        <value>Nom du fichier exécutable à exécuter.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant crée un <xref:Microsoft.Build.Utilities.ToolTask> qui exécute [Ilasm.exe (assembleur IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md). Le <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, et <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes sont utilisées pour générer les informations nécessaires pour exécuter la tâche.  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolPath">
      <MemberSignature Language="C#" Value="public string ToolPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolPath" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.ToolPath" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolPath : string with get, set" Usage="Microsoft.Build.Utilities.ToolTask.ToolPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le chemin du fichier exécutable à exécuter.</summary>
        <value>Chemin du fichier à exécuter.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseCommandProcessor">
      <MemberSignature Language="C#" Value="public bool UseCommandProcessor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCommandProcessor" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.UseCommandProcessor" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCommandProcessor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCommandProcessor { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseCommandProcessor : bool with get, set" Usage="Microsoft.Build.Utilities.ToolTask.UseCommandProcessor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit un commutateur qui spécifie si la tâche d'outil créera un fichier de commandes pour la ligne de commande et l'exécutera à l'aide du processeur de commandes, plutôt que d'exécuter la commande directement.</summary>
        <value>Si la valeur est true, la tâche d'outil créera un fichier de commandes pour la ligne de commande et l'exécutera à l'aide du processeur de commandes. Si la valeur est false, la tâche d'outil exécutera la commande directement.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateParameters">
      <MemberSignature Language="C#" Value="protected internal virtual bool ValidateParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ValidateParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.ToolTask.ValidateParameters" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ValidateParameters () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ValidateParameters();" />
      <MemberSignature Language="F#" Value="abstract member ValidateParameters : unit -&gt; bool&#xA;override this.ValidateParameters : unit -&gt; bool" Usage="toolTask.ValidateParameters " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v3.5</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Indique si tous les paramètres de tâche sont valides.</summary>
        <returns>
          <see langword="true" /> si tous les paramètres de tâche sont valides ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="YieldDuringToolExecution">
      <MemberSignature Language="C#" Value="public bool YieldDuringToolExecution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool YieldDuringToolExecution" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.ToolTask.YieldDuringToolExecution" />
      <MemberSignature Language="VB.NET" Value="Public Property YieldDuringToolExecution As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool YieldDuringToolExecution { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.YieldDuringToolExecution : bool with get, set" Usage="Microsoft.Build.Utilities.ToolTask.YieldDuringToolExecution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indique si la tâche cédera le nœud lors de l'exécution d'outil.</summary>
        <value>True indique que la tâche cédera le nœud lors de l'exécution d'outil.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>