<Type Name="MuxLogger" FullName="Microsoft.Build.Utilities.MuxLogger">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="83cbc96218fff286d5c08bcd55e8d1c17c21ab20" />
    <Meta Name="ms.sourcegitcommit" Value="723b8a6d92667ba86fcda96190bad3b4a03283b3" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/09/2018" />
    <Meta Name="ms.locfileid" Value="51317099" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class MuxLogger : Microsoft.Build.Framework.INodeLogger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MuxLogger extends System.Object implements class Microsoft.Build.Framework.ILogger, class Microsoft.Build.Framework.INodeLogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.MuxLogger" />
  <TypeSignature Language="VB.NET" Value="Public Class MuxLogger&#xA;Implements INodeLogger" />
  <TypeSignature Language="C++ CLI" Value="public ref class MuxLogger : Microsoft::Build::Framework::INodeLogger" />
  <TypeSignature Language="F#" Value="type MuxLogger = class&#xA;    interface INodeLogger&#xA;    interface ILogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.ILogger</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>Microsoft.Build.Framework.INodeLogger</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="e92b0-101">Représente un journal de multiplexage.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e92b0-101">Represents a multiplexing logger.</span>
      </span>
      <span data-ttu-id="e92b0-102">L'objectif de ce journal est d'enregistrer et d'annuler l'enregistrement de plusieurs journaux pendant la génération.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e92b0-102">The purpose of this logger is to register and unregister multiple loggers during the build.</span>
      </span>
      <span data-ttu-id="e92b0-103">Prend en charge le scénario IDE Visual Studio dans lequel des journaux sont inscrits ou désinscrits pour la requête de build de chaque système de projet.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e92b0-103">Supports the Visual Studio IDE scenario in which loggers are registered and unregistered for each project system’s build request.</span>
      </span>
      <span data-ttu-id="e92b0-104">Une build physique peut avoir plusieurs builds logiques, chacune avec son propre ensemble d'enregistreurs d'événements.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e92b0-104">One physical build can have multiple logical builds, each with its own set of loggers.</span>
      </span>
      <span data-ttu-id="e92b0-105">
        <see langword="MuxLogger" /> s’inscrit lui-même dans le gestionnaire de build en tant que journal central standard de type /l.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e92b0-105">The <see langword="MuxLogger" /> registers itself with the build manager as a regular central /l style logger.</span>
      </span>
      <span data-ttu-id="e92b0-106">Il reçoit des messages du gestionnaire de build et les route vers l'enregistreur approprié, en fonction de la build logique d'où le message provient.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e92b0-106">It receives messages from the build manager and routes them to the correct logger, based on the logical build that the message came from.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e92b0-107">Le `MuxLogger` généralement fonctionne comme suit :</span><span class="sxs-lookup"><span data-stu-id="e92b0-107">The `MuxLogger` generally functions as follows:</span></span>  
  
-   <span data-ttu-id="e92b0-108">Le `MuxLogger` est inscrit au début de build de début du Gestionnaire de génération.</span><span class="sxs-lookup"><span data-stu-id="e92b0-108">The `MuxLogger` is registered at the beginning of the build manager’s Begin build.</span></span>  
  
     <span data-ttu-id="e92b0-109">Tous les journaux inscrits avant le Gestionnaire de génération démarre la build obtiennent l’événement de génération a démarré en même temps que le `MuxLogger`.</span><span class="sxs-lookup"><span data-stu-id="e92b0-109">Any loggers registered before the build manager starts the build get the build-started event at the same time as the `MuxLogger`.</span></span>  
  
     <span data-ttu-id="e92b0-110">Tous les journaux enregistrés après que le Gestionnaire de génération démarre la build obtiennent un événement de génération démarrée synthétisé.</span><span class="sxs-lookup"><span data-stu-id="e92b0-110">Any loggers registered after the build manager starts the build get a synthesized build-started event.</span></span> <span data-ttu-id="e92b0-111">L’événement ne peut pas être mis en cache, car l’horodatage de l’événement de génération démarrée est déterminée lorsque l’événement est créé, et la mise en cache de l’événement donnerait des durées de génération incorrects dans les enregistreurs d’événements inscrits pour le `MuxLogger`.</span><span class="sxs-lookup"><span data-stu-id="e92b0-111">The event cannot be cached because the timestamp of the build-started event is determined when the event is created, and caching the event would give incorrect build times in the loggers registered to the `MuxLogger`.</span></span>  
  
-   <span data-ttu-id="e92b0-112">Le `MuxLogger` est initialisé par le Gestionnaire de génération</span><span class="sxs-lookup"><span data-stu-id="e92b0-112">The `MuxLogger` is initialized by the build manager</span></span>  
  
     <span data-ttu-id="e92b0-113">Le `MuxLogger` écoute à tous les événements sur la source d’événements à partir du Gestionnaire de build et achemine correctement les événements dans les journaux enregistrés.</span><span class="sxs-lookup"><span data-stu-id="e92b0-113">The `MuxLogger` listens to all events on the event source from the build manager and routes events correctly to the registered loggers.</span></span>  
  
-   <span data-ttu-id="e92b0-114">Le `MuxLogger` est arrêtée lorsque la génération est terminée en fin de la build.</span><span class="sxs-lookup"><span data-stu-id="e92b0-114">The `MuxLogger` is shutdown when the build is finished in end build.</span></span> <span data-ttu-id="e92b0-115">À ce stade, il annule l’inscription de tous les journaux attachés à ce dernier.</span><span class="sxs-lookup"><span data-stu-id="e92b0-115">At this time, it unregisters any loggers attached to it.</span></span>  
  
-   <span data-ttu-id="e92b0-116">Le `MuxLogger` consigne l’événement terminé de build lors de l’événement de projet terminé pour le premier événement de projet démarré se produit pour chaque enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="e92b0-116">The `MuxLogger` logs the build-finished event when the project-finished event for the first project-started event is seen for each logger.</span></span>  
  
 <span data-ttu-id="e92b0-117">Le `MuxLogger` enregistre les enregistreurs d’événements de la façon suivante :</span><span class="sxs-lookup"><span data-stu-id="e92b0-117">The `MuxLogger` registers loggers in the following way:</span></span>  
  
1.  <span data-ttu-id="e92b0-118">L’enregistreur d’événements est passé à la `MuxLogger.RegisterLogger` méthode avec un ID de soumission est utilisé pour router un message vers cet enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="e92b0-118">The logger is passed to the `MuxLogger.RegisterLogger` method with a submission ID that is used to route a message to that logger.</span></span>  
  
2.  <span data-ttu-id="e92b0-119">Le `MuxLogger` inscrit l’enregistreur d’événements pour le `MuxLogger` source d’événement.</span><span class="sxs-lookup"><span data-stu-id="e92b0-119">The `MuxLogger` registers the logger to the `MuxLogger` event source.</span></span>  
  
3.  <span data-ttu-id="e92b0-120">Si l’événement de génération démarrée a déjà été enregistrée, le `MuxLogger` crée un nouvel événement de génération démarrée et l’envoie à la source d’événements de l’enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="e92b0-120">If the build-started event has already been logged, the `MuxLogger` creates a new build-started event and sends it to the logger’s event source.</span></span>  
  
 <span data-ttu-id="e92b0-121">Le `MuxLogger` annule l’enregistrement des journaux de la façon suivante :</span><span class="sxs-lookup"><span data-stu-id="e92b0-121">The `MuxLogger` unregisters loggers in the following way:</span></span>  
  
1.  <span data-ttu-id="e92b0-122">Lorsqu’une soumission de génération est terminée, le `MuxLogger.UnregisterLogger` méthode est appelée avec l’ID de soumission pour l’enregistreur d’événements.</span><span class="sxs-lookup"><span data-stu-id="e92b0-122">When a build submission is completed, the `MuxLogger.UnregisterLogger` method is called with the submission ID for the logger.</span></span>  
  
2.  <span data-ttu-id="e92b0-123">Le `MuxLogger` recherche l’état de réussite de l’événement de projet terminé pour l’ID de soumission et consigne un événement de build de fin dans le journal.</span><span class="sxs-lookup"><span data-stu-id="e92b0-123">The `MuxLogger` looks up the success state of the project-finished event for the submission ID and logs a build-finished event to the logger.</span></span>  
  
3.  <span data-ttu-id="e92b0-124">Le `MuxLogger` nettoie la source d’événements.</span><span class="sxs-lookup"><span data-stu-id="e92b0-124">The `MuxLogger` cleans up the event source.</span></span>  
  
     <span data-ttu-id="e92b0-125">Notez que la suppression de l’inscription provient d’un thread autre que le thread de journalisation et un problème de synchronisation peut se produire si unregister est appelée alors que les événements sont consignés.</span><span class="sxs-lookup"><span data-stu-id="e92b0-125">Note that the unregister comes from a thread other than the logging thread and a synchronization issue could occur if unregister is called while events are being logged.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MuxLogger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MuxLogger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e92b0-126">Crée une instance du journal de multiplexage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e92b0-126">Creates a new instance of the multiplexing logger.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Initialize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e92b0-127">Initialise l’instance <see langword="MuxLogger" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e92b0-127">Initializes the <see langword="MuxLogger" /> instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : Microsoft.Build.Framework.IEventSource -&gt; unit&#xA;override this.Initialize : Microsoft.Build.Framework.IEventSource -&gt; unit" Usage="muxLogger.Initialize eventSource" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Initialize(Microsoft.Build.Framework.IEventSource)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource">
          <span data-ttu-id="e92b0-128">Source de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e92b0-128">The event source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e92b0-129">Initialisez l'instance de <see langword="MuxLogger" /> avec la source d'événements spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e92b0-129">Initialize the <see langword="MuxLogger" /> instance with the specified event source.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize (Microsoft.Build.Framework.IEventSource eventSource, int maxNodeCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource, int32 maxNodeCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize (eventSource As IEventSource, maxNodeCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource, int maxNodeCount);" />
      <MemberSignature Language="F#" Value="abstract member Initialize : Microsoft.Build.Framework.IEventSource * int -&gt; unit&#xA;override this.Initialize : Microsoft.Build.Framework.IEventSource * int -&gt; unit" Usage="muxLogger.Initialize (eventSource, maxNodeCount)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.INodeLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
        <Parameter Name="maxNodeCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventSource">
          <span data-ttu-id="e92b0-130">Source de l'événement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e92b0-130">The event source.</span>
          </span>
        </param>
        <param name="maxNodeCount">
          <span data-ttu-id="e92b0-131">Nombre maximal de nœuds.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e92b0-131">The maximum number of nodes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e92b0-132">Initialise l'instance de <see langword="MuxLogger" /> avec la source d'événements spécifiée et le nombre maximal de nœuds spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e92b0-132">Initialize the <see langword="MuxLogger" /> instance with the specified event source and specified maximum number of nodes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameters">
      <MemberSignature Language="C#" Value="public string Parameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Parameters" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.Parameters" />
      <MemberSignature Language="VB.NET" Value="Public Property Parameters As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Parameters { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Parameters : string with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.Parameters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Parameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e92b0-133">Obtient et définit l'attribut des Paramètres, requis par l'interface de <see langword="ILogger" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e92b0-133">Gets and sets the Parameters attribute, required by the <see langword="ILogger" /> interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e92b0-134">Retourne l'attribut Parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e92b0-134">Returns the Parameters attribute.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterLogger">
      <MemberSignature Language="C#" Value="public void RegisterLogger (int submissionId, Microsoft.Build.Framework.ILogger logger);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterLogger(int32 submissionId, class Microsoft.Build.Framework.ILogger logger) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.RegisterLogger(System.Int32,Microsoft.Build.Framework.ILogger)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterLogger (submissionId As Integer, logger As ILogger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterLogger(int submissionId, Microsoft::Build::Framework::ILogger ^ logger);" />
      <MemberSignature Language="F#" Value="member this.RegisterLogger : int * Microsoft.Build.Framework.ILogger -&gt; unit" Usage="muxLogger.RegisterLogger (submissionId, logger)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="submissionId" Type="System.Int32" />
        <Parameter Name="logger" Type="Microsoft.Build.Framework.ILogger" />
      </Parameters>
      <Docs>
        <param name="submissionId">
          <span data-ttu-id="e92b0-135">ID de soumission du journal en cours d'inscription.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e92b0-135">The submission ID of the logger being registered.</span>
          </span>
        </param>
        <param name="logger">
          <span data-ttu-id="e92b0-136">Enregistreur d'événement à inscrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e92b0-136">The logger to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e92b0-137">Inscrit un enregistreur d'événements dans l'objet <see langword="MuxLogger" /> et déclenche un événement de génération démarrée si l'événement a déjà été enregistré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e92b0-137">Registers a logger on the <see langword="MuxLogger" /> and raises a build-started event if the build-started event has already been logged.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Shutdown();" />
      <MemberSignature Language="F#" Value="abstract member Shutdown : unit -&gt; unit&#xA;override this.Shutdown : unit -&gt; unit" Usage="muxLogger.Shutdown " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:Microsoft.Build.Framework.ILogger.Shutdown</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e92b0-138">Arrête <see langword="MuxLogger" /> et efface tout état.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e92b0-138">Shuts down the <see langword="MuxLogger" /> and clears out any state.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterLoggers">
      <MemberSignature Language="C#" Value="public bool UnregisterLoggers (int submissionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool UnregisterLoggers(int32 submissionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.MuxLogger.UnregisterLoggers(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function UnregisterLoggers (submissionId As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool UnregisterLoggers(int submissionId);" />
      <MemberSignature Language="F#" Value="member this.UnregisterLoggers : int -&gt; bool" Usage="muxLogger.UnregisterLoggers submissionId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="submissionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="submissionId">
          <span data-ttu-id="e92b0-139">ID de soumission du journal à supprimer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e92b0-139">The submission ID of the logger to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e92b0-140">Supprime le journal spécifié du MuxLogger.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e92b0-140">Removes the specified logger from the MuxLogger.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e92b0-141">Retourne <see langword="true" /> si la méthode aboutit en supprimant le journal ; sinon, retourne <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e92b0-141">Returns <see langword="true" /> if the method is successful in removing the logger, otherwise, returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Verbosity">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.LoggerVerbosity Verbosity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.Build.Framework.LoggerVerbosity Verbosity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.MuxLogger.Verbosity" />
      <MemberSignature Language="VB.NET" Value="Public Property Verbosity As LoggerVerbosity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Build::Framework::LoggerVerbosity Verbosity { Microsoft::Build::Framework::LoggerVerbosity get(); void set(Microsoft::Build::Framework::LoggerVerbosity value); };" />
      <MemberSignature Language="F#" Value="member this.Verbosity : Microsoft.Build.Framework.LoggerVerbosity with get, set" Usage="Microsoft.Build.Utilities.MuxLogger.Verbosity" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Build.Framework.ILogger.Verbosity</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.LoggerVerbosity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e92b0-142">Obtient et définit l'attribut des Commentaires, requis par l'interface de <see langword="ILogger" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e92b0-142">Gets and sets the Verbosity attribute, required by the <see langword="ILogger" /> interface.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e92b0-143">Retourne la valeur de l'attribut Verbosity.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e92b0-143">Returns the Verbosity attribute.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>