<Type Name="CommandLineBuilder" FullName="Microsoft.Build.Utilities.CommandLineBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5fd7c878defce2b45623616336d57cb3895efccc" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36733031" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CommandLineBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CommandLineBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.CommandLineBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class CommandLineBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandLineBuilder" />
  <TypeSignature Language="F#" Value="type CommandLineBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="fe89e-101">Comprend des méthodes utilitaires permettant de construire une ligne de commande.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fe89e-101">Comprises utility methods for constructing a command line.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fe89e-102">L’exemple suivant crée un <xref:Microsoft.Build.Utilities.ToolTask> qui exécute [Ilasm.exe (assembleur IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="fe89e-102">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="fe89e-103">Le <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, et <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes sont utilisées pour générer les informations nécessaires pour exécuter la tâche.</span><span class="sxs-lookup"><span data-stu-id="fe89e-103">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe89e-104">Constructeur</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-104">Constructor</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandLineBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandLineBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe89e-105">Initialise une nouvelle instance de la classe <see cref="T:Microsoft.Build.Utilities.CommandLineBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-105">Initializes a new instance of the <see cref="T:Microsoft.Build.Utilities.CommandLineBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fe89e-106">L’exemple suivant crée un <xref:Microsoft.Build.Utilities.ToolTask> qui exécute [Ilasm.exe (assembleur IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="fe89e-106">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="fe89e-107">Le <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, et <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes sont utilisées pour générer les informations nécessaires pour exécuter la tâche.</span><span class="sxs-lookup"><span data-stu-id="fe89e-107">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandLineBuilder (bool quoteHyphensOnCommandLine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool quoteHyphensOnCommandLine) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.#ctor(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (quoteHyphensOnCommandLine As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandLineBuilder(bool quoteHyphensOnCommandLine);" />
      <MemberSignature Language="F#" Value="new Microsoft.Build.Utilities.CommandLineBuilder : bool -&gt; Microsoft.Build.Utilities.CommandLineBuilder" Usage="new Microsoft.Build.Utilities.CommandLineBuilder quoteHyphensOnCommandLine" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="quoteHyphensOnCommandLine" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="quoteHyphensOnCommandLine">
          <span data-ttu-id="fe89e-108">Si la valeur est true, les traits d’union doivent être placés entre guillemets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-108">If true, hyphens should be quoted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe89e-109">Constructeur par défaut</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-109">Default constructor</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendFileNameIfNotNull">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe89e-110">Ajoute la ligne de commande avec le nom de fichier représenté par le paramètre, en insérant des guillemets si nécessaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-110">Appends the command line with file name represented by the parameter, inserting quotation marks if necessary.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fe89e-111">L’exemple suivant crée un <xref:Microsoft.Build.Utilities.ToolTask> qui exécute [Ilasm.exe (assembleur IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="fe89e-111">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="fe89e-112">Le <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, et <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes sont utilisées pour générer les informations nécessaires pour exécuter la tâche.</span><span class="sxs-lookup"><span data-stu-id="fe89e-112">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendFileNameIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendFileNameIfNotNull (Microsoft.Build.Framework.ITaskItem fileItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendFileNameIfNotNull(class Microsoft.Build.Framework.ITaskItem fileItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendFileNameIfNotNull (fileItem As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendFileNameIfNotNull(Microsoft::Build::Framework::ITaskItem ^ fileItem);" />
      <MemberSignature Language="F#" Value="member this.AppendFileNameIfNotNull : Microsoft.Build.Framework.ITaskItem -&gt; unit" Usage="commandLineBuilder.AppendFileNameIfNotNull fileItem" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileItem" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="fileItem">
          <span data-ttu-id="fe89e-113">Spécification d’élément de tâche à ajouter à la ligne de commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-113">The task item specification to append to the command line.</span>
          </span>
          <span data-ttu-id="fe89e-114">Si la valeur est <see langword="null" />, cette méthode n’a aucun effet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-114">If it is <see langword="null" />, then this method has no effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe89e-115">Ajoute à la ligne de commande le nom de fichier de l’objet <see cref="T:Microsoft.Build.Framework.ITaskItem" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-115">Appends the command line with the file name of the specified <see cref="T:Microsoft.Build.Framework.ITaskItem" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe89e-116">Cette méthode ajoute la ligne de commande avec une spécification de tâche et entoure la spécification de tâche entre guillemets si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="fe89e-116">This method appends the command line with a task item specification, and surrounds task item specification with quotations marks as necessary.</span></span>  
  
 <span data-ttu-id="fe89e-117">Si la ligne de commande n’est pas vide, cette méthode ajoute également la ligne de commande avec un espace avant la spécification de tâche.</span><span class="sxs-lookup"><span data-stu-id="fe89e-117">If the command line is not empty, then this method also appends the command line with a space, before the task item specification.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe89e-118">L’exemple suivant crée un <xref:Microsoft.Build.Utilities.ToolTask> qui exécute [Ilasm.exe (assembleur IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="fe89e-118">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="fe89e-119">Le <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, et <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes sont utilisées pour générer les informations nécessaires pour exécuter la tâche.</span><span class="sxs-lookup"><span data-stu-id="fe89e-119">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendFileNameIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendFileNameIfNotNull (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendFileNameIfNotNull(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameIfNotNull(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendFileNameIfNotNull (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendFileNameIfNotNull(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.AppendFileNameIfNotNull : string -&gt; unit" Usage="commandLineBuilder.AppendFileNameIfNotNull fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="fe89e-120">Nom de fichier à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-120">The file name to append.</span>
          </span>
          <span data-ttu-id="fe89e-121">Si la valeur est <see langword="null" />, cette méthode n’a aucun effet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-121">If it is <see langword="null" />, then this method has no effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe89e-122">Ajoute la ligne de commande avec le nom de fichier représenté par le paramètre, en insérant des guillemets si nécessaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-122">Appends the command line with file name represented by the parameter, inserting quotation marks if necessary.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe89e-123">Cette méthode ajoute la ligne de commande avec un nom de fichier et entoure le nom de fichier entre guillemets si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="fe89e-123">This method appends the command line with a file name, and surrounds the file name with quotation marks as necessary.</span></span>  
  
 <span data-ttu-id="fe89e-124">Si le premier caractère du nom de fichier est un tiret, puis `.\` est ajouté au début du nom de fichier pour le distinguer d’un commutateur.</span><span class="sxs-lookup"><span data-stu-id="fe89e-124">If the first character of the file name is a dash, then `.\` is added to the beginning of the file name to distinguish it from a switch.</span></span>  
  
 <span data-ttu-id="fe89e-125">Si la ligne de commande n’est pas vide, cette méthode ajoute également la ligne de commande avec un espace avant le nom de fichier.</span><span class="sxs-lookup"><span data-stu-id="fe89e-125">If the command line is not empty, then this method also appends the command line with a space, before the file name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe89e-126">`AppendFileNameIfNotNull("-StrangeFileName.cs")` produit `.\-StrangeFileName.cs`.</span><span class="sxs-lookup"><span data-stu-id="fe89e-126">`AppendFileNameIfNotNull("-StrangeFileName.cs")` yields `.\-StrangeFileName.cs`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendFileNamesIfNotNull">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe89e-127">Ajoute la ligne de commande avec une liste de noms de fichiers, en insérant des guillemets le cas échéant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-127">Appends the command line with a list of file names, inserting quotation marks if necessary.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendFileNamesIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendFileNamesIfNotNull (Microsoft.Build.Framework.ITaskItem[] fileItems, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendFileNamesIfNotNull(class Microsoft.Build.Framework.ITaskItem[] fileItems, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(Microsoft.Build.Framework.ITaskItem[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendFileNamesIfNotNull (fileItems As ITaskItem(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendFileNamesIfNotNull(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ fileItems, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendFileNamesIfNotNull : Microsoft.Build.Framework.ITaskItem[] * string -&gt; unit" Usage="commandLineBuilder.AppendFileNamesIfNotNull (fileItems, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileItems" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileItems">
          <span data-ttu-id="fe89e-128">Spécifications d’éléments de tâches à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-128">The task item specifications to append.</span>
          </span>
          <span data-ttu-id="fe89e-129">Si le tableau est <see langword="null" />, cette méthode n’a aucun effet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-129">If the array is <see langword="null" />, then this method has no effect.</span>
          </span>
        </param>
        <param name="delimiter">
          <span data-ttu-id="fe89e-130">Séparateur à mettre entre les spécifications de tâches sur la ligne de commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-130">The delimiter to put between task item specifications in the command line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe89e-131">Ajoute à la ligne de commande la liste des noms de fichiers contenus dans le tableau <see cref="T:Microsoft.Build.Framework.ITaskItem" /> spécifié, séparés par le délimiteur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-131">Appends the command line with the list of file names in the specified <see cref="T:Microsoft.Build.Framework.ITaskItem" /> array, separated by the specified delimiter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe89e-132">Cette méthode ajoute la ligne de commande avec des noms de fichier et entoure les noms de fichiers avec des guillemets si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="fe89e-132">This method appends the command line with file names, and surrounds the file names with quotation marks as necessary.</span></span> <span data-ttu-id="fe89e-133">Les noms de fichiers sont séparés par le séparateur spécifié.</span><span class="sxs-lookup"><span data-stu-id="fe89e-133">The file names are separated by the specified delimiter.</span></span>  
  
 <span data-ttu-id="fe89e-134">Si la ligne de commande n’est pas vide, cette méthode ajoute également la ligne de commande avec un espace avant les noms de fichiers.</span><span class="sxs-lookup"><span data-stu-id="fe89e-134">If the command line is not empty, then this method also appends the command line with a space, before the file names.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe89e-135">Consultez l’exemple dans <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="fe89e-135">See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendFileNamesIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendFileNamesIfNotNull (string[] fileNames, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendFileNamesIfNotNull(string[] fileNames, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNamesIfNotNull(System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendFileNamesIfNotNull (fileNames As String(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendFileNamesIfNotNull(cli::array &lt;System::String ^&gt; ^ fileNames, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendFileNamesIfNotNull : string[] * string -&gt; unit" Usage="commandLineBuilder.AppendFileNamesIfNotNull (fileNames, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileNames" Type="System.String[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileNames">
          <span data-ttu-id="fe89e-136">Noms de fichiers à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-136">The file names to append.</span>
          </span>
          <span data-ttu-id="fe89e-137">Si le tableau est <see langword="null" />, cette méthode n’a aucun effet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-137">If the array is <see langword="null" />, then this method has no effect.</span>
          </span>
        </param>
        <param name="delimiter">
          <span data-ttu-id="fe89e-138">Délimiteur à placer entre les noms de fichiers dans la ligne de commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-138">The delimiter to put between file names in the command line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe89e-139">Ajoute à la ligne de commande la liste des noms de fichiers contenus dans le tableau <see langword="string" /> spécifié, séparés par le délimiteur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-139">Appends the command line with the list of file names in the specified <see langword="string" /> array, separated by the specified delimiter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe89e-140">Cette méthode ajoute la ligne de commande avec des noms de fichier et entoure les noms de fichiers avec des guillemets si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="fe89e-140">This method appends the command line with file names, and surrounds the file names with quotation marks as necessary.</span></span> <span data-ttu-id="fe89e-141">Les noms de fichiers sont séparés par le séparateur spécifié.</span><span class="sxs-lookup"><span data-stu-id="fe89e-141">The file names are separated by the specified delimiter.</span></span>  
  
 <span data-ttu-id="fe89e-142">Si la ligne de commande n’est pas vide, cette méthode ajoute également la ligne de commande avec un espace avant les noms de fichiers.</span><span class="sxs-lookup"><span data-stu-id="fe89e-142">If the command line is not empty, then this method also appends the command line with a space, before the file names.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe89e-143">`AppendFileNamesIfNotNull(new string[] {"Alpha.cs", "Beta.cs"}, ",")` produit `Alpha.cs,Beta.cs`.</span><span class="sxs-lookup"><span data-stu-id="fe89e-143">`AppendFileNamesIfNotNull(new string[] {"Alpha.cs", "Beta.cs"}, ",")` yields `Alpha.cs,Beta.cs`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendFileNameWithQuoting">
      <MemberSignature Language="C#" Value="protected void AppendFileNameWithQuoting (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AppendFileNameWithQuoting(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendFileNameWithQuoting(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AppendFileNameWithQuoting (fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AppendFileNameWithQuoting(System::String ^ fileName);" />
      <MemberSignature Language="F#" Value="member this.AppendFileNameWithQuoting : string -&gt; unit" Usage="commandLineBuilder.AppendFileNameWithQuoting fileName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName">
          <span data-ttu-id="fe89e-144">Nom de fichier à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-144">The file name to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe89e-145">Ajoute à la ligne de commande un nom de fichier et, si nécessaire, le met entre guillemets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-145">Appends the command line with a file name, and surrounds the file name with quotation marks as necessary.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe89e-146">Si le premier caractère du nom de fichier est un tiret, puis `.\` est ajouté au début du nom de fichier pour le distinguer d’un commutateur.</span><span class="sxs-lookup"><span data-stu-id="fe89e-146">If the first character of the file name is a dash, then `.\` is added to the beginning of the file name to distinguish it from a switch.</span></span>  
  
 <span data-ttu-id="fe89e-147">Cette méthode n’ajoute pas la ligne de commande avec un espace, avant l’exécution.</span><span class="sxs-lookup"><span data-stu-id="fe89e-147">This method does not append the command line with a space, before executing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe89e-148">`AppendFileNameWithQuoting("-StrangeFileName.cs")` produit `.\-StrangeFileName.cs`.</span><span class="sxs-lookup"><span data-stu-id="fe89e-148">`AppendFileNameWithQuoting("-StrangeFileName.cs")` yields `.\-StrangeFileName.cs`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendQuotedTextToBuffer">
      <MemberSignature Language="C#" Value="protected void AppendQuotedTextToBuffer (System.Text.StringBuilder buffer, string unquotedTextToAppend);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AppendQuotedTextToBuffer(class System.Text.StringBuilder buffer, string unquotedTextToAppend) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendQuotedTextToBuffer(System.Text.StringBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AppendQuotedTextToBuffer (buffer As StringBuilder, unquotedTextToAppend As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AppendQuotedTextToBuffer(System::Text::StringBuilder ^ buffer, System::String ^ unquotedTextToAppend);" />
      <MemberSignature Language="F#" Value="member this.AppendQuotedTextToBuffer : System.Text.StringBuilder * string -&gt; unit" Usage="commandLineBuilder.AppendQuotedTextToBuffer (buffer, unquotedTextToAppend)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Text.StringBuilder" />
        <Parameter Name="unquotedTextToAppend" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="fe89e-149">Mémoire tampon à laquelle effectuer l’ajout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-149">The buffer to append to.</span>
          </span>
        </param>
        <param name="unquotedTextToAppend">
          <span data-ttu-id="fe89e-150">Texte à placer entre guillemets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-150">The text to be quoted.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe89e-151">Ajoute le texte spécifié dans la mémoire tampon après avoir placé le texte entre guillemets, si nécessaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-151">Appends given text to the buffer after first quoting the text if necessary.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSpaceIfNotEmpty">
      <MemberSignature Language="C#" Value="protected void AppendSpaceIfNotEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AppendSpaceIfNotEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSpaceIfNotEmpty" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AppendSpaceIfNotEmpty ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AppendSpaceIfNotEmpty();" />
      <MemberSignature Language="F#" Value="member this.AppendSpaceIfNotEmpty : unit -&gt; unit" Usage="commandLineBuilder.AppendSpaceIfNotEmpty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe89e-152">Ajoute un espace à la chaîne spécifiée, si la chaîne n’est pas vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-152">Adds a space to the specified string, given the string is not empty.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe89e-153">Cette méthode est uniquement disponible pour les classes héritées.</span><span class="sxs-lookup"><span data-stu-id="fe89e-153">This method is only available to inherited classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitch">
      <MemberSignature Language="C#" Value="public void AppendSwitch (string switchName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitch(string switchName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitch(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitch (switchName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitch(System::String ^ switchName);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitch : string -&gt; unit" Usage="commandLineBuilder.AppendSwitch switchName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName">
          <span data-ttu-id="fe89e-154">Nom du commutateur à ajouter à la ligne de commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-154">The name of the switch to append to the command line.</span>
          </span>
          <span data-ttu-id="fe89e-155">Cette valeur ne peut pas être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-155">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe89e-156">Ajoute la ligne de commande avec le commutateur spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-156">Appends the command line with the specified switch.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe89e-157">Si la ligne de commande n’est pas vide, cette méthode ajoute également la ligne de commande avec un espace avant le commutateur.</span><span class="sxs-lookup"><span data-stu-id="fe89e-157">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe89e-158">L’exemple suivant crée un <xref:Microsoft.Build.Utilities.ToolTask> qui exécute [Ilasm.exe (assembleur IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="fe89e-158">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="fe89e-159">Le <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, et <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes sont utilisées pour générer les informations nécessaires pour exécuter la tâche.</span><span class="sxs-lookup"><span data-stu-id="fe89e-159">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 [!code-csharp[msbuild_ToolTask#1](~/samples/snippets/csharp/VS_Snippets_Misc/msbuild_ToolTask/CS/ILAsm.cs#1)]
 [!code-vb[msbuild_ToolTask#1](~/samples/snippets/visualbasic/VS_Snippets_Misc/msbuild_ToolTask/VB/ILAsm.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendSwitchIfNotNull">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe89e-160">Ajoute la ligne de commande avec un commutateur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-160">Appends the command line with a switch.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendSwitchIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchIfNotNull (string switchName, Microsoft.Build.Framework.ITaskItem parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchIfNotNull(string switchName, class Microsoft.Build.Framework.ITaskItem parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchIfNotNull (switchName As String, parameter As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchIfNotNull(System::String ^ switchName, Microsoft::Build::Framework::ITaskItem ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchIfNotNull : string * Microsoft.Build.Framework.ITaskItem -&gt; unit" Usage="commandLineBuilder.AppendSwitchIfNotNull (switchName, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameter" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="switchName">
          <span data-ttu-id="fe89e-161">Nom du commutateur à ajouter à la ligne de commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-161">The name of the switch to append to the command line.</span>
          </span>
          <span data-ttu-id="fe89e-162">Cette valeur ne peut pas être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-162">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="parameter">
          <span data-ttu-id="fe89e-163">Paramètre de commutateur à ajouter à la ligne de commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-163">The switch parameter to append to the command line.</span>
          </span>
          <span data-ttu-id="fe89e-164">Des guillemets sont ajoutés si nécessaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-164">Quotation marks will be added as necessary.</span>
          </span>
          <span data-ttu-id="fe89e-165">Si cette valeur est <see langword="null" />, cette méthode n’a aucun effet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-165">If this value is <see langword="null" />, then this method has no effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe89e-166">Ajoute à la ligne de commande un commutateur qui prend une spécification d’élément de tâche qui agit comme paramètre de chaîne unique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-166">Appends the command line with a switch that takes a task item specification that acts a single string parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe89e-167">Cette méthode encapsule des noms de fichiers individuels avec des guillemets si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="fe89e-167">This method encapsulates individual file names with quotation marks as necessary.</span></span>  
  
 <span data-ttu-id="fe89e-168">Si la ligne de commande n’est pas vide, cette méthode ajoute également la ligne de commande avec un espace avant le commutateur.</span><span class="sxs-lookup"><span data-stu-id="fe89e-168">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe89e-169">Consultez l’exemple dans <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="fe89e-169">See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchIfNotNull (string switchName, string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchIfNotNull(string switchName, string parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchIfNotNull (switchName As String, parameter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchIfNotNull(System::String ^ switchName, System::String ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchIfNotNull : string * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchIfNotNull (switchName, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName">
          <span data-ttu-id="fe89e-170">Nom du commutateur à ajouter à la ligne de commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-170">The name of the switch to append to the command line.</span>
          </span>
          <span data-ttu-id="fe89e-171">Cette valeur ne peut pas être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-171">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="parameter">
          <span data-ttu-id="fe89e-172">Paramètre de commutateur à ajouter à la ligne de commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-172">The switch parameter to append to the command line.</span>
          </span>
          <span data-ttu-id="fe89e-173">Des guillemets sont ajoutés si nécessaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-173">Quotation marks will be added as necessary.</span>
          </span>
          <span data-ttu-id="fe89e-174">Si cette valeur est <see langword="null" />, cette méthode n’a aucun effet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-174">If this value is <see langword="null" />, then this method has no effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe89e-175">Ajoute à la ligne de commande un commutateur qui prend un seul paramètre de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-175">Appends the command line with a switch that takes a single string parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe89e-176">Cette méthode encapsule des noms de fichiers individuels avec des guillemets si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="fe89e-176">This method encapsulates individual file names with quotation marks as necessary.</span></span>  
  
 <span data-ttu-id="fe89e-177">Si la ligne de commande n’est pas vide, cette méthode ajoute également la ligne de commande avec un espace avant le commutateur.</span><span class="sxs-lookup"><span data-stu-id="fe89e-177">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe89e-178">`AppendSwitchIfNotNull("/source:", "File Name.cs")` produit `/source:\"File Name.cs\"`.</span><span class="sxs-lookup"><span data-stu-id="fe89e-178">`AppendSwitchIfNotNull("/source:", "File Name.cs")` yields `/source:\"File Name.cs\"`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchIfNotNull (string switchName, Microsoft.Build.Framework.ITaskItem[] parameters, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchIfNotNull(string switchName, class Microsoft.Build.Framework.ITaskItem[] parameters, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchIfNotNull (switchName As String, parameters As ITaskItem(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchIfNotNull(System::String ^ switchName, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ parameters, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchIfNotNull : string * Microsoft.Build.Framework.ITaskItem[] * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchIfNotNull (switchName, parameters, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameters" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName">
          <span data-ttu-id="fe89e-179">Nom du commutateur à ajouter à la ligne de commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-179">The name of the switch to append to the command line.</span>
          </span>
          <span data-ttu-id="fe89e-180">Cette valeur ne peut pas être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-180">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="fe89e-181">Tableau de paramètres de commutateur à ajouter à la ligne de commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-181">An array of switch parameters to append to the command line.</span>
          </span>
          <span data-ttu-id="fe89e-182">Des guillemets seront ajoutés si nécessaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-182">Quotation marks will be added as necessary.</span>
          </span>
          <span data-ttu-id="fe89e-183">Si le tableau est <see langword="null" />, cette méthode n’a aucun effet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-183">If the array is <see langword="null" />, then this method has no effect.</span>
          </span>
        </param>
        <param name="delimiter">
          <span data-ttu-id="fe89e-184">Délimiteur qui sépare les différents paramètres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-184">The delimiter that separates individual parameters.</span>
          </span>
          <span data-ttu-id="fe89e-185">Cette valeur peut être vide, mais elle ne peut pas être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-185">This value can be empty, but it cannot be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe89e-186">Ajoute à la ligne de commande un commutateur qui prend un tableau de spécifications d’éléments de tâches qui agissent comme paramètres de chaînes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-186">Appends the command line with a switch that takes an array of task item specifications that act as string parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe89e-187">Cette méthode encapsule des noms de fichiers individuels avec des guillemets si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="fe89e-187">This method encapsulates individual file names with quotation marks as necessary.</span></span>  
  
 <span data-ttu-id="fe89e-188">Si la ligne de commande n’est pas vide, cette méthode ajoute également la ligne de commande avec un espace avant le commutateur.</span><span class="sxs-lookup"><span data-stu-id="fe89e-188">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe89e-189">Consultez l’exemple dans <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="fe89e-189">See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchIfNotNull (string switchName, string[] parameters, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchIfNotNull(string switchName, string[] parameters, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchIfNotNull(System.String,System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchIfNotNull (switchName As String, parameters As String(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchIfNotNull(System::String ^ switchName, cli::array &lt;System::String ^&gt; ^ parameters, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchIfNotNull : string * string[] * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchIfNotNull (switchName, parameters, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameters" Type="System.String[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName">
          <span data-ttu-id="fe89e-190">Nom du commutateur à ajouter à la ligne de commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-190">The name of the switch to append to the command line.</span>
          </span>
          <span data-ttu-id="fe89e-191">Cette valeur ne peut pas être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-191">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="fe89e-192">Tableau de paramètres de commutateur à ajouter à la ligne de commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-192">An array of switch parameters to append to the command line.</span>
          </span>
          <span data-ttu-id="fe89e-193">Des guillemets seront ajoutés si nécessaire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-193">Quotation marks will be added as necessary.</span>
          </span>
          <span data-ttu-id="fe89e-194">Si le tableau est <see langword="null" />, cette méthode n’a aucun effet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-194">If the array is <see langword="null" />, then this method has no effect.</span>
          </span>
        </param>
        <param name="delimiter">
          <span data-ttu-id="fe89e-195">Délimiteur qui sépare les différents paramètres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-195">The delimiter that separates individual parameters.</span>
          </span>
          <span data-ttu-id="fe89e-196">Cette valeur peut être vide, mais elle ne peut pas être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-196">This value can be empty, but it cannot be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe89e-197">Ajoute à la ligne de commande un commutateur qui prend un tableau de paramètres de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-197">Appends the command line with a switch that takes an array of string parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe89e-198">Cette méthode encapsule des noms de fichiers individuels avec des guillemets si nécessaire.</span><span class="sxs-lookup"><span data-stu-id="fe89e-198">This method encapsulates individual file names with quotation marks as necessary.</span></span>  
  
 <span data-ttu-id="fe89e-199">Si la ligne de commande n’est pas vide, cette méthode ajoute également la ligne de commande avec un espace avant le commutateur.</span><span class="sxs-lookup"><span data-stu-id="fe89e-199">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe89e-200">`AppendSwitchIfNotNull("/sources:", new string[] {"Alpha.cs", "Be ta.cs"}, ";")` produit `/sources:Alpha.cs;\"Be ta.cs\"`.</span><span class="sxs-lookup"><span data-stu-id="fe89e-200">`AppendSwitchIfNotNull("/sources:", new string[] {"Alpha.cs", "Be ta.cs"}, ";")` yields `/sources:Alpha.cs;\"Be ta.cs\"`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendSwitchUnquotedIfNotNull">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="fe89e-201">Ajoute la ligne de commande avec un commutateur, sans tenter d'encapsuler les paramètres de commutateur avec des guillemets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-201">Appends the command line with a switch, without attempting to encapsulate the switch parameters with quotation marks.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendSwitchUnquotedIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchUnquotedIfNotNull (string switchName, Microsoft.Build.Framework.ITaskItem parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchUnquotedIfNotNull(string switchName, class Microsoft.Build.Framework.ITaskItem parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchUnquotedIfNotNull (switchName As String, parameter As ITaskItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchUnquotedIfNotNull(System::String ^ switchName, Microsoft::Build::Framework::ITaskItem ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchUnquotedIfNotNull : string * Microsoft.Build.Framework.ITaskItem -&gt; unit" Usage="commandLineBuilder.AppendSwitchUnquotedIfNotNull (switchName, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameter" Type="Microsoft.Build.Framework.ITaskItem" />
      </Parameters>
      <Docs>
        <param name="switchName">
          <span data-ttu-id="fe89e-202">Nom du commutateur à ajouter à la ligne de commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-202">The name of the switch to append to the command line.</span>
          </span>
          <span data-ttu-id="fe89e-203">Cette valeur ne peut pas être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-203">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="parameter">
          <span data-ttu-id="fe89e-204">Paramètre de commutateur à ajouter à la ligne de commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-204">The switch parameter to append to the command line.</span>
          </span>
          <span data-ttu-id="fe89e-205">Les guillemets ne sont pas ajoutés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-205">Quotation marks will not be added.</span>
          </span>
          <span data-ttu-id="fe89e-206">Si cette valeur est <see langword="null" />, cette méthode n’a aucun effet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-206">If this value is <see langword="null" />, then this method has no effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe89e-207">Ajoute à la ligne de commande un commutateur qui prend une spécification d’élément de tâche comme paramètre de chaîne unique, sans tenter d’encapsuler le paramètre de commutateur avec des guillemets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-207">Appends the command line with a switch that takes a task item specification as a single string parameter, without attempting to encapsulate the switch parameter with quotation marks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe89e-208">Si la ligne de commande n’est pas vide, cette méthode ajoute également la ligne de commande avec un espace avant le commutateur.</span><span class="sxs-lookup"><span data-stu-id="fe89e-208">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe89e-209">Consultez l’exemple dans <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="fe89e-209">See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchUnquotedIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchUnquotedIfNotNull (string switchName, string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchUnquotedIfNotNull(string switchName, string parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchUnquotedIfNotNull (switchName As String, parameter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchUnquotedIfNotNull(System::String ^ switchName, System::String ^ parameter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchUnquotedIfNotNull : string * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchUnquotedIfNotNull (switchName, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName">
          <span data-ttu-id="fe89e-210">Nom du commutateur à ajouter à la ligne de commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-210">The name of the switch to append to the command line.</span>
          </span>
          <span data-ttu-id="fe89e-211">Cette valeur ne peut pas être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-211">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="parameter">
          <span data-ttu-id="fe89e-212">Paramètre de commutateur à ajouter à la ligne de commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-212">The switch parameter to append to the command line.</span>
          </span>
          <span data-ttu-id="fe89e-213">Les guillemets ne sont pas ajoutés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-213">Quotation marks will not be added.</span>
          </span>
          <span data-ttu-id="fe89e-214">Si cette valeur est <see langword="null" />, cette méthode n’a aucun effet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-214">If this value is <see langword="null" />, then this method has no effect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe89e-215">Ajoute à la ligne de commande un commutateur qui prend un paramètre de chaîne unique, sans tenter d’encapsuler le paramètre de commutateur avec des guillemets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-215">Appends the command line with a switch that takes a single string parameter, without attempting to encapsulate the switch parameter with quotation marks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe89e-216">Si la ligne de commande n’est pas vide, cette méthode ajoute également la ligne de commande avec un espace avant le commutateur.</span><span class="sxs-lookup"><span data-stu-id="fe89e-216">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe89e-217">`AppendSwitchUnquotedIfNotNull("/source:", "File Name.cs")` produit `/source:File Name.cs`.</span><span class="sxs-lookup"><span data-stu-id="fe89e-217">`AppendSwitchUnquotedIfNotNull("/source:", "File Name.cs")` yields `/source:File Name.cs`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchUnquotedIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchUnquotedIfNotNull (string switchName, Microsoft.Build.Framework.ITaskItem[] parameters, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchUnquotedIfNotNull(string switchName, class Microsoft.Build.Framework.ITaskItem[] parameters, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,Microsoft.Build.Framework.ITaskItem[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchUnquotedIfNotNull (switchName As String, parameters As ITaskItem(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchUnquotedIfNotNull(System::String ^ switchName, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ parameters, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchUnquotedIfNotNull : string * Microsoft.Build.Framework.ITaskItem[] * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchUnquotedIfNotNull (switchName, parameters, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameters" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName">
          <span data-ttu-id="fe89e-218">Nom du commutateur à ajouter à la ligne de commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-218">The name of the switch to append to the command line.</span>
          </span>
          <span data-ttu-id="fe89e-219">Cette valeur ne peut pas être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-219">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="fe89e-220">Tableau de paramètres du commutateur à ajouter à la ligne de commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-220">An array of switch parameters to append to the command line.</span>
          </span>
          <span data-ttu-id="fe89e-221">Les guillemets ne sont pas ajoutés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-221">Quotation marks will not be added.</span>
          </span>
          <span data-ttu-id="fe89e-222">Si le tableau est <see langword="null" />, cette méthode n’a aucun effet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-222">If the array is <see langword="null" />, then this method has no effect.</span>
          </span>
        </param>
        <param name="delimiter">
          <span data-ttu-id="fe89e-223">Délimiteur qui sépare les différents paramètres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-223">The delimiter that separates individual parameters.</span>
          </span>
          <span data-ttu-id="fe89e-224">Cette valeur peut être vide, mais elle ne peut pas être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-224">This value can be empty, but it cannot be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe89e-225">Ajoute à la ligne de commande un commutateur qui prend un tableau de spécifications d’éléments de tâches qui agissent comme paramètres de chaîne, sans tenter de les encapsuler avec des guillemets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-225">Appends the command line with a switch that takes an array of task item specifications that act as string parameters, without attempting to encapsulate them with quotation marks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe89e-226">Si la ligne de commande n’est pas vide, cette méthode ajoute également la ligne de commande avec un espace avant le commutateur.</span><span class="sxs-lookup"><span data-stu-id="fe89e-226">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe89e-227">Consultez l’exemple dans <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull%2A>.</span><span class="sxs-lookup"><span data-stu-id="fe89e-227">See example in <xref:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendSwitchUnquotedIfNotNull">
      <MemberSignature Language="C#" Value="public void AppendSwitchUnquotedIfNotNull (string switchName, string[] parameters, string delimiter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendSwitchUnquotedIfNotNull(string switchName, string[] parameters, string delimiter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendSwitchUnquotedIfNotNull(System.String,System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendSwitchUnquotedIfNotNull (switchName As String, parameters As String(), delimiter As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendSwitchUnquotedIfNotNull(System::String ^ switchName, cli::array &lt;System::String ^&gt; ^ parameters, System::String ^ delimiter);" />
      <MemberSignature Language="F#" Value="member this.AppendSwitchUnquotedIfNotNull : string * string[] * string -&gt; unit" Usage="commandLineBuilder.AppendSwitchUnquotedIfNotNull (switchName, parameters, delimiter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameters" Type="System.String[]" />
        <Parameter Name="delimiter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName">
          <span data-ttu-id="fe89e-228">Nom du commutateur à ajouter à la ligne de commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-228">The name of the switch to append to the command line.</span>
          </span>
          <span data-ttu-id="fe89e-229">Cette valeur ne peut pas être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-229">This value cannot be <see langword="null" />.</span>
          </span>
        </param>
        <param name="parameters">
          <span data-ttu-id="fe89e-230">Tableau de paramètres du commutateur à ajouter à la ligne de commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-230">An array of switch parameters to append to the command line.</span>
          </span>
          <span data-ttu-id="fe89e-231">Les guillemets ne sont pas ajoutés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-231">Quotation marks will not be added.</span>
          </span>
          <span data-ttu-id="fe89e-232">Si le tableau est <see langword="null" />, cette méthode n’a aucun effet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-232">If the array is <see langword="null" />, then this method has no effect.</span>
          </span>
        </param>
        <param name="delimiter">
          <span data-ttu-id="fe89e-233">Délimiteur qui sépare les différents paramètres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-233">The delimiter that separates individual parameters.</span>
          </span>
          <span data-ttu-id="fe89e-234">Cette valeur peut être vide, mais elle ne peut pas être <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-234">This value can be empty, but it cannot be <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe89e-235">Ajoute à la ligne de commande un commutateur qui prend un tableau de paramètres de chaîne, sans tenter d’encapsuler des paramètres de commutateur avec des guillemets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-235">Appends the command line with a switch that takes an array of string parameters, without attempting to encapsulate switch parameters with quotation marks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe89e-236">Si la ligne de commande n’est pas vide, cette méthode ajoute également la ligne de commande avec un espace avant le commutateur.</span><span class="sxs-lookup"><span data-stu-id="fe89e-236">If the command line is not empty, then this method also appends the command line with a space, before the switch.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe89e-237">`AppendSwitchUnquotedIfNotNull("/sources:", new string[] {"Alpha.cs", "Be ta.cs"}, ";")` produit `/sources:Alpha.cs;Be ta.cs`.</span><span class="sxs-lookup"><span data-stu-id="fe89e-237">`AppendSwitchUnquotedIfNotNull("/sources:", new string[] {"Alpha.cs", "Be ta.cs"}, ";")` yields `/sources:Alpha.cs;Be ta.cs`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendTextUnquoted">
      <MemberSignature Language="C#" Value="public void AppendTextUnquoted (string textToAppend);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendTextUnquoted(string textToAppend) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendTextUnquoted(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendTextUnquoted (textToAppend As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendTextUnquoted(System::String ^ textToAppend);" />
      <MemberSignature Language="F#" Value="member this.AppendTextUnquoted : string -&gt; unit" Usage="commandLineBuilder.AppendTextUnquoted textToAppend" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToAppend" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToAppend">
          <span data-ttu-id="fe89e-238">Chaîne à ajouter à la ligne de commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-238">The string to append to the command line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe89e-239">Ajoute la ligne de commande avec la chaîne, sans tenter d’encapsuler la chaîne avec des guillemets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-239">Appends the command line with string, without attempting to encapsulate the string with quotation marks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe89e-240">Cette méthode n’ajoute pas la ligne de commande avec un espace, avant l’exécution.</span><span class="sxs-lookup"><span data-stu-id="fe89e-240">This method does not append the command line with a space, before executing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe89e-241">`AppendTextUnquoted(@"Folder name\filename.cs")` produit `Folder name\\filename.cs`.</span><span class="sxs-lookup"><span data-stu-id="fe89e-241">`AppendTextUnquoted(@"Folder name\filename.cs")` yields `Folder name\\filename.cs`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendTextWithQuoting">
      <MemberSignature Language="C#" Value="protected void AppendTextWithQuoting (string textToAppend);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AppendTextWithQuoting(string textToAppend) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.AppendTextWithQuoting(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AppendTextWithQuoting (textToAppend As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AppendTextWithQuoting(System::String ^ textToAppend);" />
      <MemberSignature Language="F#" Value="member this.AppendTextWithQuoting : string -&gt; unit" Usage="commandLineBuilder.AppendTextWithQuoting textToAppend" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textToAppend" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textToAppend">
          <span data-ttu-id="fe89e-242">Chaîne à ajouter à la ligne de commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-242">The string to append to the command line.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe89e-243">Ajoute la ligne de commande à la chaîne et, si nécessaire, met la chaîne entre guillemets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-243">Appends the command line with string, and surrounds the string with quotations marks as necessary.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe89e-244">Cette méthode n’ajoute pas la ligne de commande avec un espace, avant l’exécution.</span><span class="sxs-lookup"><span data-stu-id="fe89e-244">This method does not append the command line with a space, before executing.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fe89e-245">`AppendTextWithQuoting(@"Folder name\filename.cs")` produit `\"Folder name\\filename.cs\"`.</span><span class="sxs-lookup"><span data-stu-id="fe89e-245">`AppendTextWithQuoting(@"Folder name\filename.cs")` yields `\"Folder name\\filename.cs\"`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandLine">
      <MemberSignature Language="C#" Value="protected System.Text.StringBuilder CommandLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.StringBuilder CommandLine" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.CommandLineBuilder.CommandLine" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property CommandLine As StringBuilder" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Text::StringBuilder ^ CommandLine { System::Text::StringBuilder ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandLine : System.Text.StringBuilder" Usage="Microsoft.Build.Utilities.CommandLineBuilder.CommandLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.StringBuilder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe89e-246">Obtient l’instance de <see cref="T:System.Text.StringBuilder" /> qui représente la ligne de commande pour les classes qui héritent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-246">Gets the <see cref="T:System.Text.StringBuilder" /> instance representing the command line for inheriting classes.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe89e-247">
            <see cref="T:System.Text.StringBuilder" /> pour les classes qui héritent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-247">A <see cref="T:System.Text.StringBuilder" /> for inheriting classes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsQuotingRequired">
      <MemberSignature Language="C#" Value="protected virtual bool IsQuotingRequired (string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool IsQuotingRequired(string parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.IsQuotingRequired(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function IsQuotingRequired (parameter As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool IsQuotingRequired(System::String ^ parameter);" />
      <MemberSignature Language="F#" Value="abstract member IsQuotingRequired : string -&gt; bool&#xA;override this.IsQuotingRequired : string -&gt; bool" Usage="commandLineBuilder.IsQuotingRequired parameter" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="fe89e-248">Chaîne à examiner à la recherche des caractères qui nécessitent des guillemets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-248">The string to examine for characters that require quotation marks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe89e-249">Détermine si le paramètre de chaîne spécifié doit être mis entre guillemets, car il contient un espace blanc.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-249">Determines whether the specified string parameter should be surrounded with quotation marks because it contains white space.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe89e-250">
            <see langword="true" />, si le paramètre de commutateur doit être entouré de guillemets ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-250">
              <see langword="true" />, if the switch parameter should be surrounded with quotation marks; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.CommandLineBuilder.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="Microsoft.Build.Utilities.CommandLineBuilder.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe89e-251">Représente la longueur de la ligne de commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-251">Represents the length of the command line.</span>
          </span>
        </summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="commandLineBuilder.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe89e-252">Retourne la ligne de commande sous forme de chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-252">Returns the command line as a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe89e-253">
            <see cref="T:System.String" /> qui représente la ligne de commande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-253">A <see cref="T:System.String" /> that represents the command line.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fe89e-254">L’exemple suivant crée un <xref:Microsoft.Build.Utilities.ToolTask> qui exécute [Ilasm.exe (assembleur IL)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span><span class="sxs-lookup"><span data-stu-id="fe89e-254">The following example creates a <xref:Microsoft.Build.Utilities.ToolTask> that runs [Ilasm.exe (IL Assembler)](~/docs/framework/tools/ilasm-exe-il-assembler.md).</span></span> <span data-ttu-id="fe89e-255">Le <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, et <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes sont utilisées pour générer les informations nécessaires pour exécuter la tâche.</span><span class="sxs-lookup"><span data-stu-id="fe89e-255">The <xref:Microsoft.Build.Utilities.CommandLineBuilder>, <xref:Microsoft.Build.Utilities.ToolLocationHelper>, and <xref:Microsoft.Build.Utilities.TaskLoggingHelper> classes are used to generate the information needed to run the task.</span></span>  
  
 <span data-ttu-id="fe89e-256">msbuild_ToolTask n° 1</span><span class="sxs-lookup"><span data-stu-id="fe89e-256">msbuild_ToolTask#1</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyThrowNoEmbeddedDoubleQuotes">
      <MemberSignature Language="C#" Value="protected virtual void VerifyThrowNoEmbeddedDoubleQuotes (string switchName, string parameter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void VerifyThrowNoEmbeddedDoubleQuotes(string switchName, string parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub VerifyThrowNoEmbeddedDoubleQuotes (switchName As String, parameter As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void VerifyThrowNoEmbeddedDoubleQuotes(System::String ^ switchName, System::String ^ parameter);" />
      <MemberSignature Language="F#" Value="abstract member VerifyThrowNoEmbeddedDoubleQuotes : string * string -&gt; unit&#xA;override this.VerifyThrowNoEmbeddedDoubleQuotes : string * string -&gt; unit" Usage="commandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes (switchName, parameter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="switchName" Type="System.String" />
        <Parameter Name="parameter" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="switchName">
          <span data-ttu-id="fe89e-257">Chaîne représentant le nom de commutateur du message d’erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-257">A string representing the switch name for the error message.</span>
          </span>
        </param>
        <param name="parameter">
          <span data-ttu-id="fe89e-258">Chaîne représentant le paramètre de commutateur à analyser pour les doubles guillemets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-258">A string representing the switch parameter to scan for double-quotes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe89e-259">Retourne une erreur si le paramètre de ligne de commande contient un caractère de guillemet double (").</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-259">Returns an error if the command line parameter contains a double-quote (") character.</span>
          </span>
          <span data-ttu-id="fe89e-260">Comme les doubles guillemets sont interdits dans les paramètres de ligne de commande, cette méthode contribue à empêcher les attaques par injection de paramètre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe89e-260">Because double quotes are illegal in command line parameters, this method helps prevent parameter injection attacks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe89e-261"><xref:Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes%2A> est une méthode virtuelle afin que vos applications peuvent substituer cette méthode si vous souhaitez autoriser les doubles guillemets d’échappement dans les noms de fichiers.</span><span class="sxs-lookup"><span data-stu-id="fe89e-261"><xref:Microsoft.Build.Utilities.CommandLineBuilder.VerifyThrowNoEmbeddedDoubleQuotes%2A> is a virtual method so that your applications can override this method if you want to allow double-quotes escaped in filenames.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>