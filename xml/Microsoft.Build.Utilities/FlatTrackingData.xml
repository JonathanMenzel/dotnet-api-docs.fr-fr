<Type Name="FlatTrackingData" FullName="Microsoft.Build.Utilities.FlatTrackingData">
  <TypeSignature Language="C#" Value="public class FlatTrackingData" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FlatTrackingData extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Utilities.FlatTrackingData" />
  <TypeSignature Language="VB.NET" Value="Public Class FlatTrackingData" />
  <TypeSignature Language="C++ CLI" Value="public ref class FlatTrackingData" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="ed185-101">Cette classe est utilisée pour suivre les dépendances de fichier pendant une génération.</span><span class="sxs-lookup"><span data-stu-id="ed185-101">This class is used to track file dependencies during a build.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ed185-102">Crée une nouvelle instance de la classe utilisée pour le suivi des dépendances de fichier pendant une build.</span><span class="sxs-lookup"><span data-stu-id="ed185-102">Creates a new instance of the class used to track file dependencies during a build.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlatTrackingData (Microsoft.Build.Framework.ITaskItem[] tlogFiles, bool skipMissingFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITaskItem[] tlogFiles, bool skipMissingFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tlogFiles As ITaskItem(), skipMissingFiles As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FlatTrackingData(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFiles, bool skipMissingFiles);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tlogFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="skipMissingFiles" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="tlogFiles"><span data-ttu-id="ed185-103">Fichiers tlog .write.</span><span class="sxs-lookup"><span data-stu-id="ed185-103">The .write.</span></span> <span data-ttu-id="ed185-104">à interpréter</span><span class="sxs-lookup"><span data-stu-id="ed185-104">tlog files to interpret</span></span></param>
        <param name="skipMissingFiles"><span data-ttu-id="ed185-105">Ignore les fichiers qui ne se trouvent pas sur le disque</span><span class="sxs-lookup"><span data-stu-id="ed185-105">Ignore files that do not exist on disk</span></span></param>
        <summary><span data-ttu-id="ed185-106">Constructeur</span><span class="sxs-lookup"><span data-stu-id="ed185-106">Constructor</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlatTrackingData (Microsoft.Build.Framework.ITaskItem[] tlogFiles, DateTime missingFileTimeUtc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITaskItem[] tlogFiles, valuetype System.DateTime missingFileTimeUtc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tlogFiles As ITaskItem(), missingFileTimeUtc As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FlatTrackingData(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFiles, DateTime missingFileTimeUtc);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tlogFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="missingFileTimeUtc" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="tlogFiles"><span data-ttu-id="ed185-107">Fichiers tlog .write.</span><span class="sxs-lookup"><span data-stu-id="ed185-107">The .write.</span></span> <span data-ttu-id="ed185-108">à interpréter</span><span class="sxs-lookup"><span data-stu-id="ed185-108">tlog files to interpret</span></span></param>
        <param name="missingFileTimeUtc"><span data-ttu-id="ed185-109">DateTime qui doit être enregistrée pour le fichier manquant.</span><span class="sxs-lookup"><span data-stu-id="ed185-109">The DateTime that should be recorded for missing file.</span></span></param>
        <summary><span data-ttu-id="ed185-110">Constructeur</span><span class="sxs-lookup"><span data-stu-id="ed185-110">Constructor</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlatTrackingData (Microsoft.Build.Framework.ITask ownerTask, Microsoft.Build.Framework.ITaskItem[] tlogFiles, bool skipMissingFiles);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITask ownerTask, class Microsoft.Build.Framework.ITaskItem[] tlogFiles, bool skipMissingFiles) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ownerTask As ITask, tlogFiles As ITaskItem(), skipMissingFiles As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FlatTrackingData(Microsoft::Build::Framework::ITask ^ ownerTask, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFiles, bool skipMissingFiles);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ownerTask" Type="Microsoft.Build.Framework.ITask" />
        <Parameter Name="tlogFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="skipMissingFiles" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="ownerTask"><span data-ttu-id="ed185-111">Tâche qui utilise le dispositif de suivi des fichiers</span><span class="sxs-lookup"><span data-stu-id="ed185-111">The task that is using file tracker</span></span></param>
        <param name="tlogFiles"><span data-ttu-id="ed185-112">Fichiers tlog à interpréter</span><span class="sxs-lookup"><span data-stu-id="ed185-112">The tlog files to interpret</span></span></param>
        <param name="skipMissingFiles"><span data-ttu-id="ed185-113">Ignore les fichiers qui ne se trouvent pas sur le disque</span><span class="sxs-lookup"><span data-stu-id="ed185-113">Ignore files that do not exist on disk</span></span></param>
        <summary><span data-ttu-id="ed185-114">Constructeur</span><span class="sxs-lookup"><span data-stu-id="ed185-114">Constructor</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlatTrackingData (Microsoft.Build.Framework.ITask ownerTask, Microsoft.Build.Framework.ITaskItem[] tlogFiles, DateTime missingFileTimeUtc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITask ownerTask, class Microsoft.Build.Framework.ITaskItem[] tlogFiles, valuetype System.DateTime missingFileTimeUtc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITask,Microsoft.Build.Framework.ITaskItem[],System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ownerTask As ITask, tlogFiles As ITaskItem(), missingFileTimeUtc As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FlatTrackingData(Microsoft::Build::Framework::ITask ^ ownerTask, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFiles, DateTime missingFileTimeUtc);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ownerTask" Type="Microsoft.Build.Framework.ITask" />
        <Parameter Name="tlogFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="missingFileTimeUtc" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="ownerTask"><span data-ttu-id="ed185-115">Tâche qui utilise le dispositif de suivi des fichiers</span><span class="sxs-lookup"><span data-stu-id="ed185-115">The task that is using file tracker</span></span></param>
        <param name="tlogFiles"><span data-ttu-id="ed185-116">Fichiers tlog à interpréter</span><span class="sxs-lookup"><span data-stu-id="ed185-116">The tlog files to interpret</span></span></param>
        <param name="missingFileTimeUtc"><span data-ttu-id="ed185-117">DateTime qui doit être enregistrée pour le fichier manquant.</span><span class="sxs-lookup"><span data-stu-id="ed185-117">The DateTime that should be recorded for missing file.</span></span></param>
        <summary><span data-ttu-id="ed185-118">Constructeur</span><span class="sxs-lookup"><span data-stu-id="ed185-118">Constructor</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlatTrackingData (Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem[] tlogFilesToIgnore, DateTime missingFileTimeUtc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITaskItem[] tlogFiles, class Microsoft.Build.Framework.ITaskItem[] tlogFilesToIgnore, valuetype System.DateTime missingFileTimeUtc) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],System.DateTime)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tlogFiles As ITaskItem(), tlogFilesToIgnore As ITaskItem(), missingFileTimeUtc As DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FlatTrackingData(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFiles, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFilesToIgnore, DateTime missingFileTimeUtc);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tlogFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="tlogFilesToIgnore" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="missingFileTimeUtc" Type="System.DateTime" />
      </Parameters>
      <Docs>
        <param name="tlogFiles"><span data-ttu-id="ed185-119">Fichiers tlog .write.</span><span class="sxs-lookup"><span data-stu-id="ed185-119">The .write.</span></span> <span data-ttu-id="ed185-120">à interpréter</span><span class="sxs-lookup"><span data-stu-id="ed185-120">tlog files to interpret</span></span></param>
        <param name="tlogFilesToIgnore"><span data-ttu-id="ed185-121">TLogs à ignorer.</span><span class="sxs-lookup"><span data-stu-id="ed185-121">The TLogs to ignore.</span></span></param>
        <param name="missingFileTimeUtc"><span data-ttu-id="ed185-122">DateTime qui doit être enregistrée pour le fichier manquant.</span><span class="sxs-lookup"><span data-stu-id="ed185-122">The DateTime that should be recorded for missing file.</span></span></param>
        <summary><span data-ttu-id="ed185-123">Constructeur</span><span class="sxs-lookup"><span data-stu-id="ed185-123">Constructor</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FlatTrackingData (Microsoft.Build.Framework.ITaskItem[] tlogFiles, Microsoft.Build.Framework.ITaskItem[] tlogFilesToIgnore, DateTime missingFileTimeUtc, string[] excludedInputPaths, System.Collections.Generic.IDictionary&lt;string,DateTime&gt; sharedLastWriteTimeUtcCache);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class Microsoft.Build.Framework.ITaskItem[] tlogFiles, class Microsoft.Build.Framework.ITaskItem[] tlogFilesToIgnore, valuetype System.DateTime missingFileTimeUtc, string[] excludedInputPaths, class System.Collections.Generic.IDictionary`2&lt;string, valuetype System.DateTime&gt; sharedLastWriteTimeUtcCache) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.#ctor(Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],System.DateTime,System.String[],System.Collections.Generic.IDictionary{System.String,System.DateTime})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tlogFiles As ITaskItem(), tlogFilesToIgnore As ITaskItem(), missingFileTimeUtc As DateTime, excludedInputPaths As String(), sharedLastWriteTimeUtcCache As IDictionary(Of String, DateTime))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FlatTrackingData(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFiles, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ tlogFilesToIgnore, DateTime missingFileTimeUtc, cli::array &lt;System::String ^&gt; ^ excludedInputPaths, System::Collections::Generic::IDictionary&lt;System::String ^, DateTime&gt; ^ sharedLastWriteTimeUtcCache);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tlogFiles" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="tlogFilesToIgnore" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="missingFileTimeUtc" Type="System.DateTime" />
        <Parameter Name="excludedInputPaths" Type="System.String[]" />
        <Parameter Name="sharedLastWriteTimeUtcCache" Type="System.Collections.Generic.IDictionary&lt;System.String,System.DateTime&gt;" />
      </Parameters>
      <Docs>
        <param name="tlogFiles"><span data-ttu-id="ed185-124">Fichiers .tlog à interpréter.</span><span class="sxs-lookup"><span data-stu-id="ed185-124">The .tlog files to interpret</span></span></param>
        <param name="tlogFilesToIgnore"><span data-ttu-id="ed185-125">Fichiers tlog à ignorer.</span><span class="sxs-lookup"><span data-stu-id="ed185-125">The .tlog files to ignore</span></span></param>
        <param name="missingFileTimeUtc"><span data-ttu-id="ed185-126">Date et heure qui doivent être enregistrées pour le fichier manquant.</span><span class="sxs-lookup"><span data-stu-id="ed185-126">The date and time that should be recorded for missing file.</span></span></param>
        <param name="excludedInputPaths"><span data-ttu-id="ed185-127">Ensemble de chemins d'accès qui contiennent les fichiers à ignorer, y compris les sous-répertoires éventuels.</span><span class="sxs-lookup"><span data-stu-id="ed185-127">The set of paths that contain files to be ignored, including any subdirectories.</span></span></param>
        <param name="sharedLastWriteTimeUtcCache"><span data-ttu-id="ed185-128">Cache à utiliser pouvant être partagé entre plusieurs instances de <c>FlatTrackingData</c>.</span><span class="sxs-lookup"><span data-stu-id="ed185-128">Cache to be used which can be shared between multiple <c>FlatTrackingData</c> instances.</span></span></param>
        <summary><span data-ttu-id="ed185-129">Constructeur</span><span class="sxs-lookup"><span data-stu-id="ed185-129">Constructor</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DependencyTable">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,DateTime&gt; DependencyTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, valuetype System.DateTime&gt; DependencyTable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.DependencyTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependencyTable As IDictionary(Of String, DateTime)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, DateTime&gt; ^ DependencyTable { System::Collections::Generic::IDictionary&lt;System::String ^, DateTime&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.DateTime&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed185-130">Obtient la table de dépendances.</span><span class="sxs-lookup"><span data-stu-id="ed185-130">Gets the dependency table.</span></span></summary>
        <value><span data-ttu-id="ed185-131">Retourne la table de dépendances.</span><span class="sxs-lookup"><span data-stu-id="ed185-131">Returns the dependency table.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileIsExcludedFromDependencyCheck">
      <MemberSignature Language="C#" Value="public bool FileIsExcludedFromDependencyCheck (string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool FileIsExcludedFromDependencyCheck(string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.FileIsExcludedFromDependencyCheck(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FileIsExcludedFromDependencyCheck (fileName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool FileIsExcludedFromDependencyCheck(System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="fileName"><span data-ttu-id="ed185-132">Nom du fichier à tester.</span><span class="sxs-lookup"><span data-stu-id="ed185-132">Name of the file to test.</span></span></param>
        <summary><span data-ttu-id="ed185-133">Retourne la valeur <see langword="true" /> si le fichier spécifié est exclu de la vérification des dépendances faisant l'objet d'un suivi.</span><span class="sxs-lookup"><span data-stu-id="ed185-133">Returns <see langword="true" /> if the specified file is excluded from tracked dependency checking.</span></span></summary>
        <returns>
          <span data-ttu-id="ed185-134"><see langword="true" /> si le fichier est exclu.</span><span class="sxs-lookup"><span data-stu-id="ed185-134"><see langword="true" /> if the file is excluded.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FinalizeTLogs">
      <MemberSignature Language="C#" Value="public static void FinalizeTLogs (bool trackedOperationsSucceeded, Microsoft.Build.Framework.ITaskItem[] readTLogNames, Microsoft.Build.Framework.ITaskItem[] writeTLogNames, Microsoft.Build.Framework.ITaskItem[] trackedFilesToRemoveFromTLogs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void FinalizeTLogs(bool trackedOperationsSucceeded, class Microsoft.Build.Framework.ITaskItem[] readTLogNames, class Microsoft.Build.Framework.ITaskItem[] writeTLogNames, class Microsoft.Build.Framework.ITaskItem[] trackedFilesToRemoveFromTLogs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.FinalizeTLogs(System.Boolean,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub FinalizeTLogs (trackedOperationsSucceeded As Boolean, readTLogNames As ITaskItem(), writeTLogNames As ITaskItem(), trackedFilesToRemoveFromTLogs As ITaskItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void FinalizeTLogs(bool trackedOperationsSucceeded, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ readTLogNames, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ writeTLogNames, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ trackedFilesToRemoveFromTLogs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trackedOperationsSucceeded" Type="System.Boolean" />
        <Parameter Name="readTLogNames" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="writeTLogNames" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="trackedFilesToRemoveFromTLogs" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="trackedOperationsSucceeded"><span data-ttu-id="ed185-135">True indique que les opérations suivies ont réussi.</span><span class="sxs-lookup"><span data-stu-id="ed185-135">True indicates that tracked operations succeeded.</span></span></param>
        <param name="readTLogNames"><span data-ttu-id="ed185-136">TLogs à lire.</span><span class="sxs-lookup"><span data-stu-id="ed185-136">TLogs to be read.</span></span></param>
        <param name="writeTLogNames"><span data-ttu-id="ed185-137">TLogs à écrire.</span><span class="sxs-lookup"><span data-stu-id="ed185-137">TLogs to be written.</span></span></param>
        <param name="trackedFilesToRemoveFromTLogs"><span data-ttu-id="ed185-138">Fichiers faisant l'objet d'un suivi à supprimer de TLogs.</span><span class="sxs-lookup"><span data-stu-id="ed185-138">Tracked files to be removed from TLogs.</span></span></param>
        <summary><span data-ttu-id="ed185-139">Condense et finalise les Tlogs en fonction de la réussite de l'exécution faisant l'objet d'un suivi.</span><span class="sxs-lookup"><span data-stu-id="ed185-139">Compact and finalize the Tlogs based on the success of the tracked execution.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed185-140">Une fois que les opérations de suivi ont été effectuées. nous devons compacter / finaliser les Tlogs selon la réussite de l’exécution du suivi.</span><span class="sxs-lookup"><span data-stu-id="ed185-140">Once tracked operations have been completed then we need to compact / finalize the Tlogs based on the success of the tracked execution.</span></span> <span data-ttu-id="ed185-141">En cas d’échec, puis nous nettoyer les TLogs.</span><span class="sxs-lookup"><span data-stu-id="ed185-141">If it fails, then we clean out the TLogs.</span></span> <span data-ttu-id="ed185-142">Si elle réussit nous nettoyer les fichiers temporaires du TLogs et réécrire les.</span><span class="sxs-lookup"><span data-stu-id="ed185-142">If it succeeds then we clean temporary files from the TLogs and re-write them.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLastWriteTimeUtc">
      <MemberSignature Language="C#" Value="public DateTime GetLastWriteTimeUtc (string file);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.DateTime GetLastWriteTimeUtc(string file) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.GetLastWriteTimeUtc(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLastWriteTimeUtc (file As String) As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DateTime GetLastWriteTimeUtc(System::String ^ file);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="file" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="file"><span data-ttu-id="ed185-143">Nom du fichier.</span><span class="sxs-lookup"><span data-stu-id="ed185-143">Name of the file</span></span></param>
        <summary><span data-ttu-id="ed185-144">Retourne la valeur mise en cache pour l'heure de dernière écriture de fichier.</span><span class="sxs-lookup"><span data-stu-id="ed185-144">Returns cached value for last write time of file.</span></span> <span data-ttu-id="ed185-145">Met à jour le cache à la première vérification du fichier.</span><span class="sxs-lookup"><span data-stu-id="ed185-145">Updates the cache the first            time the file is checked.</span></span></summary>
        <returns><span data-ttu-id="ed185-146">heure de la dernière opération d'écriture du fichier.</span><span class="sxs-lookup"><span data-stu-id="ed185-146">the last write time of the file.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsUpToDate">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ed185-147">Vérifie si les données faisant l'objet d'un suivi indiquent que l'ensemble des éléments est à jour d'après UpToDateCheckType.</span><span class="sxs-lookup"><span data-stu-id="ed185-147">Checks to see if the tracking data indicates that everything is up to date according to UpToDateCheckType.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsUpToDate">
      <MemberSignature Language="C#" Value="public static bool IsUpToDate (Microsoft.Build.Utilities.Task hostTask, Microsoft.Build.Utilities.UpToDateCheckType upToDateCheckType, Microsoft.Build.Framework.ITaskItem[] readTLogNames, Microsoft.Build.Framework.ITaskItem[] writeTLogNames);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpToDate(class Microsoft.Build.Utilities.Task hostTask, valuetype Microsoft.Build.Utilities.UpToDateCheckType upToDateCheckType, class Microsoft.Build.Framework.ITaskItem[] readTLogNames, class Microsoft.Build.Framework.ITaskItem[] writeTLogNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.IsUpToDate(Microsoft.Build.Utilities.Task,Microsoft.Build.Utilities.UpToDateCheckType,Microsoft.Build.Framework.ITaskItem[],Microsoft.Build.Framework.ITaskItem[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpToDate(Microsoft::Build::Utilities::Task ^ hostTask, Microsoft::Build::Utilities::UpToDateCheckType upToDateCheckType, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ readTLogNames, cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ writeTLogNames);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostTask" Type="Microsoft.Build.Utilities.Task" />
        <Parameter Name="upToDateCheckType" Type="Microsoft.Build.Utilities.UpToDateCheckType" />
        <Parameter Name="readTLogNames" Type="Microsoft.Build.Framework.ITaskItem[]" />
        <Parameter Name="writeTLogNames" Type="Microsoft.Build.Framework.ITaskItem[]" />
      </Parameters>
      <Docs>
        <param name="hostTask"><span data-ttu-id="ed185-148">Tâche hôte.</span><span class="sxs-lookup"><span data-stu-id="ed185-148">The host task.</span></span></param>
        <param name="upToDateCheckType"><span data-ttu-id="ed185-149">UpToDateCheckType</span><span class="sxs-lookup"><span data-stu-id="ed185-149">UpToDateCheckType</span></span></param>
        <param name="readTLogNames"><span data-ttu-id="ed185-150">Tableau des tlogs lus</span><span class="sxs-lookup"><span data-stu-id="ed185-150">The array of read tlogs</span></span></param>
        <param name="writeTLogNames"><span data-ttu-id="ed185-151">Tableau des tlogs écrits</span><span class="sxs-lookup"><span data-stu-id="ed185-151">The array of write tlogs</span></span></param>
        <summary><span data-ttu-id="ed185-152">Vérifie si les données faisant l'objet d'un suivi indiquent que l'ensemble des éléments est à jour d'après UpToDateCheckType.</span><span class="sxs-lookup"><span data-stu-id="ed185-152">Checks to see if the tracking data indicates that everything is up to date according to UpToDateCheckType.</span></span></summary>
        <returns><span data-ttu-id="ed185-153">Retourne la valeur True si l'ensemble des éléments est à jour. Dans le cas contraire, retourne la valeur False.</span><span class="sxs-lookup"><span data-stu-id="ed185-153">Returns true if everything is up to date; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed185-154">Si les éléments ne sont pas à jour, les TLogs sont compactés pour supprimer toutes les entrées dans la préparation de nouveau le suivi d’exécution du travail.</span><span class="sxs-lookup"><span data-stu-id="ed185-154">If things are not up to date, then the TLogs are compacted to remove all entries in preparation to re-track execution of work.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUpToDate">
      <MemberSignature Language="C#" Value="public static bool IsUpToDate (Microsoft.Build.Utilities.TaskLoggingHelper Log, Microsoft.Build.Utilities.UpToDateCheckType upToDateCheckType, Microsoft.Build.Utilities.FlatTrackingData inputs, Microsoft.Build.Utilities.FlatTrackingData outputs);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsUpToDate(class Microsoft.Build.Utilities.TaskLoggingHelper Log, valuetype Microsoft.Build.Utilities.UpToDateCheckType upToDateCheckType, class Microsoft.Build.Utilities.FlatTrackingData inputs, class Microsoft.Build.Utilities.FlatTrackingData outputs) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.IsUpToDate(Microsoft.Build.Utilities.TaskLoggingHelper,Microsoft.Build.Utilities.UpToDateCheckType,Microsoft.Build.Utilities.FlatTrackingData,Microsoft.Build.Utilities.FlatTrackingData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsUpToDate(Microsoft::Build::Utilities::TaskLoggingHelper ^ Log, Microsoft::Build::Utilities::UpToDateCheckType upToDateCheckType, Microsoft::Build::Utilities::FlatTrackingData ^ inputs, Microsoft::Build::Utilities::FlatTrackingData ^ outputs);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="Log" Type="Microsoft.Build.Utilities.TaskLoggingHelper" />
        <Parameter Name="upToDateCheckType" Type="Microsoft.Build.Utilities.UpToDateCheckType" />
        <Parameter Name="inputs" Type="Microsoft.Build.Utilities.FlatTrackingData" />
        <Parameter Name="outputs" Type="Microsoft.Build.Utilities.FlatTrackingData" />
      </Parameters>
      <Docs>
        <param name="Log"><span data-ttu-id="ed185-155">TaskLoggingHelper de la tâche hôte</span><span class="sxs-lookup"><span data-stu-id="ed185-155">TaskLoggingHelper from the host task</span></span></param>
        <param name="upToDateCheckType"><span data-ttu-id="ed185-156">UpToDateCheckType à utiliser</span><span class="sxs-lookup"><span data-stu-id="ed185-156">UpToDateCheckType to use</span></span></param>
        <param name="inputs"><span data-ttu-id="ed185-157">Structure FlatTrackingData contenant les entrées</span><span class="sxs-lookup"><span data-stu-id="ed185-157">FlatTrackingData structure containing the inputs</span></span></param>
        <param name="outputs"><span data-ttu-id="ed185-158">Structure FlatTrackingData contenant les sorties</span><span class="sxs-lookup"><span data-stu-id="ed185-158">FlatTrackingData structure containing the outputs</span></span></param>
        <summary><span data-ttu-id="ed185-159">Vérification simple de l'état de mise à jour d'après les données faisant l'objet d'un suivi et de UpToDateCheckType.</span><span class="sxs-lookup"><span data-stu-id="ed185-159">Simple check of up to date state according to the tracking data and the UpToDateCheckType.</span></span></summary>
        <returns><span data-ttu-id="ed185-160">Retourne la valeur True si l'ensemble des éléments est à jour. Dans le cas contraire, retourne la valeur False.</span><span class="sxs-lookup"><span data-stu-id="ed185-160">Returns true if everything is up to date; false otherwise.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ed185-161">Aucun journal de suivi compactage aura lieu lors de l’utilisation de cette surcharge</span><span class="sxs-lookup"><span data-stu-id="ed185-161">No tracking log compaction will take place when using this overload</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MissingFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; MissingFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; MissingFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.MissingFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property MissingFiles As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ MissingFiles { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); void set(System::Collections::Generic::List&lt;System::String ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed185-162">Obtient ou définit les fichiers manquants détectés dans le TLog.</span><span class="sxs-lookup"><span data-stu-id="ed185-162">Gets or sets missing files that have been detected in the TLog</span></span></summary>
        <value><span data-ttu-id="ed185-163">Retourne les fichiers manquants détectés dans le TLog.</span><span class="sxs-lookup"><span data-stu-id="ed185-163">Returns missing files that have been detected in the TLog</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewestFileName">
      <MemberSignature Language="C#" Value="public string NewestFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewestFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.NewestFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property NewestFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewestFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed185-164">Obtient ou définit le chemin d'accès au fichier le plus récent que nous avons trouvé.</span><span class="sxs-lookup"><span data-stu-id="ed185-164">Gets or sets the path for the newest file we have seen.</span></span></summary>
        <value><span data-ttu-id="ed185-165">Retourne le chemin d'accès au fichier le plus récent que nous avons trouvé.</span><span class="sxs-lookup"><span data-stu-id="ed185-165">Returns the path for the newest file we have seen.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewestFileTime">
      <MemberSignature Language="C#" Value="public DateTime NewestFileTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NewestFileTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.NewestFileTime" />
      <MemberSignature Language="VB.NET" Value="Public Property NewestFileTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NewestFileTime { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed185-166">Obtient ou définit l'heure du fichier le plus récent que nous avons trouvé.</span><span class="sxs-lookup"><span data-stu-id="ed185-166">Gets or sets the time for the newest file we have seen</span></span></summary>
        <value><span data-ttu-id="ed185-167">Retourne l'heure du fichier le plus récent que nous avons trouvé.</span><span class="sxs-lookup"><span data-stu-id="ed185-167">Returns the time for the newest file we have seen.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewestFileTimeUtc">
      <MemberSignature Language="C#" Value="public DateTime NewestFileTimeUtc { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NewestFileTimeUtc" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.NewestFileTimeUtc" />
      <MemberSignature Language="VB.NET" Value="Public Property NewestFileTimeUtc As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NewestFileTimeUtc { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed185-168">Obtient ou définit l'heure UTC du fichier le plus récent que nous avons trouvé.</span><span class="sxs-lookup"><span data-stu-id="ed185-168">Gets or sets the UTC time for the newest file we have seen.</span></span></summary>
        <value><span data-ttu-id="ed185-169">Retourne l'heure UTC du fichier le plus récent que nous avons trouvé.</span><span class="sxs-lookup"><span data-stu-id="ed185-169">Returns the UTC time for the newest file we have seen.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewestTLogFileName">
      <MemberSignature Language="C#" Value="public string NewestTLogFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewestTLogFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.NewestTLogFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property NewestTLogFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NewestTLogFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed185-170">Obtient ou définit le chemin d'accès au fichier TLog le plus récent.</span><span class="sxs-lookup"><span data-stu-id="ed185-170">Gets or sets the path of the newest TLog file.</span></span></summary>
        <value><span data-ttu-id="ed185-171">Retourne le chemin d'accès au fichier TLog le plus récent.</span><span class="sxs-lookup"><span data-stu-id="ed185-171">Returns the path of the newest TLog file.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewestTLogTime">
      <MemberSignature Language="C#" Value="public DateTime NewestTLogTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NewestTLogTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTime" />
      <MemberSignature Language="VB.NET" Value="Public Property NewestTLogTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NewestTLogTime { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed185-172">Obtient ou définit l'heure du Tlog le plus récent.</span><span class="sxs-lookup"><span data-stu-id="ed185-172">Gets or sets the time of the newest Tlog.</span></span></summary>
        <value><span data-ttu-id="ed185-173">Retourne l'heure du Tlog le plus récent.</span><span class="sxs-lookup"><span data-stu-id="ed185-173">Returns the time of the newest Tlog.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewestTLogTimeUtc">
      <MemberSignature Language="C#" Value="public DateTime NewestTLogTimeUtc { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime NewestTLogTimeUtc" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.NewestTLogTimeUtc" />
      <MemberSignature Language="VB.NET" Value="Public Property NewestTLogTimeUtc As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime NewestTLogTimeUtc { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed185-174">Obtient ou définit l'heure UTC du Tlog le plus récent.</span><span class="sxs-lookup"><span data-stu-id="ed185-174">Gets or sets the UTC time of the newest Tlog.</span></span></summary>
        <value><span data-ttu-id="ed185-175">Retourne l'heure du Tlog le plus récent.</span><span class="sxs-lookup"><span data-stu-id="ed185-175">Returns the time of the newest Tlog.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OldestFileName">
      <MemberSignature Language="C#" Value="public string OldestFileName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldestFileName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.OldestFileName" />
      <MemberSignature Language="VB.NET" Value="Public Property OldestFileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldestFileName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed185-176">Obtient ou définit le chemin d'accès au fichier le plus ancien que nous avons trouvé.</span><span class="sxs-lookup"><span data-stu-id="ed185-176">Gets or sets the path for the oldest file we have seen.</span></span></summary>
        <value><span data-ttu-id="ed185-177">Retourne le chemin d'accès au fichier le plus ancien que nous avons trouvé.</span><span class="sxs-lookup"><span data-stu-id="ed185-177">Returns the path for the oldest file we have seen.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OldestFileTime">
      <MemberSignature Language="C#" Value="public DateTime OldestFileTime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime OldestFileTime" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.OldestFileTime" />
      <MemberSignature Language="VB.NET" Value="Public Property OldestFileTime As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime OldestFileTime { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed185-178">Obtient ou définit l'heure du fichier le plus ancien que nous avons trouvé.</span><span class="sxs-lookup"><span data-stu-id="ed185-178">Gets or sets the time for the oldest file we have seen.</span></span></summary>
        <value><span data-ttu-id="ed185-179">Retourne l'heure du fichier le plus ancien que nous avons trouvé.</span><span class="sxs-lookup"><span data-stu-id="ed185-179">Returns the time for the oldest file we have seen.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OldestFileTimeUtc">
      <MemberSignature Language="C#" Value="public DateTime OldestFileTimeUtc { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime OldestFileTimeUtc" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.OldestFileTimeUtc" />
      <MemberSignature Language="VB.NET" Value="Public Property OldestFileTimeUtc As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime OldestFileTimeUtc { DateTime get(); void set(DateTime value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed185-180">Obtient ou définit l'heure UTC du fichier le plus ancien que nous avons trouvé.</span><span class="sxs-lookup"><span data-stu-id="ed185-180">Gets or sets the UTC time for the oldest file we have seen.</span></span></summary>
        <value><span data-ttu-id="ed185-181">Retourne l'heure UTC du fichier le plus ancien que nous avons trouvé.</span><span class="sxs-lookup"><span data-stu-id="ed185-181">Returns the UTC time for the oldest file we have seen.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SaveTlog">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ed185-182">Cette méthode réécrit les tlogs à partir de la table des sorties.</span><span class="sxs-lookup"><span data-stu-id="ed185-182">This method re-writes the tlogs from the output table.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SaveTlog">
      <MemberSignature Language="C#" Value="public void SaveTlog ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveTlog() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.SaveTlog" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveTlog ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveTlog();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ed185-183">Cette méthode réécrira les tlogs à partir de la table des sorties.</span><span class="sxs-lookup"><span data-stu-id="ed185-183">This method will re-write the tlogs from the output table.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveTlog">
      <MemberSignature Language="C#" Value="public void SaveTlog (Microsoft.Build.Utilities.DependencyFilter includeInTLog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveTlog(class Microsoft.Build.Utilities.DependencyFilter includeInTLog) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.SaveTlog(Microsoft.Build.Utilities.DependencyFilter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveTlog (includeInTLog As DependencyFilter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveTlog(Microsoft::Build::Utilities::DependencyFilter ^ includeInTLog);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="includeInTLog" Type="Microsoft.Build.Utilities.DependencyFilter" />
      </Parameters>
      <Docs>
        <param name="includeInTLog"><span data-ttu-id="ed185-184">Filtre de dépendance.</span><span class="sxs-lookup"><span data-stu-id="ed185-184">The dependency filter.</span></span></param>
        <summary><span data-ttu-id="ed185-185">Cette méthode réécrira les tlogs à partir de la table actuelle.</span><span class="sxs-lookup"><span data-stu-id="ed185-185">This method will re-write the tlogs from the current table</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipMissingFiles">
      <MemberSignature Language="C#" Value="public bool SkipMissingFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipMissingFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.SkipMissingFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipMissingFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SkipMissingFiles { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed185-186">Obtient ou définit un commutateur qui spécifie si les fichiers présents dans le TLog, mais qui n'existent plus, doivent être ignorés ou enregistrés.</span><span class="sxs-lookup"><span data-stu-id="ed185-186">Gets or sets a switch that specifies whether files in the TLog, but which no longer exist, be skipped or recorded.</span></span></summary>
        <value><span data-ttu-id="ed185-187">Retourne le commutateur qui spécifie si les fichiers présents dans le TLog, mais qui n'existent plus, doivent être ignorés ou enregistrés.</span><span class="sxs-lookup"><span data-stu-id="ed185-187">Returns the switch that specifies whether files in the TLog, but which no longer exist, be skipped or recorded.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TlogFiles">
      <MemberSignature Language="C#" Value="public Microsoft.Build.Framework.ITaskItem[] TlogFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Build.Framework.ITaskItem[] TlogFiles" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.TlogFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property TlogFiles As ITaskItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ TlogFiles { cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ get(); void set(cli::array &lt;Microsoft::Build::Framework::ITaskItem ^&gt; ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Build.Framework.ITaskItem[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed185-188">Obtient ou définit les fichiers TLog qui soutiennent cette structure.</span><span class="sxs-lookup"><span data-stu-id="ed185-188">Gets or sets the TLog files that back this structure.</span></span></summary>
        <value><span data-ttu-id="ed185-189">Retourne les fichiers TLog qui soutiennent cette structure.</span><span class="sxs-lookup"><span data-stu-id="ed185-189">Returns the TLog files that back this structure.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TlogsAvailable">
      <MemberSignature Language="C#" Value="public bool TlogsAvailable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TlogsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.TlogsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Property TlogsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TlogsAvailable { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed185-190">Obtient ou définit un commutateur qui spécifie si tous les TLogs qui nous ont été passés doivent être disponibles sur le disque.</span><span class="sxs-lookup"><span data-stu-id="ed185-190">Gets or sets a switch that specifies whether all the TLogs that were passed to us are available on disk.</span></span></summary>
        <value><span data-ttu-id="ed185-191">Retourne un commutateur qui spécifie si tous les TLogs qui nous ont été passés doivent être disponibles sur le disque.</span><span class="sxs-lookup"><span data-stu-id="ed185-191">Returns a switch that specifies whether all the TLogs that were passed to us are available on disk.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TreatRootMarkersAsEntries">
      <MemberSignature Language="C#" Value="public bool TreatRootMarkersAsEntries { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TreatRootMarkersAsEntries" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Build.Utilities.FlatTrackingData.TreatRootMarkersAsEntries" />
      <MemberSignature Language="VB.NET" Value="Public Property TreatRootMarkersAsEntries As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TreatRootMarkersAsEntries { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="ed185-192">Obtient ou définit un commutateur qui spécifie si les marqueurs racine du TLog doivent être traités comme des accès au fichier ou uniquement comme des marqueurs.</span><span class="sxs-lookup"><span data-stu-id="ed185-192">Gets or sets a switch that specifies whether root markers in the TLog be treated as file accesses, or only as markers.</span></span></summary>
        <value><span data-ttu-id="ed185-193">Retourne un commutateur qui spécifie si les marqueurs racine du TLog doivent être traités comme des accès au fichier ou uniquement comme des marqueurs.</span><span class="sxs-lookup"><span data-stu-id="ed185-193">Returns a switch that specifies whether root markers in the TLog be treated as file accesses, or only as markers.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateFileEntryDetails">
      <MemberSignature Language="C#" Value="public void UpdateFileEntryDetails ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateFileEntryDetails() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Utilities.FlatTrackingData.UpdateFileEntryDetails" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateFileEntryDetails ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateFileEntryDetails();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build.Utilities.v4.0</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ed185-194">Met à jour l'état actuel des détails des entrées pour la table de dépendances</span><span class="sxs-lookup"><span data-stu-id="ed185-194">Update the current state of entry details for the dependency table</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>