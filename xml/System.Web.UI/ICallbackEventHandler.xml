<Type Name="ICallbackEventHandler" FullName="System.Web.UI.ICallbackEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9fd0e63154b3f5a2354970a96bf74345816e7be7" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51901511" /></Metadata><TypeSignature Language="C#" Value="public interface ICallbackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICallbackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ICallbackEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICallbackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICallbackEventHandler" />
  <TypeSignature Language="F#" Value="type ICallbackEventHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0d7bc-101">Utilisé pour indiquer qu'un contrôle peut être la cible d'un événement de rappel sur le serveur.</span><span class="sxs-lookup"><span data-stu-id="0d7bc-101">Used to indicate that a control can be the target of a callback event on the server.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d7bc-102">Implémentez le <xref:System.Web.UI.ICallbackEventHandler> interface pour n’importe quel contrôle personnalisé qui doit recevoir les événements de rappel.</span><span class="sxs-lookup"><span data-stu-id="0d7bc-102">Implement the <xref:System.Web.UI.ICallbackEventHandler> interface for any custom control that needs to receive callback events.</span></span> <span data-ttu-id="0d7bc-103">Pour plus d’informations, consultez [implémentant les rappels de Client sans Postbacks](https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span><span class="sxs-lookup"><span data-stu-id="0d7bc-103">For more information, see [Implementing Client Callbacks Without Postbacks](https://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
 <span data-ttu-id="0d7bc-104">Exemples de contrôles qui implémentent le <xref:System.Web.UI.ICallbackEventHandler> interface inclut la <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, et <xref:System.Web.UI.WebControls.TreeView> contrôles.</span><span class="sxs-lookup"><span data-stu-id="0d7bc-104">Examples of controls that implement the <xref:System.Web.UI.ICallbackEventHandler> interface include the <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.TreeView> controls.</span></span> <span data-ttu-id="0d7bc-105">Quand un événement de rappel cible un contrôle qui implémente le <xref:System.Web.UI.ICallbackEventHandler> interface, le <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> méthode est appelée pour gérer l’événement, en passant l’argument d’événement en tant que paramètre et le <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> méthode retourne le résultat du rappel.</span><span class="sxs-lookup"><span data-stu-id="0d7bc-105">When a callback event targets a control that implements the <xref:System.Web.UI.ICallbackEventHandler> interface, the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is called to handle the event, passing the event argument as a parameter and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the result of the callback.</span></span>  
  
 <span data-ttu-id="0d7bc-106">Les contrôles qui extraient des données à partir d’un contrôle de source de données pendant le rappel pour ce faire de manière synchrone ou asynchrone.</span><span class="sxs-lookup"><span data-stu-id="0d7bc-106">Controls that retrieve data from a data source control during callback can do so synchronously or asynchronously.</span></span> <span data-ttu-id="0d7bc-107">Les contrôles ASP.NET comme <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, et <xref:System.Web.UI.WebControls.TreeView> sont implémentés de façon synchrone.</span><span class="sxs-lookup"><span data-stu-id="0d7bc-107">ASP.NET controls like <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.TreeView> are implemented synchronously.</span></span> <span data-ttu-id="0d7bc-108">Les rappels synchrones n’empêchent pas l’utilisateur à partir de l’utilisation de l’Explorateur.</span><span class="sxs-lookup"><span data-stu-id="0d7bc-108">Synchronous callbacks do not prevent the user from working in the browser.</span></span> <span data-ttu-id="0d7bc-109">En mode synchrone, un seul rappel à la fois peut s’exécuter, avec le dernier rappel étant prioritaires.</span><span class="sxs-lookup"><span data-stu-id="0d7bc-109">In synchronous mode, only one callback at a time can execute, with the last callback taking precedence.</span></span> <span data-ttu-id="0d7bc-110">Lorsqu’un contrôle Web est implémenté pour prendre en charge le comportement asynchrone, plusieurs rappels peuvent être déclenchés simultanément.</span><span class="sxs-lookup"><span data-stu-id="0d7bc-110">When a Web control is implemented to support asynchronous behavior, multiple callbacks can be raised simultaneously.</span></span> <span data-ttu-id="0d7bc-111">Pour plus d’informations sur la programmation asynchrone, consultez [modèle asynchrone basé sur des événements (EAP)](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md).</span><span class="sxs-lookup"><span data-stu-id="0d7bc-111">For details on asynchronous programming, see [Event-based Asynchronous Pattern (EAP)](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md).</span></span>  
  
 <span data-ttu-id="0d7bc-112">Vous pouvez spécifier si les événements de rappel provenant de l’interface utilisateur restituée à un contrôle qui implémente le <xref:System.Web.UI.ICallbackEventHandler> interface sont validés.</span><span class="sxs-lookup"><span data-stu-id="0d7bc-112">You can specify whether callback events originating from the user interface rendered by a control implementing the <xref:System.Web.UI.ICallbackEventHandler> interface are validated.</span></span> <span data-ttu-id="0d7bc-113">La validation d’événements est une bonne pratique de sécurité.</span><span class="sxs-lookup"><span data-stu-id="0d7bc-113">Validation of events is a good security practice.</span></span> <span data-ttu-id="0d7bc-114">Toutefois, pour des raisons de performances vous pouvez la désactiver.</span><span class="sxs-lookup"><span data-stu-id="0d7bc-114">However, for performance reasons you can disable it.</span></span> <span data-ttu-id="0d7bc-115">Pour contrôler si la validation d’événement est effectuée sur les événements de rappel, définissez le `enableEventValidation` attribut de la [@ Page](https://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) directive ou `enableEventValidation` attribut de la [pages, élément (schéma des paramètres ASP.NET)](https://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) du fichier Web.config.</span><span class="sxs-lookup"><span data-stu-id="0d7bc-115">To control whether event validation is performed on callback events, set the `enableEventValidation` attribute of the [@ Page](https://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) directive or the `enableEventValidation` attribute of the [pages Element (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) of the Web.config file.</span></span> <span data-ttu-id="0d7bc-116">Si vous définissez la <xref:System.Web.UI.Page.EnableEventValidation%2A> propriété dans le code, définissez-le dans le `Page_Init` phase du traitement des pages.</span><span class="sxs-lookup"><span data-stu-id="0d7bc-116">If you set the <xref:System.Web.UI.Page.EnableEventValidation%2A> property in code, set it in the `Page_Init` phase of page processing.</span></span> <span data-ttu-id="0d7bc-117">Pour plus d’informations sur l’équilibrage de l’avantage de la sécurité de la validation d’événement et de ses performances, consultez [vue d’ensemble des performances ASP.NET](https://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b).</span><span class="sxs-lookup"><span data-stu-id="0d7bc-117">For more information on balancing the security benefit of event validation with its performance cost, see [ASP.NET Performance Overview](https://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
    <altmember cref="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
  </Docs>
  <Members>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="public string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackResult();" />
      <MemberSignature Language="F#" Value="abstract member GetCallbackResult : unit -&gt; string" Usage="iCallbackEventHandler.GetCallbackResult " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="0d7bc-118">Retourne le résultat d'un événement de rappel qui cible un contrôle.</span><span class="sxs-lookup"><span data-stu-id="0d7bc-118">Returns the results of a callback event that targets a control.</span></span></summary>
        <returns><span data-ttu-id="0d7bc-119">Résultat de l'événement de rappel.</span><span class="sxs-lookup"><span data-stu-id="0d7bc-119">The result of the callback.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d7bc-120">Les exceptions levées <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> n’empêchera pas <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> d’être appelé et de retourner un résultat.</span><span class="sxs-lookup"><span data-stu-id="0d7bc-120">Exceptions thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> will not prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from being called and returning a result.</span></span> <span data-ttu-id="0d7bc-121">Pour empêcher <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> de retourner un résultat, définir un indicateur lorsqu’une exception est levée <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> et renvoyer une chaîne vide à partir de <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span><span class="sxs-lookup"><span data-stu-id="0d7bc-121">To prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from returning a result, set a flag when an exception is thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> and return an empty string from <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="public void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaiseCallbackEvent : string -&gt; unit" Usage="iCallbackEventHandler.RaiseCallbackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument"><span data-ttu-id="0d7bc-122">Chaîne qui représente un argument d'événement à passer au gestionnaire d'événements.</span><span class="sxs-lookup"><span data-stu-id="0d7bc-122">A string that represents an event argument to pass to the event handler.</span></span></param>
        <summary><span data-ttu-id="0d7bc-123">Traite un événement de rappel qui cible un contrôle.</span><span class="sxs-lookup"><span data-stu-id="0d7bc-123">Processes a callback event that targets a control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0d7bc-124">Lorsque `null` est utilisé comme paramètre argument d’événement, la chaîne est sérialisée en arrière-plan « null » et envoyé au serveur.</span><span class="sxs-lookup"><span data-stu-id="0d7bc-124">When `null` is used as the event argument parameter, the string is serialized to "null" and sent back to the server.</span></span> <span data-ttu-id="0d7bc-125">Car il n’existe aucun moyen de faire la distinction entre `null` et « null », vous devez éviter d’utiliser `null` paramètres argument avec des rappels.</span><span class="sxs-lookup"><span data-stu-id="0d7bc-125">Because there is no way to distinguish between `null` and "null", you should avoid using `null` argument parameters with callbacks.</span></span>  
  
 <span data-ttu-id="0d7bc-126">Les exceptions levées <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> n’empêchera pas <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> d’être appelé et de retourner un résultat.</span><span class="sxs-lookup"><span data-stu-id="0d7bc-126">Exceptions thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> will not prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from being called and returning a result.</span></span> <span data-ttu-id="0d7bc-127">Pour empêcher <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> de retourner un résultat, définir un indicateur lorsqu’une exception est levée <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> et renvoyer une chaîne vide à partir de <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span><span class="sxs-lookup"><span data-stu-id="0d7bc-127">To prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from returning a result, set a flag when an exception is thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> and return an empty string from <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      </Docs>
    </Member>
  </Members>
</Type>