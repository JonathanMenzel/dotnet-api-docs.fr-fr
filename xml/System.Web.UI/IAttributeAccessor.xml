<Type Name="IAttributeAccessor" FullName="System.Web.UI.IAttributeAccessor">
  <TypeSignature Language="C#" Value="public interface IAttributeAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAttributeAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAttributeAccessor" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAttributeAccessor" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="0eeef-101">Définit les méthodes utilisées par les contrôles serveur ASP.NET pour fournir l'accès par programmation à tout attribut défini dans la balise d'ouverture d'un contrôle serveur.</span><span class="sxs-lookup"><span data-stu-id="0eeef-101">Defines methods used by ASP.NET server controls to provide programmatic access to any attribute declared in the opening tag of a server control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0eeef-102">Si vous créez un contrôle serveur personnalisé qui hérite de la <xref:System.Web.UI.WebControls.WebControl>, <xref:System.Web.UI.HtmlControls.HtmlControl>, ou <xref:System.Web.UI.WebControls.ListItem> (classe), le .NET Framework fournit les accès par programme aux attributs d’automatiquement, car chacun de ces classes implémentent la <xref:System.Web.UI.IAttributeAccessor> interface.</span><span class="sxs-lookup"><span data-stu-id="0eeef-102">If you author a custom server control that inherits from the <xref:System.Web.UI.WebControls.WebControl>, <xref:System.Web.UI.HtmlControls.HtmlControl>, or <xref:System.Web.UI.WebControls.ListItem> class, the .NET Framework automatically provides programmatic access to attributes because each of these classes implement the <xref:System.Web.UI.IAttributeAccessor> interface.</span></span>  
  
 <span data-ttu-id="0eeef-103">Si vous créez un contrôle serveur personnalisé qui ne pas hériter d’une de ces classes et prévoyez d’autoriser l’accès par programme aux attributs qui ne correspondent pas aux propriétés fortement typées du contrôle, veillez à implémenter le <xref:System.Web.UI.IAttributeAccessor> interface.</span><span class="sxs-lookup"><span data-stu-id="0eeef-103">If you author a custom server control that does not inherit from one of these classes and plan to allow programmatic access to attributes that do not correspond with the control's strongly typed properties, be sure to implement the <xref:System.Web.UI.IAttributeAccessor> interface.</span></span>  
  
   
  
## Examples  
 [!code-csharp[IAttributeAccessor_Sample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/IAttributeAccessor_Sample/CS/iattributeaccessor.cs#1)]
 [!code-vb[IAttributeAccessor_Sample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/IAttributeAccessor_Sample/VB/iattributeaccessor.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlControl" />
    <altmember cref="T:System.Web.UI.WebControls.WebControl" />
  </Docs>
  <Members>
    <Member MemberName="GetAttribute">
      <MemberSignature Language="C#" Value="public string GetAttribute (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetAttribute(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IAttributeAccessor.GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttribute (key As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetAttribute(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="0eeef-104"><see cref="T:System.String" /> qui représente le nom de l'attribut du contrôle serveur.</span><span class="sxs-lookup"><span data-stu-id="0eeef-104">A <see cref="T:System.String" /> that represents the name of the server control attribute.</span></span></param>
        <summary><span data-ttu-id="0eeef-105">Implémenté par une classe, récupère du contrôle serveur la propriété de l'attribut spécifié.</span><span class="sxs-lookup"><span data-stu-id="0eeef-105">When implemented by a class, retrieves the specified attribute property from the server control.</span></span></summary>
        <returns><span data-ttu-id="0eeef-106">Valeur de l'attribut spécifié.</span><span class="sxs-lookup"><span data-stu-id="0eeef-106">The value of the specified attribute.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0eeef-107">L’exemple de code suivant illustre une implémentation de la <xref:System.Web.UI.IAttributeAccessor.GetAttribute%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0eeef-107">The following code example demonstrates an implementation of the <xref:System.Web.UI.IAttributeAccessor.GetAttribute%2A> method.</span></span>  
  
 [!code-csharp[IAttributeAccessor_Sample#3](~/samples/snippets/csharp/VS_Snippets_WebNet/IAttributeAccessor_Sample/CS/iattributeaccessor.cs#3)]
 [!code-vb[IAttributeAccessor_Sample#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/IAttributeAccessor_Sample/VB/iattributeaccessor.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetAttribute">
      <MemberSignature Language="C#" Value="public void SetAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IAttributeAccessor.SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetAttribute (key As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetAttribute(System::String ^ key, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="0eeef-108">Nom de l'attribut à définir.</span><span class="sxs-lookup"><span data-stu-id="0eeef-108">The name of the attribute to be set.</span></span></param>
        <param name="value"><span data-ttu-id="0eeef-109">Valeur à affecter à l’attribut.</span><span class="sxs-lookup"><span data-stu-id="0eeef-109">The value assigned to the attribute.</span></span></param>
        <summary><span data-ttu-id="0eeef-110">Implémenté par une classe, désigne un attribut et sa valeur à assigner au contrôle serveur ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="0eeef-110">When implemented by a class, designates an attribute and its value to assign to the ASP.NET server control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="0eeef-111">L’exemple de code suivant illustre une implémentation possible du <xref:System.Web.UI.IAttributeAccessor.SetAttribute%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="0eeef-111">The following code example demonstrates a possible implementation of the <xref:System.Web.UI.IAttributeAccessor.SetAttribute%2A> method.</span></span>  
  
 [!code-csharp[IAttributeAccessor_Sample#2](~/samples/snippets/csharp/VS_Snippets_WebNet/IAttributeAccessor_Sample/CS/iattributeaccessor.cs#2)]
 [!code-vb[IAttributeAccessor_Sample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/IAttributeAccessor_Sample/VB/iattributeaccessor.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>