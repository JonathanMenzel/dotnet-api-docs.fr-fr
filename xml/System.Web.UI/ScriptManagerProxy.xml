<Type Name="ScriptManagerProxy" FullName="System.Web.UI.ScriptManagerProxy">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="72fdb922c193fe4a9e0157bd73cf0b6d38391b04" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30609293" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ScriptManagerProxy : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ScriptManagerProxy extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ScriptManagerProxy" />
  <TypeSignature Language="VB.NET" Value="Public Class ScriptManagerProxy&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class ScriptManagerProxy : System::Web::UI::Control" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Scripts")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.ScriptManagerProxyDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), "System.Web.Resources.ScriptManagerProxy.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Permet aux composants imbriqués, tels que les pages de contenu et les  contrôles utilisateur, d'ajouter du script et des références de services aux pages lorsqu'un contrôle <see cref="T:System.Web.UI.ScriptManager" /> est déjà défini dans un élément parent.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans cette rubrique :  
  
-   [Introduction](#introduction)  
  
-   [Syntaxe déclarative](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introduction  
 Une page Web peut contenir un seul <xref:System.Web.UI.ScriptManager> contrôler, soit directement sur la page, soit indirectement à l’intérieur d’une liste imbriquée ou parent composant. Le <xref:System.Web.UI.ScriptManagerProxy> contrôle vous permet d’ajouter des scripts et des services aux pages de contenu et aux contrôles utilisateur si la page maître ou la page hôte contient déjà un <xref:System.Web.UI.ScriptManager> contrôle.  
  
 Lorsque vous utilisez la <xref:System.Web.UI.ScriptManagerProxy> (contrôle), vous pouvez ajouter à des collections de script et de service définies par le <xref:System.Web.UI.ScriptManager> contrôle. Si vous ne souhaitez pas inclure des scripts spécifiques et des services sur chaque page qui inclut un particulier <xref:System.Web.UI.ScriptManager> (contrôle), vous pouvez les supprimer à partir de la <xref:System.Web.UI.ScriptManager> contrôle. Vous pouvez puis ajoutez-les à des pages individuelles à l’aide de la <xref:System.Web.UI.ScriptManagerProxy> contrôler à la place.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Syntaxe déclarative  
  
```  
<asp:ScriptManagerProxy  
    AuthenticationService-Path="uri"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    ProfileService-LoadProperties="string"  
    ProfileService-Path="uri"  
    RoleService-LoadRoles="True|False"  
    RoleService-Path="uri"  
    runat="server"  
    SkinID="string"  
    Visible="True|False"  
>  
        <AuthenticationService  
            Path="uri"  
        />  
        <ProfileService  
            LoadProperties="string"  
            Path="uri"  
        />  
        <RoleService  
            LoadRoles="True|False"  
            Path="uri"  
        />  
        <Scripts>  
            <asp:ScriptReference  
                Assembly="string"  
                IgnoreScriptPath="True|False"  
                Name="string"  
                NotifyScriptLoaded="True|False"  
                Path="string"  
                ResourceUICultures="string"  
                ScriptMode="Auto|Debug|Inherit|Release"  
            />  
        </Scripts>  
        <Services>  
            <asp:ServiceReference  
                InlineScript="True|False"  
                Path="string"  
            />  
        </Services>  
</asp:ScriptManagerProxy>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ScriptManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ScriptManagerProxy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManagerProxy.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ScriptManagerProxy();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.ScriptManagerProxy" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une page contenant un <xref:System.Web.UI.ScriptManagerProxy> contrôle doit également contenir un valide <xref:System.Web.UI.ScriptManager> contrôle. Par exemple, si vous placez un <xref:System.Web.UI.ScriptManagerProxy> contrôle sur une page de contenu, la page doit faire référence à une page maître qui contient un <xref:System.Web.UI.ScriptManager> contrôle.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Il n'existe aucun <see cref="T:System.Web.UI.ScriptManager" /> précédent pour la page active.  
  
 \- ou -  
  
 La page active est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AuthenticationService">
      <MemberSignature Language="C#" Value="public System.Web.UI.AuthenticationServiceManager AuthenticationService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.AuthenticationServiceManager AuthenticationService" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManagerProxy.AuthenticationService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AuthenticationService As AuthenticationServiceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AuthenticationServiceManager ^ AuthenticationService { System::Web::UI::AuthenticationServiceManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AuthenticationServiceManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'objet <see cref="T:System.Web.UI.AuthenticationServiceManager" /> associé à l'instance <see cref="T:System.Web.UI.ScriptManagerProxy" /> actuelle.</summary>
        <value>Objet <see cref="T:System.Web.UI.AuthenticationServiceManager" /> pour l'instance <see cref="T:System.Web.UI.ScriptManagerProxy" /> actuelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.AuthenticationServiceManager> objet qui est retourné par cette propriété représente le service d’authentification qui est inscrit avec la page.  
  
 Vous pouvez utiliser le service d’authentification ASP.NET ou un service d’authentification personnalisé. Pour utiliser un service personnalisé, vous pouvez l’enregistrer en incluant un `AuthenticationService` élément à l’intérieur du `ScriptManagerProxy` élément sur la page. Vous pouvez également configurer par programme le <xref:System.Web.UI.AuthenticationServiceManager> objet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CompositeScript">
      <MemberSignature Language="C#" Value="public System.Web.UI.CompositeScriptReference CompositeScript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.CompositeScriptReference CompositeScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManagerProxy.CompositeScript" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompositeScript As CompositeScriptReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::CompositeScriptReference ^ CompositeScript { System::Web::UI::CompositeScriptReference ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.CompositeScriptReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une référence au script composite qui prend en charge la page de contenu.</summary>
        <value>Référence au script composite.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.HistoryEventArgs&gt; Navigate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.HistoryEventArgs&gt; Navigate" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.ScriptManagerProxy.Navigate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigate As EventHandler(Of HistoryEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::HistoryEventArgs ^&gt; ^ Navigate;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.HistoryEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit quand l’utilisateur clique sur le bouton **Précédent** ou **Suivant** du navigateur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsqu’un utilisateur clique du navigateur **précédent** bouton, le navigateur parcourt les URL précédemment consultées, ce qui peuvent inclure des URL qui contiennent des données d’état de point d’historique. Si le code client dans la page Web détecte que l’URL contient des données d’état de l’historique, il effectue une demande à la page du serveur. Sous la forme d’un événement de publication et le <xref:System.Web.UI.ScriptManagerProxy> contrôle serveur déclenche la `Navigate` événement. Vous pouvez gérer cet événement et recréer la page selon les besoins de l’application Web en utilisant les données d’état qui sont passées à l’événement.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ScriptManagerProxy.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.Control.Init" /> de base et enregistre le contrôle <see cref="T:System.Web.UI.ScriptManagerProxy" /> avec le contrôle <see cref="T:System.Web.UI.ScriptManager" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProfileService">
      <MemberSignature Language="C#" Value="public System.Web.UI.ProfileServiceManager ProfileService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ProfileServiceManager ProfileService" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManagerProxy.ProfileService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProfileService As ProfileServiceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ProfileServiceManager ^ ProfileService { System::Web::UI::ProfileServiceManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ProfileServiceManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'objet <see cref="T:System.Web.UI.ProfileServiceManager" /> associé à l'instance <see cref="T:System.Web.UI.ScriptManagerProxy" /> actuelle.</summary>
        <value>Objet <see cref="T:System.Web.UI.ProfileServiceManager" /> pour l'instance <see cref="T:System.Web.UI.ScriptManagerProxy" /> actuelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.ProfileServiceManager> objet qui est retourné par cette propriété représente le service de profil est enregistré avec la page.  
  
 Vous pouvez utiliser le service de profil ASP.NET ou utiliser un service de profil personnalisé. Pour utiliser un service personnalisé, vous pouvez l’enregistrer en incluant un `ProfileService` élément à l’intérieur du `ScriptManagerProxy` élément sur la page. Vous pouvez également configurer par programme le <xref:System.Web.UI.ProfileServiceManager> objet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RoleService">
      <MemberSignature Language="C#" Value="public System.Web.UI.RoleServiceManager RoleService { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.RoleServiceManager RoleService" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManagerProxy.RoleService" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RoleService As RoleServiceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::RoleServiceManager ^ RoleService { System::Web::UI::RoleServiceManager ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.RoleServiceManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'objet <see cref="T:System.Web.UI.RoleServiceManager" /> associé à l'instance <see cref="T:System.Web.UI.ScriptManagerProxy" /> actuelle.</summary>
        <value>Objet <see cref="T:System.Web.UI.RoleServiceManager" /> pour l'instance <see cref="T:System.Web.UI.ScriptManagerProxy" /> actuelle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.RoleServiceManager> objet qui est retourné par cette propriété représente le service de rôle qui est inscrit avec la page.  
  
 Vous pouvez utiliser le service de rôle ASP.NET ou utiliser un service de rôle personnalisé. Pour utiliser un service personnalisé, vous pouvez l’enregistrer en incluant un `RoleService` élément à l’intérieur du `ScriptManagerProxy` élément sur la page. Vous pouvez également configurer par programme le <xref:System.Web.UI.RoleServiceManager> objet.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.RoleServiceManager" />
      </Docs>
    </Member>
    <Member MemberName="Scripts">
      <MemberSignature Language="C#" Value="public System.Web.UI.ScriptReferenceCollection Scripts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ScriptReferenceCollection Scripts" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManagerProxy.Scripts" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Scripts As ScriptReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ScriptReferenceCollection ^ Scripts { System::Web::UI::ScriptReferenceCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.CollectionEditorBase, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ScriptReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet <see cref="T:System.Web.UI.ScriptReferenceCollection" /> qui contient un objet <see cref="T:System.Web.UI.ScriptReference" /> pour chaque fichier de script enregistré explicitement avec le contrôle <see cref="T:System.Web.UI.ScriptManagerProxy" />.</summary>
        <value>Collection d'objets <see cref="T:System.Web.UI.ScriptReference" /> de chaque fichier de script envoyé par le contrôle <see cref="T:System.Web.UI.ScriptManagerProxy" /> au navigateur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.ScriptManagerProxy.Scripts%2A> collection vous permet d’ajouter des références de script à tous les scripts qui sont déjà enregistrés avec le <xref:System.Web.UI.ScriptManager> contrôle.  
  
 Vous pouvez ajouter des références de script à la <xref:System.Web.UI.ScriptManagerProxy.Scripts%2A> collection de façon déclarative à l’aide de la `ScriptReference` élément. Vous pouvez ajouter des références de script par programme en ajoutant <xref:System.Web.UI.ScriptReference> des objets sur le <xref:System.Web.UI.ScriptManagerProxy.Scripts%2A> collection.  
  
 Si un script est déjà inscrit avec le <xref:System.Web.UI.ScriptManagerProxy> ou <xref:System.Web.UI.ScriptManager> (contrôle), le script n’est pas inscrit à nouveau.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ScriptManager.Scripts" />
      </Docs>
    </Member>
    <Member MemberName="Services">
      <MemberSignature Language="C#" Value="public System.Web.UI.ServiceReferenceCollection Services { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ServiceReferenceCollection Services" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManagerProxy.Services" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Services As ServiceReferenceCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ServiceReferenceCollection ^ Services { System::Web::UI::ServiceReferenceCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ServiceReferenceCollectionEditor, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ServiceReferenceCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet <see cref="T:System.Web.UI.ScriptReferenceCollection" /> qui contient un objet <see cref="T:System.Web.UI.ServiceReference" /> pour chaque service qui est enregistré explicitement avec le contrôle <see cref="T:System.Web.UI.ScriptManagerProxy" />.</summary>
        <value>Collection qui contient un objet <see cref="T:System.Web.UI.ServiceReference" /> de chaque service enregistré avec le contrôle <see cref="T:System.Web.UI.ScriptManagerProxy" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.ScriptManagerProxy.Services%2A> collection vous permet d’ajouter des services à tous les services qui sont déjà enregistrés avec le <xref:System.Web.UI.ScriptManager> contrôle.  
  
 Vous pouvez ajouter des références de service pour le <xref:System.Web.UI.ScriptManagerProxy.Services%2A> collection de façon déclarative à l’aide de la `ServiceReference` élément. Vous pouvez ajouter des références de service par programme en ajoutant <xref:System.Web.UI.ServiceReference> des objets sur le <xref:System.Web.UI.ScriptManagerProxy.Services%2A> collection.  
  
 Si un service est déjà inscrit avec le <xref:System.Web.UI.ScriptManagerProxy> ou <xref:System.Web.UI.ScriptManager> (contrôle), le service n’est pas inscrit à nouveau.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ScriptManagerProxy.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Substitue la propriété <see cref="P:System.Web.UI.Control.Visible" /> héritée de la classe <see cref="T:System.Web.UI.Control" /> de base pour empêcher la définition de cette valeur.</summary>
        <value>
          <see langword="true" /> si le contrôle est restitué sur la page ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Control.Visible%2A> est substituée dans les <xref:System.Web.UI.ScriptManagerProxy> classe pour empêcher la définition de cette propriété. Le <xref:System.Web.UI.ScriptManagerProxy.Visible%2A> propriété renvoie `true` , sauf si elle est à l’intérieur d’un conteneur, comme un <xref:System.Web.UI.UserControl> dont <xref:System.Web.UI.Control.Visible%2A> est définie sur `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">La valeur est assignée à la propriété <see cref="P:System.Web.UI.ScriptManagerProxy.Visible" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>