<Type Name="HierarchicalDataSourceView" FullName="System.Web.UI.HierarchicalDataSourceView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="12561da0f0928a79c4ec483ae5b166609f0cb077" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39990803" /></Metadata><TypeSignature Language="C#" Value="public abstract class HierarchicalDataSourceView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HierarchicalDataSourceView extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HierarchicalDataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HierarchicalDataSourceView" />
  <TypeSignature Language="C++ CLI" Value="public ref class HierarchicalDataSourceView abstract" />
  <TypeSignature Language="F#" Value="type HierarchicalDataSourceView = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Représente une vue de données sur un nœud ou une collection de nœuds dans une structure de données hiérarchiques pour un contrôle <see cref="T:System.Web.UI.HierarchicalDataSourceControl" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET prend en charge une architecture de liaison de données qui permet aux contrôles de serveur Web à lier à des données et de les présenter de façon cohérente. Les contrôles serveur Web liés aux données sont appelés contrôles liés aux données et les classes qui facilitent cette liaison sont appelées des contrôles de source de données. Contrôles de source de données peuvent représenter n’importe quelle source de données : un fichier, un flux de données, une base de données relationnelle, un objet métier et ainsi de suite. Les contrôles de source de données présentent les données de manière cohérente pour les contrôles liés aux données, quelle que soit la source ou le format des données sous-jacentes.  
  
 Les contrôles de source de données qui représentent des données hiérarchiques dérivent de la classe abstraite <xref:System.Web.UI.HierarchicalDataSourceControl> classe. Vous pouvez considérer un contrôle de source de données comme la combinaison de l’objet de contrôle de source de données et de ses vues associées sur les données sous-jacentes, qui sont représentées par les objets de vue de source de données. Contrôles de source de données hiérarchiques prennent en charge une vue de source de données hiérarchiques pour chaque niveau hiérarchique de données qu’ils représentent. Les vues de source de données ne sont pas nommés, comme le <xref:System.Web.UI.DataSourceView> objets associés à un <xref:System.Web.UI.DataSourceControl> de contrôle, mais sont identifiés par leur chemin d’accès hiérarchique unique.  
  
 Vues de sources de données définissent les fonctions d’un contrôle de source de données. Tous les objets de vue de source de données, y compris <xref:System.Web.UI.HierarchicalDataSourceView>, prennent en charge la récupération de données de la source de données sous-jacente à l’aide la <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> (méthode), qui Récupère une liste hiérarchique de données comme un <xref:System.Web.UI.IHierarchicalEnumerable> objet. Objets éventuellement prendre en charge qu’un ensemble de fonctionnalités, y compris les opérations de base de vue de source de données de tous les <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A>, <xref:System.Web.UI.DataSourceView.Delete%2A>et le tri. Un contrôle lié aux données peut découvrir les fonctionnalités d’un contrôle de source de données en récupérant une source de données associé à afficher à l’aide de la <xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A> (méthode) et l’interrogation de la vue au moment du design ou au moment de l’exécution. <xref:System.Web.UI.HierarchicalDataSourceView> ne prend pas en charge <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A> ou <xref:System.Web.UI.DataSourceView.Delete%2A> operations.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment dériver une classe à partir de la <xref:System.Web.UI.HierarchicalDataSourceView> classe à récupérer des données à partir du stockage des données hiérarchiques, dans ce cas, un système de fichiers. Le `FileSystemDataSourceView` classe est fortement typé <xref:System.Web.UI.HierarchicalDataSourceView> instance qui active les contrôles serveur Web hiérarchiques tels que le <xref:System.Web.UI.WebControls.TreeView> contrôle à lier à un `FileSystemDataSource` contrôler et d’afficher des informations de système de fichiers. Pour des raisons de sécurité, informations système de fichiers s’affiche uniquement si le contrôle de source de données est utilisé dans un localhost, scénario authentifié et démarre uniquement avec le répertoire virtuel résidant dans la page Web Forms à l’aide du contrôle de source de données. Sinon, le `viewPath` paramètre passé au constructeur peut être utilisé pour créer une vue basée sur le chemin d’accès du système de fichier actuel. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.HierarchicalDataSourceControl> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Lorsque vous héritez de <see cref="T:System.Web.UI.HierarchicalDataSourceView" />, vous devez substituer le membre suivant : <see cref="M:System.Web.UI.HierarchicalDataSourceView.Select" />.</para></block>
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HierarchicalDataSourceView ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HierarchicalDataSourceView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HierarchicalDataSourceView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.HierarchicalDataSourceView" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public abstract System.Web.UI.IHierarchicalEnumerable Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.IHierarchicalEnumerable Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HierarchicalDataSourceView.Select" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Select () As IHierarchicalEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::UI::IHierarchicalEnumerable ^ Select();" />
      <MemberSignature Language="F#" Value="abstract member Select : unit -&gt; System.Web.UI.IHierarchicalEnumerable" Usage="hierarchicalDataSourceView.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchicalEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient une liste de tous les éléments de données dans l'affichage.</summary>
        <returns>Collection <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> d'éléments de données.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> méthode retourne un <xref:System.Web.UI.IHierarchicalEnumerable> collection d’éléments de données dans l’affichage actuel. Vous pouvez appeler la <xref:System.Collections.IEnumerable.GetEnumerator%2A> méthode pour obtenir un <xref:System.Collections.IEnumerator> de l’objet et effectuer une itération dans la collection d’éléments de données.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> méthode dans une classe qui dérive de la <xref:System.Web.UI.HierarchicalDataSourceView> classe à récupérer hiérarchique <xref:System.IO.FileSystemInfo> données à partir d’un système de fichiers. Pour des raisons de sécurité, informations système de fichiers s’affiche uniquement si le contrôle de source de données est utilisé dans un localhost, scénario authentifié et démarre uniquement avec le répertoire virtuel résidant dans la page Web Forms à l’aide du contrôle de source de données. Sinon, le `viewPath` paramètre passé au constructeur de l’objet de vue peut être utilisé pour créer une vue basée sur le chemin d’accès du système de fichier actuel. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.HierarchicalDataSourceControl> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="T:System.Web.UI.IHierarchicalEnumerable" />
      </Docs>
    </Member>
  </Members>
</Type>