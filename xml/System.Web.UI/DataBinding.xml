<Type Name="DataBinding" FullName="System.Web.UI.DataBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b1781601f70989a6b57ae0722a03ff52891409a1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36577593" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataBinding extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataBinding" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataBinding sealed" />
  <TypeSignature Language="F#" Value="type DataBinding = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="bde5f-101">Contient des informations sur une expression de liaison de données unique dans un contrôle serveur ASP.NET, ce qui permet aux concepteurs de développement rapide d'application (RAD, Rapid-Application Development), tels que Microsoft Visual Studio, de créer des expressions de liaison de données au moment du design.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bde5f-101">Contains information about a single data-binding expression in an ASP.NET server control, which allows rapid-application development (RAD) designers, such as Microsoft Visual Studio, to create data-binding expressions at design time.</span>
      </span>
      <span data-ttu-id="bde5f-102">Cette classe ne peut pas être héritée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="bde5f-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bde5f-103">Chaque expression de liaison de données dans un contrôle serveur est représentée au moment du design par une instance de la <xref:System.Web.UI.DataBinding> classe.</span><span class="sxs-lookup"><span data-stu-id="bde5f-103">Each data-binding expression in a server control is represented at design time by an instance of the <xref:System.Web.UI.DataBinding> class.</span></span> <span data-ttu-id="bde5f-104">Tout contrôle serveur qui contient une ou plusieurs expressions de liaison de données comporte un <xref:System.Web.UI.DataBindingCollection> objet qui contient le <xref:System.Web.UI.DataBinding> objets.</span><span class="sxs-lookup"><span data-stu-id="bde5f-104">Any server control that contains one or more data-binding expressions has a <xref:System.Web.UI.DataBindingCollection> object that contains the <xref:System.Web.UI.DataBinding> objects.</span></span> <span data-ttu-id="bde5f-105">Cette collection est accessible via la <xref:System.Web.UI.Control> classe qui implémente le <xref:System.Web.UI.IDataBindingsAccessor> interface.</span><span class="sxs-lookup"><span data-stu-id="bde5f-105">This collection is accessible through the <xref:System.Web.UI.Control> class implementing the <xref:System.Web.UI.IDataBindingsAccessor> interface.</span></span> <span data-ttu-id="bde5f-106">Lorsque vous créez un concepteur RAD personnalisé, utilisez cette implémentation pour accéder à la collection.</span><span class="sxs-lookup"><span data-stu-id="bde5f-106">When you create a custom RAD designer, use that implementation to access the collection.</span></span> <span data-ttu-id="bde5f-107">N’importe quel <xref:System.Web.UI.DataBinding> ou <xref:System.Web.UI.DataBindingCollection> objets associés à un contrôle serveur existent uniquement au moment du design.</span><span class="sxs-lookup"><span data-stu-id="bde5f-107">Any <xref:System.Web.UI.DataBinding> or <xref:System.Web.UI.DataBindingCollection> objects associated with a server control exist only at design time.</span></span> <span data-ttu-id="bde5f-108">Ils n’existent pas au moment de l’exécution et, par conséquent, ne sont pas accessibles pendant l’exécution.</span><span class="sxs-lookup"><span data-stu-id="bde5f-108">They do not exist at run time and, therefore, are not accessible during run time.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="bde5f-109">L’exemple de code suivant crée un <xref:System.Web.UI.DataBinding> objet et des jeux, il est égal à un objet existant dans du contrôle <xref:System.Web.UI.DataBindingCollection> collection ayant un `propertyName` paramètre avec la valeur `Text`.</span><span class="sxs-lookup"><span data-stu-id="bde5f-109">The following code example creates a <xref:System.Web.UI.DataBinding> object and sets it equal to an existing object in the control's <xref:System.Web.UI.DataBindingCollection> collection that has a `propertyName` parameter with a value of `Text`.</span></span> <span data-ttu-id="bde5f-110">Si la collection contient un <xref:System.Web.UI.DataBinding> de l’objet avec un `propertyName` valeur `Text`, le code suivant retourne la valeur de l’objet <xref:System.Web.UI.DataBinding.Expression%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="bde5f-110">If the collection contains a <xref:System.Web.UI.DataBinding> object with a `propertyName` value of `Text`, this code returns the value of the object's <xref:System.Web.UI.DataBinding.Expression%2A> property.</span></span> <span data-ttu-id="bde5f-111">S’il n’existe aucun objet, il retourne une chaîne vide (« »).</span><span class="sxs-lookup"><span data-stu-id="bde5f-111">If there is no such object, it returns an empty string ("").</span></span>  
  
 [!code-csharp[DataBinding_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#2)]
 [!code-vb[DataBinding_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.DataBinder" />
    <altmember cref="T:System.Web.UI.DataBindingCollection" />
    <altmember cref="T:System.Web.UI.IDataBindingsAccessor" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataBinding (string propertyName, Type propertyType, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, class System.Type propertyType, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinding.#ctor(System.String,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, propertyType As Type, expression As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataBinding(System::String ^ propertyName, Type ^ propertyType, System::String ^ expression);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.DataBinding : string * Type * string -&gt; System.Web.UI.DataBinding" Usage="new System.Web.UI.DataBinding (propertyName, propertyType, expression)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="bde5f-112">Propriété à laquelle lier des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bde5f-112">The property to bind data to.</span>
          </span>
        </param>
        <param name="propertyType">
          <span data-ttu-id="bde5f-113">Type .NET Framework de la propriété à laquelle lier des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bde5f-113">The .NET Framework type of the property to bind data to.</span>
          </span>
        </param>
        <param name="expression">
          <span data-ttu-id="bde5f-114">Expression de liaison de données à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bde5f-114">The data-binding expression to be evaluated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bde5f-115">Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.DataBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bde5f-115">Initializes a new instance of the <see cref="T:System.Web.UI.DataBinding" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bde5f-116">L’exemple de code suivant crée un <xref:System.Web.UI.DataBinding> objet et des jeux, il est égal à un objet existant dans du contrôle <xref:System.Web.UI.DataBindingCollection> collection ayant un `propertyName` paramètre avec la valeur `Text`.</span><span class="sxs-lookup"><span data-stu-id="bde5f-116">The following code example creates a <xref:System.Web.UI.DataBinding> object and sets it equal to an existing object in the control's <xref:System.Web.UI.DataBindingCollection> collection that has a `propertyName` parameter with a value of `Text`.</span></span> <span data-ttu-id="bde5f-117">Si la collection contient un <xref:System.Web.UI.DataBinding> de l’objet avec un `propertyName` valeur `Text`, le code suivant retourne la valeur de l’objet <xref:System.Web.UI.DataBinding.Expression%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="bde5f-117">If the collection contains a <xref:System.Web.UI.DataBinding> object with a `propertyName` value of `Text`, this code returns the value of the object's <xref:System.Web.UI.DataBinding.Expression%2A> property.</span></span> <span data-ttu-id="bde5f-118">S’il n’existe aucun objet, il retourne une chaîne vide (« »).</span><span class="sxs-lookup"><span data-stu-id="bde5f-118">If there is no such object, it returns an empty string ("").</span></span>  
  
 [!code-csharp[DataBinding_Sample1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#3)]
 [!code-vb[DataBinding_Sample1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.DataBinder" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="dataBinding.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="bde5f-119">Objet à comparer au <see cref="T:System.Web.UI.DataBinding" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bde5f-119">The object to compare against the current <see cref="T:System.Web.UI.DataBinding" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="bde5f-120">Détermine si l'objet spécifié constitue la même instance de la classe <see cref="T:System.Web.UI.DataBinding" /> que l'objet en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bde5f-120">Determines whether the specified object is the same instance of the <see cref="T:System.Web.UI.DataBinding" /> class as the current object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bde5f-121">
            <see langword="true" /> si les noms de propriétés de liaison de données concordent ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bde5f-121">
              <see langword="true" /> if the data-binding property names match; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.DataBinding.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinding.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Expression : string with get, set" Usage="System.Web.UI.DataBinding.Expression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bde5f-122">Obtient ou définit l'expression de liaison de données à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bde5f-122">Gets or sets the data-binding expression to be evaluated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bde5f-123">Expression de liaison de données à évaluer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bde5f-123">The data-binding expression to be evaluated.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bde5f-124">L’exemple de code suivant crée un <xref:System.Web.UI.DataBinding> objet et des jeux, il est égal à un objet existant dans du contrôle <xref:System.Web.UI.DataBindingCollection> collection ayant un `propertyName` paramètre avec la valeur `Text`.</span><span class="sxs-lookup"><span data-stu-id="bde5f-124">The following code example creates a <xref:System.Web.UI.DataBinding> object and sets it equal to an existing object in the control's <xref:System.Web.UI.DataBindingCollection> collection that has a `propertyName` parameter with a value of `Text`.</span></span> <span data-ttu-id="bde5f-125">Si la collection contient un <xref:System.Web.UI.DataBinding> de l’objet avec un `propertyName` valeur `Text`, le code suivant retourne la valeur de l’objet <xref:System.Web.UI.DataBinding.Expression%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="bde5f-125">If the collection contains a <xref:System.Web.UI.DataBinding> object with a `propertyName` value of `Text`, this code returns the value of the object's <xref:System.Web.UI.DataBinding.Expression%2A> property.</span></span> <span data-ttu-id="bde5f-126">S’il n’existe aucun objet, il retourne une chaîne vide (« »).</span><span class="sxs-lookup"><span data-stu-id="bde5f-126">If there is no such object, it returns an empty string ("").</span></span>  
  
 [!code-csharp[DataBinding_Sample1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#3)]
 [!code-vb[DataBinding_Sample1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="dataBinding.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="bde5f-127">Récupère le code de hachage pour une instance de l'objet <see cref="T:System.Web.UI.DataBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bde5f-127">Retrieves the hash code for an instance of the <see cref="T:System.Web.UI.DataBinding" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="bde5f-128">Code de hachage d'un entier signé 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bde5f-128">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="bde5f-129"><xref:System.Web.UI.DataBinding> les objets sont placés dans un <xref:System.Web.UI.DataBindingCollection> objet, accessible uniquement au moment du design.</span><span class="sxs-lookup"><span data-stu-id="bde5f-129"><xref:System.Web.UI.DataBinding> objects are placed in a <xref:System.Web.UI.DataBindingCollection> object, accessible only at design time.</span></span> <span data-ttu-id="bde5f-130">La collection est une table de hachage qui représente les liaisons sur un contrôle.</span><span class="sxs-lookup"><span data-stu-id="bde5f-130">The collection is a hash table that represents the bindings on a control.</span></span> <span data-ttu-id="bde5f-131">Il peut uniquement être une seule liaison par propriété, le calcul du code de hachage correspond à la <xref:System.Web.UI.DataBinding.Equals%2A?displayProperty=nameWithType> mise en œuvre et prend uniquement la propriété nom de compte.</span><span class="sxs-lookup"><span data-stu-id="bde5f-131">There can only be one binding per property, so the hash code computation matches the <xref:System.Web.UI.DataBinding.Equals%2A?displayProperty=nameWithType> implementation and only takes the property name into account.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataBinding.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="PropertyName">
      <MemberSignature Language="C#" Value="public string PropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinding.PropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PropertyName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyName : string" Usage="System.Web.UI.DataBinding.PropertyName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bde5f-132">Obtient le nom de la propriété de contrôle serveur ASP.NET à laquelle lier des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bde5f-132">Gets the name of the ASP.NET server control property to bind data to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bde5f-133">Propriété à laquelle lier des données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bde5f-133">The property to bind data to.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bde5f-134">L’exemple de code suivant déclare trois variables, `dataBindingOutput1`, `dataBindingOutput2`, et `dataBindingOutput3`, laquelle accéder aux différentes propriétés d’un <xref:System.Web.UI.DataBinding> objet, `myDataBinding2`.</span><span class="sxs-lookup"><span data-stu-id="bde5f-134">The following code example declares three variables, `dataBindingOutput1`, `dataBindingOutput2`, and `dataBindingOutput3`, which access the different properties of a <xref:System.Web.UI.DataBinding> object, `myDataBinding2`.</span></span> <span data-ttu-id="bde5f-135">Il assigne ensuite la valeur de la <xref:System.Web.UI.DataBinding.PropertyName%2A> propriété `dataBindingOutput1`, concatène avec la chaîne « le nom de propriété est » et écrit la valeur dans un fichier.</span><span class="sxs-lookup"><span data-stu-id="bde5f-135">It then assigns the value of the <xref:System.Web.UI.DataBinding.PropertyName%2A> property to `dataBindingOutput1`, concatenates it with the string "The property name is ", and writes the value to a file.</span></span>  
  
 [!code-csharp[DataBinding_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#6)]
 [!code-vb[DataBinding_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinding.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ PropertyType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PropertyType : Type" Usage="System.Web.UI.DataBinding.PropertyType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="bde5f-136">Obtient le type .NET Framework de la propriété de contrôle serveur ASP.NET liée aux données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bde5f-136">Gets the .NET Framework type of the data-bound ASP.NET server control property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="bde5f-137">Type .NET Framework de la propriété liée aux données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="bde5f-137">The .NET Framework type of the data-bound property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="bde5f-138">L’exemple de code suivant déclare trois variables, `dataBindingOutput1`, `dataBindingOutput2`, et `dataBindingOutput3`, laquelle accéder aux différentes propriétés d’un <xref:System.Web.UI.DataBinding> objet, `myDataBinding2`.</span><span class="sxs-lookup"><span data-stu-id="bde5f-138">The following code example declares three variables, `dataBindingOutput1`, `dataBindingOutput2`, and `dataBindingOutput3`, which access the different properties of a <xref:System.Web.UI.DataBinding> object, `myDataBinding2`.</span></span> <span data-ttu-id="bde5f-139">Le <xref:System.Web.UI.DataBinding.PropertyType%2A> valeur de propriété est assignée à `dataBindingOutput2` et concaténée avec la chaîne « le type de propriété est » et écrit la valeur dans un fichier.</span><span class="sxs-lookup"><span data-stu-id="bde5f-139">The <xref:System.Web.UI.DataBinding.PropertyType%2A> property value is assigned to `dataBindingOutput2` and concatenated with the string "The property type is ", and writes the value to a file.</span></span>  
  
 [!code-csharp[DataBinding_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#6)]
 [!code-vb[DataBinding_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>