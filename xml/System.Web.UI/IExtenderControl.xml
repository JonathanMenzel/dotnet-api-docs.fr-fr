<Type Name="IExtenderControl" FullName="System.Web.UI.IExtenderControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c7e8355f1f70d3786c08bb177404003de62a6676" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30606023" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IExtenderControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IExtenderControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IExtenderControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IExtenderControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IExtenderControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Définit le comportement pour un contrôle d'extendeur.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les contrôles d’extendeur qui dérivent de la <xref:System.Web.UI.ExtenderControl> classe nécessitent un <xref:System.Web.UI.ScriptManager> contrôle dans la page. Le <xref:System.Web.UI.ExtenderControl> classe de base exécute un test explicite pour vous assurer qu’un <xref:System.Web.UI.ScriptManager> contrôle existe sur la page.  
  
 Toutefois, si vous souhaitez créer des contrôles d’extendeur et la page ne contient pas un <xref:System.Web.UI.ScriptManager> (contrôle), vous pouvez créer une classe qui implémente le <xref:System.Web.UI.IExtenderControl> interface directement. En outre, si vous créez une classe qui dérive de <xref:System.Web.UI.Control> ou que vous étendez un contrôle existant qui dérive de <xref:System.Web.UI.Control>, vous pouvez implémenter la <xref:System.Web.UI.IExtenderControl> interface pour prendre en charge la fonctionnalité de client.  
  
 Le <xref:System.Web.UI.IExtenderControl> interface enregistre les bibliothèques de scripts pour un contrôle en appelant le <xref:System.Web.UI.IExtenderControl.GetScriptReferences%2A> (méthode) et enregistre <xref:System.Web.UI.ScriptDescriptor> objets en appelant le <xref:System.Web.UI.IExtenderControl.GetScriptDescriptors%2A> (méthode). Le <xref:System.Web.UI.IExtenderControl.GetScriptDescriptors%2A> méthode retourne un <xref:System.Collections.IEnumerable> liste des <xref:System.Web.UI.ScriptDescriptor> objets.  
  
> [!NOTE]
>  Si vous étendez un type de contrôle existant qui est dérivé de la <xref:System.Web.UI.WebControls.WebControl> classe, implémentez la <xref:System.Web.UI.IScriptControl> interface.  
  
 Pour créer un contrôle d’extendeur en implémentant <xref:System.Web.UI.IExtenderControl>, vous procédez comme suit :  
  
-   Écrire du code pour du contrôle `OnInit` événement à détecter et d’utiliser le <xref:System.Web.UI.ScriptManager> contrôler s’il est disponible sur la page.  
  
-   Si le <xref:System.Web.UI.ScriptManager> n’est pas disponible dans la page, fournissez un autre moyen d’enregistrer les scripts requis en appelant des méthodes statiques de la <xref:System.Web.UI.ScriptManager> classe.  
  
-   Fournissez des membres virtuels protégés pour <xref:System.Web.UI.IExtenderControl> membres.  
  
-   Fournir un script de l’instance comme un bloc de script que vous enregistrez avec le <xref:System.Web.UI.ScriptManager> contrôle. Vous devez le faire au cours du contrôle `PreRender`, `PreRenderComplete`, ou `Render` événements.  
  
-   Inscrire les descripteurs de script lors du contrôle `Render` événement.  
  
> [!NOTE]
>  Si la page contient un <xref:System.Web.UI.UpdatePanel> (contrôle), la page doit contenir un <xref:System.Web.UI.ScriptManager> contrôle. Vous devez implémenter la <xref:System.Web.UI.IExtenderControl> interface uniquement lorsque la page ne contient pas un <xref:System.Web.UI.ScriptManager> contrôle.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ExtenderControl" />
    <altmember cref="T:System.Web.UI.ScriptManager" />
  </Docs>
  <Members>
    <Member MemberName="GetScriptDescriptors">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt; GetScriptDescriptors (System.Web.UI.Control targetControl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptDescriptor&gt; GetScriptDescriptors(class System.Web.UI.Control targetControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IExtenderControl.GetScriptDescriptors(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetScriptDescriptors (targetControl As Control) As IEnumerable(Of ScriptDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptDescriptor ^&gt; ^ GetScriptDescriptors(System::Web::UI::Control ^ targetControl);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetControl" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="targetControl">Contrôle serveur auquel l'extendeur est associé.</param>
        <summary>Enregistre les objets <see cref="T:System.Web.UI.ScriptDescriptor" /> du contrôle et retourne un objet qui contient les objets <see cref="T:System.Web.UI.ScriptDescriptor" /> du contrôle.</summary>
        <returns>Collection <see cref="T:System.Collections.IEnumerable" /> qui contient des objets <see cref="T:System.Web.UI.ScriptDescriptor" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScriptReferences">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt; GetScriptReferences ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptReference&gt; GetScriptReferences() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IExtenderControl.GetScriptReferences" />
      <MemberSignature Language="VB.NET" Value="Public Function GetScriptReferences () As IEnumerable(Of ScriptReference)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptReference ^&gt; ^ GetScriptReferences();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Enregistre les bibliothèques de scripts pour le contrôle et retourne une énumération des fichiers ECMAScript (JavaScript) qui ont été enregistrés en tant que ressources incorporées.</summary>
        <returns>Collection <see cref="T:System.Collections.IEnumerable" /> qui contient les fichiers JavaScript qui ont été enregistrés en tant que ressources incorporées.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>