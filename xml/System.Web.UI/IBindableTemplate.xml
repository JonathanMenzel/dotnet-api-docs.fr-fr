<Type Name="IBindableTemplate" FullName="System.Web.UI.IBindableTemplate">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="43ad639d00216138837c9986dbf3368daac00491" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36576943" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IBindableTemplate : System.Web.UI.ITemplate" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBindableTemplate implements class System.Web.UI.ITemplate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IBindableTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBindableTemplate&#xA;Implements ITemplate" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBindableTemplate : System::Web::UI::ITemplate" />
  <TypeSignature Language="F#" Value="type IBindableTemplate = interface&#xA;    interface ITemplate" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ITemplate</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Permet aux contrôles liés aux données ASP.NET, notamment <see cref="T:System.Web.UI.WebControls.DetailsView" /> et <see cref="T:System.Web.UI.WebControls.FormView" />, d'établir automatiquement la liaison à un contrôle de source de données ASP.NET dans des sections de contenu modélisé.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.IBindableTemplate> interface fournit un moyen pour les contrôles liés aux données ASP.NET, tels que <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.GridView>, et <xref:System.Web.UI.WebControls.FormView>, pour lier à des données fournies par un contrôle de source de données ASP.NET, tels que <xref:System.Web.UI.WebControls.ObjectDataSource> ou <xref:System.Web.UI.WebControls.SqlDataSource>, lorsque le contrôle lié aux données inclut un contenu basé sur un modèle.  
  
> [!NOTE]
>  Les développeurs de pages n’implémentent pas le <xref:System.Web.UI.IBindableTemplate> interface. Les développeurs qui créent des contrôles liés aux données personnalisés peuvent manipuler <xref:System.Web.UI.IBindableTemplate> objets dans les implémentations de la <xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A> et <xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A> méthodes, mais n’implémentent pas leurs propres <xref:System.Web.UI.IBindableTemplate> objets.  
  
 Les contrôles liés aux données tels que <xref:System.Web.UI.WebControls.GridView> généralement sont informés des arborescences de leurs contrôles enfants et peut par conséquent associer des valeurs, extraire des valeurs et passer ces valeurs entre le contrôle lié aux données et un contrôle de source de données à chaque liaison de données . Toutefois, lorsqu’un développeur de pages définit le contenu modélisé d’un contrôle lié aux données, les contrôles enfants dans le modèle ne sont pas visibles pour le contrôle lié aux données parent : le parent peut restituer les enfants du contenu (étant donné que les contrôles s’affichent efficacement), mais il ne peut pas extraire les valeurs de ces contrôles enfants à passer à l’opération de suppression, d’insertion ou mise à jour d’un contrôle de source de données associée. Dans les scénarios de liaison de données, contenu modélisé est opaque à un contrôle lié aux données de parent. Le `Bind` syntaxe rend possible pour le contrôle lié aux données extraire les valeurs à partir d’un contrôle lié aux données à l’intérieur d’un <xref:System.Web.UI.IBindableTemplate> instance.  
  
 La liaison de données peut être unidirectionnelle ou bidirectionnelle. (Ces directions de liaison sont définies par le <xref:System.ComponentModel.BindingDirection> énumération.) Liaison de données unidirectionnelle est qu'une liaison de données effectuées dans une direction sortante, à partir du contrôle de source de données pour le contrôle dépendant ; par exemple, tout scénario de lecture de données implique la liaison de données unidirectionnelle. Pour la liaison de données unidirectionnelle, vous pouvez utiliser la syntaxe de liaison de données unidirectionnelle (`<%# Eval("fieldname") %>`) à l’intérieur du contenu basé sur un modèle et vous n’avez pas besoin d’utiliser la syntaxe de liaison de données bidirectionnelle ASP.NET. Liaison de données bidirectionnelle décrit la liaison de données dans la direction entrante, à partir du contrôle lié aux données au contrôle de source de données. Lié aux donnéesent modification automatique, insert et delete les scénarios à l’aide d’ASP.NET et les contrôles de source de données sont des scénarios de liaison de données bidirectionnelle. Ces scénarios utilisent des expressions de liaison de données bidirectionnelle (`<%# Bind("fieldname") %>`). Le <xref:System.Web.UI.IBindableTemplate> interface et l’infrastructure ASP.NET prennent en charge la liaison de données bidirectionnelle, déclarative et automatique entre les contrôles de source de données ASP.NET et du contenu basé sur un modèle. Pour plus d’informations sur la syntaxe et les expressions de liaison de données ASP.NET, consultez [liaison aux bases de données](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742) et [vue d’ensemble des Expressions de liaison de données](http://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a).  
  
 Contenu basé sur un modèle pour les contrôles liés aux données est souvent défini de façon déclarative. Le tableau suivant décrit les processus couramment utilisés pour lier des données basé sur des modèles à des contrôles liés aux données.  
  
|Contrôle lié aux données|Process|  
|-------------------------|-------------|  
|<xref:System.Web.UI.WebControls.DetailsView>|Le contrôle lié aux données est lié aux données à l’aide du `DataSourceID` propriété du contrôle de source de données et le contenu modélisé est définie dans un <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>, <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> ou <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> propriété.|  
|<xref:System.Web.UI.WebControls.GridView>|Le contrôle lié aux données est lié aux données à l’aide du `DataSourceID` propriété du contrôle de source de données et le contenu modélisé est définie dans un <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> ou <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> propriété. Le <xref:System.Web.UI.WebControls.GridView> contrôle ne prend pas en charge une opération d’insertion.|  
|<xref:System.Web.UI.WebControls.FormView>|Le contrôle lié aux données est lié aux données à l’aide du `DataSourceID` propriété et le contenu modélisé est défini dans un <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>, <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>, ou <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> propriété, ou dans un <xref:System.Web.UI.WebControls.TemplateField> objet.|  
  
 Le <xref:System.Web.UI.WebControls.DataList> et <xref:System.Web.UI.WebControls.Repeater> contrôles ne prennent pas en charge les scénarios de liaison de données bidirectionnelle automatique.  
  
 ASP.NET crée implicitement un <xref:System.Web.UI.IBindableTemplate> lors de l’analyse de contenu basé sur un modèle qui est lié à un contrôle de source de données ASP.NET au sein du modèle d’objet. Plus précisément, l’analyseur ASP.NET crée une instance de la <xref:System.Web.UI.CompiledBindableTemplateBuilder> classe lorsqu’il analyse le contenu modélisé qui utilise la syntaxe de liaison de données ASP.NET et contient des contrôles serveur Web ASP.NET qui prennent en charge la liaison de données. Ces contrôles serveur ASP.NET sont marqués par le <xref:System.ComponentModel.BindableAttribute> attribut.  
  
 Le <xref:System.Web.UI.IBindableTemplate> interface définit une méthode, <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A>. Cette méthode est définie pour la liaison de données bidirectionnelle, afin qu’un contrôle lié aux données peut extraire des paires nom/valeur à partir du contenu basé sur un modèle et passer à un contrôle de source de données au moment de l’exécution automatiquement. Pour une liaison de données automatique réussisse, les noms de champs extraits du contenu modélisé par la <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> méthode doit correspondre à des noms de paramètre dans un contrôle de source de données associé. Développeurs de contrôles appellent le <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> méthode explicitement uniquement dans leurs implémentations de <xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A> ou une autre méthode semblable d’un contrôle lié aux données personnalisé.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment un <xref:System.Web.UI.WebControls.FormView> contrôle peut déclarative définir le contenu modélisé, une liaison avec les données fournies par un <xref:System.Web.UI.WebControls.SqlDataSource> contrôler et afficher et modifier des enregistrements existants. L’analyseur ASP.NET analyse le contenu modélisé et crée un <xref:System.Web.UI.IBindableTemplate> objet en cours d’exécution qui est en mesure de lier des valeurs à partir de la <xref:System.Web.UI.WebControls.SqlDataSource> contrôle aux zones de liaison de données définie dans le modèle par la syntaxe de liaison de données ASP.NET unidirectionnelle (`<%# Eval("fieldname") %>`) et la syntaxe de liaison de données bidirectionnelle (`<%# Bind("fieldname") %>`).  
  
> [!IMPORTANT]
>  Ce contrôle a une zone de texte qui accepte l’entrée d’utilisateur, ce qui constitue une menace potentielle pour la sécurité. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormView#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormView/CS/formvieweditcs.aspx#1)]
 [!code-aspx-vb[FormView#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormView/VB/formvieweditvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ITemplate" />
    <altmember cref="T:System.Web.UI.CompiledBindableTemplateBuilder" />
    <altmember cref="T:System.Web.UI.ExtractTemplateValuesMethod" />
    <altmember cref="T:System.ComponentModel.BindableAttribute" />
    <altmember cref="T:System.ComponentModel.BindingDirection" />
  </Docs>
  <Members>
    <Member MemberName="ExtractValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary ExtractValues (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.IOrderedDictionary ExtractValues(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExtractValues (container As Control) As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Specialized::IOrderedDictionary ^ ExtractValues(System::Web::UI::Control ^ container);" />
      <MemberSignature Language="F#" Value="abstract member ExtractValues : System.Web.UI.Control -&gt; System.Collections.Specialized.IOrderedDictionary" Usage="iBindableTemplate.ExtractValues container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">
          <see cref="T:System.Web.UI.Control" /> dont sont extraites des paires nom/valeur, qui sont passées par le contrôle lié aux données à un contrôle de source de données associé dans des scénarios de liaison de données bidirectionnelle.</param>
        <summary>Lors de l'implémentation par une classe, récupère un jeu de paires nom/valeur pour des valeurs liées à l'aide de la syntaxe de liaison de données ASP.NET bidirectionnelle au sein du contenu modélisé.</summary>
        <returns>
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> de paires nom/valeur. Le nom représente le nom d'un contrôle au sein du contenu modélisé, et la valeur est la valeur actuelle d'une valeur de propriété liée à l'aide de la syntaxe de liaison de données ASP.NET bidirectionnelle.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Un <see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /> (méthode) doit être conforme aux règles suivantes : - Si plusieurs liaisons existe pour un champ donné, la dernière liaison rencontrée est utilisé.  -Pour référencer l’identificateur d’un contrôle dans le <see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /> méthode, le contrôle doit également avoir une propriété ID définie par l’utilisateur au moment de l’analyse. Si aucun ID n’existe, cela entraîne une erreur d’analyse.  -Syntaxe de liaison de données ASP.NET bidirectionnelle est uniquement valide dans un <see cref="T:System.Web.UI.ITemplate" /> ou <see cref="T:System.Web.UI.IBindableTemplate" /> propriété d’un contrôle lié aux données.</para>
        </block>
        <altmember cref="T:System.Web.UI.CompiledBindableTemplateBuilder" />
        <altmember cref="T:System.Web.UI.ExtractTemplateValuesMethod" />
      </Docs>
    </Member>
  </Members>
</Type>