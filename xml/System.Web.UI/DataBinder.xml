<Type Name="DataBinder" FullName="System.Web.UI.DataBinder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b377786fb7b19c08a73b9c0d28446deab3dc520" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52224753" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataBinder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataBinder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataBinder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataBinder" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataBinder sealed" />
  <TypeSignature Language="F#" Value="type DataBinder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Prise en charge des concepteurs de développement rapide d'application (RAD, Rapid Application Development) pour générer et analyser la syntaxe d'expression des liaisons de données. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la méthode surchargée statique <xref:System.Web.UI.DataBinder.Eval%2A> méthode de cette classe dans la syntaxe de liaison de données dans une page Web ASP.NET. Cela fournit une syntaxe plus facile à utiliser que la liaison de données standard. Toutefois, étant donné que `DataBinder.Eval` fournit la conversion de type automatique, cela peut entraîner de baisse des performances.  
  
 Pour plus d’informations sur la liaison de données, les expressions et la syntaxe ASP.NET, consultez [liaison aux bases de données](https://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742) et [vue d’ensemble des Expressions de liaison de données](https://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a).  
  
 À compter de .NET Framework 4.5, vous pouvez utiliser la liaison de modèle pour simplifier certaines tâches que vous deviez effectuer via la liaison de données dans les versions antérieures. Pour une série de didacticiels sur l’utilisation de la liaison de modèle avec Web Forms, consultez [liaison de modèle et les Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
   
  
## Examples  
 L’exemple suivant utilise la méthode statique <xref:System.Web.UI.DataBinder.GetPropertyValue%2A> méthode pour remplir les champs d’un <xref:System.Web.UI.WebControls.Repeater> contrôler à l’aide un <xref:System.Collections.ArrayList> de `Product` objets. Le <xref:System.Web.UI.DataBinder.Eval%2A> méthode peut être appliquée avec la même syntaxe, mais il ne fonctionnerait pas aussi rapidement.  
  
 Cet exemple utilise un personnalisé `Product` classe qui expose une chaîne `Model` propriété et une valeur numérique `UnitPrice` propriété.  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.DataBinder/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.DataBinder#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.DataBinder/VB/Default.aspx#1)]  
  
 Le code suivant est personnalisé `Product` classe. Ce code doit être inclus dans un fichier de classe distincte dans le répertoire App_Code, tels que Product.cs ou Product.vb.  
  
 [!code-csharp[System.Web.UI.DataBinder#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.DataBinder/CS/App_Code/Product.cs#2)]
 [!code-vb[System.Web.UI.DataBinder#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.DataBinder/VB/App_Code/Product.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.XPathBinder" />
    <altmember cref="T:System.Web.UI.IBindableTemplate" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataBinder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataBinder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.DataBinder" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public static bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinder.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCaching : bool with get, set" Usage="System.Web.UI.DataBinder.EnableCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si la mise en cache des données est activée au moment de l'exécution.</summary>
        <value>
          <see langword="true" /> si la mise en cache de sortie est activée pour la classe <see cref="T:System.Web.UI.DataBinder" /> ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Eval">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Utilise la réflexion pour analyser et évaluer une expression de liaison de données par rapport à un objet au moment de l'exécution.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 À compter de .NET Framework 4.5, vous pouvez utiliser la liaison de modèle pour simplifier certaines tâches que vous deviez effectuer via la liaison de données dans les versions antérieures. Pour une série de didacticiels sur l’utilisation de la liaison de modèle avec Web Forms, consultez [liaison de modèle et les Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Eval">
      <MemberSignature Language="C#" Value="public static object Eval (object container, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Eval(object container, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.Eval(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Eval (container As Object, expression As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Eval(System::Object ^ container, System::String ^ expression);" />
      <MemberSignature Language="F#" Value="static member Eval : obj * string -&gt; obj" Usage="System.Web.UI.DataBinder.Eval (container, expression)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">Référence d'objet par rapport à laquelle l'expression est évaluée. Il doit s'agir d'un identificateur d'objet valide dans la langue spécifiée de la page.</param>
        <param name="expression">Chemin de navigation à partir de l'objet <paramref name="container" /> jusqu'à la valeur de propriété à placer dans la propriété du contrôle lié. Il doit s’agir d’une propriété de type chaîne ou de noms de champs séparés par des points, par exemple <c>Tables[0].DefaultView.[0].Price</c> en C# ou <c>Tables(0).DefaultView.(0).Price</c> en Visual Basic.</param>
        <summary>Évalue des expressions de liaison de données XPath au moment de l'exécution.</summary>
        <returns>Instance de <see cref="T:System.Object" /> qui résulte de l'évaluation de l'expression de liaison aux données.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de la `expression` doivent correspondre à une propriété publique.  
  
 Cette méthode est appelée automatiquement lorsque vous créez des liaisons de données dans un concepteur de développement rapide d’applications tels que Visual Studio. Vous pouvez également l’utiliser de façon déclarative pour simplifier le cast en une chaîne de texte. Pour ce faire, vous utilisez le `<%#  %>` syntaxe d’expression, comme utilisé dans la liaison de données ASP.NET standard.  
  
 Cette méthode est particulièrement utile lors de la liaison de données aux contrôles qui se trouvent dans une liste de modèles.  
  
> [!NOTE]
>  Étant donné que cette méthode effectue une évaluation à liaison tardive, à l’aide de la réflexion au moment de l’exécution, cela peut provoquer les performances de façon notable par rapport à la syntaxe de liaison de données ASP.NET standard.  
  
 Pour une de la liste de contrôles Web, tel que <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.DataList>, ou <xref:System.Web.UI.WebControls.Repeater>, `container` doit être `Container.DataItem`. Si vous exécutez une liaison à la page, `container` doit être `Page`.  
  
 À compter de .NET Framework 4.5, vous pouvez utiliser la liaison de modèle pour simplifier certaines tâches que vous deviez effectuer via la liaison de données dans les versions antérieures. Pour une série de didacticiels sur l’utilisation de la liaison de modèle avec Web Forms, consultez [liaison de modèle et les Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
   
  
## Examples  
 Les exemples suivants montrent comment utiliser le `Eval` méthode à laquelle lier des données <xref:System.Web.UI.WebControls.Repeater> contrôle. Il requiert une classe de données nommée produit.  
  
 [!code-csharp[System.Web.UI.DataBinder.Eval#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/product.cs#1)]
 [!code-vb[System.Web.UI.DataBinder.Eval#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/product.vb#1)]  
  
 Le fichier code-behind charge les données de test et lie ces données à un <xref:System.Web.UI.WebControls.Repeater> contrôle.  
  
 [!code-csharp[System.Web.UI.DataBinder.Eval#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts.aspx.cs#2)]
 [!code-vb[System.Web.UI.DataBinder.Eval#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts.aspx.vb#2)]  
  
 Dans la syntaxe déclarative pour le <xref:System.Web.UI.WebControls.Repeater> contrôle, vous utilisez le <xref:System.Web.UI.DataBinder.Eval%2A> méthode avec `Container.DataItem` pour le `container` paramètre.  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder.Eval#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts3.aspx#3)]
 [!code-aspx-vb[System.Web.UI.DataBinder.Eval#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts3.aspx#3)]  
  
 Ou, vous pouvez appeler `Eval` de fonction et pas inclure le `container` paramètre.  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder.Eval#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts4.aspx#4)]
 [!code-aspx-vb[System.Web.UI.DataBinder.Eval#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts4.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="expression" /> est <see langword="null" /> ou une chaîne vide ("") après rognage.</exception>
        <altmember cref="M:System.Web.UI.Control.DataBind" />
        <altmember cref="T:System.Web.UI.DataBinding" />
        <altmember cref="T:System.Web.UI.XPathBinder" />
        <altmember cref="T:System.Web.UI.IBindableTemplate" />
      </Docs>
    </Member>
    <Member MemberName="Eval">
      <MemberSignature Language="C#" Value="public static string Eval (object container, string expression, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Eval(object container, string expression, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.Eval(System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Eval (container As Object, expression As String, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Eval(System::Object ^ container, System::String ^ expression, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member Eval : obj * string * string -&gt; string" Usage="System.Web.UI.DataBinder.Eval (container, expression, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">Référence d'objet par rapport à laquelle l'expression est évaluée. Il doit s'agir d'un identificateur d'objet valide dans la langue spécifiée de la page.</param>
        <param name="expression">Chemin de navigation à partir de l'objet <paramref name="container" /> jusqu'à la valeur de propriété à placer dans la propriété du contrôle lié. Il doit s’agir d’une propriété de type chaîne ou de noms de champs séparés par des points, par exemple <c>Tables[0].DefaultView.[0].Price</c> en C# ou <c>Tables(0).DefaultView.(0).Price</c> en Visual Basic.</param>
        <param name="format">Chaîne de format .NET Framework (comme celles utilisées par <see cref="M:System.String.Format(System.String,System.Object)" />) qui convertit l'instance de <see cref="T:System.Object" /> retournée par l'expression de liaison aux données à un objet <see cref="T:System.String" />.</param>
        <summary>Évalue les expressions de liaison aux données au moment de l'exécution et met en forme le résultat sous forme de chaîne.</summary>
        <returns>Objet <see cref="T:System.String" /> qui résulte de l'évaluation de l'expression de liaison aux données et de sa conversion en un type chaîne.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de `expression` doit correspondre à une propriété publique.  
  
 Pour plus d’informations sur les chaînes de format dans le .NET Framework, consultez [mise en forme des Types](~/docs/standard/base-types/formatting-types.md).  
  
 Cette méthode est appelée automatiquement lorsque vous créez des liaisons de données dans un concepteur de développement rapide d’applications tels que Visual Studio. Vous pouvez également utiliser il déclarative pour convertir le <xref:System.Object> résultant de l’expression de liaison de données à un <xref:System.String>.  Pour utiliser la méthode de façon déclarative, utilisez la `<%#   %>` syntaxe d’expression, comme utilisé dans la liaison de données ASP.NET standard.  
  
 Cette méthode est particulièrement utile lors de la liaison de données aux contrôles qui se trouvent dans une liste de modèles.  
  
> [!NOTE]
>  Étant donné que cette méthode effectue une évaluation à liaison tardive, à l’aide de la réflexion au moment de l’exécution, cela peut provoquer les performances de façon notable par rapport à la syntaxe de liaison de données ASP.NET standard. Utilisez cette méthode judicieusement, en particulier lorsque la mise en forme de chaîne n’est pas obligatoire.  
  
 Pour une de la liste de contrôles Web, tel que <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.DataList>, ou <xref:System.Web.UI.WebControls.Repeater>, `container` doit être `Container.DataItem`. Si vous exécutez une liaison à la page, `container` doit être `Page`.  
  
 À compter de .NET Framework 4.5, vous pouvez utiliser la liaison de modèle pour simplifier certaines tâches que vous deviez effectuer via la liaison de données dans les versions antérieures. Pour une série de didacticiels sur l’utilisation de la liaison de modèle avec Web Forms, consultez [liaison de modèle et les Web Forms](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
   
  
## Examples  
 Les exemples suivants montrent comment utiliser le `Eval` méthode à laquelle lier des données <xref:System.Web.UI.WebControls.Repeater> contrôle. Il requiert une classe de données nommée produit.  
  
 [!code-csharp[System.Web.UI.DataBinder.Eval#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/product.cs#1)]
 [!code-vb[System.Web.UI.DataBinder.Eval#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/product.vb#1)]  
  
 Le fichier code-behind charge les données de test et lie ces données à un <xref:System.Web.UI.WebControls.Repeater> contrôle.  
  
 [!code-csharp[System.Web.UI.DataBinder.Eval#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts.aspx.cs#2)]
 [!code-vb[System.Web.UI.DataBinder.Eval#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts.aspx.vb#2)]  
  
 Dans la syntaxe déclarative pour le <xref:System.Web.UI.WebControls.Repeater> contrôle, vous utilisez le <xref:System.Web.UI.DataBinder.Eval%2A> méthode avec `Container.DataItem` pour le `container` paramètre.  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder.Eval#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts3.aspx#3)]
 [!code-aspx-vb[System.Web.UI.DataBinder.Eval#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts3.aspx#3)]  
  
 Ou, vous pouvez appeler `Eval` de fonction et pas inclure le `container` paramètre.  
  
 [!code-aspx-csharp[System.Web.UI.DataBinder.Eval#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.databinder.eval/cs/showproducts4.aspx#4)]
 [!code-aspx-vb[System.Web.UI.DataBinder.Eval#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.databinder.eval/vb/showproducts4.aspx#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.XPathBinder" />
        <altmember cref="T:System.Web.UI.IBindableTemplate" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">Mettre en forme des types dans .NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDataItem">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Récupère l'élément de données déclaré d'un objet.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDataItem">
      <MemberSignature Language="C#" Value="public static object GetDataItem (object container);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetDataItem(object container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetDataItem(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataItem (container As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetDataItem(System::Object ^ container);" />
      <MemberSignature Language="F#" Value="static member GetDataItem : obj -&gt; obj" Usage="System.Web.UI.DataBinder.GetDataItem container" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="container">Référence d'objet par rapport à laquelle l'expression est évaluée. Il doit s'agir d'un identificateur d'objet valide dans la langue spécifiée de la page.</param>
        <summary>Récupère l'élément de données déclaré d'un objet.</summary>
        <returns>Objet qui représente l'élément de données déclaré du conteneur. Retourne <see langword="null" /> si aucun élément de données n'est recherché ou si le conteneur évalue à <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode appelle la <xref:System.Web.UI.DataBinder.GetDataItem%28System.Object%2CSystem.Boolean%40%29> (méthode), en ignorant ses `foundDataItem` paramètre lors du retour du résultat.  
  
 Élément de données d’un objet est identifié dans un des deux façons. Si l’objet de conteneur implémente le <xref:System.Web.UI.IDataItemContainer> interface, le <xref:System.Web.UI.IDataItemContainer.DataItem%2A> propriété identifie l’élément de données, et sa valeur est retournée. Sinon, la méthode tente de résoudre et de retourner une propriété de conteneur nommée « DataItem ».  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
      </Docs>
    </Member>
    <Member MemberName="GetDataItem">
      <MemberSignature Language="C#" Value="public static object GetDataItem (object container, out bool foundDataItem);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetDataItem(object container, [out] bool&amp; foundDataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetDataItem(System.Object,System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDataItem (container As Object, ByRef foundDataItem As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetDataItem(System::Object ^ container, [Runtime::InteropServices::Out] bool % foundDataItem);" />
      <MemberSignature Language="F#" Value="static member GetDataItem : obj *  -&gt; obj" Usage="System.Web.UI.DataBinder.GetDataItem (container, foundDataItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="foundDataItem" Type="System.Boolean" RefType="out" />
      </Parameters>
      <Docs>
        <param name="container">Référence d'objet par rapport à laquelle l'expression est évaluée. Il doit s'agir d'un identificateur d'objet valide dans la langue spécifiée de la page.</param>
        <param name="foundDataItem">Valeur booléenne qui indique si l'élément de données a été résolu et retourné avec succès. Ce paramètre est passé sans être initialisé.</param>
        <summary>Récupère l'élément de données déclaré d'un objet, en indiquant le succès ou l'échec.</summary>
        <returns>Objet qui représente l'élément de données déclaré du conteneur. Retourne <see langword="null" /> si aucun élément de données n'est recherché ou si le conteneur évalue à <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Élément de données d’un objet est identifié de deux manières. Si l’objet de conteneur implémente le <xref:System.Web.UI.IDataItemContainer> interface, le <xref:System.Web.UI.IDataItemContainer.DataItem%2A> propriété identifie l’élément de données et est retournée. Sinon, la méthode tente de résoudre et de retourner une propriété de conteneur nommée « DataItem ».  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIndexedPropertyValue">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Récupère la valeur d'une propriété indexée.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIndexedPropertyValue">
      <MemberSignature Language="C#" Value="public static object GetIndexedPropertyValue (object container, string expr);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetIndexedPropertyValue(object container, string expr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIndexedPropertyValue (container As Object, expr As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetIndexedPropertyValue(System::Object ^ container, System::String ^ expr);" />
      <MemberSignature Language="F#" Value="static member GetIndexedPropertyValue : obj * string -&gt; obj" Usage="System.Web.UI.DataBinder.GetIndexedPropertyValue (container, expr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="expr" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">Référence d'objet par rapport à laquelle <paramref name="expr" /> est évalué. Il doit s'agir d'un identificateur d'objet valide dans la langue spécifiée pour la page.</param>
        <param name="expr">Chemin de navigation à partir de l'objet <paramref name="container" /> jusqu'à la valeur de propriété à placer dans la propriété du contrôle lié. Il doit s’agir d’une propriété de type chaîne ou de noms de champs séparés par des points, par exemple <c>Tables[0].DefaultView.[0].Price</c> en C# ou <c>Tables(0).DefaultView.(0).Price</c> en Visual Basic.</param>
        <summary>Récupère la valeur d'une propriété du conteneur spécifié et du chemin de navigation.</summary>
        <returns>Objet qui résulte de l'évaluation de l'expression de liaison de données.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur de `expr` doit correspondre à une propriété publique.  
  
 Pour une de la liste de contrôles Web, tel que <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.DataList>, ou <xref:System.Web.UI.WebControls.Repeater>, `container` doit être `Container.DataItem`. Si vous exécutez une liaison à la page, `container` doit être `Page`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="container" /> a la valeur <see langword="null" />.  
  
\- ou - 
 <paramref name="expr" /> ou <see langword="null" /> est une chaîne vide ("").</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="expr" /> n'est pas une expression indexée valide.  
  
\- ou - 
 <paramref name="expr" /> n'autorise pas l'accès indexé.</exception>
        <altmember cref="Overload:System.Web.UI.DataBinder.GetPropertyValue" />
      </Docs>
    </Member>
    <Member MemberName="GetIndexedPropertyValue">
      <MemberSignature Language="C#" Value="public static string GetIndexedPropertyValue (object container, string propName, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetIndexedPropertyValue(object container, string propName, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetIndexedPropertyValue(System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIndexedPropertyValue (container As Object, propName As String, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetIndexedPropertyValue(System::Object ^ container, System::String ^ propName, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member GetIndexedPropertyValue : obj * string * string -&gt; string" Usage="System.Web.UI.DataBinder.GetIndexedPropertyValue (container, propName, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="propName" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">Référence d'objet par rapport à laquelle l'expression est évaluée. Il doit s'agir d'un identificateur d'objet valide dans la langue spécifiée pour la page.</param>
        <param name="propName">Nom de la propriété contenant la valeur à récupérer.</param>
        <param name="format">Chaîne spécifiant le format d'affichage des résultats.</param>
        <summary>Récupère la valeur de la propriété spécifiée pour le conteneur indiqué, puis met en forme les résultats.</summary>
        <returns>Valeur de la propriété spécifiée au format défini par <paramref name="format" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> méthode appelle le <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> (méthode), puis utilise le <xref:System.String.Format%2A?displayProperty=nameWithType> méthode pour mettre en forme le résultat tel que spécifié dans le `format` paramètre. Une chaîne de format .NET Framework (comme celles utilisées par <xref:System.String.Format%2A?displayProperty=nameWithType>) convertit le <xref:System.Object> instance retournée par l’expression de liaison de données à un <xref:System.String> objet.  
  
 Les exceptions levées pour le <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> méthode s’appliquent à la <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> méthode également.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.DataBinder.GetIndexedPropertyValue%2A> méthode déclarative pour lier à une valeur indexée.  
  
 [!code-aspx-csharp[Classic DataBinder.Eval Example#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataBinder.Eval Example/CS/sourcecs.aspx#2)]
 [!code-aspx-vb[Classic DataBinder.Eval Example#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataBinder.Eval Example/VB/sourcevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.DataBinder.GetPropertyValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertyValue">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Récupère la valeur d'une propriété.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public static object GetPropertyValue (object container, string propName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object GetPropertyValue(object container, string propName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValue (container As Object, propName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ GetPropertyValue(System::Object ^ container, System::String ^ propName);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValue : obj * string -&gt; obj" Usage="System.Web.UI.DataBinder.GetPropertyValue (container, propName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="propName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">Objet qui contient la propriété.</param>
        <param name="propName">Nom de la propriété contenant la valeur à récupérer.</param>
        <summary>Récupère la valeur de la propriété spécifiée de l'objet indiqué.</summary>
        <returns>Valeur de la propriété spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.DataBinder.GetPropertyValue%2A> méthode est utilisée pour récupérer la valeur d’une propriété dans un objet.  
  
   
  
## Examples  
 L’exemple pour <xref:System.Web.UI.DataBinder> illustre l’utilisation de cette méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="container" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="propName" /> ou <see langword="null" /> est une chaîne vide ("").</exception>
        <exception cref="T:System.Web.HttpException">L'objet indiqué dans <paramref name="container" /> ne possède pas la propriété spécifiée dans <paramref name="propName" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyValue">
      <MemberSignature Language="C#" Value="public static string GetPropertyValue (object container, string propName, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetPropertyValue(object container, string propName, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.GetPropertyValue(System.Object,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertyValue (container As Object, propName As String, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetPropertyValue(System::Object ^ container, System::String ^ propName, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member GetPropertyValue : obj * string * string -&gt; string" Usage="System.Web.UI.DataBinder.GetPropertyValue (container, propName, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="propName" Type="System.String" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="container">Objet qui contient la propriété.</param>
        <param name="propName">Nom de la propriété contenant la valeur à récupérer.</param>
        <param name="format">Chaîne spécifiant le format d'affichage des résultats.</param>
        <summary>Récupère la valeur de la propriété spécifiée de l'objet indiqué, puis met en forme les résultats.</summary>
        <returns>Valeur de la propriété spécifiée au format défini par <paramref name="format" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette version de la <xref:System.Web.UI.DataBinder.GetPropertyValue%2A> méthode est utilisée pour récupérer et mettre en forme la valeur d’une propriété dans un objet.  
  
   
  
## Examples  
 L’exemple pour <xref:System.Web.UI.DataBinder> illustre l’utilisation de cette méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="container" /> a la valeur <see langword="null" />.  
  
\- ou - 
 <paramref name="propName" /> ou <see langword="null" /> est une chaîne vide ("").</exception>
        <exception cref="T:System.Web.HttpException">L'objet indiqué dans <paramref name="container" /> ne possède pas la propriété spécifiée dans <paramref name="propName" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public static bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinder.IsBindableType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsBindableType(Type ^ type);" />
      <MemberSignature Language="F#" Value="static member IsBindableType : Type -&gt; bool" Usage="System.Web.UI.DataBinder.IsBindableType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Type" /> qui représente le type de données à tester.</param>
        <summary>Détermine si le type de données spécifié peut être lié.</summary>
        <returns>
          <see langword="true" /> pour les types qui peuvent être automatiquement liés aux données dans les contrôles ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>