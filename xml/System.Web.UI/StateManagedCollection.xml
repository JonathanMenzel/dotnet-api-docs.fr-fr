<Type Name="StateManagedCollection" FullName="System.Web.UI.StateManagedCollection">
  <TypeSignature Language="C#" Value="public abstract class StateManagedCollection : System.Collections.IList, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit StateManagedCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.StateManagedCollection" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StateManagedCollection&#xA;Implements IList, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class StateManagedCollection abstract : System::Collections::IList, System::Web::UI::IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="2e0fa-101">Fournit une classe de base pour toutes les collections fortement typées qui gèrent des objets <see cref="T:System.Web.UI.IStateManager" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-101">Provides a base class for all strongly typed collections that manage <see cref="T:System.Web.UI.IStateManager" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0fa-102">Le <xref:System.Web.UI.StateManagedCollection> est la classe de base pour toutes les collections fortement typées qui stockent <xref:System.Web.UI.IStateManager> éléments, y compris <xref:System.Web.UI.WebControls.DataControlFieldCollection>, <xref:System.Web.UI.WebControls.ParameterCollection>, <xref:System.Web.UI.WebControls.StyleCollection>, <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>et d’autres.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-102">The <xref:System.Web.UI.StateManagedCollection> class is the base class for all strongly typed collections that store <xref:System.Web.UI.IStateManager> elements, including <xref:System.Web.UI.WebControls.DataControlFieldCollection>, <xref:System.Web.UI.WebControls.ParameterCollection>, <xref:System.Web.UI.WebControls.StyleCollection>, <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>, and others.</span></span> <span data-ttu-id="2e0fa-103">Le <xref:System.Web.UI.StateManagedCollection> collection gère son propre état ainsi que l’état des éléments qu’il contient.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-103">The <xref:System.Web.UI.StateManagedCollection> collection manages its own state as well as the state of the elements it contains.</span></span> <span data-ttu-id="2e0fa-104">Par conséquent, un appel à <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> enregistre l’état de la collection et l’état de tous les éléments actuellement contenus dans la collection.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-104">Therefore, a call to <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> saves the state of the collection and the state of all the elements currently contained by the collection.</span></span>  
  
 <span data-ttu-id="2e0fa-105">Les méthodes les plus importantes à prendre en compte lors de la dérivation à partir de la <xref:System.Web.UI.StateManagedCollection> classe sont <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A>, <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A>, <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>, <xref:System.Web.UI.StateManagedCollection.SetDirty%2A>, et <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A>.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-105">The most important methods to consider when deriving from the <xref:System.Web.UI.StateManagedCollection> class are <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A>, <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A>, <xref:System.Web.UI.StateManagedCollection.OnValidate%2A>, <xref:System.Web.UI.StateManagedCollection.SetDirty%2A>, and <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A>.</span></span> <span data-ttu-id="2e0fa-106">Le <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> et <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> méthodes sont utilisées pour stocker un index dans la vue d’état pour le type d’un élément contenu.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-106">The <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> and <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> methods are used to store an index in view state for the type of a contained element.</span></span> <span data-ttu-id="2e0fa-107">Le stockage d’un index plutôt qu’un nom de type qualifié complet améliore les performances.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-107">Storing an index rather than a fully qualified type name improves performance.</span></span> <span data-ttu-id="2e0fa-108">Le <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> méthode est appelée chaque fois que les éléments de la collection sont manipulés et valide les éléments en fonction des règles d’entreprise.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-108">The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called whenever elements of the collection are manipulated, and validates the elements according to business rules.</span></span> <span data-ttu-id="2e0fa-109">Actuellement, l’implémentation de la <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> méthode interdit `null` objets d’être stockées dans la collection ; Toutefois, vous pouvez substituer cette méthode pour définir votre propre comportement de validation dans un type dérivé.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-109">Currently, the implementation of the <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method prohibits `null` objects from being stored in the collection; however, you can override this method to define your own validation behavior in a derived type.</span></span> <span data-ttu-id="2e0fa-110">Le <xref:System.Web.UI.StateManagedCollection.SetDirty%2A> méthode force l’ensemble de la collection à l’état d’affichage, plutôt que de simplement sérialiser les modifications apportées à l’état depuis la dernière fois qu’il a été chargé.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-110">The <xref:System.Web.UI.StateManagedCollection.SetDirty%2A> method forces the entire collection to be serialized to view state, rather than just serializing changes made to state since the last time it was loaded.</span></span> <span data-ttu-id="2e0fa-111">Le <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A> méthode est une méthode abstraite, vous pouvez implémenter pour exécuter ce même comportement au niveau de l’élément.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-111">The <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A> method is an abstract method you can implement to perform this same behavior at the element level.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="2e0fa-112"><xref:System.Web.UI.StateManagedCollection> magasins qualifié d’assembly tapez les noms des éléments dans la vue États de la collection.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-112"><xref:System.Web.UI.StateManagedCollection> stores assembly-qualified type names of the collection items in view state.</span></span> <span data-ttu-id="2e0fa-113">Un visiteur Impossible de décoder l’état d’affichage et de récupérer le nom de type.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-113">A site visitor could decode the view state and retrieve the type name.</span></span> <span data-ttu-id="2e0fa-114">Si ce scénario crée un problème de sécurité de votre site Web, vous pouvez chiffrer manuellement le nom de type avant de le placer dans l’état d’affichage.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-114">If this scenario creates a security concern in your Web site, you can manually encrypt the type name before placing it in the view state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e0fa-115">L’exemple de code suivant montre comment dériver une classe de collection fortement typée de <xref:System.Web.UI.StateManagedCollection> pour contenir <xref:System.Web.UI.IStateManager> objets.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-115">The following code example demonstrates how to derive a strongly typed collection class from <xref:System.Web.UI.StateManagedCollection> to contain <xref:System.Web.UI.IStateManager> objects.</span></span> <span data-ttu-id="2e0fa-116">Dans cet exemple, le `CycleCollection` est dérivé pour contenir des instances de l’abstraite `Cycle` (classe), qui peut être `Bicycle` ou `Tricycle` objets.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-116">In this example, the `CycleCollection` is derived to contain instances of the abstract `Cycle` class, which can be either `Bicycle` or `Tricycle` objects.</span></span> <span data-ttu-id="2e0fa-117">Le `Cycle` la classe implémente le <xref:System.Web.UI.IStateManager> interface, car elle stocke la valeur de la `CycleColor` état d’affichage de la propriété.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-117">The `Cycle` class implements the <xref:System.Web.UI.IStateManager> interface because it stores the value of the `CycleColor` property in view state.</span></span>  
  
 [!code-csharp[Samples.AspNet.CycleCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.CycleCollection/CS/statemanagedcollectionsample.cs#1)]
 [!code-vb[Samples.AspNet.CycleCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.CycleCollection/VB/statemanagedcollectionsample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IStateManager" />
    <altmember cref="T:System.Web.UI.StateBag" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected StateManagedCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; StateManagedCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e0fa-118">Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.StateManagedCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-118">Initializes a new instance of the <see cref="T:System.Web.UI.StateManagedCollection" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0fa-119">Classes dérivées peuvent substituer le constructeur pour fournir une implémentation personnalisée.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-119">Derived classes can override the constructor to provide customized implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e0fa-120">Supprime tous les éléments de la collection <see cref="T:System.Web.UI.StateManagedCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-120">Removes all items from the <see cref="T:System.Web.UI.StateManagedCollection" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0fa-121">Le <xref:System.Web.UI.StateManagedCollection.OnClear%2A> méthode est appelée avant la <xref:System.Web.UI.StateManagedCollection.Clear%2A> méthode est appelée et le <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> méthode est appelée après <xref:System.Web.UI.StateManagedCollection.Clear%2A> a fini de supprimer des éléments de la collection.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-121">The <xref:System.Web.UI.StateManagedCollection.OnClear%2A> method is called before the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method is called, and the <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> method is called after <xref:System.Web.UI.StateManagedCollection.Clear%2A> has finished removing elements from the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnClear" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnClearComplete" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="2e0fa-122">
          <see cref="T:System.Array" /> unidimensionnel qui constitue la destination des éléments copiés à partir de la <see cref="T:System.Web.UI.StateManagedCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-122">The one-dimensional <see cref="T:System.Array" /> that is the destination of the elements copied from the <see cref="T:System.Web.UI.StateManagedCollection" />.</span></span> <span data-ttu-id="2e0fa-123"><see cref="T:System.Array" /> doit avoir une indexation de base zéro.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-123">The <see cref="T:System.Array" /> must have zero-based indexing.</span></span></param>
        <param name="index"><span data-ttu-id="2e0fa-124">Index de base zéro dans un <c>tableau</c> auquel commencer la copie.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-124">The zero-based index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="2e0fa-125">Copie les éléments de la collection <see cref="T:System.Web.UI.StateManagedCollection" /> dans un tableau, en commençant au niveau d'un index de tableau particulier.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-125">Copies the elements of the <see cref="T:System.Web.UI.StateManagedCollection" /> collection to an array, starting at a particular array index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0fa-126">Le tableau spécifié doit être d’un type compatible.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-126">The specified array must be of a compatible type.</span></span>  
  
 <span data-ttu-id="2e0fa-127">Les éléments sont copiés dans <xref:System.Array> dans l'ordre dans lequel l'énumérateur itère au sein de la collection <xref:System.Web.UI.StateManagedCollection>.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-127">The elements are copied to the <xref:System.Array> in the same order in which the enumerator iterates through the <xref:System.Web.UI.StateManagedCollection> collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2e0fa-128"><paramref name="array" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-128"><paramref name="array" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2e0fa-129"><paramref name="index" /> est inférieur à zéro.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-129"><paramref name="index" /> is less than zero.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="2e0fa-130"><paramref name="array" /> est multidimensionnel.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-130"><paramref name="array" /> is multidimensional.</span></span>  
  
 <span data-ttu-id="2e0fa-131">\- ou -</span><span class="sxs-lookup"><span data-stu-id="2e0fa-131">\- or -</span></span>  
  
 <span data-ttu-id="2e0fa-132"><paramref name="index" /> est supérieur ou égal à la longueur de <paramref name="array" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-132"><paramref name="index" /> is greater than or equal to the length of <paramref name="array" />.</span></span>  
  
 <span data-ttu-id="2e0fa-133">\- ou -</span><span class="sxs-lookup"><span data-stu-id="2e0fa-133">\- or -</span></span>  
  
 <span data-ttu-id="2e0fa-134">Le nombre d'éléments dans le <see cref="T:System.Web.UI.StateManagedCollection" /> source est supérieur à la quantité d'espace disponible entre le <paramref name="index" /> et la fin du <paramref name="array" /> de destination.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-134">The number of elements in the source <see cref="T:System.Web.UI.StateManagedCollection" /> is greater than the available space from the <paramref name="index" /> to the end of the destination <paramref name="array" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.StateManagedCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e0fa-135">Obtient le nombre d'éléments contenus dans la collection <see cref="T:System.Web.UI.StateManagedCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-135">Gets the number of elements contained in the <see cref="T:System.Web.UI.StateManagedCollection" /> collection.</span></span></summary>
        <value><span data-ttu-id="2e0fa-136">Nombre d'éléments contenus dans <see cref="T:System.Web.UI.StateManagedCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-136">The number of elements contained in the <see cref="T:System.Web.UI.StateManagedCollection" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateKnownType">
      <MemberSignature Language="C#" Value="protected virtual object CreateKnownType (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object CreateKnownType(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.CreateKnownType(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateKnownType (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ CreateKnownType(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2e0fa-137">Index issu de la liste ordonnée des types retournée par <see cref="M:System.Web.UI.StateManagedCollection.GetKnownTypes" />, du type de <see cref="T:System.Web.UI.IStateManager" /> à créer.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-137">The index, from the ordered list of types returned by <see cref="M:System.Web.UI.StateManagedCollection.GetKnownTypes" />, of the type of <see cref="T:System.Web.UI.IStateManager" /> to create.</span></span></param>
        <summary><span data-ttu-id="2e0fa-138">En cas de substitution dans une classe dérivée, crée une instance d'une classe qui implémente <see cref="T:System.Web.UI.IStateManager" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-138">When overridden in a derived class, creates an instance of a class that implements <see cref="T:System.Web.UI.IStateManager" />.</span></span> <span data-ttu-id="2e0fa-139">Le type d'objet créé repose sur le membre spécifié de la collection retournée par la méthode <see cref="M:System.Web.UI.StateManagedCollection.GetKnownTypes" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-139">The type of object created is based on the specified member of the collection returned by the <see cref="M:System.Web.UI.StateManagedCollection.GetKnownTypes" /> method.</span></span></summary>
        <returns><span data-ttu-id="2e0fa-140">Instance d'une classe dérivée de <see cref="T:System.Web.UI.IStateManager" />, conformément au <paramref name="index" /> fourni.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-140">An instance of a class derived from <see cref="T:System.Web.UI.IStateManager" />, according to the <paramref name="index" /> provided.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0fa-141">Le <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> méthode est appelée en interne par le <xref:System.Web.UI.StateManagedCollection> collection dans son implémentation de la <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23LoadViewState%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="2e0fa-141">The <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> method is called internally by the <xref:System.Web.UI.StateManagedCollection> collection in its implementation of the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23LoadViewState%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="2e0fa-142">Les collections dérivées substituent la <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> méthode pour retourner une instance par défaut de la <xref:System.Web.UI.IStateManager> type identifié par le `index`, qui correspond à l’un des types retournés par la <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="2e0fa-142">Derived collections override the <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> method to return a default instance of the <xref:System.Web.UI.IStateManager> type identified by the provided `index`, which maps to one of the types returned by the <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e0fa-143">L’exemple de code suivant montre comment il est fortement typé <xref:System.Web.UI.StateManagedCollection> la classe implémente le <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="2e0fa-143">The following code example demonstrates how a strongly typed <xref:System.Web.UI.StateManagedCollection> class implements the <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> method.</span></span> <span data-ttu-id="2e0fa-144">Le `CycleCollection` implémentation de <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> retourne l’instance par défaut soit un `Bicycle` ou `Tricycle` objet, selon l’index passé.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-144">The `CycleCollection` implementation of <xref:System.Web.UI.StateManagedCollection.CreateKnownType%2A> returns the default instance of either a `Bicycle` or `Tricycle` object, depending on the index passed.</span></span> <span data-ttu-id="2e0fa-145">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.StateManagedCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-145">This code example is part of a larger example provided for the <xref:System.Web.UI.StateManagedCollection> class.</span></span>  
  
 [!code-csharp[Samples.AspNet.CycleCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.CycleCollection/CS/statemanagedcollectionsample.cs#2)]
 [!code-vb[Samples.AspNet.CycleCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.CycleCollection/VB/statemanagedcollectionsample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="2e0fa-146">Dans tous les cas de non-substitution dans une classe dérivée.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-146">In all cases when not overridden in a derived class.</span></span></exception>
        <altmember cref="M:System.Web.UI.StateManagedCollection.GetKnownTypes" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e0fa-147">Retourne un itérateur qui itère au sein de la collection <see cref="T:System.Web.UI.StateManagedCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-147">Returns an iterator that iterates through the <see cref="T:System.Web.UI.StateManagedCollection" /> collection.</span></span></summary>
        <returns><span data-ttu-id="2e0fa-148"><see cref="T:System.Collections.IEnumerator" /> pouvant être utilisé pour itérer au sein de <see cref="T:System.Web.UI.StateManagedCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-148">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the <see cref="T:System.Web.UI.StateManagedCollection" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Collections.IEnumerable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="GetKnownTypes">
      <MemberSignature Language="C#" Value="protected virtual Type[] GetKnownTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type[] GetKnownTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.GetKnownTypes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetKnownTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual cli::array &lt;Type ^&gt; ^ GetKnownTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e0fa-149">En cas de substitution dans une classe dérivée, obtient un tableau de types <see cref="T:System.Web.UI.IStateManager" /> que la collection <see cref="T:System.Web.UI.StateManagedCollection" /> peut contenir.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-149">When overridden in a derived class, gets an array of <see cref="T:System.Web.UI.IStateManager" /> types that the <see cref="T:System.Web.UI.StateManagedCollection" /> collection can contain.</span></span></summary>
        <returns><span data-ttu-id="2e0fa-150">Tableau ordonné d'objets <see cref="T:System.Type" /> qui identifient les types d'objets <see cref="T:System.Web.UI.IStateManager" /> que la collection peut contenir.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-150">An ordered array of <see cref="T:System.Type" /> objects that identify the types of <see cref="T:System.Web.UI.IStateManager" /> objects the collection can contain.</span></span> <span data-ttu-id="2e0fa-151">L'implémentation par défaut retourne la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-151">The default implementation returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0fa-152">Le <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> méthode est appelée en interne par le <xref:System.Web.UI.StateManagedCollection> collection dans son implémentation de la <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="2e0fa-152">The <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> method is called internally by the <xref:System.Web.UI.StateManagedCollection> collection in its implementation of the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method.</span></span> <span data-ttu-id="2e0fa-153">Les collections dérivées substituent les <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> méthode pour retourner un tableau de <xref:System.Type> les objets qui représentent les types de collection peut contenir.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-153">Derived collections override the <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> method to return an array of <xref:System.Type> objects that represent the types the collection can contain.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e0fa-154">L’exemple de code suivant montre comment il est fortement typé <xref:System.Web.UI.StateManagedCollection> la classe implémente le <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="2e0fa-154">The following code example demonstrates how a strongly typed <xref:System.Web.UI.StateManagedCollection> class implements the <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> method.</span></span> <span data-ttu-id="2e0fa-155">Le `CycleCollection` implémentation de <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> retourne un <xref:System.Type> tableau de types connus, notamment `Bicycle` et `Tricycle` types.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-155">The `CycleCollection` implementation of <xref:System.Web.UI.StateManagedCollection.GetKnownTypes%2A> returns a <xref:System.Type> array of known types, including `Bicycle` and `Tricycle` types.</span></span> <span data-ttu-id="2e0fa-156">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.StateManagedCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-156">This code example is part of a larger example provided for the <xref:System.Web.UI.StateManagedCollection> class.</span></span>  
  
 [!code-csharp[Samples.AspNet.CycleCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.CycleCollection/CS/statemanagedcollectionsample.cs#2)]
 [!code-vb[Samples.AspNet.CycleCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.CycleCollection/VB/statemanagedcollectionsample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.StateManagedCollection.CreateKnownType(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="OnClear">
      <MemberSignature Language="C#" Value="protected virtual void OnClear ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.OnClear" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClear ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e0fa-157">En cas de substitution dans une classe dérivée, exécute une tâche supplémentaire avant que la méthode <see cref="M:System.Web.UI.StateManagedCollection.Clear" /> supprime tous les éléments de la collection.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-157">When overridden in a derived class, performs additional work before the <see cref="M:System.Web.UI.StateManagedCollection.Clear" /> method removes all items from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0fa-158">Collections dérivées de <xref:System.Web.UI.StateManagedCollection> peut remplacer le <xref:System.Web.UI.StateManagedCollection.OnClear%2A> méthode pour exécuter toute tâche supplémentaire avant que tous les éléments sont supprimés de la collection à l’aide de la <xref:System.Web.UI.StateManagedCollection.Clear%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="2e0fa-158">Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnClear%2A> method to perform any additional work before all items are removed from the collection using the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.StateManagedCollection.Clear" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnClearComplete" />
      </Docs>
    </Member>
    <Member MemberName="OnClearComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnClearComplete ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClearComplete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.OnClearComplete" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClearComplete ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClearComplete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e0fa-159">En cas de substitution dans une classe dérivée, exécute une tâche supplémentaire une fois tous les éléments de la collection supprimés par la méthode <see cref="M:System.Web.UI.StateManagedCollection.Clear" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-159">When overridden in a derived class, performs additional work after the <see cref="M:System.Web.UI.StateManagedCollection.Clear" /> method finishes removing all items from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0fa-160">Collections dérivées de <xref:System.Web.UI.StateManagedCollection> peut remplacer le <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> méthode pour effectuer aucun travail supplémentaire une fois tous les éléments sont supprimés de la collection à l’aide de la <xref:System.Web.UI.StateManagedCollection.Clear%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="2e0fa-160">Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> method to perform any additional work after all items are removed from the collection using the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.StateManagedCollection.Clear" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnClear" />
      </Docs>
    </Member>
    <Member MemberName="OnInsert">
      <MemberSignature Language="C#" Value="protected virtual void OnInsert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInsert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInsert (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInsert(int index, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2e0fa-161">Index de base zéro au niveau duquel <c>value</c> doit être inséré par la méthode <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-161">The zero-based index at which <c>value</c> should be inserted by the <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)" /> method.</span></span></param>
        <param name="value"><span data-ttu-id="2e0fa-162">Objet à insérer dans <see cref="T:System.Web.UI.StateManagedCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-162">The object to insert into the <see cref="T:System.Web.UI.StateManagedCollection" />.</span></span></param>
        <summary><span data-ttu-id="2e0fa-163">En cas de substitution dans une classe dérivée, exécute une tâche supplémentaire avant que la méthode <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)" /> ou <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)" /> ajoute un élément à la collection.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-163">When overridden in a derived class, performs additional work before the <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)" /> or <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)" /> method adds an item to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0fa-164">Collections dérivées de <xref:System.Web.UI.StateManagedCollection> peut remplacer le <xref:System.Web.UI.StateManagedCollection.OnInsert%2A> méthode pour exécuter toute tâche supplémentaire avant un élément est ajouté à la collection à l’aide de la <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> ou <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="2e0fa-164">Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnInsert%2A> method to perform any additional work before an item is added to the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnInsertComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnInsertComplete (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInsertComplete(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInsertComplete (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInsertComplete(int index, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2e0fa-165">Index de base zéro au niveau duquel <c>value</c> est inséré par la méthode <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-165">The zero-based index at which <c>value</c> is inserted by the <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)" /> method.</span></span></param>
        <param name="value"><span data-ttu-id="2e0fa-166">Objet à insérer dans <see cref="T:System.Web.UI.StateManagedCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-166">The object inserted into the <see cref="T:System.Web.UI.StateManagedCollection" />.</span></span></param>
        <summary><span data-ttu-id="2e0fa-167">En cas de substitution dans une classe dérivée, exécute une tâche supplémentaire après que la méthode <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)" /> ou <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)" /> a ajouté un élément à la collection.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-167">When overridden in a derived class, performs additional work after the <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)" /> or <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)" /> method adds an item to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0fa-168">Collections dérivées de <xref:System.Web.UI.StateManagedCollection> peut remplacer le <xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A> méthode pour effectuer aucun travail supplémentaire une fois un élément est ajouté à la collection à l’aide de la <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> ou <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="2e0fa-168">Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A> method to perform any additional work after an item is added to the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnRemove">
      <MemberSignature Language="C#" Value="protected virtual void OnRemove (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRemove(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRemove (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRemove(int index, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2e0fa-169">Index de base zéro de l'élément à supprimer, utilisé lorsque <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)" /> est appelé.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-169">The zero-based index of the item to remove, which is used when <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)" /> is called.</span></span></param>
        <param name="value"><span data-ttu-id="2e0fa-170">Objet à supprimer de <see cref="T:System.Web.UI.StateManagedCollection" />, utilisé lorsque <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)" /> est appelé.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-170">The object to remove from the <see cref="T:System.Web.UI.StateManagedCollection" />, which is used when <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)" /> is called.</span></span></param>
        <summary><span data-ttu-id="2e0fa-171">En cas de substitution dans une classe dérivée, exécute une tâche supplémentaire avant que la méthode <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)" /> ou <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)" /> supprime l'élément spécifié de la collection.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-171">When overridden in a derived class, performs additional work before the <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)" /> or <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)" /> method removes the specified item from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0fa-172">Collections dérivées de <xref:System.Web.UI.StateManagedCollection> peut remplacer le <xref:System.Web.UI.StateManagedCollection.OnRemove%2A> méthode pour exécuter toute tâche supplémentaire avant un élément est supprimé de la collection à l’aide de la <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> ou <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="2e0fa-172">Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnRemove%2A> method to perform any additional work before an item is removed from the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnRemoveComplete">
      <MemberSignature Language="C#" Value="protected virtual void OnRemoveComplete (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnRemoveComplete(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnRemoveComplete (index As Integer, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnRemoveComplete(int index, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2e0fa-173">Index de base zéro de l'élément à supprimer, utilisé lorsque <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)" /> est appelé.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-173">The zero-based index of the item to remove, which is used when <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)" /> is called.</span></span></param>
        <param name="value"><span data-ttu-id="2e0fa-174">Objet supprimé de <see cref="T:System.Web.UI.StateManagedCollection" />, utilisé lorsque <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)" /> est appelé.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-174">The object removed from the <see cref="T:System.Web.UI.StateManagedCollection" />, which is used when <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)" /> is called.</span></span></param>
        <summary><span data-ttu-id="2e0fa-175">En cas de substitution dans une classe dérivée, exécute une tâche supplémentaire après que la méthode <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)" /> ou <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)" /> a supprimé l'élément spécifié de la collection.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-175">When overridden in a derived class, performs additional work after the <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)" /> or <see cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)" /> method removes the specified item from the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0fa-176">Collections dérivées de <xref:System.Web.UI.StateManagedCollection> peut remplacer le <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> méthode pour effectuer aucun travail supplémentaire une fois un élément est supprimé de la collection à l’aide de la <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> ou <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="2e0fa-176">Collections derived from <xref:System.Web.UI.StateManagedCollection> can override the <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> method to perform any additional work after an item is removed from the collection using the <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Remove%2A> or <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23RemoveAt%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="OnValidate">
      <MemberSignature Language="C#" Value="protected virtual void OnValidate (object value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnValidate(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.OnValidate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnValidate (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnValidate(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2e0fa-177"><see cref="T:System.Web.UI.IStateManager" /> à valider.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-177">The <see cref="T:System.Web.UI.IStateManager" /> to validate.</span></span></param>
        <summary><span data-ttu-id="2e0fa-178">En cas de substitution dans une classe dérivée, valide un élément de la collection <see cref="T:System.Web.UI.StateManagedCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-178">When overridden in a derived class, validates an element of the <see cref="T:System.Web.UI.StateManagedCollection" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0fa-179">Le <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> méthode est appelée pour valider l’objet manipulé par le biais du <xref:System.Web.UI.StateManagedCollection> mise en oeuvre de la <xref:System.Collections.IList> méthodes d’interface.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-179">The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate the object manipulated through the <xref:System.Web.UI.StateManagedCollection> implementation of the <xref:System.Collections.IList> interface methods.</span></span> <span data-ttu-id="2e0fa-180">L’implémentation par défaut consiste à vérifier que l’objet manipulé par la collection n’est pas `null`; Cependant, collections dérivées de <xref:System.Web.UI.StateManagedCollection> remplacer le <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> méthode pour exécuter toute validation supplémentaire, telles que la vérification de type.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-180">The default implementation is to verify that the object manipulated by the collection is not `null`; however, collections derived from <xref:System.Web.UI.StateManagedCollection> override the <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method to perform any additional validation, such as type-checking.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2e0fa-181"><paramref name="value" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-181"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SetDirty">
      <MemberSignature Language="C#" Value="public void SetDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.SetDirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDirty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e0fa-182">Force la sérialisation de l'intégralité de la collection <see cref="T:System.Web.UI.StateManagedCollection" /> dans l'état d'affichage.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-182">Forces the entire <see cref="T:System.Web.UI.StateManagedCollection" /> collection to be serialized into view state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0fa-183">Le <xref:System.Web.UI.StateManagedCollection.SetDirty%2A> méthode force le <xref:System.Web.UI.StateManagedCollection> collection à sérialiser complètement (alors que le <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> méthode enregistre uniquement les informations de modification).</span><span class="sxs-lookup"><span data-stu-id="2e0fa-183">The <xref:System.Web.UI.StateManagedCollection.SetDirty%2A> method forces the <xref:System.Web.UI.StateManagedCollection> collection to be serialized completely (whereas the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method saves only the change information).</span></span> <span data-ttu-id="2e0fa-184">Cela est utile lorsqu’une collection a changé de manière significative et les informations de modification sont insuffisantes pour recréer l’objet en mémoire à partir de l’état d’affichage.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-184">This is useful when a collection has changed in a significant way and change information is insufficient to recreate the object in memory from view state.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.StateManagedCollection.SetDirtyObject(System.Object)" />
        <altmember cref="M:System.Web.UI.StateBag.SetDirty(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="SetDirtyObject">
      <MemberSignature Language="C#" Value="protected abstract void SetDirtyObject (object o);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void SetDirtyObject(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.SetDirtyObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Sub SetDirtyObject (o As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract void SetDirtyObject(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o"><span data-ttu-id="2e0fa-185"><see cref="T:System.Web.UI.IStateManager" /> qui doit se sérialiser intégralement.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-185">The <see cref="T:System.Web.UI.IStateManager" /> that should serialize itself completely.</span></span></param>
        <summary><span data-ttu-id="2e0fa-186">En cas de substitution dans une classe dérivée, commande à un <see langword="object" /> contenu dans la collection d'enregistrer l'intégralité de son état dans l'état d'affichage, plutôt que d'enregistrer uniquement des informations relatives aux modifications.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-186">When overridden in a derived class, instructs an <see langword="object" /> contained by the collection to record its entire state to view state, rather than recording only change information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0fa-187">Le <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A> méthode est appelée en interne par le <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>, <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A>, et <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> méthodes.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-187">The <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A> method is called internally by the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A>, <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Add%2A>, and <xref:System.Web.UI.StateManagedCollection.System%23Collections%23IList%23Insert%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2e0fa-188">L’exemple de code suivant montre comment il est fortement typé <xref:System.Web.UI.StateManagedCollection> classe implémente l’abstraite <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="2e0fa-188">The following code example demonstrates how a strongly typed <xref:System.Web.UI.StateManagedCollection> class implements the abstract <xref:System.Web.UI.StateManagedCollection.SetDirtyObject%2A> method.</span></span> <span data-ttu-id="2e0fa-189">Le `CycleCollection` utilise un <xref:System.Web.UI.StateBag> pour stocker ses informations d’état d’affichage de l’objet et délègue simplement l’appel à la <xref:System.Web.UI.StateBag.SetDirty%2A> méthode de la <xref:System.Web.UI.StateBag> objet.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-189">The `CycleCollection` uses a <xref:System.Web.UI.StateBag> object to store its view-state information, and simply delegates the call to the <xref:System.Web.UI.StateBag.SetDirty%2A> method of the <xref:System.Web.UI.StateBag> object.</span></span> <span data-ttu-id="2e0fa-190">Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.StateManagedCollection> classe.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-190">This code example is part of a larger example provided for the <xref:System.Web.UI.StateManagedCollection> class.</span></span>  
  
 [!code-csharp[Samples.AspNet.CycleCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.CycleCollection/CS/statemanagedcollectionsample.cs#2)]
 [!code-vb[Samples.AspNet.CycleCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.CycleCollection/VB/statemanagedcollectionsample.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.ICollection.Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e0fa-191">Obtient le nombre d'éléments contenus dans la collection <see cref="T:System.Web.UI.StateManagedCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-191">Gets the number of elements contained in the <see cref="T:System.Web.UI.StateManagedCollection" /> collection.</span></span></summary>
        <value><span data-ttu-id="2e0fa-192">Nombre d'éléments dans <see cref="T:System.Web.UI.StateManagedCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-192">The number of elements in the <see cref="T:System.Web.UI.StateManagedCollection" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e0fa-193">Obtient une valeur indiquant si la collection <see cref="T:System.Web.UI.StateManagedCollection" /> est synchronisée (thread-safe).</span><span class="sxs-lookup"><span data-stu-id="2e0fa-193">Gets a value indicating whether the <see cref="T:System.Web.UI.StateManagedCollection" /> collection is synchronized (thread safe).</span></span> <span data-ttu-id="2e0fa-194">Cette méthode retourne <see langword="false" /> dans tous les cas.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-194">This method returns <see langword="false" /> in all cases.</span></span></summary>
        <value>
          <span data-ttu-id="2e0fa-195"><see langword="false" /> dans tous les cas.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-195"><see langword="false" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e0fa-196">Obtient un objet qui peut être utilisé pour synchroniser l'accès à la collection <see cref="T:System.Web.UI.StateManagedCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-196">Gets an object that can be used to synchronize access to the <see cref="T:System.Web.UI.StateManagedCollection" /> collection.</span></span> <span data-ttu-id="2e0fa-197">Cette méthode retourne <see langword="null" /> dans tous les cas.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-197">This method returns <see langword="null" /> in all cases.</span></span></summary>
        <value>
          <span data-ttu-id="2e0fa-198"><see langword="null" /> dans tous les cas.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-198"><see langword="null" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e0fa-199">Retourne un itérateur qui itère au sein de la collection <see cref="T:System.Web.UI.StateManagedCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-199">Returns an iterator that iterates through the <see cref="T:System.Web.UI.StateManagedCollection" /> collection.</span></span></summary>
        <returns><span data-ttu-id="2e0fa-200"><see cref="T:System.Collections.IEnumerator" /> pouvant être utilisé pour itérer au sein de <see cref="T:System.Web.UI.StateManagedCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-200">An <see cref="T:System.Collections.IEnumerator" /> that can be used to iterate through the <see cref="T:System.Web.UI.StateManagedCollection" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Collections.IEnumerable.GetEnumerator" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2e0fa-201"><see langword="object" /> à ajouter à <see cref="T:System.Web.UI.StateManagedCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-201">The <see langword="object" /> to add to the <see cref="T:System.Web.UI.StateManagedCollection" />.</span></span></param>
        <summary><span data-ttu-id="2e0fa-202">Ajoute un élément à la collection <see cref="T:System.Web.UI.StateManagedCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-202">Adds an item to the <see cref="T:System.Web.UI.StateManagedCollection" /> collection.</span></span></summary>
        <returns><span data-ttu-id="2e0fa-203">Position à laquelle le nouvel élément a été inséré.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-203">The position at which the new element was inserted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0fa-204">Le <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> et <xref:System.Web.UI.StateManagedCollection.OnInsert%2A> méthodes sont appelées avant l’élément est ajouté à la collection et le <xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A> méthode est appelée une fois que l’élément est ajouté.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-204">The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> and <xref:System.Web.UI.StateManagedCollection.OnInsert%2A> methods are called before the element is added to the collection, and the <xref:System.Web.UI.StateManagedCollection.OnInsertComplete%2A> method is called after the element is added.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2e0fa-205">Le <paramref name="value" /> spécifié a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-205">The specified <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnValidate(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e0fa-206">Supprime tous les éléments de la collection <see cref="T:System.Web.UI.StateManagedCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-206">Removes all items from the <see cref="T:System.Web.UI.StateManagedCollection" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0fa-207">Le <xref:System.Web.UI.StateManagedCollection.OnClear%2A> méthode est appelée avant la <xref:System.Web.UI.StateManagedCollection.Clear%2A> méthode est appelée et le <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> méthode est appelée après <xref:System.Web.UI.StateManagedCollection.Clear%2A> a fini de supprimer des éléments de la collection.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-207">The <xref:System.Web.UI.StateManagedCollection.OnClear%2A> method is called before the <xref:System.Web.UI.StateManagedCollection.Clear%2A> method is called, and the <xref:System.Web.UI.StateManagedCollection.OnClearComplete%2A> method is called after <xref:System.Web.UI.StateManagedCollection.Clear%2A> has finished removing elements from the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.StateManagedCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2e0fa-208"><see langword="object" /> à rechercher dans <see cref="T:System.Web.UI.StateManagedCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-208">The <see langword="object" /> to locate in the <see cref="T:System.Web.UI.StateManagedCollection" />.</span></span></param>
        <summary><span data-ttu-id="2e0fa-209">Détermine si la collection <see cref="T:System.Web.UI.StateManagedCollection" /> contient une valeur spécifique.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-209">Determines whether the <see cref="T:System.Web.UI.StateManagedCollection" /> collection contains a specific value.</span></span></summary>
        <returns>
          <span data-ttu-id="2e0fa-210"><see langword="true" /> si l'objet est trouvé dans <see cref="T:System.Web.UI.StateManagedCollection" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-210"><see langword="true" /> if the object is found in the <see cref="T:System.Web.UI.StateManagedCollection" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="2e0fa-211">Si <see langword="null" /> est passé pour le paramètre de valeur, <see langword="false" /> est retourné.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-211">If <see langword="null" /> is passed for the value parameter, <see langword="false" /> is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0fa-212">Le <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> méthode est appelée pour valider `value` avant que la collection est cochée.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-212">The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the collection is checked.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnValidate(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2e0fa-213">Objet à rechercher dans <see cref="T:System.Web.UI.StateManagedCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-213">The object to locate in the <see cref="T:System.Web.UI.StateManagedCollection" />.</span></span></param>
        <summary><span data-ttu-id="2e0fa-214">Détermine l'index d'un élément spécifié de la collection <see cref="T:System.Web.UI.StateManagedCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-214">Determines the index of a specified item in the <see cref="T:System.Web.UI.StateManagedCollection" /> collection.</span></span></summary>
        <returns><span data-ttu-id="2e0fa-215">Index de <paramref name="value" /> s'il figure dans la liste ; sinon, -1.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-215">The index of <paramref name="value" />, if it is found in the list; otherwise, -1.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0fa-216">Le <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> méthode est appelée pour valider `value` avant que l’index est retourné.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-216">The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the index is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2e0fa-217">Index de base zéro auquel la <c>valeur</c> doit être insérée.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-217">The zero-based index at which <c>value</c> should be inserted.</span></span></param>
        <param name="value"><span data-ttu-id="2e0fa-218">Objet à insérer dans <see cref="T:System.Web.UI.StateManagedCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-218">The object to insert into the <see cref="T:System.Web.UI.StateManagedCollection" />.</span></span></param>
        <summary><span data-ttu-id="2e0fa-219">Insère un élément dans la collection <see cref="T:System.Web.UI.StateManagedCollection" /> au niveau de l'index spécifié.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-219">Inserts an item into the <see cref="T:System.Web.UI.StateManagedCollection" /> collection at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0fa-220">Si `index` est -1, `value` est ajouté au début de la <xref:System.Web.UI.StateManagedCollection> collection.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-220">If `index` is -1, `value` is appended to the beginning of the <xref:System.Web.UI.StateManagedCollection> collection.</span></span> <span data-ttu-id="2e0fa-221">Si `index` est égal au nombre d’éléments dans la collection, `value` est ajouté à la fin de la collection.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-221">If `index` equals the number of items in the collection, `value` is appended to the end of the collection.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2e0fa-222"><paramref name="index" /> spécifié est hors des limites de la collection.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-222">The specified <paramref name="index" /> is out of range of the collection.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2e0fa-223"><see cref="T:System.Web.UI.StateManagedCollection" /> est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-223">The <see cref="T:System.Web.UI.StateManagedCollection" /> is read-only.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="2e0fa-224">Le <paramref name="value" /> spécifié a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-224">The specified <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e0fa-225">Obtient une valeur indiquant si la collection <see cref="T:System.Web.UI.StateManagedCollection" /> est de taille fixe.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-225">Gets a value indicating whether the <see cref="T:System.Web.UI.StateManagedCollection" /> collection has a fixed size.</span></span> <span data-ttu-id="2e0fa-226">Cette méthode retourne <see langword="false" /> dans tous les cas.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-226">This method returns <see langword="false" /> in all cases.</span></span></summary>
        <value>
          <span data-ttu-id="2e0fa-227"><see langword="false" /> dans tous les cas.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-227"><see langword="false" /> in all cases.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e0fa-228">Obtient une valeur indiquant si la collection <see cref="T:System.Web.UI.StateManagedCollection" /> est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-228">Gets a value indicating whether the <see cref="T:System.Web.UI.StateManagedCollection" /> collection is read-only.</span></span></summary>
        <value>
          <span data-ttu-id="2e0fa-229"><see langword="true" /> si <see cref="T:System.Web.UI.StateManagedCollection" /> est en lecture seule ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-229"><see langword="true" /> if the <see cref="T:System.Web.UI.StateManagedCollection" /> is read-only; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2e0fa-230">Index de base zéro de l'élément à obtenir.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-230">The zero-based index of the element to get.</span></span></param>
        <summary><span data-ttu-id="2e0fa-231">Obtient l'élément <see cref="T:System.Web.UI.IStateManager" /> au niveau de l'index spécifié.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-231">Gets the <see cref="T:System.Web.UI.IStateManager" /> element at the specified index.</span></span></summary>
        <value><span data-ttu-id="2e0fa-232">Élément au niveau de l'index spécifié.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-232">The element at the specified index.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="2e0fa-233"><paramref name="index" /> spécifié est hors des limites de la collection.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-233">The specified <paramref name="index" /> is out of range of the collection.</span></span></exception>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="2e0fa-234">Objet à supprimer de <see cref="T:System.Web.UI.StateManagedCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-234">The object to remove from the <see cref="T:System.Web.UI.StateManagedCollection" />.</span></span></param>
        <summary><span data-ttu-id="2e0fa-235">Supprime la première occurrence de l'objet spécifié dans la collection <see cref="T:System.Web.UI.StateManagedCollection" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-235">Removes the first occurrence of the specified object from the <see cref="T:System.Web.UI.StateManagedCollection" /> collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0fa-236">Le <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> méthode est appelée pour valider `value` avant que la valeur est supprimée de la collection.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-236">The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the value is removed from the collection.</span></span> <span data-ttu-id="2e0fa-237">Le <xref:System.Web.UI.StateManagedCollection.OnRemove%2A> méthode est appelée avant que l’objet est supprimé et le <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> méthode est appelée une fois que l’objet est supprimé.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-237">The <xref:System.Web.UI.StateManagedCollection.OnRemove%2A> method is called before the object is removed, and the <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> method is called after the object is removed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2e0fa-238"><see cref="T:System.Web.UI.StateManagedCollection" /> est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-238">The <see cref="T:System.Web.UI.StateManagedCollection" /> is read-only.</span></span></exception>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="2e0fa-239">Index de base zéro de l'élément à supprimer.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-239">The zero-based index of the item to remove.</span></span></param>
        <summary><span data-ttu-id="2e0fa-240">Supprime l'élément <see cref="T:System.Web.UI.IStateManager" /> au niveau de l'index spécifié.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-240">Removes the <see cref="T:System.Web.UI.IStateManager" /> element at the specified index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0fa-241">Le <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> méthode est appelée pour valider `value` avant que la valeur est supprimée de la collection.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-241">The <xref:System.Web.UI.StateManagedCollection.OnValidate%2A> method is called to validate `value` before the value is removed from the collection.</span></span> <span data-ttu-id="2e0fa-242">Le <xref:System.Web.UI.StateManagedCollection.OnRemove%2A> méthode est appelée avant que l’objet est supprimé et le <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> méthode est appelée une fois que l’objet est supprimé.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-242">The <xref:System.Web.UI.StateManagedCollection.OnRemove%2A> method is called before the object is removed, and the <xref:System.Web.UI.StateManagedCollection.OnRemoveComplete%2A> method is called after the object is removed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="2e0fa-243"><see cref="T:System.Web.UI.StateManagedCollection" /> est en lecture seule.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-243">The <see cref="T:System.Web.UI.StateManagedCollection" /> is read-only.</span></span></exception>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.OnRemoveComplete(System.Int32,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.IStateManager.IsTrackingViewState { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="2e0fa-244">Obtient une valeur indiquant si la collection <see cref="T:System.Web.UI.StateManagedCollection" /> enregistre les modifications apportées à son état d'affichage.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-244">Gets a value indicating whether the <see cref="T:System.Web.UI.StateManagedCollection" /> collection is saving changes to its view state.</span></span></summary>
        <value>
          <span data-ttu-id="2e0fa-245"><see langword="true" /> si la collection est marquée pour enregistrer son propre état et l'état de tous les éléments <see cref="T:System.Web.UI.IStateManager" /> qu'elle contient ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-245"><see langword="true" /> if the collection is marked to save its own state and the state of all the <see cref="T:System.Web.UI.IStateManager" /> items it contains; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (savedState As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ savedState) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><span data-ttu-id="2e0fa-246">Objet qui représente l’état à restaurer de la collection et de ses éléments.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-246">An object that represents the collection and collection elements' state to restore.</span></span></param>
        <summary><span data-ttu-id="2e0fa-247">Restaure l'état d'affichage précédemment enregistré de la collection <see cref="T:System.Web.UI.StateManagedCollection" /> et les éléments <see cref="T:System.Web.UI.IStateManager" /> qu'elle contient.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-247">Restores the previously saved view state of the <see cref="T:System.Web.UI.StateManagedCollection" /> collection and the <see cref="T:System.Web.UI.IStateManager" /> items it contains.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0fa-248">Cette méthode restaure les informations d’état d’affichage qui a été enregistrées par le <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="2e0fa-248">This method restores view-state information that was saved by the <xref:System.Web.UI.StateManagedCollection.System%23Web%23UI%23IStateManager%23SaveViewState%2A> method.</span></span>  
  
 <span data-ttu-id="2e0fa-249">État d’affichage est l’accumulation des valeurs de propriétés d’un contrôle serveur.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-249">View state is the accumulation of the values of a server control's properties.</span></span> <span data-ttu-id="2e0fa-250">Ces valeurs sont automatiquement placées dans le contrôle de serveur <xref:System.Web.UI.Control.ViewState%2A> propriété, qui est une instance de la <xref:System.Web.UI.StateBag> classe.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-250">These values are automatically placed in the server control's <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class.</span></span> <span data-ttu-id="2e0fa-251">Valeur de cette propriété est ensuite rendue persistante dans un objet chaîne après l’enregistrement étape du cycle de vie du contrôle serveur.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-251">This property's value is then persisted to a string object after the save state stage of the server control life cycle.</span></span> <span data-ttu-id="2e0fa-252">Pour plus d’informations, consultez [NIB : les contrôles serveur Web ASP.NET](http://msdn.microsoft.com/library/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).</span><span class="sxs-lookup"><span data-stu-id="2e0fa-252">For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/library/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).</span></span>  
  
 <span data-ttu-id="2e0fa-253">Cette méthode est principalement utilisée par des développeurs de contrôles.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-253">This method is used primarily by control developers.</span></span> <span data-ttu-id="2e0fa-254">Vous pouvez substituer cette méthode pour spécifier la manière dont un contrôle serveur personnalisé restaure son état d’affichage.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-254">You can override this method to specify how a custom server control restores its view state.</span></span> <span data-ttu-id="2e0fa-255">Pour plus d’informations, consultez [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).</span><span class="sxs-lookup"><span data-stu-id="2e0fa-255">For more information, see [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e0fa-256">Enregistre les modifications apportées à la collection <see cref="T:System.Web.UI.StateManagedCollection" /> et à chaque objet <see cref="T:System.Web.UI.IStateManager" /> qu'elle contient, depuis la publication de la page sur le serveur.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-256">Saves the changes to the <see cref="T:System.Web.UI.StateManagedCollection" /> collection and each <see cref="T:System.Web.UI.IStateManager" /> object it contains since the time the page was posted back to the server.</span></span></summary>
        <returns><span data-ttu-id="2e0fa-257">Objet qui contient les modifications de l'état d'affichage de la collection <see cref="T:System.Web.UI.StateManagedCollection" /> et des éléments qu'elle contient.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-257">The object that contains the changes to the view state of the <see cref="T:System.Web.UI.StateManagedCollection" /> and the items it contains.</span></span> <span data-ttu-id="2e0fa-258">Si aucun état d'affichage n'est associé à la collection et à ses éléments, cette méthode retourne <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-258">If no view state is associated with the collection and its elements, this method returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0fa-259">Cette méthode est principalement utilisée par des développeurs de contrôles.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-259">This method is used primarily by control developers.</span></span>  
  
 <span data-ttu-id="2e0fa-260">État d’affichage est l’accumulation des valeurs de propriétés d’un contrôle serveur.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-260">View state is the accumulation of the values of a server control's properties.</span></span> <span data-ttu-id="2e0fa-261">Ces valeurs sont automatiquement placées dans le contrôle de serveur <xref:System.Web.UI.Control.ViewState%2A> propriété, qui est une instance de la <xref:System.Web.UI.StateBag> classe.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-261">These values are automatically placed in the server control's <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class.</span></span> <span data-ttu-id="2e0fa-262">Valeur de cette propriété est ensuite rendue persistante dans un objet chaîne après l’enregistrement étape du cycle de vie du contrôle serveur.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-262">This property's value is then persisted to a string object after the save state stage of the server control life cycle.</span></span> <span data-ttu-id="2e0fa-263">Pour plus d’informations, consultez [NIB : les contrôles serveur Web ASP.NET](http://msdn.microsoft.com/library/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).</span><span class="sxs-lookup"><span data-stu-id="2e0fa-263">For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/library/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).</span></span>  
  
 <span data-ttu-id="2e0fa-264">Lorsque l’état d’affichage est enregistré, cet objet chaîne est retourné au client en tant que variable qui est stockée dans un élément HTML masqué (`<input type="hidden">`).</span><span class="sxs-lookup"><span data-stu-id="2e0fa-264">When view state is saved, this string object is returned to the client as a variable that is stored in an HTML hidden element (`<input type="hidden">`).</span></span> <span data-ttu-id="2e0fa-265">Lorsque vous créez des contrôles serveur personnalisés, vous pouvez améliorer l’efficacité en substituant cette méthode et la modification de votre contrôle serveur <xref:System.Web.UI.Control.ViewState%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-265">When you author custom server controls, you can improve efficiency by overriding this method and modifying your server control's <xref:System.Web.UI.Control.ViewState%2A> property.</span></span> <span data-ttu-id="2e0fa-266">Pour plus d’informations, consultez [NIB : les contrôles serveur Web ASP.NET](http://msdn.microsoft.com/library/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1) et[ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).</span><span class="sxs-lookup"><span data-stu-id="2e0fa-266">For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/library/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1) and[ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="2e0fa-267">Commande à la collection <see cref="T:System.Web.UI.StateManagedCollection" /> et à chacun des objets <see cref="T:System.Web.UI.IStateManager" /> qu'elle contient de procéder au suivi des modifications apportées à leur état d'affichage afin qu'ils puissent être rendus persistants au fil des requêtes d'une même page.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-267">Causes the <see cref="T:System.Web.UI.StateManagedCollection" /> collection and each of the <see cref="T:System.Web.UI.IStateManager" /> objects it contains to track changes to their view state so they can be persisted across requests for the same page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2e0fa-268">État d’affichage est l’accumulation des valeurs de propriétés d’un contrôle serveur.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-268">View state is the accumulation of the values of a server control's properties.</span></span> <span data-ttu-id="2e0fa-269">Ces valeurs sont automatiquement placées dans le contrôle de serveur <xref:System.Web.UI.Control.ViewState%2A> propriété, qui est une instance de la <xref:System.Web.UI.StateBag> classe.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-269">These values are automatically placed in the server control's <xref:System.Web.UI.Control.ViewState%2A> property, which is an instance of the <xref:System.Web.UI.StateBag> class.</span></span> <span data-ttu-id="2e0fa-270">Valeur de cette propriété est ensuite rendue persistante dans un objet chaîne après l’enregistrement étape du cycle de vie du contrôle serveur.</span><span class="sxs-lookup"><span data-stu-id="2e0fa-270">This property's value is then persisted to a string object after the save state stage of the server control life cycle.</span></span> <span data-ttu-id="2e0fa-271">Pour plus d’informations, consultez [NIB : les contrôles serveur Web ASP.NET](http://msdn.microsoft.com/library/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).</span><span class="sxs-lookup"><span data-stu-id="2e0fa-271">For more information, see [NIB: ASP.NET Web Server Controls](http://msdn.microsoft.com/library/e18eb2f2-cf00-47ae-b1a1-dfc188a6dea1).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState" />
      </Docs>
    </Member>
  </Members>
</Type>