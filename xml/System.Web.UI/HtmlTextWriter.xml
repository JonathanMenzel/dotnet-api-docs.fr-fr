<Type Name="HtmlTextWriter" FullName="System.Web.UI.HtmlTextWriter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="582bbb480d6fa91ab39a27582c06d8590dd5f772" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36378355" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlTextWriter : System.IO.TextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HtmlTextWriter extends System.IO.TextWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlTextWriter&#xA;Inherits TextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlTextWriter : System::IO::TextWriter" />
  <TypeSignature Language="F#" Value="type HtmlTextWriter = class&#xA;    inherit TextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.TextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c0880-101">Écrit des caractères et du texte de balisage dans un flux de sortie de contrôle serveur ASP.NET.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0880-101">Writes markup characters and text to an ASP.NET server control output stream.</span>
      </span>
      <span data-ttu-id="c0880-102">Cette classe fournit des fonctionnalités de mise en forme utilisées par les contrôles serveur ASP.NET lors du rendu du balisage sur les clients.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0880-102">This class provides formatting capabilities that ASP.NET server controls use when rendering markup to clients.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-103">La <xref:System.Web.UI.HtmlTextWriter> classe est utilisée pour afficher le HTML 4.0 pour les navigateurs de bureau.</span><span class="sxs-lookup"><span data-stu-id="c0880-103">The <xref:System.Web.UI.HtmlTextWriter> class is used to render HTML 4.0 to desktop browsers.</span></span> <span data-ttu-id="c0880-104">Le <xref:System.Web.UI.HtmlTextWriter> est également la classe de base pour tous les enregistreurs de balisage dans le <xref:System.Web.UI> espace de noms, y compris le <xref:System.Web.UI.ChtmlTextWriter>, <xref:System.Web.UI.Html32TextWriter>, et <xref:System.Web.UI.XhtmlTextWriter> classes.</span><span class="sxs-lookup"><span data-stu-id="c0880-104">The <xref:System.Web.UI.HtmlTextWriter> is also the base class for all markup writers in the <xref:System.Web.UI> namespace, including the <xref:System.Web.UI.ChtmlTextWriter>, <xref:System.Web.UI.Html32TextWriter>, and <xref:System.Web.UI.XhtmlTextWriter> classes.</span></span> <span data-ttu-id="c0880-105">Ces classes sont utilisées pour écrire les éléments, attributs et les informations de style et de mise en forme pour différents types de balisage.</span><span class="sxs-lookup"><span data-stu-id="c0880-105">These classes are used to write the elements, attributes, and style and layout information for different types of markup.</span></span> <span data-ttu-id="c0880-106">En outre, ces classes sont utilisées par les classes de l’adaptateur de page et de contrôle qui sont associés à chaque langage de balisage.</span><span class="sxs-lookup"><span data-stu-id="c0880-106">In addition, these classes are used by the page and control adapter classes that are associated with each markup language.</span></span>  
  
 <span data-ttu-id="c0880-107">Dans la plupart des cas, ASP.NET utilise automatiquement le writer approprié pour l’appareil demandeur.</span><span class="sxs-lookup"><span data-stu-id="c0880-107">In most circumstances, ASP.NET automatically uses the appropriate writer for the requesting device.</span></span> <span data-ttu-id="c0880-108">Toutefois, si vous créez un writer de texte personnalisé ou si vous souhaitez spécifier un writer particulier pour restituer une page pour un périphérique spécifique, vous devez mapper le writer à la page dans la `controlAdapters` section du fichier browser application.</span><span class="sxs-lookup"><span data-stu-id="c0880-108">However, if you create a custom text writer or if you want to specify a particular writer to render a page for a specific device, you must map the writer to the page in the `controlAdapters` section of the application .browser file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-109">L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.Control.Render%2A> méthode d’un contrôle personnalisé qui est dérivé de la <xref:System.Web.UI.Control> classe.</span><span class="sxs-lookup"><span data-stu-id="c0880-109">The following code example shows how to override the <xref:System.Web.UI.Control.Render%2A> method of a custom control that is derived from the <xref:System.Web.UI.Control> class.</span></span> <span data-ttu-id="c0880-110">L’exemple de code montre comment utiliser différentes <xref:System.Web.UI.HtmlTextWriter> méthodes, propriétés et champs.</span><span class="sxs-lookup"><span data-stu-id="c0880-110">The code example illustrates how to use various <xref:System.Web.UI.HtmlTextWriter> methods, properties, and fields.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#1)]
 [!code-vb[MarkupTextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IO.TextWriter" />
    <altmember cref="T:System.Web.UI.Control" />
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="T:System.Web.UI.Adapters.ControlAdapter" />
    <altmember cref="T:System.Web.UI.Adapters.PageAdapter" />
    <altmember cref="T:System.Web.UI.ChtmlTextWriter" />
    <altmember cref="T:System.Web.UI.Html32TextWriter" />
    <altmember cref="T:System.Web.UI.XhtmlTextWriter" />
    <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-111">Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.HtmlTextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-111">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class.</span>
          </span>
        </summary>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextWriter(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlTextWriter : System.IO.TextWriter -&gt; System.Web.UI.HtmlTextWriter" Usage="new System.Web.UI.HtmlTextWriter writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="c0880-112">Instance de <see cref="T:System.IO.TextWriter" /> qui génère le rendu du contenu de balisage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-112">The <see cref="T:System.IO.TextWriter" /> instance that renders the markup content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-113">Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.HtmlTextWriter" /> qui utilise une chaîne de tabulation par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-113">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class that uses a default tab string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-114">Le <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> surcharge de la <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructeur utilise le <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constante lors de la mise en retrait d’une ligne est nécessaire.</span><span class="sxs-lookup"><span data-stu-id="c0880-114">The <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor uses the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant when indentation of a line is necessary.</span></span> <span data-ttu-id="c0880-115">Il appelle le <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> surcharge pour initialiser la nouvelle instance.</span><span class="sxs-lookup"><span data-stu-id="c0880-115">It calls the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> overload to initialize the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-116">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructeur pour créer un personnalisé <xref:System.Web.UI.HtmlTextWriter> objet nommé `StyledLabelHtmlWriter.` lors de la `MyPage` classe personnalisée, qui est dérivée de la <xref:System.Web.UI.Page> de classe, est demandé par un client navigateur, il utilise le `StyledLabelHtmlWriter` classe pour afficher son contenu dans le flux de sortie.</span><span class="sxs-lookup"><span data-stu-id="c0880-116">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#10](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#10)]
 [!code-csharp[HtmlTextWriter_Methods3#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#10)]
 [!code-vb[HtmlTextWriter_Methods3#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlTextWriter (System.IO.TextWriter writer, string tabString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string tabString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, tabString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlTextWriter(System::IO::TextWriter ^ writer, System::String ^ tabString);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.HtmlTextWriter : System.IO.TextWriter * string -&gt; System.Web.UI.HtmlTextWriter" Usage="new System.Web.UI.HtmlTextWriter (writer, tabString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="tabString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="c0880-117">
            <see cref="T:System.IO.TextWriter" /> qui restitue le contenu du balisage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-117">The <see cref="T:System.IO.TextWriter" /> that renders the markup content.</span>
          </span>
        </param>
        <param name="tabString">
          <span data-ttu-id="c0880-118">Chaîne à utiliser pour restituer un décrochement de ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-118">The string to use to render a line indentation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-119">Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.HtmlTextWriter" /> avec un caractère de chaîne de tabulation spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-119">Initializes a new instance of the <see cref="T:System.Web.UI.HtmlTextWriter" /> class with a specified tab string character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-120">Le <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> surcharge de la <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructeur utilise `tabString` lorsque la mise en retrait d’une ligne est nécessaire.</span><span class="sxs-lookup"><span data-stu-id="c0880-120">The <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor uses `tabString` when indentation of a line is necessary.</span></span> <span data-ttu-id="c0880-121">Il appelle le <xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType> constructeur pour initialiser la nouvelle instance de base.</span><span class="sxs-lookup"><span data-stu-id="c0880-121">It calls the <xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType> base constructor to initialize the new instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-122">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructeur pour créer un personnalisé <xref:System.Web.UI.HtmlTextWriter> objet nommé `StyledLabelHtmlWriter.` lors de la `MyPage` classe personnalisée, qui est dérivée de la <xref:System.Web.UI.Page> de classe, est demandé par un client navigateur, il utilise le `StyledLabelHtmlWriter` classe pour afficher son contenu dans le flux de sortie.</span><span class="sxs-lookup"><span data-stu-id="c0880-122">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29> constructor to create a custom <xref:System.Web.UI.HtmlTextWriter> object named `StyledLabelHtmlWriter.` When the `MyPage` custom class, which is derived from the <xref:System.Web.UI.Page> class, is requested by a client browser, it uses the `StyledLabelHtmlWriter` class to render its content to the output stream.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#10](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#10)]
 [!code-csharp[HtmlTextWriter_Methods3#10](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#10)]
 [!code-vb[HtmlTextWriter_Methods3#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-123">Ajoute l'attribut et la valeur de balisage spécifiés à la balise d'ouverture de l'élément créée par l'objet <see cref="T:System.Web.UI.HtmlTextWriter" /> à l'aide d'un appel ultérieur à la méthode <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-123">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string -&gt; unit&#xA;override this.AddAttribute : string * string -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c0880-124">Chaîne qui contient le nom de l'attribut à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-124">A string containing the name of the attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c0880-125">Chaîne contenant la valeur à assigner à l'attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-125">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-126">Ajoute l'attribut et la valeur de balisage spécifiés à la balise d'ouverture de l'élément créée par l'objet <see cref="T:System.Web.UI.HtmlTextWriter" /> à l'aide d'un appel ultérieur à la méthode <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-126">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-127">Utilisez le <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> surcharge de la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> méthode si l’attribut n’est pas une de la <xref:System.Web.UI.HtmlTextWriterAttribute> valeurs, ou si l’attribut n’est pas connu jusqu'à l’exécution.</span><span class="sxs-lookup"><span data-stu-id="c0880-127">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> method if the attribute is not one of the <xref:System.Web.UI.HtmlTextWriterAttribute> values, or if the attribute is not known until run time.</span></span>  
  
 <span data-ttu-id="c0880-128">Pour une instance de n’importe quel élément de balisage donné, la <xref:System.Web.UI.HtmlTextWriter> classe maintient une liste d’attributs de cet élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-128">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="c0880-129">Lorsque le <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> méthode est appelée, les attributs ajoutés par la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> méthode sont rendus dans la balise d’ouverture de l’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-129">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="c0880-130">La liste d’attributs est ensuite effacée de la <xref:System.Web.UI.HtmlTextWriter> objet.</span><span class="sxs-lookup"><span data-stu-id="c0880-130">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="c0880-131">Le modèle de codage pour le rendu des éléments de balisage est comme suit :</span><span class="sxs-lookup"><span data-stu-id="c0880-131">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="c0880-132">Utilisez la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> méthode pour ajouter des attributs à l’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-132">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="c0880-133">Utilisez la méthode <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0880-133">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="c0880-134">Si nécessaire, utilisez d’autres méthodes pour restituer le contenu trouvé entre l’élément d’ouverture et de balises de fermeture.</span><span class="sxs-lookup"><span data-stu-id="c0880-134">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="c0880-135">Utilisez la méthode <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0880-135">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-136">L’exemple de code suivant montre comment appeler le <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> méthode avant d’appeler le <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-136">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method before calling the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="c0880-137">Le code appelle deux surcharges différentes de <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> et deux surcharges différentes de <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> avant d’appeler le <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> méthode pour restituer un `<span>` élément dans le flux de sortie.</span><span class="sxs-lookup"><span data-stu-id="c0880-137">The code calls two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and two different overloads of <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> before it calls the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to render a `<span>` element to the output stream.</span></span> <span data-ttu-id="c0880-138">Le <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> méthode est utilisée pour définir l’attribut personnalisé nommé `CustomAttribute` et la valeur personnalisée nommée `CustomAttributeValue` pour la `<span>` élément rendu de ce code.</span><span class="sxs-lookup"><span data-stu-id="c0880-138">The <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29> method is used to define the custom attribute named `CustomAttribute` and the custom value named `CustomAttributeValue` for the `<span>` element that this code renders.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#2)]
 [!code-vb[MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(valuetype System.Web.UI.HtmlTextWriterAttribute key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (key As HtmlTextWriterAttribute, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::Web::UI::HtmlTextWriterAttribute key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string -&gt; unit&#xA;override this.AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string -&gt; unit" Usage="htmlTextWriter.AddAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="c0880-139">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> représentant l'attribut de balisage à ajouter au flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-139">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the markup attribute to add to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c0880-140">Chaîne contenant la valeur à assigner à l'attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-140">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-141">Ajoute l'attribut de balisage et la valeur de l'attribut à la balise d'ouverture de l'élément créée par l'objet <see cref="T:System.Web.UI.HtmlTextWriter" /> à l'aide d'un appel ultérieur à la méthode <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-141">Adds the markup attribute and the attribute value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-142">Utilisez le <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> surcharge de la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> méthode pour restituer un attribut de balisage standard.</span><span class="sxs-lookup"><span data-stu-id="c0880-142">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method to render a standard markup attribute.</span></span>  
  
 <span data-ttu-id="c0880-143">Pour une instance de n’importe quel élément de balisage donné, la <xref:System.Web.UI.HtmlTextWriter> classe maintient une liste d’attributs de cet élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-143">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="c0880-144">Lorsque le <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> méthode est appelée, tous les attributs qui sont ajoutés par le <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> méthode sont rendus dans la balise d’ouverture de l’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-144">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes that are added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="c0880-145">La liste d’attributs est ensuite effacée de la <xref:System.Web.UI.HtmlTextWriter>.</span><span class="sxs-lookup"><span data-stu-id="c0880-145">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter>.</span></span>  
  
 <span data-ttu-id="c0880-146">Le modèle de codage pour le rendu des éléments de balisage est comme suit :</span><span class="sxs-lookup"><span data-stu-id="c0880-146">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="c0880-147">Utilisez la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> méthode pour ajouter des attributs à l’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-147">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="c0880-148">Utilisez la méthode <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0880-148">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="c0880-149">Si nécessaire, utilisez d’autres méthodes pour restituer le contenu trouvé entre l’élément d’ouverture et de balises de fermeture.</span><span class="sxs-lookup"><span data-stu-id="c0880-149">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="c0880-150">Utilisez la méthode <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0880-150">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-151">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> surcharge de la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> méthode pour ajouter un `Onclick` d’attribut à un élément de balisage et puis définissez sa valeur sur le code ECMAScript suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-151">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method to add an `Onclick` attribute to a markup element, and then set its value to the following ECMAScript code:</span></span>  
  
```  
alert('Hello');  
```  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#1)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#1)]
 [!code-vb[System.Web.UI.HtmlTextWriter#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (string name, string value, bool fEndode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(string name, string value, bool fEndode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (name As String, value As String, fEndode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value, bool fEndode);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string * bool -&gt; unit&#xA;override this.AddAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value, fEndode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEndode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c0880-152">Chaîne qui contient le nom de l'attribut à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-152">A string containing the name of the attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c0880-153">Chaîne contenant la valeur à assigner à l'attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-153">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="fEndode">
          <span data-ttu-id="c0880-154">
            <see langword="true" /> pour encoder l'attribut et sa valeur ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-154">
              <see langword="true" /> to encode the attribute and its value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-155">Ajoute l'attribut et la valeur de balisage spécifiés à la balise d'ouverture de l'élément créée par l'objet <see cref="T:System.Web.UI.HtmlTextWriter" /> à l'aide d'un appel ultérieur à la méthode <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />, avec encodage facultatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-155">Adds the specified markup attribute and value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method, with optional encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-156">Utilisez le <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> surcharge de la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> méthode si l’attribut n’est pas une de la <xref:System.Web.UI.HtmlTextWriterAttribute> valeurs, ou si l’attribut n’est pas connue jusqu’au moment de l’exécution et l’encodage est nécessaire.</span><span class="sxs-lookup"><span data-stu-id="c0880-156">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method if the attribute is not one of the <xref:System.Web.UI.HtmlTextWriterAttribute> values, or if the attribute is not known until run time and encoding is needed.</span></span>  
  
 <span data-ttu-id="c0880-157">Pour une instance de n’importe quel élément de balisage donné, la <xref:System.Web.UI.HtmlTextWriter> classe maintient une liste d’attributs de cet élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-157">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="c0880-158">Lorsque le <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> méthode est appelée, les attributs ajoutés par la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> méthode sont rendus dans la balise d’ouverture de l’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-158">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="c0880-159">La liste d’attributs est ensuite effacée de la <xref:System.Web.UI.HtmlTextWriter> objet.</span><span class="sxs-lookup"><span data-stu-id="c0880-159">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="c0880-160">Utilisez le <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> méthode avec `fEncode` la valeur `true`, si l’attribut susceptible de contenir un guillemet («), un signe inférieur à (<), ou une esperluette (&).</span><span class="sxs-lookup"><span data-stu-id="c0880-160">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method with `fEncode` set to `true`, if the attribute can possibly contain a quotation mark ("), a less than sign (<), or an ampersand (&).</span></span> <span data-ttu-id="c0880-161">L’appel de méthode codera l’attribut pour satisfaire les exigences de l’appareil demandeur.</span><span class="sxs-lookup"><span data-stu-id="c0880-161">The method call will encode the attribute to meet the requirements of the requesting device.</span></span> <span data-ttu-id="c0880-162">Vous pouvez définir `fEncode` à `false`, si vous savez qu’aucun de ces caractères sera généré, ou si vous savez que l’attribut est déjà codé.</span><span class="sxs-lookup"><span data-stu-id="c0880-162">You can set `fEncode` to `false`, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</span></span>  
 
<span data-ttu-id="c0880-163">Si le type d’attribut est `Style`, la valeur ne sera pas être encodée même si `fEndode` est `true`.</span><span class="sxs-lookup"><span data-stu-id="c0880-163">If the attribute type is `Style`, the value won’t be encoded even if `fEndode` is `true`.</span></span> <span data-ttu-id="c0880-164">Assurez-vous que la valeur de style CSS-conforme et ne contient pas de code malveillant.</span><span class="sxs-lookup"><span data-stu-id="c0880-164">Ensure that the style value is CSS-compliant and doesn’t contain malicious code.</span></span>
  
 <span data-ttu-id="c0880-165">Le modèle de codage pour le rendu des éléments de balisage est comme suit :</span><span class="sxs-lookup"><span data-stu-id="c0880-165">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="c0880-166">Utilisez la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> méthode pour ajouter des attributs à l’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-166">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="c0880-167">Utilisez la méthode <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0880-167">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="c0880-168">Si nécessaire, utilisez d’autres méthodes pour restituer le contenu trouvé entre l’élément d’ouverture et de balises de fermeture.</span><span class="sxs-lookup"><span data-stu-id="c0880-168">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="c0880-169">Utilisez la méthode <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0880-169">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-170">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> surcharge de la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> méthode pour s’assurer qu’un attribut personnalisé, nommé `myattribute`, et sa valeur ne sont pas encodés pour un `<img>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-170">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> method to ensure that a custom attribute, named `myattribute`, and its value are not encoded for an `<img>` element.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="protected virtual void AddAttribute (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddAttribute(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddAttribute (name As String, value As String, key As HtmlTextWriterAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddAttribute(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit&#xA;override this.AddAttribute : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit" Usage="htmlTextWriter.AddAttribute (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c0880-171">Chaîne qui contient le nom de l'attribut à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-171">A string containing the name of the attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c0880-172">Chaîne contenant la valeur à assigner à l'attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-172">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c0880-173">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> qui représente l'attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-173">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-174">Ajoute l'attribut et la valeur de balisage spécifiés, ainsi qu'une valeur d'énumération <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />, à la balise d'ouverture de l'élément créée par l'objet <see cref="T:System.Web.UI.HtmlTextWriter" /> à l'aide d'un appel ultérieur à la méthode <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-174">Adds the specified markup attribute and value, along with an <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value, to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-175">Utilisez le <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> surcharge de la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29> méthode uniquement lorsque vous héritez les <xref:System.Web.UI.HtmlTextWriter> classe.</span><span class="sxs-lookup"><span data-stu-id="c0880-175">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29> method only when inheriting from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="c0880-176">Il vous permet de créer de nouveaux `name` et `key` paires pour les attributs.</span><span class="sxs-lookup"><span data-stu-id="c0880-176">It enables you to create new `name` and `key` pairs for attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="AddAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddAttribute (System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttribute(valuetype System.Web.UI.HtmlTextWriterAttribute key, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttribute (key As HtmlTextWriterAttribute, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttribute(System::Web::UI::HtmlTextWriterAttribute key, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string * bool -&gt; unit&#xA;override this.AddAttribute : System.Web.UI.HtmlTextWriterAttribute * string * bool -&gt; unit" Usage="htmlTextWriter.AddAttribute (key, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="c0880-177">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> représentant l'attribut de balisage à ajouter au flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-177">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that represents the markup attribute to add to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c0880-178">Chaîne contenant la valeur à assigner à l'attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-178">A string containing the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="c0880-179">
            <see langword="true" /> pour encoder l'attribut et sa valeur ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-179">
              <see langword="true" /> to encode the attribute and its value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-180">Ajoute l'attribut de balisage et la valeur de l'attribut à la balise d'ouverture de l'élément créée par l'objet <see cref="T:System.Web.UI.HtmlTextWriter" /> à l'aide d'un appel ultérieur à la méthode <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />, avec encodage facultatif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-180">Adds the markup attribute and the attribute value to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method, with optional encoding.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-181">Utilisez le <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> surcharge de la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> méthode pour restituer un attribut de balisage standard, avec encodage facultatif.</span><span class="sxs-lookup"><span data-stu-id="c0880-181">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method to render a standard markup attribute, with optional encoding.</span></span>  
  
 <span data-ttu-id="c0880-182">Pour une instance de n’importe quel élément de balisage donné, la <xref:System.Web.UI.HtmlTextWriter> classe maintient une liste d’attributs de cet élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-182">For an instance of any given markup element, the <xref:System.Web.UI.HtmlTextWriter> class maintains a list of attributes for that element.</span></span> <span data-ttu-id="c0880-183">Lorsque le <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> méthode est appelée, les attributs ajoutés par le <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> sont rendus dans la balise d’ouverture de l’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-183">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any attributes added by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> are rendered to the opening tag of the element.</span></span> <span data-ttu-id="c0880-184">La liste d’attributs est ensuite effacée de la <xref:System.Web.UI.HtmlTextWriter> objet.</span><span class="sxs-lookup"><span data-stu-id="c0880-184">The list of attributes is then cleared from the <xref:System.Web.UI.HtmlTextWriter> object.</span></span>  
  
 <span data-ttu-id="c0880-185">Utilisez le <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> méthode avec `fEncode` la valeur `true`, si l’attribut susceptible de contenir un guillemet («), un signe inférieur à (<), ou une esperluette (&).</span><span class="sxs-lookup"><span data-stu-id="c0880-185">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method with `fEncode` set to `true`, if the attribute can possibly contain a quotation mark ("), a less than sign (<), or an ampersand (&).</span></span> <span data-ttu-id="c0880-186">L’appel de méthode codera l’attribut pour satisfaire les exigences de l’appareil demandeur.</span><span class="sxs-lookup"><span data-stu-id="c0880-186">The method call will encode the attribute to meet the requirements of the requesting device.</span></span> <span data-ttu-id="c0880-187">Vous pouvez définir `fEncode` à `false`, si vous savez qu’aucun de ces caractères sera généré, ou si vous savez que l’attribut est déjà codé.</span><span class="sxs-lookup"><span data-stu-id="c0880-187">You can set `fEncode` to `false`, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</span></span>  
 
 <span data-ttu-id="c0880-188">Si le type d’attribut est `Style`, la valeur ne sera pas être encodée même si `fEncode` est `true`.</span><span class="sxs-lookup"><span data-stu-id="c0880-188">If the attribute type is `Style`, the value won’t be encoded even if `fEncode` is `true`.</span></span> <span data-ttu-id="c0880-189">Assurez-vous que la valeur de style CSS-conforme et ne contient pas de code malveillant.</span><span class="sxs-lookup"><span data-stu-id="c0880-189">Ensure that the style value is CSS-compliant and doesn’t contain malicious code.</span></span>

  
 <span data-ttu-id="c0880-190">Le modèle de codage pour le rendu des éléments de balisage est comme suit :</span><span class="sxs-lookup"><span data-stu-id="c0880-190">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="c0880-191">Utilisez la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> méthode pour ajouter des attributs à l’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-191">Use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add any attributes to the element.</span></span>  
  
-   <span data-ttu-id="c0880-192">Utilisez la méthode <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0880-192">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="c0880-193">Si nécessaire, utilisez d’autres méthodes pour restituer le contenu trouvé entre l’élément d’ouverture et de balises de fermeture.</span><span class="sxs-lookup"><span data-stu-id="c0880-193">Use other methods as needed to render the content found between the element's opening and closing tags.</span></span>  
  
-   <span data-ttu-id="c0880-194">Utilisez la méthode <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0880-194">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-195">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> méthode pour vous assurer que la valeur de chaîne est assignée à une `Alt` d’attribut pour un `<img>` élément est encodé à l’appareil demandeur.</span><span class="sxs-lookup"><span data-stu-id="c0880-195">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29> method to ensure that the string value that is assigned to an `Alt` attribute for an `<img>` element is encoded for the requesting device.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpRequest" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddStyleAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-196">Ajoute un attribut de style de balisage à la balise d'ouverture de l'élément créée par l'objet <see cref="T:System.Web.UI.HtmlTextWriter" /> à l'aide d'un appel ultérieur à la méthode <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-196">Adds a markup style attribute to the opening tag of the element that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object creates with a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </MemberGroup>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddStyleAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStyleAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStyleAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStyleAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : string * string -&gt; unit&#xA;override this.AddStyleAttribute : string * string -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c0880-197">Chaîne contenant l'attribut de style à ajouter. </span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-197">A string that contains the style attribute to add.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c0880-198">Chaîne qui contient la valeur à assigner à l'attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-198">A string that contains the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-199">Ajoute l'attribut de style de balisage spécifié et la valeur de l'attribut à la balise d'ouverture créée par un appel ultérieur à la méthode <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-199">Adds the specified markup style attribute and the attribute value to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-200">Utilisez le <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> surcharge de la <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> méthode lorsque le style n’est pas un membre de la <xref:System.Web.UI.HtmlTextWriterStyle> énumération ou n’est pas connu jusqu'à l’exécution.</span><span class="sxs-lookup"><span data-stu-id="c0880-200">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> method when the style is not a member of the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration or is not known until run time.</span></span>  
  
 <span data-ttu-id="c0880-201">La <xref:System.Web.UI.HtmlTextWriter> classe maintient une liste de styles pour les rendu des éléments de balisage.</span><span class="sxs-lookup"><span data-stu-id="c0880-201">The <xref:System.Web.UI.HtmlTextWriter> class maintains a list of styles for the markup elements it renders.</span></span> <span data-ttu-id="c0880-202">Lorsque le <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> méthode est appelée, les styles ajoutés par la <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> méthode sont rendus dans la balise d’ouverture de l’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-202">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any styles that are added by the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="c0880-203">La liste des styles est ensuite effacée.</span><span class="sxs-lookup"><span data-stu-id="c0880-203">The list of styles is then cleared.</span></span>  
  
 <span data-ttu-id="c0880-204">Le modèle de codage pour le rendu des éléments de balisage est comme suit :</span><span class="sxs-lookup"><span data-stu-id="c0880-204">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="c0880-205">Utilisez le <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> des attributs de méthode pour ajouter un style à l’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-205">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add any style attributes to the element.</span></span>  
  
-   <span data-ttu-id="c0880-206">Utilisez la méthode <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0880-206">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="c0880-207">Si nécessaire, utilisez d’autres méthodes pour restituer le contenu trouvé entre l’élément balises ouvrantes et fermantes.</span><span class="sxs-lookup"><span data-stu-id="c0880-207">Use other methods as needed to render the content found between the element opening and closing tags.</span></span>  
  
-   <span data-ttu-id="c0880-208">Utilisez la méthode <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0880-208">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-209">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> surcharge de la <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> méthode pour restituer `font-size` et `color` des attributs de style sur une `<p>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-209">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29> method to render `font-size` and `color` style attributes on a `<p>` element.</span></span> <span data-ttu-id="c0880-210">Cet exemple de code utilise la <xref:System.Web.UI.HtmlTextWriter> classe pour restituer le contenu du contrôle.</span><span class="sxs-lookup"><span data-stu-id="c0880-210">This code example uses the <xref:System.Web.UI.HtmlTextWriter> class to render the contents of the control.</span></span>  
  
 [!code-cpp[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/CPP/htmltextwriter_addstyleattribute.cpp#1)]
 [!code-csharp[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/CS/htmltextwriter_addstyleattribute.cs#1)]
 [!code-vb[HtmlTextWriter_AddStyleAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_AddStyleAttribute/VB/htmltextwriter_addstyleattribute.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void AddStyleAttribute (System.Web.UI.HtmlTextWriterStyle key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddStyleAttribute(valuetype System.Web.UI.HtmlTextWriterStyle key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddStyleAttribute (key As HtmlTextWriterStyle, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddStyleAttribute(System::Web::UI::HtmlTextWriterStyle key, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : System.Web.UI.HtmlTextWriterStyle * string -&gt; unit&#xA;override this.AddStyleAttribute : System.Web.UI.HtmlTextWriterStyle * string -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="c0880-211">
            <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> représentant l'attribut de style à ajouter au flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-211">An <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that represents the style attribute to add to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c0880-212">Chaîne qui contient la valeur à assigner à l'attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-212">A string that contains the value to assign to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-213">Ajoute l'attribut de style de balisage associé à la valeur <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> spécifiée et la valeur de l'attribut à la balise d'ouverture créée par un appel ultérieur à la méthode <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-213">Adds the markup style attribute associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> value and the attribute value to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-214">Utilisez le <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> surcharge de la <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29> méthode lorsque le style est un membre de la <xref:System.Web.UI.HtmlTextWriterStyle> énumération et est connu avant l’exécution.</span><span class="sxs-lookup"><span data-stu-id="c0880-214">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29> method when the style is a member of the <xref:System.Web.UI.HtmlTextWriterStyle> enumeration and is known before run time.</span></span>  
  
 <span data-ttu-id="c0880-215">La <xref:System.Web.UI.HtmlTextWriter> classe maintient une liste de styles pour les rendu des éléments de balisage.</span><span class="sxs-lookup"><span data-stu-id="c0880-215">The <xref:System.Web.UI.HtmlTextWriter> class maintains a list of styles for the markup elements it renders.</span></span> <span data-ttu-id="c0880-216">Lorsque le <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> méthode est appelée, les styles ajoutés par la <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> méthode sont rendus dans la balise d’ouverture de l’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-216">When the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method is called, any styles added by the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method are rendered to the opening tag of the element.</span></span> <span data-ttu-id="c0880-217">La liste des styles est ensuite effacée.</span><span class="sxs-lookup"><span data-stu-id="c0880-217">The list of styles is then cleared.</span></span>  
  
 <span data-ttu-id="c0880-218">Le modèle de codage pour le rendu des éléments de balisage est comme suit :</span><span class="sxs-lookup"><span data-stu-id="c0880-218">The coding pattern for rendering markup elements is as follows:</span></span>  
  
-   <span data-ttu-id="c0880-219">Utilisez le <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> des attributs de méthode pour ajouter un style à l’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-219">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add any style attributes to the element.</span></span>  
  
-   <span data-ttu-id="c0880-220">Utilisez la méthode <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0880-220">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span>  
  
-   <span data-ttu-id="c0880-221">Si nécessaire, utilisez d’autres méthodes pour restituer le contenu trouvé entre l’élément balises ouvrantes et fermantes.</span><span class="sxs-lookup"><span data-stu-id="c0880-221">Use other methods as needed to render the content found between the element opening and closing tags.</span></span>  
  
-   <span data-ttu-id="c0880-222">Utilisez la méthode <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0880-222">Use the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-223">L’exemple de code suivant montre comment utiliser une partie d’une substitution de la <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> méthode dans une classe dérivée de la <xref:System.Web.UI.HtmlTextWriter> classe.</span><span class="sxs-lookup"><span data-stu-id="c0880-223">The following code example demonstrates how to use part of an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="c0880-224">Le code vérifie si un `<Label>` élément est rendu.</span><span class="sxs-lookup"><span data-stu-id="c0880-224">The code checks whether a `<Label>` element is being rendered.</span></span> <span data-ttu-id="c0880-225">Dans ce cas, le <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> méthode est appelée pour vérifier si un `Color` attribut de style a été défini pour le `<Label>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-225">If so, the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method is called to check whether a `Color` style attribute has been defined for the `<Label>` element.</span></span> <span data-ttu-id="c0880-226">Si un `Color` attribut n’a pas été défini, le code appelle cette surcharge de la <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> méthode pour ajouter le `Color` d’attribut pour l’attribut de style, puis définissez sa valeur sur `red`.</span><span class="sxs-lookup"><span data-stu-id="c0880-226">If a `Color` attribute has not been defined, the code calls this overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add the `Color` attribute to the style attribute, and then set its value to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="AddStyleAttribute">
      <MemberSignature Language="C#" Value="protected virtual void AddStyleAttribute (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddStyleAttribute(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddStyleAttribute (name As String, value As String, key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddStyleAttribute(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="abstract member AddStyleAttribute : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; unit&#xA;override this.AddStyleAttribute : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; unit" Usage="htmlTextWriter.AddStyleAttribute (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c0880-227">Chaîne contenant l'attribut de style à ajouter.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-227">A string that contains the style attribute to be added.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c0880-228">Chaîne qui contient la valeur à assigner à l'attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-228">A string that contains the value to assign to the attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c0880-229">Valeur <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> qui représente l'attribut de style à ajouter. </span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-229">An <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that represents the style attribute to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-230">Ajoute l'attribut de style de balisage spécifié et la valeur d'attribut, avec une valeur d'énumération <see cref="T:System.Web.UI.HtmlTextWriterStyle" />, à la balise d'ouverture créée par un appel ultérieur à la méthode <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-230">Adds the specified markup style attribute and the attribute value, along with an <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value, to the opening markup tag created by a subsequent call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-231">Utilisez le <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> surcharge de la <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29> méthode uniquement lorsque vous héritez les <xref:System.Web.UI.HtmlTextWriter> classe.</span><span class="sxs-lookup"><span data-stu-id="c0880-231">Use the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29> method only when inheriting from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="c0880-232">Il vous permet de créer de nouveaux `name` et `value` paires pour <xref:System.Web.UI.HtmlTextWriterStyle> attributs.</span><span class="sxs-lookup"><span data-stu-id="c0880-232">It enables you to create new `name` and `value` pairs for <xref:System.Web.UI.HtmlTextWriterStyle> attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="BeginRender">
      <MemberSignature Language="C#" Value="public virtual void BeginRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.BeginRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginRender();" />
      <MemberSignature Language="F#" Value="abstract member BeginRender : unit -&gt; unit&#xA;override this.BeginRender : unit -&gt; unit" Usage="htmlTextWriter.BeginRender " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0880-233">Notifie un objet <see cref="T:System.Web.UI.HtmlTextWriter" />, ou un objet d'une classe dérivée, qu'un contrôle est sur le point d'être restitué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-233">Notifies an <see cref="T:System.Web.UI.HtmlTextWriter" /> object, or an object of a derived class, that a control is about to be rendered.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-234">Le <xref:System.Web.UI.HtmlTextWriter> implémentation de classe de la <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> méthode n’a aucune fonctionnalité.</span><span class="sxs-lookup"><span data-stu-id="c0880-234">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method has no functionality.</span></span> <span data-ttu-id="c0880-235">Vous devez substituer la <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> méthode dans une classe dérivée <xref:System.Web.UI.HtmlTextWriter> pour fournir vos propres fonctionnalités de rendu.</span><span class="sxs-lookup"><span data-stu-id="c0880-235">You must override the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method in a class derived from <xref:System.Web.UI.HtmlTextWriter> to provide your own rendering functionality.</span></span> <span data-ttu-id="c0880-236">Par exemple, dans un langage de balisage qui peut-être nécessiter `<p>` éléments soient restitués immédiatement avant un contrôle, mais où le besoin du `<p>` élément est déterminé plus tôt, vous pouvez utiliser le <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> remplacer.</span><span class="sxs-lookup"><span data-stu-id="c0880-236">For example, in a markup language that might require `<p>` elements to be rendered immediately ahead of a control, but where the need for the `<p>` element is determined earlier, you could use the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> override.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.Control" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public override void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Close();" />
      <MemberSignature Language="F#" Value="abstract member Close : unit -&gt; unit&#xA;override this.Close : unit -&gt; unit" Usage="htmlTextWriter.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0880-237">Ferme l'objet <see cref="T:System.Web.UI.HtmlTextWriter" /> et libère toutes les ressources système qui lui sont associées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-237">Closes the <see cref="T:System.Web.UI.HtmlTextWriter" /> object and releases any system resources associated with it.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-238">Cette implémentation de la <xref:System.Web.UI.HtmlTextWriter.Close%2A> les appels de méthode le <xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType> méthode de base.</span><span class="sxs-lookup"><span data-stu-id="c0880-238">This implementation of the <xref:System.Web.UI.HtmlTextWriter.Close%2A> method calls the <xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType> base method.</span></span>  
  
 <span data-ttu-id="c0880-239">Après un appel à la <xref:System.Web.UI.HtmlTextWriter.Close%2A> (méthode), les opérations sur les <xref:System.Web.UI.HtmlTextWriter> objet peut lever des exceptions, car toutes ses ressources ont été libérées.</span><span class="sxs-lookup"><span data-stu-id="c0880-239">Following a call to the <xref:System.Web.UI.HtmlTextWriter.Close%2A> method, any operations on the <xref:System.Web.UI.HtmlTextWriter> object might throw exceptions because all its resources have been released.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.IO.TextWriter.Close" />
        <altmember cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DefaultTabString">
      <MemberSignature Language="C#" Value="public const string DefaultTabString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DefaultTabString" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      <MemberSignature Language="VB.NET" Value="Public Const DefaultTabString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DefaultTabString;" />
      <MemberSignature Language="F#" Value="val mutable DefaultTabString : string" Usage="System.Web.UI.HtmlTextWriter.DefaultTabString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-240">Représente un caractère tabulation unique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-240">Represents a single tab character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-241">L’onglet unique est représenté par le caractère ASCII 9.</span><span class="sxs-lookup"><span data-stu-id="c0880-241">The single tab is represented by the ASCII 9 character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-242">L’exemple de code suivant montre comment créer un constructeur qui accepte un <xref:System.IO.TextWriter> objet en tant que paramètre et passe le <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> champ comme argument de paramètre à une deuxième version du constructeur.</span><span class="sxs-lookup"><span data-stu-id="c0880-242">The following code example demonstrates how to create a constructor that takes a <xref:System.IO.TextWriter> object as a parameter and passes the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> field as a parameter argument to a second version of the constructor.</span></span> <span data-ttu-id="c0880-243">Lorsque ce constructeur est appelé à partir du code, le <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> champ définit la stratégie de mise en retrait pour l’instance de l’enregistreur de balisage est utilisé par une page ou un adaptateur.</span><span class="sxs-lookup"><span data-stu-id="c0880-243">When this constructor is called from code, the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> field defines the indentation policy for the instance of the markup writer that is used by a page or an adapter.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#1)]
 [!code-vb[MarkupTextWriter_Methods3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="DoubleQuoteChar">
      <MemberSignature Language="C#" Value="public const char DoubleQuoteChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char DoubleQuoteChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Const DoubleQuoteChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char DoubleQuoteChar;" />
      <MemberSignature Language="F#" Value="val mutable DoubleQuoteChar : char" Usage="System.Web.UI.HtmlTextWriter.DoubleQuoteChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-244">Représente le caractère de guillemet (").</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-244">Represents the quotation mark (") character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-245">Le <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> champ est utilisé par le <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> méthode pour fermer un attribut.</span><span class="sxs-lookup"><span data-stu-id="c0880-245">The <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to close an attribute.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-246">L’exemple de code suivant montre comment restituer un `border` d’attribut pour un `<table>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-246">The following code example shows how to render a `border` attribute for a `<table>` element.</span></span> <span data-ttu-id="c0880-247">Le code appelle la <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode pour restituer l’attribut et sa valeur et les utilise le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode pour restituer la <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> et <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> champs.</span><span class="sxs-lookup"><span data-stu-id="c0880-247">The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> and <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> fields.</span></span>  
  
 <span data-ttu-id="c0880-248">Cet exemple de code restitue le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-248">This code example renders the following markup:</span></span>  
  
 `border="1"`  
  
 [!code-csharp[MarkupTextWriter_Constants#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#6)]
 [!code-vb[MarkupTextWriter_Constants#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.Write" />
        <altmember cref="M:System.IO.TextWriter.Dispose(System.Boolean)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EncodeAttributeValue">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-249">Encode la valeur de l’attribut de balisage spécifié selon les exigences de l'objet <see cref="T:System.Web.HttpRequest" /> du contexte actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-249">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="protected string EncodeAttributeValue (string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string EncodeAttributeValue(string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EncodeAttributeValue (value As String, fEncode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ EncodeAttributeValue(System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="member this.EncodeAttributeValue : string * bool -&gt; string" Usage="htmlTextWriter.EncodeAttributeValue (value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c0880-250">Chaîne contenant la valeur d’attribut à encoder.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-250">A string containing the attribute value to encode.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="c0880-251">
            <see langword="true" /> pour encoder la valeur d’attribut ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-251">
              <see langword="true" /> to encode the attribute value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-252">Encode la valeur de l’attribut de balisage spécifié selon les exigences de l'objet <see cref="T:System.Web.HttpRequest" /> du contexte actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-252">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0880-253">Chaîne contenant la valeur d’attribut encodée, <see langword="null" /> si <paramref name="value" /> est vide ou la valeur d’attribut non encodée si <paramref name="fEncode" /> est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-253">A string containing the encoded attribute value, <see langword="null" /> if <paramref name="value" /> is empty, or the unencoded attribute value if <paramref name="fEncode" /> is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-254">Utilisez le <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> surcharge de la <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> méthode si l’attribut n’est pas un <xref:System.Web.UI.HtmlTextWriterAttribute> valeur d’énumération ou n’est pas connu jusqu'à l’exécution.</span><span class="sxs-lookup"><span data-stu-id="c0880-254">Use the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29> method if the attribute is not an <xref:System.Web.UI.HtmlTextWriterAttribute> enumeration value or is not known until run time.</span></span>  
  
 <span data-ttu-id="c0880-255">Le <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> méthode supprime les guillemets doubles («), et commercial (&) et inférieur au signe < (inférieur à) afin de balises qui non valides n’est pas générés, quel que soit l’entrée.</span><span class="sxs-lookup"><span data-stu-id="c0880-255">The <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method removes double quotation marks ("), ampersands (&), and less than signs (<) so that invalid tags are not generated, regardless of the input.</span></span> <span data-ttu-id="c0880-256">L’encodage réel est effectué par le <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-256">The actual encoding is performed by the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-257">L’exemple de code suivant montre comment appeler le <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> méthode en tant que paramètre dans un <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> appel de méthode et puis encode un `color:blue` valeur d’attribut de style.</span><span class="sxs-lookup"><span data-stu-id="c0880-257">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call, and then encodes a `color:blue` style attribute value.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#5](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#5)]
 [!code-csharp[HtmlTextWriter_Methods#5](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#5)]
 [!code-vb[HtmlTextWriter_Methods#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="EncodeAttributeValue">
      <MemberSignature Language="C#" Value="protected virtual string EncodeAttributeValue (System.Web.UI.HtmlTextWriterAttribute attrKey, string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string EncodeAttributeValue(valuetype System.Web.UI.HtmlTextWriterAttribute attrKey, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function EncodeAttributeValue (attrKey As HtmlTextWriterAttribute, value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ EncodeAttributeValue(System::Web::UI::HtmlTextWriterAttribute attrKey, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member EncodeAttributeValue : System.Web.UI.HtmlTextWriterAttribute * string -&gt; string&#xA;override this.EncodeAttributeValue : System.Web.UI.HtmlTextWriterAttribute * string -&gt; string" Usage="htmlTextWriter.EncodeAttributeValue (attrKey, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrKey" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attrKey">
          <span data-ttu-id="c0880-258">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> qui représente l'attribut de balisage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-258">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> representing the markup attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c0880-259">Chaîne contenant la valeur d’attribut à encoder.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-259">A string containing the attribute value to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-260">Encode la valeur de l’attribut de balisage spécifié selon les exigences de l'objet <see cref="T:System.Web.HttpRequest" /> du contexte actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-260">Encodes the value of the specified markup attribute based on the requirements of the <see cref="T:System.Web.HttpRequest" /> object of the current context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0880-261">Chaîne qui contient la valeur de l'attribut encodée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-261">A string containing the encoded attribute value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-262">Le <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> méthode supprime les guillemets doubles («), et commercial (&) et inférieur au signe < (inférieur à) afin de balises qui non valides n’est pas générés, quel que soit l’entrée.</span><span class="sxs-lookup"><span data-stu-id="c0880-262">The <xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A> method removes double quotation marks ("), ampersands (&), and less than signs (<) so that invalid tags are not generated, regardless of the input.</span></span> <span data-ttu-id="c0880-263">L’encodage réel est effectué par le <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-263">The actual encoding is performed by the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="EncodeUrl">
      <MemberSignature Language="C#" Value="protected string EncodeUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string EncodeUrl(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function EncodeUrl (url As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ EncodeUrl(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.EncodeUrl : string -&gt; string" Usage="htmlTextWriter.EncodeUrl url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="c0880-264">Chaîne contenant l'URL à encoder.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-264">A string containing the URL to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-265">Effectue un encodage URL minimal en convertissant les espaces de l'URL en chaîne « %20 ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-265">Performs minimal URL encoding by converting spaces in the specified URL to the string "%20".</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0880-266">Chaîne contenant l'URL encodée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-266">A string containing the encoded URL.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-267">Encodage d’URL d’un caractère se compose d’un symbole de pourcentage (%), suivi d’une représentation hexadécimale à deux chiffres (non-respect de la casse) du point de code ISO-Latin du caractère.</span><span class="sxs-lookup"><span data-stu-id="c0880-267">URL encoding of a character consists of a percent symbol (%), followed by the two-digit hexadecimal representation (case-insensitive) of the ISO-Latin code point for the character.</span></span> <span data-ttu-id="c0880-268">La représentation hexadécimale d’un espace est 20.</span><span class="sxs-lookup"><span data-stu-id="c0880-268">The hexadecimal representation of a space is 20.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-269">L’exemple de code suivant montre comment appeler le <xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A> méthode pour convertir les espaces dans l’URL qui est passé en tant que paramètre dans un <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> appel de méthode.</span><span class="sxs-lookup"><span data-stu-id="c0880-269">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A> method to convert any spaces in the URL that is passed as a parameter in an <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method call.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#6](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#6)]
 [!code-csharp[HtmlTextWriter_Methods#6](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#6)]
 [!code-vb[HtmlTextWriter_Methods#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.UrlPathEncode(System.String)" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="T:System.Web.HttpRequest" />
      </Docs>
    </Member>
    <Member MemberName="Encoding">
      <MemberSignature Language="C#" Value="public override System.Text.Encoding Encoding { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Text.Encoding Encoding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.Encoding" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Encoding As Encoding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Text::Encoding ^ Encoding { System::Text::Encoding ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Encoding : System.Text.Encoding" Usage="System.Web.UI.HtmlTextWriter.Encoding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Encoding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-270">Obtient l'encodage utilisé par l'objet <see cref="T:System.Web.UI.HtmlTextWriter" /> pour écrire le contenu sur la page.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-270">Gets the encoding that the <see cref="T:System.Web.UI.HtmlTextWriter" /> object uses to write content to the page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0880-271">
            <see cref="T:System.Text.Encoding" /> dans lequel le balisage est écrit sur la page.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-271">The <see cref="T:System.Text.Encoding" /> in which the markup is written to the page.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-272">Le <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> propriété obtienne sa valeur de la base de <xref:System.IO.TextWriter> objet.</span><span class="sxs-lookup"><span data-stu-id="c0880-272">The <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> property obtains its value from the base <xref:System.IO.TextWriter> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-273">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> propriété pour écrire le type de codage utilisé par un contrôle personnalisé pour afficher le texte à la page qui la contient.</span><span class="sxs-lookup"><span data-stu-id="c0880-273">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Encoding%2A> property to write the type of encoding that a custom control uses to render text to the page that contains it.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Properties#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CPP/htmltextwriter_properties1.cpp#2)]
 [!code-csharp[HtmlTextWriter_Properties#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CS/htmltextwriter_properties1.cs#2)]
 [!code-vb[HtmlTextWriter_Properties#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Properties/VB/htmltextwriter_properties1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Text.Encoding" />
      </Docs>
    </Member>
    <Member MemberName="EndRender">
      <MemberSignature Language="C#" Value="public virtual void EndRender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndRender() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EndRender" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndRender ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndRender();" />
      <MemberSignature Language="F#" Value="abstract member EndRender : unit -&gt; unit&#xA;override this.EndRender : unit -&gt; unit" Usage="htmlTextWriter.EndRender " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0880-274">Notifie un objet <see cref="T:System.Web.UI.HtmlTextWriter" />, ou un objet d'une classe dérivée, qu'un contrôle a terminé le rendu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-274">Notifies an <see cref="T:System.Web.UI.HtmlTextWriter" /> object, or an object of a derived class, that a control has finished rendering.</span>
          </span>
          <span data-ttu-id="c0880-275">Vous pouvez utiliser cette méthode pour fermer les éléments de balisage ouverts dans la méthode <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-275">You can use this method to close any markup elements opened in the <see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-276">Le <xref:System.Web.UI.HtmlTextWriter> implémentation de classe de la <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> méthode n’a aucune fonctionnalité.</span><span class="sxs-lookup"><span data-stu-id="c0880-276">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> method has no functionality.</span></span> <span data-ttu-id="c0880-277">Vous devez substituer <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> dans une classe dérivée de la <xref:System.Web.UI.HtmlTextWriter> classe afin de fournir vos propres fonctionnalités de rendu.</span><span class="sxs-lookup"><span data-stu-id="c0880-277">You must override <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class to provide your own rendering functionality.</span></span>  
  
 <span data-ttu-id="c0880-278">Vous pouvez utiliser la <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> méthode pour fermer les éléments de balisage est ouvert dans le <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-278">You can use the <xref:System.Web.UI.HtmlTextWriter.EndRender%2A> method to close any markup elements opened in the <xref:System.Web.UI.HtmlTextWriter.BeginRender%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.BeginRender" />
      </Docs>
    </Member>
    <Member MemberName="EndTagLeftChars">
      <MemberSignature Language="C#" Value="public const string EndTagLeftChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EndTagLeftChars" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars" />
      <MemberSignature Language="VB.NET" Value="Public Const EndTagLeftChars As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EndTagLeftChars;" />
      <MemberSignature Language="F#" Value="val mutable EndTagLeftChars : string" Usage="System.Web.UI.HtmlTextWriter.EndTagLeftChars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-279">Représente le crochet gauche et la barre oblique (&lt;/) de la balise de fermeture d’un élément de balisage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-279">Represents the left angle bracket and slash mark (&lt;/) of the closing tag of a markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-280">Le <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> champ est utilisé par le <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> méthode pour construire des balises de fin d’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-280">The <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to construct markup element end tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-281">L’exemple de code suivant montre comment restituer la balise de fermeture d’un `<table>` élément de balisage à l’aide de la <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> et le <xref:System.Web.UI.HtmlTextWriter.TagRightChar> champs comme valeurs de paramètre dans les appels à la <xref:System.Web.UI.HtmlTextWriter.Write%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-281">The following code example shows how to render the closing tag of a `<table>` markup element by using the <xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars> and the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> fields as parameter values in calls to the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span>  
  
 <span data-ttu-id="c0880-282">Cet exemple de code restitue le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-282">This code example renders the following markup:</span></span>  
  
 `</table>`  
  
 [!code-csharp[MarkupTextWriter_Constants#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#4)]
 [!code-vb[MarkupTextWriter_Constants#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EnterStyle">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-283">Écrit la balise d'ouverture d'un élément de balisage qui contient des attributs qui implémentent la présentation et la mise en forme des caractères du style spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-283">Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EnterStyle">
      <MemberSignature Language="C#" Value="public virtual void EnterStyle (System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStyle(class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnterStyle(System::Web::UI::WebControls::Style ^ style);" />
      <MemberSignature Language="F#" Value="abstract member EnterStyle : System.Web.UI.WebControls.Style -&gt; unit&#xA;override this.EnterStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="htmlTextWriter.EnterStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="c0880-284">
            <see cref="T:System.Web.UI.WebControls.Style" /> qui spécifie la disposition et la mise en forme qu'il faut commencer à appliquer au bloc de balise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-284">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to begin applying to the block of markup.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-285">Écrit la balise d'ouverture d'un élément <see langword="&lt;span&gt;" /> qui contient des attributs qui implémentent la présentation et la mise en forme des caractères du style spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-285">Writes the opening tag of a <see langword="&lt;span&gt;" /> element that contains attributes that implement the layout and character formatting of the specified style.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-286">Utilisez la <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> méthode à appliquer des styles, tels que de la largeur de couleur ou une bordure en arrière-plan, à un bloc de balisage.</span><span class="sxs-lookup"><span data-stu-id="c0880-286">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply styles, such as background color or border width, to a block of markup.</span></span>  
  
 <span data-ttu-id="c0880-287">Le <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> et <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> méthodes permettent à un adaptateur pour appareil mobile ou un contrôle pour créer un balisage qui utilise la mise en forme des caractères du style spécifié.</span><span class="sxs-lookup"><span data-stu-id="c0880-287">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</span></span> <span data-ttu-id="c0880-288">Utilisez la même valeur pour `style` dans les <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> méthode que vous utilisez dans correspondant <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-288">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
 <span data-ttu-id="c0880-289">Le <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> surcharge de la <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> méthode restitue la balise d’ouverture d’un `<span>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-289">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> method renders the opening tag of a `<span>` element.</span></span> <span data-ttu-id="c0880-290">Cette méthode ajoute ensuite les attributs nécessaires et les attributs de style à la balise d’ouverture de la `<span>` élément pour afficher les paramètres spécifiés par le <xref:System.Web.UI.WebControls.Style> objet.</span><span class="sxs-lookup"><span data-stu-id="c0880-290">This method then adds the necessary attributes and style attributes to the opening tag of the `<span>` element to display the settings specified by the <xref:System.Web.UI.WebControls.Style> object.</span></span> <span data-ttu-id="c0880-291">Si vous souhaitez restituer un élément de balisage différent pour contenir les attributs et les attributs de style, utilisez la <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> de surcharge.</span><span class="sxs-lookup"><span data-stu-id="c0880-291">If you want to render a different markup element to contain the attributes and style attributes, use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-292">L’exemple de code suivant montre comment utiliser une classe personnalisée nommée `TextSample`, dérivée de la <xref:System.Web.UI.WebControls.WebControl> (classe), qui utilise le <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> méthode pour appliquer un <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style à une chaîne de texte.</span><span class="sxs-lookup"><span data-stu-id="c0880-292">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="c0880-293">Le <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> méthode restitue le code HTML `<span style="color:Navy;">`.</span><span class="sxs-lookup"><span data-stu-id="c0880-293">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="c0880-294">Le <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> appel de méthode ferme la `<span>` élément après le texte a été restitué.</span><span class="sxs-lookup"><span data-stu-id="c0880-294">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.ExitStyle" />
      </Docs>
    </Member>
    <Member MemberName="EnterStyle">
      <MemberSignature Language="C#" Value="public virtual void EnterStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EnterStyle(class System.Web.UI.WebControls.Style style, valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EnterStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberSignature Language="F#" Value="abstract member EnterStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.EnterStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.EnterStyle (style, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="c0880-295">
            <see cref="T:System.Web.UI.WebControls.Style" /> qui spécifie la disposition et la mise en forme qu'il faut commencer à appliquer au bloc de balise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-295">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to begin applying to the block of markup.</span>
          </span>
        </param>
        <param name="tag">
          <span data-ttu-id="c0880-296">
            <see cref="T:System.Web.UI.HtmlTextWriterTag" /> qui spécifie la balise d’ouverture de l’élément de balisage qui contiendra l’objet de style spécifié dans <c>style</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-296">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies the opening tag of the markup element that will contain the style object specified in <c>style</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-297">Écrit la balise d'ouverture d'un élément de balisage qui contient des attributs qui implémentent la présentation et la mise en forme des caractères du style spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-297">Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-298">Utilisez la <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> méthode à appliquer des styles, tels que de la largeur de couleur ou une bordure en arrière-plan, à un bloc de balisage.</span><span class="sxs-lookup"><span data-stu-id="c0880-298">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply styles, such as background color or border width, to a block of markup.</span></span>  
  
 <span data-ttu-id="c0880-299">Le <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> et <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> méthodes permettent à un adaptateur pour appareil mobile ou un contrôle pour créer un balisage qui utilise la mise en forme des caractères du style spécifié.</span><span class="sxs-lookup"><span data-stu-id="c0880-299">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</span></span> <span data-ttu-id="c0880-300">Utilisez la même valeur pour `style` dans les <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> méthode que vous utilisez dans correspondant <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-300">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
 <span data-ttu-id="c0880-301">Le <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> surcharge de la <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> méthode restitue la balise d’ouverture de l’élément spécifié par le `tag` paramètre.</span><span class="sxs-lookup"><span data-stu-id="c0880-301">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method renders the opening tag of the element specified by the `tag` parameter.</span></span> <span data-ttu-id="c0880-302">Le <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> méthode ajoute ensuite les attributs nécessaires et les attributs de style à la balise d’ouverture de l’élément pour afficher les paramètres qui est spécifiée par le <xref:System.Web.UI.WebControls.Style> objet.</span><span class="sxs-lookup"><span data-stu-id="c0880-302">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method then adds the necessary attributes and style attributes to the opening tag of the element to display the settings that are specified by the <xref:System.Web.UI.WebControls.Style> object.</span></span> <span data-ttu-id="c0880-303">Utilisez le <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> surcharge pour restituer la balise d’ouverture d’un `<span>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-303">Use the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29> overload to render the opening tag of a `<span>` element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-304">L’exemple de code suivant montre comment utiliser une classe personnalisée nommée `TextSample`, dérivée de la <xref:System.Web.UI.WebControls.WebControl> (classe), qui utilise le <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> méthode pour appliquer un <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style à une chaîne de texte.</span><span class="sxs-lookup"><span data-stu-id="c0880-304">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="c0880-305">Le <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> méthode restitue le code HTML`<span style="color:Navy;">`.</span><span class="sxs-lookup"><span data-stu-id="c0880-305">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML`<span style="color:Navy;">`.</span></span> <span data-ttu-id="c0880-306">Le <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> appel de méthode ferme la `<span>` élément après le texte a été restitué.</span><span class="sxs-lookup"><span data-stu-id="c0880-306">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.ExitStyle" />
      </Docs>
    </Member>
    <Member MemberName="EqualsChar">
      <MemberSignature Language="C#" Value="public const char EqualsChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char EqualsChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EqualsChar" />
      <MemberSignature Language="VB.NET" Value="Public Const EqualsChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char EqualsChar;" />
      <MemberSignature Language="F#" Value="val mutable EqualsChar : char" Usage="System.Web.UI.HtmlTextWriter.EqualsChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-307">Représente le signe égal (<see langword="=" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-307">Represents the equal sign (<see langword="=" />).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-308">Vous souhaiterez peut-être utiliser le <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> champ au lieu du <xref:System.Web.UI.HtmlTextWriter.EqualsChar> champ lors de la construction du séparateur d’ouverture d’une valeur d’attribut.</span><span class="sxs-lookup"><span data-stu-id="c0880-308">You might want to use the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> field instead of the <xref:System.Web.UI.HtmlTextWriter.EqualsChar> field when constructing the opening delimiter of an attribute value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-309">L’exemple de code suivant montre comment restituer le `src` attribut et une partie de sa valeur pour un `<img>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-309">The following code example shows how to render the `src` attribute and part of its value for an `<img>` element.</span></span> <span data-ttu-id="c0880-310">Le code utilise le <xref:System.Web.UI.HtmlTextWriter.EqualsChar> champ dans un <xref:System.Web.UI.HtmlTextWriter.Write%2A> appel de méthode pour restituer le signe égal (=) entre le `src` attribut et sa valeur.</span><span class="sxs-lookup"><span data-stu-id="c0880-310">The code uses the <xref:System.Web.UI.HtmlTextWriter.EqualsChar> field in a <xref:System.Web.UI.HtmlTextWriter.Write%2A> method call to render the equal sign (=) between the `src` attribute and its value.</span></span>  
  
 <span data-ttu-id="c0880-311">Cet exemple de code restitue le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-311">This code example renders the following markup:</span></span>  
  
 `src="/images/`  
  
 [!code-csharp[MarkupTextWriter_Constants#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#10)]
 [!code-vb[MarkupTextWriter_Constants#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      </Docs>
    </Member>
    <Member MemberName="EqualsDoubleQuoteString">
      <MemberSignature Language="C#" Value="public const string EqualsDoubleQuoteString;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EqualsDoubleQuoteString" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      <MemberSignature Language="VB.NET" Value="Public Const EqualsDoubleQuoteString As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EqualsDoubleQuoteString;" />
      <MemberSignature Language="F#" Value="val mutable EqualsDoubleQuoteString : string" Usage="System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-312">Représente un signe égal (=) et un guillemet double (") regroupés dans une chaîne (=").</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-312">Represents an equal sign (=) and a double quotation mark (") together in a string (=").</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-313">Le <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> champ est utilisé par le <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> et <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> méthodes pour construire le séparateur d’ouverture des valeurs d’attribut.</span><span class="sxs-lookup"><span data-stu-id="c0880-313">The <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> methods to construct the opening delimiter of attribute values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-314">L’exemple de code suivant montre comment restituer un `border` d’attribut pour un `<table>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-314">The following code example shows how to render a `border` attribute for a `<table>` element.</span></span> <span data-ttu-id="c0880-315">Le code appelle la <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode pour restituer l’attribut et sa valeur et les utilise le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode pour restituer la <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> et <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> champs.</span><span class="sxs-lookup"><span data-stu-id="c0880-315">The code calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the attribute and its value and uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the <xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString> and <xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar> fields.</span></span>  
  
 <span data-ttu-id="c0880-316">Cet exemple de code restitue le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-316">This code example renders the following markup:</span></span>  
  
 `border="1"`  
  
 [!code-csharp[MarkupTextWriter_Constants#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#6)]
 [!code-vb[MarkupTextWriter_Constants#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ExitStyle">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-317">Écrit la balise de fermeture d'un élément de balisage pour terminer la disposition et la mise en forme de caractères spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-317">Writes the closing tag of a markup element to end the specified layout and character formatting.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExitStyle">
      <MemberSignature Language="C#" Value="public virtual void ExitStyle (System.Web.UI.WebControls.Style style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStyle(class System.Web.UI.WebControls.Style style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExitStyle(System::Web::UI::WebControls::Style ^ style);" />
      <MemberSignature Language="F#" Value="abstract member ExitStyle : System.Web.UI.WebControls.Style -&gt; unit&#xA;override this.ExitStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="htmlTextWriter.ExitStyle style" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="c0880-318">
            <see cref="T:System.Web.UI.WebControls.Style" /> qui spécifie la disposition et la mise en forme à fermer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-318">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to close.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-319">Écrit la balise de fermeture d'un élément <see langword="&lt;span&gt;" /> pour terminer la disposition et la mise en forme de caractères spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-319">Writes the closing tag of a <see langword="&lt;span&gt;" /> element to end the specified layout and character formatting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-320">Le <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> surcharge de la <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29> méthode restitue la balise de fermeture d’un `<span>` élément après la balise de fermeture du contrôle, la fermeture de l’élément ouvert par correspondant <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> appeler.</span><span class="sxs-lookup"><span data-stu-id="c0880-320">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29> method renders the closing tag of a `<span>` element after the closing tag of the control, closing the element opened by the corresponding <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> call.</span></span>  
  
 <span data-ttu-id="c0880-321">Le <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> et <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> méthodes permettent à un adaptateur pour appareil mobile ou un contrôle pour créer le balisage qui commence et se termine un bloc à l’aide de la mise en forme des caractères du style spécifié.</span><span class="sxs-lookup"><span data-stu-id="c0880-321">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</span></span> <span data-ttu-id="c0880-322">Utilisez la même valeur pour `style` dans les <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> méthode que vous utilisez dans correspondant <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-322">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-323">L’exemple de code suivant montre comment utiliser une classe personnalisée nommée `TextSample`, dérivée de la <xref:System.Web.UI.WebControls.WebControl> (classe), qui utilise le <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> méthode pour appliquer un <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style à une chaîne de texte.</span><span class="sxs-lookup"><span data-stu-id="c0880-323">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="c0880-324">Le <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> méthode restitue le code HTML `<span style="color:Navy;">`.</span><span class="sxs-lookup"><span data-stu-id="c0880-324">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="c0880-325">Le <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> appel de méthode ferme la `<span>` élément après le texte a été restitué.</span><span class="sxs-lookup"><span data-stu-id="c0880-325">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="ExitStyle">
      <MemberSignature Language="C#" Value="public virtual void ExitStyle (System.Web.UI.WebControls.Style style, System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExitStyle(class System.Web.UI.WebControls.Style style, valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExitStyle(System::Web::UI::WebControls::Style ^ style, System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberSignature Language="F#" Value="abstract member ExitStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.ExitStyle : System.Web.UI.WebControls.Style * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.ExitStyle (style, tag)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Web.UI.WebControls.Style" />
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="style">
          <span data-ttu-id="c0880-326">
            <see cref="T:System.Web.UI.WebControls.Style" /> qui spécifie la disposition et le formatage à ne plus appliquer au texte de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-326">A <see cref="T:System.Web.UI.WebControls.Style" /> that specifies the layout and formatting to stop applying to the output text.</span>
          </span>
        </param>
        <param name="tag">
          <span data-ttu-id="c0880-327">
            <see cref="T:System.Web.UI.HtmlTextWriterTag" /> qui spécifie la balise de fermeture de l’élément de balisage contenant les attributs appliqués au style spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-327">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies the closing tag of the markup element that contained the attributes that applied the specified style.</span>
          </span>
          <span data-ttu-id="c0880-328">Cela doit correspondre à la clé transmise dans l’appel <see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /> correspondant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-328">This must match the key passed in the corresponding <see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /> call.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-329">Écrit la balise de fermeture de l’élément de balisage spécifié pour terminer la disposition et le formatage des caractères spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-329">Writes the closing tag of the specified markup element to end the specified layout and character formatting.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-330">Le <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> surcharge de la <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> méthode restitue la balise de fermeture de l’élément spécifié par `tag` après la balise de fermeture du contrôle, fermeture de l’élément qui a été ouvert par correspondant <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> appel de méthode.</span><span class="sxs-lookup"><span data-stu-id="c0880-330">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method renders the closing tag of the element that is specified by `tag` after the closing tag of the control, closing the element that was opened by the corresponding <xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29> method call.</span></span>  
  
 <span data-ttu-id="c0880-331">Le <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> et <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> méthodes permettent à un adaptateur pour appareil mobile ou un contrôle pour créer le balisage qui commence et se termine un bloc à l’aide de la mise en forme des caractères du style spécifié.</span><span class="sxs-lookup"><span data-stu-id="c0880-331">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> and <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</span></span> <span data-ttu-id="c0880-332">Utilisez la même valeur pour `style` dans les <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> méthode que vous utilisez dans correspondant <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-332">Use the same value for `style` in the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method that you use in the corresponding <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-333">L’exemple de code suivant montre comment utiliser une classe personnalisée nommée `TextSample`, dérivée de la <xref:System.Web.UI.WebControls.WebControl> (classe), qui utilise le <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> méthode pour appliquer un <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style à une chaîne de texte.</span><span class="sxs-lookup"><span data-stu-id="c0880-333">The following code example demonstrates how to use a custom class named `TextSample`, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that uses the <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method to apply a <xref:System.Web.UI.WebControls.Style.ForeColor%2A> style to a string of text.</span></span>  
  
 <span data-ttu-id="c0880-334">Le <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> méthode restitue le code HTML `<span style="color:Navy;">`.</span><span class="sxs-lookup"><span data-stu-id="c0880-334">The <xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A> method renders the HTML `<span style="color:Navy;">`.</span></span> <span data-ttu-id="c0880-335">Le <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> appel de méthode ferme la `<span>` élément après le texte a été restitué.</span><span class="sxs-lookup"><span data-stu-id="c0880-335">The <xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A> method call closes the `<span>` element after the text has been rendered.</span></span>  
  
 [!code-vb[System.Web.UI.HtmlTextWriter_EnterStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter_EnterStyle/VB/styledtext.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="FilterAttributes">
      <MemberSignature Language="C#" Value="protected virtual void FilterAttributes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FilterAttributes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.FilterAttributes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub FilterAttributes ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void FilterAttributes();" />
      <MemberSignature Language="F#" Value="abstract member FilterAttributes : unit -&gt; unit&#xA;override this.FilterAttributes : unit -&gt; unit" Usage="htmlTextWriter.FilterAttributes " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0880-336">Supprime tous les attributs de style et de balisage sur toutes les propriétés de la page ou du contrôle serveur Web.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-336">Removes all the markup and style attributes on all properties of the page or Web server control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-337">Avant de la restitution des attributs sur un élément de balisage, le <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="c0880-337">Before attributes are rendered on a markup element, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method is called.</span></span> <span data-ttu-id="c0880-338">À son tour, le <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> les appels de méthode le <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> et <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> méthodes pour chaque attribut et un style à restituer.</span><span class="sxs-lookup"><span data-stu-id="c0880-338">In turn, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> and <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> methods for each attribute and style to render.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-339">L’exemple de code suivant montre comment utiliser une classe personnalisée dérivée de la <xref:System.Web.UI.HtmlTextWriter> (classe), qui remplace le <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-339">The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method.</span></span> <span data-ttu-id="c0880-340">Lorsqu’elle est appelée, le <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> substitution vérifie si le writer de texte affiche les `<label>` ou `<a>` éléments :</span><span class="sxs-lookup"><span data-stu-id="c0880-340">When called, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> override checks whether the text writer renders any `<label>` or `<a>` elements:</span></span>  
  
-   <span data-ttu-id="c0880-341">Si un `<label>` élément est rendu, la <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> méthode vérifie si un `style` attribut est rendu sur l’élément et, dans le cas contraire, crée un `style` d’attribut et lui affecte la valeur `color: blue`.</span><span class="sxs-lookup"><span data-stu-id="c0880-341">If a `<label>` element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method checks whether a `style` attribute is rendered on the element and, if not, creates a `style` attribute and sets it to `color: blue`.</span></span>  
  
-   <span data-ttu-id="c0880-342">Si un `<a>` élément est rendu, la <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> méthode détermine si un `href` attribut est inclus et, le cas contraire, ajoute une `href` à l’URL http://www.cohowinery.com.</span><span class="sxs-lookup"><span data-stu-id="c0880-342">If an `<a>` element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method determines whether an `href` attribute is included and, if not, adds an `href` to the URL http://www.cohowinery.com.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#4)]
 [!code-vb[HtmlTextWriter_Methods#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      </Docs>
    </Member>
    <Member MemberName="Flush">
      <MemberSignature Language="C#" Value="public override void Flush ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Flush() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Flush" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Flush ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Flush();" />
      <MemberSignature Language="F#" Value="abstract member Flush : unit -&gt; unit&#xA;override this.Flush : unit -&gt; unit" Usage="htmlTextWriter.Flush " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0880-343">Efface toutes les mémoires tampons pour <see cref="T:System.Web.UI.HtmlTextWriter" /> en cours et provoque l'écriture des données mises en mémoire tampon dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-343">Clears all buffers for the current <see cref="T:System.Web.UI.HtmlTextWriter" /> object and causes any buffered data to be written to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-344">Le <xref:System.Web.UI.HtmlTextWriter> implémentation de classe de la <xref:System.Web.UI.HtmlTextWriter.Flush%2A> méthode appelle simplement la <xref:System.IO.TextWriter.Flush%2A> méthode de base.</span><span class="sxs-lookup"><span data-stu-id="c0880-344">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.Flush%2A> method just calls the <xref:System.IO.TextWriter.Flush%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterAttribute GetAttributeKey (string attrName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Web.UI.HtmlTextWriterAttribute GetAttributeKey(string attrName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAttributeKey (attrName As String) As HtmlTextWriterAttribute" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::UI::HtmlTextWriterAttribute GetAttributeKey(System::String ^ attrName);" />
      <MemberSignature Language="F#" Value="member this.GetAttributeKey : string -&gt; System.Web.UI.HtmlTextWriterAttribute" Usage="htmlTextWriter.GetAttributeKey attrName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterAttribute</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attrName">
          <span data-ttu-id="c0880-345">Chaîne qui contient l'attribut pour lequel <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> doit être obtenu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-345">A string that contains the attribute for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterAttribute" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-346">Obtient la valeur d'énumération <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> correspondant à l'attribut spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-346">Obtains the corresponding <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value for the specified attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0880-347">Valeur d'énumération <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> de l'attribut spécifié ; sinon, valeur <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> non valide si l'attribut n'est pas membre de l'énumération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-347">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> enumeration value for the specified attribute; otherwise, an invalid <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> value if the attribute is not a member of the enumeration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-348">Si `attrName` est `null` ou une chaîne vide (« »), ou ne figure pas dans la table de noms d’attributs, la valeur -1, déclarée dans un <xref:System.Web.UI.HtmlTextWriterAttribute> de l’objet, qui est renvoyée.</span><span class="sxs-lookup"><span data-stu-id="c0880-348">If `attrName` is `null` or an empty string (""), or cannot be found in the table of attribute names, the value -1, typed to an <xref:System.Web.UI.HtmlTextWriterAttribute> object, is returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-349">L’exemple de code suivant montre comment utiliser une classe dérivée de la <xref:System.Web.UI.HtmlTextWriter> (classe), qui remplace le <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-349">The following code example demonstrates how to use a class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="c0880-350">La substitution vérifie si `tagKey` est égal à la <xref:System.Web.UI.HtmlTextWriterTag.Font> champ, ce qui indique qu’un `<font>` balisage élément sera restitué.</span><span class="sxs-lookup"><span data-stu-id="c0880-350">The override checks whether `tagKey` is equal to the <xref:System.Web.UI.HtmlTextWriterTag.Font> field, which indicates that a `<font>` markup element will be rendered.</span></span> <span data-ttu-id="c0880-351">Si, par conséquent, la substitution appelle la <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> méthode pour savoir si le `<font>` élément contient un <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribut.</span><span class="sxs-lookup"><span data-stu-id="c0880-351">If so, the override calls the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to find out whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute.</span></span> <span data-ttu-id="c0880-352">Si le <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> retourne `false`, le <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> les appels de méthode le <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> (méthode), qui définit le <xref:System.Web.UI.HtmlTextWriterAttribute.Size> et lui affecte la valeur `30pt`.</span><span class="sxs-lookup"><span data-stu-id="c0880-352">If the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> returns `false`, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> and sets its value to `30pt`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#3)]
 [!code-vb[HtmlTextWriter_Methods#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.IsAttributeDefined" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetAttributeName">
      <MemberSignature Language="C#" Value="protected string GetAttributeName (System.Web.UI.HtmlTextWriterAttribute attrKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetAttributeName(valuetype System.Web.UI.HtmlTextWriterAttribute attrKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetAttributeName (attrKey As HtmlTextWriterAttribute) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetAttributeName(System::Web::UI::HtmlTextWriterAttribute attrKey);" />
      <MemberSignature Language="F#" Value="member this.GetAttributeName : System.Web.UI.HtmlTextWriterAttribute -&gt; string" Usage="htmlTextWriter.GetAttributeName attrKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attrKey" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="attrKey">
          <span data-ttu-id="c0880-353">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> pour lequel obtenir le nom d'attribut de balisage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-353">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> to obtain the markup attribute name for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-354">Obtient le nom de l'attribut de balisage associé à la valeur <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-354">Obtains the name of the markup attribute associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0880-355">Chaîne contenant le nom de l'attribut de balisage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-355">A string containing the name of the markup attribute.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-356">Le <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> méthode retourne une chaîne vide (" »), si `attrKey` n’est pas valide <xref:System.Web.UI.HtmlTextWriterAttribute> valeur.</span><span class="sxs-lookup"><span data-stu-id="c0880-356">The <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> method returns an empty string (""), if `attrKey` is not a valid <xref:System.Web.UI.HtmlTextWriterAttribute> value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-357">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> méthode pour convertir un <xref:System.Web.UI.HtmlTextWriterAttribute.Size> valeur d’énumération vers son nom de chaîne.</span><span class="sxs-lookup"><span data-stu-id="c0880-357">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A> method to convert a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> enumeration value to its string name.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#6](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#6)]
 [!code-csharp[HtmlTextWriter_Methods3#6](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#6)]
 [!code-vb[HtmlTextWriter_Methods3#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterStyle GetStyleKey (string styleName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Web.UI.HtmlTextWriterStyle GetStyleKey(string styleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyleKey (styleName As String) As HtmlTextWriterStyle" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::UI::HtmlTextWriterStyle GetStyleKey(System::String ^ styleName);" />
      <MemberSignature Language="F#" Value="member this.GetStyleKey : string -&gt; System.Web.UI.HtmlTextWriterStyle" Usage="htmlTextWriter.GetStyleKey styleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterStyle</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="styleName">
          <span data-ttu-id="c0880-358">Attribut de style pour lequel obtenir <see cref="T:System.Web.UI.HtmlTextWriterStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-358">The style attribute for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterStyle" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-359">Obtient la valeur d'énumération <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> correspondant au style spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-359">Obtains the <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value for the specified style.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0880-360">Valeur de l'énumération <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> correspondant à <paramref name="styleName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-360">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value corresponding to <paramref name="styleName" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-361">Le <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> méthode retourne la valeur -1 typé comme un <xref:System.Web.UI.HtmlTextWriterStyle> valeur, si `styleName` ne correspond pas à un <xref:System.Web.UI.HtmlTextWriterStyle> valeur d’énumération.</span><span class="sxs-lookup"><span data-stu-id="c0880-361">The <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> method returns the value -1 typed as a <xref:System.Web.UI.HtmlTextWriterStyle> value, if `styleName` does not correspond to any <xref:System.Web.UI.HtmlTextWriterStyle> enumeration value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-362">L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> méthode dans une classe dérivée de la <xref:System.Web.UI.HtmlTextWriter> classe.</span><span class="sxs-lookup"><span data-stu-id="c0880-362">The following code example demonstrates how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="c0880-363">Le <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> substitution détermine si un `<label>` balisage sera restitué et, dans ce cas, vérifie l’élément pour un <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribut.</span><span class="sxs-lookup"><span data-stu-id="c0880-363">The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override determines whether a `<label>` markup will be rendered, and, if so, checks the element for a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute.</span></span> <span data-ttu-id="c0880-364">Si un <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribut n’a pas été défini, le <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> méthode est utilisée comme premier paramètre dans un appel à la <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> méthode pour ajouter un <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribut un `<label>` balisage et définissez le <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribut `red`.</span><span class="sxs-lookup"><span data-stu-id="c0880-364">If a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A> method is used as the first parameter in a call to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to a `<label>` markup element and set the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#1)]
 [!code-vb[HtmlTextWriter_Methods#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleName">
      <MemberSignature Language="C#" Value="protected string GetStyleName (System.Web.UI.HtmlTextWriterStyle styleKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string GetStyleName(valuetype System.Web.UI.HtmlTextWriterStyle styleKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetStyleName (styleKey As HtmlTextWriterStyle) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ GetStyleName(System::Web::UI::HtmlTextWriterStyle styleKey);" />
      <MemberSignature Language="F#" Value="member this.GetStyleName : System.Web.UI.HtmlTextWriterStyle -&gt; string" Usage="htmlTextWriter.GetStyleName styleKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="styleKey" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="styleKey">
          <span data-ttu-id="c0880-365">
            <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> pour lequel obtenir le nom d'attribut de style.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-365">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> to obtain the style attribute name for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-366">Obtient le nom de l'attribut de style de balisage associé à la valeur d'énumération <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-366">Obtains the markup style attribute name associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0880-367">Nom de l'attribut de style associé à la valeur d'énumération <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> spécifiée dans <paramref name="styleKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-367">The style attribute name associated with the <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> enumeration value specified in <paramref name="styleKey" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-368">Si `styleKey` n’est pas valide <xref:System.Web.UI.HtmlTextWriterStyle> objet, le <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> méthode retourne une chaîne vide (« »).</span><span class="sxs-lookup"><span data-stu-id="c0880-368">If `styleKey` is not a valid <xref:System.Web.UI.HtmlTextWriterStyle> object, the <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> method returns an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-369">L’exemple de code suivant montre comment vérifier si un `<label>` élément est rendu.</span><span class="sxs-lookup"><span data-stu-id="c0880-369">The following code example shows how to check whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="c0880-370">Si, par conséquent, il vérifie si un <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribut de style a été défini sur l’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-370">If so, it checks whether a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute has been defined on the element.</span></span> <span data-ttu-id="c0880-371">Si l’attribut n’a pas été défini, le <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> méthode est appelée et la <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> méthode convertit le <xref:System.Web.UI.HtmlTextWriterStyle.Color> membre d’énumération en sa représentation sous forme de chaîne à passer à la <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-371">If the attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method is called and the <xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A> method converts the <xref:System.Web.UI.HtmlTextWriterStyle.Color> enumeration member into its string representation to pass to the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetTagKey">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.HtmlTextWriterTag GetTagKey (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Web.UI.HtmlTextWriterTag GetTagKey(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTagKey (tagName As String) As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::HtmlTextWriterTag GetTagKey(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member GetTagKey : string -&gt; System.Web.UI.HtmlTextWriterTag&#xA;override this.GetTagKey : string -&gt; System.Web.UI.HtmlTextWriterTag" Usage="htmlTextWriter.GetTagKey tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="c0880-372">Élément de balisage pour lequel obtenir <see cref="T:System.Web.UI.HtmlTextWriterTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-372">The markup element for which to obtain the <see cref="T:System.Web.UI.HtmlTextWriterTag" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-373">Obtient la valeur d'énumération <see cref="T:System.Web.UI.HtmlTextWriterTag" /> associée à l'élément de balisage spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-373">Obtains the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value associated with the specified markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0880-374">Valeur d'énumération <see cref="T:System.Web.UI.HtmlTextWriterTag" /> ; sinon, si le paramètre <paramref name="tagName" /> n'est pas associé à une valeur <see cref="T:System.Web.UI.HtmlTextWriterTag" /> spécifique, <see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-374">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value; otherwise, if <paramref name="tagName" /> is not associated with a specific <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value, <see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-375">Si `tagName` est `null`, une chaîne vide (« »), ou ne figure pas dans la table des noms de balises de balisage, le <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> méthode retourne le <xref:System.Web.UI.HtmlTextWriterTag.Unknown> champ.</span><span class="sxs-lookup"><span data-stu-id="c0880-375">If `tagName` is `null`, an empty string (""), or cannot be found in the table of markup tag names, the <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> method returns the <xref:System.Web.UI.HtmlTextWriterTag.Unknown> field.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-376">L’exemple de code suivant montre comment substituer la surcharge de la <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> méthode qui prend une chaîne comme paramètre.</span><span class="sxs-lookup"><span data-stu-id="c0880-376">The following code example shows how to override the overload of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that takes a string as its parameter.</span></span> <span data-ttu-id="c0880-377">La chaîne est passée à la <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> (méthode), qui la convertit en correspondant <xref:System.Web.UI.HtmlTextWriterTag> membre de l’énumération, puis passe à la <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> surcharge qui accepte un <xref:System.Web.UI.HtmlTextWriterTag> valeur d’énumération en tant que paramètre.</span><span class="sxs-lookup"><span data-stu-id="c0880-377">The string is passed to the <xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A> method, which converts it to the corresponding <xref:System.Web.UI.HtmlTextWriterTag> enumeration member, and then passes that to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload that takes a <xref:System.Web.UI.HtmlTextWriterTag> enumeration value as a parameter.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#8](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#8)]
 [!code-csharp[HtmlTextWriter_Methods3#8](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#8)]
 [!code-vb[HtmlTextWriter_Methods3#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="GetTagName">
      <MemberSignature Language="C#" Value="protected virtual string GetTagName (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetTagName(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetTagName (tagKey As HtmlTextWriterTag) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetTagName(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="abstract member GetTagName : System.Web.UI.HtmlTextWriterTag -&gt; string&#xA;override this.GetTagName : System.Web.UI.HtmlTextWriterTag -&gt; string" Usage="htmlTextWriter.GetTagName tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey">
          <span data-ttu-id="c0880-378">
            <see cref="T:System.Web.UI.HtmlTextWriterTag" /> pour lequel obtenir l'élément de balisage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-378">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> to obtain the markup element for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-379">Obtient l'élément de balisage associé à la valeur d'énumération <see cref="T:System.Web.UI.HtmlTextWriterTag" /> spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-379">Obtains the markup element associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0880-380">Chaîne représentant l'élément de balisage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-380">A string representing the markup element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-381">Si `tagKey` n’est pas valide <xref:System.Web.UI.HtmlTextWriterTag> valeur, le <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> méthode retourne une chaîne vide (« »).</span><span class="sxs-lookup"><span data-stu-id="c0880-381">If `tagKey` is not a valid <xref:System.Web.UI.HtmlTextWriterTag> value, the <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> method returns an empty string ("").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-382">L’exemple de code suivant montre comment fermer une `<font>` élément à l’aide de la <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-382">The following code example demonstrates how to close a `<font>` element by using the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method.</span></span> <span data-ttu-id="c0880-383">Le <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> les appels de méthode le <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> méthode pour convertir le <xref:System.Web.UI.HtmlTextWriterTag.Font> valeur en une chaîne.</span><span class="sxs-lookup"><span data-stu-id="c0880-383">The <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetTagName%2A> method to convert the <xref:System.Web.UI.HtmlTextWriterTag.Font> value to a string.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#7](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#7)]
 [!code-csharp[HtmlTextWriter_Methods3#7](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#7)]
 [!code-vb[HtmlTextWriter_Methods3#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Indent">
      <MemberSignature Language="C#" Value="public int Indent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Indent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.Indent" />
      <MemberSignature Language="VB.NET" Value="Public Property Indent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Indent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Indent : int with get, set" Usage="System.Web.UI.HtmlTextWriter.Indent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-384">Obtient ou définit le nombre de tabulations du retrait à respecter au début d'une ligne HTML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-384">Gets or sets the number of tab positions to indent the beginning of each line of markup.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0880-385">Le nombre de tabulations pour la mise en retrait de chaque ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-385">The number of tab positions to indent each line.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-386">Mise en retrait est effectuée en écrivant la chaîne spécifiée par le `tabString` paramètre de la <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructeur le nombre de fois spécifié par le <xref:System.Web.UI.HtmlTextWriter.Indent%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="c0880-386">Indentation is performed by writing the string that is specified by the `tabString` parameter of the <xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29> constructor the number of times that are specified by the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property.</span></span>  
  
 <span data-ttu-id="c0880-387">Si la <xref:System.Web.UI.HtmlTextWriter.Indent%2A> est définie sur une valeur négative, il est modifié en 0 avant d’être enregistrées.</span><span class="sxs-lookup"><span data-stu-id="c0880-387">If the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property is set to a negative value, it is changed to 0 before being saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-388">L’exemple de code suivant montre comment incrémenter la valeur affectée à la <xref:System.Web.UI.HtmlTextWriter.Indent%2A> propriété lorsque les attributs ont été ajoutés à la balise d’ouverture d’un `<span>` élément et la <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> méthode a été appelée.</span><span class="sxs-lookup"><span data-stu-id="c0880-388">The following code example demonstrates how to increment the value that is assigned to the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property when attributes have been added to the opening tag of a `<span>` element and the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method has been called.</span></span> <span data-ttu-id="c0880-389">Cela augmente la mise en retrait de tout balisage restitué à l’intérieur du `<span>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-389">This increases the indentation for any markup that is rendered inside the `<span>` element.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#2)]
 [!code-vb[MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.OutputTabs" />
      </Docs>
    </Member>
    <Member MemberName="InnerWriter">
      <MemberSignature Language="C#" Value="public System.IO.TextWriter InnerWriter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.TextWriter InnerWriter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.InnerWriter" />
      <MemberSignature Language="VB.NET" Value="Public Property InnerWriter As TextWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::TextWriter ^ InnerWriter { System::IO::TextWriter ^ get(); void set(System::IO::TextWriter ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InnerWriter : System.IO.TextWriter with get, set" Usage="System.Web.UI.HtmlTextWriter.InnerWriter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextWriter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-390">Obtient ou définit le TextWriter à utiliser pour écrire le contenu interne de l'élément de balisage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-390">Gets or sets the text writer that writes the inner content of the markup element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0880-391">
            <see cref="T:System.IO.TextWriter" /> qui écrit le contenu de balisage interne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-391">A <see cref="T:System.IO.TextWriter" /> that writes the inner markup content.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-392">Contenu de balisage interne est le texte compris entre les balises d’ouverture et fermeture d’un élément de langage de balisage.</span><span class="sxs-lookup"><span data-stu-id="c0880-392">Inner markup content is the text found between the opening and closing tags of a markup language element.</span></span>  
  
 <span data-ttu-id="c0880-393">Si le <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> est définie sur une <xref:System.IO.TextWriter> objet qui est une instance de la <xref:System.Web.HttpWriter> (classe), ce fait est noté et une référence séparée est enregistrée.</span><span class="sxs-lookup"><span data-stu-id="c0880-393">If the <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> property is set to a <xref:System.IO.TextWriter> object that is an instance of the <xref:System.Web.HttpWriter> class, this fact is noted and a separate reference is saved.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-394">L’exemple de code suivant montre comment utiliser un contrôle serveur Web personnalisé, dérivé de la <xref:System.Web.UI.WebControls.WebControl> (classe), qui remplace le <xref:System.Web.UI.Control.Render%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-394">The following code example shows how to use a custom Web server control, derived from the <xref:System.Web.UI.WebControls.WebControl> class, that overrides the <xref:System.Web.UI.Control.Render%2A> method.</span></span> <span data-ttu-id="c0880-395">Elle utilise le <xref:System.Web.UI.HtmlTextWriter> classe permettant d’écrire un `<font>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-395">It uses the <xref:System.Web.UI.HtmlTextWriter> class to write a `<font>` element.</span></span> <span data-ttu-id="c0880-396">Une fois qu’il écrit la balise d’ouverture de l’élément, il utilise le <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> propriété pour écrire la chaîne `"<br> The time on the server:"` et concatène cette chaîne avec la valeur de la <xref:System.DateTime.Now%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="c0880-396">After it writes the opening tag of the element, it uses the <xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A> property to write the string `"<br> The time on the server:"` and concatenates this string with the value of the <xref:System.DateTime.Now%2A?displayProperty=nameWithType> property.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Properties#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CPP/htmltextwriter_properties1.cpp#3)]
 [!code-csharp[HtmlTextWriter_Properties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Properties/CS/htmltextwriter_properties1.cs#3)]
 [!code-vb[HtmlTextWriter_Properties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Properties/VB/htmltextwriter_properties1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.HttpWriter" />
        <altmember cref="T:System.Web.UI.WebControls.WebControl" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsAttributeDefined">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-397">Détermine si l'attribut de balisage spécifié et sa valeur sont rendus au cours de l'appel suivant à la méthode <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-397">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsAttributeDefined(valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsAttributeDefined (key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsAttributeDefined(System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="member this.IsAttributeDefined : System.Web.UI.HtmlTextWriterAttribute -&gt; bool" Usage="htmlTextWriter.IsAttributeDefined key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="c0880-398">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associé à l'attribut de balisage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-398">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-399">Détermine si l'attribut de balisage spécifié et sa valeur sont rendus au cours de l'appel suivant à la méthode <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-399">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0880-400">
            <see langword="true" /> si l'attribut est rendu au cours de l'appel suivant à la méthode <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-400">
              <see langword="true" /> if the attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-401">Pour obtenir la valeur à affecter à la <xref:System.Web.UI.HtmlTextWriterAttribute> de l’objet, utilisez la <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29> de surcharge au lieu de celle-ci.</span><span class="sxs-lookup"><span data-stu-id="c0880-401">To obtain the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterAttribute> object, use the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29> overload instead of this one.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-402">L’exemple de code suivant montre comment utiliser un remplacement de la <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> méthode dans une classe qui hérite de la <xref:System.Web.UI.HtmlTextWriter> classe.</span><span class="sxs-lookup"><span data-stu-id="c0880-402">The following code example shows how to use an override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a class that inherits from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="c0880-403">Le <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> substitution vérifie si un `<font>` élément du balisage sera restitué.</span><span class="sxs-lookup"><span data-stu-id="c0880-403">The <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override checks whether a `<font>` markup element will be rendered.</span></span> <span data-ttu-id="c0880-404">Si, par conséquent, la substitution appelle la <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> méthode permettant de vérifier si le `<font>` élément contient un <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribut.</span><span class="sxs-lookup"><span data-stu-id="c0880-404">If so, the override calls the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to check whether the `<font>` element contains a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute.</span></span> <span data-ttu-id="c0880-405">Si ce n’est pas le cas, le <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> les appels de méthode le <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> (méthode), qui définit le <xref:System.Web.UI.HtmlTextWriterAttribute.Size> d’attribut et lui affecte la valeur `30pt`.</span><span class="sxs-lookup"><span data-stu-id="c0880-405">If not, the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A> method, which defines the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and sets its value to `30pt`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#3)]
 [!code-vb[HtmlTextWriter_Methods#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsAttributeDefined (System.Web.UI.HtmlTextWriterAttribute key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsAttributeDefined(valuetype System.Web.UI.HtmlTextWriterAttribute key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsAttributeDefined (key As HtmlTextWriterAttribute, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsAttributeDefined(System::Web::UI::HtmlTextWriterAttribute key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberSignature Language="F#" Value="member this.IsAttributeDefined : System.Web.UI.HtmlTextWriterAttribute *  -&gt; bool" Usage="htmlTextWriter.IsAttributeDefined (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
        <Parameter Name="value" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="c0880-406">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associé à l'attribut de balisage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-406">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c0880-407">Valeur à affecter à l’attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-407">The value assigned to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-408">Détermine si l'attribut de balisage spécifié et sa valeur sont rendus au cours de l'appel suivant à la méthode <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-408">Determines whether the specified markup attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0880-409">
            <see langword="true" /> si l'attribut est rendu au cours de l'appel suivant à la méthode <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-409">
              <see langword="true" /> if the attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-410">Si le <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> méthode retourne `true`, la valeur à affecter à la <xref:System.Web.UI.HtmlTextWriterAttribute> est retourné dans le `value` paramètre.</span><span class="sxs-lookup"><span data-stu-id="c0880-410">If the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method returns `true`, the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterAttribute> object is returned in the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStyleAttributeDefined">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-411">Détermine si l'attribut de style de balisage spécifié est rendu au cours de l'appel suivant à la méthode <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-411">Determines whether a markup style attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStyleAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsStyleAttributeDefined(valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsStyleAttributeDefined (key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsStyleAttributeDefined(System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="member this.IsStyleAttributeDefined : System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="htmlTextWriter.IsStyleAttributeDefined key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="c0880-412">
            <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associé à l'attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-412">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-413">Détermine si l'attribut de style de balisage spécifié est rendu au cours de l'appel suivant à la méthode <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-413">Determines whether the specified markup style attribute is rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0880-414">
            <see langword="true" /> si l'attribut est rendu au cours de l'appel suivant à la méthode <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-414">
              <see langword="true" /> if the attribute will be rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-415">Pour obtenir la valeur qui sera restituée avec l’attribut de style spécifié, utilisez la <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29> surcharge de la <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-415">To get the value that will be rendered with the specified style attribute, use the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29> overload of the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-416">L’exemple de code suivant montre comment vérifier si un `<label>` élément est rendu.</span><span class="sxs-lookup"><span data-stu-id="c0880-416">The following code example shows how to check whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="c0880-417">Dans ce cas, le <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> méthode vérifie si un <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribut de style a été défini sur l’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-417">If so, the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method checks whether a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute has been defined on the element.</span></span> <span data-ttu-id="c0880-418">Si le <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribut n’a pas été défini, le <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> méthode définit la <xref:System.Web.UI.HtmlTextWriterStyle.Color> d’attribut et lui affecte la valeur `red`.</span><span class="sxs-lookup"><span data-stu-id="c0880-418">If the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute has not been defined, the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method defines the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute and sets its value to `red`.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods3#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CPP/htmltextwriter_methods3.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods3/CS/htmltextwriter_methods3.cs#4)]
 [!code-vb[HtmlTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods3/VB/htmltextwriter_methods3.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsStyleAttributeDefined">
      <MemberSignature Language="C#" Value="protected bool IsStyleAttributeDefined (System.Web.UI.HtmlTextWriterStyle key, out string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool IsStyleAttributeDefined(valuetype System.Web.UI.HtmlTextWriterStyle key, [out] string&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Function IsStyleAttributeDefined (key As HtmlTextWriterStyle, ByRef value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool IsStyleAttributeDefined(System::Web::UI::HtmlTextWriterStyle key, [Runtime::InteropServices::Out] System::String ^ % value);" />
      <MemberSignature Language="F#" Value="member this.IsStyleAttributeDefined : System.Web.UI.HtmlTextWriterStyle *  -&gt; bool" Usage="htmlTextWriter.IsStyleAttributeDefined (key, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
        <Parameter Name="value" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="c0880-419">
            <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associé à l'attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-419">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the attribute.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c0880-420">Valeur assignée à l'attribut de style.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-420">The value assigned to the style attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-421">Détermine si l'attribut de style de balisage spécifié et sa valeur sont rendus au cours de l'appel suivant à la méthode <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-421">Determines whether the specified markup style attribute and its value are rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0880-422">
            <see langword="true" /> si l'attribut et sa valeur sont rendus au cours de l'appel suivant à la méthode <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-422">
              <see langword="true" /> if the attribute and its value will be rendered during the next call to the <see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /> method; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-423">Si le <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> méthode retourne `true`, la valeur à affecter à la <xref:System.Web.UI.HtmlTextWriterStyle> attribut est retourné dans le `value` paramètre.</span><span class="sxs-lookup"><span data-stu-id="c0880-423">If the <xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A> method returns `true`, the value to be assigned to the <xref:System.Web.UI.HtmlTextWriterStyle> attribute is returned in the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="IsValidFormAttribute">
      <MemberSignature Language="C#" Value="public virtual bool IsValidFormAttribute (string attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsValidFormAttribute(string attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IsValidFormAttribute (attribute As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsValidFormAttribute(System::String ^ attribute);" />
      <MemberSignature Language="F#" Value="abstract member IsValidFormAttribute : string -&gt; bool&#xA;override this.IsValidFormAttribute : string -&gt; bool" Usage="htmlTextWriter.IsValidFormAttribute attribute" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attribute" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="attribute">
          <span data-ttu-id="c0880-424">Chaîne qui contient le nom de l'attribut à activer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-424">A string that contains the name of the attribute to check.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-425">Active un attribut pour garantir qu'il peut être restitué dans la balise d'ouverture d'un élément de balisage <see langword="&lt;form&gt;" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-425">Checks an attribute to ensure that it can be rendered in the opening tag of a <see langword="&lt;form&gt;" /> markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0880-426">Toujours <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-426">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-427">Le <xref:System.Web.UI.HtmlTextWriter> implémentation de classe de la <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> retourne de la méthode `true` pour tous les attributs.</span><span class="sxs-lookup"><span data-stu-id="c0880-427">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> method returns `true` for all attributes.</span></span> <span data-ttu-id="c0880-428">Remplacer la <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> pour limiter les attributs qui peuvent être rendus dans la balise d’ouverture d’un `<form>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-428">Override the <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> to limit the attributes that can be rendered in the opening tag of a `<form>` element.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c0880-429">
            <para>Remplacer la <see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /> retour de méthode <see langword="true" /> uniquement pour les attributs qui peuvent être inclus dans le <see langword="&lt;form&gt;" /> élément du balisage pour lequel la classe dérivée de la <see cref="T:System.Web.UI.HtmlTextWriter" /> classe est destinée.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-429">
              <para>Override the <see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /> method to return <see langword="true" /> only for those attributes that can be included in the <see langword="&lt;form&gt;" /> element of the markup for which the class derived from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class is intended.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="NewLine">
      <MemberSignature Language="C#" Value="public override string NewLine { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NewLine" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.NewLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property NewLine As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NewLine { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NewLine : string with get, set" Usage="System.Web.UI.HtmlTextWriter.NewLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-430">Obtient ou définit la chaîne de terminaison de ligne utilisée pour l'objet <see cref="T:System.Web.UI.HtmlTextWriter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-430">Gets or sets the line terminator string used by the <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0880-431">Chaîne de terminaison de ligne utilisée par le <see cref="T:System.Web.UI.HtmlTextWriter" /> en cours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-431">The line terminator string used by the current <see cref="T:System.Web.UI.HtmlTextWriter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-432">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’un saut de ligne (« \r\n »).</span><span class="sxs-lookup"><span data-stu-id="c0880-432">The default line terminator string is a carriage return, followed by a line feed ("\r\n").</span></span>  
  
 <span data-ttu-id="c0880-433">La chaîne de marque de fin de ligne est écrit dans le flux de sortie chaque fois qu’un seul de le <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> méthodes est appelée.</span><span class="sxs-lookup"><span data-stu-id="c0880-433">The line terminator string is written to the output stream whenever one of the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> methods is called.</span></span> <span data-ttu-id="c0880-434">Si le <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> est définie sur `null`, le caractère de nouvelle ligne par défaut est utilisé.</span><span class="sxs-lookup"><span data-stu-id="c0880-434">If the <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> property is set to `null`, the default new line character is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-435">L’exemple de code suivant montre comment utiliser une classe personnalisée dérivée de la <xref:System.Web.UI.HtmlTextWriter> (classe), qui remplace le <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-435">The following code example shows how to use a custom class, derived from the <xref:System.Web.UI.HtmlTextWriter> class, that overrides the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method.</span></span> <span data-ttu-id="c0880-436">Lorsqu’elle est appelée, le <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> substitution vérifie si le writer de texte affiche les `<label>` ou `<a>` éléments.</span><span class="sxs-lookup"><span data-stu-id="c0880-436">When called, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> override checks whether the text writer renders any `<label>` or `<a>` elements.</span></span> <span data-ttu-id="c0880-437">Dans ce cas, le <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> méthode détermine si un attribut de style est défini pour l’étiquette.</span><span class="sxs-lookup"><span data-stu-id="c0880-437">If so, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method determines whether a style attribute is defined for the label.</span></span> <span data-ttu-id="c0880-438">Si aucun style n’est défini, le <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> méthode définit la valeur par défaut pour le `style:color` attribut en bleu.</span><span class="sxs-lookup"><span data-stu-id="c0880-438">If no style is defined, the <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method sets the default value for the `style:color` attribute to blue.</span></span> <span data-ttu-id="c0880-439">Le <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> méthode utilise ensuite le <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> propriété pour insérer une ligne break dans la balise et écrit les autres attributs définis.</span><span class="sxs-lookup"><span data-stu-id="c0880-439">The <xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A> method then uses the <xref:System.Web.UI.HtmlTextWriter.NewLine%2A> property to insert a line break in the markup tag and writes any other defined attributes.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#4](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#4)]
 [!code-csharp[HtmlTextWriter_Methods#4](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#4)]
 [!code-vb[HtmlTextWriter_Methods#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.IO.TextWriter.NewLine" />
      </Docs>
    </Member>
    <Member MemberName="OnAttributeRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnAttributeRender (name As String, value As String, key As HtmlTextWriterAttribute) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="abstract member OnAttributeRender : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; bool&#xA;override this.OnAttributeRender : string * string * System.Web.UI.HtmlTextWriterAttribute -&gt; bool" Usage="htmlTextWriter.OnAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c0880-440">Chaîne qui contient le nom de l'attribut à restituer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-440">A string containing the name of the attribute to render.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c0880-441">Chaîne contenant la valeur assignée à l'attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-441">A string containing the value that is assigned to the attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c0880-442">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associé à l'attribut de balisage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-442">The <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> associated with the markup attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-443">Détermine si l'attribut de balisage spécifié et sa valeur peuvent être rendus dans l'élément de balisage actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-443">Determines whether the specified markup attribute and its value can be rendered to the current markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0880-444">Toujours <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-444">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-445">Le <xref:System.Web.UI.HtmlTextWriter> implémentation de classe de la <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> méthode retourne toujours `true`.</span><span class="sxs-lookup"><span data-stu-id="c0880-445">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> method always returns `true`.</span></span> <span data-ttu-id="c0880-446">Le <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> substitutions peuvent déterminer si un attribut sera restitué dans la page.</span><span class="sxs-lookup"><span data-stu-id="c0880-446">The <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> overrides can determine whether an attribute will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-447">L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-447">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> method.</span></span> <span data-ttu-id="c0880-448">Si un <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribut est rendu, mais la <xref:System.Web.UI.HtmlTextWriterAttribute.Size> valeur n’est pas `30pt`, le <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> remplacer les appels de la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> méthode pour ajouter un <xref:System.Web.UI.HtmlTextWriterAttribute.Size> d’attribut et définissez sa valeur sur `30pt`.</span><span class="sxs-lookup"><span data-stu-id="c0880-448">If a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterAttribute.Size> value is not `30pt`, the <xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A> override calls the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to add a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and set its value to `30pt`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#5)]
 [!code-vb[MarkupTextWriter_Methods3#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c0880-449">
            <para>Si vous héritez de la <see cref="T:System.Web.UI.HtmlTextWriter" /> (classe), vous pouvez remplacer le <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> retour de méthode <see langword="false" /> empêcher un attribut de rendu tout, de rendu sur un élément particulier ou de rendu pour une balise particulière. Par exemple, si vous ne souhaitez pas l’objet dérivé <see cref="T:System.Web.UI.HtmlTextWriter" /> pour restituer la <see langword="bgcolor" /> attribut <see langword="&lt;table&gt;" /> éléments, vous pouvez remplacer le <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> et retourner <see langword="false" /> lorsque <paramref name="name" /> passe <see langword="bgcolor" /> et le <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> valeur de propriété est <see langword="table" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-449">
              <para>If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> method to return <see langword="false" /> to prevent an attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup. For example, if you do not want the object derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="bgcolor" /> attribute to <see langword="&lt;table&gt;" /> elements, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /> and return <see langword="false" /> when <paramref name="name" /> passes <see langword="bgcolor" /> and the <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> property value is <see langword="table" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleAttributeRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnStyleAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnStyleAttributeRender (name As String, value As String, key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnStyleAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="abstract member OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool&#xA;override this.OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="htmlTextWriter.OnStyleAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c0880-450">Chaîne contenant le nom de l'attribut de style à restituer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-450">A string containing the name of the style attribute to render.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c0880-451">Chaîne contenant la valeur assignée à l'attribut de style.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-451">A string containing the value that is assigned to the style attribute.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c0880-452">
            <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associé à l'attribut de style.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-452">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associated with the style attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-453">Détermine si l'attribut de style de balisage spécifié et sa valeur peuvent être rendus dans l'élément de balisage actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-453">Determines whether the specified markup style attribute and its value can be rendered to the current markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0880-454">Toujours <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-454">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-455">Le <xref:System.Web.UI.HtmlTextWriter> implémentation de classe de la <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> méthode retourne toujours `true`.</span><span class="sxs-lookup"><span data-stu-id="c0880-455">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> method always returns `true`.</span></span> <span data-ttu-id="c0880-456">Le <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> substitutions peuvent déterminer si un attribut de style sera restitué dans la page.</span><span class="sxs-lookup"><span data-stu-id="c0880-456">The <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> overrides can determine whether a style attribute will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-457">L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-457">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> method.</span></span> <span data-ttu-id="c0880-458">Si un <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribut de style est rendu, mais la <xref:System.Web.UI.HtmlTextWriterStyle.Color> valeur n’est pas `purple`, le <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> remplacer utilise le <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> pour définir le <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribut `purple`.</span><span class="sxs-lookup"><span data-stu-id="c0880-458">If a <xref:System.Web.UI.HtmlTextWriterStyle.Color> style attribute is rendered, but the <xref:System.Web.UI.HtmlTextWriterStyle.Color> value is not `purple`, the <xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A> override uses the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> method to set the <xref:System.Web.UI.HtmlTextWriterStyle.Color> attribute to `purple`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#6)]
 [!code-vb[MarkupTextWriter_Methods3#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#6)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c0880-459">
            <para>Si vous héritez de la <see cref="T:System.Web.UI.HtmlTextWriter" /> (classe), vous pouvez remplacer le <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> retour de méthode <see langword="false" /> empêcher un attribut de style de rendu du tout, de rendu sur un élément particulier ou de rendu pour un langage de balisage particulier. Par exemple, si vous ne souhaitez pas que l’objet qui est dérivé de <see cref="T:System.Web.UI.HtmlTextWriter" /> pour restituer la <see langword="color" /> attribut de style à un <see langword="&lt;p&gt;" /> élément, vous pouvez remplacer le <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> et retourner <see langword="false" /> lorsque <paramref name="name" /> passe <see langword="color" />et <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> valeur de propriété est <see langword="p" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-459">
              <para>If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> method to return <see langword="false" /> to prevent a style attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup language. For example, if you do not want the object that is derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="color" /> style attribute to a <see langword="&lt;p&gt;" /> element, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /> and return <see langword="false" /> when <paramref name="name" /> passes <see langword="color" /> and the <see cref="P:System.Web.UI.HtmlTextWriter.TagName" /> property value is <see langword="p" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="OnTagRender">
      <MemberSignature Language="C#" Value="protected virtual bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnTagRender(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnTagRender (name As String, key As HtmlTextWriterTag) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnTagRender(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="abstract member OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool&#xA;override this.OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool" Usage="htmlTextWriter.OnTagRender (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c0880-460">Chaîne contenant le nom de l'élément à restituer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-460">A string containing the name of the element to render.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c0880-461">
            <see cref="T:System.Web.UI.HtmlTextWriterTag" /> associé à l'élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-461">The <see cref="T:System.Web.UI.HtmlTextWriterTag" /> associated with the element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-462">Détermine si l'élément de balisage spécifié sera rendu sur la page qui a effectué la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-462">Determines whether the specified markup element will be rendered to the requesting page.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0880-463">Toujours <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-463">Always <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-464">Le <xref:System.Web.UI.HtmlTextWriter> implémentation de classe de la <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> méthode retourne toujours `true`.</span><span class="sxs-lookup"><span data-stu-id="c0880-464">The <xref:System.Web.UI.HtmlTextWriter> class implementation of the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> method always returns `true`.</span></span> <span data-ttu-id="c0880-465">Le <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> substitutions peuvent déterminer si un élément sera restitué dans la page.</span><span class="sxs-lookup"><span data-stu-id="c0880-465">The <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> overrides can determine whether an element will be rendered to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-466">L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-466">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> method.</span></span> <span data-ttu-id="c0880-467">Si un <xref:System.Web.UI.HtmlTextWriterTag.Font> élément est rendu, la <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> remplacer utilise le <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> méthode pour déterminer si un <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribut est rendu.</span><span class="sxs-lookup"><span data-stu-id="c0880-467">If a <xref:System.Web.UI.HtmlTextWriterTag.Font> element is being rendered, the <xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A> override uses the <xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A> method to determine whether a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute is being rendered.</span></span> <span data-ttu-id="c0880-468">Si non, il utilise le <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> méthode pour créer un <xref:System.Web.UI.HtmlTextWriterAttribute.Size> d’attribut et définissez sa valeur sur `20pt`.</span><span class="sxs-lookup"><span data-stu-id="c0880-468">If not, it uses the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method to create a <xref:System.Web.UI.HtmlTextWriterAttribute.Size> attribute and set its value to `20pt`.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods3/CS/overriddenmarkup.cs#4)]
 [!code-vb[MarkupTextWriter_Methods3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods3/VB/overriddenmarkup.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c0880-469">
            <para>Si vous héritez de la <see cref="T:System.Web.UI.HtmlTextWriter" /> (classe), vous pouvez remplacer le <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> retour de méthode <see langword="false" /> pour empêcher le rendu du tout, ou pour un langage de balisage particulier d’un élément de balisage. Par exemple, si vous ne souhaitez pas que l’objet qui est dérivé de <see cref="T:System.Web.UI.HtmlTextWriter" /> pour restituer la <see langword="&lt;font&gt;" /> élément, vous pouvez remplacer le <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> retour de méthode <see langword="false" /> lorsqu’une page est demandée qui contient un <see langword="&lt;font&gt;" /> élément.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-469">
              <para>If you inherit from the <see cref="T:System.Web.UI.HtmlTextWriter" /> class, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> method to return <see langword="false" /> to prevent a markup element from being rendered at all or for a particular markup language. For example, if you do not want the object that is derived from <see cref="T:System.Web.UI.HtmlTextWriter" /> to render the <see langword="&lt;font&gt;" /> element, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /> method to return <see langword="false" /> when a page is requested that contains a <see langword="&lt;font&gt;" /> element.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="OutputTabs">
      <MemberSignature Language="C#" Value="protected virtual void OutputTabs ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OutputTabs() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.OutputTabs" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OutputTabs ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OutputTabs();" />
      <MemberSignature Language="F#" Value="abstract member OutputTabs : unit -&gt; unit&#xA;override this.OutputTabs : unit -&gt; unit" Usage="htmlTextWriter.OutputTabs " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0880-470">Écrit une série de tabulations représentant le niveau de mise en retrait d'une ligne de caractères de balisage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-470">Writes a series of tab strings that represent the indentation level for a line of markup characters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-471">Le <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> utilise le <xref:System.Web.UI.HtmlTextWriter.Indent%2A> propriété pour déterminer le nombre de chaînes onglet écrire obtenir la mise en retrait souhaitée.</span><span class="sxs-lookup"><span data-stu-id="c0880-471">The <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> method uses the <xref:System.Web.UI.HtmlTextWriter.Indent%2A> property to determine how many tab strings to write to obtain the desired indentation.</span></span>  
  
 <span data-ttu-id="c0880-472">La chaîne de tabulation est spécifiée avec la <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> constructeur.</span><span class="sxs-lookup"><span data-stu-id="c0880-472">The tab string is specified with the <xref:System.Web.UI.HtmlTextWriter.%23ctor%2A> constructor.</span></span> <span data-ttu-id="c0880-473">Si aucune chaîne de tabulation n’est spécifiée, la <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant (`\t`) est utilisé.</span><span class="sxs-lookup"><span data-stu-id="c0880-473">If no tab string is specified, the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant (`\t`) is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-474">L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> méthode dans une classe dérivée de la <xref:System.Web.UI.HtmlTextWriter> classe.</span><span class="sxs-lookup"><span data-stu-id="c0880-474">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> method in a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="c0880-475">Le <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> remplacent toujours utilise le <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constante pour effectuer la mise en retrait.</span><span class="sxs-lookup"><span data-stu-id="c0880-475">The <xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A> override always uses the <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> constant to perform the indentation.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods#7](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CPP/htw.cpp#7)]
 [!code-csharp[HtmlTextWriter_Methods#7](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods/CS/htw.cs#7)]
 [!code-vb[HtmlTextWriter_Methods#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods/VB/htw.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.Indent" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" />
      </Docs>
    </Member>
    <Member MemberName="PopEndTag">
      <MemberSignature Language="C#" Value="protected string PopEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string PopEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.PopEndTag" />
      <MemberSignature Language="VB.NET" Value="Protected Function PopEndTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ PopEndTag();" />
      <MemberSignature Language="F#" Value="member this.PopEndTag : unit -&gt; string" Usage="htmlTextWriter.PopEndTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0880-476">Supprime l'élément de balisage enregistré en dernier de la liste d'éléments rendus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-476">Removes the most recently saved markup element from the list of rendered elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0880-477">
            <see cref="T:System.String" /> contenant l'élément de balisage rendu en dernier.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-477">A <see cref="T:System.String" /> containing the most recently rendered markup element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-478">Les éléments sont ajoutés à la liste des éléments de balisage rendus par le <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-478">Elements are added to the list of rendered markup elements by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method.</span></span> <span data-ttu-id="c0880-479">Le <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> méthode supprime les éléments de balisage de la liste en appelant le <xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-479">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method removes markup elements from the list by calling the <xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="c0880-480">La liste des éléments rendus est vide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-480">The list of rendered elements is empty.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="PushEndTag">
      <MemberSignature Language="C#" Value="protected void PushEndTag (string endTag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void PushEndTag(string endTag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub PushEndTag (endTag As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void PushEndTag(System::String ^ endTag);" />
      <MemberSignature Language="F#" Value="member this.PushEndTag : string -&gt; unit" Usage="htmlTextWriter.PushEndTag endTag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endTag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="endTag">
          <span data-ttu-id="c0880-481">Balise de fermeture de l'élément de balisage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-481">The closing tag of the markup element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-482">Enregistre l'élément de balisage spécifié pour utilisation ultérieure lors de la génération de la balise de fin d'un élément de balisage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-482">Saves the specified markup element for later use when generating the end tag for a markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-483">Les éléments sont ajoutés à la liste des éléments de balisage rendus lorsque le <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> les appels de méthode le <xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-483">Elements are added to the list of rendered markup elements when the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method calls the <xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A> method.</span></span> <span data-ttu-id="c0880-484">Le <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> méthode supprime les éléments de balisage à partir de la liste après elle restitue la balise de fin de l’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-484">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method removes markup elements from the list after it renders the end tag for the element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.PopEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RegisterAttribute">
      <MemberSignature Language="C#" Value="protected static void RegisterAttribute (string name, System.Web.UI.HtmlTextWriterAttribute key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterAttribute(string name, valuetype System.Web.UI.HtmlTextWriterAttribute key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterAttribute (name As String, key As HtmlTextWriterAttribute)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterAttribute(System::String ^ name, System::Web::UI::HtmlTextWriterAttribute key);" />
      <MemberSignature Language="F#" Value="static member RegisterAttribute : string * System.Web.UI.HtmlTextWriterAttribute -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterAttribute (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterAttribute" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c0880-485">Chaîne contenant le nom de l'attribut de balisage à inscrire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-485">A string containing the name of the markup attribute to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c0880-486">
            <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> qui correspond au nom de l'attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-486">An <see cref="T:System.Web.UI.HtmlTextWriterAttribute" /> that corresponds with the attribute name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-487">Inscrit les attributs de balisage, qu'il s'agisse de littéraux ou d'attributs générés dynamiquement, à partir du fichier source, pour qu'ils puissent être correctement rendus au client ayant fait la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-487">Registers markup attributes, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-488">Les attributs prédéfinis du langage de balisage HTML sont inscrits par les appels à la <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> méthode lors de la première <xref:System.Web.UI.HtmlTextWriter> objet est créé.</span><span class="sxs-lookup"><span data-stu-id="c0880-488">The predefined attributes of the HTML markup language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="c0880-489">Les attributs dynamiques peuvent être inscrits à l’aide de la <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> méthode à d’autres moments.</span><span class="sxs-lookup"><span data-stu-id="c0880-489">Dynamic attributes can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method at other times.</span></span>  
  
 <span data-ttu-id="c0880-490">La table d’inscription utilisée par le <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> méthode est `static`, de sorte que l’inscription d’attributs s’applique à tous les <xref:System.Web.UI.HtmlTextWriter> objets sur l’ordinateur hôte.</span><span class="sxs-lookup"><span data-stu-id="c0880-490">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A> method is `static`, so registration of attributes applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterAttribute" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStyle">
      <MemberSignature Language="C#" Value="protected static void RegisterStyle (string name, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterStyle(string name, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterStyle (name As String, key As HtmlTextWriterStyle)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterStyle(System::String ^ name, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="static member RegisterStyle : string * System.Web.UI.HtmlTextWriterStyle -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterStyle (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c0880-491">Chaîne passée du fichier source et spécifiant le nom du style.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-491">The string passed from the source file specifying the style name.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c0880-492">
            <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> qui correspond au style spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-492">The <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> that corresponds with the specified style.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-493">Inscrit les propriétés de style de balisage, qu'il s'agisse de littéraux ou de propriétés générées dynamiquement, à partir du fichier source, pour qu'elles puissent être correctement rendues au client ayant fait la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-493">Registers markup style properties, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-494">Les attributs de feuille (CSS) style en cascade prédéfinies du langage de balisage HTML sont inscrits par les appels à la <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> méthode lors de la première <xref:System.Web.UI.HtmlTextWriter> objet est créé.</span><span class="sxs-lookup"><span data-stu-id="c0880-494">The predefined cascading style sheet (CSS) attributes of the HTML markup language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="c0880-495">Les attributs de style dynamiques peuvent être inscrits à l’aide de la <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> méthode à d’autres moments.</span><span class="sxs-lookup"><span data-stu-id="c0880-495">Dynamic style attributes can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method at other times.</span></span>  
  
 <span data-ttu-id="c0880-496">La table d’inscription utilisée par le <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> méthode est `static`, de sorte que l’inscription d’attributs s’applique à tous les <xref:System.Web.UI.HtmlTextWriter> objets sur l’ordinateur hôte.</span><span class="sxs-lookup"><span data-stu-id="c0880-496">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A> method is `static`, so registration of attributes applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterStyle" />
      </Docs>
    </Member>
    <Member MemberName="RegisterTag">
      <MemberSignature Language="C#" Value="protected static void RegisterTag (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig void RegisterTag(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Sub RegisterTag (name As String, key As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static void RegisterTag(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="static member RegisterTag : string * System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="System.Web.UI.HtmlTextWriter.RegisterTag (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c0880-497">Chaîne qui contient la balise HTML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-497">A string that contains the HTML tag.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="c0880-498">
            <see cref="T:System.Web.UI.HtmlTextWriterTag" /> qui spécifie l'élément à restituer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-498">An <see cref="T:System.Web.UI.HtmlTextWriterTag" /> that specifies which element to render.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-499">Inscrit les balises de balisage, qu'il s'agisse de littéraux ou de balises générées dynamiquement, à partir du fichier source, pour qu'elles puissent être correctement rendues au client ayant fait la demande.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-499">Registers markup tags, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-500">Les balises prédéfinies du langage HTML sont inscrits par les appels à la <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> méthode lors de la première <xref:System.Web.UI.HtmlTextWriter> objet est créé.</span><span class="sxs-lookup"><span data-stu-id="c0880-500">The predefined markup tags of the HTML language are registered by calls to the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method when the first <xref:System.Web.UI.HtmlTextWriter> object is created.</span></span> <span data-ttu-id="c0880-501">Balises dynamiques peuvent être inscrits à l’aide de la <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> méthode à d’autres moments.</span><span class="sxs-lookup"><span data-stu-id="c0880-501">Dynamic markup tags can be registered by using the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method at other times.</span></span>  
  
 <span data-ttu-id="c0880-502">La table d’inscription utilisée par le <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> méthode est `static`, de sorte que l’inscription des balises s’applique à tous les <xref:System.Web.UI.HtmlTextWriter> objets sur l’ordinateur hôte.</span><span class="sxs-lookup"><span data-stu-id="c0880-502">The registration table used by the <xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A> method is `static`, so registration of tags applies to all <xref:System.Web.UI.HtmlTextWriter> objects on the host computer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterContent">
      <MemberSignature Language="C#" Value="protected virtual string RenderAfterContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderAfterContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderAfterContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderAfterContent();" />
      <MemberSignature Language="F#" Value="abstract member RenderAfterContent : unit -&gt; string&#xA;override this.RenderAfterContent : unit -&gt; string" Usage="htmlTextWriter.RenderAfterContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0880-503">Écrit le texte ou l'espacement survenant après le contenu et avant la balise de fermeture de l'élément de balisage à rendre dans le flux de sortie de balisage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-503">Writes any text or spacing that occurs after the content and before the closing tag of the markup element to the markup output stream.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0880-504">Chaîne qui contient l'espacement ou le texte à écrire à la suite du contenu de l'élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-504">A string that contains the spacing or text to write after the content of the element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-505">Le <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> méthode peut être utile si vous souhaitez insérer des éléments enfants dans l’élément de balisage actuel.</span><span class="sxs-lookup"><span data-stu-id="c0880-505">The <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> method can be useful if you want to insert child elements into the current markup element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-506">L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> méthode dans une classe dérivée de la <xref:System.Web.UI.HtmlTextWriter> classe pour déterminer si un `<label>` élément est rendu.</span><span class="sxs-lookup"><span data-stu-id="c0880-506">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> method in a class derived from the <xref:System.Web.UI.HtmlTextWriter> class to determine whether a `<label>` element is being rendered.</span></span> <span data-ttu-id="c0880-507">Dans ce cas, le <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> remplacement insère la balise de fermeture d’un `<font>` élément immédiatement avant la balise de fermeture de la `<label>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-507">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> override inserts the closing tag of a `<font>` element immediately before the closing tag of the `<label>` element.</span></span> <span data-ttu-id="c0880-508">Si un élément autre que `<label>` est rendu, la <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> méthode de base est utilisée.</span><span class="sxs-lookup"><span data-stu-id="c0880-508">If an element other than `<label>` is being rendered, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#3](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#3)]
 [!code-csharp[HtmlTextWriter_Methods1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#3)]
 [!code-vb[HtmlTextWriter_Methods1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c0880-509">
            <para>Le <see cref="T:System.Web.UI.HtmlTextWriter" /> implémentation de classe de la <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> méthode renvoie <see langword="null" />. Substituer <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> si vous souhaitez écrire du texte ou l’espacement après le contenu de l’élément, mais avant la balise de fermeture.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-509">
              <para>The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> method returns <see langword="null" />. Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /> if you want to write text or spacing after the element content but before the closing tag.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterTag">
      <MemberSignature Language="C#" Value="protected virtual string RenderAfterTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderAfterTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderAfterTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderAfterTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderAfterTag : unit -&gt; string&#xA;override this.RenderAfterTag : unit -&gt; string" Usage="htmlTextWriter.RenderAfterTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0880-510">Écrit l'espacement ou le texte survenant après la balise de fermeture d'un élément de balisage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-510">Writes any spacing or text that occurs after the closing tag for a markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0880-511">Espacement ou texte à écrire à la suite de la balise de fermeture de l'élément.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-511">The spacing or text to write after the closing tag of the element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-512">Le <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> méthode peut être utile si vous souhaitez restituer des balises de fermeture supplémentaires après la balise d’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-512">The <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> method can be useful if you want to render additional closing tags after the element tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-513">L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> méthode pour déterminer si une classe dérivée à partir de la <xref:System.Web.UI.HtmlTextWriter> classe est rendu un `<label>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-513">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is rendering a `<label>` element.</span></span> <span data-ttu-id="c0880-514">Dans ce cas, le <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> remplacement insère la balise de fermeture d’un `<font>` élément immédiatement après le `<label>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-514">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> override inserts the closing tag of a `<font>` element immediately after the `<label>` element.</span></span> <span data-ttu-id="c0880-515">Si elle n’est pas un `<label>` élément, le <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> méthode de base est utilisée.</span><span class="sxs-lookup"><span data-stu-id="c0880-515">If it is not a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#2)]
 [!code-vb[HtmlTextWriter_Methods4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c0880-516">
            <para>Le <see cref="T:System.Web.UI.HtmlTextWriter" /> implémentation de classe de la <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> méthode renvoie <see langword="null" />. Substituer <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> si vous souhaitez écrire du texte ou l’espacement après la balise de fermeture de l’élément.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-516">
              <para>The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> method returns <see langword="null" />. Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /> if you want to write text or spacing after the element closing tag.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeContent">
      <MemberSignature Language="C#" Value="protected virtual string RenderBeforeContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderBeforeContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderBeforeContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderBeforeContent();" />
      <MemberSignature Language="F#" Value="abstract member RenderBeforeContent : unit -&gt; string&#xA;override this.RenderBeforeContent : unit -&gt; string" Usage="htmlTextWriter.RenderBeforeContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0880-517">Écrit le texte ou l'espacement avant le contenu et après la balise d'ouverture d'un élément de balisage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-517">Writes any text or spacing before the content and after the opening tag of a markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0880-518">Espacement ou texte à écrire avant le contenu de l'élément de balisage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-518">The text or spacing to write prior to the content of the element.</span>
          </span>
          <span data-ttu-id="c0880-519">Si elle n'est pas substituée, <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> retourne <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-519">If not overridden, <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-520">Le <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> méthode peut être utile si vous souhaitez insérer des éléments enfants dans l’élément de balisage en cours avant le balisage interne.</span><span class="sxs-lookup"><span data-stu-id="c0880-520">The <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method can be useful if you want to insert child elements into the current markup element before the inner markup.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-521">L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> méthode pour déterminer si une classe dérivée à partir de la <xref:System.Web.UI.HtmlTextWriter> classe est sur le point de restituer un `<label>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-521">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method to determine whether a class derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element.</span></span> <span data-ttu-id="c0880-522">Dans ce cas, le <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> remplacement insère la balise d’ouverture d’un `<font>` élément situé juste après la balise d’ouverture de la `<label>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-522">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> override inserts the opening tag of a `<font>` element immediately after the opening tag of the `<label>` element.</span></span> <span data-ttu-id="c0880-523">Si elle n’est pas un `<label>` élément, le <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> méthode de base est utilisée.</span><span class="sxs-lookup"><span data-stu-id="c0880-523">If it is not a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#2)]
 [!code-vb[HtmlTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c0880-524">
            <para>Le <see cref="T:System.Web.UI.HtmlTextWriter" /> implémentation de classe de la <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> méthode renvoie <see langword="null" />. Substituer <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> si vous souhaitez écrire du texte ou l’espacement après la balise d’ouverture mais avant le contenu de l’élément.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-524">
              <para>The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> method returns <see langword="null" />. Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /> if you want to write text or spacing after the opening tag but ahead of the element content.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeTag">
      <MemberSignature Language="C#" Value="protected virtual string RenderBeforeTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string RenderBeforeTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RenderBeforeTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ RenderBeforeTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderBeforeTag : unit -&gt; string&#xA;override this.RenderBeforeTag : unit -&gt; string" Usage="htmlTextWriter.RenderBeforeTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0880-525">Écrit tout texte ou espacement survenant avant la balise d'ouverture d'un élément de balisage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-525">Writes any text or spacing that occurs before the opening tag of a markup element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0880-526">Texte ou espacement à écrire avant la balise d'ouverture d'un élément de balisage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-526">The text or spacing to write before the markup element opening tag.</span>
          </span>
          <span data-ttu-id="c0880-527">Si la méthode n'est pas substituée, <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-527">If not overridden, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-528">Le <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> méthode peut être utile si vous souhaitez restituer des balises d’ouverture supplémentaires avant la balise d’ouverture de l’élément prévu.</span><span class="sxs-lookup"><span data-stu-id="c0880-528">The <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method can be useful if you want to render additional opening tags before the opening tag of the intended element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-529">L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> méthode pour déterminer si une classe dérivée de la <xref:System.Web.UI.HtmlTextWriter> classe est sur le point de restituer un `<label>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-529">The following code example shows how to override the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method to determine whether a class that is derived from the <xref:System.Web.UI.HtmlTextWriter> class is about to render a `<label>` element.</span></span> <span data-ttu-id="c0880-530">Dans ce cas, le <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> remplacement insère la balise d’ouverture d’un `<font>` élément immédiatement avant le `<label>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-530">If so, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> override inserts the opening tag of a `<font>` element immediately before the `<label>` element.</span></span> <span data-ttu-id="c0880-531">S’il n’est pas rendu un `<label>` élément, le <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> méthode de base est utilisée.</span><span class="sxs-lookup"><span data-stu-id="c0880-531">If it is not rendering a `<label>` element, the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> base method is used.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#1)]
 [!code-vb[HtmlTextWriter_Methods4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c0880-532">
            <para>Le <see cref="T:System.Web.UI.HtmlTextWriter" /> implémentation de classe de la <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> méthode renvoie <see langword="null" />. Substituer <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> si vous souhaitez écrire du texte ou l’espacement avant la balise d’ouverture de l’élément.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-532">
              <para>The <see cref="T:System.Web.UI.HtmlTextWriter" /> class implementation of the <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> method returns <see langword="null" />. Override <see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /> if you want to write text or spacing ahead of the element opening tag.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RenderBeginTag">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-533">Écrit la balise d'ouverture d'un élément de balisage dans un flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-533">Writes the opening tag of a markup element to the output stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginTag : string -&gt; unit&#xA;override this.RenderBeginTag : string -&gt; unit" Usage="htmlTextWriter.RenderBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="c0880-534">Chaîne contenant le nom de l’élément de balisage pour lequel afficher la balise d’ouverture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-534">A string containing the name of the markup element for which to render the opening tag.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-535">Écrit la balise d’ouverture de l’élément de balisage spécifié dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-535">Writes the opening tag of the specified markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-536">Utilisez le <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> la substitution de la <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29> méthode, si l’élément de balisage ne fait pas partie de la <xref:System.Web.UI.HtmlTextWriterTag> valeurs d’énumération.</span><span class="sxs-lookup"><span data-stu-id="c0880-536">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> override of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29> method, if the markup element is not one of the <xref:System.Web.UI.HtmlTextWriterTag> enumeration values.</span></span>  
  
 <span data-ttu-id="c0880-537">Pour générer un élément de balisage à l’aide de la <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> méthode, appelez d’abord la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> et <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> méthodes, selon les besoins, pour spécifier les attributs de l’élément ou les attributs de style qui doivent apparaître dans la balise d’ouverture de l’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-537">To generate a markup element by using the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method, first call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</span></span> <span data-ttu-id="c0880-538">Après avoir généré le balisage interne, appelez le <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> méthode permettant de générer la balise de fermeture.</span><span class="sxs-lookup"><span data-stu-id="c0880-538">After generating the inner markup, call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to generate the closing tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-539">L’exemple de code suivant montre comment appeler le <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> méthode dans un contrôle personnalisé pour restituer la balise d’ouverture non standard `MyTag` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-539">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method in a custom control to render the opening tag of a non-standard `MyTag` element.</span></span> <span data-ttu-id="c0880-540">L’exemple de code appelle ensuite la <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode pour restituer le balisage interne, puis appelle la <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> méthode de fermeture de l’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-540">The code example then calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render inner markup, and then calls the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to close the element.</span></span>  
  
 <span data-ttu-id="c0880-541">Cet exemple de code génère le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-541">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (tagKey As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginTag : System.Web.UI.HtmlTextWriterTag -&gt; unit&#xA;override this.RenderBeginTag : System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="htmlTextWriter.RenderBeginTag tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey">
          <span data-ttu-id="c0880-542">Une des valeurs <see cref="T:System.Web.UI.HtmlTextWriterTag" /> définissant la balise d'ouverture de l'élément de balisage à restituer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-542">One of the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> values that defines the opening tag of the markup element to render.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-543">Écrit la balise d'ouverture de l'élément de balisage associé à la valeur d'énumération <see cref="T:System.Web.UI.HtmlTextWriterTag" /> spécifiée dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-543">Writes the opening tag of the markup element associated with the specified <see cref="T:System.Web.UI.HtmlTextWriterTag" /> enumeration value to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-544">Utilisez le <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> surcharge de la <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29> méthode si l’élément de balisage est de type connu qui est un de la <xref:System.Web.UI.HtmlTextWriterTag> valeurs d’énumération.</span><span class="sxs-lookup"><span data-stu-id="c0880-544">Use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload of the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29> method if the markup element is of a known type that is one of the <xref:System.Web.UI.HtmlTextWriterTag> enumeration values.</span></span>  
  
 <span data-ttu-id="c0880-545">Pour générer un élément de balisage à l’aide de la <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> méthode, appelez d’abord la <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> et <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> méthodes, selon les besoins, pour spécifier les attributs de l’élément ou les attributs de style qui doivent apparaître dans la balise d’ouverture de l’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-545">To generate a markup element by using the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method, first call the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> and the <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</span></span> <span data-ttu-id="c0880-546">Après avoir généré le balisage interne, appelez le <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> méthode permettant de générer la balise de fermeture.</span><span class="sxs-lookup"><span data-stu-id="c0880-546">After generating the inner markup, call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method to generate the closing tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-547">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> méthode vers la sortie de la balise d’ouverture d’un `<img>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-547">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method to output the opening tag of an `<img>` element.</span></span> <span data-ttu-id="c0880-548">Les attributs sont ajoutés à l’élément par le <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> méthode sera dans l’ouverture `<img>` balise.</span><span class="sxs-lookup"><span data-stu-id="c0880-548">The attributes that are added to the element by the <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> method will be in the opening `<img>` tag.</span></span> <span data-ttu-id="c0880-549">Le <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> méthode est utilisée pour générer la balise de fermeture.</span><span class="sxs-lookup"><span data-stu-id="c0880-549">The <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method is used to generate the closing tag.</span></span>  
  
 <span data-ttu-id="c0880-550">Cet exemple de code génère le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-550">This code example generates the following markup:</span></span>  
  
 `<img alt="Encoding &quot;Required&quot;" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public virtual void RenderEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.RenderEndTag" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndTag ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndTag();" />
      <MemberSignature Language="F#" Value="abstract member RenderEndTag : unit -&gt; unit&#xA;override this.RenderEndTag : unit -&gt; unit" Usage="htmlTextWriter.RenderEndTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0880-551">Écrit la balise de fermeture  d'un élément de balisage dans un flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-551">Writes the end tag of a markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-552">Appelez le <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> méthode après le <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> surcharge est appelée et après que tout le contenu entre les balises d’ouverture et de fermeture (balisage interne) de l’élément a été rendu.</span><span class="sxs-lookup"><span data-stu-id="c0880-552">Call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method after the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> overload is called and after all content between the opening and closing tags (inner markup) of the element has been rendered.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-553">L’exemple de code suivant montre comment appeler le <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> méthode après les deux le <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> méthode qui génère la balise d’ouverture et la <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode qui restitue le balisage interne entre les balises d’ouverture et fermeture personnalisé`MyTag` élément ont été appelées.</span><span class="sxs-lookup"><span data-stu-id="c0880-553">The following code example demonstrates how to call the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method after both the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method that generates the opening tag and the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method that renders the inner markup between the opening and closing tags of the custom `MyTag` element have been called.</span></span>  
  
 <span data-ttu-id="c0880-554">Cet exemple de code génère le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-554">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="SelfClosingChars">
      <MemberSignature Language="C#" Value="public const string SelfClosingChars;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelfClosingChars" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SelfClosingChars" />
      <MemberSignature Language="VB.NET" Value="Public Const SelfClosingChars As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelfClosingChars;" />
      <MemberSignature Language="F#" Value="val mutable SelfClosingChars : string" Usage="System.Web.UI.HtmlTextWriter.SelfClosingChars" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-555">Représente un espace et la marque de barre oblique de fermeture automatique (/) d'une balise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-555">Represents a space and the self-closing slash mark (/) of a markup tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-556">Le <xref:System.Web.UI.HtmlTextWriter.SelfClosingChars> champ est utilisé dans les éléments de balisage qui sont ferment automatiquement.</span><span class="sxs-lookup"><span data-stu-id="c0880-556">The <xref:System.Web.UI.HtmlTextWriter.SelfClosingChars> field is used in markup elements that are self-closed.</span></span> <span data-ttu-id="c0880-557">Exemple :</span><span class="sxs-lookup"><span data-stu-id="c0880-557">For example:</span></span>  
  
 `<input type="submit" value="go"  />`  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SelfClosingTagEnd">
      <MemberSignature Language="C#" Value="public const string SelfClosingTagEnd;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelfClosingTagEnd" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
      <MemberSignature Language="VB.NET" Value="Public Const SelfClosingTagEnd As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelfClosingTagEnd;" />
      <MemberSignature Language="F#" Value="val mutable SelfClosingTagEnd : string" Usage="System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-558">Représente la barre oblique de fermeture et le crochet droit (/&gt;) d’un élément de balisage de fermeture automatique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-558">Represents the closing slash mark and right angle bracket (/&gt;) of a self-closing markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-559">Le <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> champ est utilisé par le <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> méthode lors de la construction des éléments de balisage de fermeture automatique.</span><span class="sxs-lookup"><span data-stu-id="c0880-559">The <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method when constructing self-closing markup elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-560">L’exemple de code suivant montre comment restituer la valeur d’une personnalisée `FileName` propriété suivie d’un guillemet et les caractères représentés par le <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> champ.</span><span class="sxs-lookup"><span data-stu-id="c0880-560">The following code example shows how to render the value of a custom `FileName` property followed by a quotation mark and the characters represented by the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field.</span></span> <span data-ttu-id="c0880-561">L’exemple de code appelle la <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode et passe le <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> champ en tant qu’argument de paramètre pour fermer l’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-561">The code example calls the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method and passes the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> field as the parameter argument to close the element.</span></span>  
  
 <span data-ttu-id="c0880-562">Cet exemple de code restitue le `FileName` valeur de propriété, puis le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-562">This code example renders the `FileName` property value, and then the following markup:</span></span>  
  
 `" />`  
  
 [!code-csharp[MarkupTextWriter_Constants#11](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#11)]
 [!code-vb[MarkupTextWriter_Constants#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
      </Docs>
    </Member>
    <Member MemberName="SemicolonChar">
      <MemberSignature Language="C#" Value="public const char SemicolonChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SemicolonChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SemicolonChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SemicolonChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SemicolonChar;" />
      <MemberSignature Language="F#" Value="val mutable SemicolonChar : char" Usage="System.Web.UI.HtmlTextWriter.SemicolonChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-563">Représente le point-virgule (;).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-563">Represents the semicolon (;).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-564">Passez le <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> champ en tant qu’argument de paramètre dans un <xref:System.Web.UI.HtmlTextWriter.Write%2A> appel de méthode lorsque vous souhaitez restituer un point-virgule à partir d’un contrôle ou adaptateur personnalisé.</span><span class="sxs-lookup"><span data-stu-id="c0880-564">Pass the <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> field as the parameter argument in a <xref:System.Web.UI.HtmlTextWriter.Write%2A> method call when you want to render a semicolon from a custom control or adapter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-565">L’exemple de code suivant montre comment restituer manuellement une série de styles sur un élément de balisage.</span><span class="sxs-lookup"><span data-stu-id="c0880-565">The following code example demonstrates how to manually render a series of styles on a markup element.</span></span> <span data-ttu-id="c0880-566">L’exemple de code utilise le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode pour restituer `font-size` et `border-style` des attributs de style.</span><span class="sxs-lookup"><span data-stu-id="c0880-566">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render `font-size` and `border-style` style attributes.</span></span> <span data-ttu-id="c0880-567">Le <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> champ est utilisé en tant que paramètre de la <xref:System.Web.UI.HtmlTextWriter.Write%2A> (méthode) pour séparer la valeur de la `font-size` attribut à partir du début de la `border-style` attribut.</span><span class="sxs-lookup"><span data-stu-id="c0880-567">The <xref:System.Web.UI.HtmlTextWriter.SemicolonChar> field is used as a parameter of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to separate the value of the `font-size` attribute from the beginning of the `border-style` attribute.</span></span>  
  
 <span data-ttu-id="c0880-568">Cet exemple de code restitue le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-568">This code example renders the following markup:</span></span>  
  
 `style="font-size:12pt;border-style:ridge"`  
  
 [!code-csharp[MarkupTextWriter_Constants#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simplebutton.cs#7)]
 [!code-vb[MarkupTextWriter_Constants#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simplebutton.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.Write(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SingleQuoteChar">
      <MemberSignature Language="C#" Value="public const char SingleQuoteChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SingleQuoteChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SingleQuoteChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SingleQuoteChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SingleQuoteChar;" />
      <MemberSignature Language="F#" Value="val mutable SingleQuoteChar : char" Usage="System.Web.UI.HtmlTextWriter.SingleQuoteChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-569">Représente une apostrophe (').</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-569">Represents an apostrophe (').</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-570">Utilisez le <xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar> champ lorsqu’il est nécessaire restituer une apostrophe.</span><span class="sxs-lookup"><span data-stu-id="c0880-570">Use the <xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar> field when it is necessary to render an apostrophe.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SlashChar">
      <MemberSignature Language="C#" Value="public const char SlashChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SlashChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SlashChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SlashChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SlashChar;" />
      <MemberSignature Language="F#" Value="val mutable SlashChar : char" Usage="System.Web.UI.HtmlTextWriter.SlashChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-571">Représente la barre oblique (/).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-571">Represents the slash mark (/).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-572">Utilisez le <xref:System.Web.UI.HtmlTextWriter.SlashChar> marque de champ pour restituer les barres obliques lorsque vous écrivez une URL.</span><span class="sxs-lookup"><span data-stu-id="c0880-572">Use the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field to render the slash marks when you write a URL.</span></span> <span data-ttu-id="c0880-573">Le <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> utilise le <xref:System.Web.UI.HtmlTextWriter.SlashChar> champ lors de l’écriture de la balise de fermeture d’un élément de balisage.</span><span class="sxs-lookup"><span data-stu-id="c0880-573">The <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method uses the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field when writing the closing tag of a markup element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-574">L’exemple de code suivant montre comment restituer manuellement le `src` attribut d’un `<img>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-574">The following code example demonstrates how to manually render the `src` attribute of an `<img>` element.</span></span> <span data-ttu-id="c0880-575">L’exemple de code utilise le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode avec la <xref:System.Web.UI.HtmlTextWriter.SlashChar> marque de champ en tant que paramètre pour afficher la barre oblique dans le chemin d’accès qui est appliqué à la `src` attribut.</span><span class="sxs-lookup"><span data-stu-id="c0880-575">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.SlashChar> field as its parameter to render slash marks in the path that is applied to the `src` attribute.</span></span>  
  
 <span data-ttu-id="c0880-576">Cet exemple de code restitue le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-576">This code example renders the following markup:</span></span>  
  
 `src="/images/`  
  
 [!code-csharp[MarkupTextWriter_Constants#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpleimage.cs#10)]
 [!code-vb[MarkupTextWriter_Constants#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpleimage.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SpaceChar">
      <MemberSignature Language="C#" Value="public const char SpaceChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char SpaceChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.SpaceChar" />
      <MemberSignature Language="VB.NET" Value="Public Const SpaceChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char SpaceChar;" />
      <MemberSignature Language="F#" Value="val mutable SpaceChar : char" Usage="System.Web.UI.HtmlTextWriter.SpaceChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-577">Représente un espace ( ).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-577">Represents a space ( ) character.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-578">Le <xref:System.Web.UI.HtmlTextWriter.SpaceChar> champ est utilisé par le <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> et <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> méthodes lors de l’écriture des séparateurs entre les éléments et attributs.</span><span class="sxs-lookup"><span data-stu-id="c0880-578">The <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> methods when writing separators between elements and attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-579">Cette section fournit deux exemples de code.</span><span class="sxs-lookup"><span data-stu-id="c0880-579">This section provides two code examples.</span></span> <span data-ttu-id="c0880-580">Le premier montre comment créer un tableau de caractères.</span><span class="sxs-lookup"><span data-stu-id="c0880-580">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="c0880-581">Le deuxième montre comment utiliser le tableau.</span><span class="sxs-lookup"><span data-stu-id="c0880-581">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="c0880-582">Ces exemples de code génèrent le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-582">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="c0880-583">L’exemple de code suivant montre comment créer un <xref:System.Char> tableau qui contient le <xref:System.Web.UI.HtmlTextWriter.SpaceChar> champ.</span><span class="sxs-lookup"><span data-stu-id="c0880-583">The following code example shows how to create a <xref:System.Char> array that contains the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="c0880-584">L’exemple de code suivant montre comment utiliser le tableau qui a été créé dans l’exemple de code précédent comme paramètre lors de l’appel du <xref:System.Web.UI.HtmlTextWriter.Write%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-584">The following code example shows how to use the array that was created in the preceding code example as a parameter when calling the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#12](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#12)]
 [!code-vb[MarkupTextWriter_Methods2#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="StyleEqualsChar">
      <MemberSignature Language="C#" Value="public const char StyleEqualsChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char StyleEqualsChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar" />
      <MemberSignature Language="VB.NET" Value="Public Const StyleEqualsChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char StyleEqualsChar;" />
      <MemberSignature Language="F#" Value="val mutable StyleEqualsChar : char" Usage="System.Web.UI.HtmlTextWriter.StyleEqualsChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-585">Représente le caractère égal pour les styles (<see langword=":" />) utilisé pour définir des attributs de style égaux aux valeurs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-585">Represents the style equals (<see langword=":" />) character used to set style attributes equal to values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-586">Le <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> champ est utilisé par le <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> (méthode) pour délimiter les valeurs et les noms de style.</span><span class="sxs-lookup"><span data-stu-id="c0880-586">The <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method to delimit style names and values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-587">L’exemple de code suivant montre comment restituer un `FontWeight` attribut et la valeur de `bold` à la balise d’ouverture d’un élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-587">The following code example demonstrates how to render a `FontWeight` attribute and value of `bold` to the opening tag of an element.</span></span> <span data-ttu-id="c0880-588">L’exemple de code utilise le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode avec le <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> champ comme paramètre pour restituer le caractère qui définit la valeur de chaque attribut de style.</span><span class="sxs-lookup"><span data-stu-id="c0880-588">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar> field as the parameter to render the character that sets the value of each style attribute.</span></span>  
  
 <span data-ttu-id="c0880-589">Cet exemple de code restitue le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-589">This code example renders the following markup:</span></span>  
  
 `FontWeight:"bold"`  
  
 [!code-csharp[MarkupTextWriter_Constants#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#5)]
 [!code-vb[MarkupTextWriter_Constants#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected System.Web.UI.HtmlTextWriterTag TagKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); void set(System::Web::UI::HtmlTextWriterTag value); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag with get, set" Usage="System.Web.UI.HtmlTextWriter.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-590">Obtient ou définit la valeur <see cref="T:System.Web.UI.HtmlTextWriterTag" /> de l'élément de balisage spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-590">Gets or sets the <see cref="T:System.Web.UI.HtmlTextWriterTag" /> value for the specified markup element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0880-591">Élément de balisage dont la balise d'ouverture est rendue.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-591">The markup element that is having its opening tag rendered.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-592">Le <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> propriété est utile uniquement pour les classes qui héritent de la <xref:System.Web.UI.HtmlTextWriter> classe.</span><span class="sxs-lookup"><span data-stu-id="c0880-592">The <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property is of use only to classes that inherit from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="c0880-593">Vous devez lire ou définir le <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> propriété uniquement dans un appel à la <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> méthode ; c’est le seul moment où elle est définie sur une valeur cohérente.</span><span class="sxs-lookup"><span data-stu-id="c0880-593">You should read or set the <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property only in a call to the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method; this is the only time it is set to a consistent value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-594">L’exemple de code suivant illustre une version substituée de la <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> méthode dans une classe qui dérive de la <xref:System.Web.UI.HtmlTextWriter> classe.</span><span class="sxs-lookup"><span data-stu-id="c0880-594">The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="c0880-595">Il utilise la valeur de la <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> propriété pour déterminer si un contrôle serveur à l’aide personnalisée <xref:System.Web.UI.HtmlTextWriter> objet est rendu un `<label>` élément de balisage.</span><span class="sxs-lookup"><span data-stu-id="c0880-595">It uses the value of the <xref:System.Web.UI.HtmlTextWriter.TagKey%2A> property to determine whether a server control using the custom <xref:System.Web.UI.HtmlTextWriter> object is rendering a `<label>` markup element.</span></span> <span data-ttu-id="c0880-596">S’il s’agit, un `<font>` élément avec un `color` attribut la valeur `red` est retourné pour modifier la mise en forme de la `<label>` texte de l’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-596">If it is, a `<font>` element with a `color` attribute set to `red` is returned to modify the formatting of the `<label>` element's text.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods1#2](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CPP/htw2.cpp#2)]
 [!code-csharp[HtmlTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods1/CS/htw2.cs#2)]
 [!code-vb[HtmlTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods1/VB/htw2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="c0880-597">La valeur de la propriété ne peut pas être définie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-597">The property value cannot be set.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.TagName" />
      </Docs>
    </Member>
    <Member MemberName="TagLeftChar">
      <MemberSignature Language="C#" Value="public const char TagLeftChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char TagLeftChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.TagLeftChar" />
      <MemberSignature Language="VB.NET" Value="Public Const TagLeftChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char TagLeftChar;" />
      <MemberSignature Language="F#" Value="val mutable TagLeftChar : char" Usage="System.Web.UI.HtmlTextWriter.TagLeftChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-598">Représente le crochet d’ouverture (&lt;) d’une balise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-598">Represents the opening angle bracket (&lt;) of a markup tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-599">Le <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> champ est utilisé par le <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, et <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> méthodes lors de l’écriture des balises.</span><span class="sxs-lookup"><span data-stu-id="c0880-599">The <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, and <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> methods when writing markup tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-600">L’exemple de code suivant restitue le premier caractère de la balise d’ouverture d’un `<table>` élément portant le nom de l’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-600">The following code example renders the first character of the opening tag of a `<table>` element with the element name.</span></span> <span data-ttu-id="c0880-601">L’exemple de code utilise le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode avec le <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> champ en tant que paramètre.</span><span class="sxs-lookup"><span data-stu-id="c0880-601">The code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.TagLeftChar> field as a parameter.</span></span>  
  
 <span data-ttu-id="c0880-602">Cet exemple de code restitue le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-602">This code example renders the following markup:</span></span>  
  
 `<table`  
  
 [!code-csharp[MarkupTextWriter_Constants#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#9)]
 [!code-vb[MarkupTextWriter_Constants#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="protected string TagName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlTextWriter.TagName" />
      <MemberSignature Language="VB.NET" Value="Protected Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ TagName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TagName : string with get, set" Usage="System.Web.UI.HtmlTextWriter.TagName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-603">Obtient ou définit le nom de balise d'un élément de balisage restitué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-603">Gets or sets the tag name of the markup element being rendered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c0880-604">Nom de balise de l'élément de balisage restitué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-604">The tag name of the markup element being rendered.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-605">Le <xref:System.Web.UI.HtmlTextWriter.TagName%2A> propriété est utile uniquement pour les classes qui héritent de la <xref:System.Web.UI.HtmlTextWriter> classe.</span><span class="sxs-lookup"><span data-stu-id="c0880-605">The <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property is of use only to classes that inherit from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="c0880-606">Vous devez lire ou définir le <xref:System.Web.UI.HtmlTextWriter.TagName%2A> propriété uniquement en <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> les appels de méthode ; c’est le seul moment où elle est définie sur une valeur cohérente.</span><span class="sxs-lookup"><span data-stu-id="c0880-606">You should read or set the <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property only in <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A> method calls; this is the only time it is set to a consistent value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-607">L’exemple de code suivant illustre une version substituée de la <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> méthode dans une classe qui dérive de la <xref:System.Web.UI.HtmlTextWriter> classe.</span><span class="sxs-lookup"><span data-stu-id="c0880-607">The following code example demonstrates an overridden version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method in a class that derives from the <xref:System.Web.UI.HtmlTextWriter> class.</span></span> <span data-ttu-id="c0880-608">L’exemple de code vérifie si l’élément à restituer est un `<label>` élément en appelant le <xref:System.String.Compare%2A?displayProperty=nameWithType> (méthode), puis en passant le <xref:System.Web.UI.HtmlTextWriter.TagName%2A> valeur de propriété et une chaîne, `"label"`, comme arguments de paramètre.</span><span class="sxs-lookup"><span data-stu-id="c0880-608">The code example checks whether the element to render is a `<label>` element by calling the <xref:System.String.Compare%2A?displayProperty=nameWithType> method, and then passing the <xref:System.Web.UI.HtmlTextWriter.TagName%2A> property value and a string, `"label"`, as the parameter arguments.</span></span> <span data-ttu-id="c0880-609">Si un `<label>` élément est sur le point d’être rendu, la balise d’ouverture d’un `<font>` élément, avec un `color` attribut la valeur `red`, est restituée avant la `<label>` balise d’ouverture de l’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-609">If a `<label>` element is about to be rendered, the opening tag of a `<font>` element, with a `color` attribute set to `red`, is rendered before the `<label>` element's opening tag.</span></span> <span data-ttu-id="c0880-610">Si l’élément à restituer n’est pas un `<label>` élément, la version de la classe de base de la <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="c0880-610">If the element to render is not a `<label>` element, the base class's version of the <xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A> method is called.</span></span>  
  
 [!code-cpp[HtmlTextWriter_Methods4#1](~/samples/snippets/cpp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CPP/htmltextwriter_methods4.cpp#1)]
 [!code-csharp[HtmlTextWriter_Methods4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlTextWriter_Methods4/CS/htmltextwriter_methods4.cs#1)]
 [!code-vb[HtmlTextWriter_Methods4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlTextWriter_Methods4/VB/htmltextwriter_methods4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TagRightChar">
      <MemberSignature Language="C#" Value="public const char TagRightChar;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal char TagRightChar" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.HtmlTextWriter.TagRightChar" />
      <MemberSignature Language="VB.NET" Value="Public Const TagRightChar As Char " />
      <MemberSignature Language="C++ CLI" Value="public: char TagRightChar;" />
      <MemberSignature Language="F#" Value="val mutable TagRightChar : char" Usage="System.Web.UI.HtmlTextWriter.TagRightChar" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-611">Représente le crochet fermant (&gt;) d’une balise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-611">Represents the closing angle bracket (&gt;) of a markup tag.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-612">Le <xref:System.Web.UI.HtmlTextWriter.TagRightChar> champ est utilisé par le <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, et <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> méthodes lors de l’écriture des balises.</span><span class="sxs-lookup"><span data-stu-id="c0880-612">The <xref:System.Web.UI.HtmlTextWriter.TagRightChar> field is used by the <xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A>, <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A>, and <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> methods when writing markup tags.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-613">L’exemple de code suivant montre comment restituer la balise de fermeture d’un `<table>` élément via des appels aux surcharges de la <xref:System.Web.UI.HtmlTextWriter.Write%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-613">The following code example shows how to render the closing tag of a `<table>` element by making calls to overloads of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method.</span></span> <span data-ttu-id="c0880-614">Pour restituer le dernier caractère de la balise, l’exemple de code utilise le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode avec le <xref:System.Web.UI.HtmlTextWriter.TagRightChar> champ en tant que paramètre.</span><span class="sxs-lookup"><span data-stu-id="c0880-614">To render the final character of the tag, the code example uses the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method with the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> field as a parameter.</span></span>  
  
 <span data-ttu-id="c0880-615">Cet exemple de code restitue le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-615">This code example renders the following markup:</span></span>  
  
 `</table>`  
  
 [!code-csharp[MarkupTextWriter_Constants#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Constants/CS/simpletable.cs#4)]
 [!code-vb[MarkupTextWriter_Constants#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Constants/VB/simpletable.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Write">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-616">Écrit le type de données spécifié dans le flux de sortie, ainsi que tout espacement de tabulation en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-616">Writes the specified data type to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(bool value);" />
      <MemberSignature Language="F#" Value="abstract member Write : bool -&gt; unit&#xA;override this.Write : bool -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c0880-617">
            <see cref="T:System.Boolean" /> à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-617">The <see cref="T:System.Boolean" /> to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-618">Écrit dans le flux de sortie la représentation textuelle d'une valeur Boolean, ainsi que tout espacement de tabulation en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-618">Writes the text representation of a Boolean value to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-619">Le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode génère des onglets qui sont en attente, puis appelle la <xref:System.IO.TextWriter.Write%2A> méthode de base.</span><span class="sxs-lookup"><span data-stu-id="c0880-619">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(char value);" />
      <MemberSignature Language="F#" Value="abstract member Write : char -&gt; unit&#xA;override this.Write : char -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c0880-620">Caractère Unicode à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-620">The Unicode character to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-621">Écrit dans le flux de sortie la représentation textuelle d'un caractère Unicode, ainsi que tout espacement de tabulation en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-621">Writes the text representation of a Unicode character to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-622">Le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode génère des onglets qui sont en attente, puis appelle la <xref:System.IO.TextWriter.Write%2A> méthode de base.</span><span class="sxs-lookup"><span data-stu-id="c0880-622">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-623">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode à la fin de la balise d’ouverture d’un `<img>` élément à l’aide de la <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constante.</span><span class="sxs-lookup"><span data-stu-id="c0880-623">The following code example demonstrates using the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to end the opening tag of an `<img>` element by using the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constant.</span></span>  
  
 <span data-ttu-id="c0880-624">Cet exemple de code restitue le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-624">This code example renders the following markup:</span></span>  
  
 `<img alt="A custom image">`  
  
 `</img>`  
  
 [!code-csharp[MarkupTextWriter_Samples1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Samples1/CS/markuptextwriter_samples1.cs#5)]
 [!code-vb[MarkupTextWriter_Samples1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Samples1/VB/markuptextwriter_samples1.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member Write : char[] -&gt; unit&#xA;override this.Write : char[] -&gt; unit" Usage="htmlTextWriter.Write buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c0880-625">Tableau de caractères Unicode à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-625">The array of Unicode characters to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-626">Écrit dans le flux de sortie la représentation textuelle d'un tableau de caractères Unicode, ainsi que tout espacement de tabulation en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-626">Writes the text representation of an array of Unicode characters to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-627">Le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode génère des onglets qui sont en attente, puis appelle la <xref:System.IO.TextWriter.Write%2A> méthode de base.</span><span class="sxs-lookup"><span data-stu-id="c0880-627">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-628">Cette section fournit deux exemples de code.</span><span class="sxs-lookup"><span data-stu-id="c0880-628">This section provides two code examples.</span></span> <span data-ttu-id="c0880-629">Le premier montre comment créer un tableau de caractères.</span><span class="sxs-lookup"><span data-stu-id="c0880-629">The first one demonstrates how to create an array of characters.</span></span> <span data-ttu-id="c0880-630">Le deuxième montre comment utiliser le tableau.</span><span class="sxs-lookup"><span data-stu-id="c0880-630">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="c0880-631">Ces exemples de code génèrent le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-631">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="c0880-632">L’exemple de code suivant montre comment créer un tableau de caractères correspondant à `hello world`.</span><span class="sxs-lookup"><span data-stu-id="c0880-632">The following code example demonstrates how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="c0880-633">Inclus dans le tableau est le <xref:System.Web.UI.HtmlTextWriter.SpaceChar> champ, ce qui crée un espace entre les deux mots.</span><span class="sxs-lookup"><span data-stu-id="c0880-633">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="c0880-634">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode pour restituer le `hello world` créé dans l’exemple de code précédent pour une page, lorsque le contrôle qui contient cet exemple de code est inclus dans une page de tableau de caractères.</span><span class="sxs-lookup"><span data-stu-id="c0880-634">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the `hello world` character array created in the preceding code example to a page, when the control that contains this example code is included in a page.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#12](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#12)]
 [!code-vb[MarkupTextWriter_Methods2#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(double value);" />
      <MemberSignature Language="F#" Value="abstract member Write : double -&gt; unit&#xA;override this.Write : double -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c0880-635">Nombre à virgule flottante double précision à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-635">The double-precision floating-point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-636">Écrit dans le flux de sortie la représentation textuelle d'un nombre à virgule flottante double précision, ainsi que tout espacement de tabulation en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-636">Writes the text representation of a double-precision floating-point number to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-637">Le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode génère des onglets qui sont en attente, puis appelle la <xref:System.IO.TextWriter.Write%2A> méthode de base.</span><span class="sxs-lookup"><span data-stu-id="c0880-637">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-638">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode pour restituer la valeur de la <xref:System.Double.MaxValue?displayProperty=nameWithType> champ.</span><span class="sxs-lookup"><span data-stu-id="c0880-638">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Double.MaxValue?displayProperty=nameWithType> field.</span></span>  
  
 <span data-ttu-id="c0880-639">Cet exemple de code génère le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-639">This code example generates the following markup:</span></span>  
  
 `<label>`  
  
 `1.79769313486232E+308`  
  
 `</label>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#7)]
 [!code-vb[MarkupTextWriter_Methods1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(int value);" />
      <MemberSignature Language="F#" Value="abstract member Write : int -&gt; unit&#xA;override this.Write : int -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c0880-640">Entier signé de 32 octets à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-640">The 32-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-641">Écrit dans le flux de sortie la représentation textuelle d'un entier signé de 32 octets, ainsi que tout espacement de tabulation en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-641">Writes the text representation of a 32-byte signed integer to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-642">Le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode génère des onglets qui sont en attente, puis appelle la <xref:System.IO.TextWriter.Write%2A> méthode de base.</span><span class="sxs-lookup"><span data-stu-id="c0880-642">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(long value);" />
      <MemberSignature Language="F#" Value="abstract member Write : int64 -&gt; unit&#xA;override this.Write : int64 -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c0880-643">Entier signé de 64 octets à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-643">The 64-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-644">Écrit dans le flux de sortie la représentation textuelle d’un entier signé de 64 octets, ainsi que tout espacement de tabulation en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-644">Writes the text representation of a 64-byte signed integer to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-645">Le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode génère des onglets qui sont en attente, puis appelle la <xref:System.IO.TextWriter.Write%2A> méthode de base.</span><span class="sxs-lookup"><span data-stu-id="c0880-645">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member Write : obj -&gt; unit&#xA;override this.Write : obj -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c0880-646">Objet à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-646">The object to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-647">Écrit dans le flux de sortie la représentation textuelle d'un objet, ainsi que tout espacement de tabulation en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-647">Writes the text representation of an object to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-648">Le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode génère des onglets qui sont en attente, puis appelle la <xref:System.IO.TextWriter.Write%2A> méthode de base.</span><span class="sxs-lookup"><span data-stu-id="c0880-648">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-649">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode pour restituer la valeur de la <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="c0880-649">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="c0880-650">Cet exemple de code génère le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-650">This code example generates the following markup:</span></span>  
  
 `This is a rendered CultureInfo object.`  
  
 `<bold>`  
  
 <span data-ttu-id="c0880-651">La valeur de la <xref:System.Globalization.CultureInfo.CurrentCulture%2A> propriété :</span><span class="sxs-lookup"><span data-stu-id="c0880-651">The value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property:</span></span>  
  
 `</bold>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#8)]
 [!code-vb[MarkupTextWriter_Methods1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(float value);" />
      <MemberSignature Language="F#" Value="abstract member Write : single -&gt; unit&#xA;override this.Write : single -&gt; unit" Usage="htmlTextWriter.Write value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c0880-652">Nombre à virgule flottante simple précision à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-652">The single-precision floating-point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-653">Écrit dans le flux de sortie la représentation textuelle d'un nombre à virgule flottante simple précision, ainsi que tout espacement de tabulation en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-653">Writes the text representation of a single-precision floating-point number to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-654">Le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode génère des onglets qui sont en attente, puis appelle la <xref:System.IO.TextWriter.Write%2A> méthode de base.</span><span class="sxs-lookup"><span data-stu-id="c0880-654">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-655">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode pour restituer la valeur de la <xref:System.Single.Epsilon?displayProperty=nameWithType> champ, qui est la plus petite valeur possible du <xref:System.Single> structure.</span><span class="sxs-lookup"><span data-stu-id="c0880-655">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the value of the <xref:System.Single.Epsilon?displayProperty=nameWithType> field, which is the smallest possible value of the <xref:System.Single> structure.</span></span>  
  
 <span data-ttu-id="c0880-656">Cet exemple de code génère le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-656">This code example generates the following markup:</span></span>  
  
 `<b>`  
  
 `1.401298E-45`  
  
 `</b>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#10)]
 [!code-vb[MarkupTextWriter_Methods1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member Write : string -&gt; unit&#xA;override this.Write : string -&gt; unit" Usage="htmlTextWriter.Write s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="c0880-657">Chaîne à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-657">The string to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-658">Écrit la chaîne spécifiée dans le flux de sortie, ainsi que tout espacement de tabulation en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-658">Writes the specified string to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-659">Le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode génère des onglets qui sont en attente, puis appelle la <xref:System.IO.TextWriter.Write%2A> méthode de base.</span><span class="sxs-lookup"><span data-stu-id="c0880-659">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-660">L’exemple de code suivant montre comment utiliser la <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode pour restituer une chaîne entre des balises d’ouverture et fermeture d’un élément de balisage personnalisée.</span><span class="sxs-lookup"><span data-stu-id="c0880-660">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a string between the opening and closing tags of a custom markup element.</span></span>  
  
 <span data-ttu-id="c0880-661">Cet exemple de code génère le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-661">This code example generates the following markup:</span></span>  
  
 `<MyTag>`  
  
 `Contents of MyTag`  
  
 `</MyTag>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#4)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#4)]
 [!code-vb[System.Web.UI.HtmlTextWriter#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj -&gt; unit&#xA;override this.Write : string * obj -&gt; unit" Usage="htmlTextWriter.Write (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="c0880-662">Chaîne qui contient zéro, un ou plusieurs éléments de mise en forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-662">A string that contains zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="c0880-663">Objet à mettre en forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-663">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-664">Écrit une chaîne de tabulation et une chaîne mise en forme dans le flux de sortie, en utilisant la même sémantique que la méthode <see cref="M:System.String.Format(System.String,System.Object)" />, ainsi que tout espacement de tabulation en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-664">Writes a tab string and a formatted string to the output stream, using the same semantics as the <see cref="M:System.String.Format(System.String,System.Object)" /> method, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-665">Le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode génère des onglets qui sont en attente, puis appelle la <xref:System.IO.TextWriter.Write%2A> méthode de base.</span><span class="sxs-lookup"><span data-stu-id="c0880-665">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-666">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode pour restituer une chaîne mise en forme avec la valeur de la <xref:System.Globalization.CultureInfo.CurrentCulture%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="c0880-666">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#5)]
 [!code-vb[MarkupTextWriter_Methods1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj[] -&gt; unit&#xA;override this.Write : string * obj[] -&gt; unit" Usage="htmlTextWriter.Write (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="c0880-667">Chaîne qui contient zéro, un ou plusieurs éléments de mise en forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-667">A string that contains zero or more format items.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="c0880-668">Tableau d'objets à mettre en forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-668">An object array to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-669">Écrit une chaîne mise en forme qui contient la représentation textuelle d'un tableau d'objets dans le flux de sortie, ainsi que tout espacement de tabulation en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-669">Writes a formatted string that contains the text representation of an object array to the output stream, along with any pending tab spacing.</span>
          </span>
          <span data-ttu-id="c0880-670">Cette méthode utilise la même sémantique que la méthode <see cref="M:System.String.Format(System.String,System.Object[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-670">This method uses the same semantics as the <see cref="M:System.String.Format(System.String,System.Object[])" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-671">Le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode génère des onglets qui sont en attente, puis appelle la <xref:System.IO.TextWriter.Write%2A> méthode de base.</span><span class="sxs-lookup"><span data-stu-id="c0880-671">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-672">Cette section contient deux exemples de code.</span><span class="sxs-lookup"><span data-stu-id="c0880-672">This section contains two code examples.</span></span> <span data-ttu-id="c0880-673">Le premier montre comment restituer une chaîne mise en forme et le contenu d’un tableau.</span><span class="sxs-lookup"><span data-stu-id="c0880-673">The first one demonstrates how to render a formatted string and the contents of an array.</span></span> <span data-ttu-id="c0880-674">Le second montre comment déclarer le tableau.</span><span class="sxs-lookup"><span data-stu-id="c0880-674">The second one demonstrates how to declare the array.</span></span>  
  
 <span data-ttu-id="c0880-675">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode pour restituer une chaîne mise en forme et le contenu d’un tableau d’objets, nommé `curPriceTime`.</span><span class="sxs-lookup"><span data-stu-id="c0880-675">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string and the contents of an object array, named `curPriceTime`.</span></span> <span data-ttu-id="c0880-676">L’appel de méthode restitue le deuxième membre du tableau avant de produire le premier membre.</span><span class="sxs-lookup"><span data-stu-id="c0880-676">The method call renders the second member of the array before it renders the first member.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#9)]
 [!code-vb[MarkupTextWriter_Methods2#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#9)]  
  
 <span data-ttu-id="c0880-677">L’exemple de code suivant illustre la déclaration du `curPriceTime` tableau d’objets.</span><span class="sxs-lookup"><span data-stu-id="c0880-677">The following code example demonstrates declaring the `curPriceTime` object array.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#14](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#14)]
 [!code-vb[MarkupTextWriter_Methods2#14](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object[])" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member Write : char[] * int * int -&gt; unit&#xA;override this.Write : char[] * int * int -&gt; unit" Usage="htmlTextWriter.Write (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c0880-678">Tableau de caractères permettant d'écrire du texte dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-678">The array of characters from which to write text to the output stream.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="c0880-679">Emplacement dans le tableau de l'index auquel la copie commence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-679">The index location in the array where writing begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c0880-680">Nombre de caractères à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-680">The number of characters to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-681">Écrit dans le flux de sortie la représentation textuelle d'un sous-tableau de caractères Unicode, ainsi que tout espacement de tabulation en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-681">Writes the text representation of a subarray of Unicode characters to the output stream, along with any pending tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-682">Le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode génère des onglets qui sont en attente, puis appelle la <xref:System.IO.TextWriter.Write%2A> méthode de base.</span><span class="sxs-lookup"><span data-stu-id="c0880-682">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-683">Cette section fournit deux exemples de code.</span><span class="sxs-lookup"><span data-stu-id="c0880-683">This section provides two code examples.</span></span> <span data-ttu-id="c0880-684">Le premier montre comment créer un tableau de caractères.</span><span class="sxs-lookup"><span data-stu-id="c0880-684">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="c0880-685">Le deuxième montre comment utiliser le tableau.</span><span class="sxs-lookup"><span data-stu-id="c0880-685">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="c0880-686">Ces exemples de code génèrent le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-686">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello`  
  
 `</label>`  
  
 <span data-ttu-id="c0880-687">L’exemple de code suivant montre comment créer un tableau de caractères correspondant à `hello world`.</span><span class="sxs-lookup"><span data-stu-id="c0880-687">The following code example shows how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="c0880-688">Inclus dans le tableau est le <xref:System.Web.UI.HtmlTextWriter.SpaceChar> champ, ce qui crée un espace entre les deux mots.</span><span class="sxs-lookup"><span data-stu-id="c0880-688">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#13](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#13)]
 [!code-vb[MarkupTextWriter_Methods2#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#13)]  
  
 <span data-ttu-id="c0880-689">La partie suivante de l’exemple de code utilise le `index` et `count` les paramètres de la <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode pour restituer les cinq premiers caractères du tableau créé dans l’exemple précédent.</span><span class="sxs-lookup"><span data-stu-id="c0880-689">The following portion of the code example uses the `index` and `count` parameters of the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render the first five characters of the array created in the preceding example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#11](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/renderobjects.cs#11)]
 [!code-vb[MarkupTextWriter_Methods2#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/renderobjects.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public override void Write (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Write(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Write (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Write(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="abstract member Write : string * obj * obj -&gt; unit&#xA;override this.Write : string * obj * obj -&gt; unit" Usage="htmlTextWriter.Write (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="c0880-690">Chaîne qui contient zéro, un ou plusieurs éléments de mise en forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-690">A string that contains zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="c0880-691">Objet à mettre en forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-691">An object to format.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="c0880-692">Objet à mettre en forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-692">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-693">Écrit une chaîne mise en forme qui contient la représentation textuelle de deux objets dans le flux de sortie, ainsi que tout espacement de tabulation en attente.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-693">Writes a formatted string that contains the text representation of two objects to the output stream, along with any pending tab spacing.</span>
          </span>
          <span data-ttu-id="c0880-694">Cette méthode utilise la même sémantique que la méthode <see cref="M:System.String.Format(System.String,System.Object,System.Object)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-694">This method uses the same semantics as the <see cref="M:System.String.Format(System.String,System.Object,System.Object)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-695">Le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode génère des onglets qui sont en attente, puis appelle la <xref:System.IO.TextWriter.Write%2A> méthode de base.</span><span class="sxs-lookup"><span data-stu-id="c0880-695">The <xref:System.Web.UI.HtmlTextWriter.Write%2A> method generates any tabs that are pending, and then calls the <xref:System.IO.TextWriter.Write%2A> base method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-696">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlTextWriter.Write%2A> méthode pour restituer une chaîne mise en forme et les valeurs de la <xref:System.Globalization.CultureInfo.CurrentCulture%2A> et <xref:System.DateTime.Today%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="c0880-696">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.Write%2A> method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> and <xref:System.DateTime.Today%2A> properties.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering2.cs#6)]
 [!code-vb[MarkupTextWriter_Methods1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering2.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.String.Format(System.String,System.Object,System.Object)" />
        <altmember cref="P:System.Globalization.CultureInfo.CurrentCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-697">Écrit un attribut de balisage et sa valeur dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-697">Writes a markup attribute and its value to the output stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttribute : string * string -&gt; unit&#xA;override this.WriteAttribute : string * string -&gt; unit" Usage="htmlTextWriter.WriteAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c0880-698">Attribut à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-698">The attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c0880-699">Valeur à affecter à l’attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-699">The value assigned to the attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-700">Écrit l'attribut de balisage spécifié et sa valeur dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-700">Writes the specified markup attribute and value to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-701">Utilisez la <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> méthode pour écrire des attributs de balisage et leurs valeurs sans encodage.</span><span class="sxs-lookup"><span data-stu-id="c0880-701">Use the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write markup attributes and their values with no encoding.</span></span> <span data-ttu-id="c0880-702">Le <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> méthode écrit la valeur d’attribut entourée guillemets doubles («).</span><span class="sxs-lookup"><span data-stu-id="c0880-702">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes the attribute value enclosed in double quotation marks (").</span></span> <span data-ttu-id="c0880-703">Si `value` est `null`, le <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> méthode écrit uniquement le nom d’attribut.</span><span class="sxs-lookup"><span data-stu-id="c0880-703">If `value` is `null`, the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes only the attribute name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-704">L’exemple de code suivant illustre le rendu un `<img>` élément dans lequel les deux surcharges de la <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> méthode sont appelées.</span><span class="sxs-lookup"><span data-stu-id="c0880-704">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="c0880-705">L’exemple de code utilise le processus suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-705">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="c0880-706">Appelle la <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> méthode, qui restitue les caractères d’ouverture de l’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-706">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="c0880-707">Appelle le <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> de surcharge, lequel écrit un `alt` attribut et sa valeur à la `<img>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-707">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="c0880-708">Appelle le <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> surcharge pour effectuer le rendu personnalisé `myattribute` attribut, avec une valeur de `No "encoding" required`, puis définit `fEncode` à `false`.</span><span class="sxs-lookup"><span data-stu-id="c0880-708">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="c0880-709">Ferme la balise d’ouverture de l’élément, puis appelle la <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> méthode pour fermer le `<img>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-709">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="c0880-710">Cet exemple de code génère le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-710">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c0880-711">
            <para>Dans les classes dérivées, vous pouvez remplacer le <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> méthode pour définir des règles personnalisées pour écrire des attributs et leurs valeurs. Par exemple, vous pouvez écrire le code qui permet la <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> méthode pour écrire un attribut avec une valeur vide.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-711">
              <para>In derived classes, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> method to define custom rules for writing attributes and their values. For example, you could write code that allowed the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /> method to write an attribute with an empty value.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteAttribute (string name, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteAttribute(string name, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteAttribute (name As String, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteAttribute(System::String ^ name, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member WriteAttribute : string * string * bool -&gt; unit&#xA;override this.WriteAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.WriteAttribute (name, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c0880-712">Attribut de balisage à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-712">The markup attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c0880-713">Valeur à affecter à l’attribut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-713">The value assigned to the attribute.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="c0880-714">
            <see langword="true" /> pour encoder l’attribut et sa valeur affectée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-714">
              <see langword="true" /> to encode the attribute and its assigned value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-715">Écrit l’attribut de balisage et la valeur spécifiés dans le flux de sortie et, si elle est spécifiée, écrit la valeur encodée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-715">Writes the specified markup attribute and value to the output stream, and, if specified, writes the value encoded.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-716">Utilisez la <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> méthode pour écrire des attributs de balisage et leurs valeurs avec ou sans encodage.</span><span class="sxs-lookup"><span data-stu-id="c0880-716">Use the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write markup attributes and their values with or without encoding.</span></span> <span data-ttu-id="c0880-717">Le <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> utilise le <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> méthode pour effectuer l’encodage.</span><span class="sxs-lookup"><span data-stu-id="c0880-717">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method uses the <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method to do the encoding.</span></span>  
  
 <span data-ttu-id="c0880-718">Le <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> méthode écrit la valeur d’attribut entourée guillemets doubles («).</span><span class="sxs-lookup"><span data-stu-id="c0880-718">The <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes the attribute value enclosed in double quotation marks (").</span></span> <span data-ttu-id="c0880-719">Si `value` est `null`, le <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> méthode écrit uniquement le nom d’attribut.</span><span class="sxs-lookup"><span data-stu-id="c0880-719">If `value` is `null`, the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method writes only the attribute name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-720">L’exemple de code suivant illustre le rendu un `<img>` élément dans lequel les deux surcharges de la <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> méthode sont appelées.</span><span class="sxs-lookup"><span data-stu-id="c0880-720">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="c0880-721">L’exemple de code utilise le processus suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-721">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="c0880-722">Appelle la <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> méthode, qui restitue les caractères d’ouverture de l’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-722">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="c0880-723">Appelle le <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> de surcharge, lequel écrit un `alt` attribut et sa valeur à la `<img>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-723">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="c0880-724">Appelle le <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> surcharge pour effectuer le rendu personnalisé `myattribute` attribut, avec une valeur de `No "encoding" required`, puis définit `fEncode` à `false`.</span><span class="sxs-lookup"><span data-stu-id="c0880-724">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="c0880-725">Ferme la balise d’ouverture de l’élément, puis appelle la <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> méthode pour fermer le `<img>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-725">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="c0880-726">Cet exemple de code génère le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-726">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="c0880-727">
            <para>Dans les classes dérivées, vous pouvez remplacer le <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> méthode pour définir des règles personnalisées pour écrire des attributs et leurs valeurs. Par exemple, vous pouvez écrire le code qui permet la <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> méthode pour écrire un attribut avec une valeur vide.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-727">
              <para>In derived classes, you can override the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> method to define custom rules for writing attributes and their values. For example, you could write code that allowed the <see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /> method to write an attribute with an empty value.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBeginTag">
      <MemberSignature Language="C#" Value="public virtual void WriteBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteBeginTag : string -&gt; unit&#xA;override this.WriteBeginTag : string -&gt; unit" Usage="htmlTextWriter.WriteBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="c0880-728">Élément de balisage dont il faut écrire la balise d'ouverture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-728">The markup element of which to write the opening tag.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-729">Écrit tout espacement de tabulation et la balise d'ouverture de l'élément de balisage spécifié dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-729">Writes any tab spacing and the opening tag of the specified markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-730">Le <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> méthode n’écrit pas le crochet fermant (>) de la balise d’ouverture de l’élément de balisage.</span><span class="sxs-lookup"><span data-stu-id="c0880-730">The <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method does not write the closing angle bracket (>) of the markup element's opening tag.</span></span> <span data-ttu-id="c0880-731">Ainsi, l’écriture des attributs de balisage à la balise d’ouverture de l’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-731">This allows the writing of markup attributes to the opening tag of the element.</span></span> <span data-ttu-id="c0880-732">Utilisez le <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constante pour fermer la balise d’ouverture lors de l’appel du <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-732">Use the <xref:System.Web.UI.HtmlTextWriter.TagRightChar> constant to close the opening tag when calling the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method.</span></span> <span data-ttu-id="c0880-733">Utilisez le <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> méthode avec le <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> constante lorsque vous écrivez des éléments de balisage qui sont de fermeture automatique.</span><span class="sxs-lookup"><span data-stu-id="c0880-733">Use the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method with the <xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd> constant when you write markup elements that are self-closing.</span></span>  
  
 <span data-ttu-id="c0880-734">Le <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> méthode est utilisée par les contrôles serveur personnalisés qui ne pas autoriser le mappage de balise ou un attribut et restituer les éléments de balisage de la même façon pour chaque demande.</span><span class="sxs-lookup"><span data-stu-id="c0880-734">The <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method is used by custom server controls that do not allow tag or attribute mapping and render markup elements in the same way for each request.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-735">L’exemple de code suivant illustre le rendu un `<img>` élément dans lequel les deux surcharges de la <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> méthode sont appelées.</span><span class="sxs-lookup"><span data-stu-id="c0880-735">The following code example demonstrates rendering an `<img>` element in which both overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method are called.</span></span> <span data-ttu-id="c0880-736">L’exemple de code utilise le processus suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-736">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="c0880-737">Appelle la <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> méthode, qui restitue les caractères d’ouverture de l’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-737">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which renders the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="c0880-738">Appelle le <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> de surcharge, lequel écrit un `alt` attribut et sa valeur à la `<img>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-738">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29> overload, which writes an `alt` attribute and its value to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="c0880-739">Appelle le <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> surcharge pour effectuer le rendu personnalisé `myattribute` attribut, avec une valeur de `No "encoding" required`, puis définit `fEncode` à `false`.</span><span class="sxs-lookup"><span data-stu-id="c0880-739">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29> overload to render a custom `myattribute` attribute, with a value of `No "encoding" required`, and then sets `fEncode` to `false`.</span></span>  
  
-   <span data-ttu-id="c0880-740">Ferme la balise d’ouverture de l’élément, puis appelle la <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> méthode pour fermer le `<img>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-740">Closes the opening tag of the element, and then calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 <span data-ttu-id="c0880-741">Cet exemple de code génère le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-741">This code example generates the following markup:</span></span>  
  
 `<img alt="AtlValue" myattribute="No &quot;encoding&quot; required">`  
  
 `</img>`  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.TagRightChar" />
        <altmember cref="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteBreak">
      <MemberSignature Language="C#" Value="public virtual void WriteBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteBreak" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteBreak ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteBreak();" />
      <MemberSignature Language="F#" Value="abstract member WriteBreak : unit -&gt; unit&#xA;override this.WriteBreak : unit -&gt; unit" Usage="htmlTextWriter.WriteBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0880-742">Écrit un élément de balisage <see langword="&lt;br /&gt;" /> dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-742">Writes a <see langword="&lt;br /&gt;" /> markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-743">Utilisez la <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> méthode pour restituer la ligne s’arrête dans le balisage de contrôle ou adaptateur personnalisé.</span><span class="sxs-lookup"><span data-stu-id="c0880-743">Use the <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method to render line breaks in custom control or adapter markup.</span></span> <span data-ttu-id="c0880-744">Le <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> méthode écrit un espace entre le `br` et `/` pour une meilleure compatibilité HTML.</span><span class="sxs-lookup"><span data-stu-id="c0880-744">The <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method writes a space between the `br` and `/` for improved HTML compatibility.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-745">L’exemple de code suivant montre comment appeler le <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> méthode pour écrire un `<br />` élément dans le navigateur demandeur après le <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> méthode écrit le texte codé `&lt;custID&gt; &amp; &lt;invoice#&gt;` balisage.</span><span class="sxs-lookup"><span data-stu-id="c0880-745">The following code example shows how to call the <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method to write a `<br />` element to the requesting browser after the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method writes the encoded `&lt;custID&gt; &amp; &lt;invoice#&gt;` markup.</span></span>  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#2)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedText">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedText (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedText(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedText (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedText(System::String ^ text);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedText : string -&gt; unit&#xA;override this.WriteEncodedText : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedText text" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="c0880-746">Chaîne de texte à encoder et à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-746">The text string to encode and write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-747">Encode le texte spécifié pour l’appareil demandeur, puis l’écrit dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-747">Encodes the specified text for the requesting device, and then writes it to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-748">Utilisez le <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> méthode lorsqu’une chaîne contient des crochets pointus (\< ou >) ou une esperluette (&).</span><span class="sxs-lookup"><span data-stu-id="c0880-748">Use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method when a string contains angle brackets (\< or >) or an ampersand (&).</span></span>  
  
 <span data-ttu-id="c0880-749">Le <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> utilise le <xref:System.Web.HttpUtility.HtmlEncode%2A> méthode pour effectuer l’encodage et convertit également le caractère Unicode `00A0` à `&nbsp;`.</span><span class="sxs-lookup"><span data-stu-id="c0880-749">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method uses the <xref:System.Web.HttpUtility.HtmlEncode%2A> method to perform the encoding and also converts Unicode character `00A0` to `&nbsp;`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-750">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> méthode pour écrire le balisage codé `&lt;custID&gt; &amp; &lt;invoice#&gt;` au flux de sortie.</span><span class="sxs-lookup"><span data-stu-id="c0880-750">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A> method to write the encoded markup `&lt;custID&gt; &amp; &lt;invoice#&gt;` to the output stream.</span></span> <span data-ttu-id="c0880-751">Le <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> méthode écritures `<br />`.</span><span class="sxs-lookup"><span data-stu-id="c0880-751">The <xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A> method writes `<br />`.</span></span>  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#2)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c0880-752">
            <paramref name="text" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-752">
              <paramref name="text" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.HttpUtility.HtmlEncode(System.String,System.IO.TextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBreak" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedUrl">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedUrl (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedUrl(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedUrl (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedUrl(System::String ^ url);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedUrl : string -&gt; unit&#xA;override this.WriteEncodedUrl : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedUrl url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="c0880-753">Chaîne d’URL à encoder et à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-753">The URL string to encode and write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-754">Encode l’URL spécifiée, puis l’écrit dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-754">Encodes the specified URL, and then writes it to the output stream.</span>
          </span>
          <span data-ttu-id="c0880-755">L’URL peut inclure des paramètres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-755">The URL might include parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-756">Le <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> méthode encode la chaîne dans le `url` paramètre conformément à la spécification pour l’encodage URL.</span><span class="sxs-lookup"><span data-stu-id="c0880-756">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> method encodes the string in the `url` parameter in accordance with the specification for URL encoding.</span></span> <span data-ttu-id="c0880-757">Les paramètres qui suivent le séparateur point d’interrogation ( ?) ne sont pas encodés.</span><span class="sxs-lookup"><span data-stu-id="c0880-757">The parameters that follow the question mark (?) delimiter are not encoded.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-758">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> (méthode), qui génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="c0880-758">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> method, which generates the following output:</span></span>  
  
 `http://localhost/Sample%20Folder/Sample%20%2b%20File.txt`  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#3)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
      </Docs>
    </Member>
    <Member MemberName="WriteEncodedUrlParameter">
      <MemberSignature Language="C#" Value="public virtual void WriteEncodedUrlParameter (string urlText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEncodedUrlParameter(string urlText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEncodedUrlParameter (urlText As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEncodedUrlParameter(System::String ^ urlText);" />
      <MemberSignature Language="F#" Value="abstract member WriteEncodedUrlParameter : string -&gt; unit&#xA;override this.WriteEncodedUrlParameter : string -&gt; unit" Usage="htmlTextWriter.WriteEncodedUrlParameter urlText" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="urlText">
          <span data-ttu-id="c0880-759">Chaîne du paramètre URL à encoder et à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-759">The URL parameter string to encode and write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-760">Encode le paramètre URL spécifié pour l'appareil demandeur, puis l'écrit dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-760">Encodes the specified URL parameter for the requesting device, and then writes it to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-761">Espaces dans la partie paramètre d’une URL sont encodés comme des signes plus (+) et les signes égal (=) sont encodés sous `%3d`.</span><span class="sxs-lookup"><span data-stu-id="c0880-761">Spaces in the parameter part of a URL are encoded as plus signs (+), and equal signs (=) are encoded as `%3d`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-762">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> (méthode), qui génère la sortie suivante :</span><span class="sxs-lookup"><span data-stu-id="c0880-762">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> method, which generates the following output:</span></span>  
  
 `ID%3dCity+State`  
  
 [!code-csharp[System.Web.UI.MarkupTextWriter_Samples1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/CS/stringencoder.cs#4)]
 [!code-vb[System.Web.UI.MarkupTextWriter_Samples1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.markuptextwriter_samples1/VB/stringencoder.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="WriteEndTag">
      <MemberSignature Language="C#" Value="public virtual void WriteEndTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteEndTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteEndTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteEndTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteEndTag : string -&gt; unit&#xA;override this.WriteEndTag : string -&gt; unit" Usage="htmlTextWriter.WriteEndTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="c0880-763">Élément pour lequel écrire la balise de fermeture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-763">The element to write the closing tag for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-764">Écrit tout espacement de tabulation et la balise de fermeture de l'élément de balisage spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-764">Writes any tab spacing and the closing tag of the specified markup element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-765">Contrairement à la <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> (méthode), la <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> méthode n’a aucune logique de faire correspondre la balise d’ouverture de la balise de fin.</span><span class="sxs-lookup"><span data-stu-id="c0880-765">Unlike the <xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A> method, the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method has no logic to make the element end tag match the corresponding opening tag.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-766">L’exemple de code suivant illustre le rendu un `<img>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-766">The following code example demonstrates rendering an `<img>` element.</span></span> <span data-ttu-id="c0880-767">L’exemple de code utilise le processus suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-767">The code example uses the following process:</span></span>  
  
-   <span data-ttu-id="c0880-768">Appelle la <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> méthode pour restituer les caractères d’ouverture de l’élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-768">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method to render the opening characters of the element.</span></span>  
  
-   <span data-ttu-id="c0880-769">Appelle les deux surcharges de la <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> méthode pour écrire des attributs à la `<img>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-769">Calls the two overloads of the <xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A> method to write attributes to the `<img>` element.</span></span>  
  
-   <span data-ttu-id="c0880-770">Appelle le <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> méthode pour fermer le `<img>` élément.</span><span class="sxs-lookup"><span data-stu-id="c0880-770">Calls the <xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A> method to close the `<img>` element.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#5)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#5)]
 [!code-vb[System.Web.UI.HtmlTextWriter#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.WriteAttribute" />
      </Docs>
    </Member>
    <Member MemberName="WriteFullBeginTag">
      <MemberSignature Language="C#" Value="public virtual void WriteFullBeginTag (string tagName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteFullBeginTag(string tagName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteFullBeginTag (tagName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteFullBeginTag(System::String ^ tagName);" />
      <MemberSignature Language="F#" Value="abstract member WriteFullBeginTag : string -&gt; unit&#xA;override this.WriteFullBeginTag : string -&gt; unit" Usage="htmlTextWriter.WriteFullBeginTag tagName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tagName">
          <span data-ttu-id="c0880-771">Élément à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-771">The element to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-772">Écrit tout espacement de tabulation et la balise d'ouverture de l'élément de balisage spécifié dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-772">Writes any tab spacing and the opening tag of the specified markup element to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-773">Le <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> méthode écrit automatiquement le crochet fermant (>) de la balise d’ouverture de l’élément, contrairement à la <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> (méthode), qui n’écrit pas le crochet fermant.</span><span class="sxs-lookup"><span data-stu-id="c0880-773">The <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> method automatically writes the closing angle bracket (>) of the opening tag of the element, unlike the <xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A> method, which does not write the closing angle bracket.</span></span> <span data-ttu-id="c0880-774">Utilisez <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> pour les éléments de balisage sans attributs.</span><span class="sxs-lookup"><span data-stu-id="c0880-774">Use <xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A> for markup elements that have no attributes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteLine">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-775">Écrit des données dans un flux de sortie <see cref="T:System.Web.UI.HtmlTextWriter" />, de la manière spécifiée par les paramètres surchargés, suivies d'une chaîne de terminaison de ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-775">Writes data to an <see cref="T:System.Web.UI.HtmlTextWriter" /> output stream, as specified by the overloaded parameters, followed by a line terminator string.</span>
          </span>
          <span data-ttu-id="c0880-776">Toutes les versions de cette méthode écrivent les espacements de tabulation en attente dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-776">All versions of this method write any pending tab spacing to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-777">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</span><span class="sxs-lookup"><span data-stu-id="c0880-777">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c0880-778">Le <xref:System.IO.TextWriter.WriteLine%2A> méthode de base est utilisé pour écrire la `value` paramètre.</span><span class="sxs-lookup"><span data-stu-id="c0880-778">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine();" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : unit -&gt; unit&#xA;override this.WriteLine : unit -&gt; unit" Usage="htmlTextWriter.WriteLine " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="c0880-779">Écrit une chaîne de terminaison de ligne dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-779">Writes a line terminator string to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-780">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</span><span class="sxs-lookup"><span data-stu-id="c0880-780">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c0880-781">Pour plus d'informations, consultez <xref:System.IO.TextWriter.WriteLine%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0880-781">For more information, see <xref:System.IO.TextWriter.WriteLine%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-782">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> méthode pour insérer une ligne après un `<img>` élément est rendu.</span><span class="sxs-lookup"><span data-stu-id="c0880-782">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to insert a line after an `<img>` element is rendered.</span></span>  
  
 [!code-cpp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/cpp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CPP/htmltextwriter.cpp#3)]
 [!code-csharp[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/CS/htmltextwriter.cs#3)]
 [!code-vb[System.Web.UI.HtmlTextWriter#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlTextWriter/VB/htmltextwriter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(bool value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : bool -&gt; unit&#xA;override this.WriteLine : bool -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c0880-783">Boolean à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-783">The Boolean to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-784">Écrit dans le flux de sortie les espacements de tabulation en attente et la représentation textuelle d'une valeur Boolean, suivis d'une chaîne de terminaison de ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-784">Writes any pending tab spacing and the text representation of a Boolean value, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-785">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</span><span class="sxs-lookup"><span data-stu-id="c0880-785">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c0880-786">Le <xref:System.IO.TextWriter.WriteLine%2A> méthode de base est utilisé pour écrire la `value` paramètre.</span><span class="sxs-lookup"><span data-stu-id="c0880-786">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(char value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char -&gt; unit&#xA;override this.WriteLine : char -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c0880-787">Caractère à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-787">The character to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-788">Écrit dans le flux de sortie les espacements de tabulation en attente et un caractère Unicode, suivis d'une chaîne de terminaison de ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-788">Writes any pending tab spacing and a Unicode character, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-789">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</span><span class="sxs-lookup"><span data-stu-id="c0880-789">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c0880-790">Le <xref:System.IO.TextWriter.WriteLine%2A> méthode de base est utilisé pour écrire la `value` paramètre.</span><span class="sxs-lookup"><span data-stu-id="c0880-790">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char[] buffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char[] buffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(cli::array &lt;char&gt; ^ buffer);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char[] -&gt; unit&#xA;override this.WriteLine : char[] -&gt; unit" Usage="htmlTextWriter.WriteLine buffer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c0880-791">Tableau de caractères à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-791">The character array to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-792">Écrit dans le flux de sortie les espacements de tabulation en attente et un tableau de caractères Unicode, suivis d'une chaîne de terminaison de ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-792">Writes any pending tab spacing and an array of Unicode characters, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-793">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</span><span class="sxs-lookup"><span data-stu-id="c0880-793">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c0880-794">Le <xref:System.IO.TextWriter.WriteLine%2A> méthode de base est utilisé pour écrire la `value` paramètre.</span><span class="sxs-lookup"><span data-stu-id="c0880-794">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-795">Cette section fournit deux exemples de code.</span><span class="sxs-lookup"><span data-stu-id="c0880-795">This section provides two code examples.</span></span> <span data-ttu-id="c0880-796">Le premier montre comment créer un tableau.</span><span class="sxs-lookup"><span data-stu-id="c0880-796">The first one demonstrates how to create an array.</span></span> <span data-ttu-id="c0880-797">Le deuxième montre comment utiliser le tableau.</span><span class="sxs-lookup"><span data-stu-id="c0880-797">The second one demonstrates how to use that array.</span></span>  
  
 <span data-ttu-id="c0880-798">Ces exemples de code génèrent le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-798">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello world`  
  
 `</label>`  
  
 <span data-ttu-id="c0880-799">L’exemple de code suivant montre comment créer un tableau de caractères correspondant à `hello world`.</span><span class="sxs-lookup"><span data-stu-id="c0880-799">The following code example shows how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="c0880-800">Inclus dans le tableau est le <xref:System.Web.UI.HtmlTextWriter.SpaceChar> champ, ce qui crée un espace entre les deux mots.</span><span class="sxs-lookup"><span data-stu-id="c0880-800">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#6)]
 [!code-vb[MarkupTextWriter_Methods2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#6)]  
  
 <span data-ttu-id="c0880-801">Le code suivant exemple rend le `hello world` tableau de caractères qui a été créé dans l’exemple précédent à l’aide de la <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-801">The following code example renders the `hello world` character array that was created in the preceding example by using the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#5)]
 [!code-vb[MarkupTextWriter_Methods2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (double value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(double value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : double -&gt; unit&#xA;override this.WriteLine : double -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c0880-802">Nombre à virgule flottante double précision à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-802">The double-precision floating-point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-803">Écrit dans le flux de sortie les espacements de tabulation en attente et la représentation textuelle d'un nombre à virgule flottante double précision, suivis d'une chaîne de terminaison de ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-803">Writes any pending tab spacing and the text representation of a double-precision floating-point number, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-804">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</span><span class="sxs-lookup"><span data-stu-id="c0880-804">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c0880-805">Le <xref:System.IO.TextWriter.WriteLine%2A> méthode de base est utilisé pour écrire la `value` paramètre.</span><span class="sxs-lookup"><span data-stu-id="c0880-805">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-806">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> méthode pour restituer la valeur de la <xref:System.Double.MaxValue?displayProperty=nameWithType> champ.</span><span class="sxs-lookup"><span data-stu-id="c0880-806">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Double.MaxValue?displayProperty=nameWithType> field.</span></span>  
  
 <span data-ttu-id="c0880-807">Cet exemple de code génère le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-807">This code example generates the following markup:</span></span>  
  
 `<label>`  
  
 `1.79769313486232E+308`  
  
 `</label>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#3)]
 [!code-vb[MarkupTextWriter_Methods1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (int value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(int value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : int -&gt; unit&#xA;override this.WriteLine : int -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c0880-808">Entier signé de 32 octets à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-808">The 32-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-809">Écrit dans le flux de sortie les espacements de tabulation en attente et la représentation textuelle d'un entier signé de 32 octets, suivis d'une chaîne de terminaison de ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-809">Writes any pending tab spacing and the text representation of a 32-byte signed integer, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-810">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</span><span class="sxs-lookup"><span data-stu-id="c0880-810">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c0880-811">Le <xref:System.IO.TextWriter.WriteLine%2A> méthode de base est utilisé pour écrire la `value` paramètre.</span><span class="sxs-lookup"><span data-stu-id="c0880-811">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(long value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : int64 -&gt; unit&#xA;override this.WriteLine : int64 -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c0880-812">Entier signé de 64 octets à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-812">The 64-byte signed integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-813">Écrit dans le flux de sortie les espacements de tabulation en attente et la représentation textuelle d’un entier signé de 64 octets, suivis d’une chaîne de terminaison de ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-813">Writes any pending tab spacing and the text representation of a 64-byte signed integer, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-814">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</span><span class="sxs-lookup"><span data-stu-id="c0880-814">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c0880-815">Le <xref:System.IO.TextWriter.WriteLine%2A> méthode de base est utilisé pour écrire la `value` paramètre.</span><span class="sxs-lookup"><span data-stu-id="c0880-815">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : obj -&gt; unit&#xA;override this.WriteLine : obj -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c0880-816">Objet à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-816">The object to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-817">Écrit dans le flux de sortie les espacements de tabulation en attente et la représentation textuelle d'un objet, suivis d'une chaîne de terminaison de ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-817">Writes any pending tab spacing and the text representation of an object, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-818">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</span><span class="sxs-lookup"><span data-stu-id="c0880-818">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c0880-819">Le <xref:System.IO.TextWriter.WriteLine%2A> méthode de base est utilisé pour écrire la `value` paramètre.</span><span class="sxs-lookup"><span data-stu-id="c0880-819">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-820">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> méthode pour restituer la valeur de la <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> propriété à un contrôle.</span><span class="sxs-lookup"><span data-stu-id="c0880-820">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property to a control.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#4)]
 [!code-vb[MarkupTextWriter_Methods1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (float value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(float32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(float value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : single -&gt; unit&#xA;override this.WriteLine : single -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c0880-821">Nombre à virgule flottante simple précision à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-821">The single-precision floating point number to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-822">Écrit dans le flux de sortie les espacements de tabulation en attente et la représentation textuelle d'un nombre à virgule flottante simple précision, suivis d'une chaîne de terminaison de ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-822">Writes any pending tab spacing and the text representation of a single-precision floating-point number, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-823">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</span><span class="sxs-lookup"><span data-stu-id="c0880-823">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c0880-824">Le <xref:System.IO.TextWriter.WriteLine%2A> méthode de base est utilisé pour écrire la `value` paramètre.</span><span class="sxs-lookup"><span data-stu-id="c0880-824">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-825">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> méthode pour restituer la valeur de la <xref:System.Single.Epsilon?displayProperty=nameWithType> champ, qui est la plus petite valeur possible du <xref:System.Single> structure.</span><span class="sxs-lookup"><span data-stu-id="c0880-825">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the value of the <xref:System.Single.Epsilon?displayProperty=nameWithType> field, which is the smallest possible value of the <xref:System.Single> structure.</span></span>  
  
 <span data-ttu-id="c0880-826">Cet exemple de code génère le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-826">This code example generates the following markup:</span></span>  
  
 `<b>`  
  
 `1.401298E-45`  
  
 `</b>`  
  
 [!code-csharp[MarkupTextWriter_Methods1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#9)]
 [!code-vb[MarkupTextWriter_Methods1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ s);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string -&gt; unit&#xA;override this.WriteLine : string -&gt; unit" Usage="htmlTextWriter.WriteLine s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="c0880-827">Chaîne à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-827">The string to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-828">Écrit dans le flux de sortie les espacements de tabulation en attente et une chaîne de texte, suivis d'une chaîne de terminaison de ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-828">Writes any pending tab spacing and a text string, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-829">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</span><span class="sxs-lookup"><span data-stu-id="c0880-829">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c0880-830">Le <xref:System.IO.TextWriter.WriteLine%2A> méthode de base est utilisé pour écrire la `value` paramètre.</span><span class="sxs-lookup"><span data-stu-id="c0880-830">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (value As UInteger)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::UInt32 value);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : uint32 -&gt; unit&#xA;override this.WriteLine : uint32 -&gt; unit" Usage="htmlTextWriter.WriteLine value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="c0880-831">Entier non signé de 4 octets à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-831">The 4-byte unsigned integer to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-832">Écrit dans le flux de sortie les espacements de tabulation en attente et la représentation textuelle d'un entier non signé de 4 octets, suivis d'une chaîne de terminaison de ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-832">Writes any pending tab spacing and the text representation of a 4-byte unsigned integer, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-833">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</span><span class="sxs-lookup"><span data-stu-id="c0880-833">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c0880-834">Le <xref:System.IO.TextWriter.WriteLine%2A> méthode de base est utilisé pour écrire la `value` paramètre.</span><span class="sxs-lookup"><span data-stu-id="c0880-834">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, arg0 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj -&gt; unit&#xA;override this.WriteLine : string * obj -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="c0880-835">Chaîne contenant zéro, un ou plusieurs éléments de mise en forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-835">A string containing zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="c0880-836">Objet à mettre en forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-836">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-837">Écrit dans le flux de sortie les espacements de tabulation en attente et une chaîne mise en forme contenant la représentation textuelle d'un objet, suivis d'une chaîne de terminaison de ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-837">Writes any pending tab spacing and a formatted string containing the text representation of an object, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-838">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</span><span class="sxs-lookup"><span data-stu-id="c0880-838">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c0880-839">Le <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> méthode utilise la même sémantique que la <xref:System.String.Format%28System.String%2CSystem.Object%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-839">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%29> method.</span></span> <span data-ttu-id="c0880-840">Le <xref:System.IO.TextWriter.WriteLine%2A> méthode de base est utilisé pour écrire la `value` paramètre.</span><span class="sxs-lookup"><span data-stu-id="c0880-840">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-841">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> méthode pour restituer une chaîne mise en forme avec la valeur de la <xref:System.Globalization.CultureInfo.CurrentCulture%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="c0880-841">The following code example shows how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string with the value of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#1)]
 [!code-vb[MarkupTextWriter_Methods1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, params object[] arg);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object[] arg) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, ParamArray arg As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ arg);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj[] -&gt; unit&#xA;override this.WriteLine : string * obj[] -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="c0880-842">Chaîne contenant zéro, un ou plusieurs éléments de mise en forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-842">A string containing zero or more format items.</span>
          </span>
        </param>
        <param name="arg">
          <span data-ttu-id="c0880-843">Tableau d'objets à mettre en forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-843">An object array to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-844">Écrit dans le flux de sortie les espacements de tabulation en attente et une chaîne mise en forme contenant la représentation textuelle d'un tableau d'objets, suivis d'une chaîne de terminaison de ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-844">Writes any pending tab spacing and a formatted string that contains the text representation of an object array, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-845">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</span><span class="sxs-lookup"><span data-stu-id="c0880-845">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c0880-846">Le <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> méthode utilise la même sémantique que la <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-846">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29> method.</span></span> <span data-ttu-id="c0880-847">Le <xref:System.IO.TextWriter.WriteLine%2A> méthode de base est utilisé pour écrire le `value` (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-847">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-848">Cette section contient deux exemples de code.</span><span class="sxs-lookup"><span data-stu-id="c0880-848">This section contains two code examples.</span></span> <span data-ttu-id="c0880-849">Le premier montre comment restituer une chaîne et un tableau dans le flux de sortie.</span><span class="sxs-lookup"><span data-stu-id="c0880-849">The first one demonstrates how to render a string and an array to the output stream.</span></span> <span data-ttu-id="c0880-850">Le second montre comment déclarer le tableau.</span><span class="sxs-lookup"><span data-stu-id="c0880-850">The second one shows how to declare the array.</span></span>  
  
 <span data-ttu-id="c0880-851">L’exemple de code suivant montre comment utiliser la <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> méthode pour restituer une chaîne mise en forme et le contenu d’un tableau d’objets dans le flux de sortie.</span><span class="sxs-lookup"><span data-stu-id="c0880-851">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string and the contents of an object array to the output stream.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#2)]
 [!code-vb[MarkupTextWriter_Methods2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#2)]  
  
 <span data-ttu-id="c0880-852">L’exemple de code suivant montre comment déclarer le tableau d’objets qui a été restitué dans l’exemple de code précédent.</span><span class="sxs-lookup"><span data-stu-id="c0880-852">The following code example shows how to declare the object array that was rendered in the preceding code example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#7](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#7)]
 [!code-vb[MarkupTextWriter_Methods2#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (char[] buffer, int index, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(char[] buffer, int32 index, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (buffer As Char(), index As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(cli::array &lt;char&gt; ^ buffer, int index, int count);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : char[] * int * int -&gt; unit&#xA;override this.WriteLine : char[] * int * int -&gt; unit" Usage="htmlTextWriter.WriteLine (buffer, index, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Char[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="buffer">
          <span data-ttu-id="c0880-853">Tableau de caractères à partir duquel le texte est écrit dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-853">The character array from which to write text to the output stream.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="c0880-854">Emplacement dans le tableau de caractères où l'écriture commence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-854">The location in the character array where writing begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="c0880-855">Nombre de caractères du tableau à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-855">The number of characters in the array to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-856">Écrit dans le flux de sortie les espacements de tabulation en attente et un sous-tableau de caractères Unicode, suivis d'une chaîne de terminaison de ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-856">Writes any pending tab spacing and a subarray of Unicode characters, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-857">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</span><span class="sxs-lookup"><span data-stu-id="c0880-857">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c0880-858">Le <xref:System.IO.TextWriter.WriteLine%2A> méthode de base est utilisé pour écrire la `value` paramètre.</span><span class="sxs-lookup"><span data-stu-id="c0880-858">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-859">Cette section contient deux exemples de code.</span><span class="sxs-lookup"><span data-stu-id="c0880-859">This section contains two code examples.</span></span> <span data-ttu-id="c0880-860">Le premier montre comment créer un tableau de caractères.</span><span class="sxs-lookup"><span data-stu-id="c0880-860">The first one demonstrates how to create a character array.</span></span> <span data-ttu-id="c0880-861">Le deuxième montre comment utiliser le tableau.</span><span class="sxs-lookup"><span data-stu-id="c0880-861">The second one demonstrates how to use the array.</span></span>  
  
 <span data-ttu-id="c0880-862">Ces exemples de code génèrent le balisage suivant :</span><span class="sxs-lookup"><span data-stu-id="c0880-862">These code examples generate the following markup:</span></span>  
  
 `<label>`  
  
 `hello`  
  
 `</label>`  
  
 <span data-ttu-id="c0880-863">L’exemple de code suivant montre comment créer un tableau de caractères correspondant à `hello world`.</span><span class="sxs-lookup"><span data-stu-id="c0880-863">The following code example demonstrates how to create an array of characters that spell out `hello world`.</span></span> <span data-ttu-id="c0880-864">Inclus dans le tableau est le <xref:System.Web.UI.HtmlTextWriter.SpaceChar> champ, ce qui crée un espace entre les deux mots.</span><span class="sxs-lookup"><span data-stu-id="c0880-864">Included in the array is the <xref:System.Web.UI.HtmlTextWriter.SpaceChar> field, which creates a space between the two words.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#6)]
 [!code-vb[MarkupTextWriter_Methods2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#6)]  
  
 <span data-ttu-id="c0880-865">Le de code suivant montre comment utiliser le `index` et `count` les paramètres de la <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> méthode pour restituer les cinq premiers caractères du tableau créé dans l’exemple de code précédent.</span><span class="sxs-lookup"><span data-stu-id="c0880-865">The following code example uses the `index` and `count` parameters of the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render the first five characters of the array created in the preceding code example.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods2/CS/displaylabelsline.cs#4)]
 [!code-vb[MarkupTextWriter_Methods2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods2/VB/displaylabelsline.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLine">
      <MemberSignature Language="C#" Value="public override void WriteLine (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void WriteLine(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub WriteLine (format As String, arg0 As Object, arg1 As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void WriteLine(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="abstract member WriteLine : string * obj * obj -&gt; unit&#xA;override this.WriteLine : string * obj * obj -&gt; unit" Usage="htmlTextWriter.WriteLine (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="c0880-866">Chaîne contenant zéro, un ou plusieurs éléments de mise en forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-866">A string containing zero or more format items.</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="c0880-867">Objet à mettre en forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-867">An object to format.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="c0880-868">Objet à mettre en forme.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-868">An object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-869">Écrit dans le flux de sortie les espacements de tabulation en attente et une chaîne mise en forme contenant la représentation textuelle de deux objets, suivis d'une chaîne de terminaison de ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-869">Writes any pending tab spacing and a formatted string that contains the text representation of two objects, followed by a line terminator string, to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-870">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</span><span class="sxs-lookup"><span data-stu-id="c0880-870">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c0880-871">Le <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> méthode utilise la même sémantique que la <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29> (méthode).</span><span class="sxs-lookup"><span data-stu-id="c0880-871">The <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method uses the same semantics as the <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29> method.</span></span> <span data-ttu-id="c0880-872">Le <xref:System.IO.TextWriter.WriteLine%2A> méthode de base est utilisé pour écrire la `value` paramètre.</span><span class="sxs-lookup"><span data-stu-id="c0880-872">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0880-873">L’exemple de code suivant montre comment utiliser le <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> méthode pour restituer une chaîne mise en forme et les valeurs de la <xref:System.Globalization.CultureInfo.CurrentCulture%2A> propriété et le <xref:System.DateTime.Today%2A> propriété.</span><span class="sxs-lookup"><span data-stu-id="c0880-873">The following code example demonstrates how to use the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method to render a formatted string and the values of the <xref:System.Globalization.CultureInfo.CurrentCulture%2A> property and the <xref:System.DateTime.Today%2A> property.</span></span>  
  
 [!code-csharp[MarkupTextWriter_Methods1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/MarkupTextWriter_Methods1/CS/boldedrendering.cs#2)]
 [!code-vb[MarkupTextWriter_Methods1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/MarkupTextWriter_Methods1/VB/boldedrendering.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <Member MemberName="WriteLineNoTabs">
      <MemberSignature Language="C#" Value="public void WriteLineNoTabs (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteLineNoTabs(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteLineNoTabs (s As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteLineNoTabs(System::String ^ s);" />
      <MemberSignature Language="F#" Value="member this.WriteLineNoTabs : string -&gt; unit" Usage="htmlTextWriter.WriteLineNoTabs s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="c0880-874">Chaîne à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-874">The string to write to the output stream.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-875">Écrit dans le flux de sortie une chaîne suivie d'une chaîne de terminaison de ligne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-875">Writes a string, followed by a line terminator string, to the output stream.</span>
          </span>
          <span data-ttu-id="c0880-876">Cette méthode ignore tout espacement de tabulation spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-876">This method ignores any specified tab spacing.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-877">Utilisez le <xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A> méthode plutôt que la <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> méthode lorsque vous ne souhaitez pas restituer les espacements de tabulation avant la chaîne rendue `s`.</span><span class="sxs-lookup"><span data-stu-id="c0880-877">Use the <xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A> method rather than the <xref:System.Web.UI.HtmlTextWriter.WriteLine%2A> method when you do not want to render any tab spacing ahead of the rendered string `s`.</span></span>  
  
 <span data-ttu-id="c0880-878">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</span><span class="sxs-lookup"><span data-stu-id="c0880-878">The default line terminator string is a carriage return followed by a line feed ("\r\n").</span></span> <span data-ttu-id="c0880-879">Le <xref:System.IO.TextWriter.WriteLine%2A> méthode de base est utilisé pour écrire la `value` paramètre.</span><span class="sxs-lookup"><span data-stu-id="c0880-879">The <xref:System.IO.TextWriter.WriteLine%2A> base method is used to write the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlTextWriter.NewLine" />
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.WriteLine" />
      </Docs>
    </Member>
    <MemberGroup MemberName="WriteStyleAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="c0880-880">Écrit un attribut de style et sa valeur dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-880">Writes a style attribute and its value to the output stream.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WriteStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteStyleAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStyleAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStyleAttribute (name As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStyleAttribute(System::String ^ name, System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member WriteStyleAttribute : string * string -&gt; unit&#xA;override this.WriteStyleAttribute : string * string -&gt; unit" Usage="htmlTextWriter.WriteStyleAttribute (name, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c0880-881">Attribut de style à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-881">The style attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c0880-882">Valeur assignée à l'attribut de style.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-882">The value assigned to the style attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-883">Écrit l'attribut de style spécifié dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-883">Writes the specified style attribute to the output stream.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-884">Le <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> méthode écrit l’attribut de style sous la forme suivante :</span><span class="sxs-lookup"><span data-stu-id="c0880-884">The <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method writes the style attribute in the following form:</span></span>  
  
 <span data-ttu-id="c0880-885">`name` `=` `value` `;`</span><span class="sxs-lookup"><span data-stu-id="c0880-885">`name` `=` `value` `;`</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.Write" />
      </Docs>
    </Member>
    <Member MemberName="WriteStyleAttribute">
      <MemberSignature Language="C#" Value="public virtual void WriteStyleAttribute (string name, string value, bool fEncode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void WriteStyleAttribute(string name, string value, bool fEncode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub WriteStyleAttribute (name As String, value As String, fEncode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void WriteStyleAttribute(System::String ^ name, System::String ^ value, bool fEncode);" />
      <MemberSignature Language="F#" Value="abstract member WriteStyleAttribute : string * string * bool -&gt; unit&#xA;override this.WriteStyleAttribute : string * string * bool -&gt; unit" Usage="htmlTextWriter.WriteStyleAttribute (name, value, fEncode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="fEncode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="c0880-886">Attribut de style à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-886">The style attribute to write to the output stream.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c0880-887">Valeur assignée à l'attribut de style.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-887">The value assigned to the style attribute.</span>
          </span>
        </param>
        <param name="fEncode">
          <span data-ttu-id="c0880-888">
            <see langword="true" /> pour encoder l'attribut de style et sa valeur assignée ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-888">
              <see langword="true" /> to encode the style attribute and its assigned value; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-889">Écrit l'attribut de style spécifié et sa valeur dans le flux de sortie et encode la valeur, si spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-889">Writes the specified style attribute and value to the output stream, and encodes the value, if specified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-890">Le <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> méthode écrit l’attribut de style sous la forme suivante :</span><span class="sxs-lookup"><span data-stu-id="c0880-890">The <xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A> method writes the style attribute in the following form:</span></span>  
  
 <span data-ttu-id="c0880-891">`name` `=` `value` `;`</span><span class="sxs-lookup"><span data-stu-id="c0880-891">`name` `=` `value` `;`</span></span>  
  
 <span data-ttu-id="c0880-892">Le <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> méthode est utilisée pour encoder le `value` paramètre.</span><span class="sxs-lookup"><span data-stu-id="c0880-892">The <xref:System.Web.HttpUtility.HtmlAttributeEncode%2A> method is used to encode the `value` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="Overload:System.IO.TextWriter.Write" />
        <altmember cref="M:System.Web.HttpUtility.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="WriteUrlEncodedString">
      <MemberSignature Language="C#" Value="protected void WriteUrlEncodedString (string text, bool argument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WriteUrlEncodedString(string text, bool argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WriteUrlEncodedString (text As String, argument As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WriteUrlEncodedString(System::String ^ text, bool argument);" />
      <MemberSignature Language="F#" Value="member this.WriteUrlEncodedString : string * bool -&gt; unit" Usage="htmlTextWriter.WriteUrlEncodedString (text, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="argument" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="text">
          <span data-ttu-id="c0880-893">Chaîne à encoder et à écrire dans le flux de sortie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-893">The string to encode and write to the output stream.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="c0880-894">
            <see langword="true" /> pour encoder la chaîne comme une partie de la section des paramètres de l'URL ; <see langword="false" /> pour encoder la chaîne comme une partie de la section du chemin d'accès de l'URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-894">
              <see langword="true" /> to encode the string as a part of the parameter section of the URL; <see langword="false" /> to encode the string as part of the path section of the URL.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0880-895">Écrit la chaîne spécifiée, en l'encodant conformément aux exigences des URL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0880-895">Writes the specified string, encoding it according to URL requirements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0880-896">Le <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> méthode encode les caractères qui pourraient être considérées comme des séparateurs d’URL (selon la définition de `argument`) dans des chaînes de la forme `%xx`, si le code ASCII est inférieur à 128 ; sinon, `%uxxxx`, où `x` est un chiffre hexadécimal.</span><span class="sxs-lookup"><span data-stu-id="c0880-896">The <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> method encodes characters that could be considered URL delimiters (dependent on the setting of `argument`) into strings of the form `%xx`, if the ASCII code is less than 128; otherwise, `%uxxxx`, where `x` is a hexadecimal digit.</span></span>  
  
 <span data-ttu-id="c0880-897">Le <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> et <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> méthodes utilisent le <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> méthode comme une méthode utilitaire.</span><span class="sxs-lookup"><span data-stu-id="c0880-897">The <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A> and <xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A> methods use the <xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A> method as a utility method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>