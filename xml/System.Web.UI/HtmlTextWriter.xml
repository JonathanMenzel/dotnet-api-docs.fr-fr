<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HtmlTextWriter.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac512a77ea598c1fb3af16632e6711c2fe49de157af.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">12a77ea598c1fb3af16632e6711c2fe49de157af</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes markup characters and text to an ASP.NET server control output stream.</source>
          <target state="translated">Écrit des caractères et du texte de balisage dans un flux de sortie de contrôle serveur ASP.NET.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>This class provides formatting capabilities that ASP.NET server controls use when rendering markup to clients.</source>
          <target state="translated">Cette classe fournit des fonctionnalités de mise en forme utilisées par les contrôles serveur ASP.NET lors du rendu du balisage sur les clients.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class is used to render HTML 4.0 to desktop browsers.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe est utilisée pour afficher le HTML 4.0 pour les navigateurs de bureau.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> is also the base class for all markup writers in the <ph id="ph2">&lt;xref:System.Web.UI&gt;</ph> namespace, including the <ph id="ph3">&lt;xref:System.Web.UI.ChtmlTextWriter&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.Html32TextWriter&gt;</ph>, and <ph id="ph5">&lt;xref:System.Web.UI.XhtmlTextWriter&gt;</ph> classes.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> est également la classe de base pour tous les enregistreurs de balisage dans le <ph id="ph2">&lt;xref:System.Web.UI&gt;</ph> espace de noms, y compris le <ph id="ph3">&lt;xref:System.Web.UI.ChtmlTextWriter&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.Html32TextWriter&gt;</ph>, et <ph id="ph5">&lt;xref:System.Web.UI.XhtmlTextWriter&gt;</ph> classes.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>These classes are used to write the elements, attributes, and style and layout information for different types of markup.</source>
          <target state="translated">Ces classes sont utilisées pour écrire les éléments, attributs et les informations de style et de mise en forme pour différents types de balisage.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>In addition, these classes are used by the page and control adapter classes that are associated with each markup language.</source>
          <target state="translated">En outre, ces classes sont utilisées par les classes de l’adaptateur de page et de contrôle qui sont associés à chaque langage de balisage.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>In most circumstances, ASP.NET automatically uses the appropriate writer for the requesting device.</source>
          <target state="translated">Dans la plupart des cas, ASP.NET utilise automatiquement le writer approprié pour l’appareil demandeur.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>However, if you create a custom text writer or if you want to specify a particular writer to render a page for a specific device, you must map the writer to the page in the <ph id="ph1">`controlAdapters`</ph> section of the application .browser file.</source>
          <target state="translated">Toutefois, si vous créez un writer de texte personnalisé ou si vous souhaitez spécifier un writer particulier pour restituer une page pour un périphérique spécifique, vous devez mapper le writer à la page dans la <ph id="ph1">`controlAdapters`</ph> section du fichier browser application.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.Control.Render%2A&gt;</ph> method of a custom control that is derived from the <ph id="ph2">&lt;xref:System.Web.UI.Control&gt;</ph> class.</source>
          <target state="translated">L’exemple de code suivant montre comment substituer la <ph id="ph1">&lt;xref:System.Web.UI.Control.Render%2A&gt;</ph> méthode d’un contrôle personnalisé qui est dérivé de la <ph id="ph2">&lt;xref:System.Web.UI.Control&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The code example illustrates how to use various <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> methods, properties, and fields.</source>
          <target state="translated">L’exemple de code montre comment utiliser différentes <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> méthodes, propriétés et champs.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> instance that renders the markup content.</source>
          <target state="translated">Instance de <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> qui génère le rendu du contenu de balisage.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class that uses a default tab string.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> qui utilise une chaîne de tabulation par défaut.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph> constructor uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> constant when indentation of a line is necessary.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph> surcharge de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph> constructeur utilise le <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> constante lors de la mise en retrait d’une ligne est nécessaire.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>It calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> overload to initialize the new instance.</source>
          <target state="translated">Il appelle le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> surcharge pour initialiser la nouvelle instance.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph> constructor to create a custom <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object named <ph id="ph3">`StyledLabelHtmlWriter.`</ph> When the <ph id="ph4">`MyPage`</ph> custom class, which is derived from the <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph> class, is requested by a client browser, it uses the <ph id="ph6">`StyledLabelHtmlWriter`</ph> class to render its content to the output stream.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph> constructeur pour créer un personnalisé <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objet nommé <ph id="ph3">`StyledLabelHtmlWriter.`</ph> lors de la <ph id="ph4">`MyPage`</ph> classe personnalisée, qui est dérivée de la <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph> de classe, est demandé par un client navigateur, il utilise le <ph id="ph6">`StyledLabelHtmlWriter`</ph> classe pour afficher son contenu dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that renders the markup content.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> qui restitue le contenu du balisage.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>The string to use to render a line indentation.</source>
          <target state="translated">Chaîne à utiliser pour restituer un décrochement de ligne.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class with a specified tab string character.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> avec un caractère de chaîne de tabulation spécifié.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> constructor uses <ph id="ph3">`tabString`</ph> when indentation of a line is necessary.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph> surcharge de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> constructeur utilise <ph id="ph3">`tabString`</ph> lorsque la mise en retrait d’une ligne est nécessaire.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>It calls the <ph id="ph1">&lt;xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> base constructor to initialize the new instance.</source>
          <target state="translated">Il appelle le <ph id="ph1">&lt;xref:System.IO.TextWriter.%23ctor%28System.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> constructeur pour initialiser la nouvelle instance de base.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.#ctor(System.IO.TextWriter,System.String)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph> constructor to create a custom <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object named <ph id="ph3">`StyledLabelHtmlWriter.`</ph> When the <ph id="ph4">`MyPage`</ph> custom class, which is derived from the <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph> class, is requested by a client browser, it uses the <ph id="ph6">`StyledLabelHtmlWriter`</ph> class to render its content to the output stream.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%29&gt;</ph> constructeur pour créer un personnalisé <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objet nommé <ph id="ph3">`StyledLabelHtmlWriter.`</ph> lors de la <ph id="ph4">`MyPage`</ph> classe personnalisée, qui est dérivée de la <ph id="ph5">&lt;xref:System.Web.UI.Page&gt;</ph> de classe, est demandé par un client navigateur, il utilise le <ph id="ph6">`StyledLabelHtmlWriter`</ph> classe pour afficher son contenu dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Adds the specified markup attribute and value to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Ajoute l'attribut et la valeur de balisage spécifiés à la balise d'ouverture de l'élément créée par l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> à l'aide d'un appel ultérieur à la méthode <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>A string containing the name of the attribute to add.</source>
          <target state="translated">Chaîne qui contient le nom de l'attribut à ajouter.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">Chaîne contenant la valeur à assigner à l'attribut.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Adds the specified markup attribute and value to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Ajoute l'attribut et la valeur de balisage spécifiés à la balise d'ouverture de l'élément créée par l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> à l'aide d'un appel ultérieur à la méthode <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29&gt;</ph> method if the attribute is not one of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> values, or if the attribute is not known until run time.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> surcharge de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29&gt;</ph> méthode si l’attribut n’est pas une de la <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> valeurs, ou si l’attribut n’est pas connu jusqu'à l’exécution.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>For an instance of any given markup element, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of attributes for that element.</source>
          <target state="translated">Pour une instance de n’importe quel élément de balisage donné, la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe maintient une liste d’attributs de cet élément.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any attributes added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method are rendered to the opening tag of the element.</source>
          <target state="translated">Lorsque le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> méthode est appelée, les attributs ajoutés par la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> méthode sont rendus dans la balise d’ouverture de l’élément.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>The list of attributes is then cleared from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object.</source>
          <target state="translated">La liste d’attributs est ensuite effacée de la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">Le modèle de codage pour le rendu des éléments de balisage est comme suit :</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to add any attributes to the element.</source>
          <target state="translated">Utilisez la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> méthode pour ajouter des attributs à l’élément.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">Utilisez la méthode <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Use other methods as needed to render the content found between the element's opening and closing tags.</source>
          <target state="translated">Si nécessaire, utilisez d’autres méthodes pour restituer le contenu trouvé entre l’élément d’ouverture et de balises de fermeture.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated">Utilisez la méthode <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method before calling the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant montre comment appeler le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> méthode avant d’appeler le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>The code calls two different overloads of <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> and two different overloads of <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> before it calls the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method to render a <ph id="ph4">`&lt;span&gt;`</ph> element to the output stream.</source>
          <target state="translated">Le code appelle deux surcharges différentes de <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> et deux surcharges différentes de <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> avant d’appeler le <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> méthode pour restituer un <ph id="ph4">`&lt;span&gt;`</ph> élément dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29&gt;</ph> method is used to define the custom attribute named <ph id="ph2">`CustomAttribute`</ph> and the custom value named <ph id="ph3">`CustomAttributeValue`</ph> for the <ph id="ph4">`&lt;span&gt;`</ph> element that this code renders.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%29&gt;</ph> méthode est utilisée pour définir l’attribut personnalisé nommé <ph id="ph2">`CustomAttribute`</ph> et la valeur personnalisée nommée <ph id="ph3">`CustomAttributeValue`</ph> pour la <ph id="ph4">`&lt;span&gt;`</ph> élément rendu de ce code.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> that represents the markup attribute to add to the output stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> représentant l'attribut de balisage à ajouter au flux de sortie.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">Chaîne contenant la valeur à assigner à l'attribut.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Adds the markup attribute and the attribute value to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Ajoute l'attribut de balisage et la valeur de l'attribut à la balise d'ouverture de l'élément créée par l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> à l'aide d'un appel ultérieur à la méthode <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph> method to render a standard markup attribute.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> surcharge de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph> méthode pour restituer un attribut de balisage standard.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>For an instance of any given markup element, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of attributes for that element.</source>
          <target state="translated">Pour une instance de n’importe quel élément de balisage donné, la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe maintient une liste d’attributs de cet élément.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any attributes that are added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method are rendered to the opening tag of the element.</source>
          <target state="translated">Lorsque le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> méthode est appelée, tous les attributs qui sont ajoutés par le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> méthode sont rendus dans la balise d’ouverture de l’élément.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>The list of attributes is then cleared from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>.</source>
          <target state="translated">La liste d’attributs est ensuite effacée de la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">Le modèle de codage pour le rendu des éléments de balisage est comme suit :</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to add any attributes to the element.</source>
          <target state="translated">Utilisez la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> méthode pour ajouter des attributs à l’élément.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">Utilisez la méthode <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Use other methods as needed to render the content found between the element's opening and closing tags.</source>
          <target state="translated">Si nécessaire, utilisez d’autres méthodes pour restituer le contenu trouvé entre l’élément d’ouverture et de balises de fermeture.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated">Utilisez la méthode <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph> method to add an <ph id="ph3">`Onclick`</ph> attribute to a markup element, and then set its value to the following ECMAScript code:</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> surcharge de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph> méthode pour ajouter un <ph id="ph3">`Onclick`</ph> d’attribut à un élément de balisage et puis définissez sa valeur sur le code ECMAScript suivant :</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>A string containing the name of the attribute to add.</source>
          <target state="translated">Chaîne qui contient le nom de l'attribut à ajouter.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">Chaîne contenant la valeur à assigner à l'attribut.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the attribute and its value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour encoder l'attribut et sa valeur ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Adds the specified markup attribute and value to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method, with optional encoding.</source>
          <target state="translated">Ajoute l'attribut et la valeur de balisage spécifiés à la balise d'ouverture de l'élément créée par l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> à l'aide d'un appel ultérieur à la méthode <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>, avec encodage facultatif.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method if the attribute is not one of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> values, or if the attribute is not known until run time and encoding is needed.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> surcharge de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> méthode si l’attribut n’est pas une de la <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> valeurs, ou si l’attribut n’est pas connue jusqu’au moment de l’exécution et l’encodage est nécessaire.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>For an instance of any given markup element, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of attributes for that element.</source>
          <target state="translated">Pour une instance de n’importe quel élément de balisage donné, la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe maintient une liste d’attributs de cet élément.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any attributes added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method are rendered to the opening tag of the element.</source>
          <target state="translated">Lorsque le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> méthode est appelée, les attributs ajoutés par la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> méthode sont rendus dans la balise d’ouverture de l’élément.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>The list of attributes is then cleared from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object.</source>
          <target state="translated">La liste d’attributs est ensuite effacée de la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method with <ph id="ph2">`fEncode`</ph> set to <ph id="ph3">`true`</ph>, if the attribute can possibly contain a quotation mark ("), a less than sign (&lt;), or an ampersand (&amp;).</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> méthode avec <ph id="ph2">`fEncode`</ph> la valeur <ph id="ph3">`true`</ph>, si l’attribut susceptible de contenir un guillemet («), un signe inférieur à (&lt;), ou une esperluette (&amp;).</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>The method call will encode the attribute to meet the requirements of the requesting device.</source>
          <target state="translated">L’appel de méthode codera l’attribut pour satisfaire les exigences de l’appareil demandeur.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>You can set <ph id="ph1">`fEncode`</ph> to <ph id="ph2">`false`</ph>, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</source>
          <target state="translated">Vous pouvez définir <ph id="ph1">`fEncode`</ph> à <ph id="ph2">`false`</ph>, si vous savez qu’aucun de ces caractères sera généré, ou si vous savez que l’attribut est déjà codé.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">Le modèle de codage pour le rendu des éléments de balisage est comme suit :</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to add any attributes to the element.</source>
          <target state="translated">Utilisez la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> méthode pour ajouter des attributs à l’élément.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">Utilisez la méthode <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use other methods as needed to render the content found between the element's opening and closing tags.</source>
          <target state="translated">Si nécessaire, utilisez d’autres méthodes pour restituer le contenu trouvé entre l’élément d’ouverture et de balises de fermeture.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated">Utilisez la méthode <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Boolean)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method to ensure that a custom attribute, named <ph id="ph3">`myattribute`</ph>, and its value are not encoded for an <ph id="ph4">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> surcharge de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> méthode pour s’assurer qu’un attribut personnalisé, nommé <ph id="ph3">`myattribute`</ph>, et sa valeur ne sont pas encodés pour un <ph id="ph4">`&lt;img&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the name of the attribute to add.</source>
          <target state="translated">Chaîne qui contient le nom de l'attribut à ajouter.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">Chaîne contenant la valeur à assigner à l'attribut.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> that represents the attribute.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> qui représente l'attribut.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Adds the specified markup attribute and value, along with an <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> enumeration value, to the opening tag of the element that the <ph id="ph2">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph3">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Ajoute l'attribut et la valeur de balisage spécifiés, ainsi qu'une valeur d'énumération <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>, à la balise d'ouverture de l'élément créée par l'objet <ph id="ph2">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> à l'aide d'un appel ultérieur à la méthode <ph id="ph3">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29&gt;</ph> method only when inheriting from the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> surcharge de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterAttribute%29&gt;</ph> méthode uniquement lorsque vous héritez les <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>It enables you to create new <ph id="ph1">`name`</ph> and <ph id="ph2">`key`</ph> pairs for attributes.</source>
          <target state="translated">Il vous permet de créer de nouveaux <ph id="ph1">`name`</ph> et <ph id="ph2">`key`</ph> paires pour les attributs.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> that represents the markup attribute to add to the output stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> représentant l'attribut de balisage à ajouter au flux de sortie.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>A string containing the value to assign to the attribute.</source>
          <target state="translated">Chaîne contenant la valeur à assigner à l'attribut.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the attribute and its value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour encoder l'attribut et sa valeur ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Adds the markup attribute and the attribute value to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method, with optional encoding.</source>
          <target state="translated">Ajoute l'attribut de balisage et la valeur de l'attribut à la balise d'ouverture de l'élément créée par l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> à l'aide d'un appel ultérieur à la méthode <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>, avec encodage facultatif.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method to render a standard markup attribute, with optional encoding.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> surcharge de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph> méthode pour restituer un attribut de balisage standard, avec encodage facultatif.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>For an instance of any given markup element, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of attributes for that element.</source>
          <target state="translated">Pour une instance de n’importe quel élément de balisage donné, la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe maintient une liste d’attributs de cet élément.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any attributes added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> are rendered to the opening tag of the element.</source>
          <target state="translated">Lorsque le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> méthode est appelée, les attributs ajoutés par le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> sont rendus dans la balise d’ouverture de l’élément.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>The list of attributes is then cleared from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object.</source>
          <target state="translated">La liste d’attributs est ensuite effacée de la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method with <ph id="ph2">`fEncode`</ph> set to <ph id="ph3">`true`</ph>, if the attribute can possibly contain a quotation mark ("), a less than sign (&lt;), or an ampersand (&amp;).</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph> méthode avec <ph id="ph2">`fEncode`</ph> la valeur <ph id="ph3">`true`</ph>, si l’attribut susceptible de contenir un guillemet («), un signe inférieur à (&lt;), ou une esperluette (&amp;).</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>The method call will encode the attribute to meet the requirements of the requesting device.</source>
          <target state="translated">L’appel de méthode codera l’attribut pour satisfaire les exigences de l’appareil demandeur.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>You can set <ph id="ph1">`fEncode`</ph> to <ph id="ph2">`false`</ph>, if you know that none of these characters will be generated, or if you know that the attribute is already encoded.</source>
          <target state="translated">Vous pouvez définir <ph id="ph1">`fEncode`</ph> à <ph id="ph2">`false`</ph>, si vous savez qu’aucun de ces caractères sera généré, ou si vous savez que l’attribut est déjà codé.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">Le modèle de codage pour le rendu des éléments de balisage est comme suit :</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to add any attributes to the element.</source>
          <target state="translated">Utilisez la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> méthode pour ajouter des attributs à l’élément.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">Utilisez la méthode <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use other methods as needed to render the content found between the element's opening and closing tags.</source>
          <target state="translated">Si nécessaire, utilisez d’autres méthodes pour restituer le contenu trouvé entre l’élément d’ouverture et de balises de fermeture.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated">Utilisez la méthode <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.Web.UI.HtmlTextWriterAttribute,System.String,System.Boolean)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method to ensure that the string value that is assigned to an <ph id="ph2">`Alt`</ph> attribute for an <ph id="ph3">`&lt;img&gt;`</ph> element is encoded for the requesting device.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%2CSystem.Boolean%29&gt;</ph> méthode pour vous assurer que la valeur de chaîne est assignée à une <ph id="ph2">`Alt`</ph> d’attribut pour un <ph id="ph3">`&lt;img&gt;`</ph> élément est encodé à l’appareil demandeur.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Adds a markup style attribute to the opening tag of the element that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object creates with a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Ajoute un attribut de style de balisage à la balise d'ouverture de l'élément créée par l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> à l'aide d'un appel ultérieur à la méthode <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>A string that contains the style attribute to add.</source>
          <target state="translated">Chaîne contenant l'attribut de style à ajouter. </target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>A string that contains the value to assign to the attribute.</source>
          <target state="translated">Chaîne qui contient la valeur à assigner à l'attribut.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Adds the specified markup style attribute and the attribute value to the opening markup tag created by a subsequent call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Ajoute l'attribut de style de balisage spécifié et la valeur de l'attribut à la balise d'ouverture créée par un appel ultérieur à la méthode <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29&gt;</ph> method when the style is not a member of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> enumeration or is not known until run time.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> surcharge de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29&gt;</ph> méthode lorsque le style n’est pas un membre de la <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> énumération ou n’est pas connu jusqu'à l’exécution.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of styles for the markup elements it renders.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe maintient une liste de styles pour les rendu des éléments de balisage.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any styles that are added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method are rendered to the opening tag of the element.</source>
          <target state="translated">Lorsque le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> méthode est appelée, les styles ajoutés par la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> méthode sont rendus dans la balise d’ouverture de l’élément.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>The list of styles is then cleared.</source>
          <target state="translated">La liste des styles est ensuite effacée.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">Le modèle de codage pour le rendu des éléments de balisage est comme suit :</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method to add any style attributes to the element.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> des attributs de méthode pour ajouter un style à l’élément.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">Utilisez la méthode <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Use other methods as needed to render the content found between the element opening and closing tags.</source>
          <target state="translated">Si nécessaire, utilisez d’autres méthodes pour restituer le contenu trouvé entre l’élément balises ouvrantes et fermantes.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated">Utilisez la méthode <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29&gt;</ph> method to render <ph id="ph3">`font-size`</ph> and <ph id="ph4">`color`</ph> style attributes on a <ph id="ph5">`&lt;p&gt;`</ph> element.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> surcharge de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%29&gt;</ph> méthode pour restituer <ph id="ph3">`font-size`</ph> et <ph id="ph4">`color`</ph> des attributs de style sur une <ph id="ph5">`&lt;p&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)">
          <source>This code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class to render the contents of the control.</source>
          <target state="translated">Cet exemple de code utilise la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe pour restituer le contenu du contrôle.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> that represents the style attribute to add to the output stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> représentant l'attribut de style à ajouter au flux de sortie.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>A string that contains the value to assign to the attribute.</source>
          <target state="translated">Chaîne qui contient la valeur à assigner à l'attribut.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Adds the markup style attribute associated with the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> value and the attribute value to the opening markup tag created by a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Ajoute l'attribut de style de balisage associé à la valeur <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> spécifiée et la valeur de l'attribut à la balise d'ouverture créée par un appel ultérieur à la méthode <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29&gt;</ph> method when the style is a member of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> enumeration and is known before run time.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> surcharge de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%29&gt;</ph> méthode lorsque le style est un membre de la <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> énumération et est connu avant l’exécution.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class maintains a list of styles for the markup elements it renders.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe maintient une liste de styles pour les rendu des éléments de balisage.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method is called, any styles added by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method are rendered to the opening tag of the element.</source>
          <target state="translated">Lorsque le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> méthode est appelée, les styles ajoutés par la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> méthode sont rendus dans la balise d’ouverture de l’élément.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>The list of styles is then cleared.</source>
          <target state="translated">La liste des styles est ensuite effacée.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>The coding pattern for rendering markup elements is as follows:</source>
          <target state="translated">Le modèle de codage pour le rendu des éléments de balisage est comme suit :</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method to add any style attributes to the element.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> des attributs de méthode pour ajouter un style à l’élément.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">Utilisez la méthode <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Use other methods as needed to render the content found between the element opening and closing tags.</source>
          <target state="translated">Si nécessaire, utilisez d’autres méthodes pour restituer le contenu trouvé entre l’élément balises ouvrantes et fermantes.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method.</source>
          <target state="translated">Utilisez la méthode <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>The following code example demonstrates how to use part of an override of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method in a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser une partie d’une substitution de la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> méthode dans une classe dérivée de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>The code checks whether a <ph id="ph1">`&lt;Label&gt;`</ph> element is being rendered.</source>
          <target state="translated">Le code vérifie si un <ph id="ph1">`&lt;Label&gt;`</ph> élément est rendu.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> method is called to check whether a <ph id="ph2">`Color`</ph> style attribute has been defined for the <ph id="ph3">`&lt;Label&gt;`</ph> element.</source>
          <target state="translated">Dans ce cas, le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> méthode est appelée pour vérifier si un <ph id="ph2">`Color`</ph> attribut de style a été défini pour le <ph id="ph3">`&lt;Label&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.Web.UI.HtmlTextWriterStyle,System.String)">
          <source>If a <ph id="ph1">`Color`</ph> attribute has not been defined, the code calls this overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method to add the <ph id="ph3">`Color`</ph> attribute to the style attribute, and then set its value to <ph id="ph4">`red`</ph>.</source>
          <target state="translated">Si un <ph id="ph1">`Color`</ph> attribut n’a pas été défini, le code appelle cette surcharge de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> méthode pour ajouter le <ph id="ph3">`Color`</ph> d’attribut pour l’attribut de style, puis définissez sa valeur sur <ph id="ph4">`red`</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>A string that contains the style attribute to be added.</source>
          <target state="translated">Chaîne contenant l'attribut de style à ajouter.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>A string that contains the value to assign to the attribute.</source>
          <target state="translated">Chaîne qui contient la valeur à assigner à l'attribut.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> that represents the style attribute to add.</source>
          <target state="translated">Valeur <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> qui représente l'attribut de style à ajouter. </target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Adds the specified markup style attribute and the attribute value, along with an <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> enumeration value, to the opening markup tag created by a subsequent call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Ajoute l'attribut de style de balisage spécifié et la valeur d'attribut, avec une valeur d'énumération <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph>, à la balise d'ouverture créée par un appel ultérieur à la méthode <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29&gt;</ph> method only when inheriting from the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> surcharge de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%28System.String%2CSystem.String%2CSystem.Web.UI.HtmlTextWriterStyle%29&gt;</ph> méthode uniquement lorsque vous héritez les <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>It enables you to create new <ph id="ph1">`name`</ph> and <ph id="ph2">`value`</ph> pairs for <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> attributes.</source>
          <target state="translated">Il vous permet de créer de nouveaux <ph id="ph1">`name`</ph> et <ph id="ph2">`value`</ph> paires pour <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> attributs.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.BeginRender">
          <source>Notifies an <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object, or an object of a derived class, that a control is about to be rendered.</source>
          <target state="translated">Notifie un objet <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>, ou un objet d'une classe dérivée, qu'un contrôle est sur le point d'être restitué.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.BeginRender">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> method has no functionality.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> implémentation de classe de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> méthode n’a aucune fonctionnalité.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.BeginRender">
          <source>You must override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> method in a class derived from <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> to provide your own rendering functionality.</source>
          <target state="translated">Vous devez substituer la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> méthode dans une classe dérivée <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> pour fournir vos propres fonctionnalités de rendu.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.BeginRender">
          <source>For example, in a markup language that might require <ph id="ph1">`&lt;p&gt;`</ph> elements to be rendered immediately ahead of a control, but where the need for the <ph id="ph2">`&lt;p&gt;`</ph> element is determined earlier, you could use the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> override.</source>
          <target state="translated">Par exemple, dans un langage de balisage qui peut-être nécessiter <ph id="ph1">`&lt;p&gt;`</ph> éléments soient restitués immédiatement avant un contrôle, mais où le besoin du <ph id="ph2">`&lt;p&gt;`</ph> élément est déterminé plus tôt, vous pouvez utiliser le <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> remplacer.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Close">
          <source>Closes the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object and releases any system resources associated with it.</source>
          <target state="translated">Ferme l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> et libère toutes les ressources système qui lui sont associées.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Close">
          <source>This implementation of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Close%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType&gt;</ph> base method.</source>
          <target state="translated">Cette implémentation de la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Close%2A&gt;</ph> les appels de méthode le <ph id="ph2">&lt;xref:System.IO.TextWriter.Close%2A?displayProperty=nameWithType&gt;</ph> méthode de base.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Close">
          <source>Following a call to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Close%2A&gt;</ph> method, any operations on the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object might throw exceptions because all its resources have been released.</source>
          <target state="translated">Après un appel à la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Close%2A&gt;</ph> (méthode), les opérations sur les <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objet peut lever des exceptions, car toutes ses ressources ont été libérées.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.DefaultTabString">
          <source>Represents a single tab character.</source>
          <target state="translated">Représente un caractère tabulation unique.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DefaultTabString">
          <source>The single tab is represented by the ASCII 9 character.</source>
          <target state="translated">L’onglet unique est représenté par le caractère ASCII 9.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DefaultTabString">
          <source>The following code example demonstrates how to create a constructor that takes a <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> object as a parameter and passes the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> field as a parameter argument to a second version of the constructor.</source>
          <target state="translated">L’exemple de code suivant montre comment créer un constructeur qui accepte un <ph id="ph1">&lt;xref:System.IO.TextWriter&gt;</ph> objet en tant que paramètre et passe le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> champ comme argument de paramètre à une deuxième version du constructeur.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DefaultTabString">
          <source>When this constructor is called from code, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> field defines the indentation policy for the instance of the markup writer that is used by a page or an adapter.</source>
          <target state="translated">Lorsque ce constructeur est appelé à partir du code, le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> champ définit la stratégie de mise en retrait pour l’instance de l’enregistreur de balisage est utilisé par une page ou un adaptateur.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar">
          <source>Represents the quotation mark (") character.</source>
          <target state="translated">Représente le caractère de guillemet (").</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method to close an attribute.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph> champ est utilisé par le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> méthode pour fermer un attribut.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar">
          <source>The following code example shows how to render a <ph id="ph1">`border`</ph> attribute for a <ph id="ph2">`&lt;table&gt;`</ph> element.</source>
          <target state="translated">L’exemple de code suivant montre comment restituer un <ph id="ph1">`border`</ph> d’attribut pour un <ph id="ph2">`&lt;table&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar">
          <source>The code calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the attribute and its value and uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph> fields.</source>
          <target state="translated">Le code appelle la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode pour restituer l’attribut et sa valeur et les utilise le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode pour restituer la <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> et <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph> champs.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.DoubleQuoteChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">Cet exemple de code restitue le balisage suivant :</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Encodes the value of the specified markup attribute based on the requirements of the <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> object of the current context.</source>
          <target state="translated">Encode la valeur de l’attribut de balisage spécifié selon les exigences de l'objet <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> du contexte actuel.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>A string containing the attribute value to encode.</source>
          <target state="translated">Chaîne contenant la valeur d’attribut à encoder.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the attribute value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour encoder la valeur d’attribut ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>Encodes the value of the specified markup attribute based on the requirements of the <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> object of the current context.</source>
          <target state="translated">Encode la valeur de l’attribut de balisage spécifié selon les exigences de l'objet <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> du contexte actuel.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>A string containing the encoded attribute value, <ph id="ph1">&lt;see langword="null" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is empty, or the unencoded attribute value if <ph id="ph3">&lt;paramref name="fEncode" /&gt;</ph> is <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Chaîne contenant la valeur d’attribut encodée, <ph id="ph1">&lt;see langword="null" /&gt;</ph> si <ph id="ph2">&lt;paramref name="value" /&gt;</ph> est vide ou la valeur d’attribut non encodée si <ph id="ph3">&lt;paramref name="fEncode" /&gt;</ph> est <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph> method if the attribute is not an <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> enumeration value or is not known until run time.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> surcharge de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%29&gt;</ph> méthode si l’attribut n’est pas un <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> valeur d’énumération ou n’est pas connu jusqu'à l’exécution.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> method removes double quotation marks ("), ampersands (&amp;), and less than signs (&lt;) so that invalid tags are not generated, regardless of the input.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> méthode supprime les guillemets doubles («), et commercial (&amp;) et inférieur au signe &lt; (inférieur à) afin de balises qui non valides n’est pas générés, quel que soit l’entrée.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>The actual encoding is performed by the <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> method.</source>
          <target state="translated">L’encodage réel est effectué par le <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.String,System.Boolean)">
          <source>The following code example shows how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> method as a parameter in an <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method call, and then encodes a <ph id="ph3">`color:blue`</ph> style attribute value.</source>
          <target state="translated">L’exemple de code suivant montre comment appeler le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> méthode en tant que paramètre dans un <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> appel de méthode et puis encode un <ph id="ph3">`color:blue`</ph> valeur d’attribut de style.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> representing the markup attribute.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> qui représente l'attribut de balisage.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>A string containing the attribute value to encode.</source>
          <target state="translated">Chaîne contenant la valeur d’attribut à encoder.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>Encodes the value of the specified markup attribute based on the requirements of the <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> object of the current context.</source>
          <target state="translated">Encode la valeur de l’attribut de balisage spécifié selon les exigences de l'objet <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> du contexte actuel.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>A string containing the encoded attribute value.</source>
          <target state="translated">Chaîne qui contient la valeur de l'attribut encodée.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> method removes double quotation marks ("), ampersands (&amp;), and less than signs (&lt;) so that invalid tags are not generated, regardless of the input.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeAttributeValue%2A&gt;</ph> méthode supprime les guillemets doubles («), et commercial (&amp;) et inférieur au signe &lt; (inférieur à) afin de balises qui non valides n’est pas générés, quel que soit l’entrée.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeAttributeValue(System.Web.UI.HtmlTextWriterAttribute,System.String)">
          <source>The actual encoding is performed by the <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> method.</source>
          <target state="translated">L’encodage réel est effectué par le <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>A string containing the URL to encode.</source>
          <target state="translated">Chaîne contenant l'URL à encoder.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>Performs minimal URL encoding by converting spaces in the specified URL to the string "%20".</source>
          <target state="translated">Effectue un encodage URL minimal en convertissant les espaces de l'URL en chaîne « %20 ».</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>A string containing the encoded URL.</source>
          <target state="translated">Chaîne contenant l'URL encodée.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>URL encoding of a character consists of a percent symbol (%), followed by the two-digit hexadecimal representation (case-insensitive) of the ISO-Latin code point for the character.</source>
          <target state="translated">Encodage d’URL d’un caractère se compose d’un symbole de pourcentage (%), suivi d’une représentation hexadécimale à deux chiffres (non-respect de la casse) du point de code ISO-Latin du caractère.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>The hexadecimal representation of a space is 20.</source>
          <target state="translated">La représentation hexadécimale d’un espace est 20.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EncodeUrl(System.String)">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A&gt;</ph> method to convert any spaces in the URL that is passed as a parameter in an <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method call.</source>
          <target state="translated">L’exemple de code suivant montre comment appeler le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EncodeUrl%2A&gt;</ph> méthode pour convertir les espaces dans l’URL qui est passé en tant que paramètre dans un <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> appel de méthode.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.Encoding">
          <source>Gets the encoding that the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object uses to write content to the page.</source>
          <target state="translated">Obtient l'encodage utilisé par l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> pour écrire le contenu sur la page.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Encoding">
          <source>The <ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> in which the markup is written to the page.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Text.Encoding" /&gt;</ph> dans lequel le balisage est écrit sur la page.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Encoding">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Encoding%2A&gt;</ph> property obtains its value from the base <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> object.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Encoding%2A&gt;</ph> propriété obtienne sa valeur de la base de <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Encoding">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Encoding%2A&gt;</ph> property to write the type of encoding that a custom control uses to render text to the page that contains it.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Encoding%2A&gt;</ph> propriété pour écrire le type de codage utilisé par un contrôle personnalisé pour afficher le texte à la page qui la contient.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EndRender">
          <source>Notifies an <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object, or an object of a derived class, that a control has finished rendering.</source>
          <target state="translated">Notifie un objet <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>, ou un objet d'une classe dérivée, qu'un contrôle a terminé le rendu.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EndRender">
          <source>You can use this method to close any markup elements opened in the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /&gt;</ph> method.</source>
          <target state="translated">Vous pouvez utiliser cette méthode pour fermer les éléments de balisage ouverts dans la méthode <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.BeginRender" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EndRender">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph> method has no functionality.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> implémentation de classe de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph> méthode n’a aucune fonctionnalité.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EndRender">
          <source>You must override <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph> in a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class to provide your own rendering functionality.</source>
          <target state="translated">Vous devez substituer <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph> dans une classe dérivée de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe afin de fournir vos propres fonctionnalités de rendu.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EndRender">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph> method to close any markup elements opened in the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> method.</source>
          <target state="translated">Vous pouvez utiliser la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndRender%2A&gt;</ph> méthode pour fermer les éléments de balisage est ouvert dans le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.BeginRender%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars">
          <source>Represents the left angle bracket and slash mark (<ph id="ph1">&amp;lt;</ph>/) of the closing tag of a markup element.</source>
          <target state="translated">Représente le crochet gauche et la barre oblique (<ph id="ph1">&amp;lt;</ph>/) de la balise de fermeture d’un élément de balisage.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method to construct markup element end tags.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars&gt;</ph> champ est utilisé par le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> méthode pour construire des balises de fin d’élément.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars">
          <source>The following code example shows how to render the closing tag of a <ph id="ph1">`&lt;table&gt;`</ph> markup element by using the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars&gt;</ph> and the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> fields as parameter values in calls to the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant montre comment restituer la balise de fermeture d’un <ph id="ph1">`&lt;table&gt;`</ph> élément de balisage à l’aide de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EndTagLeftChars&gt;</ph> et le <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> champs comme valeurs de paramètre dans les appels à la <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EndTagLeftChars">
          <source>This code example renders the following markup:</source>
          <target state="translated">Cet exemple de code restitue le balisage suivant :</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</source>
          <target state="translated">Écrit la balise d'ouverture d'un élément de balisage qui contient des attributs qui implémentent la présentation et la mise en forme des caractères du style spécifié.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> that specifies the layout and formatting to begin applying to the block of markup.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> qui spécifie la disposition et la mise en forme qu'il faut commencer à appliquer au bloc de balise.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>Writes the opening tag of a <ph id="ph1">&lt;see langword="&amp;lt;span&amp;gt;" /&gt;</ph> element that contains attributes that implement the layout and character formatting of the specified style.</source>
          <target state="translated">Écrit la balise d'ouverture d'un élément <ph id="ph1">&lt;see langword="&amp;lt;span&amp;gt;" /&gt;</ph> qui contient des attributs qui implémentent la présentation et la mise en forme des caractères du style spécifié.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply styles, such as background color or border width, to a block of markup.</source>
          <target state="translated">Utilisez la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> méthode à appliquer des styles, tels que de la largeur de couleur ou une bordure en arrière-plan, à un bloc de balisage.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> méthodes permettent à un adaptateur pour appareil mobile ou un contrôle pour créer un balisage qui utilise la mise en forme des caractères du style spécifié.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>Use the same value for <ph id="ph1">`style`</ph> in the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method that you use in the corresponding <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method.</source>
          <target state="translated">Utilisez la même valeur pour <ph id="ph1">`style`</ph> dans les <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> méthode que vous utilisez dans correspondant <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29&gt;</ph> method renders the opening tag of a <ph id="ph3">`&lt;span&gt;`</ph> element.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> surcharge de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29&gt;</ph> méthode restitue la balise d’ouverture d’un <ph id="ph3">`&lt;span&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>This method then adds the necessary attributes and style attributes to the opening tag of the <ph id="ph1">`&lt;span&gt;`</ph> element to display the settings specified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Style&gt;</ph> object.</source>
          <target state="translated">Cette méthode ajoute ensuite les attributs nécessaires et les attributs de style à la balise d’ouverture de la <ph id="ph1">`&lt;span&gt;`</ph> élément pour afficher les paramètres spécifiés par le <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Style&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>If you want to render a different markup element to contain the attributes and style attributes, use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> overload.</source>
          <target state="translated">Si vous souhaitez restituer un élément de balisage différent pour contenir les attributs et les attributs de style, utilisez la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> de surcharge.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>The following code example demonstrates how to use a custom class named <ph id="ph1">`TextSample`</ph>, derived from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class, that uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> style to a string of text.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser une classe personnalisée nommée <ph id="ph1">`TextSample`</ph>, dérivée de la <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> (classe), qui utilise le <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> méthode pour appliquer un <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> style à une chaîne de texte.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method renders the HTML <ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> méthode restitue le code HTML <ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method call closes the <ph id="ph2">`&lt;span&gt;`</ph> element after the text has been rendered.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> appel de méthode ferme la <ph id="ph2">`&lt;span&gt;`</ph> élément après le texte a été restitué.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> that specifies the layout and formatting to begin applying to the block of markup.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> qui spécifie la disposition et la mise en forme qu'il faut commencer à appliquer au bloc de balise.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> that specifies the opening tag of the markup element that will contain the style object specified in <bpt id="p1">&lt;c&gt;</bpt>style<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> qui spécifie la balise d’ouverture de l’élément de balisage qui contiendra l’objet de style spécifié dans <bpt id="p1">&lt;c&gt;</bpt>style<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Writes the opening tag of a markup element that contains attributes that implement the layout and character formatting of the specified style.</source>
          <target state="translated">Écrit la balise d'ouverture d'un élément de balisage qui contient des attributs qui implémentent la présentation et la mise en forme des caractères du style spécifié.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply styles, such as background color or border width, to a block of markup.</source>
          <target state="translated">Utilisez la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> méthode à appliquer des styles, tels que de la largeur de couleur ou une bordure en arrière-plan, à un bloc de balisage.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> methods allow a device adapter or control to create markup that uses the character formatting of the specified style.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> méthodes permettent à un adaptateur pour appareil mobile ou un contrôle pour créer un balisage qui utilise la mise en forme des caractères du style spécifié.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Use the same value for <ph id="ph1">`style`</ph> in the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method that you use in the corresponding <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method.</source>
          <target state="translated">Utilisez la même valeur pour <ph id="ph1">`style`</ph> dans les <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> méthode que vous utilisez dans correspondant <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> method renders the opening tag of the element specified by the <ph id="ph3">`tag`</ph> parameter.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> surcharge de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> méthode restitue la balise d’ouverture de l’élément spécifié par le <ph id="ph3">`tag`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> method then adds the necessary attributes and style attributes to the opening tag of the element to display the settings that are specified by the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Style&gt;</ph> object.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> méthode ajoute ensuite les attributs nécessaires et les attributs de style à la balise d’ouverture de l’élément pour afficher les paramètres qui est spécifiée par le <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Style&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29&gt;</ph> overload to render the opening tag of a <ph id="ph2">`&lt;span&gt;`</ph> element.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%29&gt;</ph> surcharge pour restituer la balise d’ouverture d’un <ph id="ph2">`&lt;span&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The following code example demonstrates how to use a custom class named <ph id="ph1">`TextSample`</ph>, derived from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class, that uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> style to a string of text.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser une classe personnalisée nommée <ph id="ph1">`TextSample`</ph>, dérivée de la <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> (classe), qui utilise le <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> méthode pour appliquer un <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> style à une chaîne de texte.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method renders the HTML<ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> méthode restitue le code HTML<ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.EnterStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method call closes the <ph id="ph2">`&lt;span&gt;`</ph> element after the text has been rendered.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> appel de méthode ferme la <ph id="ph2">`&lt;span&gt;`</ph> élément après le texte a été restitué.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.EqualsChar">
          <source>Represents the equal sign (<ph id="ph1">&lt;see langword="=" /&gt;</ph>).</source>
          <target state="translated">Représente le signe égal (<ph id="ph1">&lt;see langword="=" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsChar">
          <source>You might want to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> field instead of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsChar&gt;</ph> field when constructing the opening delimiter of an attribute value.</source>
          <target state="translated">Vous souhaiterez peut-être utiliser le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> champ au lieu du <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsChar&gt;</ph> champ lors de la construction du séparateur d’ouverture d’une valeur d’attribut.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsChar">
          <source>The following code example shows how to render the <ph id="ph1">`src`</ph> attribute and part of its value for an <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">L’exemple de code suivant montre comment restituer le <ph id="ph1">`src`</ph> attribut et une partie de sa valeur pour un <ph id="ph2">`&lt;img&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsChar">
          <source>The code uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsChar&gt;</ph> field in a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method call to render the equal sign (=) between the <ph id="ph3">`src`</ph> attribute and its value.</source>
          <target state="translated">Le code utilise le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsChar&gt;</ph> champ dans un <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> appel de méthode pour restituer le signe égal (=) entre le <ph id="ph3">`src`</ph> attribut et sa valeur.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">Cet exemple de code restitue le balisage suivant :</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString">
          <source>Represents an equal sign (=) and a double quotation mark (") together in a string (=").</source>
          <target state="translated">Représente un signe égal (=) et un guillemet double (") regroupés dans une chaîne (=").</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> methods to construct the opening delimiter of attribute values.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> champ est utilisé par le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> méthodes pour construire le séparateur d’ouverture des valeurs d’attribut.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString">
          <source>The following code example shows how to render a <ph id="ph1">`border`</ph> attribute for a <ph id="ph2">`&lt;table&gt;`</ph> element.</source>
          <target state="translated">L’exemple de code suivant montre comment restituer un <ph id="ph1">`border`</ph> d’attribut pour un <ph id="ph2">`&lt;table&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString">
          <source>The code calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the attribute and its value and uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> and <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph> fields.</source>
          <target state="translated">Le code appelle la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode pour restituer l’attribut et sa valeur et les utilise le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode pour restituer la <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString&gt;</ph> et <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.DoubleQuoteChar&gt;</ph> champs.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.EqualsDoubleQuoteString">
          <source>This code example renders the following markup:</source>
          <target state="translated">Cet exemple de code restitue le balisage suivant :</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes the closing tag of a markup element to end the specified layout and character formatting.</source>
          <target state="translated">Écrit la balise de fermeture d'un élément de balisage pour terminer la disposition et la mise en forme de caractères spécifiées.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> that specifies the layout and formatting to close.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> qui spécifie la disposition et la mise en forme à fermer.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>Writes the closing tag of a <ph id="ph1">&lt;see langword="&amp;lt;span&amp;gt;" /&gt;</ph> element to end the specified layout and character formatting.</source>
          <target state="translated">Écrit la balise de fermeture d'un élément <ph id="ph1">&lt;see langword="&amp;lt;span&amp;gt;" /&gt;</ph> pour terminer la disposition et la mise en forme de caractères spécifiées.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29&gt;</ph> method renders the closing tag of a <ph id="ph3">`&lt;span&gt;`</ph> element after the closing tag of the control, closing the element opened by the corresponding <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> call.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> surcharge de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%29&gt;</ph> méthode restitue la balise de fermeture d’un <ph id="ph3">`&lt;span&gt;`</ph> élément après la balise de fermeture du contrôle, la fermeture de l’élément ouvert par correspondant <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> appeler.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> méthodes permettent à un adaptateur pour appareil mobile ou un contrôle pour créer le balisage qui commence et se termine un bloc à l’aide de la mise en forme des caractères du style spécifié.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>Use the same value for <ph id="ph1">`style`</ph> in the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method that you use in the corresponding <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method.</source>
          <target state="translated">Utilisez la même valeur pour <ph id="ph1">`style`</ph> dans les <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> méthode que vous utilisez dans correspondant <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>The following code example demonstrates how to use a custom class named <ph id="ph1">`TextSample`</ph>, derived from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class, that uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> style to a string of text.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser une classe personnalisée nommée <ph id="ph1">`TextSample`</ph>, dérivée de la <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> (classe), qui utilise le <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> méthode pour appliquer un <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> style à une chaîne de texte.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method renders the HTML <ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> méthode restitue le code HTML <ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method call closes the <ph id="ph2">`&lt;span&gt;`</ph> element after the text has been rendered.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> appel de méthode ferme la <ph id="ph2">`&lt;span&gt;`</ph> élément après le texte a été restitué.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> that specifies the layout and formatting to stop applying to the output text.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.Style" /&gt;</ph> qui spécifie la disposition et le formatage à ne plus appliquer au texte de sortie.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> that specifies the closing tag of the markup element that contained the attributes that applied the specified style.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> qui spécifie la balise de fermeture de l’élément de balisage contenant les attributs appliqués au style spécifié.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>This must match the key passed in the corresponding <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /&gt;</ph> call.</source>
          <target state="translated">Cela doit correspondre à la clé transmise dans l’appel <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.EnterStyle" /&gt;</ph> correspondant.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Writes the closing tag of the specified markup element to end the specified layout and character formatting.</source>
          <target state="translated">Écrit la balise de fermeture de l’élément de balisage spécifié pour terminer la disposition et le formatage des caractères spécifiés.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> method renders the closing tag of the element that is specified by <ph id="ph3">`tag`</ph> after the closing tag of the control, closing the element that was opened by the corresponding <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> method call.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> surcharge de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> méthode restitue la balise de fermeture de l’élément spécifié par <ph id="ph3">`tag`</ph> après la balise de fermeture du contrôle, fermeture de l’élément qui a été ouvert par correspondant <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%28System.Web.UI.WebControls.Style%2CSystem.Web.UI.HtmlTextWriterTag%29&gt;</ph> appel de méthode.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> methods allow a device adapter or control to create markup that begins and ends a block by using the character formatting of the specified style.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> méthodes permettent à un adaptateur pour appareil mobile ou un contrôle pour créer le balisage qui commence et se termine un bloc à l’aide de la mise en forme des caractères du style spécifié.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>Use the same value for <ph id="ph1">`style`</ph> in the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method that you use in the corresponding <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method.</source>
          <target state="translated">Utilisez la même valeur pour <ph id="ph1">`style`</ph> dans les <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> méthode que vous utilisez dans correspondant <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The following code example demonstrates how to use a custom class named <ph id="ph1">`TextSample`</ph>, derived from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class, that uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method to apply a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> style to a string of text.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser une classe personnalisée nommée <ph id="ph1">`TextSample`</ph>, dérivée de la <ph id="ph2">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> (classe), qui utilise le <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> méthode pour appliquer un <ph id="ph4">&lt;xref:System.Web.UI.WebControls.Style.ForeColor%2A&gt;</ph> style à une chaîne de texte.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> method renders the HTML <ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.EnterStyle%2A&gt;</ph> méthode restitue le code HTML <ph id="ph2">`&lt;span style="color:Navy;"&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.ExitStyle(System.Web.UI.WebControls.Style,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> method call closes the <ph id="ph2">`&lt;span&gt;`</ph> element after the text has been rendered.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.ExitStyle%2A&gt;</ph> appel de méthode ferme la <ph id="ph2">`&lt;span&gt;`</ph> élément après le texte a été restitué.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>Removes all the markup and style attributes on all properties of the page or Web server control.</source>
          <target state="translated">Supprime tous les attributs de style et de balisage sur toutes les propriétés de la page ou du contrôle serveur Web.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>Before attributes are rendered on a markup element, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method is called.</source>
          <target state="translated">Avant de la restitution des attributs sur un élément de balisage, le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> méthode est appelée.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>In turn, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> methods for each attribute and style to render.</source>
          <target state="translated">À son tour, le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> les appels de méthode le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> méthodes pour chaque attribut et un style à restituer.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>The following code example shows how to use a custom class, derived from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class, that overrides the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser une classe personnalisée dérivée de la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> (classe), qui remplace le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>When called, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> override checks whether the text writer renders any <ph id="ph2">`&lt;label&gt;`</ph> or <ph id="ph3">`&lt;a&gt;`</ph> elements:</source>
          <target state="translated">Lorsqu’elle est appelée, le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> substitution vérifie si le writer de texte affiche les <ph id="ph2">`&lt;label&gt;`</ph> ou <ph id="ph3">`&lt;a&gt;`</ph> éléments :</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>If a <ph id="ph1">`&lt;label&gt;`</ph> element is being rendered, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method checks whether a <ph id="ph3">`style`</ph> attribute is rendered on the element and, if not, creates a <ph id="ph4">`style`</ph> attribute and sets it to <ph id="ph5">`color: blue`</ph>.</source>
          <target state="translated">Si un <ph id="ph1">`&lt;label&gt;`</ph> élément est rendu, la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> méthode vérifie si un <ph id="ph3">`style`</ph> attribut est rendu sur l’élément et, dans le cas contraire, crée un <ph id="ph4">`style`</ph> d’attribut et lui affecte la valeur <ph id="ph5">`color: blue`</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.FilterAttributes">
          <source>If an <ph id="ph1">`&lt;a&gt;`</ph> element is being rendered, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method determines whether an <ph id="ph3">`href`</ph> attribute is included and, if not, adds an <ph id="ph4">`href`</ph> to the URL <ph id="ph5">http://www.cohowinery.com</ph>.</source>
          <target state="translated">Si un <ph id="ph1">`&lt;a&gt;`</ph> élément est rendu, la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> méthode détermine si un <ph id="ph3">`href`</ph> attribut est inclus et, le cas contraire, ajoute une <ph id="ph4">`href`</ph> à l’URL <ph id="ph5">http://www.cohowinery.com</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Flush">
          <source>Clears all buffers for the current <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object and causes any buffered data to be written to the output stream.</source>
          <target state="translated">Efface toutes les mémoires tampons pour <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> en cours et provoque l'écriture des données mises en mémoire tampon dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Flush">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Flush%2A&gt;</ph> method just calls the <ph id="ph3">&lt;xref:System.IO.TextWriter.Flush%2A&gt;</ph> base method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> implémentation de classe de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Flush%2A&gt;</ph> méthode appelle simplement la <ph id="ph3">&lt;xref:System.IO.TextWriter.Flush%2A&gt;</ph> méthode de base.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>A string that contains the attribute for which to obtain the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph>.</source>
          <target state="translated">Chaîne qui contient l'attribut pour lequel <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> doit être obtenu.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>Obtains the corresponding <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> enumeration value for the specified attribute.</source>
          <target state="translated">Obtient la valeur d'énumération <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> correspondant à l'attribut spécifié.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> enumeration value for the specified attribute; otherwise, an invalid <ph id="ph2">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> value if the attribute is not a member of the enumeration.</source>
          <target state="translated">Valeur d'énumération <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> de l'attribut spécifié ; sinon, valeur <ph id="ph2">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> non valide si l'attribut n'est pas membre de l'énumération.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>If <ph id="ph1">`attrName`</ph> is <ph id="ph2">`null`</ph> or an empty string (""), or cannot be found in the table of attribute names, the value -1, typed to an <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> object, is returned.</source>
          <target state="translated">Si <ph id="ph1">`attrName`</ph> est <ph id="ph2">`null`</ph> ou une chaîne vide (« »), ou ne figure pas dans la table de noms d’attributs, la valeur -1, déclarée dans un <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> de l’objet, qui est renvoyée.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>The following code example demonstrates how to use a class, derived from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class, that overrides the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser une classe dérivée de la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> (classe), qui remplace le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>The override checks whether <ph id="ph1">`tagKey`</ph> is equal to the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph> field, which indicates that a <ph id="ph3">`&lt;font&gt;`</ph> markup element will be rendered.</source>
          <target state="translated">La substitution vérifie si <ph id="ph1">`tagKey`</ph> est égal à la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph> champ, ce qui indique qu’un <ph id="ph3">`&lt;font&gt;`</ph> balisage élément sera restitué.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>If so, the override calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> method to find out whether the <ph id="ph2">`&lt;font&gt;`</ph> element contains a <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute.</source>
          <target state="translated">Si, par conséquent, la substitution appelle la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> méthode pour savoir si le <ph id="ph2">`&lt;font&gt;`</ph> élément contient un <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribut.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeKey(System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> returns <ph id="ph2">`false`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method calls the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A&gt;</ph> method, which defines the <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> and sets its value to <ph id="ph6">`30pt`</ph>.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> retourne <ph id="ph2">`false`</ph>, le <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> les appels de méthode le <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A&gt;</ph> (méthode), qui définit le <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> et lui affecte la valeur <ph id="ph6">`30pt`</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> to obtain the markup attribute name for.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> pour lequel obtenir le nom d'attribut de balisage.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)">
          <source>Obtains the name of the markup attribute associated with the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> value.</source>
          <target state="translated">Obtient le nom de l'attribut de balisage associé à la valeur <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> spécifiée.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the name of the markup attribute.</source>
          <target state="translated">Chaîne contenant le nom de l'attribut de balisage.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A&gt;</ph> method returns an empty string (""), if <ph id="ph2">`attrKey`</ph> is not a valid <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> value.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A&gt;</ph> méthode retourne une chaîne vide (" »), si <ph id="ph2">`attrKey`</ph> n’est pas valide <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> valeur.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetAttributeName(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A&gt;</ph> method to convert a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> enumeration value to its string name.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeName%2A&gt;</ph> méthode pour convertir un <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> valeur d’énumération vers son nom de chaîne.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>The style attribute for which to obtain the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph>.</source>
          <target state="translated">Attribut de style pour lequel obtenir <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>Obtains the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> enumeration value for the specified style.</source>
          <target state="translated">Obtient la valeur d'énumération <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> correspondant au style spécifié.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> enumeration value corresponding to <ph id="ph2">&lt;paramref name="styleName" /&gt;</ph>.</source>
          <target state="translated">Valeur de l'énumération <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> correspondant à <ph id="ph2">&lt;paramref name="styleName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A&gt;</ph> method returns the value -1 typed as a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> value, if <ph id="ph3">`styleName`</ph> does not correspond to any <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> enumeration value.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A&gt;</ph> méthode retourne la valeur -1 typé comme un <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> valeur, si <ph id="ph3">`styleName`</ph> ne correspond pas à un <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> valeur d’énumération.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>The following code example demonstrates how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method in a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">L’exemple de code suivant montre comment substituer la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> méthode dans une classe dérivée de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> override determines whether a <ph id="ph2">`&lt;label&gt;`</ph> markup will be rendered, and, if so, checks the element for a <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> substitution détermine si un <ph id="ph2">`&lt;label&gt;`</ph> balisage sera restitué et, dans ce cas, vérifie l’élément pour un <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribut.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleKey(System.String)">
          <source>If a <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute has not been defined, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A&gt;</ph> method is used as the first parameter in a call to the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method to add a <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute to a <ph id="ph5">`&lt;label&gt;`</ph> markup element and set the <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute to <ph id="ph7">`red`</ph>.</source>
          <target state="translated">Si un <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribut n’a pas été défini, le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleKey%2A&gt;</ph> méthode est utilisée comme premier paramètre dans un appel à la <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> méthode pour ajouter un <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribut un <ph id="ph5">`&lt;label&gt;`</ph> balisage et définissez le <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribut <ph id="ph7">`red`</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> to obtain the style attribute name for.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> pour lequel obtenir le nom d'attribut de style.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>Obtains the markup style attribute name associated with the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> enumeration value.</source>
          <target state="translated">Obtient le nom de l'attribut de style de balisage associé à la valeur d'énumération <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> spécifiée.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>The style attribute name associated with the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> enumeration value specified in <ph id="ph2">&lt;paramref name="styleKey" /&gt;</ph>.</source>
          <target state="translated">Nom de l'attribut de style associé à la valeur d'énumération <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> spécifiée dans <ph id="ph2">&lt;paramref name="styleKey" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>If <ph id="ph1">`styleKey`</ph> is not a valid <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> object, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A&gt;</ph> method returns an empty string ("").</source>
          <target state="translated">Si <ph id="ph1">`styleKey`</ph> n’est pas valide <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> objet, le <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A&gt;</ph> méthode retourne une chaîne vide (« »).</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>The following code example shows how to check whether a <ph id="ph1">`&lt;label&gt;`</ph> element is being rendered.</source>
          <target state="translated">L’exemple de code suivant montre comment vérifier si un <ph id="ph1">`&lt;label&gt;`</ph> élément est rendu.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>If so, it checks whether a <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> style attribute has been defined on the element.</source>
          <target state="translated">Si, par conséquent, il vérifie si un <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribut de style a été défini sur l’élément.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetStyleName(System.Web.UI.HtmlTextWriterStyle)">
          <source>If the attribute has not been defined, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method is called and the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A&gt;</ph> method converts the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> enumeration member into its string representation to pass to the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method.</source>
          <target state="translated">Si l’attribut n’a pas été défini, le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> méthode est appelée et la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetStyleName%2A&gt;</ph> méthode convertit le <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> membre d’énumération en sa représentation sous forme de chaîne à passer à la <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>The markup element for which to obtain the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph>.</source>
          <target state="translated">Élément de balisage pour lequel obtenir <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>Obtains the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> enumeration value associated with the specified markup element.</source>
          <target state="translated">Obtient la valeur d'énumération <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> associée à l'élément de balisage spécifié.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> enumeration value; otherwise, if <ph id="ph2">&lt;paramref name="tagName" /&gt;</ph> is not associated with a specific <ph id="ph3">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> value, <ph id="ph4">&lt;see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" /&gt;</ph>.</source>
          <target state="translated">Valeur d'énumération <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> ; sinon, si le paramètre <ph id="ph2">&lt;paramref name="tagName" /&gt;</ph> n'est pas associé à une valeur <ph id="ph3">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> spécifique, <ph id="ph4">&lt;see cref="F:System.Web.UI.HtmlTextWriterTag.Unknown" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>If <ph id="ph1">`tagName`</ph> is <ph id="ph2">`null`</ph>, an empty string (""), or cannot be found in the table of markup tag names, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A&gt;</ph> method returns the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterTag.Unknown&gt;</ph> field.</source>
          <target state="translated">Si <ph id="ph1">`tagName`</ph> est <ph id="ph2">`null`</ph>, une chaîne vide (« »), ou ne figure pas dans la table des noms de balises de balisage, le <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A&gt;</ph> méthode retourne le <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterTag.Unknown&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>The following code example shows how to override the overload of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method that takes a string as its parameter.</source>
          <target state="translated">L’exemple de code suivant montre comment substituer la surcharge de la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> méthode qui prend une chaîne comme paramètre.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagKey(System.String)">
          <source>The string is passed to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A&gt;</ph> method, which converts it to the corresponding <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> enumeration member, and then passes that to the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> overload that takes a <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> enumeration value as a parameter.</source>
          <target state="translated">La chaîne est passée à la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagKey%2A&gt;</ph> (méthode), qui la convertit en correspondant <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> membre de l’énumération, puis passe à la <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> surcharge qui accepte un <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> valeur d’énumération en tant que paramètre.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> to obtain the markup element for.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> pour lequel obtenir l'élément de balisage.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>Obtains the markup element associated with the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> enumeration value.</source>
          <target state="translated">Obtient l'élément de balisage associé à la valeur d'énumération <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> spécifiée.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>A string representing the markup element.</source>
          <target state="translated">Chaîne représentant l'élément de balisage.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>If <ph id="ph1">`tagKey`</ph> is not a valid <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> value, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagName%2A&gt;</ph> method returns an empty string ("").</source>
          <target state="translated">Si <ph id="ph1">`tagKey`</ph> n’est pas valide <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> valeur, le <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagName%2A&gt;</ph> méthode retourne une chaîne vide (« »).</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>The following code example demonstrates how to close a <ph id="ph1">`&lt;font&gt;`</ph> element by using the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant montre comment fermer une <ph id="ph1">`&lt;font&gt;`</ph> élément à l’aide de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagName%2A&gt;</ph> method to convert the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph> value to a string.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> les appels de méthode le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetTagName%2A&gt;</ph> méthode pour convertir le <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph> valeur en une chaîne.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>Gets or sets the number of tab positions to indent the beginning of each line of markup.</source>
          <target state="translated">Obtient ou définit le nombre de tabulations du retrait à respecter au début d'une ligne HTML.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>The number of tab positions to indent each line.</source>
          <target state="translated">Le nombre de tabulations pour la mise en retrait de chaque ligne.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>Indentation is performed by writing the string that is specified by the <ph id="ph1">`tabString`</ph> parameter of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> constructor the number of times that are specified by the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> property.</source>
          <target state="translated">Mise en retrait est effectuée en écrivant la chaîne spécifiée par le <ph id="ph1">`tabString`</ph> paramètre de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%28System.IO.TextWriter%2CSystem.String%29&gt;</ph> constructeur le nombre de fois spécifié par le <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> property is set to a negative value, it is changed to 0 before being saved.</source>
          <target state="translated">Si la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> est définie sur une valeur négative, il est modifié en 0 avant d’être enregistrées.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>The following code example demonstrates how to increment the value that is assigned to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> property when attributes have been added to the opening tag of a <ph id="ph2">`&lt;span&gt;`</ph> element and the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method has been called.</source>
          <target state="translated">L’exemple de code suivant montre comment incrémenter la valeur affectée à la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> propriété lorsque les attributs ont été ajoutés à la balise d’ouverture d’un <ph id="ph2">`&lt;span&gt;`</ph> élément et la <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> méthode a été appelée.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.Indent">
          <source>This increases the indentation for any markup that is rendered inside the <ph id="ph1">`&lt;span&gt;`</ph> element.</source>
          <target state="translated">Cela augmente la mise en retrait de tout balisage restitué à l’intérieur du <ph id="ph1">`&lt;span&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>Gets or sets the text writer that writes the inner content of the markup element.</source>
          <target state="translated">Obtient ou définit le TextWriter à utiliser pour écrire le contenu interne de l'élément de balisage.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that writes the inner markup content.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> qui écrit le contenu de balisage interne.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>Inner markup content is the text found between the opening and closing tags of a markup language element.</source>
          <target state="translated">Contenu de balisage interne est le texte compris entre les balises d’ouverture et fermeture d’un élément de langage de balisage.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A&gt;</ph> property is set to a <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> object that is an instance of the <ph id="ph3">&lt;xref:System.Web.HttpWriter&gt;</ph> class, this fact is noted and a separate reference is saved.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A&gt;</ph> est définie sur une <ph id="ph2">&lt;xref:System.IO.TextWriter&gt;</ph> objet qui est une instance de la <ph id="ph3">&lt;xref:System.Web.HttpWriter&gt;</ph> (classe), ce fait est noté et une référence séparée est enregistrée.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>The following code example shows how to use a custom Web server control, derived from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> class, that overrides the <ph id="ph2">&lt;xref:System.Web.UI.Control.Render%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser un contrôle serveur Web personnalisé, dérivé de la <ph id="ph1">&lt;xref:System.Web.UI.WebControls.WebControl&gt;</ph> (classe), qui remplace le <ph id="ph2">&lt;xref:System.Web.UI.Control.Render%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>It uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class to write a <ph id="ph2">`&lt;font&gt;`</ph> element.</source>
          <target state="translated">Elle utilise le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe permettant d’écrire un <ph id="ph2">`&lt;font&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.InnerWriter">
          <source>After it writes the opening tag of the element, it uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A&gt;</ph> property to write the string <ph id="ph2">`"&lt;br&gt; The time on the server:"`</ph> and concatenates this string with the value of the <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Une fois qu’il écrit la balise d’ouverture de l’élément, il utilise le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.InnerWriter%2A&gt;</ph> propriété pour écrire la chaîne <ph id="ph2">`"&lt;br&gt; The time on the server:"`</ph> et concatène cette chaîne avec la valeur de la <ph id="ph3">&lt;xref:System.DateTime.Now%2A?displayProperty=nameWithType&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Determines whether the specified markup attribute and its value are rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Détermine si l'attribut de balisage spécifié et sa valeur sont rendus au cours de l'appel suivant à la méthode <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> associated with the markup attribute.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> associé à l'attribut de balisage.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>Determines whether the specified markup attribute and its value are rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Détermine si l'attribut de balisage spécifié et sa valeur sont rendus au cours de l'appel suivant à la méthode <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute is rendered during the next call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'attribut est rendu au cours de l'appel suivant à la méthode <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>To obtain the value to be assigned to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> object, use the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29&gt;</ph> overload instead of this one.</source>
          <target state="translated">Pour obtenir la valeur à affecter à la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> de l’objet, utilisez la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%28System.Web.UI.HtmlTextWriterAttribute%2CSystem.String%40%29&gt;</ph> de surcharge au lieu de celle-ci.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The following code example shows how to use an override of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method in a class that inherits from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser un remplacement de la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> méthode dans une classe qui hérite de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> override checks whether a <ph id="ph2">`&lt;font&gt;`</ph> markup element will be rendered.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> substitution vérifie si un <ph id="ph2">`&lt;font&gt;`</ph> élément du balisage sera restitué.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>If so, the override calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> method to check whether the <ph id="ph2">`&lt;font&gt;`</ph> element contains a <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute.</source>
          <target state="translated">Si, par conséquent, la substitution appelle la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> méthode permettant de vérifier si le <ph id="ph2">`&lt;font&gt;`</ph> élément contient un <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribut.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute)">
          <source>If not, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A&gt;</ph> method, which defines the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute and sets its value to <ph id="ph4">`30pt`</ph>.</source>
          <target state="translated">Si ce n’est pas le cas, le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> les appels de méthode le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.GetAttributeKey%2A&gt;</ph> (méthode), qui définit le <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> d’attribut et lui affecte la valeur <ph id="ph4">`30pt`</ph>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> associated with the markup attribute.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> associé à l'attribut de balisage.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)">
          <source>The value assigned to the attribute.</source>
          <target state="translated">Valeur à affecter à l’attribut.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)">
          <source>Determines whether the specified markup attribute and its value are rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Détermine si l'attribut de balisage spécifié et sa valeur sont rendus au cours de l'appel suivant à la méthode <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute is rendered during the next call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'attribut est rendu au cours de l'appel suivant à la méthode <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsAttributeDefined(System.Web.UI.HtmlTextWriterAttribute,System.String@)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> method returns <ph id="ph2">`true`</ph>, the value to be assigned to the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> object is returned in the <ph id="ph4">`value`</ph> parameter.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> méthode retourne <ph id="ph2">`true`</ph>, la valeur à affecter à la <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterAttribute&gt;</ph> est retourné dans le <ph id="ph4">`value`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Determines whether a markup style attribute is rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Détermine si l'attribut de style de balisage spécifié est rendu au cours de l'appel suivant à la méthode <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> associated with the attribute.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> associé à l'attribut.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>Determines whether the specified markup style attribute is rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Détermine si l'attribut de style de balisage spécifié est rendu au cours de l'appel suivant à la méthode <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute will be rendered during the next call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'attribut est rendu au cours de l'appel suivant à la méthode <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>To get the value that will be rendered with the specified style attribute, use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> method.</source>
          <target state="translated">Pour obtenir la valeur qui sera restituée avec l’attribut de style spécifié, utilisez la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%28System.Web.UI.HtmlTextWriterStyle%2CSystem.String%40%29&gt;</ph> surcharge de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>The following code example shows how to check whether a <ph id="ph1">`&lt;label&gt;`</ph> element is being rendered.</source>
          <target state="translated">L’exemple de code suivant montre comment vérifier si un <ph id="ph1">`&lt;label&gt;`</ph> élément est rendu.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> method checks whether a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> style attribute has been defined on the element.</source>
          <target state="translated">Dans ce cas, le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> méthode vérifie si un <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribut de style a été défini sur l’élément.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute has not been defined, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method defines the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute and sets its value to <ph id="ph4">`red`</ph>.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribut n’a pas été défini, le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> méthode définit la <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> d’attribut et lui affecte la valeur <ph id="ph4">`red`</ph>.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> associated with the attribute.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> associé à l'attribut.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)">
          <source>The value assigned to the style attribute.</source>
          <target state="translated">Valeur assignée à l'attribut de style.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)">
          <source>Determines whether the specified markup style attribute and its value are rendered during the next call to the <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method.</source>
          <target state="translated">Détermine si l'attribut de style de balisage spécifié et sa valeur sont rendus au cours de l'appel suivant à la méthode <ph id="ph1">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the attribute and its value will be rendered during the next call to the <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> method; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'attribut et sa valeur sont rendus au cours de l'appel suivant à la méthode <ph id="ph2">&lt;see cref="Overload:System.Web.UI.HtmlTextWriter.RenderBeginTag" /&gt;</ph> ; sinon, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined(System.Web.UI.HtmlTextWriterStyle,System.String@)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> method returns <ph id="ph2">`true`</ph>, the value to be assigned to the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> attribute is returned in the <ph id="ph4">`value`</ph> parameter.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsStyleAttributeDefined%2A&gt;</ph> méthode retourne <ph id="ph2">`true`</ph>, la valeur à affecter à la <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterStyle&gt;</ph> attribut est retourné dans le <ph id="ph4">`value`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>A string that contains the name of the attribute to check.</source>
          <target state="translated">Chaîne qui contient le nom de l'attribut à activer.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>Checks an attribute to ensure that it can be rendered in the opening tag of a <ph id="ph1">&lt;see langword="&amp;lt;form&amp;gt;" /&gt;</ph> markup element.</source>
          <target state="translated">Active un attribut pour garantir qu'il peut être restitué dans la balise d'ouverture d'un élément de balisage <ph id="ph1">&lt;see langword="&amp;lt;form&amp;gt;" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Toujours <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A&gt;</ph> method returns <ph id="ph3">`true`</ph> for all attributes.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> implémentation de classe de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A&gt;</ph> retourne de la méthode <ph id="ph3">`true`</ph> pour tous les attributs.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>Override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A&gt;</ph> to limit the attributes that can be rendered in the opening tag of a <ph id="ph2">`&lt;form&gt;`</ph> element.</source>
          <target state="translated">Remplacer la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A&gt;</ph> pour limiter les attributs qui peuvent être rendus dans la balise d’ouverture d’un <ph id="ph2">`&lt;form&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)">
          <source>Override the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /&gt;</ph> method to return <ph id="ph2">&lt;see langword="true" /&gt;</ph> only for those attributes that can be included in the <ph id="ph3">&lt;see langword="&amp;lt;form&amp;gt;" /&gt;</ph> element of the markup for which the class derived from the <ph id="ph4">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class is intended.</source>
          <target state="translated">Remplacer la <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" /&gt;</ph> retour de méthode <ph id="ph2">&lt;see langword="true" /&gt;</ph> uniquement pour les attributs qui peuvent être inclus dans le <ph id="ph3">&lt;see langword="&amp;lt;form&amp;gt;" /&gt;</ph> élément du balisage pour lequel la classe dérivée de la <ph id="ph4">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> classe est destinée.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>Gets or sets the line terminator string used by the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> object.</source>
          <target state="translated">Obtient ou définit la chaîne de terminaison de ligne utilisée pour l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>The line terminator string used by the current <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>.</source>
          <target state="translated">Chaîne de terminaison de ligne utilisée par le <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> en cours.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>The default line terminator string is a carriage return, followed by a line feed ("\r\n").</source>
          <target state="translated">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’un saut de ligne (« \r\n »).</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>The line terminator string is written to the output stream whenever one of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> methods is called.</source>
          <target state="translated">La chaîne de marque de fin de ligne est écrit dans le flux de sortie chaque fois qu’un seul de le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> méthodes est appelée.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.NewLine%2A&gt;</ph> property is set to <ph id="ph2">`null`</ph>, the default new line character is used.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.NewLine%2A&gt;</ph> est définie sur <ph id="ph2">`null`</ph>, le caractère de nouvelle ligne par défaut est utilisé.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>The following code example shows how to use a custom class, derived from the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class, that overrides the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser une classe personnalisée dérivée de la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> (classe), qui remplace le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>When called, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> override checks whether the text writer renders any <ph id="ph2">`&lt;label&gt;`</ph> or <ph id="ph3">`&lt;a&gt;`</ph> elements.</source>
          <target state="translated">Lorsqu’elle est appelée, le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> substitution vérifie si le writer de texte affiche les <ph id="ph2">`&lt;label&gt;`</ph> ou <ph id="ph3">`&lt;a&gt;`</ph> éléments.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method determines whether a style attribute is defined for the label.</source>
          <target state="translated">Dans ce cas, le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> méthode détermine si un attribut de style est défini pour l’étiquette.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>If no style is defined, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method sets the default value for the <ph id="ph2">`style:color`</ph> attribute to blue.</source>
          <target state="translated">Si aucun style n’est défini, le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> méthode définit la valeur par défaut pour le <ph id="ph2">`style:color`</ph> attribut en bleu.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.NewLine">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> method then uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.NewLine%2A&gt;</ph> property to insert a line break in the markup tag and writes any other defined attributes.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.FilterAttributes%2A&gt;</ph> méthode utilise ensuite le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.NewLine%2A&gt;</ph> propriété pour insérer une ligne break dans la balise et écrit les autres attributs définis.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the name of the attribute to render.</source>
          <target state="translated">Chaîne qui contient le nom de l'attribut à restituer.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the value that is assigned to the attribute.</source>
          <target state="translated">Chaîne contenant la valeur assignée à l'attribut.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> associated with the markup attribute.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> associé à l'attribut de balisage.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Determines whether the specified markup attribute and its value can be rendered to the current markup element.</source>
          <target state="translated">Détermine si l'attribut de balisage spécifié et sa valeur peuvent être rendus dans l'élément de balisage actuel.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Toujours <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> method always returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> implémentation de classe de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> méthode retourne toujours <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> overrides can determine whether an attribute will be rendered to the page.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> substitutions peuvent déterminer si un attribut sera restitué dans la page.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant montre comment substituer la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>If a <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute is rendered, but the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> value is not <ph id="ph3">`30pt`</ph>, the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> override calls the <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to add a <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute and set its value to <ph id="ph7">`30pt`</ph>.</source>
          <target state="translated">Si un <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribut est rendu, mais la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> valeur n’est pas <ph id="ph3">`30pt`</ph>, le <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.OnAttributeRender%2A&gt;</ph> remplacer les appels de la <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> méthode pour ajouter un <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> d’attribut et définissez sa valeur sur <ph id="ph7">`30pt`</ph>.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>If you inherit from the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class, you can override the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /&gt;</ph> method to return <ph id="ph3">&lt;see langword="false" /&gt;</ph> to prevent an attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup.</source>
          <target state="translated">Si vous héritez de la <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> (classe), vous pouvez remplacer le <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /&gt;</ph> retour de méthode <ph id="ph3">&lt;see langword="false" /&gt;</ph> empêcher un attribut de rendu tout, de rendu sur un élément particulier ou de rendu pour une balise particulière.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>For example, if you do not want the object derived from <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> to render the <ph id="ph2">&lt;see langword="bgcolor" /&gt;</ph> attribute to <ph id="ph3">&lt;see langword="&amp;lt;table&amp;gt;" /&gt;</ph> elements, you can override the <ph id="ph4">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /&gt;</ph> and return <ph id="ph5">&lt;see langword="false" /&gt;</ph> when <ph id="ph6">&lt;paramref name="name" /&gt;</ph> passes <ph id="ph7">&lt;see langword="bgcolor" /&gt;</ph> and the <ph id="ph8">&lt;see cref="P:System.Web.UI.HtmlTextWriter.TagName" /&gt;</ph> property value is <ph id="ph9">&lt;see langword="table" /&gt;</ph>.</source>
          <target state="translated">Par exemple, si vous ne souhaitez pas l’objet dérivé <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> pour restituer la <ph id="ph2">&lt;see langword="bgcolor" /&gt;</ph> attribut <ph id="ph3">&lt;see langword="&amp;lt;table&amp;gt;" /&gt;</ph> éléments, vous pouvez remplacer le <ph id="ph4">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterAttribute)" /&gt;</ph> et retourner <ph id="ph5">&lt;see langword="false" /&gt;</ph> lorsque <ph id="ph6">&lt;paramref name="name" /&gt;</ph> passe <ph id="ph7">&lt;see langword="bgcolor" /&gt;</ph> et le <ph id="ph8">&lt;see cref="P:System.Web.UI.HtmlTextWriter.TagName" /&gt;</ph> valeur de propriété est <ph id="ph9">&lt;see langword="table" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>A string containing the name of the style attribute to render.</source>
          <target state="translated">Chaîne contenant le nom de l'attribut de style à restituer.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>A string containing the value that is assigned to the style attribute.</source>
          <target state="translated">Chaîne contenant la valeur assignée à l'attribut de style.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> associated with the style attribute.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> associé à l'attribut de style.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Determines whether the specified markup style attribute and its value can be rendered to the current markup element.</source>
          <target state="translated">Détermine si l'attribut de style de balisage spécifié et sa valeur peuvent être rendus dans l'élément de balisage actuel.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Toujours <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> method always returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> implémentation de classe de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> méthode retourne toujours <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> overrides can determine whether a style attribute will be rendered to the page.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> substitutions peuvent déterminer si un attribut de style sera restitué dans la page.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant montre comment substituer la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>If a <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> style attribute is rendered, but the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> value is not <ph id="ph3">`purple`</ph>, the <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> override uses the <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> method to set the <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribute to <ph id="ph7">`purple`</ph>.</source>
          <target state="translated">Si un <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribut de style est rendu, mais la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> valeur n’est pas <ph id="ph3">`purple`</ph>, le <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender%2A&gt;</ph> remplacer utilise le <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> pour définir le <ph id="ph6">&lt;xref:System.Web.UI.HtmlTextWriterStyle.Color&gt;</ph> attribut <ph id="ph7">`purple`</ph>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>If you inherit from the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class, you can override the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /&gt;</ph> method to return <ph id="ph3">&lt;see langword="false" /&gt;</ph> to prevent a style attribute from being rendered at all, being rendered on a particular element, or being rendered for a particular markup language.</source>
          <target state="translated">Si vous héritez de la <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> (classe), vous pouvez remplacer le <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /&gt;</ph> retour de méthode <ph id="ph3">&lt;see langword="false" /&gt;</ph> empêcher un attribut de style de rendu du tout, de rendu sur un élément particulier ou de rendu pour un langage de balisage particulier.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>For example, if you do not want the object that is derived from <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> to render the <ph id="ph2">&lt;see langword="color" /&gt;</ph> style attribute to a <ph id="ph3">&lt;see langword="&amp;lt;p&amp;gt;" /&gt;</ph> element, you can override the <ph id="ph4">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /&gt;</ph> and return <ph id="ph5">&lt;see langword="false" /&gt;</ph> when <ph id="ph6">&lt;paramref name="name" /&gt;</ph> passes <ph id="ph7">&lt;see langword="color" /&gt;</ph> and the <ph id="ph8">&lt;see cref="P:System.Web.UI.HtmlTextWriter.TagName" /&gt;</ph> property value is <ph id="ph9">&lt;see langword="p" /&gt;</ph>.</source>
          <target state="translated">Par exemple, si vous ne souhaitez pas que l’objet qui est dérivé de <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> pour restituer la <ph id="ph2">&lt;see langword="color" /&gt;</ph> attribut de style à un <ph id="ph3">&lt;see langword="&amp;lt;p&amp;gt;" /&gt;</ph> élément, vous pouvez remplacer le <ph id="ph4">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" /&gt;</ph> et retourner <ph id="ph5">&lt;see langword="false" /&gt;</ph> lorsque <ph id="ph6">&lt;paramref name="name" /&gt;</ph> passe <ph id="ph7">&lt;see langword="color" /&gt;</ph>et <ph id="ph8">&lt;see cref="P:System.Web.UI.HtmlTextWriter.TagName" /&gt;</ph> valeur de propriété est <ph id="ph9">&lt;see langword="p" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>A string containing the name of the element to render.</source>
          <target state="translated">Chaîne contenant le nom de l'élément à restituer.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> associated with the element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> associé à l'élément.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>Determines whether the specified markup element will be rendered to the requesting page.</source>
          <target state="translated">Détermine si l'élément de balisage spécifié sera rendu sur la page qui a effectué la demande.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>Always <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Toujours <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class implementation of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> method always returns <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> implémentation de classe de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> méthode retourne toujours <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> overrides can determine whether an element will be rendered to the page.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> substitutions peuvent déterminer si un élément sera restitué dans la page.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant montre comment substituer la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>If a <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph> element is being rendered, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> override uses the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> method to determine whether a <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute is being rendered.</source>
          <target state="translated">Si un <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriterTag.Font&gt;</ph> élément est rendu, la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.OnTagRender%2A&gt;</ph> remplacer utilise le <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.IsAttributeDefined%2A&gt;</ph> méthode pour déterminer si un <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribut est rendu.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>If not, it uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method to create a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> attribute and set its value to <ph id="ph3">`20pt`</ph>.</source>
          <target state="translated">Si non, il utilise le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> méthode pour créer un <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriterAttribute.Size&gt;</ph> d’attribut et définissez sa valeur sur <ph id="ph3">`20pt`</ph>.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>If you inherit from the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class, you can override the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /&gt;</ph> method to return <ph id="ph3">&lt;see langword="false" /&gt;</ph> to prevent a markup element from being rendered at all or for a particular markup language.</source>
          <target state="translated">Si vous héritez de la <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> (classe), vous pouvez remplacer le <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /&gt;</ph> retour de méthode <ph id="ph3">&lt;see langword="false" /&gt;</ph> pour empêcher le rendu du tout, ou pour un langage de balisage particulier d’un élément de balisage.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>For example, if you do not want the object that is derived from <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> to render the <ph id="ph2">&lt;see langword="&amp;lt;font&amp;gt;" /&gt;</ph> element, you can override the <ph id="ph3">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /&gt;</ph> method to return <ph id="ph4">&lt;see langword="false" /&gt;</ph> when a page is requested that contains a <ph id="ph5">&lt;see langword="&amp;lt;font&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">Par exemple, si vous ne souhaitez pas que l’objet qui est dérivé de <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> pour restituer la <ph id="ph2">&lt;see langword="&amp;lt;font&amp;gt;" /&gt;</ph> élément, vous pouvez remplacer le <ph id="ph3">&lt;see cref="M:System.Web.UI.HtmlTextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" /&gt;</ph> retour de méthode <ph id="ph4">&lt;see langword="false" /&gt;</ph> lorsqu’une page est demandée qui contient un <ph id="ph5">&lt;see langword="&amp;lt;font&amp;gt;" /&gt;</ph> élément.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>Writes a series of tab strings that represent the indentation level for a line of markup characters.</source>
          <target state="translated">Écrit une série de tabulations représentant le niveau de mise en retrait d'une ligne de caractères de balisage.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> property to determine how many tab strings to write to obtain the desired indentation.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph> utilise le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Indent%2A&gt;</ph> propriété pour déterminer le nombre de chaînes onglet écrire obtenir la mise en retrait souhaitée.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>The tab string is specified with the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph> constructor.</source>
          <target state="translated">La chaîne de tabulation est spécifiée avec la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.%23ctor%2A&gt;</ph> constructeur.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>If no tab string is specified, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> constant (<ph id="ph2">`\t`</ph>) is used.</source>
          <target state="translated">Si aucune chaîne de tabulation n’est spécifiée, la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> constant (<ph id="ph2">`\t`</ph>) est utilisé.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph> method in a class that is derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">L’exemple de code suivant montre comment substituer la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph> méthode dans une classe dérivée de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.OutputTabs">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph> override always uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> constant to perform the indentation.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.OutputTabs%2A&gt;</ph> remplacent toujours utilise le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.DefaultTabString&gt;</ph> constante pour effectuer la mise en retrait.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.PopEndTag">
          <source>Removes the most recently saved markup element from the list of rendered elements.</source>
          <target state="translated">Supprime l'élément de balisage enregistré en dernier de la liste d'éléments rendus.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.PopEndTag">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the most recently rendered markup element.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> contenant l'élément de balisage rendu en dernier.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.PopEndTag">
          <source>Elements are added to the list of rendered markup elements by the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">Les éléments sont ajoutés à la liste des éléments de balisage rendus par le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.PopEndTag">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method removes markup elements from the list by calling the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A&gt;</ph> method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> méthode supprime les éléments de balisage de la liste en appelant le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.PopEndTag%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.PopEndTag">
          <source>The list of rendered elements is empty.</source>
          <target state="translated">La liste des éléments rendus est vide.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)">
          <source>The closing tag of the markup element.</source>
          <target state="translated">Balise de fermeture de l'élément de balisage.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)">
          <source>Saves the specified markup element for later use when generating the end tag for a markup element.</source>
          <target state="translated">Enregistre l'élément de balisage spécifié pour utilisation ultérieure lors de la génération de la balise de fin d'un élément de balisage.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)">
          <source>Elements are added to the list of rendered markup elements when the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A&gt;</ph> method.</source>
          <target state="translated">Les éléments sont ajoutés à la liste des éléments de balisage rendus lorsque le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> les appels de méthode le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.PushEndTag%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.PushEndTag(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method removes markup elements from the list after it renders the end tag for the element.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> méthode supprime les éléments de balisage à partir de la liste après elle restitue la balise de fin de l’élément.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>A string containing the name of the markup attribute to register.</source>
          <target state="translated">Chaîne contenant le nom de l'attribut de balisage à inscrire.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> that corresponds with the attribute name.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterAttribute" /&gt;</ph> qui correspond au nom de l'attribut.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Registers markup attributes, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</source>
          <target state="translated">Inscrit les attributs de balisage, qu'il s'agisse de littéraux ou d'attributs générés dynamiquement, à partir du fichier source, pour qu'ils puissent être correctement rendus au client ayant fait la demande.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The predefined attributes of the HTML markup language are registered by calls to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph> method when the first <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object is created.</source>
          <target state="translated">Les attributs prédéfinis du langage de balisage HTML sont inscrits par les appels à la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph> méthode lors de la première <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objet est créé.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>Dynamic attributes can be registered by using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph> method at other times.</source>
          <target state="translated">Les attributs dynamiques peuvent être inscrits à l’aide de la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph> méthode à d’autres moments.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterAttribute(System.String,System.Web.UI.HtmlTextWriterAttribute)">
          <source>The registration table used by the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph> method is <ph id="ph2">`static`</ph>, so registration of attributes applies to all <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objects on the host computer.</source>
          <target state="translated">La table d’inscription utilisée par le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterAttribute%2A&gt;</ph> méthode est <ph id="ph2">`static`</ph>, de sorte que l’inscription d’attributs s’applique à tous les <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objets sur l’ordinateur hôte.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The string passed from the source file specifying the style name.</source>
          <target state="translated">Chaîne passée du fichier source et spécifiant le nom du style.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> that corresponds with the specified style.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterStyle" /&gt;</ph> qui correspond au style spécifié.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Registers markup style properties, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</source>
          <target state="translated">Inscrit les propriétés de style de balisage, qu'il s'agisse de littéraux ou de propriétés générées dynamiquement, à partir du fichier source, pour qu'elles puissent être correctement rendues au client ayant fait la demande.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The predefined cascading style sheet (CSS) attributes of the HTML markup language are registered by calls to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph> method when the first <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object is created.</source>
          <target state="translated">Les attributs de feuille (CSS) style en cascade prédéfinies du langage de balisage HTML sont inscrits par les appels à la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph> méthode lors de la première <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objet est créé.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>Dynamic style attributes can be registered by using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph> method at other times.</source>
          <target state="translated">Les attributs de style dynamiques peuvent être inscrits à l’aide de la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph> méthode à d’autres moments.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterStyle(System.String,System.Web.UI.HtmlTextWriterStyle)">
          <source>The registration table used by the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph> method is <ph id="ph2">`static`</ph>, so registration of attributes applies to all <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objects on the host computer.</source>
          <target state="translated">La table d’inscription utilisée par le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterStyle%2A&gt;</ph> méthode est <ph id="ph2">`static`</ph>, de sorte que l’inscription d’attributs s’applique à tous les <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objets sur l’ordinateur hôte.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>A string that contains the HTML tag.</source>
          <target state="translated">Chaîne qui contient la balise HTML.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> that specifies which element to render.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> qui spécifie l'élément à restituer.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>Registers markup tags, whether literals or dynamically generated, from the source file so that they can be properly rendered to the requesting client.</source>
          <target state="translated">Inscrit les balises de balisage, qu'il s'agisse de littéraux ou de balises générées dynamiquement, à partir du fichier source, pour qu'elles puissent être correctement rendues au client ayant fait la demande.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The predefined markup tags of the HTML language are registered by calls to the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph> method when the first <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object is created.</source>
          <target state="translated">Les balises prédéfinies du langage HTML sont inscrits par les appels à la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph> méthode lors de la première <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objet est créé.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>Dynamic markup tags can be registered by using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph> method at other times.</source>
          <target state="translated">Balises dynamiques peuvent être inscrits à l’aide de la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph> méthode à d’autres moments.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RegisterTag(System.String,System.Web.UI.HtmlTextWriterTag)">
          <source>The registration table used by the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph> method is <ph id="ph2">`static`</ph>, so registration of tags applies to all <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objects on the host computer.</source>
          <target state="translated">La table d’inscription utilisée par le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RegisterTag%2A&gt;</ph> méthode est <ph id="ph2">`static`</ph>, de sorte que l’inscription des balises s’applique à tous les <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objets sur l’ordinateur hôte.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>Writes any text or spacing that occurs after the content and before the closing tag of the markup element to the markup output stream.</source>
          <target state="translated">Écrit le texte ou l'espacement survenant après le contenu et avant la balise de fermeture de l'élément de balisage à rendre dans le flux de sortie de balisage.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>A string that contains the spacing or text to write after the content of the element.</source>
          <target state="translated">Chaîne qui contient l'espacement ou le texte à écrire à la suite du contenu de l'élément.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> method can be useful if you want to insert child elements into the current markup element.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> méthode peut être utile si vous souhaitez insérer des éléments enfants dans l’élément de balisage actuel.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> method in a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class to determine whether a <ph id="ph3">`&lt;label&gt;`</ph> element is being rendered.</source>
          <target state="translated">L’exemple de code suivant montre comment substituer la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> méthode dans une classe dérivée de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe pour déterminer si un <ph id="ph3">`&lt;label&gt;`</ph> élément est rendu.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> override inserts the closing tag of a <ph id="ph2">`&lt;font&gt;`</ph> element immediately before the closing tag of the <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">Dans ce cas, le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> remplacement insère la balise de fermeture d’un <ph id="ph2">`&lt;font&gt;`</ph> élément immédiatement avant la balise de fermeture de la <ph id="ph3">`&lt;label&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>If an element other than <ph id="ph1">`&lt;label&gt;`</ph> is being rendered, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> base method is used.</source>
          <target state="translated">Si un élément autre que <ph id="ph1">`&lt;label&gt;`</ph> est rendu, la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterContent%2A&gt;</ph> méthode de base est utilisée.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class implementation of the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /&gt;</ph> method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> implémentation de classe de la <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /&gt;</ph> méthode renvoie <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterContent">
          <source>Override <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /&gt;</ph> if you want to write text or spacing after the element content but before the closing tag.</source>
          <target state="translated">Substituer <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterContent" /&gt;</ph> si vous souhaitez écrire du texte ou l’espacement après le contenu de l’élément, mais avant la balise de fermeture.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>Writes any spacing or text that occurs after the closing tag for a markup element.</source>
          <target state="translated">Écrit l'espacement ou le texte survenant après la balise de fermeture d'un élément de balisage.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>The spacing or text to write after the closing tag of the element.</source>
          <target state="translated">Espacement ou texte à écrire à la suite de la balise de fermeture de l'élément.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> method can be useful if you want to render additional closing tags after the element tag.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> méthode peut être utile si vous souhaitez restituer des balises de fermeture supplémentaires après la balise d’élément.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> method to determine whether a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class is rendering a <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">L’exemple de code suivant montre comment substituer la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> méthode pour déterminer si une classe dérivée à partir de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe est rendu un <ph id="ph3">`&lt;label&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> override inserts the closing tag of a <ph id="ph2">`&lt;font&gt;`</ph> element immediately after the <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">Dans ce cas, le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> remplacement insère la balise de fermeture d’un <ph id="ph2">`&lt;font&gt;`</ph> élément immédiatement après le <ph id="ph3">`&lt;label&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>If it is not a <ph id="ph1">`&lt;label&gt;`</ph> element, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> base method is used.</source>
          <target state="translated">Si elle n’est pas un <ph id="ph1">`&lt;label&gt;`</ph> élément, le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderAfterTag%2A&gt;</ph> méthode de base est utilisée.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class implementation of the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /&gt;</ph> method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> implémentation de classe de la <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /&gt;</ph> méthode renvoie <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderAfterTag">
          <source>Override <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /&gt;</ph> if you want to write text or spacing after the element closing tag.</source>
          <target state="translated">Substituer <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderAfterTag" /&gt;</ph> si vous souhaitez écrire du texte ou l’espacement après la balise de fermeture de l’élément.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>Writes any text or spacing before the content and after the opening tag of a markup element.</source>
          <target state="translated">Écrit le texte ou l'espacement avant le contenu et après la balise d'ouverture d'un élément de balisage.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>The text or spacing to write prior to the content of the element.</source>
          <target state="translated">Espacement ou texte à écrire avant le contenu de l'élément de balisage.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>If not overridden, <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph> returns <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Si elle n'est pas substituée, <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph> retourne <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> method can be useful if you want to insert child elements into the current markup element before the inner markup.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> méthode peut être utile si vous souhaitez insérer des éléments enfants dans l’élément de balisage en cours avant le balisage interne.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> method to determine whether a class derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class is about to render a <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">L’exemple de code suivant montre comment substituer la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> méthode pour déterminer si une classe dérivée à partir de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe est sur le point de restituer un <ph id="ph3">`&lt;label&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> override inserts the opening tag of a <ph id="ph2">`&lt;font&gt;`</ph> element immediately after the opening tag of the <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">Dans ce cas, le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> remplacement insère la balise d’ouverture d’un <ph id="ph2">`&lt;font&gt;`</ph> élément situé juste après la balise d’ouverture de la <ph id="ph3">`&lt;label&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>If it is not a <ph id="ph1">`&lt;label&gt;`</ph> element, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> base method is used.</source>
          <target state="translated">Si elle n’est pas un <ph id="ph1">`&lt;label&gt;`</ph> élément, le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> méthode de base est utilisée.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class implementation of the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph> method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> implémentation de classe de la <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph> méthode renvoie <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent">
          <source>Override <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph> if you want to write text or spacing after the opening tag but ahead of the element content.</source>
          <target state="translated">Substituer <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeContent" /&gt;</ph> si vous souhaitez écrire du texte ou l’espacement après la balise d’ouverture mais avant le contenu de l’élément.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>Writes any text or spacing that occurs before the opening tag of a markup element.</source>
          <target state="translated">Écrit tout texte ou espacement survenant avant la balise d'ouverture d'un élément de balisage.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>The text or spacing to write before the markup element opening tag.</source>
          <target state="translated">Texte ou espacement à écrire avant la balise d'ouverture d'un élément de balisage.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>If not overridden, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Si la méthode n'est pas substituée, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> method can be useful if you want to render additional opening tags before the opening tag of the intended element.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> méthode peut être utile si vous souhaitez restituer des balises d’ouverture supplémentaires avant la balise d’ouverture de l’élément prévu.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>The following code example shows how to override the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> method to determine whether a class that is derived from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class is about to render a <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">L’exemple de code suivant montre comment substituer la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> méthode pour déterminer si une classe dérivée de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe est sur le point de restituer un <ph id="ph3">`&lt;label&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>If so, the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> override inserts the opening tag of a <ph id="ph2">`&lt;font&gt;`</ph> element immediately before the <ph id="ph3">`&lt;label&gt;`</ph> element.</source>
          <target state="translated">Dans ce cas, le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> remplacement insère la balise d’ouverture d’un <ph id="ph2">`&lt;font&gt;`</ph> élément immédiatement avant le <ph id="ph3">`&lt;label&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>If it is not rendering a <ph id="ph1">`&lt;label&gt;`</ph> element, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> base method is used.</source>
          <target state="translated">S’il n’est pas rendu un <ph id="ph1">`&lt;label&gt;`</ph> élément, le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> méthode de base est utilisée.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> class implementation of the <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /&gt;</ph> method returns <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> implémentation de classe de la <ph id="ph2">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /&gt;</ph> méthode renvoie <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag">
          <source>Override <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /&gt;</ph> if you want to write text or spacing ahead of the element opening tag.</source>
          <target state="translated">Substituer <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.RenderBeforeTag" /&gt;</ph> si vous souhaitez écrire du texte ou l’espacement avant la balise d’ouverture de l’élément.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes the opening tag of a markup element to the output stream.</source>
          <target state="translated">Écrit la balise d'ouverture d'un élément de balisage dans un flux de sortie.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>A string containing the name of the markup element for which to render the opening tag.</source>
          <target state="translated">Chaîne contenant le nom de l’élément de balisage pour lequel afficher la balise d’ouverture.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>Writes the opening tag of the specified markup element to the output stream.</source>
          <target state="translated">Écrit la balise d’ouverture de l’élément de balisage spécifié dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> override of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29&gt;</ph> method, if the markup element is not one of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> enumeration values.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> la substitution de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.String%29&gt;</ph> méthode, si l’élément de balisage ne fait pas partie de la <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> valeurs d’énumération.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>To generate a markup element by using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method, first call the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</source>
          <target state="translated">Pour générer un élément de balisage à l’aide de la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> méthode, appelez d’abord la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> méthodes, selon les besoins, pour spécifier les attributs de l’élément ou les attributs de style qui doivent apparaître dans la balise d’ouverture de l’élément.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>After generating the inner markup, call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method to generate the closing tag.</source>
          <target state="translated">Après avoir généré le balisage interne, appelez le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> méthode permettant de générer la balise de fermeture.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>The following code example shows how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method in a custom control to render the opening tag of a non-standard <ph id="ph2">`MyTag`</ph> element.</source>
          <target state="translated">L’exemple de code suivant montre comment appeler le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> méthode dans un contrôle personnalisé pour restituer la balise d’ouverture non standard <ph id="ph2">`MyTag`</ph> élément.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>The code example then calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render inner markup, and then calls the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method to close the element.</source>
          <target state="translated">L’exemple de code appelle ensuite la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode pour restituer le balisage interne, puis appelle la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> méthode de fermeture de l’élément.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.String)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Cet exemple de code génère le balisage suivant :</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> values that defines the opening tag of the markup element to render.</source>
          <target state="translated">Une des valeurs <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> définissant la balise d'ouverture de l'élément de balisage à restituer.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>Writes the opening tag of the markup element associated with the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> enumeration value to the output stream.</source>
          <target state="translated">Écrit la balise d'ouverture de l'élément de balisage associé à la valeur d'énumération <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> spécifiée dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29&gt;</ph> method if the markup element is of a known type that is one of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> enumeration values.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> surcharge de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%28System.Web.UI.HtmlTextWriterTag%29&gt;</ph> méthode si l’élément de balisage est de type connu qui est un de la <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriterTag&gt;</ph> valeurs d’énumération.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>To generate a markup element by using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method, first call the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> and the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> methods, as necessary, to specify any element attributes or style attributes that are to appear in the opening tag of the element.</source>
          <target state="translated">Pour générer un élément de balisage à l’aide de la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> méthode, appelez d’abord la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A&gt;</ph> méthodes, selon les besoins, pour spécifier les attributs de l’élément ou les attributs de style qui doivent apparaître dans la balise d’ouverture de l’élément.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>After generating the inner markup, call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method to generate the closing tag.</source>
          <target state="translated">Après avoir généré le balisage interne, appelez le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> méthode permettant de générer la balise de fermeture.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method to output the opening tag of an <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> méthode vers la sortie de la balise d’ouverture d’un <ph id="ph2">`&lt;img&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>The attributes that are added to the element by the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> method will be in the opening <ph id="ph2">`&lt;img&gt;`</ph> tag.</source>
          <target state="translated">Les attributs sont ajoutés à l’élément par le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A&gt;</ph> méthode sera dans l’ouverture <ph id="ph2">`&lt;img&gt;`</ph> balise.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method is used to generate the closing tag.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> méthode est utilisée pour générer la balise de fermeture.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Cet exemple de code génère le balisage suivant :</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.RenderEndTag">
          <source>Writes the end tag of a markup element to the output stream.</source>
          <target state="translated">Écrit la balise de fermeture  d'un élément de balisage dans un flux de sortie.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderEndTag">
          <source>Call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method after the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> overload is called and after all content between the opening and closing tags (inner markup) of the element has been rendered.</source>
          <target state="translated">Appelez le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> méthode après le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> surcharge est appelée et après que tout le contenu entre les balises d’ouverture et de fermeture (balisage interne) de l’élément a été rendu.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderEndTag">
          <source>The following code example demonstrates how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method after both the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method that generates the opening tag and the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method that renders the inner markup between the opening and closing tags of the custom <ph id="ph4">`MyTag`</ph> element have been called.</source>
          <target state="translated">L’exemple de code suivant montre comment appeler le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> méthode après les deux le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> méthode qui génère la balise d’ouverture et la <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode qui restitue le balisage interne entre les balises d’ouverture et fermeture personnalisé<ph id="ph4">`MyTag`</ph> élément ont été appelées.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.RenderEndTag">
          <source>This code example generates the following markup:</source>
          <target state="translated">Cet exemple de code génère le balisage suivant :</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingChars">
          <source>Represents a space and the self-closing slash mark (/) of a markup tag.</source>
          <target state="translated">Représente un espace et la marque de barre oblique de fermeture automatique (/) d'une balise.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingChars">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingChars&gt;</ph> field is used in markup elements that are self-closed.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingChars&gt;</ph> champ est utilisé dans les éléments de balisage qui sont ferment automatiquement.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingChars">
          <source>For example:</source>
          <target state="translated">Exemple :</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd">
          <source>Represents the closing slash mark and right angle bracket (/<ph id="ph1">&amp;gt;</ph>) of a self-closing markup element.</source>
          <target state="translated">Représente la barre oblique de fermeture et le crochet droit (/<ph id="ph1">&amp;gt;</ph>) d’un élément de balisage de fermeture automatique.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method when constructing self-closing markup elements.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> champ est utilisé par le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> méthode lors de la construction des éléments de balisage de fermeture automatique.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd">
          <source>The following code example shows how to render the value of a custom <ph id="ph1">`FileName`</ph> property followed by a quotation mark and the characters represented by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> field.</source>
          <target state="translated">L’exemple de code suivant montre comment restituer la valeur d’une personnalisée <ph id="ph1">`FileName`</ph> propriété suivie d’un guillemet et les caractères représentés par le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd">
          <source>The code example calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method and passes the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> field as the parameter argument to close the element.</source>
          <target state="translated">L’exemple de code appelle la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode et passe le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> champ en tant qu’argument de paramètre pour fermer l’élément.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd">
          <source>This code example renders the <ph id="ph1">`FileName`</ph> property value, and then the following markup:</source>
          <target state="translated">Cet exemple de code restitue le <ph id="ph1">`FileName`</ph> valeur de propriété, puis le balisage suivant :</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>Represents the semicolon (;).</source>
          <target state="translated">Représente le point-virgule (;).</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>Pass the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SemicolonChar&gt;</ph> field as the parameter argument in a <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method call when you want to render a semicolon from a custom control or adapter.</source>
          <target state="translated">Passez le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SemicolonChar&gt;</ph> champ en tant qu’argument de paramètre dans un <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> appel de méthode lorsque vous souhaitez restituer un point-virgule à partir d’un contrôle ou adaptateur personnalisé.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>The following code example demonstrates how to manually render a series of styles on a markup element.</source>
          <target state="translated">L’exemple de code suivant montre comment restituer manuellement une série de styles sur un élément de balisage.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render <ph id="ph2">`font-size`</ph> and <ph id="ph3">`border-style`</ph> style attributes.</source>
          <target state="translated">L’exemple de code utilise le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode pour restituer <ph id="ph2">`font-size`</ph> et <ph id="ph3">`border-style`</ph> des attributs de style.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SemicolonChar&gt;</ph> field is used as a parameter of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to separate the value of the <ph id="ph3">`font-size`</ph> attribute from the beginning of the <ph id="ph4">`border-style`</ph> attribute.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SemicolonChar&gt;</ph> champ est utilisé en tant que paramètre de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> (méthode) pour séparer la valeur de la <ph id="ph3">`font-size`</ph> attribut à partir du début de la <ph id="ph4">`border-style`</ph> attribut.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SemicolonChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">Cet exemple de code restitue le balisage suivant :</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SingleQuoteChar">
          <source>Represents an apostrophe (').</source>
          <target state="translated">Représente une apostrophe (').</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SingleQuoteChar">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar&gt;</ph> field when it is necessary to render an apostrophe.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SingleQuoteChar&gt;</ph> champ lorsqu’il est nécessaire restituer une apostrophe.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>Represents the slash mark (/).</source>
          <target state="translated">Représente la barre oblique (/).</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> field to render the slash marks when you write a URL.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> marque de champ pour restituer les barres obliques lorsque vous écrivez une URL.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> field when writing the closing tag of a markup element.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> utilise le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> champ lors de l’écriture de la balise de fermeture d’un élément de balisage.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>The following code example demonstrates how to manually render the <ph id="ph1">`src`</ph> attribute of an <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">L’exemple de code suivant montre comment restituer manuellement le <ph id="ph1">`src`</ph> attribut d’un <ph id="ph2">`&lt;img&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> field as its parameter to render slash marks in the path that is applied to the <ph id="ph3">`src`</ph> attribute.</source>
          <target state="translated">L’exemple de code utilise le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode avec la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SlashChar&gt;</ph> marque de champ en tant que paramètre pour afficher la barre oblique dans le chemin d’accès qui est appliqué à la <ph id="ph3">`src`</ph> attribut.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SlashChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">Cet exemple de code restitue le balisage suivant :</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>Represents a space ( ) character.</source>
          <target state="translated">Représente un espace ( ).</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> methods when writing separators between elements and attributes.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> champ est utilisé par le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> méthodes lors de l’écriture des séparateurs entre les éléments et attributs.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>This section provides two code examples.</source>
          <target state="translated">Cette section fournit deux exemples de code.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>The first one demonstrates how to create a character array.</source>
          <target state="translated">Le premier montre comment créer un tableau de caractères.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>The second one demonstrates how to use the array.</source>
          <target state="translated">Le deuxième montre comment utiliser le tableau.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>These code examples generate the following markup:</source>
          <target state="translated">Ces exemples de code génèrent le balisage suivant :</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>The following code example shows how to create a <ph id="ph1">&lt;xref:System.Char&gt;</ph> array that contains the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field.</source>
          <target state="translated">L’exemple de code suivant montre comment créer un <ph id="ph1">&lt;xref:System.Char&gt;</ph> tableau qui contient le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.SpaceChar">
          <source>The following code example shows how to use the array that was created in the preceding code example as a parameter when calling the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le tableau qui a été créé dans l’exemple de code précédent comme paramètre lors de l’appel du <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar">
          <source>Represents the style equals (<ph id="ph1">&lt;see langword=":" /&gt;</ph>) character used to set style attributes equal to values.</source>
          <target state="translated">Représente le caractère égal pour les styles (<ph id="ph1">&lt;see langword=":" /&gt;</ph>) utilisé pour définir des attributs de style égaux aux valeurs.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph> method to delimit style names and values.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar&gt;</ph> champ est utilisé par le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph> (méthode) pour délimiter les valeurs et les noms de style.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar">
          <source>The following code example demonstrates how to render a <ph id="ph1">`FontWeight`</ph> attribute and value of <ph id="ph2">`bold`</ph> to the opening tag of an element.</source>
          <target state="translated">L’exemple de code suivant montre comment restituer un <ph id="ph1">`FontWeight`</ph> attribut et la valeur de <ph id="ph2">`bold`</ph> à la balise d’ouverture d’un élément.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar&gt;</ph> field as the parameter to render the character that sets the value of each style attribute.</source>
          <target state="translated">L’exemple de code utilise le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode avec le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.StyleEqualsChar&gt;</ph> champ comme paramètre pour restituer le caractère qui définit la valeur de chaque attribut de style.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.StyleEqualsChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">Cet exemple de code restitue le balisage suivant :</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> value for the specified markup element.</source>
          <target state="translated">Obtient ou définit la valeur <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriterTag" /&gt;</ph> de l'élément de balisage spécifié.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>The markup element that is having its opening tag rendered.</source>
          <target state="translated">Élément de balisage dont la balise d'ouverture est rendue.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph> property is of use only to classes that inherit from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph> propriété est utile uniquement pour les classes qui héritent de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>You should read or set the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph> property only in a call to the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method; this is the only time it is set to a consistent value.</source>
          <target state="translated">Vous devez lire ou définir le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph> propriété uniquement dans un appel à la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> méthode ; c’est le seul moment où elle est définie sur une valeur cohérente.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>The following code example demonstrates an overridden version of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> method in a class that derives from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">L’exemple de code suivant illustre une version substituée de la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeContent%2A&gt;</ph> méthode dans une classe qui dérive de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>It uses the value of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph> property to determine whether a server control using the custom <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> object is rendering a <ph id="ph3">`&lt;label&gt;`</ph> markup element.</source>
          <target state="translated">Il utilise la valeur de la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagKey%2A&gt;</ph> propriété pour déterminer si un contrôle serveur à l’aide personnalisée <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> objet est rendu un <ph id="ph3">`&lt;label&gt;`</ph> élément de balisage.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>If it is, a <ph id="ph1">`&lt;font&gt;`</ph> element with a <ph id="ph2">`color`</ph> attribute set to <ph id="ph3">`red`</ph> is returned to modify the formatting of the <ph id="ph4">`&lt;label&gt;`</ph> element's text.</source>
          <target state="translated">S’il s’agit, un <ph id="ph1">`&lt;font&gt;`</ph> élément avec un <ph id="ph2">`color`</ph> attribut la valeur <ph id="ph3">`red`</ph> est retourné pour modifier la mise en forme de la <ph id="ph4">`&lt;label&gt;`</ph> texte de l’élément.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.TagKey">
          <source>The property value cannot be set.</source>
          <target state="translated">La valeur de la propriété ne peut pas être définie.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.TagLeftChar">
          <source>Represents the opening angle bracket (<ph id="ph1">&amp;lt;</ph>) of a markup tag.</source>
          <target state="translated">Représente le crochet d’ouverture (<ph id="ph1">&amp;lt;</ph>) d’une balise.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagLeftChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagLeftChar&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph>, and <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> methods when writing markup tags.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagLeftChar&gt;</ph> champ est utilisé par le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph>, et <ph id="ph5">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> méthodes lors de l’écriture des balises.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagLeftChar">
          <source>The following code example renders the first character of the opening tag of a <ph id="ph1">`&lt;table&gt;`</ph> element with the element name.</source>
          <target state="translated">L’exemple de code suivant restitue le premier caractère de la balise d’ouverture d’un <ph id="ph1">`&lt;table&gt;`</ph> élément portant le nom de l’élément.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagLeftChar">
          <source>The code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.TagLeftChar&gt;</ph> field as a parameter.</source>
          <target state="translated">L’exemple de code utilise le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode avec le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.TagLeftChar&gt;</ph> champ en tant que paramètre.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagLeftChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">Cet exemple de code restitue le balisage suivant :</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>Gets or sets the tag name of the markup element being rendered.</source>
          <target state="translated">Obtient ou définit le nom de balise d'un élément de balisage restitué.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>The tag name of the markup element being rendered.</source>
          <target state="translated">Nom de balise de l'élément de balisage restitué.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph> property is of use only to classes that inherit from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph> propriété est utile uniquement pour les classes qui héritent de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>You should read or set the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph> property only in <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> method calls; this is the only time it is set to a consistent value.</source>
          <target state="translated">Vous devez lire ou définir le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph> propriété uniquement en <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph> les appels de méthode ; c’est le seul moment où elle est définie sur une valeur cohérente.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>The following code example demonstrates an overridden version of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> method in a class that derives from the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> class.</source>
          <target state="translated">L’exemple de code suivant illustre une version substituée de la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> méthode dans une classe qui dérive de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>The code example checks whether the element to render is a <ph id="ph1">`&lt;label&gt;`</ph> element by calling the <ph id="ph2">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph> method, and then passing the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph> property value and a string, <ph id="ph4">`"label"`</ph>, as the parameter arguments.</source>
          <target state="translated">L’exemple de code vérifie si l’élément à restituer est un <ph id="ph1">`&lt;label&gt;`</ph> élément en appelant le <ph id="ph2">&lt;xref:System.String.Compare%2A?displayProperty=nameWithType&gt;</ph> (méthode), puis en passant le <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagName%2A&gt;</ph> valeur de propriété et une chaîne, <ph id="ph4">`"label"`</ph>, comme arguments de paramètre.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>If a <ph id="ph1">`&lt;label&gt;`</ph> element is about to be rendered, the opening tag of a <ph id="ph2">`&lt;font&gt;`</ph> element, with a <ph id="ph3">`color`</ph> attribute set to <ph id="ph4">`red`</ph>, is rendered before the <ph id="ph5">`&lt;label&gt;`</ph> element's opening tag.</source>
          <target state="translated">Si un <ph id="ph1">`&lt;label&gt;`</ph> élément est sur le point d’être rendu, la balise d’ouverture d’un <ph id="ph2">`&lt;font&gt;`</ph> élément, avec un <ph id="ph3">`color`</ph> attribut la valeur <ph id="ph4">`red`</ph>, est restituée avant la <ph id="ph5">`&lt;label&gt;`</ph> balise d’ouverture de l’élément.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.HtmlTextWriter.TagName">
          <source>If the element to render is not a <ph id="ph1">`&lt;label&gt;`</ph> element, the base class's version of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> method is called.</source>
          <target state="translated">Si l’élément à restituer n’est pas un <ph id="ph1">`&lt;label&gt;`</ph> élément, la version de la classe de base de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeforeTag%2A&gt;</ph> méthode est appelée.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="F:System.Web.UI.HtmlTextWriter.TagRightChar">
          <source>Represents the closing angle bracket (<ph id="ph1">&amp;gt;</ph>) of a markup tag.</source>
          <target state="translated">Représente le crochet fermant (<ph id="ph1">&amp;gt;</ph>) d’une balise.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagRightChar">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> field is used by the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> methods when writing markup tags.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> champ est utilisé par le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.RenderBeginTag%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph>, et <ph id="ph4">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> méthodes lors de l’écriture des balises.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagRightChar">
          <source>The following code example shows how to render the closing tag of a <ph id="ph1">`&lt;table&gt;`</ph> element by making calls to overloads of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant montre comment restituer la balise de fermeture d’un <ph id="ph1">`&lt;table&gt;`</ph> élément via des appels aux surcharges de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagRightChar">
          <source>To render the final character of the tag, the code example uses the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> field as a parameter.</source>
          <target state="translated">Pour restituer le dernier caractère de la balise, l’exemple de code utilise le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode avec le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> champ en tant que paramètre.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Web.UI.HtmlTextWriter.TagRightChar">
          <source>This code example renders the following markup:</source>
          <target state="translated">Cet exemple de code restitue le balisage suivant :</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes the specified data type to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Écrit le type de données spécifié dans le flux de sortie, ainsi que tout espacement de tabulation en attente.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> to write to the output stream.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)">
          <source>Writes the text representation of a Boolean value to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Écrit dans le flux de sortie la représentation textuelle d'une valeur Boolean, ainsi que tout espacement de tabulation en attente.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode génère des onglets qui sont en attente, puis appelle la <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> méthode de base.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char)">
          <source>The Unicode character to write to the output stream.</source>
          <target state="translated">Caractère Unicode à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char)">
          <source>Writes the text representation of a Unicode character to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Écrit dans le flux de sortie la représentation textuelle d'un caractère Unicode, ainsi que tout espacement de tabulation en attente.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode génère des onglets qui sont en attente, puis appelle la <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> méthode de base.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char)">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to end the opening tag of an <ph id="ph2">`&lt;img&gt;`</ph> element by using the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> constant.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode à la fin de la balise d’ouverture d’un <ph id="ph2">`&lt;img&gt;`</ph> élément à l’aide de la <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> constante.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char)">
          <source>This code example renders the following markup:</source>
          <target state="translated">Cet exemple de code restitue le balisage suivant :</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The array of Unicode characters to write to the output stream.</source>
          <target state="translated">Tableau de caractères Unicode à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>Writes the text representation of an array of Unicode characters to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Écrit dans le flux de sortie la représentation textuelle d'un tableau de caractères Unicode, ainsi que tout espacement de tabulation en attente.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode génère des onglets qui sont en attente, puis appelle la <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> méthode de base.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>This section provides two code examples.</source>
          <target state="translated">Cette section fournit deux exemples de code.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The first one demonstrates how to create an array of characters.</source>
          <target state="translated">Le premier montre comment créer un tableau de caractères.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The second one demonstrates how to use the array.</source>
          <target state="translated">Le deuxième montre comment utiliser le tableau.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>These code examples generate the following markup:</source>
          <target state="translated">Ces exemples de code génèrent le balisage suivant :</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The following code example demonstrates how to create an array of characters that spell out <ph id="ph1">`hello world`</ph>.</source>
          <target state="translated">L’exemple de code suivant montre comment créer un tableau de caractères correspondant à <ph id="ph1">`hello world`</ph>.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>Included in the array is the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field, which creates a space between the two words.</source>
          <target state="translated">Inclus dans le tableau est le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> champ, ce qui crée un espace entre les deux mots.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[])">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the <ph id="ph2">`hello world`</ph> character array created in the preceding code example to a page, when the control that contains this example code is included in a page.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode pour restituer le <ph id="ph2">`hello world`</ph> créé dans l’exemple de code précédent pour une page, lorsque le contrôle qui contient cet exemple de code est inclus dans une page de tableau de caractères.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Double)">
          <source>The double-precision floating-point number to write to the output stream.</source>
          <target state="translated">Nombre à virgule flottante double précision à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Double)">
          <source>Writes the text representation of a double-precision floating-point number to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Écrit dans le flux de sortie la représentation textuelle d'un nombre à virgule flottante double précision, ainsi que tout espacement de tabulation en attente.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode génère des onglets qui sont en attente, puis appelle la <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> méthode de base.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Double)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph> field.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode pour restituer la valeur de la <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Double)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Cet exemple de code génère le balisage suivant :</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)">
          <source>The 32-byte signed integer to write to the output stream.</source>
          <target state="translated">Entier signé de 32 octets à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)">
          <source>Writes the text representation of a 32-byte signed integer to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Écrit dans le flux de sortie la représentation textuelle d'un entier signé de 32 octets, ainsi que tout espacement de tabulation en attente.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode génère des onglets qui sont en attente, puis appelle la <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> méthode de base.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)">
          <source>The 64-byte signed integer to write to the output stream.</source>
          <target state="translated">Entier signé de 64 octets à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)">
          <source>Writes the text representation of a 64-byte signed integer to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Écrit dans le flux de sortie la représentation textuelle d’un entier signé de 64 octets, ainsi que tout espacement de tabulation en attente.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode génère des onglets qui sont en attente, puis appelle la <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> méthode de base.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>The object to write to the output stream.</source>
          <target state="translated">Objet à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>Writes the text representation of an object to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Écrit dans le flux de sortie la représentation textuelle d'un objet, ainsi que tout espacement de tabulation en attente.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode génère des onglets qui sont en attente, puis appelle la <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> méthode de base.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode pour restituer la valeur de la <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Cet exemple de code génère le balisage suivant :</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Object)">
          <source>The value of the <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> property:</source>
          <target state="translated">La valeur de la <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> propriété :</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Single)">
          <source>The single-precision floating-point number to write to the output stream.</source>
          <target state="translated">Nombre à virgule flottante simple précision à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Single)">
          <source>Writes the text representation of a single-precision floating-point number to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Écrit dans le flux de sortie la représentation textuelle d'un nombre à virgule flottante simple précision, ainsi que tout espacement de tabulation en attente.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode génère des onglets qui sont en attente, puis appelle la <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> méthode de base.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Single)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph> field, which is the smallest possible value of the <ph id="ph3">&lt;xref:System.Single&gt;</ph> structure.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode pour restituer la valeur de la <ph id="ph2">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph> champ, qui est la plus petite valeur possible du <ph id="ph3">&lt;xref:System.Single&gt;</ph> structure.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Single)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Cet exemple de code génère le balisage suivant :</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String)">
          <source>The string to write to the output stream.</source>
          <target state="translated">Chaîne à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String)">
          <source>Writes the specified string to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Écrit la chaîne spécifiée dans le flux de sortie, ainsi que tout espacement de tabulation en attente.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode génère des onglets qui sont en attente, puis appelle la <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> méthode de base.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render a string between the opening and closing tags of a custom markup element.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode pour restituer une chaîne entre des balises d’ouverture et fermeture d’un élément de balisage personnalisée.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Cet exemple de code génère le balisage suivant :</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)">
          <source>A string that contains zero or more format items.</source>
          <target state="translated">Chaîne qui contient zéro, un ou plusieurs éléments de mise en forme.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)">
          <source>An object to format.</source>
          <target state="translated">Objet à mettre en forme.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)">
          <source>Writes a tab string and a formatted string to the output stream, using the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph> method, along with any pending tab spacing.</source>
          <target state="translated">Écrit une chaîne de tabulation et une chaîne mise en forme dans le flux de sortie, en utilisant la même sémantique que la méthode <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object)" /&gt;</ph>, ainsi que tout espacement de tabulation en attente.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode génère des onglets qui sont en attente, puis appelle la <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> méthode de base.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render a formatted string with the value of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> property.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode pour restituer une chaîne mise en forme avec la valeur de la <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>A string that contains zero or more format items.</source>
          <target state="translated">Chaîne qui contient zéro, un ou plusieurs éléments de mise en forme.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>An object array to format.</source>
          <target state="translated">Tableau d'objets à mettre en forme.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>Writes a formatted string that contains the text representation of an object array to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Écrit une chaîne mise en forme qui contient la représentation textuelle d'un tableau d'objets dans le flux de sortie, ainsi que tout espacement de tabulation en attente.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>This method uses the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object[])" /&gt;</ph> method.</source>
          <target state="translated">Cette méthode utilise la même sémantique que la méthode <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object[])" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode génère des onglets qui sont en attente, puis appelle la <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> méthode de base.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>This section contains two code examples.</source>
          <target state="translated">Cette section contient deux exemples de code.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The first one demonstrates how to render a formatted string and the contents of an array.</source>
          <target state="translated">Le premier montre comment restituer une chaîne mise en forme et le contenu d’un tableau.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The second one demonstrates how to declare the array.</source>
          <target state="translated">Le second montre comment déclarer le tableau.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render a formatted string and the contents of an object array, named <ph id="ph2">`curPriceTime`</ph>.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode pour restituer une chaîne mise en forme et le contenu d’un tableau d’objets, nommé <ph id="ph2">`curPriceTime`</ph>.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The method call renders the second member of the array before it renders the first member.</source>
          <target state="translated">L’appel de méthode restitue le deuxième membre du tableau avant de produire le premier membre.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object[])">
          <source>The following code example demonstrates declaring the <ph id="ph1">`curPriceTime`</ph> object array.</source>
          <target state="translated">L’exemple de code suivant illustre la déclaration du <ph id="ph1">`curPriceTime`</ph> tableau d’objets.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The array of characters from which to write text to the output stream.</source>
          <target state="translated">Tableau de caractères permettant d'écrire du texte dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The index location in the array where writing begins.</source>
          <target state="translated">Emplacement dans le tableau de l'index auquel la copie commence.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters to write to the output stream.</source>
          <target state="translated">Nombre de caractères à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Writes the text representation of a subarray of Unicode characters to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Écrit dans le flux de sortie la représentation textuelle d'un sous-tableau de caractères Unicode, ainsi que tout espacement de tabulation en attente.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode génère des onglets qui sont en attente, puis appelle la <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> méthode de base.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>This section provides two code examples.</source>
          <target state="translated">Cette section fournit deux exemples de code.</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The first one demonstrates how to create a character array.</source>
          <target state="translated">Le premier montre comment créer un tableau de caractères.</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The second one demonstrates how to use the array.</source>
          <target state="translated">Le deuxième montre comment utiliser le tableau.</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>These code examples generate the following markup:</source>
          <target state="translated">Ces exemples de code génèrent le balisage suivant :</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The following code example shows how to create an array of characters that spell out <ph id="ph1">`hello world`</ph>.</source>
          <target state="translated">L’exemple de code suivant montre comment créer un tableau de caractères correspondant à <ph id="ph1">`hello world`</ph>.</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>Included in the array is the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field, which creates a space between the two words.</source>
          <target state="translated">Inclus dans le tableau est le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> champ, ce qui crée un espace entre les deux mots.</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.Char[],System.Int32,System.Int32)">
          <source>The following portion of the code example uses the <ph id="ph1">`index`</ph> and <ph id="ph2">`count`</ph> parameters of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render the first five characters of the array created in the preceding example.</source>
          <target state="translated">La partie suivante de l’exemple de code utilise le <ph id="ph1">`index`</ph> et <ph id="ph2">`count`</ph> les paramètres de la <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode pour restituer les cinq premiers caractères du tableau créé dans l’exemple précédent.</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>A string that contains zero or more format items.</source>
          <target state="translated">Chaîne qui contient zéro, un ou plusieurs éléments de mise en forme.</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>An object to format.</source>
          <target state="translated">Objet à mettre en forme.</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>An object to format.</source>
          <target state="translated">Objet à mettre en forme.</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>Writes a formatted string that contains the text representation of two objects to the output stream, along with any pending tab spacing.</source>
          <target state="translated">Écrit une chaîne mise en forme qui contient la représentation textuelle de deux objets dans le flux de sortie, ainsi que tout espacement de tabulation en attente.</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>This method uses the same semantics as the <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object)" /&gt;</ph> method.</source>
          <target state="translated">Cette méthode utilise la même sémantique que la méthode <ph id="ph1">&lt;see cref="M:System.String.Format(System.String,System.Object,System.Object)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method generates any tabs that are pending, and then calls the <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> base method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode génère des onglets qui sont en attente, puis appelle la <ph id="ph2">&lt;xref:System.IO.TextWriter.Write%2A&gt;</ph> méthode de base.</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.Write(System.String,System.Object,System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> method to render a formatted string and the values of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.DateTime.Today%2A&gt;</ph> properties.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.Write%2A&gt;</ph> méthode pour restituer une chaîne mise en forme et les valeurs de la <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.DateTime.Today%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes a markup attribute and its value to the output stream.</source>
          <target state="translated">Écrit un attribut de balisage et sa valeur dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>The attribute to write to the output stream.</source>
          <target state="translated">Attribut à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>The value assigned to the attribute.</source>
          <target state="translated">Valeur à affecter à l’attribut.</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Writes the specified markup attribute and value to the output stream.</source>
          <target state="translated">Écrit l'attribut de balisage spécifié et sa valeur dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method to write markup attributes and their values with no encoding.</source>
          <target state="translated">Utilisez la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> méthode pour écrire des attributs de balisage et leurs valeurs sans encodage.</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method writes the attribute value enclosed in double quotation marks (").</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> méthode écrit la valeur d’attribut entourée guillemets doubles («).</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method writes only the attribute name.</source>
          <target state="translated">Si <ph id="ph1">`value`</ph> est <ph id="ph2">`null`</ph>, le <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> méthode écrit uniquement le nom d’attribut.</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>The following code example demonstrates rendering an <ph id="ph1">`&lt;img&gt;`</ph> element in which both overloads of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method are called.</source>
          <target state="translated">L’exemple de code suivant illustre le rendu un <ph id="ph1">`&lt;img&gt;`</ph> élément dans lequel les deux surcharges de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> méthode sont appelées.</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>The code example uses the following process:</source>
          <target state="translated">L’exemple de code utilise le processus suivant :</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method, which renders the opening characters of the element.</source>
          <target state="translated">Appelle la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> méthode, qui restitue les caractères d’ouverture de l’élément.</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph> overload, which writes an <ph id="ph2">`alt`</ph> attribute and its value to the <ph id="ph3">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Appelle le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph> de surcharge, lequel écrit un <ph id="ph2">`alt`</ph> attribut et sa valeur à la <ph id="ph3">`&lt;img&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> overload to render a custom <ph id="ph2">`myattribute`</ph> attribute, with a value of <ph id="ph3">`No "encoding" required`</ph>, and then sets <ph id="ph4">`fEncode`</ph> to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">Appelle le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> surcharge pour effectuer le rendu personnalisé <ph id="ph2">`myattribute`</ph> attribut, avec une valeur de <ph id="ph3">`No "encoding" required`</ph>, puis définit <ph id="ph4">`fEncode`</ph> à <ph id="ph5">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>Closes the opening tag of the element, and then calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method to close the <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Ferme la balise d’ouverture de l’élément, puis appelle la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> méthode pour fermer le <ph id="ph2">`&lt;img&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Cet exemple de code génère le balisage suivant :</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>In derived classes, you can override the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /&gt;</ph> method to define custom rules for writing attributes and their values.</source>
          <target state="translated">Dans les classes dérivées, vous pouvez remplacer le <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /&gt;</ph> méthode pour définir des règles personnalisées pour écrire des attributs et leurs valeurs.</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)">
          <source>For example, you could write code that allowed the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /&gt;</ph> method to write an attribute with an empty value.</source>
          <target state="translated">Par exemple, vous pouvez écrire le code qui permet la <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String)" /&gt;</ph> méthode pour écrire un attribut avec une valeur vide.</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The markup attribute to write to the output stream.</source>
          <target state="translated">Attribut de balisage à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The value assigned to the attribute.</source>
          <target state="translated">Valeur à affecter à l’attribut.</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the attribute and its assigned value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour encoder l’attribut et sa valeur affectée ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Writes the specified markup attribute and value to the output stream, and, if specified, writes the value encoded.</source>
          <target state="translated">Écrit l’attribut de balisage et la valeur spécifiés dans le flux de sortie et, si elle est spécifiée, écrit la valeur encodée.</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method to write markup attributes and their values with or without encoding.</source>
          <target state="translated">Utilisez la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> méthode pour écrire des attributs de balisage et leurs valeurs avec ou sans encodage.</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> method to do the encoding.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> utilise le <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> méthode pour effectuer l’encodage.</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method writes the attribute value enclosed in double quotation marks (").</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> méthode écrit la valeur d’attribut entourée guillemets doubles («).</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>If <ph id="ph1">`value`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method writes only the attribute name.</source>
          <target state="translated">Si <ph id="ph1">`value`</ph> est <ph id="ph2">`null`</ph>, le <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> méthode écrit uniquement le nom d’attribut.</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The following code example demonstrates rendering an <ph id="ph1">`&lt;img&gt;`</ph> element in which both overloads of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method are called.</source>
          <target state="translated">L’exemple de code suivant illustre le rendu un <ph id="ph1">`&lt;img&gt;`</ph> élément dans lequel les deux surcharges de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> méthode sont appelées.</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>The code example uses the following process:</source>
          <target state="translated">L’exemple de code utilise le processus suivant :</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method, which renders the opening characters of the element.</source>
          <target state="translated">Appelle la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> méthode, qui restitue les caractères d’ouverture de l’élément.</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph> overload, which writes an <ph id="ph2">`alt`</ph> attribute and its value to the <ph id="ph3">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Appelle le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph> de surcharge, lequel écrit un <ph id="ph2">`alt`</ph> attribut et sa valeur à la <ph id="ph3">`&lt;img&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> overload to render a custom <ph id="ph2">`myattribute`</ph> attribute, with a value of <ph id="ph3">`No "encoding" required`</ph>, and then sets <ph id="ph4">`fEncode`</ph> to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">Appelle le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> surcharge pour effectuer le rendu personnalisé <ph id="ph2">`myattribute`</ph> attribut, avec une valeur de <ph id="ph3">`No "encoding" required`</ph>, puis définit <ph id="ph4">`fEncode`</ph> à <ph id="ph5">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>Closes the opening tag of the element, and then calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method to close the <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Ferme la balise d’ouverture de l’élément, puis appelle la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> méthode pour fermer le <ph id="ph2">`&lt;img&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Cet exemple de code génère le balisage suivant :</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>In derived classes, you can override the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /&gt;</ph> method to define custom rules for writing attributes and their values.</source>
          <target state="translated">Dans les classes dérivées, vous pouvez remplacer le <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /&gt;</ph> méthode pour définir des règles personnalisées pour écrire des attributs et leurs valeurs.</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)">
          <source>For example, you could write code that allowed the <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /&gt;</ph> method to write an attribute with an empty value.</source>
          <target state="translated">Par exemple, vous pouvez écrire le code qui permet la <ph id="ph1">&lt;see cref="M:System.Web.UI.HtmlTextWriter.WriteAttribute(System.String,System.String,System.Boolean)" /&gt;</ph> méthode pour écrire un attribut avec une valeur vide.</target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>The markup element of which to write the opening tag.</source>
          <target state="translated">Élément de balisage dont il faut écrire la balise d'ouverture.</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Writes any tab spacing and the opening tag of the specified markup element to the output stream.</source>
          <target state="translated">Écrit tout espacement de tabulation et la balise d'ouverture de l'élément de balisage spécifié dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method does not write the closing angle bracket (&gt;) of the markup element's opening tag.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> méthode n’écrit pas le crochet fermant (&gt;) de la balise d’ouverture de l’élément de balisage.</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>This allows the writing of markup attributes to the opening tag of the element.</source>
          <target state="translated">Ainsi, l’écriture des attributs de balisage à la balise d’ouverture de l’élément.</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> constant to close the opening tag when calling the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.TagRightChar&gt;</ph> constante pour fermer la balise d’ouverture lors de l’appel du <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method with the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> constant when you write markup elements that are self-closing.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> méthode avec le <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.SelfClosingTagEnd&gt;</ph> constante lorsque vous écrivez des éléments de balisage qui sont de fermeture automatique.</target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method is used by custom server controls that do not allow tag or attribute mapping and render markup elements in the same way for each request.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> méthode est utilisée par les contrôles serveur personnalisés qui ne pas autoriser le mappage de balise ou un attribut et restituer les éléments de balisage de la même façon pour chaque demande.</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>The following code example demonstrates rendering an <ph id="ph1">`&lt;img&gt;`</ph> element in which both overloads of the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method are called.</source>
          <target state="translated">L’exemple de code suivant illustre le rendu un <ph id="ph1">`&lt;img&gt;`</ph> élément dans lequel les deux surcharges de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> méthode sont appelées.</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>The code example uses the following process:</source>
          <target state="translated">L’exemple de code utilise le processus suivant :</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method, which renders the opening characters of the element.</source>
          <target state="translated">Appelle la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> méthode, qui restitue les caractères d’ouverture de l’élément.</target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph> overload, which writes an <ph id="ph2">`alt`</ph> attribute and its value to the <ph id="ph3">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Appelle le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%29&gt;</ph> de surcharge, lequel écrit un <ph id="ph2">`alt`</ph> attribut et sa valeur à la <ph id="ph3">`&lt;img&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> overload to render a custom <ph id="ph2">`myattribute`</ph> attribute, with a value of <ph id="ph3">`No "encoding" required`</ph>, and then sets <ph id="ph4">`fEncode`</ph> to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">Appelle le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%28System.String%2CSystem.String%2CSystem.Boolean%29&gt;</ph> surcharge pour effectuer le rendu personnalisé <ph id="ph2">`myattribute`</ph> attribut, avec une valeur de <ph id="ph3">`No "encoding" required`</ph>, puis définit <ph id="ph4">`fEncode`</ph> à <ph id="ph5">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>Closes the opening tag of the element, and then calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method to close the <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Ferme la balise d’ouverture de l’élément, puis appelle la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> méthode pour fermer le <ph id="ph2">`&lt;img&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBeginTag(System.String)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Cet exemple de code génère le balisage suivant :</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteBreak">
          <source>Writes a <ph id="ph1">&lt;see langword="&amp;lt;br /&amp;gt;" /&gt;</ph> markup element to the output stream.</source>
          <target state="translated">Écrit un élément de balisage <ph id="ph1">&lt;see langword="&amp;lt;br /&amp;gt;" /&gt;</ph> dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBreak">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> method to render line breaks in custom control or adapter markup.</source>
          <target state="translated">Utilisez la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> méthode pour restituer la ligne s’arrête dans le balisage de contrôle ou adaptateur personnalisé.</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBreak">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> method writes a space between the <ph id="ph2">`br`</ph> and <ph id="ph3">`/`</ph> for improved HTML compatibility.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> méthode écrit un espace entre le <ph id="ph2">`br`</ph> et <ph id="ph3">`/`</ph> pour une meilleure compatibilité HTML.</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteBreak">
          <source>The following code example shows how to call the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> method to write a <ph id="ph2">`&lt;br /&gt;`</ph> element to the requesting browser after the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> method writes the encoded <ph id="ph4">`&amp;lt;custID&amp;gt; &amp;amp; &amp;lt;invoice#&amp;gt;`</ph> markup.</source>
          <target state="translated">L’exemple de code suivant montre comment appeler le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> méthode pour écrire un <ph id="ph2">`&lt;br /&gt;`</ph> élément dans le navigateur demandeur après le <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> méthode écrit le texte codé <ph id="ph4">`&amp;lt;custID&amp;gt; &amp;amp; &amp;lt;invoice#&amp;gt;`</ph> balisage.</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>The text string to encode and write to the output stream.</source>
          <target state="translated">Chaîne de texte à encoder et à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>Encodes the specified text for the requesting device, and then writes it to the output stream.</source>
          <target state="translated">Encode le texte spécifié pour l’appareil demandeur, puis l’écrit dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> method when a string contains angle brackets (<ph id="ph2">\&lt;</ph> or &gt;) or an ampersand (&amp;).</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> méthode lorsqu’une chaîne contient des crochets pointus (<ph id="ph2">\&lt;</ph> ou &gt;) ou une esperluette (&amp;).</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> method uses the <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> method to perform the encoding and also converts Unicode character <ph id="ph3">`00A0`</ph> to <ph id="ph4">`&amp;nbsp;`</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> utilise le <ph id="ph2">&lt;xref:System.Web.HttpUtility.HtmlEncode%2A&gt;</ph> méthode pour effectuer l’encodage et convertit également le caractère Unicode <ph id="ph3">`00A0`</ph> à <ph id="ph4">`&amp;nbsp;`</ph>.</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> method to write the encoded markup <ph id="ph2">`&amp;lt;custID&amp;gt; &amp;amp; &amp;lt;invoice#&amp;gt;`</ph> to the output stream.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedText%2A&gt;</ph> méthode pour écrire le balisage codé <ph id="ph2">`&amp;lt;custID&amp;gt; &amp;amp; &amp;lt;invoice#&amp;gt;`</ph> au flux de sortie.</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> method writes <ph id="ph2">`&lt;br /&gt;`</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBreak%2A&gt;</ph> méthode écritures <ph id="ph2">`&lt;br /&gt;`</ph>.</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedText(System.String)">
          <source><ph id="ph1">&lt;paramref name="text" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="text" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>The URL string to encode and write to the output stream.</source>
          <target state="translated">Chaîne d’URL à encoder et à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>Encodes the specified URL, and then writes it to the output stream.</source>
          <target state="translated">Encode l’URL spécifiée, puis l’écrit dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>The URL might include parameters.</source>
          <target state="translated">L’URL peut inclure des paramètres.</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph> method encodes the string in the <ph id="ph2">`url`</ph> parameter in accordance with the specification for URL encoding.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph> méthode encode la chaîne dans le <ph id="ph2">`url`</ph> paramètre conformément à la spécification pour l’encodage URL.</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>The parameters that follow the question mark (?) delimiter are not encoded.</source>
          <target state="translated">Les paramètres qui suivent le séparateur point d’interrogation ( ?) ne sont pas encodés.</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrl(System.String)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph> method, which generates the following output:</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph> (méthode), qui génère la sortie suivante :</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)">
          <source>The URL parameter string to encode and write to the output stream.</source>
          <target state="translated">Chaîne du paramètre URL à encoder et à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)">
          <source>Encodes the specified URL parameter for the requesting device, and then writes it to the output stream.</source>
          <target state="translated">Encode le paramètre URL spécifié pour l'appareil demandeur, puis l'écrit dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)">
          <source>Spaces in the parameter part of a URL are encoded as plus signs (+), and equal signs (=) are encoded as <ph id="ph1">`%3d`</ph>.</source>
          <target state="translated">Espaces dans la partie paramètre d’une URL sont encodés comme des signes plus (+) et les signes égal (=) sont encodés sous <ph id="ph1">`%3d`</ph>.</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter(System.String)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A&gt;</ph> method, which generates the following output:</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A&gt;</ph> (méthode), qui génère la sortie suivante :</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>The element to write the closing tag for.</source>
          <target state="translated">Élément pour lequel écrire la balise de fermeture.</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>Writes any tab spacing and the closing tag of the specified markup element.</source>
          <target state="translated">Écrit tout espacement de tabulation et la balise de fermeture de l'élément de balisage spécifié.</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>Unlike the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method has no logic to make the element end tag match the corresponding opening tag.</source>
          <target state="translated">Contrairement à la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.RenderEndTag%2A&gt;</ph> (méthode), la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> méthode n’a aucune logique de faire correspondre la balise d’ouverture de la balise de fin.</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>The following code example demonstrates rendering an <ph id="ph1">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">L’exemple de code suivant illustre le rendu un <ph id="ph1">`&lt;img&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>The code example uses the following process:</source>
          <target state="translated">L’exemple de code utilise le processus suivant :</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method to render the opening characters of the element.</source>
          <target state="translated">Appelle la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> méthode pour restituer les caractères d’ouverture de l’élément.</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>Calls the two overloads of the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> method to write attributes to the <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Appelle les deux surcharges de la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteAttribute%2A&gt;</ph> méthode pour écrire des attributs à la <ph id="ph2">`&lt;img&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteEndTag(System.String)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> method to close the <ph id="ph2">`&lt;img&gt;`</ph> element.</source>
          <target state="translated">Appelle le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEndTag%2A&gt;</ph> méthode pour fermer le <ph id="ph2">`&lt;img&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)">
          <source>The element to write to the output stream.</source>
          <target state="translated">Élément à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)">
          <source>Writes any tab spacing and the opening tag of the specified markup element to the output stream.</source>
          <target state="translated">Écrit tout espacement de tabulation et la balise d'ouverture de l'élément de balisage spécifié dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph> method automatically writes the closing angle bracket (&gt;) of the opening tag of the element, unlike the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> method, which does not write the closing angle bracket.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph> méthode écrit automatiquement le crochet fermant (&gt;) de la balise d’ouverture de l’élément, contrairement à la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteBeginTag%2A&gt;</ph> (méthode), qui n’écrit pas le crochet fermant.</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteFullBeginTag(System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph> for markup elements that have no attributes.</source>
          <target state="translated">Utilisez <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteFullBeginTag%2A&gt;</ph> pour les éléments de balisage sans attributs.</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes data to an <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph> output stream, as specified by the overloaded parameters, followed by a line terminator string.</source>
          <target state="translated">Écrit des données dans un flux de sortie <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlTextWriter" /&gt;</ph>, de la manière spécifiée par les paramètres surchargés, suivies d'une chaîne de terminaison de ligne.</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>All versions of this method write any pending tab spacing to the output stream.</source>
          <target state="translated">Toutes les versions de cette méthode écrivent les espacements de tabulation en attente dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.HtmlTextWriter">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> méthode de base est utilisé pour écrire la <ph id="ph2">`value`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine">
          <source>Writes a line terminator string to the output stream.</source>
          <target state="translated">Écrit une chaîne de terminaison de ligne dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine">
          <source>For more information, see <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>.</source>
          <target state="translated">Pour plus d'informations, consultez <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to insert a line after an <ph id="ph2">`&lt;img&gt;`</ph> element is rendered.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> méthode pour insérer une ligne après un <ph id="ph2">`&lt;img&gt;`</ph> élément est rendu.</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)">
          <source>The Boolean to write to the output stream.</source>
          <target state="translated">Boolean à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)">
          <source>Writes any pending tab spacing and the text representation of a Boolean value, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Écrit dans le flux de sortie les espacements de tabulation en attente et la représentation textuelle d'une valeur Boolean, suivis d'une chaîne de terminaison de ligne.</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> méthode de base est utilisé pour écrire la <ph id="ph2">`value`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)">
          <source>The character to write to the output stream.</source>
          <target state="translated">Caractère à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)">
          <source>Writes any pending tab spacing and a Unicode character, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Écrit dans le flux de sortie les espacements de tabulation en attente et un caractère Unicode, suivis d'une chaîne de terminaison de ligne.</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> méthode de base est utilisé pour écrire la <ph id="ph2">`value`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The character array to write to the output stream.</source>
          <target state="translated">Tableau de caractères à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>Writes any pending tab spacing and an array of Unicode characters, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Écrit dans le flux de sortie les espacements de tabulation en attente et un tableau de caractères Unicode, suivis d'une chaîne de terminaison de ligne.</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> méthode de base est utilisé pour écrire la <ph id="ph2">`value`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>This section provides two code examples.</source>
          <target state="translated">Cette section fournit deux exemples de code.</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The first one demonstrates how to create an array.</source>
          <target state="translated">Le premier montre comment créer un tableau.</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The second one demonstrates how to use that array.</source>
          <target state="translated">Le deuxième montre comment utiliser le tableau.</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>These code examples generate the following markup:</source>
          <target state="translated">Ces exemples de code génèrent le balisage suivant :</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The following code example shows how to create an array of characters that spell out <ph id="ph1">`hello world`</ph>.</source>
          <target state="translated">L’exemple de code suivant montre comment créer un tableau de caractères correspondant à <ph id="ph1">`hello world`</ph>.</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>Included in the array is the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field, which creates a space between the two words.</source>
          <target state="translated">Inclus dans le tableau est le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> champ, ce qui crée un espace entre les deux mots.</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[])">
          <source>The following code example renders the <ph id="ph1">`hello world`</ph> character array that was created in the preceding example by using the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method.</source>
          <target state="translated">Le code suivant exemple rend le <ph id="ph1">`hello world`</ph> tableau de caractères qui a été créé dans l’exemple précédent à l’aide de la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>The double-precision floating-point number to write to the output stream.</source>
          <target state="translated">Nombre à virgule flottante double précision à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>Writes any pending tab spacing and the text representation of a double-precision floating-point number, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Écrit dans le flux de sortie les espacements de tabulation en attente et la représentation textuelle d'un nombre à virgule flottante double précision, suivis d'une chaîne de terminaison de ligne.</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> méthode de base est utilisé pour écrire la <ph id="ph2">`value`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph> field.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> méthode pour restituer la valeur de la <ph id="ph2">&lt;xref:System.Double.MaxValue?displayProperty=nameWithType&gt;</ph> champ.</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Double)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Cet exemple de code génère le balisage suivant :</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)">
          <source>The 32-byte signed integer to write to the output stream.</source>
          <target state="translated">Entier signé de 32 octets à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)">
          <source>Writes any pending tab spacing and the text representation of a 32-byte signed integer, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Écrit dans le flux de sortie les espacements de tabulation en attente et la représentation textuelle d'un entier signé de 32 octets, suivis d'une chaîne de terminaison de ligne.</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> méthode de base est utilisé pour écrire la <ph id="ph2">`value`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)">
          <source>The 64-byte signed integer to write to the output stream.</source>
          <target state="translated">Entier signé de 64 octets à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)">
          <source>Writes any pending tab spacing and the text representation of a 64-byte signed integer, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Écrit dans le flux de sortie les espacements de tabulation en attente et la représentation textuelle d’un entier signé de 64 octets, suivis d’une chaîne de terminaison de ligne.</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> méthode de base est utilisé pour écrire la <ph id="ph2">`value`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)">
          <source>The object to write to the output stream.</source>
          <target state="translated">Objet à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)">
          <source>Writes any pending tab spacing and the text representation of an object, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Écrit dans le flux de sortie les espacements de tabulation en attente et la représentation textuelle d'un objet, suivis d'une chaîne de terminaison de ligne.</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> méthode de base est utilisé pour écrire la <ph id="ph2">`value`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph> property to a control.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> méthode pour restituer la valeur de la <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType&gt;</ph> propriété à un contrôle.</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>The single-precision floating point number to write to the output stream.</source>
          <target state="translated">Nombre à virgule flottante simple précision à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>Writes any pending tab spacing and the text representation of a single-precision floating-point number, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Écrit dans le flux de sortie les espacements de tabulation en attente et la représentation textuelle d'un nombre à virgule flottante simple précision, suivis d'une chaîne de terminaison de ligne.</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> méthode de base est utilisé pour écrire la <ph id="ph2">`value`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render the value of the <ph id="ph2">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph> field, which is the smallest possible value of the <ph id="ph3">&lt;xref:System.Single&gt;</ph> structure.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> méthode pour restituer la valeur de la <ph id="ph2">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph> champ, qui est la plus petite valeur possible du <ph id="ph3">&lt;xref:System.Single&gt;</ph> structure.</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Single)">
          <source>This code example generates the following markup:</source>
          <target state="translated">Cet exemple de code génère le balisage suivant :</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)">
          <source>The string to write to the output stream.</source>
          <target state="translated">Chaîne à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)">
          <source>Writes any pending tab spacing and a text string, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Écrit dans le flux de sortie les espacements de tabulation en attente et une chaîne de texte, suivis d'une chaîne de terminaison de ligne.</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> méthode de base est utilisé pour écrire la <ph id="ph2">`value`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)">
          <source>The 4-byte unsigned integer to write to the output stream.</source>
          <target state="translated">Entier non signé de 4 octets à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)">
          <source>Writes any pending tab spacing and the text representation of a 4-byte unsigned integer, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Écrit dans le flux de sortie les espacements de tabulation en attente et la représentation textuelle d'un entier non signé de 4 octets, suivis d'une chaîne de terminaison de ligne.</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.UInt32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> méthode de base est utilisé pour écrire la <ph id="ph2">`value`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>A string containing zero or more format items.</source>
          <target state="translated">Chaîne contenant zéro, un ou plusieurs éléments de mise en forme.</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>An object to format.</source>
          <target state="translated">Objet à mettre en forme.</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>Writes any pending tab spacing and a formatted string containing the text representation of an object, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Écrit dans le flux de sortie les espacements de tabulation en attente et une chaîne mise en forme contenant la représentation textuelle d'un objet, suivis d'une chaîne de terminaison de ligne.</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method uses the same semantics as the <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> méthode utilise la même sémantique que la <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%29&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> méthode de base est utilisé pour écrire la <ph id="ph2">`value`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object)">
          <source>The following code example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render a formatted string with the value of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> property.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> méthode pour restituer une chaîne mise en forme avec la valeur de la <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>A string containing zero or more format items.</source>
          <target state="translated">Chaîne contenant zéro, un ou plusieurs éléments de mise en forme.</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>An object array to format.</source>
          <target state="translated">Tableau d'objets à mettre en forme.</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>Writes any pending tab spacing and a formatted string that contains the text representation of an object array, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Écrit dans le flux de sortie les espacements de tabulation en attente et une chaîne mise en forme contenant la représentation textuelle d'un tableau d'objets, suivis d'une chaîne de terminaison de ligne.</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method uses the same semantics as the <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> méthode utilise la même sémantique que la <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> méthode de base est utilisé pour écrire le <ph id="ph2">`value`</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>This section contains two code examples.</source>
          <target state="translated">Cette section contient deux exemples de code.</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The first one demonstrates how to render a string and an array to the output stream.</source>
          <target state="translated">Le premier montre comment restituer une chaîne et un tableau dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The second one shows how to declare the array.</source>
          <target state="translated">Le second montre comment déclarer le tableau.</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render a formatted string and the contents of an object array to the output stream.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> méthode pour restituer une chaîne mise en forme et le contenu d’un tableau d’objets dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object[])">
          <source>The following code example shows how to declare the object array that was rendered in the preceding code example.</source>
          <target state="translated">L’exemple de code suivant montre comment déclarer le tableau d’objets qui a été restitué dans l’exemple de code précédent.</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The character array from which to write text to the output stream.</source>
          <target state="translated">Tableau de caractères à partir duquel le texte est écrit dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The location in the character array where writing begins.</source>
          <target state="translated">Emplacement dans le tableau de caractères où l'écriture commence.</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The number of characters in the array to write to the output stream.</source>
          <target state="translated">Nombre de caractères du tableau à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>Writes any pending tab spacing and a subarray of Unicode characters, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Écrit dans le flux de sortie les espacements de tabulation en attente et un sous-tableau de caractères Unicode, suivis d'une chaîne de terminaison de ligne.</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> méthode de base est utilisé pour écrire la <ph id="ph2">`value`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>This section contains two code examples.</source>
          <target state="translated">Cette section contient deux exemples de code.</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The first one demonstrates how to create a character array.</source>
          <target state="translated">Le premier montre comment créer un tableau de caractères.</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The second one demonstrates how to use the array.</source>
          <target state="translated">Le deuxième montre comment utiliser le tableau.</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>These code examples generate the following markup:</source>
          <target state="translated">Ces exemples de code génèrent le balisage suivant :</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The following code example demonstrates how to create an array of characters that spell out <ph id="ph1">`hello world`</ph>.</source>
          <target state="translated">L’exemple de code suivant montre comment créer un tableau de caractères correspondant à <ph id="ph1">`hello world`</ph>.</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>Included in the array is the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> field, which creates a space between the two words.</source>
          <target state="translated">Inclus dans le tableau est le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.SpaceChar&gt;</ph> champ, ce qui crée un espace entre les deux mots.</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.Char[],System.Int32,System.Int32)">
          <source>The following code example uses the <ph id="ph1">`index`</ph> and <ph id="ph2">`count`</ph> parameters of the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render the first five characters of the array created in the preceding code example.</source>
          <target state="translated">Le de code suivant montre comment utiliser le <ph id="ph1">`index`</ph> et <ph id="ph2">`count`</ph> les paramètres de la <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> méthode pour restituer les cinq premiers caractères du tableau créé dans l’exemple de code précédent.</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>A string containing zero or more format items.</source>
          <target state="translated">Chaîne contenant zéro, un ou plusieurs éléments de mise en forme.</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>An object to format.</source>
          <target state="translated">Objet à mettre en forme.</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>An object to format.</source>
          <target state="translated">Objet à mettre en forme.</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>Writes any pending tab spacing and a formatted string that contains the text representation of two objects, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Écrit dans le flux de sortie les espacements de tabulation en attente et une chaîne mise en forme contenant la représentation textuelle de deux objets, suivis d'une chaîne de terminaison de ligne.</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method uses the same semantics as the <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29&gt;</ph> method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> méthode utilise la même sémantique que la <ph id="ph2">&lt;xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> méthode de base est utilisé pour écrire la <ph id="ph2">`value`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLine(System.String,System.Object,System.Object)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method to render a formatted string and the values of the <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> property and the <ph id="ph3">&lt;xref:System.DateTime.Today%2A&gt;</ph> property.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> méthode pour restituer une chaîne mise en forme et les valeurs de la <ph id="ph2">&lt;xref:System.Globalization.CultureInfo.CurrentCulture%2A&gt;</ph> propriété et le <ph id="ph3">&lt;xref:System.DateTime.Today%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>The string to write to the output stream.</source>
          <target state="translated">Chaîne à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>Writes a string, followed by a line terminator string, to the output stream.</source>
          <target state="translated">Écrit dans le flux de sortie une chaîne suivie d'une chaîne de terminaison de ligne.</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>This method ignores any specified tab spacing.</source>
          <target state="translated">Cette méthode ignore tout espacement de tabulation spécifié.</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A&gt;</ph> method rather than the <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> method when you do not want to render any tab spacing ahead of the rendered string <ph id="ph3">`s`</ph>.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLineNoTabs%2A&gt;</ph> méthode plutôt que la <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteLine%2A&gt;</ph> méthode lorsque vous ne souhaitez pas restituer les espacements de tabulation avant la chaîne rendue <ph id="ph3">`s`</ph>.</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>The default line terminator string is a carriage return followed by a line feed ("\r\n").</source>
          <target state="translated">La chaîne de marque de fin de ligne par défaut est un retour chariot suivi d’une saut de ligne (« \r\n »).</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteLineNoTabs(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> base method is used to write the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.IO.TextWriter.WriteLine%2A&gt;</ph> méthode de base est utilisé pour écrire la <ph id="ph2">`value`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" uid="T:System.Web.UI.HtmlTextWriter">
          <source>Writes a style attribute and its value to the output stream.</source>
          <target state="translated">Écrit un attribut de style et sa valeur dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)">
          <source>The style attribute to write to the output stream.</source>
          <target state="translated">Attribut de style à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)">
          <source>The value assigned to the style attribute.</source>
          <target state="translated">Valeur assignée à l'attribut de style.</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)">
          <source>Writes the specified style attribute to the output stream.</source>
          <target state="translated">Écrit l'attribut de style spécifié dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph> method writes the style attribute in the following form:</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph> méthode écrit l’attribut de style sous la forme suivante :</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String)">
          <source><ph id="ph1">`name`</ph> <ph id="ph2">`=`</ph> <ph id="ph3">`value`</ph> <ph id="ph4">`;`</ph></source>
          <target state="translated"><ph id="ph1">`name`</ph> <ph id="ph2">`=`</ph> <ph id="ph3">`value`</ph> <ph id="ph4">`;`</ph></target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source>The style attribute to write to the output stream.</source>
          <target state="translated">Attribut de style à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source>The value assigned to the style attribute.</source>
          <target state="translated">Valeur assignée à l'attribut de style.</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the style attribute and its assigned value; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour encoder l'attribut de style et sa valeur assignée ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source>Writes the specified style attribute and value to the output stream, and encodes the value, if specified.</source>
          <target state="translated">Écrit l'attribut de style spécifié et sa valeur dans le flux de sortie et encode la valeur, si spécifiée.</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph> method writes the style attribute in the following form:</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteStyleAttribute%2A&gt;</ph> méthode écrit l’attribut de style sous la forme suivante :</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source><ph id="ph1">`name`</ph> <ph id="ph2">`=`</ph> <ph id="ph3">`value`</ph> <ph id="ph4">`;`</ph></source>
          <target state="translated"><ph id="ph1">`name`</ph> <ph id="ph2">`=`</ph> <ph id="ph3">`value`</ph> <ph id="ph4">`;`</ph></target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteStyleAttribute(System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> method is used to encode the <ph id="ph2">`value`</ph> parameter.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.HttpUtility.HtmlAttributeEncode%2A&gt;</ph> méthode est utilisée pour encoder le <ph id="ph2">`value`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)">
          <source>The string to encode and write to the output stream.</source>
          <target state="translated">Chaîne à encoder et à écrire dans le flux de sortie.</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to encode the string as a part of the parameter section of the URL; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to encode the string as part of the path section of the URL.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour encoder la chaîne comme une partie de la section des paramètres de l'URL ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour encoder la chaîne comme une partie de la section du chemin d'accès de l'URL.</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)">
          <source>Writes the specified string, encoding it according to URL requirements.</source>
          <target state="translated">Écrit la chaîne spécifiée, en l'encodant conformément aux exigences des URL.</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A&gt;</ph> method encodes characters that could be considered URL delimiters (dependent on the setting of <ph id="ph2">`argument`</ph>) into strings of the form <ph id="ph3">`%xx`</ph>, if the ASCII code is less than 128; otherwise, <ph id="ph4">`%uxxxx`</ph>, where <ph id="ph5">`x`</ph> is a hexadecimal digit.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A&gt;</ph> méthode encode les caractères qui pourraient être considérées comme des séparateurs d’URL (selon la définition de <ph id="ph2">`argument`</ph>) dans des chaînes de la forme <ph id="ph3">`%xx`</ph>, si le code ASCII est inférieur à 128 ; sinon, <ph id="ph4">`%uxxxx`</ph>, où <ph id="ph5">`x`</ph> est un chiffre hexadécimal.</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString(System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A&gt;</ph> methods use the <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A&gt;</ph> method as a utility method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrl%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Web.UI.HtmlTextWriter.WriteEncodedUrlParameter%2A&gt;</ph> méthodes utilisent le <ph id="ph3">&lt;xref:System.Web.UI.HtmlTextWriter.WriteUrlEncodedString%2A&gt;</ph> méthode comme une méthode utilitaire.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>