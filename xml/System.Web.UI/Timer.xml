<Type Name="Timer" FullName="System.Web.UI.Timer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6cb6627584d7906e3859f973ccd13e062bff5729" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36375853" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Timer : System.Web.UI.Control, System.Web.UI.IPostBackEventHandler, System.Web.UI.IScriptControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Timer extends System.Web.UI.Control implements class System.Web.UI.IPostBackEventHandler, class System.Web.UI.IScriptControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Timer" />
  <TypeSignature Language="VB.NET" Value="Public Class Timer&#xA;Inherits Control&#xA;Implements IPostBackEventHandler, IScriptControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Timer : System::Web::UI::Control, System::Web::UI::IPostBackEventHandler, System::Web::UI::IScriptControl" />
  <TypeSignature Language="F#" Value="type Timer = class&#xA;    inherit Control&#xA;    interface IPostBackEventHandler&#xA;    interface IScriptControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IScriptControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Tick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Interval")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.TimerDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), "System.Web.Resources.Timer.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Exécute des publications de pages web asynchrones ou synchrones à intervalles définis.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans cette rubrique :  
  
-   [Introduction](#introduction)  
  
-   [Syntaxe déclarative](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introduction  
 Le <xref:System.Web.UI.Timer> contrôle vous permet d’effectuer des publications (postback) à un intervalle spécifié. Lorsque vous utilisez la <xref:System.Web.UI.Timer> contrôle comme déclencheur pour une <xref:System.Web.UI.UpdatePanel> (contrôle), le <xref:System.Web.UI.UpdatePanel> contrôle est mis à jour à l’aide d’une mise à jour asynchrone, de page partiel. Vous devez inclure un <xref:System.Web.UI.ScriptManager> objet dans une page Web à utiliser le <xref:System.Web.UI.Timer> contrôle.  
  
 Vous utilisez la <xref:System.Web.UI.Timer> contrôle pour mettre à jour un <xref:System.Web.UI.UpdatePanel> contrôle en incluant la minuterie à l’intérieur de la <xref:System.Web.UI.UpdatePanel> contrôle. Ou bien, vous pouvez placer la minuterie en dehors de la <xref:System.Web.UI.UpdatePanel> de contrôle et définir le minuteur en tant que déclencheur.  
  
 Vous pouvez également initier une publication complète d’une page Web complète en incluant le <xref:System.Web.UI.Timer> contrôler dans la page Web et ne définissez ne pas comme un déclencheur pour une <xref:System.Web.UI.UpdatePanel> contrôle.  
  
 Vous pouvez exécuter le code serveur lorsque l’intervalle de minuterie est écoulé en créant un gestionnaire d’événements pour le <xref:System.Web.UI.Timer.Tick> événement. Dans l’événement gestionnaire, vous pouvez inclure du code qui ajuste dynamiquement le comportement de la <xref:System.Web.UI.Timer> contrôle.  
  
 Définir le <xref:System.Web.UI.Timer.Interval%2A> propriété pour spécifier la fréquence à laquelle des publications se produisent. Définir le <xref:System.Web.UI.Timer.Enabled%2A> propriété pour désactiver le <xref:System.Web.UI.Timer> ou désactiver.  
  
> [!NOTE]
>  La précision de situations dans lesquelles le <xref:System.Web.UI.Timer> contrôle les publications sur le serveur Web dépend de la précision de la ECMAScript (JavaScript) `window.setTimeout` fonction qui est en cours d’exécution dans le navigateur.  
  
 Le <xref:System.Web.UI.Timer.Interval%2A> propriété est définie en millisecondes. Vous devez définir le <xref:System.Web.UI.Timer.Interval%2A> à une valeur qui permet la publication (postback) asynchrone au moins une propriété termine avant l’initialisation de la prochaine publication. Lorsque le <xref:System.Web.UI.Timer> contrôle se trouve en dehors un <xref:System.Web.UI.UpdatePanel> (contrôle), la minuterie continue à fonctionner pendant que le contenu de la <xref:System.Web.UI.UpdatePanel> contrôle est actualisé. Si une nouvelle publication est initialisée pendant qu’une publication est en cours de traitement, la première publication sera annulée. La valeur par défaut est 60 000 millisecondes (60 secondes).  
  
> [!NOTE]
>  Ajout d’un <xref:System.Web.UI.Timer> contrôle avec une petite valeur dans la <xref:System.Web.UI.Timer.Interval%2A> propriété peut générer un trafic important vers et depuis le serveur Web. Utilisez la <xref:System.Web.UI.Timer> contrôle pour actualiser le contenu aussi souvent que nécessaire.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Syntaxe déclarative  
  
```  
<asp:Timer  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    Interval="integer"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnTick="Tick event handler"  
    OnUnload="Unload handler"  
    runat="server"  
    SkinID="string"  
    Visible="True|False"  
/>  
```  
  
   
  
## Examples  
 L’exemple suivant montre un <xref:System.Web.UI.UpdatePanel> contrôle qui affiche une cotation générée de manière aléatoire et le moment où celle-ci a été générée. Le <xref:System.Web.UI.Timer> contrôle met à jour le contenu de la <xref:System.Web.UI.UpdatePanel> contrôler toutes les 10 secondes.  
  
> [!NOTE]
>  Dans cet exemple, l’intervalle de minuterie est défini sur 10 secondes afin que lorsque vous exécutez l’exemple, vous n’avez pas à attendre longtemps pour voir les résultats. Étant donné que chaque intervalle de minuterie provoque une publication qui entraîne le trafic réseau, dans une application de production, vous devez définir l’intervalle à l’heure la plus longue possible pour votre application.  
  
 [!code-aspx-csharp[System.Web.UI.Controls.Timer#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.Controls.Timer/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Controls.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.Controls.Timer/vb/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Timer ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Timer();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.Timer" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Timer.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.UI.Timer.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si le contrôle <see cref="T:System.Web.UI.Timer" /> initie une publication dans le serveur après que le nombre de millisecondes spécifié dans la propriété <see cref="P:System.Web.UI.Timer.Interval" /> s'est écoulé.</summary>
        <value>
          <see langword="true" /> si <see cref="T:System.Web.UI.Timer" /> initialise une publication ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.Timer.Enabled%2A> propriété pour désactiver la <xref:System.Web.UI.Timer> contrôle et désactiver. Lorsque vous définissez <xref:System.Web.UI.Timer.Enabled%2A> à `true`, le <xref:System.Web.UI.Timer> contrôle commence son compte à rebours de minuterie lorsque la page Web est rendue.  
  
 Lors de la publication, vous pouvez modifier les valeurs de propriété dans le <xref:System.Web.UI.Timer.Enabled%2A> propriété, ainsi que les modifications apparaîtront lorsque le contenu de la page Web est rendu dans le navigateur. Si vous modifiez le <xref:System.Web.UI.Timer.Enabled%2A> propriété et puis redéfinissez-le sur sa valeur d’origine au cours de la même publication, le <xref:System.Web.UI.Timer> contrôler s’exécute comme si aucune modification n’a été apportée.  
  
   
  
## Examples  
 L’exemple suivant montre un <xref:System.Web.UI.UpdatePanel> contrôle qui affiche une cotation générée de manière aléatoire et le moment où celle-ci a été générée. Par défaut, le <xref:System.Web.UI.Timer> contrôle met à jour le contenu de la <xref:System.Web.UI.UpdatePanel> contrôler toutes les 10 secondes. L’utilisateur peut décider de mettre à jour le cours de toutes les 10 secondes, toutes les 60 secondes, ou pas du tout. Lorsque l’utilisateur décide de ne pas mettre à jour le prix de stock, le <xref:System.Web.UI.Timer.Enabled%2A> est définie sur `false`.  
  
 [!code-aspx-csharp[System.Web.UI.Controls.Timer.Interval#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.Controls.Timer.Interval/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Controls.Timer.Interval#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.Controls.Timer.Interval/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScriptDescriptors">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt; GetScriptDescriptors ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptDescriptor&gt; GetScriptDescriptors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.GetScriptDescriptors" />
      <MemberSignature Language="VB.NET" Value="Protected Iterator Overridable Function GetScriptDescriptors () As IEnumerable(Of ScriptDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptDescriptor ^&gt; ^ GetScriptDescriptors();" />
      <MemberSignature Language="F#" Value="abstract member GetScriptDescriptors : unit -&gt; seq&lt;System.Web.UI.ScriptDescriptor&gt;&#xA;override this.GetScriptDescriptors : unit -&gt; seq&lt;System.Web.UI.ScriptDescriptor&gt;" Usage="timer.GetScriptDescriptors " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptControl.GetScriptDescriptors</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Web.UI.Timer/&lt;GetScriptDescriptors&gt;d__22))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère les propriétés d'un objet <see cref="T:System.Web.UI.Timer" /> qui sont passées au composant client qui implémente la minuterie logique dans le navigateur.</summary>
        <returns>Tableau de type <see cref="T:System.Web.UI.ScriptDescriptor" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Timer.GetScriptDescriptors%2A> méthode ajoute la <xref:System.Web.UI.Timer.Interval%2A> et <xref:System.Web.UI.Timer.Enabled%2A> propriétés d’une instance de la <xref:System.Web.UI.Timer> classe un <xref:System.Web.UI.ScriptDescriptor> objet. Le composant client accède aux valeurs et définit les valeurs correspondantes dans le script.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetScriptReferences">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt; GetScriptReferences ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptReference&gt; GetScriptReferences() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.GetScriptReferences" />
      <MemberSignature Language="VB.NET" Value="Protected Iterator Overridable Function GetScriptReferences () As IEnumerable(Of ScriptReference)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptReference ^&gt; ^ GetScriptReferences();" />
      <MemberSignature Language="F#" Value="abstract member GetScriptReferences : unit -&gt; seq&lt;System.Web.UI.ScriptReference&gt;&#xA;override this.GetScriptReferences : unit -&gt; seq&lt;System.Web.UI.ScriptReference&gt;" Usage="timer.GetScriptReferences " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptControl.GetScriptReferences</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Web.UI.Timer/&lt;GetScriptReferences&gt;d__23))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère le script client pour le contrôle <see cref="T:System.Web.UI.Timer" />.</summary>
        <returns>Objet <see cref="T:System.Web.UI.ScriptReference" /> qui contient le script client pour le contrôle  <see cref="T:System.Web.UI.Timer" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Interval">
      <MemberSignature Language="C#" Value="public int Interval { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Interval" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Timer.Interval" />
      <MemberSignature Language="VB.NET" Value="Public Property Interval As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Interval { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Interval : int with get, set" Usage="System.Web.UI.Timer.Interval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(60000)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nombre de millisecondes avant d'initier une publication.</summary>
        <value>Le nombre de millisecondes d'attente avant d'initialiser une publication. La valeur par défaut est 60,000 (60 secondes).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.Timer.Interval%2A> propriété pour définir la fréquence à laquelle le <xref:System.Web.UI.Timer> contrôle déclenche une publication sur le serveur. Vous pouvez modifier la valeur de la <xref:System.Web.UI.Timer.Interval%2A> propriété dans le code de serveur après une publication, par exemple dans un gestionnaire d’événements pour le <xref:System.Web.UI.Timer.Tick> événement. La précision de situations dans lesquelles le <xref:System.Web.UI.Timer> contrôle les publications sur le serveur Web dépend de la précision de la ECMAScript (JavaScript) `window.setTimeout` fonction qui s’exécute dans le navigateur.  
  
> [!NOTE]
>  Définition de la <xref:System.Web.UI.Timer.Interval%2A> propriété d’une valeur faible peut générer un trafic important vers et depuis le serveur Web. Utilisez la <xref:System.Web.UI.Timer> contrôle pour actualiser le contenu aussi souvent que nécessaire.  
  
 Lorsque vous modifiez la valeur de la <xref:System.Web.UI.Timer.Interval%2A> propriété, le code de synchronisation en cours d’exécution dans le navigateur est réinitialisé lorsque les mises à jour sont rendus de ECMAScript.  
  
   
  
## Examples  
 L’exemple suivant montre un <xref:System.Web.UI.UpdatePanel> contrôle qui affiche une cotation générée de manière aléatoire et le moment où celle-ci a été générée. Par défaut, le <xref:System.Web.UI.Timer> contrôle met à jour le contenu de la <xref:System.Web.UI.UpdatePanel> contrôler toutes les 10 secondes. L’utilisateur peut décider de mettre à jour le cours de toutes les 10 secondes, toutes les 60 secondes, ou pas du tout. Le <xref:System.Web.UI.Timer.Interval%2A> est définie sur le choix de l’utilisateur.  
  
 [!code-aspx-csharp[System.Web.UI.Controls.Timer.Interval#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.Controls.Timer.Interval/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Controls.Timer.Interval#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.Controls.Timer.Interval/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La valeur spécifiée est inférieure ou égale à zéro.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreRender : EventArgs -&gt; unit&#xA;override this.OnPreRender : EventArgs -&gt; unit" Usage="timer.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objet <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.Control.PreRender" /> du contrôle <see cref="T:System.Web.UI.Timer" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTick">
      <MemberSignature Language="C#" Value="protected virtual void OnTick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.OnTick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTick(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTick : EventArgs -&gt; unit&#xA;override this.OnTick : EventArgs -&gt; unit" Usage="timer.OnTick e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Objet <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.Timer.Tick" /> du contrôle <see cref="T:System.Web.UI.Timer" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Timer.Tick> événement est déclenché lorsque le nombre de millisecondes spécifié dans le <xref:System.Web.UI.Timer.Interval%2A> propriété s’est écoulé depuis la restitution de la page Web ou depuis le dernier <xref:System.Web.UI.Timer.Tick> événement.  
  
   
  
## Examples  
 L’exemple suivant montre un <xref:System.Web.UI.UpdatePanel> contrôle qui affiche une cotation générée de manière aléatoire et le moment où celle-ci a été générée. Le <xref:System.Web.UI.Timer> contrôle met à jour le contenu de la <xref:System.Web.UI.UpdatePanel> contrôler toutes les 10 secondes. Cours de l’action et l’heure sont définis dans un gestionnaire pour le <xref:System.Web.UI.Timer.Tick> événement.  
  
 [!code-aspx-csharp[System.Web.UI.Controls.Timer#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.Controls.Timer/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Controls.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.Controls.Timer/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="timer.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Une chaîne avec un argument facultatif à passer au gestionnaire d'événements.</param>
        <summary>Permet à un contrôle <see cref="T:System.Web.UI.Timer" /> de déclencher l'événement <see cref="E:System.Web.UI.Timer.Tick" /> lorsqu'une page est publiée au serveur.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member Render : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="timer.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">L'objet <see cref="T:System.Web.UI.HtmlTextWriter" /> qui est utilisé pour restituer le contenu du contrôle <see cref="T:System.Web.UI.Timer" /> dans le navigateur.</param>
        <summary>Restitue le contenu du contrôle <see cref="T:System.Web.UI.Timer" /> dans le navigateur à l'aide de l'objet <see cref="T:System.Web.UI.HtmlTextWriter" /> spécifié.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Une chaîne avec un argument facultatif à passer au gestionnaire d'événements.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.Timer.Tick" /> lorsqu'une page est publiée au serveur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.Timer> est castée en interface <xref:System.Web.UI.IPostBackEventHandler>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptControl.GetScriptDescriptors">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt; IScriptControl.GetScriptDescriptors ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptDescriptor&gt; System.Web.UI.IScriptControl.GetScriptDescriptors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptDescriptors" />
      <MemberSignature Language="VB.NET" Value="Function GetScriptDescriptors () As IEnumerable(Of ScriptDescriptor) Implements IScriptControl.GetScriptDescriptors" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptDescriptor ^&gt; ^ System.Web.UI.IScriptControl.GetScriptDescriptors() = System::Web::UI::IScriptControl::GetScriptDescriptors;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptControl.GetScriptDescriptors</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère les propriétés d'un objet <see cref="T:System.Web.UI.Timer" /> qui sont passées au composant client.</summary>
        <returns>Tableau de type <see cref="T:System.Web.UI.ScriptDescriptor" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.Timer> est castée en interface <xref:System.Web.UI.IScriptControl>.  
  
 Le <xref:System.Web.UI.Timer.GetScriptDescriptors%2A> méthode ajoute la <xref:System.Web.UI.Timer.Interval%2A> et <xref:System.Web.UI.Timer.Enabled%2A> propriétés d’une instance de la <xref:System.Web.UI.Timer> classe un <xref:System.Web.UI.ScriptDescriptor> objet. Le composant client récupère les valeurs et définit les valeurs correspondantes dans le script.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptControl.GetScriptReferences">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt; IScriptControl.GetScriptReferences ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptReference&gt; System.Web.UI.IScriptControl.GetScriptReferences() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Timer.System#Web#UI#IScriptControl#GetScriptReferences" />
      <MemberSignature Language="VB.NET" Value="Function GetScriptReferences () As IEnumerable(Of ScriptReference) Implements IScriptControl.GetScriptReferences" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptReference ^&gt; ^ System.Web.UI.IScriptControl.GetScriptReferences() = System::Web::UI::IScriptControl::GetScriptReferences;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptControl.GetScriptReferences</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Récupère le script client pour le contrôle <see cref="T:System.Web.UI.Timer" />.</summary>
        <returns>Objet <see cref="T:System.Web.UI.ScriptReference" /> qui contient le script client pour le contrôle  <see cref="T:System.Web.UI.Timer" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.Timer> est castée en interface <xref:System.Web.UI.IScriptControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tick">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;EventArgs&gt; Tick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.EventArgs&gt; Tick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.Timer.Tick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Tick As EventHandler(Of EventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;EventArgs ^&gt; ^ Tick;" />
      <MemberSignature Language="F#" Value="member this.Tick : EventHandler&lt;EventArgs&gt; " Usage="member this.Tick : System.EventHandler&lt;System.EventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.EventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque le nombre de millisecondes spécifié dans la propriété <see cref="P:System.Web.UI.Timer.Interval" /> s'est écoulé et lorsque la page est publiée au serveur.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Timer.Tick> événement est déclenché lorsque le nombre de millisecondes spécifié dans le <xref:System.Web.UI.Timer.Interval%2A> propriété s’est écoulé depuis la dernière restitution de la page Web ou depuis le dernier <xref:System.Web.UI.Timer.Tick> événement. Gérer les <xref:System.Web.UI.Timer.Tick> événement lorsque vous devez exécuter des actions pendant chaque publication (postback).  
  
   
  
## Examples  
 L’exemple suivant montre un <xref:System.Web.UI.UpdatePanel> contrôle qui affiche une cotation générée de manière aléatoire et le moment où celle-ci a été générée. Le <xref:System.Web.UI.Timer> contrôle met à jour le contenu de la <xref:System.Web.UI.UpdatePanel> contrôler toutes les 10 secondes. Cours de l’action et l’heure sont définis dans un gestionnaire pour le <xref:System.Web.UI.Timer.Tick> événement.  
  
 [!code-aspx-csharp[System.Web.UI.Controls.Timer#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.Controls.Timer/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.Controls.Timer#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.Controls.Timer/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Timer.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.Timer.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se substitue à la propriété <see cref="P:System.Web.UI.Control.Visible" /> de la classe <see cref="T:System.Web.UI.Control" /> pour empêcher cette valeur d'être définie.</summary>
        <value>
          <see langword="true" /> si le contrôle est restitué sur la page ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `Visible` est substituée dans les <xref:System.Web.UI.Timer> classe pour empêcher la définition de cette propriété. Le `Visible` propriété renvoie `true` si le composant client de la <xref:System.Web.UI.Timer> classe est incluse dans la page Web, même si <xref:System.Web.UI.Timer.Enabled%2A> a la valeur `false`. Le `Visible` propriété renvoie `false` lorsqu’il est à l’intérieur d’un conteneur, comme un <xref:System.Web.UI.UpdatePanel> contrôle dont `Visible` est définie sur `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">Une valeur est assignée à la propriété <c>Visible</c>.</exception>
      </Docs>
    </Member>
  </Members>
</Type>