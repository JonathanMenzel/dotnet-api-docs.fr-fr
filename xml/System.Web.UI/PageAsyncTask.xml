<Type Name="PageAsyncTask" FullName="System.Web.UI.PageAsyncTask">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d1079f4cbaf4f9bde92409a2b96155ff21afa4a7" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="39813314" /></Metadata><TypeSignature Language="C#" Value="public sealed class PageAsyncTask" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PageAsyncTask extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PageAsyncTask" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PageAsyncTask" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageAsyncTask sealed" />
  <TypeSignature Language="F#" Value="type PageAsyncTask = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="92855-101">Contient des informations à propos d'une tâche asynchrone inscrite dans une page.</span><span class="sxs-lookup"><span data-stu-id="92855-101">Contains information about an asynchronous task registered to a page.</span></span> <span data-ttu-id="92855-102">Cette classe ne peut pas être héritée.</span><span class="sxs-lookup"><span data-stu-id="92855-102">This class cannot be inherited.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92855-103">Version d’ASP.NET 2.0 permet d’inscrire plusieurs tâches dans une page et de les exécuter de façon asynchrone avant le rendu de la page.</span><span class="sxs-lookup"><span data-stu-id="92855-103">ASP.NET version 2.0 allows you to register multiple tasks to a page and run them asynchronously prior to rendering the page.</span></span> <span data-ttu-id="92855-104">Vous pouvez spécifier qu’une tâche exécuter de manière asynchrone si c’est un processus lent et que vous ne souhaitez pas d’autres processus à immobilisé pendant son exécution.</span><span class="sxs-lookup"><span data-stu-id="92855-104">You might specify that a task be run asynchronously if it is a slow process and you do not want other processes to be tied up while it is executing.</span></span> <span data-ttu-id="92855-105">Les tâches asynchrones peuvent être exécutées en parallèle ou séquentiellement.</span><span class="sxs-lookup"><span data-stu-id="92855-105">The asynchronous tasks can be executed in parallel or sequentially.</span></span>  
  
 <span data-ttu-id="92855-106">Un <xref:System.Web.UI.PageAsyncTask> objet doit être inscrit à la page via la <xref:System.Web.UI.Page.RegisterAsyncTask%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="92855-106">A <xref:System.Web.UI.PageAsyncTask> object must be registered to the page through the <xref:System.Web.UI.Page.RegisterAsyncTask%2A> method.</span></span> <span data-ttu-id="92855-107">La page elle-même ne devra pas être traités de façon asynchrone pour exécuter des tâches asynchrones.</span><span class="sxs-lookup"><span data-stu-id="92855-107">The page itself does not have to be processed asynchronously to execute asynchronous tasks.</span></span> <span data-ttu-id="92855-108">Vous pouvez définir le `Async` attribut soit `true` (comme indiqué dans l’exemple de code suivant) ou `false` sur la page (directive) et les tâches asynchrones sont traitées de façon asynchrone :</span><span class="sxs-lookup"><span data-stu-id="92855-108">You can set the `Async` attribute to either `true` (as shown in the following code example) or `false` on the page directive and the asynchronous tasks will still be processed asynchronously:</span></span>  
  
 `<%@ Page Async="true" %>`  
  
 <span data-ttu-id="92855-109">Lorsque le `Async` attribut est défini sur `false`, le thread qui exécute la page sera bloqué jusqu'à ce que toutes les tâches asynchrones sont terminées.</span><span class="sxs-lookup"><span data-stu-id="92855-109">When the `Async` attribute is set to `false`, the thread that executes the page will be blocked until all asynchronous tasks are complete.</span></span>  
  
 <span data-ttu-id="92855-110">Toutes les tâches asynchrones inscrits avant le <xref:System.Web.UI.Page.PreRenderComplete> événement sera exécuté automatiquement par la page si elles n’ont pas déjà été exécutées.</span><span class="sxs-lookup"><span data-stu-id="92855-110">Any asynchronous tasks registered before the <xref:System.Web.UI.Page.PreRenderComplete> event will be executed automatically by the page if they have not already been executed.</span></span> <span data-ttu-id="92855-111">Les tâches asynchrones inscrites après le <xref:System.Web.UI.Page.PreRenderComplete> événement doit être exécuté explicitement par l’intermédiaire du <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="92855-111">Those asynchronous tasks registered after the <xref:System.Web.UI.Page.PreRenderComplete> event must be executed explicitly through the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method.</span></span> <span data-ttu-id="92855-112">Le <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> méthode peut également être utilisée pour démarrer les tâches avant le <xref:System.Web.UI.Page.PreRenderComplete> événement.</span><span class="sxs-lookup"><span data-stu-id="92855-112">The <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method can also be used to start tasks before the <xref:System.Web.UI.Page.PreRenderComplete> event.</span></span> <span data-ttu-id="92855-113">Le <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> méthode s’exécute toutes les tâches asynchrones inscrites sur la page qui n’ont pas été exécutées.</span><span class="sxs-lookup"><span data-stu-id="92855-113">The <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> method executes all the registered asynchronous tasks on the page that have not been executed.</span></span>  
  
 <span data-ttu-id="92855-114">Par défaut, une tâche asynchrone expire si elle n’est pas terminée dans les 45 secondes.</span><span class="sxs-lookup"><span data-stu-id="92855-114">By default, an asynchronous task will time out if it has not completed within 45 seconds.</span></span> <span data-ttu-id="92855-115">Vous pouvez spécifier une valeur de délai d’attente différent dans le fichier Web.config ou la directive de page.</span><span class="sxs-lookup"><span data-stu-id="92855-115">You can specify a different time-out value in either the Web.config file or the page directive.</span></span> <span data-ttu-id="92855-116">Le `<pages>` section du fichier Web.config contient un `asyncTimeout` d’attribut, comme indiqué ci-dessous.</span><span class="sxs-lookup"><span data-stu-id="92855-116">The `<pages>` section of the Web.config file contains an `asyncTimeout` attribute, as shown below.</span></span>  
  
 `<system.web>`  
  
 `<pages asyncTimeout="30">`  
  
 `</pages>`  
  
 `</system.web>`  
  
 <span data-ttu-id="92855-117">La directive de page contienne un `AsyncTimeout` attribut.</span><span class="sxs-lookup"><span data-stu-id="92855-117">The page directive contains an `AsyncTimeout` attribute.</span></span>  
  
 `<%@ Page AsyncTimeout="30" %>`  
  
   
  
## Examples  
 <span data-ttu-id="92855-118">L’exemple de code suivant inscrit trois tâches asynchrones à une page et les exécute en parallèle.</span><span class="sxs-lookup"><span data-stu-id="92855-118">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="92855-119">Chaque tâche appelle une méthode qui provoque seulement le thread en veille pendant 5 secondes.</span><span class="sxs-lookup"><span data-stu-id="92855-119">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="92855-120">Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.PageAsyncTask" />.</span><span class="sxs-lookup"><span data-stu-id="92855-120">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;valuetype System.Threading.CancellationToken, class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As Func(Of CancellationToken, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(Func&lt;System::Threading::CancellationToken, System::Threading::Tasks::Task ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : Func&lt;System.Threading.CancellationToken, System.Threading.Tasks.Task&gt; -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask handler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;System.Threading.CancellationToken,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="92855-121">Gestionnaire d'événements.</span><span class="sxs-lookup"><span data-stu-id="92855-121">An event handler.</span></span></param>
        <summary><span data-ttu-id="92855-122">Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.PageAsyncTask" /> à l'aide d'un gestionnaire d'événements qui permet l'annulation de la tâche.</span><span class="sxs-lookup"><span data-stu-id="92855-122">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using an event handler that enables the task to be canceled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92855-123">Ce constructeur encapsule un <xref:System.Web.TaskEventHandler> déléguer afin que le <xref:System.Web.UI.PageAsyncTask> objet peut intégrer du code asynchrone (basé sur <xref:System.Threading.Tasks.Task> objets) avec la fonctionnalité de pages asynchrones ASP.NET Web Forms existante.</span><span class="sxs-lookup"><span data-stu-id="92855-123">This constructor wraps a <xref:System.Web.TaskEventHandler> delegate so that the <xref:System.Web.UI.PageAsyncTask> object can integrate asynchronous code (based on <xref:System.Threading.Tasks.Task> objects) with the existing ASP.NET Web Forms asynchronous pages feature.</span></span> <span data-ttu-id="92855-124">ASP.NET signale le <xref:System.Threading.CancellationToken> objet qui est passé à un <xref:System.Web.TaskEventHandler> déléguer l’annulation selon le <xref:System.Web.UI.Page.AsyncTimeout%2A> attribut défini le `@ Page` directive de la page Web.</span><span class="sxs-lookup"><span data-stu-id="92855-124">ASP.NET will signal the <xref:System.Threading.CancellationToken> object that is passed to a <xref:System.Web.TaskEventHandler> delegate for cancellation based on the <xref:System.Web.UI.Page.AsyncTimeout%2A> attribute set in the `@ Page` directive of the Web page.</span></span> <span data-ttu-id="92855-125">Lorsque le <xref:System.Web.UI.Page.AsyncTimeout%2A> valeur a été atteint, le <xref:System.Threading.CancellationToken> objet sera signalé.</span><span class="sxs-lookup"><span data-stu-id="92855-125">When the <xref:System.Web.UI.Page.AsyncTimeout%2A> value has been reached, the <xref:System.Threading.CancellationToken> object will be signaled.</span></span> <span data-ttu-id="92855-126">Le `CancellationToken` paramètre doit être passé à toutes les API asynchrones sont appelées par votre implémentation de la <xref:System.Web.TaskEventHandler> classe.</span><span class="sxs-lookup"><span data-stu-id="92855-126">The `CancellationToken` parameter must be passed to any asynchronous APIs that are called by your implementation of the <xref:System.Web.TaskEventHandler> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (Func&lt;System.Threading.Tasks.Task&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`1&lt;class System.Threading.Tasks.Task&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Func{System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (handler As Func(Of Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(Func&lt;System::Threading::Tasks::Task ^&gt; ^ handler);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : Func&lt;System.Threading.Tasks.Task&gt; -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask handler" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="handler" Type="System.Func&lt;System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="handler"><span data-ttu-id="92855-127">Gestionnaire d'événements.</span><span class="sxs-lookup"><span data-stu-id="92855-127">An event handler.</span></span></param>
        <summary><span data-ttu-id="92855-128">Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.PageAsyncTask" /> à l'aide d'un gestionnaire d'événements qui permet la gestion de la tâche.</span><span class="sxs-lookup"><span data-stu-id="92855-128">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using an event handler that enables the task to be handled.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, System.Web.EndEventHandler timeoutHandler, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, class System.Web.EndEventHandler timeoutHandler, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (beginHandler As BeginEventHandler, endHandler As EndEventHandler, timeoutHandler As EndEventHandler, state As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Web::EndEventHandler ^ timeoutHandler, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : System.Web.BeginEventHandler * System.Web.EndEventHandler * System.Web.EndEventHandler * obj -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask (beginHandler, endHandler, timeoutHandler, state)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="timeoutHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="beginHandler"><span data-ttu-id="92855-129">Gestionnaire à appeler au commencement d'une tâche asynchrone.</span><span class="sxs-lookup"><span data-stu-id="92855-129">The handler to call when beginning an asynchronous task.</span></span></param>
        <param name="endHandler"><span data-ttu-id="92855-130">Gestionnaire à appeler lorsque la tâche se termine correctement dans le délai d'attente imparti.</span><span class="sxs-lookup"><span data-stu-id="92855-130">The handler to call when the task is completed successfully within the time-out period.</span></span></param>
        <param name="timeoutHandler"><span data-ttu-id="92855-131">Gestionnaire à appeler lorsque la tâche ne se termine pas correctement dans le délai d'attente imparti.</span><span class="sxs-lookup"><span data-stu-id="92855-131">The handler to call when the task is not completed successfully within the time-out period.</span></span></param>
        <param name="state"><span data-ttu-id="92855-132">Objet qui représente l'état de la tâche.</span><span class="sxs-lookup"><span data-stu-id="92855-132">The object that represents the state of the task.</span></span></param>
        <summary><span data-ttu-id="92855-133">Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.PageAsyncTask" /> à l'aide de la valeur par défaut pour une exécution en parallèle.</span><span class="sxs-lookup"><span data-stu-id="92855-133">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using the default value for executing in parallel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92855-134">Cette implémentation du constructeur définit la <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> propriété `false` afin de la tâche asynchrone n’est pas traitée en parallèle avec d’autres tâches sur la page.</span><span class="sxs-lookup"><span data-stu-id="92855-134">This implementation of the constructor sets the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property to `false` so the asynchronous task is not processed in parallel with other tasks on the page.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="92855-135">Le paramètre <paramref name="beginHandler" /> ou <paramref name="endHandler" /> n'est pas spécifié.</span><span class="sxs-lookup"><span data-stu-id="92855-135">The <paramref name="beginHandler" /> parameter or <paramref name="endHandler" /> parameter is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageAsyncTask (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, System.Web.EndEventHandler timeoutHandler, object state, bool executeInParallel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.BeginEventHandler beginHandler, class System.Web.EndEventHandler endHandler, class System.Web.EndEventHandler timeoutHandler, object state, bool executeInParallel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PageAsyncTask.#ctor(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Web.EndEventHandler,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (beginHandler As BeginEventHandler, endHandler As EndEventHandler, timeoutHandler As EndEventHandler, state As Object, executeInParallel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageAsyncTask(System::Web::BeginEventHandler ^ beginHandler, System::Web::EndEventHandler ^ endHandler, System::Web::EndEventHandler ^ timeoutHandler, System::Object ^ state, bool executeInParallel);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.PageAsyncTask : System.Web.BeginEventHandler * System.Web.EndEventHandler * System.Web.EndEventHandler * obj * bool -&gt; System.Web.UI.PageAsyncTask" Usage="new System.Web.UI.PageAsyncTask (beginHandler, endHandler, timeoutHandler, state, executeInParallel)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="beginHandler" Type="System.Web.BeginEventHandler" />
        <Parameter Name="endHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="timeoutHandler" Type="System.Web.EndEventHandler" />
        <Parameter Name="state" Type="System.Object" />
        <Parameter Name="executeInParallel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="beginHandler"><span data-ttu-id="92855-136">Gestionnaire à appeler au commencement d'une tâche asynchrone.</span><span class="sxs-lookup"><span data-stu-id="92855-136">The handler to call when beginning an asynchronous task.</span></span></param>
        <param name="endHandler"><span data-ttu-id="92855-137">Gestionnaire à appeler lorsque la tâche se termine correctement dans le délai d'attente imparti.</span><span class="sxs-lookup"><span data-stu-id="92855-137">The handler to call when the task is completed successfully within the time-out period.</span></span></param>
        <param name="timeoutHandler"><span data-ttu-id="92855-138">Gestionnaire à appeler lorsque la tâche ne se termine pas correctement dans le délai d'attente imparti.</span><span class="sxs-lookup"><span data-stu-id="92855-138">The handler to call when the task is not completed successfully within the time-out period.</span></span></param>
        <param name="state"><span data-ttu-id="92855-139">Objet qui représente l'état de la tâche.</span><span class="sxs-lookup"><span data-stu-id="92855-139">The object that represents the state of the task.</span></span></param>
        <param name="executeInParallel"><span data-ttu-id="92855-140">Valeur qui indique si la tâche peut être traitée en parallèle avec d'autres tâches.</span><span class="sxs-lookup"><span data-stu-id="92855-140">The value that indicates whether the task can be processed in parallel with other tasks.</span></span></param>
        <summary><span data-ttu-id="92855-141">Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.PageAsyncTask" /> à l'aide de la valeur spécifiée pour une exécution en parallèle.</span><span class="sxs-lookup"><span data-stu-id="92855-141">Initializes a new instance of the <see cref="T:System.Web.UI.PageAsyncTask" /> class using the specified value for executing in parallel.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92855-142">Cette implémentation du constructeur vous permet de définir si la tâche asynchrone sera être traitée en parallèle avec d’autres tâches sur la page.</span><span class="sxs-lookup"><span data-stu-id="92855-142">This implementation of the constructor allows you to set whether the asynchronous task will be processed in parallel with other tasks on the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92855-143">L’exemple de code suivant crée trois tâches asynchrones qui sont traitées en parallèle entre eux.</span><span class="sxs-lookup"><span data-stu-id="92855-143">The following code example creates three asynchronous tasks that are processed in parallel to each other.</span></span> <span data-ttu-id="92855-144">Cet exemple fait partie d’un exemple plus complet trouvé dans le <xref:System.Web.UI.PageAsyncTask> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="92855-144">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="92855-145">Le paramètre <paramref name="beginHandler" /> ou <paramref name="endHandler" /> n'est pas spécifié.</span><span class="sxs-lookup"><span data-stu-id="92855-145">The <paramref name="beginHandler" /> parameter or <paramref name="endHandler" /> parameter is not specified.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginHandler">
      <MemberSignature Language="C#" Value="public System.Web.BeginEventHandler BeginHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.BeginEventHandler BeginHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.BeginHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BeginHandler As BeginEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::BeginEventHandler ^ BeginHandler { System::Web::BeginEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BeginHandler : System.Web.BeginEventHandler" Usage="System.Web.UI.PageAsyncTask.BeginHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.BeginEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92855-146">Obtient la méthode à appeler au début d'une tâche asynchrone.</span><span class="sxs-lookup"><span data-stu-id="92855-146">Gets the method to call when beginning an asynchronous task.</span></span></summary>
        <value><span data-ttu-id="92855-147">Délégué <see cref="T:System.Web.BeginEventHandler" /> qui représente la méthode à appeler au début de la tâche asynchrone.</span><span class="sxs-lookup"><span data-stu-id="92855-147">A <see cref="T:System.Web.BeginEventHandler" /> delegate that represents the method to call when beginning the asynchronous task.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92855-148">Le <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> délégué est défini dans le constructeur.</span><span class="sxs-lookup"><span data-stu-id="92855-148">The <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92855-149">L’exemple de code suivant inscrit trois tâches asynchrones à une page et les exécute en parallèle.</span><span class="sxs-lookup"><span data-stu-id="92855-149">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="92855-150">Chaque tâche appelle une méthode qui provoque seulement le thread en veille pendant 5 secondes.</span><span class="sxs-lookup"><span data-stu-id="92855-150">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="92855-151">Un <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> délégué est spécifié pour chaque tâche.</span><span class="sxs-lookup"><span data-stu-id="92855-151">A <xref:System.Web.UI.PageAsyncTask.BeginHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndHandler">
      <MemberSignature Language="C#" Value="public System.Web.EndEventHandler EndHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.EndEventHandler EndHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.EndHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EndHandler As EndEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::EndEventHandler ^ EndHandler { System::Web::EndEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EndHandler : System.Web.EndEventHandler" Usage="System.Web.UI.PageAsyncTask.EndHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.EndEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92855-152">Obtient la méthode à appeler lorsque la tâche se termine correctement dans le délai d'attente imparti.</span><span class="sxs-lookup"><span data-stu-id="92855-152">Gets the method to call when the task completes successfully within the time-out period.</span></span></summary>
        <value><span data-ttu-id="92855-153">Délégué <see cref="T:System.Web.EndEventHandler" /> qui représente la méthode à appeler lorsque la tâche se termine correctement dans le délai d'attente imparti.</span><span class="sxs-lookup"><span data-stu-id="92855-153">An <see cref="T:System.Web.EndEventHandler" /> delegate that represents the method to call when the task completes successfully within the time-out period.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92855-154">Le <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> délégué est défini dans le constructeur.</span><span class="sxs-lookup"><span data-stu-id="92855-154">The <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92855-155">L’exemple de code suivant inscrit trois tâches asynchrones à une page et les exécute en parallèle.</span><span class="sxs-lookup"><span data-stu-id="92855-155">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="92855-156">Chaque tâche appelle une méthode qui provoque seulement le thread en veille pendant 5 secondes.</span><span class="sxs-lookup"><span data-stu-id="92855-156">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="92855-157">Un <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> délégué est spécifié pour chaque tâche.</span><span class="sxs-lookup"><span data-stu-id="92855-157">An <xref:System.Web.UI.PageAsyncTask.EndHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteInParallel">
      <MemberSignature Language="C#" Value="public bool ExecuteInParallel { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExecuteInParallel" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.ExecuteInParallel" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExecuteInParallel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExecuteInParallel { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ExecuteInParallel : bool" Usage="System.Web.UI.PageAsyncTask.ExecuteInParallel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92855-158">Obtient une valeur qui indique si la tâche peut être traitée en parallèle avec d'autres tâches.</span><span class="sxs-lookup"><span data-stu-id="92855-158">Gets a value that indicates whether the task can be processed in parallel with other tasks.</span></span></summary>
        <value><span data-ttu-id="92855-159"><see langword="true" /> si la tâche doit être traitée en parallèle avec d'autres tâches ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="92855-159"><see langword="true" /> if the task should be processed in parallel with other tasks; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92855-160">Le <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> propriété est définie dans le constructeur.</span><span class="sxs-lookup"><span data-stu-id="92855-160">The <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set in the constructor.</span></span> <span data-ttu-id="92855-161">Lorsque plusieurs tâches sont inscrites dans une page et le <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> propriété est définie sur `true`, ces tâches sont traitées simultanément.</span><span class="sxs-lookup"><span data-stu-id="92855-161">When multiple tasks are registered in a page and the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set to `true`, then those tasks are processed concurrently.</span></span> <span data-ttu-id="92855-162">Toutefois, si le <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> propriété est définie sur `false`, puis ces tâches sont traitées de manière séquentielle.</span><span class="sxs-lookup"><span data-stu-id="92855-162">However, if the <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> property is set to `false`, then those tasks are processed sequentially.</span></span> <span data-ttu-id="92855-163">Par exemple, si une page contenue deux tâches asynchrones chaque durée de 5 secondes et <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> a la valeur `true`, les deux tâches sont effectuées en 5 secondes.</span><span class="sxs-lookup"><span data-stu-id="92855-163">For example, if a page contained two asynchronous tasks that each took 5 seconds to complete and <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> is set to `true`, both tasks will complete in 5 seconds.</span></span> <span data-ttu-id="92855-164">Si <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> a la valeur `false` pour ces mêmes les deux tâches, puis la première tâche se terminera dans 5 secondes et la seconde tâche se termine à 5 secondes après la fin de la première tâche.</span><span class="sxs-lookup"><span data-stu-id="92855-164">If <xref:System.Web.UI.PageAsyncTask.ExecuteInParallel%2A> is set to `false` for these same two tasks, then the first task will complete in 5 seconds and the second task will complete 5 seconds after the completion of the first task.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92855-165">L’exemple de code suivant définit trois tâches asynchrones qui sont chacune configurées pour être traitées en parallèle.</span><span class="sxs-lookup"><span data-stu-id="92855-165">The following code example defines three asynchronous tasks that are each set to be processed in parallel.</span></span> <span data-ttu-id="92855-166">Cet exemple fait partie d’un exemple plus complet trouvé dans le <xref:System.Web.UI.PageAsyncTask> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="92855-166">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="State">
      <MemberSignature Language="C#" Value="public object State { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object State" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.State" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property State As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ State { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.State : obj" Usage="System.Web.UI.PageAsyncTask.State" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92855-167">Obtient un objet qui représente l'état de la tâche.</span><span class="sxs-lookup"><span data-stu-id="92855-167">Gets an object that represents the state of the task.</span></span></summary>
        <value><span data-ttu-id="92855-168"><see cref="T:System.Object" /> qui représente l'état de la tâche.</span><span class="sxs-lookup"><span data-stu-id="92855-168">An <see cref="T:System.Object" /> that represents the state of the task.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92855-169">Le <xref:System.Web.UI.PageAsyncTask.State%2A> propriété est définie dans le constructeur et ne peut pas être modifiée pendant l’exécution de la tâche asynchrone.</span><span class="sxs-lookup"><span data-stu-id="92855-169">The <xref:System.Web.UI.PageAsyncTask.State%2A> property is set in the constructor and cannot be modified during execution of the asynchronous task.</span></span> <span data-ttu-id="92855-170">Vous pouvez différencier des tâches asynchrones dans une page en assignant des valeurs de chaîne unique à leurs respectifs <xref:System.Web.UI.PageAsyncTask.State%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="92855-170">You can differentiate asynchronous tasks in a page by assigning unique string values to their respective <xref:System.Web.UI.PageAsyncTask.State%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92855-171">L’exemple de code suivant crée trois tâches asynchrones et leur donne des valeurs uniques pour leurs <xref:System.Web.UI.PageAsyncTask.State%2A> propriétés.</span><span class="sxs-lookup"><span data-stu-id="92855-171">The following code example creates three asynchronous tasks and gives them unique values for their <xref:System.Web.UI.PageAsyncTask.State%2A> properties.</span></span> <span data-ttu-id="92855-172">Cet exemple fait partie d’un exemple plus complet trouvé dans le <xref:System.Web.UI.PageAsyncTask> vue d’ensemble de la classe.</span><span class="sxs-lookup"><span data-stu-id="92855-172">This example is part of a larger example found in the <xref:System.Web.UI.PageAsyncTask> class overview.</span></span>  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#3)]
 [!code-vb[System.Web.UI.PageAsyncTask#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TimeoutHandler">
      <MemberSignature Language="C#" Value="public System.Web.EndEventHandler TimeoutHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.EndEventHandler TimeoutHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.PageAsyncTask.TimeoutHandler" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TimeoutHandler As EndEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::EndEventHandler ^ TimeoutHandler { System::Web::EndEventHandler ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TimeoutHandler : System.Web.EndEventHandler" Usage="System.Web.UI.PageAsyncTask.TimeoutHandler" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.EndEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="92855-173">Obtient la méthode à appeler lorsque la tâche ne se termine pas correctement dans le délai d'attente imparti.</span><span class="sxs-lookup"><span data-stu-id="92855-173">Gets the method to call when the task does not complete successfully within the time-out period.</span></span></summary>
        <value><span data-ttu-id="92855-174">Délégué <see cref="T:System.Web.EndEventHandler" /> qui représente la méthode à appeler lorsque la tâche ne se termine pas correctement dans le délai d'attente imparti.</span><span class="sxs-lookup"><span data-stu-id="92855-174">An <see cref="T:System.Web.EndEventHandler" /> delegate that represents the method to call when the task does not complete successfully within the time-out period.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="92855-175">Le <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> délégué est défini dans le constructeur.</span><span class="sxs-lookup"><span data-stu-id="92855-175">The <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegate is set in the constructor.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="92855-176">L’exemple de code suivant inscrit trois tâches asynchrones à une page et les exécute en parallèle.</span><span class="sxs-lookup"><span data-stu-id="92855-176">The following code example registers three asynchronous tasks to a page and executes them in parallel.</span></span> <span data-ttu-id="92855-177">Chaque tâche appelle une méthode qui provoque seulement le thread en veille pendant 5 secondes.</span><span class="sxs-lookup"><span data-stu-id="92855-177">Each task calls a method that merely causes the thread to sleep for 5 seconds.</span></span> <span data-ttu-id="92855-178">Un <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> délégué est spécifié pour chaque tâche.</span><span class="sxs-lookup"><span data-stu-id="92855-178">A <xref:System.Web.UI.PageAsyncTask.TimeoutHandler%2A> delegate is specified for each task.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.PageAsyncTask#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/page_asynctask.aspx#1)]
 [!code-aspx-vb[System.Web.UI.PageAsyncTask#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/page_asynctask.aspx#1)]  
  
 [!code-csharp[System.Web.UI.PageAsyncTask#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/CS/App_Code/SlowTask.cs#2)]
 [!code-vb[System.Web.UI.PageAsyncTask#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.PageAsyncTask/VB/App_Code/SlowTask.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>