<Type Name="IHierarchyData" FullName="System.Web.UI.IHierarchyData">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5e6712740cae06a948a024b3e0c2bcf7c77989f1" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37588171" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IHierarchyData" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IHierarchyData" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IHierarchyData" />
  <TypeSignature Language="VB.NET" Value="Public Interface IHierarchyData" />
  <TypeSignature Language="C++ CLI" Value="public interface class IHierarchyData" />
  <TypeSignature Language="F#" Value="type IHierarchyData = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Expose un nœud d'une structure de données hiérarchique, comprenant l'objet de nœud et certaines propriétés qui décrivent des caractéristiques du nœud. Les objets qui implémentent l'interface <see cref="T:System.Web.UI.IHierarchyData" /> peuvent être contenus dans des collections <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> et sont utilisés par la navigation de site ASP.NET et des contrôles de source de données.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.IHierarchyData> interface est implémentée par les classes qui représentent les nœuds d’une structure hiérarchique et suivre les relations hiérarchiques à leurs nœuds parents et enfants. Classes qui implémentent le <xref:System.Web.UI.IHierarchyData> interface peut être contenue dans les collections qui implémentent le <xref:System.Web.UI.IHierarchicalEnumerable> interface.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment implémenter la <xref:System.Web.UI.IHierarchyData> interface avec une classe qui encapsule un <xref:System.IO.FileSystemInfo> objet. Le <xref:System.IO.FileSystemInfo> classe est un bon exemple d’un nœud de données hiérarchiques, ce qui le <xref:System.Web.UI.IHierarchyData> interface représente pour les contrôles de source de données hiérarchiques ASP.NET. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.HierarchicalDataSourceControl> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#5)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#5)]  
  
 L’exemple de code suivant montre comment itérer de manière récursive dans une <xref:System.Web.UI.IHierarchicalEnumerable> collection, extrait le <xref:System.Web.UI.IHierarchyData> élément à partir de l’énumérateur à l’aide de la <xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A> (méthode) et effectuer un travail de base sur l’élément de données.  
  
 [!code-aspx-csharp[System.Web.UI.IHierarchyData_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx#1)]
 [!code-aspx-vb[System.Web.UI.IHierarchyData_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IHierarchicalEnumerable" />
    <altmember cref="T:System.Web.SiteMapNode" />
  </Docs>
  <Members>
    <Member MemberName="GetChildren">
      <MemberSignature Language="C#" Value="public System.Web.UI.IHierarchicalEnumerable GetChildren ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.IHierarchicalEnumerable GetChildren() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IHierarchyData.GetChildren" />
      <MemberSignature Language="VB.NET" Value="Public Function GetChildren () As IHierarchicalEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::IHierarchicalEnumerable ^ GetChildren();" />
      <MemberSignature Language="F#" Value="abstract member GetChildren : unit -&gt; System.Web.UI.IHierarchicalEnumerable" Usage="iHierarchyData.GetChildren " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchicalEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient un objet d'énumération qui représente tous les nœuds enfants du nœud hiérarchique actuel.</summary>
        <returns>Collection <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> de nœuds enfants du nœud hiérarchique actuel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser la <xref:System.Web.UI.IHierarchyData.HasChildren%2A> propriété afin de déterminer si le <xref:System.Web.UI.IHierarchyData> nœud a des nœuds enfants.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment vérifier la <xref:System.Web.UI.IHierarchyData.HasChildren%2A> propriété pour déterminer si le nœud de données hiérarchique actuel possède des nœuds enfants et les récupérer à l’aide de la <xref:System.Web.UI.IHierarchyData.GetChildren%2A> (méthode). Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.Web.UI.IHierarchyData> interface.  
  
 [!code-csharp[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx.cs#2)]
 [!code-vb[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IHierarchyData.HasChildren" />
      </Docs>
    </Member>
    <Member MemberName="GetParent">
      <MemberSignature Language="C#" Value="public System.Web.UI.IHierarchyData GetParent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.IHierarchyData GetParent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IHierarchyData.GetParent" />
      <MemberSignature Language="VB.NET" Value="Public Function GetParent () As IHierarchyData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::IHierarchyData ^ GetParent();" />
      <MemberSignature Language="F#" Value="abstract member GetParent : unit -&gt; System.Web.UI.IHierarchyData" Usage="iHierarchyData.GetParent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchyData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient un objet <see cref="T:System.Web.UI.IHierarchyData" /> qui représente le nœud parent du nœud hiérarchique actuel.</summary>
        <returns>Objet <see cref="T:System.Web.UI.IHierarchyData" /> qui représente le nœud parent du nœud hiérarchique actuel.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.IHierarchyData> interface ne définit pas une propriété de commodité HasParent, donc les appelants doivent vérifier la valeur de retour de la <xref:System.Web.UI.IHierarchyData.GetParent%2A> méthode pour `null` pour déterminer si actuel <xref:System.Web.UI.IHierarchyData> nœud est le nœud racine des données hiérarchiques structure à laquelle le nœud appartient.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment implémenter la <xref:System.Web.UI.IHierarchyData.GetParent%2A> méthode dans une classe qui implémente le <xref:System.Web.UI.IHierarchyData> interface. Le `FileSystemHierarchyData` classe encapsule une <xref:System.IO.FileSystemInfo> objet et le <xref:System.Web.UI.IHierarchyData.GetParent%2A> implémentation de la méthode vérifie le type de la <xref:System.IO.FileSystemInfo> objet et retourne l’objet parent approprié en fonction du type. Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.Web.UI.IHierarchyData> interface et la <xref:System.Web.UI.HierarchicalDataSourceControl> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IHierarchyData.GetChildren" />
        <altmember cref="P:System.Web.UI.IHierarchyData.HasChildren" />
      </Docs>
    </Member>
    <Member MemberName="HasChildren">
      <MemberSignature Language="C#" Value="public bool HasChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasChildren" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.HasChildren" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasChildren As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasChildren { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasChildren : bool" Usage="System.Web.UI.IHierarchyData.HasChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indique si le nœud de données hiérarchique que l'objet <see cref="T:System.Web.UI.IHierarchyData" /> représente dispose de nœuds enfants.</summary>
        <value>
          <see langword="true" /> si le nœud actuel possède des nœuds enfants ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.IHierarchyData.HasChildren%2A> propriété est une propriété de commodité qui permet aux appelants d’éviter la vérification de la valeur de retour de la <xref:System.Web.UI.IHierarchyData.GetChildren%2A> méthode pour `null`. Si le <xref:System.Web.UI.IHierarchyData.HasChildren%2A> retourne de la propriété `true`, appelez le <xref:System.Web.UI.IHierarchyData.GetChildren%2A> méthode pour récupérer un <xref:System.Web.UI.IHierarchicalEnumerable> collection de nœuds enfants.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment un contrôle lié aux données hiérarchiques d’ASP.NET utilise un <xref:System.Web.UI.IHierarchyData> objet dans une méthode de liaison de données récursives. Les éléments dans un <xref:System.Web.UI.IHierarchicalEnumerable> collection sont énumérés et pour chacun un <xref:System.Web.UI.IHierarchyData> objet est récupéré à l’aide de la <xref:System.Web.UI.IHierarchicalEnumerable.GetHierarchyData%2A> (méthode). Enfin, le <xref:System.Web.UI.IHierarchyData.HasChildren%2A> propriété est vérifiée pour déterminer s’il faut recurse. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> classe.  
  
 [!code-csharp[Samples.AspNet.GeneologyTree#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/CS/geneologytree.cs#5)]
 [!code-vb[Samples.AspNet.GeneologyTree#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Samples.AspNet.GeneologyTree/VB/geneologytree.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IHierarchyData.GetChildren" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object Item { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.Item" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Item { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Item : obj" Usage="System.Web.UI.IHierarchyData.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nœud de données hiérarchique que l'objet <see cref="T:System.Web.UI.IHierarchyData" /> représente.</summary>
        <value>Un objet de nœud de données hiérarchiques <see cref="T:System.Object" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alors que de nombreuses classes qui représentent des nœuds de données hiérarchiques, telles que la <xref:System.Web.SiteMapNode> classe, implémentez la <xref:System.Web.UI.IHierarchyData> interface directement, d’autres classes agissent uniquement comme un wrapper pour une classe qui n’implémente pas l’interface. Le <xref:System.Web.UI.IHierarchyData.Item%2A> propriété est fournie pour ces situations de design, lorsque les objets métier sont fonctionnellement équivalents à un <xref:System.Web.UI.IHierarchyData> de l’objet, mais ne peut pas être facilement repensée.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment accéder aux <xref:System.Web.UI.IHierarchyData> propriétés, vérifiez le type d’un <xref:System.Web.UI.IHierarchyData> à l’aide de l’objet le <xref:System.Web.UI.IHierarchyData.Type%2A> propriété et l’objet à effectuer davantage d’opérations spécifiques au type de cast. Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.Web.UI.IHierarchyData> interface.  
  
 [!code-csharp[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx.cs#2)]
 [!code-vb[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IHierarchyData.Type" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.Web.UI.IHierarchyData.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le chemin d'accès hiérarchique du nœud.</summary>
        <value>
          <see cref="T:System.String" /> qui identifie le chemin d'accès hiérarchique relatif au nœud actuel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.IHierarchyData.Path%2A> propriété peut être passée à la <xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A> méthode pour récupérer le <xref:System.Web.UI.HierarchicalDataSourceView> objet qui correspond au nœud identifié par <xref:System.Web.UI.IHierarchyData.Path%2A>.  
  
> [!CAUTION]
>  Le <xref:System.Web.UI.IHierarchyData.Path%2A> propriété ne doit pas contenir toutes les informations sensibles concernant l’environnement hôte, car il peut être restitué au client dans un contrôle lié aux données.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment implémenter la <xref:System.Web.UI.IHierarchyData.Path%2A> propriété dans une classe qui implémente le <xref:System.Web.UI.IHierarchyData> interface. Le `FileSystemHierarchyData` classe encapsule une <xref:System.IO.FileSystemInfo> objet et le <xref:System.Web.UI.IHierarchyData.Path%2A> implémentation de la propriété retourne son chemin d’accès du système de fichiers. Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.Web.UI.IHierarchyData> interface et la <xref:System.Web.UI.HierarchicalDataSourceControl> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#7)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.SiteMapNode.Url" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public string Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.IHierarchyData.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Type { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Type : string" Usage="System.Web.UI.IHierarchyData.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom du type de <see cref="T:System.Object" /> contenu dans la propriété <see cref="P:System.Web.UI.IHierarchyData.Item" />.</summary>
        <value>Nom du type d'objet que l'objet <see cref="T:System.Web.UI.IHierarchyData" /> représente.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.IHierarchyData.Type%2A> propriété ne retourne pas le <xref:System.Type?displayProperty=nameWithType> de l’objet représenté dans un <xref:System.Web.UI.IHierarchyData> objet. Elle retourne un nom utilisé par des contrôles liés aux données pour faire la distinction entre les éléments dans une hiérarchie qui ont différentes propriétés pouvant être liées.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment écrire de base <xref:System.Web.UI.IHierarchyData> propriétés à un <xref:System.Web.HttpResponse> diffuser en continu, puis vérifier le type d’un <xref:System.Web.UI.IHierarchyData> à l’aide de l’objet le <xref:System.Web.UI.IHierarchyData.Type%2A> propriété et l’objet à effectuer davantage d’opérations spécifiques au type de cast. Cet exemple de code fait partie d’un exemple plus complet fourni pour le <xref:System.Web.UI.IHierarchyData> interface.  
  
 [!code-csharp[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/CS/ihd_1.aspx.cs#2)]
 [!code-vb[System.Web.UI.IHierarchyData_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.IHierarchyData_1/VB/ihd_1.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IHierarchyData.Item" />
      </Docs>
    </Member>
  </Members>
</Type>