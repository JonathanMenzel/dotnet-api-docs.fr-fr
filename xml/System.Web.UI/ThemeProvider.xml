<Type Name="ThemeProvider" FullName="System.Web.UI.ThemeProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e75748f20ad8755b5d8a2cf4e255a3b3fad8adaa" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37529606" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ThemeProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ThemeProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ThemeProvider" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ThemeProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ThemeProvider sealed" />
  <TypeSignature Language="F#" Value="type ThemeProvider = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Fournit une classe qui encapsule des informations relatives au thème et à la feuille de style des contrôles dans un environnement concepteur.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les développeurs de pages et les auteurs de contrôles n’utilisent pas la <xref:System.Web.UI.ThemeProvider> classe. Générateurs de concepteur et outil de développeur ASP.NET utilisent le <xref:System.Web.UI.ThemeProvider> classe conjointement avec le <xref:System.Web.UI.SkinBuilder> classe et le <xref:System.Web.UI.IThemeResolutionService> interface pour appliquer des thèmes et leurs apparences de contrôle respectifs aux contrôles au moment du design.  
  
 Le <xref:System.Web.UI.ThemeProvider> classe encapsule les informations nécessaires pour appliquer un thème ou thème de feuille de style et ses apparences de contrôle aux contrôles enfants d’un contrôle dans un concepteur.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IThemeResolutionService" />
    <altmember cref="T:System.Web.UI.ControlBuilder" />
    <altmember cref="T:System.Web.UI.SkinBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ThemeProvider (System.ComponentModel.Design.IDesignerHost host, string name, string themeDefinition, string[] cssFiles, string themePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.IDesignerHost host, string name, string themeDefinition, string[] cssFiles, string themePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ThemeProvider.#ctor(System.ComponentModel.Design.IDesignerHost,System.String,System.String,System.String[],System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (host As IDesignerHost, name As String, themeDefinition As String, cssFiles As String(), themePath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ThemeProvider(System::ComponentModel::Design::IDesignerHost ^ host, System::String ^ name, System::String ^ themeDefinition, cli::array &lt;System::String ^&gt; ^ cssFiles, System::String ^ themePath);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.ThemeProvider : System.ComponentModel.Design.IDesignerHost * string * string * string[] * string -&gt; System.Web.UI.ThemeProvider" Usage="new System.Web.UI.ThemeProvider (host, name, themeDefinition, cssFiles, themePath)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="host" Type="System.ComponentModel.Design.IDesignerHost" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="themeDefinition" Type="System.String" />
        <Parameter Name="cssFiles" Type="System.String[]" />
        <Parameter Name="themePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="host">
          <see cref="T:System.ComponentModel.Design.IDesignerHost" /> représentant l'environnement concepteur actuel.</param>
        <param name="name">Nom du thème ou thème de feuille de style représenté par <see cref="T:System.Web.UI.ThemeProvider" />. Ce paramètre peut être <see langword="null" />.</param>
        <param name="themeDefinition">Les informations relatives au thème sont passées à la méthode <see cref="M:System.Web.UI.DesignTimeTemplateParser.ParseTheme(System.ComponentModel.Design.IDesignerHost,System.String,System.String)" />. Il s'agit du contenu brut et concaténé du thème.</param>
        <param name="cssFiles">Noms des fichiers de feuilles de style en cascade (CSS) inclus avec le thème représenté par <see cref="T:System.Web.UI.ThemeProvider" />.</param>
        <param name="themePath">Chemin d'accès absolu du fichier contenant le thème et des informations d'apparence de contrôle pour le thème en question.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.ThemeProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `themeDefinition` paramètre passé à la <xref:System.Web.UI.ThemeProvider.%23ctor%28System.ComponentModel.Design.IDesignerHost%2CSystem.String%2CSystem.String%2CSystem.String%5B%5D%2CSystem.String%29> constructeur représente la concaténation de toutes les apparences de contrôle associées au thème mais n’est pas exposé directement par le <xref:System.Web.UI.ThemeProvider> classe, que ce paramètre particulier est passé à un <xref:System.Web.UI.DesignTimeTemplateParser> pour récupérer un <xref:System.Web.UI.ControlBuilder> et n’est pas utilisé dans le cas contraire.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentHashCode">
      <MemberSignature Language="C#" Value="public int ContentHashCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ContentHashCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ThemeProvider.ContentHashCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentHashCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ContentHashCode { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ContentHashCode : int" Usage="System.Web.UI.ThemeProvider.ContentHashCode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le hachage de la définition du thème passé au constructeur.</summary>
        <value>Code de hachage pour la chaîne passée comme définition de thème au constructeur de classe.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CssFiles">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection CssFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection CssFiles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ThemeProvider.CssFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CssFiles As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ CssFiles { System::Collections::ICollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CssFiles : System.Collections.ICollection" Usage="System.Web.UI.ThemeProvider.CssFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un jeu de chaînes qui représente les noms de tous fichiers de feuilles de style en cascade (CSS) associés au thème actuel, si le thème est un thème de feuille de style.</summary>
        <value>
          <see cref="T:System.Collections.ICollection" /> de chaînes qui identifie les fichiers CSS associés au thème ou à celui de la feuille de style. Cette propriété peut retourner <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété est utilisée par les hôtes de concepteur pour ajouter des liens de feuille de style à des fichiers CSS lors du rendu HTML sur une aire de conception.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignerHost">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.IDesignerHost DesignerHost { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.IDesignerHost DesignerHost" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ThemeProvider.DesignerHost" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DesignerHost As IDesignerHost" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::IDesignerHost ^ DesignerHost { System::ComponentModel::Design::IDesignerHost ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DesignerHost : System.ComponentModel.Design.IDesignerHost" Usage="System.Web.UI.ThemeProvider.DesignerHost" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.IDesignerHost</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet <see cref="T:System.ComponentModel.Design.IDesignerHost" /> qui représente l'environnement concepteur courant.</summary>
        <value>
          <see cref="T:System.ComponentModel.Design.IDesignerHost" /> représentant l'environnement concepteur actuel.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesignerHost" />
      </Docs>
    </Member>
    <Member MemberName="GetSkinBuilder">
      <MemberSignature Language="C#" Value="public System.Web.UI.SkinBuilder GetSkinBuilder (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.SkinBuilder GetSkinBuilder(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ThemeProvider.GetSkinBuilder(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::SkinBuilder ^ GetSkinBuilder(System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="member this.GetSkinBuilder : System.Web.UI.Control -&gt; System.Web.UI.SkinBuilder" Usage="themeProvider.GetSkinBuilder control" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.SkinBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Contrôle auquel appliquer un thème et une apparence de contrôle.</param>
        <summary>Récupère une instance <see cref="T:System.Web.UI.SkinBuilder" /> pour le contrôle spécifié, qui est utilisée pour l'application d'un thème et d'une apparence de contrôle dans un environnement concepteur.</summary>
        <returns>Instance <see cref="T:System.Web.UI.SkinBuilder" />, éventuellement définie pour le type de contrôle spécifié ; sinon, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.ThemeProvider.GetSkinBuilder%2A> méthode est appelée par la <xref:System.Web.UI.ControlBuilder> classe de base pour appliquer un thème et une apparence de contrôle à un contrôle lorsqu’il est créé au moment du design.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ControlBuilder.BuildObject" />
      </Docs>
    </Member>
    <Member MemberName="GetSkinControlBuildersForControlType">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary GetSkinControlBuildersForControlType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionary GetSkinControlBuildersForControlType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ThemeProvider.GetSkinControlBuildersForControlType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionary ^ GetSkinControlBuildersForControlType(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetSkinControlBuildersForControlType : Type -&gt; System.Collections.IDictionary" Usage="themeProvider.GetSkinControlBuildersForControlType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Type" /> pour lequel des objets associés <see cref="T:System.Web.UI.ControlBuilder" /> doivent être récupérés.</param>
        <summary>Obtient un objet <see cref="T:System.Collections.IDictionary" /> qui contient un jeu d'objets <see cref="T:System.Web.UI.SkinBuilder" /> pour le <see cref="T:System.Type" /> spécifié.</summary>
        <returns>
          <see cref="T:System.Collections.IDictionary" /> contenant une liste d'un ou de plusieurs objets <see cref="T:System.Web.UI.ControlBuilder" /> associés au <see cref="T:System.Type" /> passé à la méthode. Cette liste est remplie avec des objets <see cref="T:System.Collections.DictionaryEntry" /> où le <see cref="P:System.Web.UI.Control.SkinID" /> est un <see cref="P:System.Collections.DictionaryEntry.Key" />, et son <see cref="T:System.Web.UI.SkinBuilder" /> associé est le <see cref="P:System.Collections.DictionaryEntry.Value" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSkinsForControl">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetSkinsForControl (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection GetSkinsForControl(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ThemeProvider.GetSkinsForControl(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetSkinsForControl(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetSkinsForControl : Type -&gt; System.Collections.ICollection" Usage="themeProvider.GetSkinsForControl type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">
          <see cref="T:System.Type" /> pour lequel récupérer des noms d'apparences associés.</param>
        <summary>Obtient un <see cref="T:System.Collections.ICollection" /> des identificateurs d'apparence associés au <see cref="T:System.Type" /> spécifié.</summary>
        <returns>
          <see cref="T:System.Collections.ICollection" /> d'identificateurs d'apparence, si les apparences de contrôle sont définies pour le <see cref="T:System.Type" /> spécifié. Si aucune apparence de contrôle n'est associée au type, un <see cref="T:System.Collections.ICollection" /> vide est retourné.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.ThemeProvider.GetSkinsForControl%2A> méthode est utilisée par les concepteurs pour remplir des listes de noms d’apparences de contrôle. Concepteurs d’utilisent la liste à lier aux éléments d’interface (UI) utilisateur ou pour afficher les propriétés de conception pour un type de contrôle donné.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ThemeName">
      <MemberSignature Language="C#" Value="public string ThemeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ThemeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ThemeProvider.ThemeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThemeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ThemeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThemeName : string" Usage="System.Web.UI.ThemeProvider.ThemeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom du thème ou le thème de feuille de style représenté par l'instance <see cref="T:System.Web.UI.ThemeProvider" />.</summary>
        <value>Nom du thème ou thème de feuille de style représenté par l'instance <see cref="T:System.Web.UI.ThemeProvider" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.ThemeProvider.ThemeName%2A> propriété est définie par le `name` propriété de la <xref:System.Web.UI.ThemeProvider.%23ctor%28System.ComponentModel.Design.IDesignerHost%2CSystem.String%2CSystem.String%2CSystem.String%5B%5D%2CSystem.String%29> constructeur.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>