<Type Name="Html32TextWriter" FullName="System.Web.UI.Html32TextWriter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8f2be68c050a5b383753b63b544a9149dbb02c76" /><Meta Name="ms.sourcegitcommit" Value="2dd0eede6edd6dd3d2aa8f79010848658b967609" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="04/18/2019" /><Meta Name="ms.locfileid" Value="58875214" /></Metadata><TypeSignature Language="C#" Value="public class Html32TextWriter : System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Html32TextWriter extends System.Web.UI.HtmlTextWriter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Html32TextWriter" />
  <TypeSignature Language="VB.NET" Value="Public Class Html32TextWriter&#xA;Inherits HtmlTextWriter" />
  <TypeSignature Language="C++ CLI" Value="public ref class Html32TextWriter : System::Web::UI::HtmlTextWriter" />
  <TypeSignature Language="F#" Value="type Html32TextWriter = class&#xA;    inherit HtmlTextWriter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlTextWriter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Écrit une série de caractères et du texte propres au langage HTML 3.2 dans le flux de sortie d’un contrôle serveur ASP.NET. La classe <see cref="T:System.Web.UI.Html32TextWriter" /> fournit des fonctionnalités de mise en forme utilisées par les contrôles serveur ASP.NET lors du rendu d’un contenu HTML 3.2 sur des clients.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Html32TextWriter> classe est une alternative à la <xref:System.Web.UI.HtmlTextWriter> classe. Il convertit les attributs de style HTML 4.0 dans les balises d’HTML 3.2 équivalente et les attributs. Elle normalise la propagation des attributs, tels que les couleurs et les polices à l’aide de tableaux HTML. ASP.NET utilise automatiquement cette classe pour les navigateurs HTML 3.2 et antérieures en vérifiant la <xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A> propriété de la <xref:System.Web.HttpBrowserCapabilities> classe. Sauf si vous créez une page personnalisée ou un adaptateur de contrôles ciblant des appareils qui utilisent le balisage HTML 3.2, vous n’avez pas besoin de créer une instance de la <xref:System.Web.UI.Html32TextWriter> classe explicitement.  
  
 Pour plus d’informations sur la personnalisation de page et le rendu du contrôle, consultez [procédure pas à pas : Contrôle serveur Web de développement et à l’aide d’un](https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser une classe nommée `CustomHtml32TextWriter`, qui dérive de la <xref:System.Web.UI.Html32TextWriter> classe. `CustomHtml32TextWriter` crée deux constructeurs qui suivent le modèle qui est établi par le <xref:System.Web.UI.HtmlTextWriter> classe et substitue le <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A>, <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A>, <xref:System.Web.UI.Html32TextWriter.RenderBeforeTag%2A>, et <xref:System.Web.UI.Html32TextWriter.RenderAfterTag%2A> méthodes.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#1)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlTextWriter" />
    <related type="Article" href="https://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08">Procédure pas à pas : Développement et à l’aide d’un contrôle serveur personnalisé</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.Html32TextWriter" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Html32TextWriter (System.IO.TextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.#ctor(System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Html32TextWriter(System::IO::TextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Html32TextWriter : System.IO.TextWriter -&gt; System.Web.UI.Html32TextWriter" Usage="new System.Web.UI.Html32TextWriter writer" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.IO.TextWriter" /> qui restitue le contenu HTML.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.Html32TextWriter" /> qui utilise la mise en retrait de ligne spécifiée dans le champ <see cref="F:System.Web.UI.HtmlTextWriter.DefaultTabString" /> lorsque le navigateur à l'origine de la demande requiert la mise en retrait de ligne.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Html32TextWriter.%23ctor%2A> constructeur passe le <xref:System.Web.UI.HtmlTextWriter.DefaultTabString> champ de valeur à une autre version qui a les deux paramètres suivants :  
  
-   `writer`, qui prend une instance de la <xref:System.IO.TextWriter> classe.  
  
-   `tabString`, qui accepte une chaîne qui définit la mise en retrait de ligne.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser une classe personnalisée qui dérive de la <xref:System.Web.UI.Html32TextWriter> classe. Il comprend deux constructeurs qui sont standard pour toutes les classes qui dérivent directement ou indirectement de la <xref:System.Web.UI.HtmlTextWriter> classe.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#1)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Html32TextWriter (System.IO.TextWriter writer, string tabString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.TextWriter writer, string tabString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.#ctor(System.IO.TextWriter,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (writer As TextWriter, tabString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Html32TextWriter(System::IO::TextWriter ^ writer, System::String ^ tabString);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Html32TextWriter : System.IO.TextWriter * string -&gt; System.Web.UI.Html32TextWriter" Usage="new System.Web.UI.Html32TextWriter (writer, tabString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="writer" Type="System.IO.TextWriter" />
        <Parameter Name="tabString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.IO.TextWriter" /> qui restitue le contenu HTML 3.2.</param>
        <param name="tabString">Chaîne qui représente le nombre d'espaces définis par la propriété <see cref="P:System.Web.UI.HtmlTextWriter.Indent" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.Html32TextWriter" /> qui utilise la mise en retrait de ligne spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment utiliser une classe personnalisée qui dérive de la <xref:System.Web.UI.Html32TextWriter> classe. Il comprend deux constructeurs qui sont standard pour toutes les classes qui dérivent directement ou indirectement de la <xref:System.Web.UI.HtmlTextWriter> classe.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#1)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextWriter" />
        <altmember cref="P:System.Web.UI.HtmlTextWriter.Indent" />
      </Docs>
    </Member>
    <Member MemberName="FontStack">
      <MemberSignature Language="C#" Value="protected System.Collections.Stack FontStack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Stack FontStack" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Html32TextWriter.FontStack" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property FontStack As Stack" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Stack ^ FontStack { System::Collections::Stack ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FontStack : System.Collections.Stack" Usage="System.Web.UI.Html32TextWriter.FontStack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Stack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une collection d'informations relative à la police que le code HTML doit restituer.</summary>
        <value>Collection d'informations sur la police.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTagName">
      <MemberSignature Language="C#" Value="protected override string GetTagName (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string GetTagName(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.GetTagName(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetTagName (tagKey As HtmlTextWriterTag) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ GetTagName(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="override this.GetTagName : System.Web.UI.HtmlTextWriterTag -&gt; string" Usage="html32TextWriter.GetTagName tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey">Valeur d'énumération <see cref="T:System.Web.UI.HtmlTextWriterTag" /> pour laquelle obtenir l'élément HTML.</param>
        <summary>Retourne l'élément HTML associé à la valeur d'énumération <see cref="T:System.Web.UI.HtmlTextWriterTag" /> spécifiée.</summary>
        <returns>Élément HTML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Web.UI.HtmlTextWriterTag.Div?displayProperty=nameWithType> champ est passé dans `tagKey` et <xref:System.Web.UI.Html32TextWriter.ShouldPerformDivTableSubstitution%2A> propriété est `true`, la <xref:System.Web.UI.Html32TextWriter.GetTagName%2A> méthode retourne le `table` élément.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStyleAttributeRender">
      <MemberSignature Language="C#" Value="protected override bool OnStyleAttributeRender (string name, string value, System.Web.UI.HtmlTextWriterStyle key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnStyleAttributeRender(string name, string value, valuetype System.Web.UI.HtmlTextWriterStyle key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.OnStyleAttributeRender(System.String,System.String,System.Web.UI.HtmlTextWriterStyle)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnStyleAttributeRender (name As String, value As String, key As HtmlTextWriterStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnStyleAttributeRender(System::String ^ name, System::String ^ value, System::Web::UI::HtmlTextWriterStyle key);" />
      <MemberSignature Language="F#" Value="override this.OnStyleAttributeRender : string * string * System.Web.UI.HtmlTextWriterStyle -&gt; bool" Usage="html32TextWriter.OnStyleAttributeRender (name, value, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterStyle" />
      </Parameters>
      <Docs>
        <param name="name">Attribut de style HTML à écrire dans le flux de sortie.</param>
        <param name="value">Valeur associée à l'attribut de style HTML.</param>
        <param name="key">Valeur d'énumération <see cref="T:System.Web.UI.HtmlTextWriterStyle" /> associée à l'attribut de style HTML.</param>
        <summary>Détermine s'il faut ou non écrire l'attribut de style HTML spécifié et sa valeur dans le flux de sortie.</summary>
        <returns><see langword="true" /> si l'attribut de style HTML et sa valeur sont rendus dans le flux de sortie ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.Html32TextWriter.OnStyleAttributeRender%2A> méthode prend en charge un plus petit nombre d’attributs de style HTML à le <xref:System.Web.UI.Html32TextWriter.OnStyleAttributeRender%2A> méthode qu’elle remplace.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTagRender">
      <MemberSignature Language="C#" Value="protected override bool OnTagRender (string name, System.Web.UI.HtmlTextWriterTag key);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnTagRender(string name, valuetype System.Web.UI.HtmlTextWriterTag key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.OnTagRender(System.String,System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnTagRender (name As String, key As HtmlTextWriterTag) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnTagRender(System::String ^ name, System::Web::UI::HtmlTextWriterTag key);" />
      <MemberSignature Language="F#" Value="override this.OnTagRender : string * System.Web.UI.HtmlTextWriterTag -&gt; bool" Usage="html32TextWriter.OnTagRender (name, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="key" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="name">Élément HTML à écrire dans le flux de sortie.</param>
        <param name="key">Valeur d'énumération <see cref="T:System.Web.UI.HtmlTextWriterTag" /> associée à l'élément HTML.</param>
        <summary>Détermine s'il faut écrire l'élément HTML spécifié dans le flux de sortie.</summary>
        <returns><see langword="true" /> si l'élément HTML est écrit dans le flux de sortie ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Web.UI.Html32TextWriter.ShouldPerformDivTableSubstitution%2A> propriété est `true`, le <xref:System.Web.UI.Html32TextWriter.OnTagRender%2A> méthode remplace tout `div` éléments rendus par un contrôle avec `table` éléments.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderAfterContent">
      <MemberSignature Language="C#" Value="protected override string RenderAfterContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string RenderAfterContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderAfterContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RenderAfterContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ RenderAfterContent();" />
      <MemberSignature Language="F#" Value="override this.RenderAfterContent : unit -&gt; string" Usage="html32TextWriter.RenderAfterContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ecrit tout texte ou espacement qui suit le contenu de l'élément HTML.</summary>
        <returns>L'espacement ou le texte à écrire à la suite du contenu de l'élément HTML ; sinon, en l'absence de telles informations à restituer, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> (méthode). Chaque substitution de méthode vérifie d’abord si un `th` élément est rendu, puis utilise le <xref:System.Web.UI.Html32TextWriter.SupportsBold%2A> méthode permettant de vérifier si l’appareil demandeur peut afficher en gras. Si l’appareil prend en charge la mise en forme en gras, le <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> méthode écrit la balise de fermeture d’un `b` élément. Si l’appareil ne prend pas en charge la mise en forme en gras, le <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> méthode écrit la balise de fermeture d’un `font` élément.  
  
 Ensuite, le code vérifie si un `h4` élément est rendu, puis utilise le <xref:System.Web.UI.Html32TextWriter.SupportsItalic%2A> propriété à vérifier si l’appareil demandeur peut afficher la mise en forme en italique. Si l’appareil prend en charge la mise en forme en italique, le <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> méthode écrit la balise de fermeture d’un `i` élément. Si l’appareil ne prend pas en charge la mise en forme en italique, le <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> méthode écrit la balise de fermeture d’un `font` élément.  
  
 Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.Html32TextWriter> classe.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#4)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderBeforeContent" />
      </Docs>
    </Member>
    <Member MemberName="RenderAfterTag">
      <MemberSignature Language="C#" Value="protected override string RenderAfterTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string RenderAfterTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderAfterTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RenderAfterTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ RenderAfterTag();" />
      <MemberSignature Language="F#" Value="override this.RenderAfterTag : unit -&gt; string" Usage="html32TextWriter.RenderAfterTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Écrit l'espacement ou le texte survenant après la balise de fermeture d'un élément HTML.</summary>
        <returns>L'espacement ou le texte à écrire à la suite de la balise de fermeture de l'élément HTML ; sinon, en l'absence de telles informations à restituer, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.Html32TextWriter.RenderAfterTag%2A> (méthode). Le code vérifie si un `a` élément est rendu. Dans ce cas, le <xref:System.Web.UI.Html32TextWriter.RenderAfterTag%2A> méthode écrit la balise de fermeture d’un `small` élément. L’exemple pour le <xref:System.Web.UI.Html32TextWriter.RenderBeforeTag%2A> méthode effectue la même vérification pour le `a` élément, puis écrit la balise d’ouverture de la `small` élément.  
  
 Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.Html32TextWriter> classe.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#5)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderBeforeTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeContent">
      <MemberSignature Language="C#" Value="protected override string RenderBeforeContent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string RenderBeforeContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderBeforeContent" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RenderBeforeContent () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ RenderBeforeContent();" />
      <MemberSignature Language="F#" Value="override this.RenderBeforeContent : unit -&gt; string" Usage="html32TextWriter.RenderBeforeContent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Écrit l'espacement des tabulations ou les informations relatives aux polices qui apparaissent avant le contenu d'un élément HTML.</summary>
        <returns>Informations sur la police ou espacement à écrire avant de restituer le contenu de l'élément HTML ; sinon, en l'absence de telles informations à restituer, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> (méthode). Le code vérifie si un `th` élément est rendu, puis utilise le <xref:System.Web.UI.Html32TextWriter.SupportsBold%2A> méthode permettant de vérifier si l’appareil demandeur peut afficher en gras. Si l’appareil prend en charge la mise en forme en gras, le <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> méthode écrit la balise d’ouverture d’un `b` élément. Si l’appareil ne prend pas en charge la mise en forme en gras, le <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> méthode écrit la balise d’ouverture d’un `font` élément avec un `color` attribut défini sur la valeur hexadécimale pour le rouge.  
  
 Ensuite, chaque méthode vérifie si un `h4` élément est rendu, puis utilise le <xref:System.Web.UI.Html32TextWriter.SupportsItalic%2A> propriété à vérifier si l’appareil demandeur peut afficher la mise en forme en italique. Si l’appareil prend en charge la mise en forme en italique, le <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> méthode écrit la balise d’ouverture d’un `i` élément. Si l’appareil ne prend pas en charge la mise en forme en italique, le <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> méthode écrit la balise d’ouverture d’un `font` élément avec un `color` attribut défini sur la valeur hexadécimale bleu marine.  
  
 Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.Html32TextWriter> classe.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#2)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderAfterContent" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeforeTag">
      <MemberSignature Language="C#" Value="protected override string RenderBeforeTag ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance string RenderBeforeTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderBeforeTag" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function RenderBeforeTag () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::String ^ RenderBeforeTag();" />
      <MemberSignature Language="F#" Value="override this.RenderBeforeTag : unit -&gt; string" Usage="html32TextWriter.RenderBeforeTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Écrit le texte ou l’espacement qui se trouvent avant la balise d’ouverture de l’élément HTML dans le flux de sortie HTML 3.2.</summary>
        <returns>Informations HTML sur les polices et l'espacement à rendre avant la balise ; sinon, s'il n'existe aucune information de la sorte à rendre, <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.Html32TextWriter.RenderBeforeTag%2A> (méthode). Le code vérifie si un `a` élément est rendu. Dans ce cas, substituées <xref:System.Web.UI.Html32TextWriter.RenderBeforeTag%2A> méthode écrit la balise d’ouverture d’un `small` élément. L’exemple pour le <xref:System.Web.UI.Html32TextWriter.RenderAfterTag%2A> effectue la même vérification pour le `a` élément, puis écrit la balise de fermeture de la `small` élément.  
  
 Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.Html32TextWriter> classe.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#3)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderAfterTag" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(valuetype System.Web.UI.HtmlTextWriterTag tagKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderBeginTag(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderBeginTag (tagKey As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriterTag tagKey);" />
      <MemberSignature Language="F#" Value="override this.RenderBeginTag : System.Web.UI.HtmlTextWriterTag -&gt; unit" Usage="html32TextWriter.RenderBeginTag tagKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tagKey" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tagKey">Valeur d'énumération <see cref="T:System.Web.UI.HtmlTextWriterTag" /> qui indique l'élément HTML à écrire.</param>
        <summary>Écrit la balise d’ouverture de l’élément spécifié dans le flux de sortie HTML 3.2.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si un `div` élément est spécifié et le <xref:System.Web.UI.Html32TextWriter.ShouldPerformDivTableSubstitution%2A> valeur de propriété est `true`, le <xref:System.Web.UI.Html32TextWriter.RenderBeginTag%2A> méthode effectue base `table` élément mise en forme pour présenter le contenu qui est contenu dans le `div` élément.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Html32TextWriter.RenderEndTag" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderEndTag ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderEndTag();" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : unit -&gt; unit" Usage="html32TextWriter.RenderEndTag " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Écrit la balise de fin d'un élément HTML dans le flux de sortie <see cref="T:System.Web.UI.Html32TextWriter" />, accompagnée d'informations sur les polices associées à l'élément.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldPerformDivTableSubstitution">
      <MemberSignature Language="C#" Value="public bool ShouldPerformDivTableSubstitution { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShouldPerformDivTableSubstitution" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Html32TextWriter.ShouldPerformDivTableSubstitution" />
      <MemberSignature Language="VB.NET" Value="Public Property ShouldPerformDivTableSubstitution As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShouldPerformDivTableSubstitution { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShouldPerformDivTableSubstitution : bool with get, set" Usage="System.Web.UI.Html32TextWriter.ShouldPerformDivTableSubstitution" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur Boolean qui indique s'il faut ou non remplacer un élément <see langword="Table" /> par un élément <see langword="Div" /> pour réduire le délai nécessaire au rendu d'un bloc de code HTML.</summary>
        <value><see langword="true" /> pour remplacer <see langword="Table" /> par <see langword="Div" /> ; sinon, <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsBold">
      <MemberSignature Language="C#" Value="public bool SupportsBold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsBold" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Html32TextWriter.SupportsBold" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportsBold As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsBold { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SupportsBold : bool with get, set" Usage="System.Web.UI.Html32TextWriter.SupportsBold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur Boolean qui indique si l'appareil demandeur prend en charge le texte HTML gras. Utilisez la propriété <see cref="P:System.Web.UI.Html32TextWriter.SupportsBold" /> pour restituer le texte gras de manière conditionnelle dans le flux de sortie <see cref="T:System.Web.UI.Html32TextWriter" />.</summary>
        <value><see langword="true" /> si l'appareil demandeur prend en charge le texte gras ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> et <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> méthodes. Chaque substitution vérifie si un `Label` élément est rendu, puis utilise le <xref:System.Web.UI.Html32TextWriter.SupportsBold%2A> méthode permettant de vérifier si l’appareil demandeur peut afficher en gras. Si l’appareil prend en charge la mise en forme en gras, le <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> méthode écrit la balise d’ouverture d’un `b` élément et le <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> méthode écrit la balise de fermeture. Si l’appareil ne prend pas en charge la mise en forme en gras, le <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> méthode écrit la balise d’ouverture d’un `Font` élément avec un `color` attribut la valeur hexadécimale pour le rouge et la <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> méthode écrit la balise de fermeture.  
  
 Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.Html32TextWriter> classe.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#2)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderBeforeContent" />
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderAfterContent" />
        <altmember cref="P:System.Web.UI.Html32TextWriter.SupportsItalic" />
      </Docs>
    </Member>
    <Member MemberName="SupportsItalic">
      <MemberSignature Language="C#" Value="public bool SupportsItalic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsItalic" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Html32TextWriter.SupportsItalic" />
      <MemberSignature Language="VB.NET" Value="Public Property SupportsItalic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SupportsItalic { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.SupportsItalic : bool with get, set" Usage="System.Web.UI.Html32TextWriter.SupportsItalic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur Boolean qui indique si l'appareil demandeur prend en charge le texte HTML en italique. Utilisez la propriété <see cref="P:System.Web.UI.Html32TextWriter.SupportsItalic" /> pour restituer le texte en italique de manière conditionnelle dans le flux de sortie <see cref="T:System.Web.UI.Html32TextWriter" />.</summary>
        <value><see langword="true" /> si l'appareil demandeur prend en charge le texte en italique ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> et <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> méthodes. Chaque substitution vérifie si un `span` élément est rendu, puis utilise le <xref:System.Web.UI.Html32TextWriter.SupportsItalic%2A> propriété à vérifier si l’appareil demandeur peut afficher la mise en forme en italique. Si l’appareil prend en charge la mise en forme en italique, le <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> méthode écrit la balise d’ouverture d’un `i` élément et le <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> méthode écrit la balise de fermeture. Si l’appareil ne prend pas en charge la mise en forme en italique, le <xref:System.Web.UI.Html32TextWriter.RenderBeforeContent%2A> méthode écrit la balise d’ouverture d’un `Font` élément avec un `color` attribut la valeur hexadécimale pour le bleu foncé, bleu et la <xref:System.Web.UI.Html32TextWriter.RenderAfterContent%2A> méthode écrit la balise de fermeture.  
  
 Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.Html32TextWriter> classe.  
  
 [!code-csharp[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/cs/html32textwritersamps.cs#2)]
 [!code-vb[System.Web.UI.Html32TextWriter_Samples1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Html32TextWriter_Samples1/VB/html32textwritersamps.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderBeforeContent" />
        <altmember cref="M:System.Web.UI.Html32TextWriter.RenderAfterContent" />
        <altmember cref="P:System.Web.UI.Html32TextWriter.SupportsBold" />
      </Docs>
    </Member>
  </Members>
</Type>