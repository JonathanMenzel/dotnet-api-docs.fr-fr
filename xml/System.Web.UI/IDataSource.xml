<Type Name="IDataSource" FullName="System.Web.UI.IDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2fd9f5f59442c7630b462fbf485465dfc7c41206" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30607383" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDataSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDataSource" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Représente une source de données abstraite à laquelle associer les contrôles liés aux données.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET prend en charge une architecture de liaison de données de contrôle qui permet aux contrôles de serveur Web lier aux données de façon cohérente. Contrôles serveur Web liés aux données sont appelés contrôles liés aux données et les classes qui facilitent cette liaison sont appelées contrôles de source de données. Contrôles de source de données peuvent représenter n’importe quelle source de données : une base de données relationnelle, un fichier, un flux de données, un objet métier et ainsi de suite. Les contrôles de source de données présentent les données de façon cohérente à des contrôles liés aux données, quelle que soit la source ou le format des données sous-jacentes.  
  
 Vous implémentez le <xref:System.Web.UI.IDataSource> interface lorsque vous souhaitez implémenter votre propre contrôle de source de données ASP.NET personnalisé.  
  
 Toute classe qui implémente le <xref:System.Web.UI.IDataSource> interface est un contrôle de source de données. Le <xref:System.Web.UI.IDataSource> interface sert de contrôle de la base de toutes les sources de données ASP.NET et définit un des concepts d’architecture de liaison de données fondamental avec ses deux méthodes : la <xref:System.Web.UI.IDataSource.GetView%2A> (méthode) et le <xref:System.Web.UI.IDataSource.GetViewNames%2A> (méthode). Ce concept est que tous les contrôles de source de données prend en charge un ou plusieurs affichages nommés sur leurs données. L’objet de vue de source de données est similaire à la <xref:System.Data.DataView> abstraction dans le <xref:System.Data> espace de noms : personnalisé au, pouvant être lié et affichage des données pour le tri, filtrage et d’autres opérations de données par l’affichage. Fondamentalement, une source de données n’exécute aucune opération de contrôle plus que récupérer des affichages de données.  
  
 Un contrôle de source de données peut avoir un ou plusieurs objets de vue de source de données associé. Certaines données de contrôles de source, y compris ceux qui représentent des bases de données relationnelles comme <xref:System.Web.UI.WebControls.SqlDataSource> et <xref:System.Web.UI.WebControls.AccessDataSource>, prennent en charge qu’un seul affichage. Autres source de données des contrôles, y compris les contrôles de source de données hiérarchiques <xref:System.Web.UI.WebControls.SiteMapDataSource>, prennent en charge plusieurs vues. La vue de source de données définit les fonctions d’une source de données et les opérations qu’il prend en charge.  
  
 En résumé, les contrôles de source de données implémentent la <xref:System.Web.UI.IDataSource> de l’interface, prend en charge un ou plusieurs affichages sur les données qu’ils représentent et prennent toujours en charge la récupération des données à partir de la source de données qu’ils représentent. Contrôles de source de données récupèrent toujours des données à la demande, par exemple lorsque `DataBind` est appelée sur un contrôle lié aux données.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment une classe peut implémenter les méthodes définies par le <xref:System.Web.UI.IDataSource> interface pour fournir des données à des contrôles liés aux données. Le contrôle de source de données dans cet exemple agit comme une source de données sur un fichier de valeurs séparées par des virgules et peut être utilisé par n’importe quel contrôle lié aux données pour afficher les données de fichier CSV. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.DataSourceControl> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
  </Docs>
  <Members>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.IDataSource.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque la modification d'un contrôle de source de données affecte les contrôles liés aux données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.IDataSource.DataSourceChanged> événement est déclenché lorsque les propriétés d’un contrôle lié aux données ou les données sous-jacentes a changé d’une manière qui affecte les liaisons de données entre un contrôle lié aux données et ses données. Par exemple, l’événement est déclenché si un fichier de nom de propriété, tel que le <xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A> propriété, est modifiée sur un contrôle de source de données de fichiers.  
  
 Pour plus d’informations sur la gestion des événements, consultez [NIB : consommation d’événements](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="public System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Nom de l'affichage à récupérer.</param>
        <summary>Obtient l'affichage de source de données associé au contrôle de source de données.</summary>
        <returns>Retourne le <see cref="T:System.Web.UI.DataSourceView" /> nommé associé au <see cref="T:System.Web.UI.IDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Classes de contrôle de source de données peuvent prendre en charge une ou plusieurs vues sur leurs données sous-jacentes. Ces vues sont représentés par des instances de la <xref:System.Web.UI.DataSourceView> classe. La vue de source de données définit les fonctionnalités d’un contrôle de source de données et effectue le travail nécessaire pour récupérer des données à partir de la banque de données sous-jacente et effectuer des opérations telles que le tri, d’insertion, de suppression et de mise à jour.  
  
 Classes de contrôle de source de données qui implémentent la <xref:System.Web.UI.IDataSource> interface implémentent la <xref:System.Web.UI.IDataSource.GetView%2A> retour fortement typée de méthode afficher les objets associés à la classe.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment une classe de contrôle de source de données qui implémente le <xref:System.Web.UI.IDataSource> interface implémente le <xref:System.Web.UI.IDataSource.GetView%2A> méthode, en retournant une instance fortement typée de la <xref:System.Web.UI.DataSourceView> classe. Étant donné que le contrôle de source de données prend en charge qu’une seule vue, il ignore le nom et retourne une vue nommée avec le nom de la vue par défaut. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.DataSourceControl> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IDataSource.GetViewNames" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Public Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetViewNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient une collection des noms qui représentent la liste d'objets d'affichage associée à l'interface <see cref="T:System.Web.UI.IDataSource" />.</summary>
        <returns>
          <see cref="T:System.Collections.ICollection" /> contenant les noms des affichages associés au <see cref="T:System.Web.UI.IDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Classes de contrôle de source de données peuvent prendre en charge un ou plusieurs affichages nommés sur leurs données sous-jacentes. Le <xref:System.Web.UI.IDataSource.GetViewNames%2A> méthode retourne une collection de noms d’affichage associé à l’instance de contrôle de source de données. Appelants peuvent parcourir la collection de noms d’affichage et récupérer des <xref:System.Web.UI.DataSourceView> objets avec le <xref:System.Web.UI.IDataSource.GetView%2A> (méthode).  
  
 Classes de contrôle de source de données qui implémentent la <xref:System.Web.UI.IDataSource> interface implémentent la <xref:System.Web.UI.IDataSource.GetViewNames%2A> méthode pour retourner une collection de noms qui représente la source de données afficher les objets actuellement associés à la classe de contrôle de source de données.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment un contrôle de source de données qui implémente le <xref:System.Web.UI.IDataSource> interface implémente le <xref:System.Web.UI.IDataSource.GetViewNames%2A> méthode, en retournant un <xref:System.Collections.ICollection> collection de noms. Étant donné que la source de données prend en charge qu’une seule vue, la méthode retourne une collection d’un élément en utilisant le nom par défaut pour la vue. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.DataSourceControl> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#4)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
  </Members>
</Type>