<Type Name="ConflictOptions" FullName="System.Web.UI.ConflictOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dff7dbbe50196456c8014e8d0eee632fceedaa6b" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37588925" /></Metadata><TypeSignature Language="C#" Value="public enum ConflictOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ConflictOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ConflictOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum ConflictOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class ConflictOptions" />
  <TypeSignature Language="F#" Value="type ConflictOptions = " />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary><span data-ttu-id="31d2e-101">Détermine le mode de gestion des conflits de données par les contrôles de source de données ASP.NET lors de la mise à jour ou de la suppression des données.</span><span class="sxs-lookup"><span data-stu-id="31d2e-101">Determines how ASP.NET data source controls handle data conflicts when updating or deleting data.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31d2e-102">Contrôle d’accès concurrentiel est une technique utilisée par les magasins de données pour contrôler comment les données sont lues et modifiées dans les magasins lorsque plusieurs clients accèdent et manipulent les mêmes données.</span><span class="sxs-lookup"><span data-stu-id="31d2e-102">Concurrency control is a technique that data stores use to control how data is read and changed in the store when multiple clients are accessing and manipulating the same data.</span></span> <span data-ttu-id="31d2e-103">Par exemple, un client lit les données et présente à un utilisateur, tandis que d’un autre client lit les mêmes données et les présente à un autre utilisateur.</span><span class="sxs-lookup"><span data-stu-id="31d2e-103">For example, one client reads data and presents it to a user, while another client reads the same data, and presents it to a different user.</span></span> <span data-ttu-id="31d2e-104">Si les deux utilisateurs mettre à jour les données et les envoient au stockage des données, un résultat inattendu peut se produire, car les clients peuvent mettre à jour des valeurs différentes pour les mêmes données.</span><span class="sxs-lookup"><span data-stu-id="31d2e-104">If both users update the data and submit it to the data storage, some unexpected result might occur, because the clients might update different values for the same data.</span></span> <span data-ttu-id="31d2e-105">Cela est considéré comme un conflit.</span><span class="sxs-lookup"><span data-stu-id="31d2e-105">This is considered a conflict.</span></span>  
  
 <span data-ttu-id="31d2e-106">Le `ConflictDetection` propriété qui est définie pour les contrôles de source de données ASP.NET est utilisée pour déterminer comment un contrôle gère les conflits de données dans le stockage de données sous-jacent lorsque le stockage de données sous-jacent est à l’aide de l’accès concurrentiel optimiste, de suppression ou l’opération de mise à jour est effectuée.</span><span class="sxs-lookup"><span data-stu-id="31d2e-106">The `ConflictDetection` property that is defined for ASP.NET data source controls is used to determine how a control handles data conflicts in the underlying data storage when the underlying data storage is using optimistic concurrency and a delete or update operation is performed.</span></span>  
  
 <span data-ttu-id="31d2e-107">Par défaut, le `ConflictDetection` propriété est définie sur OverwriteChanges, ce qui signifie que le contrôle de source de données remplacera toute modification apportée à une ligne de données entre l’heure que le contrôle de source de données première lecture des données à partir de la ligne et l’heure à laquelle la ligne est mise à jour.</span><span class="sxs-lookup"><span data-stu-id="31d2e-107">By default, the `ConflictDetection` property is set to OverwriteChanges, which means the data source control will overwrite any changes made to a data row between the time the data source control first read data from the row and the time that the row is updated.</span></span> <span data-ttu-id="31d2e-108">La clé primaire est utilisée pour localiser la ligne de données qui sera mis à jour ou supprimée, mais aucune autre comparaison des données n’est effectuée.</span><span class="sxs-lookup"><span data-stu-id="31d2e-108">The primary key is used for locating the data row that will be updated or deleted, but no other comparison of the data is performed.</span></span> <span data-ttu-id="31d2e-109">Si le contrôle de source de données est configuré pour utiliser l’option CompareAllValues, toutefois, le contrôle passe les données d’origine dans le `oldValues` collections de la `Update` et `Delete` méthodes afin que vous pouvez écrire une logique pour mettre à jour ou supprimer des données uniquement si Ces valeurs correspondent aux valeurs actuellement dans le stockage de données.</span><span class="sxs-lookup"><span data-stu-id="31d2e-109">If the data source control is configured to use the CompareAllValues option, however, the control passes the original data in the `oldValues` collections of the `Update` and `Delete` methods so that you can write logic to update or delete data only if these values match the values currently in the data storage.</span></span> <span data-ttu-id="31d2e-110">Les valeurs correspondantes indiquent que les données n’a pas changé depuis l’heure de que été lue.</span><span class="sxs-lookup"><span data-stu-id="31d2e-110">The matching values indicate that the data has not changed since the time it was read.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection" />
  </Docs>
  <Members>
    <Member MemberName="CompareAllValues">
      <MemberSignature Language="C#" Value="CompareAllValues" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ConflictOptions CompareAllValues = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ConflictOptions.CompareAllValues" />
      <MemberSignature Language="VB.NET" Value="CompareAllValues" />
      <MemberSignature Language="C++ CLI" Value="CompareAllValues" />
      <MemberSignature Language="F#" Value="CompareAllValues = 1" Usage="System.Web.UI.ConflictOptions.CompareAllValues" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="31d2e-111">Un contrôle de source de données utilise la collection <paramref name="oldValues" /> des méthodes <see langword="Update" /> et <see langword="Delete" /> pour déterminer si les données ont été modifiées par un autre processus.</span><span class="sxs-lookup"><span data-stu-id="31d2e-111">A data source control uses the <paramref name="oldValues" /> collection of the <see langword="Update" /> and <see langword="Delete" /> methods to determine whether the data has been changed by another process.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="OverwriteChanges">
      <MemberSignature Language="C#" Value="OverwriteChanges" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ConflictOptions OverwriteChanges = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ConflictOptions.OverwriteChanges" />
      <MemberSignature Language="VB.NET" Value="OverwriteChanges" />
      <MemberSignature Language="C++ CLI" Value="OverwriteChanges" />
      <MemberSignature Language="F#" Value="OverwriteChanges = 0" Usage="System.Web.UI.ConflictOptions.OverwriteChanges" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="31d2e-112">Un contrôle de source de données remplace toutes les valeurs dans une ligne de données par ses propres valeurs de ligne.</span><span class="sxs-lookup"><span data-stu-id="31d2e-112">A data source control overwrites all values in a data row with its own values for the row.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>