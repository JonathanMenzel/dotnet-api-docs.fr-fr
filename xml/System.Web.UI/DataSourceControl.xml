<Type Name="DataSourceControl" FullName="System.Web.UI.DataSourceControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7a29636cf5fd01a1eb4e368d6eb8623ab95807cc" />
    <Meta Name="ms.sourcegitcommit" Value="4f9e960e786edf67b6a29655670b1a15e71c03de" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="08/02/2018" />
    <Meta Name="ms.locfileid" Value="39417651" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DataSourceControl : System.Web.UI.Control, System.ComponentModel.IListSource, System.Web.UI.IDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataSourceControl extends System.Web.UI.Control implements class System.ComponentModel.IListSource, class System.Web.UI.IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataSourceControl" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataSourceControl&#xA;Inherits Control&#xA;Implements IDataSource, IListSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceControl abstract : System::Web::UI::Control, System::ComponentModel::IListSource, System::Web::UI::IDataSource" />
  <TypeSignature Language="F#" Value="type DataSourceControl = class&#xA;    inherit Control&#xA;    interface IDataSource&#xA;    interface IListSource" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.DataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.DataSourceControlBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Sert de classe de base pour les contrôles qui représentent des sources de données pour des contrôles liés aux données.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET prend en charge une architecture de liaison de données de contrôle qui permet aux contrôles de serveur Web lier aux données de façon cohérente. Les contrôles serveur Web liés aux données sont appelés contrôles liés aux données et les classes qui facilitent cette liaison sont appelées des contrôles de source de données. Contrôles de source de données peuvent représenter n’importe quelle source de données : une base de données relationnelle, un fichier, un flux, un objet métier et ainsi de suite. Les contrôles de source de données présentent les données de manière cohérente pour les contrôles liés aux données, quelle que soit la source ou le format des données sous-jacentes.  
  
 Vous utilisez les contrôles de source de données qui sont fournis avec ASP.NET, y compris <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.AccessDataSource>, et <xref:System.Web.UI.WebControls.XmlDataSource>, pour effectuer la plupart des tâches de développement Web. Vous utilisez la base de <xref:System.Web.UI.DataSourceControl> classe lorsque vous souhaitez implémenter votre propre contrôle de source de données personnalisées.  
  
 Tandis que la classe qui implémente le <xref:System.Web.UI.IDataSource> interface est un contrôle de source de données, la plupart des contrôles de source de données ASP.NET étendent l’abstraite <xref:System.Web.UI.DataSourceControl> (classe), qui fournit une implémentation de base de la <xref:System.Web.UI.IDataSource> interface. Le <xref:System.Web.UI.DataSourceControl> classe fournit également une implémentation de la <xref:System.ComponentModel.IListSource> interface, ce qui vous permet d’attribuer par programmation le contrôle de source de données à le `DataSource` propriété d’un contrôle lié aux données et de renvoyer les données vers le contrôle comme une liste de base.  
  
 N’importe quel contrôle ASP.NET qui dérive de la <xref:System.Web.UI.WebControls.DataBoundControl> classe peut lier à un contrôle de source de données. Quand un <xref:System.Web.UI.WebControls.DataBoundControl> est lié à un contrôle de source de données, la liaison de données est effectuée automatiquement au moment de l’exécution. Vous pouvez également utiliser des contrôles de source de données avec les contrôles ASP.NET qui exposent un `DataSource` ou `DataSourceID` propriété et de liaison de données de base de prise en charge, mais elles sont non dérivées de <xref:System.Web.UI.WebControls.DataBoundControl>. Lorsque vous utilisez ces contrôles liés aux données, vous devez appeler explicitement la `DataBind` (méthode). Pour plus d’informations sur la liaison de données, consultez [ASP.NET Data Access Content Map](http://msdn.microsoft.com/library/f9219396-a0fa-481f-894d-e3d9c67d64f2).  
  
 Vous pouvez considérer un contrôle de source de données comme la combinaison de la <xref:System.Web.UI.DataSourceControl> objet et ses listes associées de données, appelées des vues de sources de données. Chaque liste de données est représentée par un <xref:System.Web.UI.DataSourceView> objet. Étant donné que le stockage de données sous-jacent contient une ou plusieurs listes de données, un <xref:System.Web.UI.DataSourceControl> est toujours associé à un ou plus nommé <xref:System.Web.UI.DataSourceView> objets. Le <xref:System.Web.UI.IDataSource> interface définit les méthodes que tous les contrôles de source de données utilisent pour interagir avec des vues de source de données : le <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> méthode est utilisée pour énumérer les vues de source de données actuellement associés au contrôle de source de données et le <xref:System.Web.UI.DataSourceControl.GetView%2A> méthode est utilisée pour récupérer une instance de vue de source de données spécifique par nom.  
  
 Vous pouvez également considérer le contrôle de source de données comme distinctes deux interfaces utilisées par les appelants pour accéder aux données. Le <xref:System.Web.UI.DataSourceControl> classe est l’interface que les développeurs de pages interagissent directement avec lors du développement d’une page Web Forms, et la <xref:System.Web.UI.DataSourceView> classe est l’interface qui interagissent les contrôles liés aux données et les auteurs de contrôle lié aux données. Étant donné que le <xref:System.Web.UI.DataSourceView> objet n’est disponible uniquement au moment de l’exécution, de l’état persistant pour le contrôle de source de données ou de vue de source de données doit être exposé directement par le contrôle de source de données.  
  
 Il n’existe aucun rendu visuel des contrôles de source de données ASP.NET ; ils sont implémentés en tant que contrôles afin de les créer de façon déclarative et si vous le souhaitez leur permettre de participer à la gestion d’état. Par conséquent, les contrôles de source de données ne pas prennent en charge les fonctionnalités de visual telles que <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> ou <xref:System.Web.UI.DataSourceControl.SkinID%2A>.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment une classe peut étendre la <xref:System.Web.UI.DataSourceControl> classe. Le `CsvDataSource` contrôle représente les données de fichier séparées par des virgules stockées dans un fichier .csv. Le `CsvDataSource` classe fournit ses propres implémentations de la <xref:System.Web.UI.DataSourceControl.GetView%2A>, <xref:System.Web.UI.DataSourceControl.GetViewNames%2A>et d’autres méthodes, car les implémentations de classe de base ne sont pas fonctionnelles.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#1)]  
  
 L’exemple de code suivant montre comment utiliser le `CsvDataSource` contrôle dans un formulaire Web.  
  
 [!code-aspx-csharp[Urtue.Samples.Alexkr.CsvDataSource_1_webform#50](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1_webform/CS/webform6cs.aspx#50)]
 [!code-aspx-vb[Urtue.Samples.Alexkr.CsvDataSource_1_webform#50](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1_webform/VB/webform6vb.aspx#50)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.DataBoundControl" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataSourceControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataSourceControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.DataSourceControl" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplyStyleSheetSkin">
      <MemberSignature Language="C#" Value="public override void ApplyStyleSheetSkin (System.Web.UI.Page page);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ApplyStyleSheetSkin(class System.Web.UI.Page page) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.ApplyStyleSheetSkin(System.Web.UI.Page)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ApplyStyleSheetSkin(System::Web::UI::Page ^ page);" />
      <MemberSignature Language="F#" Value="override this.ApplyStyleSheetSkin : System.Web.UI.Page -&gt; unit" Usage="dataSourceControl.ApplyStyleSheetSkin page" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="page" Type="System.Web.UI.Page" />
      </Parameters>
      <Docs>
        <param name="page">
          <see cref="T:System.Web.UI.Page" /> contenant le contrôle.</param>
        <summary>Applique les propriétés de style qui sont définies dans la feuille de style de la page au contrôle.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ClientID : string" Usage="System.Web.UI.DataSourceControl.ClientID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'identificateur de contrôle serveur généré par ASP.NET.</summary>
        <value>Identificateur de contrôle serveur généré par ASP.NET.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientIDMode">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ClientIDMode ClientIDMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ClientIDMode ClientIDMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.ClientIDMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ClientIDMode As ClientIDMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ClientIDMode ClientIDMode { System::Web::UI::ClientIDMode get(); void set(System::Web::UI::ClientIDMode value); };" />
      <MemberSignature Language="F#" Value="member this.ClientIDMode : System.Web.UI.ClientIDMode with get, set" Usage="System.Web.UI.DataSourceControl.ClientIDMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ClientIDMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Cette propriété n'est pas utilisée pour les contrôles de source de données.</summary>
        <value>Cette propriété n'est pas utilisée pour les contrôles de source de données.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété de la <xref:System.Web.UI.Control> classe de base n’est pas utilisée pour les contrôles de source de données, car les contrôles de source de données ne sont pas rendent de balisage.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Une tentative de définition de cette propriété a été effectuée.</exception>
        <altmember cref="P:System.Web.UI.Control.ClientIDMode" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.DataSourceControl.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet <see cref="T:System.Web.UI.ControlCollection" /> qui représente les contrôles enfants pour un contrôle serveur spécifié dans la hiérarchie de l’interface utilisateur.</summary>
        <value>Collection de contrôles enfants pour le contrôle serveur spécifié.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="dataSourceControl.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée une collection pour stocker des contrôles enfants.</summary>
        <returns>Retourne <see cref="T:System.Web.UI.EmptyControlCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Étant donné que les contrôles de source de données n’autorisent pas les contrôles enfants, le <xref:System.Web.UI.DataSourceControl> implémentation par défaut de la classe ne prend pas en charge l’incorporation de contrôles enfants.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.EmptyControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.DataSourceControl.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si cet objet prend en charge des thèmes.</summary>
        <value>
          <see langword="false" /> dans tous les cas.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Étant donné que le <xref:System.Web.UI.DataSourceControl> contrôle n’a pas de rendu visuel, il ne prend pas en charge les thèmes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Une tentative de définition de la valeur de la propriété <see cref="P:System.Web.UI.DataSourceControl.EnableTheming" /> a été effectuée.</exception>
        <altmember cref="P:System.Web.UI.DataSourceControl.SkinID" />
        <altmember cref="P:System.Web.UI.DataSourceControl.Visible" />
      </Docs>
    </Member>
    <Member MemberName="FindControl">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Control FindControl (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.Control FindControl(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.FindControl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindControl (id As String) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::Control ^ FindControl(System::String ^ id);" />
      <MemberSignature Language="F#" Value="override this.FindControl : string -&gt; System.Web.UI.Control" Usage="dataSourceControl.FindControl id" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Identificateur du contrôle à rechercher.</param>
        <summary>Recherche un contrôle serveur possédant le paramètre <paramref name="id" /> spécifié dans le conteneur d'attribution de noms actuel.</summary>
        <returns>Contrôle spécifié, ou <see langword="null" /> s'il n'existe pas.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberSignature Language="F#" Value="override this.Focus : unit -&gt; unit" Usage="dataSourceControl.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Définit le focus d'entrée sur le contrôle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Étant donné que le <xref:System.Web.UI.DataSourceControl> contrôle n’a aucun élément visuel rendu, en appelant le <xref:System.Web.UI.DataSourceControl.Focus%2A> méthode lève un <xref:System.NotSupportedException> exception.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Tentative d'appel de la méthode <see cref="M:System.Web.UI.DataSourceControl.Focus" />.</exception>
        <altmember cref="P:System.Web.UI.DataSourceControl.Visible" />
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected abstract System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="abstract member GetView : string -&gt; System.Web.UI.DataSourceView" Usage="dataSourceControl.GetView viewName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetView(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Nom de la <see cref="T:System.Web.UI.DataSourceView" /> à récupérer. Dans des contrôles de code source de données qui ne prennent en charge qu'un affichage, à savoir <see cref="T:System.Web.UI.WebControls.SqlDataSource" />, ce paramètre est ignoré.</param>
        <summary>Obtient l'affichage de source de données associé au contrôle de source de données.</summary>
        <returns>Retourne le <see cref="T:System.Web.UI.DataSourceView" /> nommé associé au <see cref="T:System.Web.UI.DataSourceControl" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez énumérer l’ensemble des affichages actuellement associés au contrôle de source de données en appelant le <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> (méthode).  
  
 Classes de contrôle de source de données peuvent prendre en charge une ou plusieurs vues sur leurs données sous-jacentes. Ces vues sont représentés par des instances de la <xref:System.Web.UI.DataSourceView> classe. La vue de source de données définit les fonctionnalités d’un contrôle de source de données fait tout le travail nécessaire pour récupérer des données à partir du magasin de données sous-jacent et exécute des opérations de tri, d’insertion, de suppression et de la mise à jour.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.DataSourceControl> implémentation par défaut de la classe retourne `null`. Si vous étendez le <xref:System.Web.UI.DataSourceControl> classe, substituez le <xref:System.Web.UI.DataSourceControl.GetView%2A> méthode pour retourner le texte spécifié <xref:System.Web.UI.DataSourceView> objet.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment une classe de contrôle de source de données qui étend la <xref:System.Web.UI.DataSourceControl> la classe implémente le <xref:System.Web.UI.IDataSource.GetView%2A> méthode, qui retourne une instance fortement typée de la <xref:System.Web.UI.DataSourceView> classe. Étant donné que le contrôle de source de données prend en charge qu’une seule vue, elle ignore le nom et retourne une vue nommée avec le nom de la vue par défaut. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.DataSourceControl> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="abstract member GetViewNames : unit -&gt; System.Collections.ICollection&#xA;override this.GetViewNames : unit -&gt; System.Collections.ICollection" Usage="dataSourceControl.GetViewNames " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetViewNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient une collection de noms, représentant la liste des objets <see cref="T:System.Web.UI.DataSourceView" /> associés au contrôle <see cref="T:System.Web.UI.DataSourceControl" />.</summary>
        <returns>
          <see cref="T:System.Collections.ICollection" /> contenant les noms des objets <see cref="T:System.Web.UI.DataSourceView" /> associés au <see cref="T:System.Web.UI.DataSourceControl" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Collections.ICollection> collection de noms est le jeu autorisé des valeurs qui peuvent être passés à la <xref:System.Web.UI.DataSourceControl.GetView%2A> (méthode).  
  
 Le <xref:System.Web.UI.ListSourceHelper> (classe), qui est utilisé pour le <xref:System.Web.UI.DataSourceControl> la classe de <xref:System.ComponentModel.IListSource> implémentation, vérifie le <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> méthode à la fois pour le <xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23ContainsListCollection%2A> et <xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23GetList%2A> des appels pour déterminer si la source de données contrôle est associé à un ou plusieurs vues de source de données. Si <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> retourne `null`, qui est l’implémentation par défaut de la méthode, <xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23ContainsListCollection%2A> retourne `false` et <xref:System.Web.UI.DataSourceControl.System%23ComponentModel%23IListSource%23GetList%2A> retourne `null`.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.DataSourceControl> implémentation par défaut de la classe retourne `null`. Si vous étendez le <xref:System.Web.UI.DataSourceControl> classe, substituez le <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> méthode pour retourner une collection de noms d’affichage.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment une classe qui étend la <xref:System.Web.UI.DataSourceControl> classe peut substituer l’implémentation par défaut, qui retourne `null`, pour fournir une collection de noms d’affichage. Le `CsvDataSource` classe prend uniquement en charge une seule vue ; par conséquent, une collection d’un seul élément avec le nom de la vue par défaut est retournée. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.DataSourceControl> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#4)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasControls">
      <MemberSignature Language="C#" Value="public override bool HasControls ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool HasControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.HasControls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function HasControls () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool HasControls();" />
      <MemberSignature Language="F#" Value="override this.HasControls : unit -&gt; bool" Usage="dataSourceControl.HasControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Détermine si le contrôle serveur contient des contrôles enfants.</summary>
        <returns>
          <see langword="true" /> si le contrôle contient d'autres contrôles ; sinon, <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseDataSourceChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseDataSourceChangedEvent (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaiseDataSourceChangedEvent(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaiseDataSourceChangedEvent (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaiseDataSourceChangedEvent(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member RaiseDataSourceChangedEvent : EventArgs -&gt; unit&#xA;override this.RaiseDataSourceChangedEvent : EventArgs -&gt; unit" Usage="dataSourceControl.RaiseDataSourceChangedEvent e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.IDataSource.DataSourceChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent%2A> méthode avertit un contrôle lié aux données que la source de données sous-jacente ou les données mises en cache en mémoire a changé et que le contrôle doit relier et effectuer aucun travail supplémentaire nécessaire. En règle générale, le <xref:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent%2A> méthode est appelée lorsqu’une propriété de contrôle de source de données ou une valeur de paramètre a été modifiée.  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment appeler le <xref:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent%2A> méthode lorsqu’une source de données ou ses données sous-jacentes a changé d’une manière qui peut-être affecter un contrôles liés. Dans cet exemple, un contrôle de source de données de fichiers qui s’étend la <xref:System.Web.UI.DataSourceControl> classe lève la <xref:System.Web.UI.IDataSource.DataSourceChanged> événement en appelant <xref:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent%2A> tout moment le `FileName` propriété est modifiée.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#1)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lors de la substitution <see cref="M:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la classe de base <see cref="M:System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)" /> méthode afin que les délégués inscrits reçoivent l’événement.</para>
        </block>
        <altmember cref="E:System.Web.UI.IDataSource.DataSourceChanged" />
      </Docs>
    </Member>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="public override void RenderControl (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderControl(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.RenderControl(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderControl (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderControl(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderControl : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="dataSourceControl.RenderControl writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Objet <see cref="T:System.Web.UI.HtmlTextWriter" /> qui reçoit le contenu du contrôle.</param>
        <summary>Envoie le contenu du contrôle serveur à un objet <see cref="T:System.Web.UI.HtmlTextWriter" /> fourni et stocke les informations de traçage sur le contrôle si le traçage est activé.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.DataSourceControl.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'apparence à appliquer au contrôle <see cref="T:System.Web.UI.DataSourceControl" />.</summary>
        <value>
          <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Étant donné que le <xref:System.Web.UI.DataSourceControl> contrôle n’a pas de rendu visuel, vous ne pouvez pas définir le <xref:System.Web.UI.DataSourceControl.SkinID%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Une tentative de définition de la valeur de la propriété <see cref="P:System.Web.UI.DataSourceControl.SkinID" /> a été effectuée.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ComponentModel.IListSource.ContainsListCollection { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.DataSourceControl.System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Indique si le contrôle de code source de données est associé à une ou à plusieurs listes de données.</summary>
        <value>
          <see langword="true" /> si le <see cref="T:System.Web.UI.DataSourceControl" /> est associé à un ou à plusieurs <see cref="T:System.Web.UI.DataSourceView" /> objets ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété est utilisée pour déterminer si l’objet en cours peut être utilisé en tant que source d’une ou plusieurs listes de données. Contrôles de source de données encapsulent leurs listes de données en tant que <xref:System.Web.UI.DataSourceView> objets ; par conséquent, lorsqu’ils sont associés avec un ou plusieurs <xref:System.Web.UI.DataSourceView> objets, un <xref:System.Web.UI.DataSourceControl> contrôle représente un objet de source de liste et la propriété retourne `true`.  
  
 Cette propriété appelle la méthode statique <xref:System.Web.UI.ListSourceHelper.ContainsListCollection%2A?displayProperty=nameWithType> méthode pour déterminer si contrôle de source de données actuelles peut être utilisée en tant que source de données. Le <xref:System.Web.UI.ListSourceHelper> classe détermine si le <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> méthode retourne une collection de noms d’affichage valide. S’il existe, cette propriété retourne `true`. Si <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> retourne `null`, qui est l’implémentation par défaut de la <xref:System.Web.UI.DataSourceControl> classe, la méthode retourne `false`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient une liste des contrôles de code source de données qui peuvent être utilisés comme sources des listes de données.</summary>
        <returns>
          <see cref="T:System.Collections.IList" /> des contrôles de sources de données pouvant être utilisés comme sources de listes de données.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est utilisée pour récupérer un ensemble d’objets qui peuvent être utilisés comme sources de données. Contrôles de source de données encapsulent leurs listes de données en tant que <xref:System.Web.UI.DataSourceView> objets ; par conséquent, lorsqu’ils sont associés avec un ou plusieurs <xref:System.Web.UI.DataSourceView> objets, un <xref:System.Web.UI.DataSourceControl> contrôle représente un objet de source de liste et la méthode retourne un <xref:System.Collections.IList> collection de un élément, le <xref:System.Web.UI.DataSourceControl> lui-même.  
  
 Cette méthode appelle la méthode statique <xref:System.Web.UI.ListSourceHelper.GetList%2A?displayProperty=nameWithType> méthode pour récupérer un <xref:System.Collections.IList> collection d’objets qui peuvent être utilisés comme sources de données. Le <xref:System.Web.UI.ListSourceHelper> classe détermine si <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> retourne une collection de noms d’affichage valide. Si tel est le cas le <xref:System.Web.UI.ListSourceHelper> classe retourne un <xref:System.Collections.IList> collection d’un élément, le <xref:System.Web.UI.DataSourceControl> contrôle. Si <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> retourne `null`, qui est l’implémentation par défaut de la <xref:System.Web.UI.DataSourceControl> (classe), le <xref:System.Web.UI.ListSourceHelper> classe également retourne `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.DataSourceChanged">
      <MemberSignature Language="C#" Value="event EventHandler System.Web.UI.IDataSource.DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler System.Web.UI.IDataSource.DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event DataSourceChanged As EventHandler Implements System.Web.UI.IDataSource" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.IDataSource.DataSourceChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsqu'un contrôle de code source de données a changé d'une manière qui affecte des contrôles liés aux données.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cet événement est déclenché lorsque la source de données sous-jacente a changé. La modification peut résulter d’une modification dans les propriétés du contrôle ou une modification dans les données en raison d’une opération d’édition exécutée par le <xref:System.Web.UI.DataSourceControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.GetView">
      <MemberSignature Language="C#" Value="System.Web.UI.DataSourceView IDataSource.GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.DataSourceView System.Web.UI.IDataSource.GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetView (viewName As String) As DataSourceView Implements IDataSource.GetView" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::DataSourceView ^ System.Web.UI.IDataSource.GetView(System::String ^ viewName) = System::Web::UI::IDataSource::GetView;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetView(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Nom de la <see cref="T:System.Web.UI.DataSourceView" /> à récupérer. Dans des contrôles de code source de données qui ne prennent en charge qu'un affichage, à savoir <see cref="T:System.Web.UI.WebControls.SqlDataSource" />, ce paramètre est ignoré.</param>
        <summary>Obtient l'objet nommé <see cref="T:System.Web.UI.DataSourceView" /> associé au contrôle <see cref="T:System.Web.UI.DataSourceControl" />. Certains contrôles de code source de données ne prennent en charge qu'un affichage, contrairement à d'autres qui en gèrent plusieurs.</summary>
        <returns>Retourne le <see cref="T:System.Web.UI.DataSourceView" /> nommé associé au <see cref="T:System.Web.UI.DataSourceControl" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le `viewName` paramètre est ignoré lorsque cette méthode est appelée sur des contrôles de source de données qui prennent en charge qu’une seule vue, telles que la <xref:System.Web.UI.WebControls.SqlDataSource> et <xref:System.Web.UI.WebControls.AccessDataSource> contrôles.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.DataSourceControl> retourne l’implémentation par défaut de la classe qui est appelée par cette méthode d’interface, `null`. Si vous étendez le <xref:System.Web.UI.DataSourceControl> classe, substituez le <xref:System.Web.UI.DataSourceControl.GetView%2A> méthode pour retourner le texte spécifié <xref:System.Web.UI.DataSourceView> objet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="viewName" /> est <see langword="null" />.</exception>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.GetViewNames">
      <MemberSignature Language="C#" Value="System.Collections.ICollection IDataSource.GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.ICollection System.Web.UI.IDataSource.GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Function GetViewNames () As ICollection Implements IDataSource.GetViewNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::ICollection ^ System.Web.UI.IDataSource.GetViewNames() = System::Web::UI::IDataSource::GetViewNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetViewNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient une collection de noms, représentant la liste des objets <see cref="T:System.Web.UI.DataSourceView" /> associés au contrôle <see cref="T:System.Web.UI.DataSourceControl" />.</summary>
        <returns>
          <see cref="T:System.Collections.ICollection" /> contenant les noms des objets <see cref="T:System.Web.UI.DataSourceView" /> associés au <see cref="T:System.Web.UI.DataSourceControl" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Le <xref:System.Web.UI.DataSourceControl> retourne l’implémentation par défaut de la classe qui est appelée par cette méthode d’interface, `null`, ce qui indique que seule une vue est pris en charge. Si vous étendez le <xref:System.Web.UI.DataSourceControl> classe, substituez le <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> méthode pour retourner une collection de noms d’affichage. Un nom peut être passé à la <xref:System.Web.UI.DataSourceControl.GetView%2A> méthode pour retourner un <xref:System.Web.UI.DataSourceView> objet.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceControl.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.DataSourceControl.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur indiquant l'affichage visuel ou non du contrôle.</summary>
        <value>Toujours <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Étant donné que le <xref:System.Web.UI.DataSourceControl> contrôle n’a pas de rendu visuel, la <xref:System.Web.UI.DataSourceControl.Visible%2A> propriété retourne toujours `false`.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Une tentative de définition de la valeur de la propriété <see cref="P:System.Web.UI.DataSourceControl.Visible" /> a été effectuée.</exception>
      </Docs>
    </Member>
  </Members>
</Type>