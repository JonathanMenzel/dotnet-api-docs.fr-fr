<Type Name="UpdateProgress" FullName="System.Web.UI.UpdateProgress">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a3da645b2e922acc595f7aa39f03a0c9cd427aa1" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37529632" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UpdateProgress : System.Web.UI.Control, System.Web.UI.IAttributeAccessor, System.Web.UI.IScriptControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UpdateProgress extends System.Web.UI.Control implements class System.Web.UI.IAttributeAccessor, class System.Web.UI.IScriptControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.UpdateProgress" />
  <TypeSignature Language="VB.NET" Value="Public Class UpdateProgress&#xA;Inherits Control&#xA;Implements IAttributeAccessor, IScriptControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class UpdateProgress : System::Web::UI::Control, System::Web::UI::IAttributeAccessor, System::Web::UI::IScriptControl" />
  <TypeSignature Language="F#" Value="type UpdateProgress = class&#xA;    inherit Control&#xA;    interface IAttributeAccessor&#xA;    interface IScriptControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IScriptControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("AssociatedUpdatePanelID")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.UpdateProgressDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), "System.Web.Resources.UpdateProgress.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Fournit une rétroaction visuelle dans le navigateur lorsque le contenu d'un ou plusieurs contrôles <see cref="T:System.Web.UI.UpdatePanel" /> est mis à jour.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dans cette rubrique :  
  
-   [Introduction](#introduction)  
  
-   [Association d’un UpdateProgress à un contrôle UpdatePanel](#associating_an_updateprogress_with_an_updatepanel_control)  
  
-   [Spécification du contenu du contrôle UpdateProgress](#specifying_the_content_of_the_updateprogress_control)  
  
-   [Placement de contrôles UpdateProgress sur la Page](#putting_updateprogress_controls_on_the_page)  
  
-   [Personnalisation lorsque les contrôles UpdateProgress sont affichés.](#customizing_when_updateprogress_controls_are_displayed)  
  
-   [Application de Styles CSS](#applying_styles)  
  
-   [Syntaxe déclarative](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Introduction  
 Le <xref:System.Web.UI.UpdateProgress> contrôle vous permet de fournir des commentaires sur la progression du rendu de page partiel. Pour les publications (postback) ou de rendu de page initial, <xref:System.Web.UI.UpdateProgress> contenu du contrôle n’est pas affiché.  
  
 La page peut contenir plusieurs <xref:System.Web.UI.UpdateProgress> contrôles. Chacun d’eux peut être associé à un autre <xref:System.Web.UI.UpdatePanel> contrôle. Vous pouvez également utiliser une <xref:System.Web.UI.UpdateProgress> contrôler et l’associer à tous les <xref:System.Web.UI.UpdatePanel> contrôles sur la page.  
  
 Le <xref:System.Web.UI.UpdateProgress> contrôle restitue un `div` élément qui est affichée ou masquée selon où provient d’une publication (postback) et si le <xref:System.Web.UI.UpdateProgress.AssociatedUpdatePanelID%2A> propriété de la <xref:System.Web.UI.UpdateProgress> contrôle est défini.  
  
<a name="associating_an_updateprogress_with_an_updatepanel_control"></a>   
## <a name="associating-an-updateprogress-with-an-updatepanel-control"></a>Association d’un UpdateProgress à un contrôle UpdatePanel  
 Vous associez <xref:System.Web.UI.UpdateProgress> contrôle avec une <xref:System.Web.UI.UpdatePanel> contrôle en définissant le <xref:System.Web.UI.UpdateProgress.AssociatedUpdatePanelID%2A> propriété de la <xref:System.Web.UI.UpdateProgress> contrôle. Quand un événement de publication (postback) provient à l’intérieur d’un <xref:System.Web.UI.UpdatePanel> contrôler associés <xref:System.Web.UI.UpdateProgress> contrôles sont affichés. Si vous ne définissez pas la <xref:System.Web.UI.UpdateProgress.AssociatedUpdatePanelID%2A> propriété, le <xref:System.Web.UI.UpdateProgress> contrôle affiche la progression de toute publication (postback) asynchrone qui proviennent de l’intérieur d’un <xref:System.Web.UI.UpdatePanel> contrôle. Il est également affiché pour tous les contrôles qui sont des déclencheurs pour les panneaux.  
  
 Le <xref:System.Web.UI.UpdateProgress.AssociatedUpdatePanelID%2A> propriété n’a l’effet suivant sur <xref:System.Web.UI.UpdateProgress> contrôler le comportement :  
  
-   Lorsque le <xref:System.Web.UI.UpdateProgress.AssociatedUpdatePanelID%2A> propriété n’est pas définie, le <xref:System.Web.UI.UpdateProgress> contrôle est affiché pour les publications (postbacks) suivantes :  
  
    -   Publications qui proviennent de l’intérieur d’un <xref:System.Web.UI.UpdatePanel> contrôle.  
  
    -   Publications qui proviennent de contrôles qui sont des déclencheurs asynchrones pour un <xref:System.Web.UI.UpdatePanel> contrôle.  
  
-   Lorsque le <xref:System.Web.UI.UpdateProgress.AssociatedUpdatePanelID%2A> propriété est définie sur une <xref:System.Web.UI.UpdatePanel> ID, de contrôler le <xref:System.Web.UI.UpdateProgress> contrôle est affiché pour les publications qui proviennent à l’intérieur d’associé <xref:System.Web.UI.UpdatePanel> contrôle.  
  
 Si le <xref:System.Web.UI.UpdateProgress.AssociatedUpdatePanelID%2A> propriété est définie sur un contrôle qui n’existe pas, le <xref:System.Web.UI.UpdateProgress> contrôle ne s’affichera.  
  
 Si le <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> propriété de la <xref:System.Web.UI.UpdatePanel> contrôles est définie sur `false` et une publication (postback) provient d’à l’intérieur d’un <xref:System.Web.UI.UpdatePanel> contrôler, associés <xref:System.Web.UI.UpdateProgress> contrôles seront toujours affichés.  
  
<a name="specifying_the_content_of_the_updateprogress_control"></a>   
## <a name="specifying-the-content-of-the-updateprogress-control"></a>Spécification du contenu du contrôle UpdateProgress  
 Utilisez le <xref:System.Web.UI.UpdateProgress.ProgressTemplate%2A> propriété pour spécifier le message affiché par un <xref:System.Web.UI.UpdateProgress> contrôle. Si le <xref:System.Web.UI.UpdateProgress.ProgressTemplate%2A> propriété est vide, rien n’est indiquée lorsque la <xref:System.Web.UI.UpdateProgress> contrôle s’affiche.  
  
 Le modèle peut contenir des HTML et le balisage. Par exemple, vous pouvez afficher une image animée qui avertit l’utilisateur que le traitement de la publication (postback). Vous pouvez également afficher un bouton sur lequel l’utilisateur peut cliquer pour arrêter la mise à jour de page partielle. En outre, vous souhaiterez éviter tous les autres publications (postback) est en cours. L’exemple suivant montre le script client que vous pouvez utiliser pour accomplir ces tâches.  
  
 [!code-aspx-csharp[System.Web.UI.UpdateProgress4#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdateProgress4/CS/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdateProgress4#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdateProgress4/VB/default.aspx#1)]  
  
 Vous pouvez utiliser l’exemple de code en définissant le `onClick` attribut d’un `HtmlButton` contrôle abortPostBack « () ». Pour plus d’informations, consultez la méthode et la propriété de la classe.  
  
<a name="putting_updateprogress_controls_on_the_page"></a>   
## <a name="putting-updateprogress-controls-on-the-page"></a>Placement de contrôles UpdateProgress sur la Page  
 <xref:System.Web.UI.UpdateProgress> contrôles peuvent être à l’intérieur ou en dehors des autres <xref:System.Web.UI.UpdatePanel> contrôles. L’affichage de la <xref:System.Web.UI.UpdateProgress> ne dépend pas de modèle de contrôle sur l’emplacement le <xref:System.Web.UI.UpdateProgress> contrôle se trouve. Dans une liste imbriquée <xref:System.Web.UI.UpdatePanel> contrôle, un panneau enfant est à l’intérieur d’un panneau parent. Dans ce cas, une publication (postback) qui produit de l’intérieur du panneau enfant provoque tous <xref:System.Web.UI.UpdateProgress> contrôles associés au panneau enfant et le panneau parent à afficher. Si une publication (postback) provient d’un contrôle enfant immédiat du panneau parent, uniquement le <xref:System.Web.UI.UpdateProgress> les contrôles qui sont associés au panneau parent sont affichés.  
  
<a name="customizing_when_updateprogress_controls_are_displayed"></a>   
## <a name="customizing-when-updateprogress-controls-are-displayed"></a>Personnalisation lorsque les contrôles UpdateProgress sont affichés.  
 Par défaut, le <xref:System.Web.UI.UpdateProgress> contrôle attend 0,5 secondes (500 millisecondes) avant d’afficher son contenu. Cela permet d’empêcher le contrôle de clignote si une publication (postback) asynchrone est très rapide. Vous pouvez spécifier le délai en définissant le <xref:System.Web.UI.UpdateProgress.DisplayAfter%2A> propriété.  
  
 Si vous avez besoin d’un contrôle plus précis quand une <xref:System.Web.UI.UpdateProgress> contrôle s’affiche, vous pouvez fournir le script client pour les et les événements de la classe. Dans le `beginRequest` Gestionnaire d’événements, vous pouvez afficher l’élément DOM qui représente le <xref:System.Web.UI.UpdateProgress> contrôle. Dans le `endRequest` Gestionnaire d’événements, vous pouvez le masquer.  
  
 Vous devez fournir le script client permettant d’afficher un <xref:System.Web.UI.UpdateProgress> contrôler quand une cible <xref:System.Web.UI.UpdatePanel> contrôle est mis à jour dans les circonstances suivantes :  
  
-   Lorsqu’une publication (postback) à partir d’un contrôle est inscrit en tant que déclencheur de publication (postback) asynchrone pour le panneau de configuration et il existe un <xref:System.Web.UI.UpdateProgress> contrôle sur la page. Toutefois, le <xref:System.Web.UI.UpdateProgress.AssociatedUpdatePanelID%2A> propriété n’est pas définie pour l’ID. du panneau  
  
-   Lorsque les publications de contrôles sont inscrits en tant que contrôles de publication (postback) asynchrones à l’aide de la <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> méthode de la <xref:System.Web.UI.ScriptManager> contrôle.  
  
<a name="applying_styles"></a>   
## <a name="applying-css-styles"></a>Application de Styles CSS  
 Le <xref:System.Web.UI.UpdateProgress> contrôle accepte des attributs expando. Cela rend possible de définir une classe CSS sur HTMLelements qui restituent les contrôles. Par exemple, vous pouvez créer le balisage illustré dans l’exemple suivant :  
  
```  
<asp:UpdateProgress runat="server" class="myStyle">  
</asp: UpdateProgress>   
```  
  
 Le balisage dans l’exemple précédent génère le rendu HTML similaire à ce qui suit lors de la page s’exécute :  
  
```  
<div id="ctl00_MainContent_UpdateProgress1" class="myStyle">  
</div>  
```  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Syntaxe déclarative  
  
```  
<asp:UpdateProgress  
    AssociatedUpdatePanelID="string"  
    DisplayAfter="integer"  
    DynamicLayout="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    Visible="True|False"  
>  
        <ProgressTemplate>  
            <!-- child controls -->  
        </ProgressTemplate>  
</asp:UpdateProgress>  
```  
  
   
  
## Examples  
 Les exemples suivants montrent différentes façons d’utiliser le <xref:System.Web.UI.UpdateProgress> contrôle pour afficher la progression pendant les publications asynchrones.  
  
 L’exemple suivant montre une <xref:System.Web.UI.UpdateProgress> contrôle qui affiche l’état d’avancement pour deux <xref:System.Web.UI.UpdatePanel> contrôles.  
  
 [!code-aspx-csharp[System.Web.UI.UpdateProgress1#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdateProgress1/CS/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdateProgress1#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdateProgress1/VB/default.aspx#1)]  
  
 L’exemple suivant montre deux <xref:System.Web.UI.UpdateProgress> contrôles. Chaque contrôle affiche l’état de progression pour associé à un <xref:System.Web.UI.UpdatePanel> contrôle.  
  
 [!code-aspx-csharp[System.Web.UI.UpdateProgress2#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdateProgress2/CS/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdateProgress2#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdateProgress2/VB/default.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.UpdatePanel" />
    <altmember cref="T:System.Web.UI.ScriptManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UpdateProgress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdateProgress.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UpdateProgress();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.UpdateProgress" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous créez un <xref:System.Web.UI.UpdateProgress> contrôler dynamiquement, vous créez un modèle personnalisé qui hérite de la <xref:System.Web.UI.ITemplate> contrôle. Vous spécifiez le balisage dans le <xref:System.Web.UI.ITemplate.InstantiateIn%2A> (méthode), puis définissez le <xref:System.Web.UI.UpdateProgress.ProgressTemplate%2A> propriété de créé dynamiquement <xref:System.Web.UI.UpdateProgress> contrôle vers une nouvelle instance du modèle personnalisé. Lorsque vous créez <xref:System.Web.UI.UpdateProgress> de contrôles, vous devez le faire pendant ou avant le <xref:System.Web.UI.Control.PreRender> événements de la page. Si vous créez le <xref:System.Web.UI.UpdateProgress> contrôle plus loin dans le cycle de vie de page progression n’est pas affiché.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AssociatedUpdatePanelID">
      <MemberSignature Language="C#" Value="public string AssociatedUpdatePanelID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AssociatedUpdatePanelID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdateProgress.AssociatedUpdatePanelID" />
      <MemberSignature Language="VB.NET" Value="Public Property AssociatedUpdatePanelID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ AssociatedUpdatePanelID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AssociatedUpdatePanelID : string with get, set" Usage="System.Web.UI.UpdateProgress.AssociatedUpdatePanelID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.UpdateProgressAssociatedUpdatePanelIDConverter")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.IDReferenceProperty(typeof(System.Web.UI.UpdatePanel))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'ID du contrôle <see cref="T:System.Web.UI.UpdatePanel" /> pour lequel le contrôle <see cref="T:System.Web.UI.UpdateProgress" /> affiche l'état.</summary>
        <value>Valeur du contrôle <see cref="T:System.Web.UI.UpdatePanel" /> associé. La valeur par défaut est une chaîne vide.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur par défaut est une chaîne vide, ce qui signifie que le <xref:System.Web.UI.UpdateProgress> contrôle n’est pas associé à un spécifique <xref:System.Web.UI.UpdatePanel> contrôle. Par conséquent, publications asynchrones qui sont issus de l’intérieur d’un <xref:System.Web.UI.UpdatePanel> contrôle ou les publications de contrôles qui sont des déclencheurs pour connaître la cause du Panneau de configuration le <xref:System.Web.UI.UpdateProgress> contrôle pour afficher ses <xref:System.Web.UI.UpdateProgress.ProgressTemplate%2A> contenu.  
  
 Vous pouvez définir le <xref:System.Web.UI.UpdateProgress.AssociatedUpdatePanelID%2A> propriété aux contrôles dans le même conteneur d’attribution de noms, dans un conteneur d’attribution de noms parent ou dans la page.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdateProgress.ProgressTemplate" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Web.UI.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdateProgress.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AttributeCollection ^ Attributes { System::Web::UI::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Web.UI.AttributeCollection" Usage="System.Web.UI.UpdateProgress.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebSysDescription("WebControl_Attributes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit les attributs de feuille de style en cascade (CSS) du contrôle <see cref="T:System.Web.UI.UpdateProgress" />.</summary>
        <value>Noms de l'attribut CSS.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdateProgress.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Controls : System.Web.UI.ControlCollection" Usage="System.Web.UI.UpdateProgress.Controls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet <see cref="T:System.Web.UI.ControlCollection" /> qui représente les contrôles enfant du contrôle <see cref="T:System.Web.UI.UpdateProgress" />.</summary>
        <value>Collection de contrôles enfants pour le contrôle <see cref="T:System.Web.UI.UpdateProgress" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdateProgress.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="abstract member CreateChildControls : unit -&gt; unit&#xA;override this.CreateChildControls : unit -&gt; unit" Usage="updateProgress.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Appelé pour créer tous les contrôles enfants que le contrôle <see cref="T:System.Web.UI.UpdateProgress" /> contient dans le cadre de la préparation de la publication ou du rendu.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdateProgress.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="abstract member DataBind : unit -&gt; unit&#xA;override this.DataBind : unit -&gt; unit" Usage="updateProgress.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Lie une source de données au contrôle <see cref="T:System.Web.UI.UpdateProgress" /> et à tous ses contrôles enfants.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAfter">
      <MemberSignature Language="C#" Value="public int DisplayAfter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DisplayAfter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdateProgress.DisplayAfter" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayAfter As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DisplayAfter { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.DisplayAfter : int with get, set" Usage="System.Web.UI.UpdateProgress.DisplayAfter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(500)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur en millisecondes avant que le contrôle <see cref="T:System.Web.UI.UpdateProgress" /> ne soit affiché.</summary>
        <value>Un entier qui représente le nombre de millisecondes avant que le modèle de progression du contrôle <see cref="T:System.Web.UI.UpdateProgress" /> ne soit affiché. La valeur par défaut est 500 millisecondes (.5 secondes).</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">La propriété <see cref="P:System.Web.UI.UpdateProgress.DisplayAfter" /> est inférieure à zéro.</exception>
        <altmember cref="P:System.Web.UI.UpdateProgress.ProgressTemplate" />
      </Docs>
    </Member>
    <Member MemberName="DynamicLayout">
      <MemberSignature Language="C#" Value="public bool DynamicLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DynamicLayout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdateProgress.DynamicLayout" />
      <MemberSignature Language="VB.NET" Value="Public Property DynamicLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DynamicLayout { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DynamicLayout : bool with get, set" Usage="System.Web.UI.UpdateProgress.DynamicLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui détermine si le modèle de progression est restitué dynamiquement.</summary>
        <value>
          <see langword="true" /> si le modèle de progression est restitué dynamiquement ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.UpdateProgress.DynamicLayout%2A> propriété détermine si un espace pour le contenu du modèle de progression est alloué dans la page uniquement lorsque cela est nécessaire.  
  
 Lorsque le <xref:System.Web.UI.UpdateProgress.DynamicLayout%2A> propriété est `true`, espace pour le contenu du modèle de progression n’est pas alloué lorsque la page est rendue en premier. Au lieu de cela, la page change de manière dynamique pour afficher le contenu lorsqu’il est requis. Dans le `style` propriété de la `div` élément qui contient le modèle de progression dans le balisage rendu, le `display` attribut a la valeur `none`.  
  
 Lorsque le <xref:System.Web.UI.UpdateProgress.DynamicLayout%2A> propriété est `false`, pour le contenu du modèle de progression est alloué lorsque la page est restituée en premier et le <xref:System.Web.UI.UpdateProgress> contrôle contenu est physiquement partie de la mise en page. Dans le `style` propriété de la `div` élément qui contient le modèle de progression dans le balisage rendu, le `display` attribut a la valeur `block`et le `visibility` attribut est initialement défini sur `hidden`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdateProgress.ProgressTemplate" />
      </Docs>
    </Member>
    <Member MemberName="GetScriptDescriptors">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt; GetScriptDescriptors ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptDescriptor&gt; GetScriptDescriptors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdateProgress.GetScriptDescriptors" />
      <MemberSignature Language="VB.NET" Value="Protected Iterator Overridable Function GetScriptDescriptors () As IEnumerable(Of ScriptDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptDescriptor ^&gt; ^ GetScriptDescriptors();" />
      <MemberSignature Language="F#" Value="abstract member GetScriptDescriptors : unit -&gt; seq&lt;System.Web.UI.ScriptDescriptor&gt;&#xA;override this.GetScriptDescriptors : unit -&gt; seq&lt;System.Web.UI.ScriptDescriptor&gt;" Usage="updateProgress.GetScriptDescriptors " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptControl.GetScriptDescriptors</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Web.UI.UpdateProgress/&lt;GetScriptDescriptors&gt;d__29))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une liste de composants, comportements et contrôles clients qui sont requis pour la fonctionnalité client <see cref="T:System.Web.UI.UpdateProgress" /> du contrôle.</summary>
        <returns>Collection <see cref="T:System.Collections.IEnumerable" /> qui contient des objets <see cref="T:System.Web.UI.ScriptDescriptor" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.UpdateProgress> contrôle requiert la bibliothèque cliente Microsoft Ajax Library. Cette classe de client est inscrit dans le <xref:System.Web.UI.UpdateProgress.GetScriptDescriptors%2A> (méthode) et le <xref:System.Web.UI.UpdateProgress.AssociatedUpdatePanelID%2A>, <xref:System.Web.UI.UpdateProgress.DisplayAfter%2A>, et <xref:System.Web.UI.UpdateProgress.DynamicLayout%2A> les valeurs de propriété.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IScriptControl.GetScriptDescriptors" />
      </Docs>
    </Member>
    <Member MemberName="GetScriptReferences">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt; GetScriptReferences ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptReference&gt; GetScriptReferences() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdateProgress.GetScriptReferences" />
      <MemberSignature Language="VB.NET" Value="Protected Iterator Overridable Function GetScriptReferences () As IEnumerable(Of ScriptReference)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptReference ^&gt; ^ GetScriptReferences();" />
      <MemberSignature Language="F#" Value="abstract member GetScriptReferences : unit -&gt; seq&lt;System.Web.UI.ScriptReference&gt;&#xA;override this.GetScriptReferences : unit -&gt; seq&lt;System.Web.UI.ScriptReference&gt;" Usage="updateProgress.GetScriptReferences " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptControl.GetScriptReferences</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Web.UI.UpdateProgress/&lt;GetScriptReferences&gt;d__28))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une liste de dépendances de la bibliothèque du script client pour le contrôle <see cref="T:System.Web.UI.UpdateProgress" />.</summary>
        <returns>Collection <see cref="T:System.Collections.IEnumerable" /> qui contient des objets <see cref="T:System.Web.UI.ScriptReference" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.UpdateProgress> contrôle n’a pas de scriptdependencies de n’importe quel serveur.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IScriptControl.GetScriptReferences" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdateProgress.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPreRender : EventArgs -&gt; unit&#xA;override this.OnPreRender : EventArgs -&gt; unit" Usage="updateProgress.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.Control.PreRender" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate ProgressTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ProgressTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdateProgress.ProgressTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ProgressTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ ProgressTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProgressTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.UpdateProgress.ProgressTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le modèle qui définit le contenu du contrôle <see cref="T:System.Web.UI.UpdateProgress" />.</summary>
        <value>Instance du <see cref="T:System.Web.UI.ITemplate" /> qui définit le contenu du contrôle <see cref="T:System.Web.UI.UpdateProgress" />. La valeur par défaut est <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le modèle doit être défini. Sinon, une exception est levée pendant la <xref:System.Web.UI.UpdateProgress> du contrôle `Init` événement. Vous pouvez spécifier le <xref:System.Web.UI.UpdateProgress.ProgressTemplate%2A> propriété de façon déclarative en ajoutant la balise à le `ProgressTemplate` élément. S’il n’existe pas de balisage dans le `ProgressTemplate` élément, rien ne s’affiche pour le <xref:System.Web.UI.UpdateProgress> contrôle.  
  
 Si vous créez <xref:System.Web.UI.UpdateProgress> de contrôles, vous pouvez créer un modèle personnalisé qui hérite de la <xref:System.Web.UI.ITemplate> contrôle. Vous spécifiez le balisage dans le <xref:System.Web.UI.ITemplate.InstantiateIn%2A> (méthode), puis définissez le <xref:System.Web.UI.UpdateProgress.ProgressTemplate%2A> propriété de créé dynamiquement <xref:System.Web.UI.UpdateProgress> contrôle vers une nouvelle instance du modèle personnalisé. Si vous créez <xref:System.Web.UI.UpdateProgress> contrôles dynamiquement, faites-le pendant ou avant le <xref:System.Web.UI.Control.PreRender> événements de la page. Si vous créez le <xref:System.Web.UI.UpdateProgress> contrôle plus loin dans le cycle de vie de page progression n’est pas affiché.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.TemplateInstanceAttribute" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdateProgress.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member Render : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="updateProgress.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Objet qui représente le flux de sortie pour restituer le contenu HTML.</param>
        <summary>Écrit le contenu restitué du contrôle <see cref="T:System.Web.UI.UpdateProgress" /> dans le navigateur, à l'aide de l'objet <see cref="T:System.Web.UI.HtmlTextWriter" /> fourni.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.UpdateProgress.Render%2A> méthode est utilisée par les développeurs de contrôles pour étendre les fonctionnalités de la <xref:System.Web.UI.UpdateProgress> contrôle.  
  
 Le <xref:System.Web.UI.UpdateProgress.Render%2A> méthode écrit le contenu restitué de la <xref:System.Web.UI.UpdateProgress> contrôle dans le navigateur à l’aide de fourni <xref:System.Web.UI.HtmlTextWriter> objet. Lorsque vous substituez le <xref:System.Web.UI.UpdateProgress.Render%2A> appel de méthode dans une classe dérivée, la classe de base <xref:System.Web.UI.UpdateProgress.Render%2A> méthode afin que les contrôles enfants de la <xref:System.Web.UI.UpdateProgress> contrôle sont rendus.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.GetAttribute">
      <MemberSignature Language="C#" Value="string IAttributeAccessor.GetAttribute (string key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IAttributeAccessor.GetAttribute(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdateProgress.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAttribute (key As String) As String Implements IAttributeAccessor.GetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.IAttributeAccessor.GetAttribute(System::String ^ key) = System::Web::UI::IAttributeAccessor::GetAttribute;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nom de l'attribut à retourner.</param>
        <summary>Retourne un attribut d'un contrôle Web à l'aide du nom spécifié.</summary>
        <returns>Valeur de l'attribut.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.UpdateProgress> est castée en interface <xref:System.Web.UI.IAttributeAccessor>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.SetAttribute">
      <MemberSignature Language="C#" Value="void IAttributeAccessor.SetAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IAttributeAccessor.SetAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdateProgress.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetAttribute (key As String, value As String) Implements IAttributeAccessor.SetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IAttributeAccessor.SetAttribute(System::String ^ key, System::String ^ value) = System::Web::UI::IAttributeAccessor::SetAttribute;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Nom de l'attribut à définir.</param>
        <param name="value">Valeur de l’attribut à définir.</param>
        <summary>Définit la valeur de l'attribut du contrôle utilisateur spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.UpdateProgress> est castée en interface <xref:System.Web.UI.IAttributeAccessor>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptControl.GetScriptDescriptors">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt; IScriptControl.GetScriptDescriptors ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptDescriptor&gt; System.Web.UI.IScriptControl.GetScriptDescriptors() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdateProgress.System#Web#UI#IScriptControl#GetScriptDescriptors" />
      <MemberSignature Language="VB.NET" Value="Function GetScriptDescriptors () As IEnumerable(Of ScriptDescriptor) Implements IScriptControl.GetScriptDescriptors" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptDescriptor ^&gt; ^ System.Web.UI.IScriptControl.GetScriptDescriptors() = System::Web::UI::IScriptControl::GetScriptDescriptors;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptControl.GetScriptDescriptors</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptDescriptor&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Web.UI.IScriptControl.GetScriptDescriptors" />.</summary>
        <returns>Collection d'objets <see cref="T:System.Web.UI.ScriptDescriptor" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.UpdateProgress> est castée en interface <xref:System.Web.UI.IScriptControl>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IScriptControl.GetScriptDescriptors" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IScriptControl.GetScriptReferences">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt; IScriptControl.GetScriptReferences ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Web.UI.ScriptReference&gt; System.Web.UI.IScriptControl.GetScriptReferences() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdateProgress.System#Web#UI#IScriptControl#GetScriptReferences" />
      <MemberSignature Language="VB.NET" Value="Function GetScriptReferences () As IEnumerable(Of ScriptReference) Implements IScriptControl.GetScriptReferences" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerable&lt;System::Web::UI::ScriptReference ^&gt; ^ System.Web.UI.IScriptControl.GetScriptReferences() = System::Web::UI::IScriptControl::GetScriptReferences;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IScriptControl.GetScriptReferences</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Web.UI.ScriptReference&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Web.UI.IScriptControl.GetScriptReferences" />.</summary>
        <returns>Collection d'objets <see cref="T:System.Web.UI.ScriptReference" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation d'un membre d'interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.UI.UpdateProgress> est castée en interface <xref:System.Web.UI.IScriptControl>.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IScriptControl.GetScriptReferences" />
      </Docs>
    </Member>
  </Members>
</Type>