<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ClientScriptManager.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac580d12784deb82fe4a3792e1b417ab7930d851d03.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">80d12784deb82fe4a3792e1b417ab7930d851d03</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Defines methods for managing client scripts in Web applications.</source>
          <target state="translated">Définit des méthodes pour gérer des scripts clients dans des applications Web.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> class is used to manage client scripts and add them to Web applications.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> classe est utilisée pour gérer des scripts clients et de les ajouter aux applications Web.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>You can get a reference to the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> class from the <ph id="ph2">&lt;xref:System.Web.UI.Page.ClientScript%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.Page&gt;</ph> object.</source>
          <target state="translated">Vous pouvez obtenir une référence à la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> classe à partir de la <ph id="ph2">&lt;xref:System.Web.UI.Page.ClientScript%2A&gt;</ph> propriété de la <ph id="ph3">&lt;xref:System.Web.UI.Page&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>You can add a client script to a Web page declaratively by including the script in the HTML markup of the page.</source>
          <target state="translated">Vous pouvez ajouter de façon déclarative un script client à une page Web en incluant le script dans le balisage HTML de la page.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>However, there are situations when adding client script dynamically is needed.</source>
          <target state="translated">Toutefois, il existe des situations lors de l’ajout dynamique de script client est nécessaire.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>To add a script dynamically, use the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> method, the <ph id="ph3">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> method, or the <ph id="ph4">&lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;</ph> method, depending on when and how you want to add the script.</source>
          <target state="translated">Pour ajouter dynamiquement un script, utilisez la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> (méthode), la <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> (méthode), la <ph id="ph3">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> (méthode), ou le <ph id="ph4">&lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;</ph> méthode, en fonction de quand et comment vous souhaitez ajouter le script.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Add Client Script Dynamically to ASP.NET Web Pages<ept id="p1">](http://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>Comment : ajouter Client Script dynamiquement à ASP.NET Web Pages<ept id="p1">](http://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> class uniquely identifies scripts by a key <ph id="ph2">&lt;xref:System.String&gt;</ph> and a <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> classe identifie de façon unique les scripts par une clé <ph id="ph2">&lt;xref:System.String&gt;</ph> et un <ph id="ph3">&lt;xref:System.Type&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">Les scripts avec la même clé et le même type sont considérés comme des doublons.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>Using the script type helps to avoid confusing similar scripts from different user controls that might be in use on the page.</source>
          <target state="translated">À l’aide du type de script permet d’éviter de confondre des scripts semblables à partir de différents contrôles utilisateur qui peuvent être utilisé dans la page.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> class can be used to invoke client callbacks in situations when it is desirable to run server code from the client without performing a postback.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> classe peut être utilisée pour appeler des rappels de client dans les situations lorsqu’il est recommandé d’exécuter un code serveur à partir du client sans effectuer de publication.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>This is referred to as performing an out-of-band callback to the server.</source>
          <target state="translated">Cela est appelé pour effectuer un rappel hors-bande sur le serveur.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>In a client callback, a client script function sends an asynchronous request to an ASP.NET Web page.</source>
          <target state="translated">Dans un rappel client, une fonction de script client envoie une demande asynchrone pour une page Web ASP.NET.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>The Web page runs a modified version of its normal life cycle to process the callback.</source>
          <target state="translated">La page Web exécute une version modifiée de son cycle de vie normal pour traiter le rappel.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> method to obtain a reference to a client function that, when invoked, initiates a client callback to a server event.</source>
          <target state="translated">Utilisez la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> méthode pour obtenir une référence à une fonction cliente qui, lorsqu’elle est appelée, lance un rappel de client à un événement de serveur.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>For more information, see <bpt id="p1">[</bpt>Implementing Client Callbacks Without Postbacks<ept id="p1">](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>mise en œuvre les rappels de Client sans publications<ept id="p1">](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185)</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>Script callbacks will not work in older browsers that do not support the Document Object Model (DOM), and they require that ECMAScript is enabled on the client.</source>
          <target state="translated">Les rappels de script ne fonctionnent pas dans les anciens navigateurs qui ne prennent pas en charge le modèle DOM (Document Object), et ils nécessitent que ECMAScript est activé sur le client.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>To check if the browser supports callbacks, use the <ph id="ph1">&lt;xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A&gt;</ph> property, which is accessible through the <ph id="ph2">&lt;xref:System.Web.HttpRequest.Browser%2A&gt;</ph> property of the ASP.NET intrinsic <ph id="ph3">&lt;xref:System.Web.HttpContext.Request%2A&gt;</ph> object.</source>
          <target state="translated">Pour vérifier si le navigateur prend en charge les rappels, utilisez la <ph id="ph1">&lt;xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A&gt;</ph> propriété, qui est accessible via la <ph id="ph2">&lt;xref:System.Web.HttpRequest.Browser%2A&gt;</ph> propriété de ASP.NET intrinsèque <ph id="ph3">&lt;xref:System.Web.HttpContext.Request%2A&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A&gt;</ph> method to define a client postback event.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> (méthode) et le <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A&gt;</ph> méthode pour définir un événement de publication (postback) du client.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>These methods enable client script functions, when invoked, to cause the server to post back to the page.</source>
          <target state="translated">Ces méthodes activent des fonctions de script client lorsqu’elle est appelée pour que le serveur de publication sur la page.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>A client postback event is different from a client callback in that the Web page completes a normal life cycle to process the client postback event.</source>
          <target state="translated">Un événement de publication (postback) du client est différent d’un rappel client dans la mesure où la page Web effectue un cycle de vie normal pour le processus de l’événement de publication (postback) du client.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>If you are using a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;</ph> property is set to <ph id="ph3">`false`</ph>, then you can use the <ph id="ph4">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method to return the client postback event for the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control.</source>
          <target state="translated">Si vous utilisez un <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> contrôle et la <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;</ph> est définie sur <ph id="ph3">`false`</ph>, vous pouvez ensuite utiliser le <ph id="ph4">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> événement de publication de la méthode pour retourner le client le <ph id="ph5">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> contrôle.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.OnClientClick%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ImageButton&gt;</ph> control, and <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinkButton&gt;</ph> control can be used to run client script.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Button.OnClientClick%2A&gt;</ph> propriété de la <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> (contrôle), <ph id="ph3">&lt;xref:System.Web.UI.WebControls.ImageButton&gt;</ph> (contrôle), et <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinkButton&gt;</ph> contrôle peut être utilisé pour exécuter le script client.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> class.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> méthode de la <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ClientScriptManager">
          <source>Two client scripts are defined in the page: <ph id="ph1">`PopupScript`</ph>, which displays an alert message when the page is loaded, and <ph id="ph2">`ButtonClickScript`</ph>, which defines a client handler for an HTML button's <ph id="ph3">`onClick`</ph> event.</source>
          <target state="translated">Deux scripts clients sont définis dans la page : <ph id="ph1">`PopupScript`</ph>, qui affiche un message d’alerte lorsque la page est chargée, et <ph id="ph2">`ButtonClickScript`</ph>, qui définit un gestionnaire de client pour un bouton HTML <ph id="ph3">`onClick`</ph> événement.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</source>
          <target state="translated">Obtient la référence à une fonction cliente qui, lorsqu'elle est appelée, entraîne un rappel d'un événement serveur par le client.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>The server <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> that handles the client callback.</source>
          <target state="translated">Serveur <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> qui gère le rappel client.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>The control must implement the <ph id="ph1">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph> interface and provide a <ph id="ph2">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Le contrôle doit implémenter l'interface <ph id="ph1">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph> et fournir une méthode <ph id="ph2">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>An argument passed from the client script to the server</source>
          <target state="translated">Argument passé du script client au serveur</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source><ph id="ph1">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Méthode <ph id="ph1">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>The name of the client event handler that receives the result of the successful server event.</source>
          <target state="translated">Nom du gestionnaire d'événements client qui reçoit le résultat de l'événement serveur réussi.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>The client script that is evaluated on the client prior to initiating the callback.</source>
          <target state="translated">Le script client qui est évalué sur le client avant l'initialisation du rappel.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>The result of the script is passed back to the client event handler.</source>
          <target state="translated">Le résultat du script est repassé au gestionnaire d'événements client.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</source>
          <target state="translated">Obtient la référence à une fonction cliente qui, lorsqu'elle est appelée, entraîne un rappel d'un événement serveur par le client.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>The client function for this overloaded method includes a specified control, argument, client script, and context.</source>
          <target state="translated">La fonction cliente de cette méthode surchargée inclut un contrôle, un argument, un script client et un contexte spécifiés.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>The name of a client function that invokes the client callback.</source>
          <target state="translated">Nom d'une fonction cliente qui appelle le rappel client.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29&gt;</ph> method performs an out-of-band callback to the server that is a modified version of a page's normal life cycle.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29&gt;</ph> méthode effectue un rappel hors-bande sur le serveur qui est une version modifiée du cycle de vie normal d’une page.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Implementing Client Callbacks Without Postbacks<ept id="p1">](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>mise en œuvre les rappels de Client sans publications<ept id="p1">](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185)</ept>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>When the browser is Microsoft Internet Explorer (version 5.0 or later), the script callback mechanism is implemented through the Microsoft.XmlHttp COM object and requires the browser to be set to run ActiveX controls.</source>
          <target state="translated">Lorsque le navigateur est Microsoft Internet Explorer (version 5.0 ou version ultérieure), le mécanisme de rappel de script est implémenté via l’objet Microsoft.XmlHttp COM et nécessite que le navigateur soit configuré pour exécuter les contrôles ActiveX.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>For other browsers, an XMLHttpRequest using the browser's local Document Object Model (DOM) is used.</source>
          <target state="translated">Pour d’autres navigateurs, un XMLHttpRequest à l’aide local modèle DOM du navigateur (Document Object) est utilisé.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>To check whether a browser supports client callbacks, use the <ph id="ph1">&lt;xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A&gt;</ph> property.</source>
          <target state="translated">Pour vérifier si un navigateur prend en charge les rappels de client, utilisez le <ph id="ph1">&lt;xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>To check whether a browser supports XML over HTTP, use the <ph id="ph1">&lt;xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A&gt;</ph> property.</source>
          <target state="translated">Pour vérifier si un navigateur prend en charge XML sur HTTP, utilisez le <ph id="ph1">&lt;xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>Both properties are accessible through the <ph id="ph1">&lt;xref:System.Web.HttpRequest.Browser%2A&gt;</ph> property of the intrinsic ASP.NET <ph id="ph2">&lt;xref:System.Web.HttpContext.Request%2A&gt;</ph> object.</source>
          <target state="translated">Les deux propriétés sont accessibles via la <ph id="ph1">&lt;xref:System.Web.HttpRequest.Browser%2A&gt;</ph> propriété de ASP.NET intrinsèque <ph id="ph2">&lt;xref:System.Web.HttpContext.Request%2A&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> overload of the <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> method performs a callback synchronously using XML over HTTP.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> surcharge de la <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> méthode exécute un rappel synchrone à l’aide de XML sur HTTP.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>When sending data synchronously in a callback scenario, synchronous callbacks return immediately and do not block the browser.</source>
          <target state="translated">Lors de l’envoi synchrone des données dans un scénario de rappel, les rappels synchrones retournent immédiatement et ne bloquent pas le navigateur.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>No two synchronous callbacks callback can execute at the same time in the browser.</source>
          <target state="translated">Aucun deux rappels synchrones ne peuvent exécuter en même temps dans le navigateur.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>If a second synchronous callback is fired while one is currently pending, the second synchronous callback cancels the first and only the second callback will return.</source>
          <target state="translated">Si un deuxième rappel synchrone est déclenché lorsqu’une est actuellement en attente, le deuxième annule le premier et retourne uniquement le deuxième rappel.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>To send data asynchronously, use one of the overloads that takes the <ph id="ph1">`useAsync`</ph> parameter, which is a Boolean value controlling this behavior.</source>
          <target state="translated">Pour envoyer des données en mode asynchrone, utilisez une des surcharges qui acceptent le <ph id="ph1">`useAsync`</ph> paramètre, qui est une valeur booléenne valeur contrôler ce comportement.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>In the asynchronous scenario you can have multiple pending callbacks; however, the order in which they return is not guaranteed to match the order in which they were initiated.</source>
          <target state="translated">Dans le scénario asynchrone, vous pouvez avoir plusieurs rappels en attente ; Toutefois, l’ordre dans lequel elles retournent n’est pas garanti pour correspondre à l’ordre dans lequel elles ont été démarrées.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>Additionally, this overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> method specifies no client function to handle the case of an error condition generated by the <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> method.</source>
          <target state="translated">En outre, cette surcharge de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> méthode ne spécifie aucune fonction cliente pour gérer le cas d’une condition d’erreur généré par le <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>To specify a client error callback handler, use one of the overloads that takes the <ph id="ph1">`clientErrorCallback`</ph> parameter.</source>
          <target state="translated">Pour spécifier un gestionnaire de rappel d’erreur client, utilisez une des surcharges qui acceptent le <ph id="ph1">`clientErrorCallback`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29&gt;</ph> method takes an optional string <ph id="ph2">`argument`</ph> parameter and returns a string.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29&gt;</ph> méthode prend une chaîne facultative <ph id="ph2">`argument`</ph> paramètre et retourne une chaîne.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>To pass in or to receive multiple values, concatenate values in the input or return string, respectively.</source>
          <target state="translated">Pour transmettre ou recevoir plusieurs valeurs, concaténer des valeurs dans l’entrée ou retour de chaîne, respectivement.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>Avoid using the view state in the implementation of page or control properties that need be updated during script callback operations.</source>
          <target state="translated">Évitez d’utiliser l’état d’affichage dans l’implémentation de contrôle ou la page des propriétés qui doivent être mis à jour au cours des opérations de rappel de script.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>If the properties are to survive page requests, you can use session state.</source>
          <target state="translated">Si les propriétés sont survivre à des demandes de page, vous pouvez utiliser l’état de session.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>The following code example demonstrates how to use two overloads of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> method in a client callback scenario that increments integers.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser deux surcharges de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> méthode dans un scénario de rappel client qui incrémente des entiers.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>Two callback mechanisms are shown; the difference between them is the use of the <ph id="ph1">`context`</ph> parameter.</source>
          <target state="translated">Deux mécanismes de rappel sont affichées ; la différence est l’utilisation de le <ph id="ph1">`context`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>A <ph id="ph1">`ReceiveServerData1`</ph> client callback function is provided using the <ph id="ph2">`context`</ph> parameter.</source>
          <target state="translated">A <ph id="ph1">`ReceiveServerData1`</ph> fonction de rappel client est fournie à l’aide de le <ph id="ph2">`context`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>In contrast, the <ph id="ph1">`ReceiveServerData2`</ph> client callback function is defined in a <ph id="ph2">`&lt;script&gt;`</ph> block on the page.</source>
          <target state="translated">En revanche, le <ph id="ph1">`ReceiveServerData2`</ph> fonction de rappel client est définie dans un <ph id="ph2">`&lt;script&gt;`</ph> bloc sur la page.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> method is the server handler that increments the value that is passed to it and the <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A&gt;</ph> method returns the incremented value as a string.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> méthode est le Gestionnaire de serveur qui incrémente la valeur qui lui est passée et le <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A&gt;</ph> méthode retourne la valeur incrémentée sous forme de chaîne.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> method returns an error, then the <ph id="ph2">`ProcessCallBackError`</ph> client function is called.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> méthode retourne une erreur, puis le <ph id="ph2">`ProcessCallBackError`</ph> client est appelée.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> specified is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> spécifié a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> specified does not implement the <ph id="ph2">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph> interface.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> spécifié n'implémente pas l'interface <ph id="ph2">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>The server <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> that handles the client callback.</source>
          <target state="translated">Serveur <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> qui gère le rappel client.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>The control must implement the <ph id="ph1">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph> interface and provide a <ph id="ph2">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Le contrôle doit implémenter l'interface <ph id="ph1">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph> et fournir une méthode <ph id="ph2">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>An argument passed from the client script to the server</source>
          <target state="translated">Argument passé du script client au serveur</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Méthode <ph id="ph1">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>The name of the client event handler that receives the result of the successful server event.</source>
          <target state="translated">Nom du gestionnaire d'événements client qui reçoit le résultat de l'événement serveur réussi.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>The client script that is evaluated on the client prior to initiating the callback.</source>
          <target state="translated">Le script client qui est évalué sur le client avant l'initialisation du rappel.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>The result of the script is passed back to the client event handler.</source>
          <target state="translated">Le résultat du script est repassé au gestionnaire d'événements client.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to perform the callback asynchronously; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to perform the callback synchronously.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour exécuter le rappel de manière asynchrone ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour l'exécuter de manière synchrone.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</source>
          <target state="translated">Obtient la référence à une fonction cliente qui, lorsqu'elle est appelée, entraîne un rappel d'événements serveur par le client.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>The client function for this overloaded method includes a specified control, argument, client script, context, and Boolean value.</source>
          <target state="translated">La fonction cliente de cette méthode surchargée inclut un contrôle, un argument, un script client, un contexte et une valeur booléenne spécifiés.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>The name of a client function that invokes the client callback.</source>
          <target state="translated">Nom d'une fonction cliente qui appelle le rappel client.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> method requires a <ph id="ph2">`useAsync`</ph> parameter, which allows you to perform the client callback asynchronously by setting the value to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Cette surcharge de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> méthode requiert un <ph id="ph2">`useAsync`</ph> paramètre, qui vous permet d’effectuer de manière asynchrone le rappel du client en affectant la valeur <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>The overload versions of this method that do not require the <ph id="ph1">`useAsync`</ph> parameter set the value to <ph id="ph2">`false`</ph> by default.</source>
          <target state="translated">Les versions de surcharge de cette méthode qui ne requièrent pas la <ph id="ph1">`useAsync`</ph> paramètre la valeur <ph id="ph2">`false`</ph> par défaut.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>For more information on this method, see the remarks for the overload <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> method.</source>
          <target state="translated">Pour plus d’informations sur cette méthode, consultez la section Notes de la surcharge <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> specified is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> spécifié a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> specified does not implement the <ph id="ph2">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph> interface.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> spécifié n'implémente pas l'interface <ph id="ph2">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The name of a server <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> that handles the client callback.</source>
          <target state="translated">Nom d'un <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> serveur qui gère le rappel client.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The control must implement the <ph id="ph1">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph> interface and provide a <ph id="ph2">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Le contrôle doit implémenter l'interface <ph id="ph1">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph> et fournir une méthode <ph id="ph2">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>An argument passed from the client script to the server</source>
          <target state="translated">Argument passé du script client au serveur</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Méthode <ph id="ph1">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The name of the client event handler that receives the result of the successful server event.</source>
          <target state="translated">Nom du gestionnaire d'événements client qui reçoit le résultat de l'événement serveur réussi.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The client script that is evaluated on the client prior to initiating the callback.</source>
          <target state="translated">Le script client qui est évalué sur le client avant l'initialisation du rappel.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The result of the script is passed back to the client event handler.</source>
          <target state="translated">Le résultat du script est repassé au gestionnaire d'événements client.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The name of the client event handler that receives the result when an error occurs in the server event handler.</source>
          <target state="translated">Nom du gestionnaire d'événements client qui reçoit le résultat lorsqu'une erreur se produit au niveau du gestionnaire d'événements serveur.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to perform the callback asynchronously; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to perform the callback synchronously.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour exécuter le rappel de manière asynchrone ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour l'exécuter de manière synchrone.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</source>
          <target state="translated">Obtient la référence à une fonction cliente qui, lorsqu'elle est appelée, entraîne un rappel d'événements serveur par le client.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The client function for this overloaded method includes a specified target, argument, client script, context, error handler, and Boolean value.</source>
          <target state="translated">La fonction cliente de cette méthode surchargée inclut une cible, un argument, un script client, un contexte, un gestionnaire d'erreurs et une valeur booléenne spécifiés.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The name of a client function that invokes the client callback.</source>
          <target state="translated">Nom d'une fonction cliente qui appelle le rappel client.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> method takes a <ph id="ph2">`target`</ph> string parameter instead of a <ph id="ph3">&lt;xref:System.Web.UI.Control&gt;</ph> parameter.</source>
          <target state="translated">Cette surcharge de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> méthode prend un <ph id="ph2">`target`</ph> au lieu du paramètre de chaîne un <ph id="ph3">&lt;xref:System.Web.UI.Control&gt;</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>Use this overload when you want the callback to go back to something other than a string containing the <ph id="ph1">&lt;xref:System.Web.UI.Control.UniqueID%2A&gt;</ph> of the control.</source>
          <target state="translated">Utilisez cette surcharge lorsque vous souhaitez que le rappel pour revenir à autre chose qu’une chaîne contenant le <ph id="ph1">&lt;xref:System.Web.UI.Control.UniqueID%2A&gt;</ph> du contrôle.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>Additionally, this overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> method requires a <ph id="ph2">`useAsync`</ph> and a <ph id="ph3">`clientErrorCallback`</ph> parameter.</source>
          <target state="translated">En outre, cette surcharge de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> méthode requiert un <ph id="ph2">`useAsync`</ph> et un <ph id="ph3">`clientErrorCallback`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">`useAsync`</ph> parameter allows you to perform the client callback asynchronously by setting the value to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Le <ph id="ph1">`useAsync`</ph> paramètre vous permet d’effectuer de manière asynchrone le rappel du client en affectant la valeur <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The overload versions of this method that do not require the <ph id="ph1">`useAsync`</ph> parameter set the value to <ph id="ph2">`false`</ph> by default.</source>
          <target state="translated">Les versions de surcharge de cette méthode qui ne requièrent pas la <ph id="ph1">`useAsync`</ph> paramètre la valeur <ph id="ph2">`false`</ph> par défaut.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">`clientErrorCallback`</ph> parameter allows you to define the name of the client function that is called if the server handler, the <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> method, returns an error.</source>
          <target state="translated">Le <ph id="ph1">`clientErrorCallback`</ph> paramètre vous permet de définir le nom de la fonction de client qui est appelée si le Gestionnaire de serveur, le <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> méthode, retourne une erreur.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The overload versions of this method that do not require the <ph id="ph1">`clientErrorCallback`</ph> parameter set the value to null.</source>
          <target state="translated">Les versions de surcharge de cette méthode qui ne nécessitent pas le <ph id="ph1">`clientErrorCallback`</ph> paramètre la valeur null.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>For more information on this method, see the remarks for the overload <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> method.</source>
          <target state="translated">Pour plus d’informations sur cette méthode, consultez la section Notes de la surcharge <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The following code example demonstrates how to use two overloads of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> method in a client callback scenario that increments integers.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser deux surcharges de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> méthode dans un scénario de rappel client qui incrémente des entiers.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>Two callback mechanisms are shown; the difference between them is the use of the <ph id="ph1">`context`</ph> parameter.</source>
          <target state="translated">Deux mécanismes de rappel sont affichées ; la différence est l’utilisation de le <ph id="ph1">`context`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>A <ph id="ph1">`ReceiveServerData1`</ph> client callback function is provided using the <ph id="ph2">`context`</ph> parameter.</source>
          <target state="translated">A <ph id="ph1">`ReceiveServerData1`</ph> fonction de rappel client est fournie à l’aide de le <ph id="ph2">`context`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>In contrast, the <ph id="ph1">`ReceiveServerData2`</ph> client callback function is defined in a <ph id="ph2">`&lt;script&gt;`</ph> block on the page.</source>
          <target state="translated">En revanche, le <ph id="ph1">`ReceiveServerData2`</ph> fonction de rappel client est définie dans un <ph id="ph2">`&lt;script&gt;`</ph> bloc sur la page.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> method is the server handler that increments the value that is passed to it and the <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A&gt;</ph> method returns the incremented value as a string.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> méthode est le Gestionnaire de serveur qui incrémente la valeur qui lui est passée et le <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A&gt;</ph> méthode retourne la valeur incrémentée sous forme de chaîne.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> method returns an error, then the client function <ph id="ph2">`ProcessCallBackError`</ph> is called.</source>
          <target state="translated">Si le <ph id="ph1">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> méthode retourne une erreur, puis la fonction client <ph id="ph2">`ProcessCallBackError`</ph> est appelée.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The server <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> that handles the client callback.</source>
          <target state="translated">Serveur <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> qui gère le rappel client.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The control must implement the <ph id="ph1">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph> interface and provide a <ph id="ph2">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Le contrôle doit implémenter l'interface <ph id="ph1">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph> et fournir une méthode <ph id="ph2">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>An argument passed from the client script to the server <ph id="ph1">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Argument passé du script client à la méthode <ph id="ph1">&lt;see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /&gt;</ph> du serveur.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The name of the client event handler that receives the result of the successful server event.</source>
          <target state="translated">Nom du gestionnaire d'événements client qui reçoit le résultat de l'événement serveur réussi.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The client script that is evaluated on the client prior to initiating the callback.</source>
          <target state="translated">Le script client qui est évalué sur le client avant l'initialisation du rappel.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The result of the script is passed back to the client event handler.</source>
          <target state="translated">Le résultat du script est repassé au gestionnaire d'événements client.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The name of the client event handler that receives the result when an error occurs in the server event handler.</source>
          <target state="translated">Nom du gestionnaire d'événements client qui reçoit le résultat lorsqu'une erreur se produit au niveau du gestionnaire d'événements serveur.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to perform the callback asynchronously; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to perform the callback synchronously.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour exécuter le rappel de manière asynchrone ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour l'exécuter de manière synchrone.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</source>
          <target state="translated">Obtient la référence à une fonction cliente qui, lorsqu'elle est appelée, entraîne un rappel d'événements serveur par le client.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The client function for this overloaded method includes a specified control, argument, client script, context, error handler, and Boolean value.</source>
          <target state="translated">La fonction cliente de cette méthode surchargée inclut un contrôle, un argument, un script client, un contexte, un gestionnaire d'erreurs et une valeur booléenne spécifiés.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The name of a client function that invokes the client callback.</source>
          <target state="translated">Nom d'une fonction cliente qui appelle le rappel client.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> method requires a <ph id="ph2">`useAsync`</ph> and a <ph id="ph3">`clientErrorCallback`</ph> parameter.</source>
          <target state="translated">Cette surcharge de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> méthode requiert un <ph id="ph2">`useAsync`</ph> et un <ph id="ph3">`clientErrorCallback`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">`useAsync`</ph> parameter allows you to perform the client callback asynchronously by setting the value to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Le <ph id="ph1">`useAsync`</ph> paramètre vous permet d’effectuer de manière asynchrone le rappel du client en affectant la valeur <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The overload versions of this method that do not require the <ph id="ph1">`useAsync`</ph> parameter set the value to <ph id="ph2">`false`</ph> by default.</source>
          <target state="translated">Les versions de surcharge de cette méthode qui ne requièrent pas la <ph id="ph1">`useAsync`</ph> paramètre la valeur <ph id="ph2">`false`</ph> par défaut.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">`clientErrorCallback`</ph> parameter allows you to define the name of the client function that is called if the server handler (the <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> method) returns an error.</source>
          <target state="translated">Le <ph id="ph1">`clientErrorCallback`</ph> paramètre vous permet de définir le nom de la fonction de client qui est appelée si le Gestionnaire de serveur (le <ph id="ph2">&lt;xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A&gt;</ph> (méthode)) retourne une erreur.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The overload versions of this method that do not require the <ph id="ph1">`clientErrorCallback`</ph> parameter set the value to null.</source>
          <target state="translated">Les versions de surcharge de cette méthode qui ne nécessitent pas le <ph id="ph1">`clientErrorCallback`</ph> paramètre la valeur null.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>For more information on this method, see the remarks for the overload <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> method.</source>
          <target state="translated">Pour plus d’informations sur cette méthode, consultez la section Notes de la surcharge <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> specified is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> spécifié a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> specified does not implement the <ph id="ph2">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph> interface.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> spécifié n'implémente pas l'interface <ph id="ph2">&lt;see cref="T:System.Web.UI.ICallbackEventHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Gets a reference, with <ph id="ph1">&lt;see langword="javascript:" /&gt;</ph> appended to the beginning of it, that can be used in a client event to post back to the server.</source>
          <target state="translated">Obtient une référence, avec <ph id="ph1">&lt;see langword="javascript:" /&gt;</ph> ajouté en début, pouvant être utilisée dans un événement client pour effectuer une publication sur le serveur.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)">
          <source>The server control to process the postback.</source>
          <target state="translated">Contrôle serveur pour traiter la publication.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)">
          <source>The parameter passed to the server control.</source>
          <target state="translated">Paramètre passé au contrôle serveur.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)">
          <source>Gets a reference, with <ph id="ph1">&lt;see langword="javascript:" /&gt;</ph> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</source>
          <target state="translated">Obtient une référence, avec <ph id="ph1">&lt;see langword="javascript:" /&gt;</ph> ajouté en début, pouvant être utilisée dans un événement client pour republier sur le serveur pour le contrôle spécifié et avec les arguments d'événement spécifiés.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)">
          <source>A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</source>
          <target state="translated">Chaîne représentant un appel JavaScript à la fonction de publication (postback) qui inclut l'ID du contrôle cible et les arguments d'événement.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)">
          <source>Using the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method requires the control that handles the postback to implement the <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface.</source>
          <target state="translated">À l’aide de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> méthode requiert le contrôle qui gère la publication (postback) pour implémenter le <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)">
          <source>To implement the <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface for a <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph>,  use the  directive.</source>
          <target state="translated">Pour implémenter le <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> de l’interface pour un <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph>, utilisez la directive.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)">
          <source>The custom control, <ph id="ph1">`MyControl`</ph>, implements the <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface.</source>
          <target state="translated">Le contrôle personnalisé, <ph id="ph1">`MyControl`</ph>, implémente le <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)">
          <source>When the HTML anchor element on the page is clicked, the <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A&gt;</ph> method of the custom control is invoked.</source>
          <target state="translated">Lorsque vous cliquez sur l’élément d’ancrage HTML dans la page, le <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A&gt;</ph> méthode du contrôle personnalisé est appelée.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)">
          <source>The following code example has the same functionality as the preceding one, except that instead of a custom control, the <ph id="ph1">&lt;xref:System.Web.UI.Page&gt;</ph> class implements the <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface.</source>
          <target state="translated">L’exemple de code suivant a les mêmes fonctionnalités que le précédent, mais au lieu d’un contrôle personnalisé, le <ph id="ph1">&lt;xref:System.Web.UI.Page&gt;</ph> la classe implémente le <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)">
          <source>The server control to process the postback.</source>
          <target state="translated">Contrôle serveur pour traiter la publication.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)">
          <source>The parameter passed to the server control.</source>
          <target state="translated">Paramètre passé au contrôle serveur.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to register the postback event for validation; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to not register the post back event for validation.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour inscrire l'événement de publication en vue de la validation ; <ph id="ph2">&lt;see langword="false" /&gt;</ph> pour ne pas inscrire l'événement de publication en vue de la validation.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)">
          <source>Gets a reference, with <ph id="ph1">&lt;see langword="javascript:" /&gt;</ph> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control with the specified event arguments and Boolean indication whether to register the post back for event validation.</source>
          <target state="translated">Obtient une référence, avec <ph id="ph1">&lt;see langword="javascript:" /&gt;</ph> ajouté en début, pouvant être utilisée dans un événement client pour republier sur le serveur pour le contrôle spécifié avec les arguments d'événement spécifiés et une indication booléenne précisant s'il faut inscrire la publication pour la validation d'événement.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)">
          <source>A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</source>
          <target state="translated">Chaîne représentant un appel JavaScript à la fonction de publication (postback) qui inclut l'ID du contrôle cible et les arguments d'événement.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)">
          <source>Using the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method requires the control that handles the postback to implement the <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface.</source>
          <target state="translated">À l’aide de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> méthode requiert le contrôle qui gère la publication (postback) pour implémenter le <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)">
          <source>To implement the <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface for a <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph>, use the  directive.</source>
          <target state="translated">Pour implémenter le <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> de l’interface pour un <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph>, utilisez la directive.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Returns a string that can be used in a client event to cause postback to the server.</source>
          <target state="translated">Retourne une chaîne qui peut être utilisée dans un événement client pour provoquer une publication (postback) sur le serveur.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> that defines the postback.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> qui définit une publication.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)">
          <source>Returns a string that can be used in a client event to cause postback to the server.</source>
          <target state="translated">Retourne une chaîne qui peut être utilisée dans un événement client pour provoquer une publication (postback) sur le serveur.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)">
          <source>The reference string is defined by the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> instance.</source>
          <target state="translated">La chaîne de référence est définie par l'instance de <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> spécifiée.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)">
          <source>A string that, when treated as script on the client, initiates the client postback.</source>
          <target state="translated">Chaîne qui, traitée comme un script sur le client, initialise la publication cliente.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)">
          <source>To implement the <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface for a <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph>,  use the  directive.</source>
          <target state="translated">Pour implémenter le <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> de l’interface pour un <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph>, utilisez la directive.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method can be used with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control when the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;</ph> property is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> méthode peut être utilisée avec la <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> contrôle lorsque le <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;</ph> propriété est <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method returns the client postback event for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control.</source>
          <target state="translated">Dans ce scénario, le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> événement de publication de client de méthode retourne la <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> contrôle.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph></source>
          <target state="translated">Le paramètre <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)">
          <source>The server <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> that processes the postback on the server.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> serveur qui traite la publication sur le serveur.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)">
          <source>A string of optional arguments to pass to the control that processes the postback.</source>
          <target state="translated">Chaîne d'arguments facultative à passer au contrôle qui traite la publication.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)">
          <source>Returns a string that can be used in a client event to cause postback to the server.</source>
          <target state="translated">Retourne une chaîne qui peut être utilisée dans un événement client pour provoquer une publication (postback) sur le serveur.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)">
          <source>The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</source>
          <target state="translated">La chaîne de référence est définie par le contrôle spécifié qui gère la publication (postback) et un argument de chaîne d'autres informations d'événement.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)">
          <source>A string that, when treated as script on the client, initiates the postback.</source>
          <target state="translated">Chaîne qui, traitée comme un script sur le client, initialise la publication (postback).</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)">
          <source>To implement the <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface for a <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph>,  use the  directive.</source>
          <target state="translated">Pour implémenter le <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> de l’interface pour un <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph>, utilisez la directive.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method can be used with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control when the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;</ph> property is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> méthode peut être utilisée avec la <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> contrôle lorsque le <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;</ph> propriété est <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method returns the client postback event for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control.</source>
          <target state="translated">Dans ce scénario, le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> événement de publication de client de méthode retourne la <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> contrôle.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)">
          <source>The custom control, <ph id="ph1">`MyControl`</ph>, implements the <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface.</source>
          <target state="translated">Le contrôle personnalisé, <ph id="ph1">`MyControl`</ph>, implémente le <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)">
          <source>When the button on the page is clicked, the <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A&gt;</ph> method of the custom control is invoked.</source>
          <target state="translated">Lorsque vous cliquez sur le bouton de la page, le <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A&gt;</ph> méthode du contrôle personnalisé est appelée.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)">
          <source>The following code example has the same functionality as the preceding one, except that instead of a custom control, the <ph id="ph1">&lt;xref:System.Web.UI.Page&gt;</ph> class implements the <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface.</source>
          <target state="translated">L’exemple de code suivant a les mêmes fonctionnalités que le précédent, mais au lieu d’un contrôle personnalisé, le <ph id="ph1">&lt;xref:System.Web.UI.Page&gt;</ph> la classe implémente le <ph id="ph2">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)">
          <source>The specified <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> spécifié a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> that defines the postback.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> qui définit une publication.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to register the event reference for validation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour inscrire la référence d'événement en vue de la validation ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)">
          <source>Returns a string that can be used in a client event to cause postback to the server.</source>
          <target state="translated">Retourne une chaîne qui peut être utilisée dans un événement client pour provoquer une publication (postback) sur le serveur.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)">
          <source>The reference string is defined by the specified <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> object.</source>
          <target state="translated">La chaîne de référence est définie par l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)">
          <source>Optionally, registers the event reference for validation.</source>
          <target state="translated">Inscrit en option la référence d'événement pour la validation.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)">
          <source>A string that, when treated as script on the client, initiates the client postback.</source>
          <target state="translated">Chaîne qui, traitée comme un script sur le client, initialise la publication cliente.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)">
          <source>To implement the <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface for a <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph> object, use the  directive.</source>
          <target state="translated">Pour implémenter le <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> de l’interface pour un <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph> d’objet, utilisez la directive.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method can be used with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control when the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;</ph> property is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> méthode peut être utilisée avec la <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> contrôle lorsque le <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;</ph> propriété est <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method returns the client postback event for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control.</source>
          <target state="translated">Dans ce scénario, le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> événement de publication de client de méthode retourne la <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> contrôle.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)">
          <source>If <ph id="ph1">`registerForEventValidation`</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29&gt;</ph> method calls the <ph id="ph4">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29&gt;</ph> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</source>
          <target state="translated">Si <ph id="ph1">`registerForEventValidation`</ph> est <ph id="ph2">`true`</ph>, le <ph id="ph3">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29&gt;</ph> les appels de méthode le <ph id="ph4">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29&gt;</ph> méthode pour inscrire la référence d’événement pour la validation avec un ID de contrôle unique qui représente le contrôle client qui génère l’événement.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)">
          <source>The server <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> that processes the postback on the server.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> serveur qui traite la publication sur le serveur.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)">
          <source>A string of optional arguments to pass to <bpt id="p1">&lt;c&gt;</bpt>control<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Chaîne d’arguments facultatifs à passer à <bpt id="p1">&lt;c&gt;</bpt>control<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to register the event reference for validation; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> pour inscrire la référence d'événement en vue de la validation ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)">
          <source>Returns a string to use in a client event to cause postback to the server.</source>
          <target state="translated">Retourne une chaîne à utiliser dans un événement client pour provoquer une publication sur le serveur.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)">
          <source>The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</source>
          <target state="translated">La chaîne de référence est définie par le contrôle spécifié qui gère la publication (postback) et un argument de chaîne d'autres informations d'événement.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)">
          <source>Optionally, registers the event reference for validation.</source>
          <target state="translated">Inscrit en option la référence d'événement pour la validation.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)">
          <source>A string that, when treated as script on the client, initiates the postback.</source>
          <target state="translated">Chaîne qui, traitée comme un script sur le client, initialise la publication (postback).</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)">
          <source>To implement the <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> interface for a <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph>, use the  directive.</source>
          <target state="translated">Pour implémenter le <ph id="ph1">&lt;xref:System.Web.UI.IPostBackEventHandler&gt;</ph> de l’interface pour un <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph>, utilisez la directive.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method can be used with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control when the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;</ph> property is <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> méthode peut être utilisée avec la <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> contrôle lorsque le <ph id="ph3">&lt;xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A&gt;</ph> propriété est <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)">
          <source>In this scenario, the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> method returns the client postback event for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> control.</source>
          <target state="translated">Dans ce scénario, le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A&gt;</ph> événement de publication de client de méthode retourne la <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Button&gt;</ph> contrôle.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)">
          <source>If <ph id="ph1">`registerForEventValidation`</ph> is true, the <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29&gt;</ph> method calls the <ph id="ph3">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29&gt;</ph> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</source>
          <target state="translated">Si <ph id="ph1">`registerForEventValidation`</ph> a la valeur true, le <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29&gt;</ph> les appels de méthode le <ph id="ph3">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29&gt;</ph> méthode pour inscrire la référence d’événement pour la validation avec un ID de contrôle unique qui représente le contrôle client qui génère l’événement.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)">
          <source>The specified <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> spécifié a la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>The type of the resource.</source>
          <target state="translated">Le type de la ressource.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>The fully qualified name of the resource in the assembly.</source>
          <target state="translated">Nom qualifié complet de la ressource dans l'assembly.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>Gets a URL reference to a resource in an assembly.</source>
          <target state="translated">Obtient une référence de type URL à une ressource dans un assembly.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>The URL reference to the resource.</source>
          <target state="translated">Référence de type URL à la ressource.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A&gt;</ph> method returns a URL reference to a resource embedded in an assembly.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A&gt;</ph> méthode retourne une référence URL à une ressource incorporée dans un assembly.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>The returned reference is not URL encoded.</source>
          <target state="translated">La référence retournée n’est pas encodé en URL.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>Resources can be script files, images, or any static file.</source>
          <target state="translated">Ressources peuvent être n’importe quel fichier statique, des images ou des fichiers de script.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>You specify the type based on the object that will be accessing the resource.</source>
          <target state="translated">Vous spécifiez le type de l’objet qui accédera à la ressource.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>A Web resource registered with the page is uniquely identified by its type and name.</source>
          <target state="translated">Une ressource Web inscrite avec la page est identifiée par son type et son nom.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>Only one resource with a given type and name pair can be registered with the page.</source>
          <target state="translated">Une seule ressource avec une paire de nom et un type donné peut être inscrit avec la page.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>Attempting to register a resource that is already registered does not create a duplicate of the registered resource.</source>
          <target state="translated">Tentative d’inscription d’une ressource qui est déjà inscrit ne crée pas un doublon de la ressource inscrite.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A&gt;</ph> method is used in conjunction with the <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A&gt;</ph> method for accessing resources embedded in assemblies.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A&gt;</ph> méthode est utilisée conjointement avec la <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A&gt;</ph> méthode pour accéder aux ressources incorporés dans des assemblys.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>For more information on using resources in applications, see <bpt id="p1">[</bpt>ASP.NET Web Page Resources Overview<ept id="p1">](http://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd)</ept>.</source>
          <target state="translated">Pour plus d’informations sur l’utilisation des ressources dans les applications, consultez <bpt id="p1">[</bpt>vue d’ensemble des ressources de Page Web ASP.NET<ept id="p1">](http://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd)</ept>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>The <bpt id="p1">*</bpt>type<ept id="p1">*</ept> parameter in this example is set to the type of class in the assembly containing the resource.</source>
          <target state="translated">Le <bpt id="p1">*</bpt>type<ept id="p1">*</ept> dans cet exemple est affectée au type de classe dans l’assembly contenant la ressource.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>The <ph id="ph1">`resourceName`</ph> parameter is specified with the fully qualified path to the resource, which includes the default namespace.</source>
          <target state="translated">Le <ph id="ph1">`resourceName`</ph> paramètre est spécifié avec le chemin d’accès complet à la ressource, qui inclut l’espace de noms par défaut.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>The following code example demonstrates how to programmatically apply the <ph id="ph1">&lt;xref:System.Web.UI.WebResourceAttribute&gt;</ph> metadata attribute to mark the assembly for the resources that will be served.</source>
          <target state="translated">L’exemple de code suivant montre comment appliquer par programme le <ph id="ph1">&lt;xref:System.Web.UI.WebResourceAttribute&gt;</ph> attribut de métadonnées pour marquer l’assembly pour les ressources qui sera pris en charge.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>Compile the following class in a class library with a default namespace set to <ph id="ph1">`Samples.AspNet.CS.Controls`</ph> or <ph id="ph2">`Samples.AspNet.VB.Controls`</ph>, depending on what language you are using.</source>
          <target state="translated">Compilez la classe suivante dans une bibliothèque de classes avec un espace de noms par défaut la valeur <ph id="ph1">`Samples.AspNet.CS.Controls`</ph> ou <ph id="ph2">`Samples.AspNet.VB.Controls`</ph>, selon le langage que vous utilisez.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>This example requires a JavaScript file named <ph id="ph1">`Script_include.js`</ph>.</source>
          <target state="translated">Cet exemple nécessite un fichier JavaScript nommé <ph id="ph1">`Script_include.js`</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>The .js file is an embedded resource in the assembly that contains the <ph id="ph1">`ClientScriptResourceLabel`</ph> object.</source>
          <target state="translated">Le fichier .js est une ressource incorporée dans l’assembly qui contient le <ph id="ph1">`ClientScriptResourceLabel`</ph> objet.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>If you are using <ph id="ph1">[!INCLUDE[vs_current_short](~/includes/vs-current-short-md.md)]</ph>, in the Properties window of the class library project, set <bpt id="p1">**</bpt>Build Action<ept id="p1">**</ept> to <bpt id="p2">**</bpt>Embedded Resource<ept id="p2">**</ept> when the script file is selected.</source>
          <target state="translated">Si vous utilisez <ph id="ph1">[!INCLUDE[vs_current_short](~/includes/vs-current-short-md.md)]</ph>, dans la fenêtre Propriétés de projet bibliothèque de classes, définissez <bpt id="p1">**</bpt>Action de génération<ept id="p1">**</ept> à <bpt id="p2">**</bpt>ressource incorporée<ept id="p2">**</ept> lorsque le fichier de script est activée.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>If you are compiling the library at the command line, use the  switch to embed the resource.</source>
          <target state="translated">Si vous compilez la bibliothèque en ligne de commande, utilisez le commutateur pour incorporer la ressource.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>The web resource name is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le nom de la ressource Web est <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> ou -</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)">
          <source>The web resource name has a length of zero.</source>
          <target state="translated">La longueur du nom de la ressource Web est de zéro.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Determines whether the client script block is registered with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object.</source>
          <target state="translated">Détermine si le bloc de script client est inscrit avec l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)">
          <source>The key of the client script block to search for.</source>
          <target state="translated">Clé du bloc de script client à rechercher.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)">
          <source>Determines whether the client script block is registered with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using the specified key.</source>
          <target state="translated">Détermine si le bloc de script client est inscrit avec l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> à l'aide de la clé spécifiée.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the client script block is registered; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le bloc de script client est enregistré ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)">
          <source>Call this method before calling the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method to avoid registering duplicate scripts.</source>
          <target state="translated">Appelez cette méthode avant d’appeler le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> méthode pour éviter d’inscrire des scripts dupliqués.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)">
          <source>This is particularly important if the script requires a large amount of server resources to create.</source>
          <target state="translated">Cela est particulièrement important si le script nécessite une grande quantité de ressources du serveur à créer.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)">
          <source>A client script is uniquely identified by its key and its type.</source>
          <target state="translated">Un script client est identifié de manière unique par sa clé et son type.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">Les scripts avec la même clé et le même type sont considérés comme des doublons.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A&gt;</ph> method calls the overload that takes both a <ph id="ph2">`key`</ph> and a <ph id="ph3">`type`</ph> parameter with the type set as a <ph id="ph4">&lt;xref:System.Web.UI.Page&gt;</ph> object</source>
          <target state="translated">Cette surcharge de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A&gt;</ph> méthode appelle la surcharge qui accepte à la fois un <ph id="ph2">`key`</ph> et un <ph id="ph3">`type`</ph> paramètre avec le type est défini comme un <ph id="ph4">&lt;xref:System.Web.UI.Page&gt;</ph> objet</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source>The type of the client script block to search for.</source>
          <target state="translated">Type du bloc de script client à rechercher.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source>The key of the client script block to search for.</source>
          <target state="translated">Clé du bloc de script client à rechercher.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source>Determines whether the client script block is registered with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using a key and type.</source>
          <target state="translated">Détermine si le bloc de script client est inscrit avec l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> à l'aide d'une clé et d'un type.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the client script block is registered; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le bloc de script client est enregistré ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source>Call this method before calling the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method to avoid registering duplicate scripts.</source>
          <target state="translated">Appelez cette méthode avant d’appeler le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> méthode pour éviter d’inscrire des scripts dupliqués.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source>This is particularly important if the script requires a large amount of server resources to create.</source>
          <target state="translated">Cela est particulièrement important si le script nécessite une grande quantité de ressources du serveur à créer.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source>A client script is uniquely identified by its key and its type.</source>
          <target state="translated">Un script client est identifié de manière unique par sa clé et son type.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">Les scripts avec la même clé et le même type sont considérés comme des doublons.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source>You specify the type based on the object that will be accessing the resource.</source>
          <target state="translated">Vous spécifiez le type de l’objet qui accédera à la ressource.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source>For instance, when using a <ph id="ph1">`Page`</ph> instance to access the resource, you specify the <ph id="ph2">`Page`</ph> type.</source>
          <target state="translated">Par exemple, lorsque vous utilisez un <ph id="ph1">`Page`</ph> instance pour accéder à la ressource, vous spécifiez la <ph id="ph2">`Page`</ph> type.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source>Note that, if the logic to check for the existing client script block were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method checks for duplicates.</source>
          <target state="translated">Notez que, si la logique à vérifier pour le bloc de script client existant était supprimée, il ne soit pas deux scripts clients en double dans le code source HTML de la page rendue, car la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> méthode vérifie les doublons.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source>The benefit of checking is to reduce unnecessary computation.</source>
          <target state="translated">L’avantage de la vérification est de réduire les calculs inutiles.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)">
          <source>The client script type is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le type du script client est <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Determines whether the client script include is registered with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object.</source>
          <target state="translated">Détermine si le script client Include est inscrit avec l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)">
          <source>The key of the client script include to search for.</source>
          <target state="translated">Clé du script client Include à rechercher.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)">
          <source>Determines whether the client script include is registered with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using the specified key.</source>
          <target state="translated">Détermine si le script client Include est inscrit avec l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> à l'aide de la clé spécifiée.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the client script include is registered; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le script client Include est enregistré ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)">
          <source>Call this method before calling the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> method to avoid registering duplicate scripts.</source>
          <target state="translated">Appelez cette méthode avant d’appeler le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> méthode pour éviter d’inscrire des scripts dupliqués.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)">
          <source>This is particularly important if the script requires a large amount of server resources to create.</source>
          <target state="translated">Cela est particulièrement important si le script nécessite une grande quantité de ressources du serveur à créer.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)">
          <source>A client script include is uniquely identified by its key and its type.</source>
          <target state="translated">Un script client include est identifié de manière unique par sa clé et son type.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">Les scripts avec la même clé et le même type sont considérés comme des doublons.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;</ph> method calls the overload that takes both a <ph id="ph2">`key`</ph> and a <ph id="ph3">`type`</ph> parameter with the type set as a <ph id="ph4">&lt;xref:System.Web.UI.Page&gt;</ph> object.</source>
          <target state="translated">Cette surcharge de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;</ph> méthode appelle la surcharge qui accepte à la fois un <ph id="ph2">`key`</ph> et un <ph id="ph3">`type`</ph> paramètre avec le type est défini comme un <ph id="ph4">&lt;xref:System.Web.UI.Page&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>The type of the client script include to search for.</source>
          <target state="translated">Type du script client Include à rechercher.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>The key of the client script include to search for.</source>
          <target state="translated">Clé du script client Include à rechercher.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>Determines whether the client script include is registered with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using a key and type.</source>
          <target state="translated">Détermine si le script client Include est inscrit avec l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> à l'aide d'une clé et d'un type.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the client script include is registered; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le script client Include est enregistré ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>Call this method before calling the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> method to avoid registering duplicate client script includes.</source>
          <target state="translated">Appelez cette méthode avant d’appeler le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> inclut de méthode pour éviter d’inscrire le script client en double.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>This is particularly important if the script requires a large amount of server resources to create.</source>
          <target state="translated">Cela est particulièrement important si le script nécessite une grande quantité de ressources du serveur à créer.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>A client script include is uniquely identified by its key and its type.</source>
          <target state="translated">Un script client include est identifié de manière unique par sa clé et son type.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">Les scripts avec la même clé et le même type sont considérés comme des doublons.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>You specify the type based on the object that will be accessing the resource.</source>
          <target state="translated">Vous spécifiez le type de l’objet qui accédera à la ressource.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>For instance, when using a Page instance to access the resource, you specify the <ph id="ph1">`Page`</ph> type.</source>
          <target state="translated">Par exemple, lorsque vous utilisez une instance de Page pour accéder à la ressource, vous spécifiez la <ph id="ph1">`Page`</ph> type.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>Note that, if the logic to check for the existing client script include were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> method checks for duplicates.</source>
          <target state="translated">Notez que, si la logique à vérifier pour le script client include existant était supprimée, il ne soit pas deux scripts clients en double dans le code source HTML de la page rendue, car la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> méthode vérifie les doublons.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>The benefit of checking is to reduce unnecessary computation.</source>
          <target state="translated">L’avantage de la vérification est de réduire les calculs inutiles.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>This example requires a JavaScript file named <ph id="ph1">`Script_include.js`</ph>, with the following contents:</source>
          <target state="translated">Cet exemple nécessite un fichier JavaScript nommé <ph id="ph1">`Script_include.js`</ph>, avec le contenu suivant :</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)">
          <source>The client script include type is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le type du script client Include est <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Determines whether the OnSubmit statement is registered with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object.</source>
          <target state="translated">Détermine si l'instruction OnSubmit est inscrite avec l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)">
          <source>The key of the OnSubmit statement to search for.</source>
          <target state="translated">Clé de l'instruction OnSubmit à rechercher.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)">
          <source>Determines whether the OnSubmit statement is registered with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using the specified key.</source>
          <target state="translated">Détermine si l'instruction OnSubmit est inscrite avec l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> à l'aide de la clé spécifiée.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the OnSubmit statement is registered; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'instruction OnSubmit est inscrite ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)">
          <source>Call this method before calling the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;</ph> method to avoid registering duplicate OnSubmit statements.</source>
          <target state="translated">Appelez cette méthode avant d’appeler le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;</ph> méthode pour éviter d’inscrire des instructions OnSubmit en double.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)">
          <source>This is particularly important if the statement requires a large amount of server resources to create.</source>
          <target state="translated">Cela est particulièrement important si l’instruction nécessite une grande quantité de ressources du serveur à créer.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)">
          <source>A statement is uniquely identified by its key and its type.</source>
          <target state="translated">Une instruction est identifiée par sa clé et son type.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)">
          <source>Statements with the same key and type are considered duplicates.</source>
          <target state="translated">Les instructions avec la même clé et le même type sont considérés comme des doublons.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A&gt;</ph> method calls the overload that takes both a <ph id="ph2">`key`</ph> and a <ph id="ph3">`type`</ph> parameter with the type set as a <ph id="ph4">&lt;xref:System.Web.UI.Page&gt;</ph> object</source>
          <target state="translated">Cette surcharge de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A&gt;</ph> méthode appelle la surcharge qui accepte à la fois un <ph id="ph2">`key`</ph> et un <ph id="ph3">`type`</ph> paramètre avec le type est défini comme un <ph id="ph4">&lt;xref:System.Web.UI.Page&gt;</ph> objet</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)">
          <source>The type of the OnSubmit statement to search for.</source>
          <target state="translated">Type de l'instruction OnSubmit à rechercher.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)">
          <source>The key of the OnSubmit statement to search for.</source>
          <target state="translated">Clé de l'instruction OnSubmit à rechercher.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)">
          <source>Determines whether the OnSubmit statement is registered with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using the specified key and type.</source>
          <target state="translated">Détermine si l'instruction OnSubmit est inscrite avec l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> à l'aide de la clé et du type spécifiés.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the OnSubmit statement is registered; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si l'instruction OnSubmit est inscrite ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)">
          <source>Call this method before calling the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;</ph> method to avoid registering duplicate statements.</source>
          <target state="translated">Appelez cette méthode avant d’appeler le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;</ph> méthode pour éviter d’inscrire des instructions en double.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)">
          <source>This is particularly important if the statement requires a large amount of server resources to create.</source>
          <target state="translated">Cela est particulièrement important si l’instruction nécessite une grande quantité de ressources du serveur à créer.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)">
          <source>A statement is uniquely identified by its key and its type.</source>
          <target state="translated">Une instruction est identifiée par sa clé et son type.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)">
          <source>Statements with the same key and type are considered duplicates.</source>
          <target state="translated">Les instructions avec la même clé et le même type sont considérés comme des doublons.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)">
          <source>You specify the type based on the object that will be accessing the resource.</source>
          <target state="translated">Vous spécifiez le type de l’objet qui accédera à la ressource.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)">
          <source>For instance, when using a <ph id="ph1">`Page`</ph> instance to access the resource, you specify the <ph id="ph2">`Page`</ph> type.</source>
          <target state="translated">Par exemple, lorsque vous utilisez un <ph id="ph1">`Page`</ph> instance pour accéder à la ressource, vous spécifiez la <ph id="ph2">`Page`</ph> type.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)">
          <source>A script named <ph id="ph1">`OnSubmitScript`</ph> is registered with the <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph> so that when the page's form is submitted the script is invoked.</source>
          <target state="translated">Un script nommé <ph id="ph1">`OnSubmitScript`</ph> est inscrit avec le <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph> afin que lorsque l’écran de la page est envoyé le script est appelé.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)">
          <source>The OnSubmit statement type is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le type de l'instruction OnSubmit est <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Determines whether the startup script is registered with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object.</source>
          <target state="translated">Détermine si le script de démarrage est inscrit avec l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)">
          <source>The key of the startup script to search for.</source>
          <target state="translated">Clé du script de démarrage à rechercher.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)">
          <source>Determines whether the startup script is registered with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using the specified key.</source>
          <target state="translated">Détermine si le script de démarrage est inscrit avec l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> à l'aide de la clé spécifiée.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the startup script is registered; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le script de démarrage est inscrit ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)">
          <source>Call this method before calling the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> method to avoid registering duplicate scripts.</source>
          <target state="translated">Appelez cette méthode avant d’appeler le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> méthode pour éviter d’inscrire des scripts dupliqués.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)">
          <source>This is particularly important if the script requires a large amount of server resources to create.</source>
          <target state="translated">Cela est particulièrement important si le script nécessite une grande quantité de ressources du serveur à créer.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)">
          <source>A startup script is uniquely identified by its key and its type.</source>
          <target state="translated">Un script de démarrage est identifié de manière unique par sa clé et son type.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">Les scripts avec la même clé et le même type sont considérés comme des doublons.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;</ph> method calls the overload that takes both a string <ph id="ph2">`key`</ph> and a <ph id="ph3">`type`</ph> parameter with the type set as a <ph id="ph4">&lt;xref:System.Web.UI.Page&gt;</ph> object</source>
          <target state="translated">Cette surcharge de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;</ph> méthode appelle la surcharge qui accepte à la fois une chaîne <ph id="ph2">`key`</ph> et un <ph id="ph3">`type`</ph> paramètre avec le type est défini comme un <ph id="ph4">&lt;xref:System.Web.UI.Page&gt;</ph> objet</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)">
          <source>The type of the startup script to search for.</source>
          <target state="translated">Type du script de démarrage à rechercher.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)">
          <source>The key of the startup script to search for.</source>
          <target state="translated">Clé du script de démarrage à rechercher.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)">
          <source>Determines whether the startup script is registered with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using the specified key and type.</source>
          <target state="translated">Détermine si le script de démarrage est inscrit avec l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> à l'aide de la clé et du type spécifiés.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the startup script is registered; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> si le script de démarrage est inscrit ; sinon, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)">
          <source>Call this method before calling the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> method to avoid registering duplicate scripts.</source>
          <target state="translated">Appelez cette méthode avant d’appeler le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> méthode pour éviter d’inscrire des scripts dupliqués.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)">
          <source>This is particularly important if the script requires a large amount of server resources to create.</source>
          <target state="translated">Cela est particulièrement important si le script nécessite une grande quantité de ressources du serveur à créer.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)">
          <source>A client startup script is uniquely identified by its key and its type.</source>
          <target state="translated">Un script de démarrage du client est identifié de manière unique par sa clé et son type.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">Les scripts avec la même clé et le même type sont considérés comme des doublons.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)">
          <source>Note that, if the logic to check for the existing startup script block were removed, there would not be two duplicate startup scripts in the HTML source code of the rendered page because the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> method checks for duplicates.</source>
          <target state="translated">Notez que, si la logique à vérifier pour le bloc de script de démarrage existantes ont été supprimée, il ne soit pas deux scripts de démarrage en double dans le code source HTML de la page rendue, car la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> méthode vérifie les doublons.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)">
          <source>The benefit of checking is to reduce unnecessary computation.</source>
          <target state="translated">L’avantage de la vérification est de réduire les calculs inutiles.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)">
          <source>The startup script type is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le type du script de démarrage est <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)">
          <source>The array name to register.</source>
          <target state="translated">Nom de tableau à inscrire.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)">
          <source>The array value or values to register.</source>
          <target state="translated">Valeur(s) de tableau à inscrire.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)">
          <source>Registers a JavaScript array declaration with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using an array name and array value.</source>
          <target state="translated">Inscrit une déclaration de tableau JavaScript avec l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> à l'aide d'un nom de tableau et d'une valeur de tableau.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A&gt;</ph> checks to see whether a registered array exists with the same name as the name specified in the <ph id="ph2">`arrayName`</ph> parameter and, if so, adds the values specified in the <ph id="ph3">`arrayValue`</ph> parameter.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A&gt;</ph> vérifie l’existence d’un tableau inscrit avec le même nom que le nom spécifié dans le <ph id="ph2">`arrayName`</ph> paramètre et, dans ce cas, ajoute les valeurs spécifiées dans le <ph id="ph3">`arrayValue`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)">
          <source>Because the underlying storage mechanism is based on an <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, duplicates are allowed.</source>
          <target state="translated">Étant donné que le mécanisme de stockage sous-jacent est basé sur un <ph id="ph1">&lt;xref:System.Collections.ArrayList&gt;</ph>, les doublons sont autorisés.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)">
          <source>If a registered array with the same name as the <ph id="ph1">`arrayName`</ph> parameter does not exist, it is created and the values in the <ph id="ph2">`arrayValue`</ph> parameter added to it.</source>
          <target state="translated">Si un tableau inscrit avec le même nom que le <ph id="ph1">`arrayName`</ph> paramètre n’existe pas, elle est créée et les valeurs dans le <ph id="ph2">`arrayValue`</ph> paramètre ajouté à celle-ci.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)">
          <source>If you want string literals in the resulting JavaScript array, include single quotation marks (') or escaped double quotation marks (<ph id="ph1">\\</ph>") in the <ph id="ph2">`arrayValue`</ph> parameter.</source>
          <target state="translated">Si vous souhaitez que les littéraux de chaîne dans le tableau JavaScript résultant, inclure des guillemets simples (') ou des guillemets doubles (<ph id="ph1">\\</ph>») dans le <ph id="ph2">`arrayValue`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)">
          <source>The value of the <ph id="ph1">`arrayValue`</ph> parameter should be a single element.</source>
          <target state="translated">La valeur de le <ph id="ph1">`arrayValue`</ph> paramètre doit être un seul élément.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)">
          <source>If more than one value needs to be added to the array, make multiple calls using the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A&gt;</ph> method.</source>
          <target state="translated">Si plus d’une valeur doit être ajouté à la baie, effectuer plusieurs appels à l’aide de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A&gt;</ph> methods.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)">
          <source>The example registers an array and a hidden value and defines the <ph id="ph1">`OnClick`</ph> event of an <ph id="ph2">`&lt;input&gt;`</ph> button to calculate the sum of two values of the array and the hidden value.</source>
          <target state="translated">L’exemple inscrit un tableau et une valeur masquée et définit les <ph id="ph1">`OnClick`</ph> événements d’un <ph id="ph2">`&lt;input&gt;`</ph> bouton pour calculer la somme de deux valeurs du tableau et la valeur masquée.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="arrayName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="arrayName" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Registers the client script with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object.</source>
          <target state="translated">Inscrit le script client avec l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>The type of the client script to register.</source>
          <target state="translated">Type du script client à inscrire.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>The key of the client script to register.</source>
          <target state="translated">Clé du script client à inscrire.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>The client script literal to register.</source>
          <target state="translated">Littéral du script client à inscrire.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>Registers the client script with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using a type, key, and script literal.</source>
          <target state="translated">Inscrit le script client avec l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> à l'aide d'un type, d'une clé et d'un littéral de script.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>A client script is uniquely identified by its key and its type.</source>
          <target state="translated">Un script client est identifié de manière unique par sa clé et son type.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">Les scripts avec la même clé et le même type sont considérés comme des doublons.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>Only one script with a given type and key pair can be registered with the page.</source>
          <target state="translated">Un seul script avec un type donné et une paire de clés peut être inscrits avec la page.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>Attempting to register a script that is already registered does not create a duplicate of the script.</source>
          <target state="translated">Tente d’inscrire un script qui est déjà inscrit ne crée pas un doublon du script.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>Call the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A&gt;</ph> method to determine whether a client script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</source>
          <target state="translated">Appelez le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A&gt;</ph> méthode pour déterminer si un script client avec une paire clé / type donnée est déjà enregistré et éviter toute tentative d’ajouter le script.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>In this overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method, you must make sure that the script provided in the <ph id="ph2">`script`</ph> parameter is wrapped in a <ph id="ph3">`&lt;script&gt;`</ph> element block.</source>
          <target state="translated">Dans cette surcharge de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> (méthode), vous devez vous assurer que le script fourni dans le <ph id="ph2">`script`</ph> paramètre est encapsulé dans un <ph id="ph3">`&lt;script&gt;`</ph> bloc d’élément.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method adds a script block to the top of the rendered page.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> méthode ajoute un bloc de script en haut de la page rendue.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>The script blocks are not guaranteed to be output in the order they are registered.</source>
          <target state="translated">Les blocs de script ne sont pas garanti que la sortie dans l’ordre qu’ils sont inscrits.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>If the order of the script blocks is important, use a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object to gather the scripts together in a single string, and then register them all in a single client script block.</source>
          <target state="translated">Si l’ordre des blocs de script est important, utilisez un <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> pour rassembler les scripts dans une chaîne unique de l’objet, puis tous les enregistrer dans un bloc de script client unique.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>The type of the client script to register.</source>
          <target state="translated">Type du script client à inscrire.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>The key of the client script to register.</source>
          <target state="translated">Clé du script client à inscrire.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>The client script literal to register.</source>
          <target state="translated">Littéral du script client à inscrire.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>A Boolean value indicating whether to add script tags.</source>
          <target state="translated">Valeur Boolean qui indique s'il faut ajouter des balises de script.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>Registers the client script with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using a type, key, script literal, and Boolean value indicating whether to add script tags.</source>
          <target state="translated">Inscrit le script client avec l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> à l'aide d'un type, d'une clé, d'un littéral de script et d'une valeur Boolean indiquant s'il faut ajouter des balises de script.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>A client script is uniquely identified by its key and its type.</source>
          <target state="translated">Un script client est identifié de manière unique par sa clé et son type.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">Les scripts avec la même clé et le même type sont considérés comme des doublons.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>Only one script with a given type and key pair can be registered with the page.</source>
          <target state="translated">Un seul script avec un type donné et une paire de clés peut être inscrits avec la page.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>Attempting to register a script that is already registered does not create a duplicate of the script.</source>
          <target state="translated">Tente d’inscrire un script qui est déjà inscrit ne crée pas un doublon du script.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>Call the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A&gt;</ph> method to determine whether a client script with a given key and type pair is already registered.</source>
          <target state="translated">Appelez le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A&gt;</ph> méthode pour déterminer si un script client avec une paire clé / type donnée est déjà inscrit.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>This lets you avoid unnecessarily attempting to add the script.</source>
          <target state="translated">Cela vous permet d’éviter toute tentative d’ajouter le script.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>In this overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method, you can indicate whether the script provided in the <ph id="ph2">`script`</ph> parameter is wrapped with a <ph id="ph3">`&lt;script&gt;`</ph> element block by using the <ph id="ph4">`addScriptTags`</ph> parameter.</source>
          <target state="translated">Dans cette surcharge de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> (méthode), vous pouvez indiquer si le script fourni dans le <ph id="ph2">`script`</ph> paramètre est encapsulé avec un <ph id="ph3">`&lt;script&gt;`</ph> bloc d’élément à l’aide de le <ph id="ph4">`addScriptTags`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>Setting <ph id="ph1">`addScriptTags`</ph> to <ph id="ph2">`true`</ph> indicates that script tags will be added automatically.</source>
          <target state="translated">Paramètre <ph id="ph1">`addScriptTags`</ph> à <ph id="ph2">`true`</ph> indique que les balises de script sont ajoutés automatiquement.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method adds a script block to the top of the rendered page.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> méthode ajoute un bloc de script en haut de la page rendue.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>The script blocks are not guaranteed to be output in the order they are registered.</source>
          <target state="translated">Les blocs de script ne sont pas garanti que la sortie dans l’ordre qu’ils sont inscrits.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>If the order of the script blocks is important, use a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object to gather the scripts together in a single string, and then register them all in a single client script block.</source>
          <target state="translated">Si l’ordre des blocs de script est important, utilisez un <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> pour rassembler les scripts dans une chaîne unique de l’objet, puis tous les enregistrer dans un bloc de script client unique.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>Note that the <ph id="ph1">`addScriptTags`</ph> parameter is set to <ph id="ph2">`true`</ph> so the beginning and closing script tags are not included with the <ph id="ph3">`script`</ph> parameter.</source>
          <target state="translated">Notez que la <ph id="ph1">`addScriptTags`</ph> paramètre est défini sur <ph id="ph2">`true`</ph> le début et la fermeture des balises de script ne sont pas inclus dans le <ph id="ph3">`script`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)">
          <source>The client script block type is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le type du bloc de script client est <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Registers the client script include with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object.</source>
          <target state="translated">Inscrit le script client Include avec l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)">
          <source>The key of the client script include to register.</source>
          <target state="translated">Clé du script client Include à inscrire.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)">
          <source>The URL of the client script include to register.</source>
          <target state="translated">URL du script client Include à inscrire.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)">
          <source>Registers the client script with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using a key and a URL, which enables the script to be called from the client.</source>
          <target state="translated">Enregistre le script client avec l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph>, à l'aide d'une clé et d'une URL, qui active le script à appeler à partir du client.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)">
          <source>A client script include is uniquely identified by its key and its type.</source>
          <target state="translated">Un script client include est identifié de manière unique par sa clé et son type.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">Les scripts avec la même clé et le même type sont considérés comme des doublons.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)">
          <source>Only one script with a given type and key pair can be registered with the page.</source>
          <target state="translated">Un seul script avec un type donné et une paire de clés peut être inscrits avec la page.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)">
          <source>Attempting to register a script that is already registered does not create a duplicate of the script.</source>
          <target state="translated">Tente d’inscrire un script qui est déjà inscrit ne crée pas un doublon du script.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)">
          <source>Call the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A&gt;</ph> method to determine whether a client script include with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</source>
          <target state="translated">Appelez le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A&gt;</ph> méthode pour déterminer si un script client include avec une clé donnée et type paire est déjà inscrit et éviter toute tentative d’ajouter le script.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)">
          <source>To resolve the client URL, use the <ph id="ph1">&lt;xref:System.Web.UI.Control.ResolveClientUrl%2A&gt;</ph> method.</source>
          <target state="translated">Pour résoudre l’URL de client, utilisez le <ph id="ph1">&lt;xref:System.Web.UI.Control.ResolveClientUrl%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)">
          <source>This method uses the context of the URL on which it is called to resolve the path.</source>
          <target state="translated">Cette méthode utilise le contexte de l’URL sur laquelle elle est appelée pour résoudre le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> method calls the overload that takes a <ph id="ph2">`key`</ph>, a <ph id="ph3">`URL`</ph>, and a <ph id="ph4">`type`</ph> parameter.</source>
          <target state="translated">Cette surcharge de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> méthode appelle la surcharge qui accepte un <ph id="ph2">`key`</ph>, un <ph id="ph3">`URL`</ph>et un <ph id="ph4">`type`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)">
          <source>The method adds a script block at the top of the rendered page.</source>
          <target state="translated">La méthode ajoute un bloc de script en haut de la page rendue.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)">
          <source>For related information, including syntax, usage, and an example, see <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph>.</source>
          <target state="translated">Pour plus d’informations, notamment la syntaxe, l’utilisation et un exemple, consultez <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>The type of the client script include to register.</source>
          <target state="translated">Type du script client Include à inscrire.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>The key of the client script include to register.</source>
          <target state="translated">Clé du script client Include à inscrire.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>The URL of the client script include to register.</source>
          <target state="translated">URL du script client Include à inscrire.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>Registers the client script include with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using a type, a key, and a URL.</source>
          <target state="translated">Inscrit le script client Include avec l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> à l'aide d'un type, d'une clé et d'une URL.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>This overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> method takes <bpt id="p1">*</bpt>key<ept id="p1">*</ept> and <bpt id="p2">*</bpt>url<ept id="p2">*</ept> parameters to identify the script, as well as a <ph id="ph2">`type`</ph> parameter to specify the identification of the client script include.</source>
          <target state="translated">Cette surcharge de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> méthode prend <bpt id="p1">*</bpt>clé<ept id="p1">*</ept> et <bpt id="p2">*</bpt>url<ept id="p2">*</ept> paramètres à identifier le script, ainsi qu’un <ph id="ph2">`type`</ph> inclure de paramètre pour spécifier l’identification du script client.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>You specify the type based on the object that will be accessing the resource.</source>
          <target state="translated">Vous spécifiez le type de l’objet qui accédera à la ressource.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>For instance, when using a <ph id="ph1">`Page`</ph> instance to access the resource, you specify the <ph id="ph2">`Page`</ph> type.</source>
          <target state="translated">Par exemple, lorsque vous utilisez un <ph id="ph1">`Page`</ph> instance pour accéder à la ressource, vous spécifiez la <ph id="ph2">`Page`</ph> type.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>To resolve the client URL, use the <ph id="ph1">&lt;xref:System.Web.UI.Control.ResolveClientUrl%2A&gt;</ph> method.</source>
          <target state="translated">Pour résoudre l’URL de client, utilisez le <ph id="ph1">&lt;xref:System.Web.UI.Control.ResolveClientUrl%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>This method uses the context of the URL on which it is called to resolve the path.</source>
          <target state="translated">Cette méthode utilise le contexte de l’URL sur laquelle elle est appelée pour résoudre le chemin d’accès.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>This method adds a script block at the top of the rendered page.</source>
          <target state="translated">Cette méthode ajoute un bloc de script en haut de la page rendue.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>Note that if the logic to check for the existing client script include were removed, there would still not be duplicate client scripts in the rendered page because the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> method checks for duplicates.</source>
          <target state="translated">Notez que si la logique à vérifier pour le script client include existant était supprimée, il est toujours pas les scripts clients en double dans la page rendue, car la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A&gt;</ph> méthode vérifie les doublons.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>The benefit of checking is to reduce unnecessary computation.</source>
          <target state="translated">L’avantage de la vérification est de réduire les calculs inutiles.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>This example requires a JavaScript file named Script_include.js with the following contents:</source>
          <target state="translated">Cet exemple nécessite un fichier JavaScript nommé Script_include.js avec le contenu suivant :</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>The client script include type is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le type du script client Include est <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>The URL is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">L'URL est <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> ou -</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)">
          <source>The URL is empty.</source>
          <target state="translated">L'URL est vide.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)">
          <source>The type of the client script resource to register.</source>
          <target state="translated">Type de la ressource de script client à inscrire.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)">
          <source>The name of the client script resource to register.</source>
          <target state="translated">Nom de la ressource de script client à inscrire.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)">
          <source>Registers the client script resource with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using a type and a resource name.</source>
          <target state="translated">Inscrit la ressource de script client avec l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> à l'aide d'un type et d'un nom de ressource.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A&gt;</ph> method is used when accessing compiled-in resources from assemblies through the WebResource.axd HTTP handler.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A&gt;</ph> méthode est utilisée lorsque l’accès aux ressources compilées dans des assemblys par le gestionnaire HTTP WebResource.axd.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A&gt;</ph> method registers the script with the <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph> object and prevents duplicate scripts.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A&gt;</ph> méthode inscrit le script avec le <ph id="ph2">&lt;xref:System.Web.UI.Page&gt;</ph> de l’objet et empêche les scripts en double.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)">
          <source>This method wraps the contents of the resource URL with a <ph id="ph1">`&lt;script&gt;`</ph> element block.</source>
          <target state="translated">Cette méthode encapsule le contenu de l’URL de ressource avec un <ph id="ph1">`&lt;script&gt;`</ph> bloc d’élément.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)">
          <source>The following code example demonstrates how to programmatically apply the <ph id="ph1">&lt;xref:System.Web.UI.WebResourceAttribute&gt;</ph> metadata attribute to mark the assembly for the resources that will be served.</source>
          <target state="translated">L’exemple de code suivant montre comment appliquer par programme le <ph id="ph1">&lt;xref:System.Web.UI.WebResourceAttribute&gt;</ph> attribut de métadonnées pour marquer l’assembly pour les ressources qui sera pris en charge.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)">
          <source>This example requires a JavaScript file named <ph id="ph1">`Script_include.js`</ph>, with the following contents:</source>
          <target state="translated">Cet exemple nécessite un fichier JavaScript nommé <ph id="ph1">`Script_include.js`</ph>, avec le contenu suivant :</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)">
          <source>Compile the <ph id="ph1">`Script_include.js`</ph> file as a resource in the <ph id="ph2">`Samples.AspNet.CS.Controls`</ph> assembly that contains the <ph id="ph3">`ClientScriptResourceLabel`</ph> class.</source>
          <target state="translated">Compilez le <ph id="ph1">`Script_include.js`</ph> fichier en tant que ressource dans le <ph id="ph2">`Samples.AspNet.CS.Controls`</ph> assembly qui contient la <ph id="ph3">`ClientScriptResourceLabel`</ph> classe.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)">
          <source>The client resource name is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Le nom de la ressource cliente est <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> ou -</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)">
          <source>The client resource name has a length of zero.</source>
          <target state="translated">La longueur du nom de la ressource cliente est de zéro.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Registers a name/value pair as a custom (expando) attribute of the specified control.</source>
          <target state="translated">Inscrit une paire nom/valeur en tant qu'attribut personnalisé (expando) du contrôle spécifié.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> on the page that contains the custom attribute.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> sur la page qui contient l'attribut personnalisé.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)">
          <source>The name of the custom attribute to register.</source>
          <target state="translated">Nom de l'attribut personnalisé à inscrire.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)">
          <source>The value of the custom attribute.</source>
          <target state="translated">Valeur de l'attribut personnalisé.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)">
          <source>Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, attribute name, and attribute value.</source>
          <target state="translated">Inscrit une paire nom/valeur en tant qu'attribut personnalisé (expando) du contrôle spécifié en fonction d'un ID de contrôle, d'un nom d'attribut et d'une valeur d'attribut.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A&gt;</ph> method registers a name/value pair as a custom (expando) attribute on the specified <ph id="ph2">&lt;xref:System.Web.UI.Control&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A&gt;</ph> méthode inscrit une paire nom/valeur en tant qu’attribut personnalisé (expando) spécifiées <ph id="ph2">&lt;xref:System.Web.UI.Control&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)">
          <source>The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</source>
          <target state="translated">L’attribut expando est défini dynamiquement à partir de JavaScript pour préserver la compatibilité XHTML pour le balisage du rendu du contrôle.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)">
          <source>Quotes and backslashes in the custom (expando) attribute's values are escaped.</source>
          <target state="translated">Échappement des guillemets et des barres obliques inverses dans les valeurs de l’attribut personnalisé (expando).</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)">
          <source>If you do not want to escape quotes and backslashes, call the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A&gt;</ph> overload method and set the <ph id="ph2">`encode`</ph> parameter to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Si vous ne souhaitez pas échapper les guillemets et des barres obliques inverses, appelez le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A&gt;</ph> surcharge de méthode et définissez la <ph id="ph2">`encode`</ph> paramètre <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)">
          <source>If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</source>
          <target state="translated">Si l’attribut expando est introuvable ou le contrôle à ajouter l’attribut expando est introuvable, le script client est toujours émis, mais cela n’affecte pas le contrôle.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> on the page that contains the custom attribute.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.Control" /&gt;</ph> sur la page qui contient l'attribut personnalisé.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)">
          <source>The name of the custom attribute to register.</source>
          <target state="translated">Nom de l'attribut personnalisé à inscrire.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)">
          <source>The value of the custom attribute.</source>
          <target state="translated">Valeur de l'attribut personnalisé.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)">
          <source>A Boolean value indicating whether to encode the custom attribute to register.</source>
          <target state="translated">Valeur Boolean qui indique s'il faut ou non encoder l'attribut personnalisé à inscrire.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)">
          <source>Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, an attribute name, an attribute value, and a Boolean value indicating whether to encode the attribute value.</source>
          <target state="translated">Inscrit une paire nom/valeur en tant qu'attribut personnalisé (expando) du contrôle spécifié selon un ID de contrôle, un nom d'attribut, une valeur d'attribut et une valeur Boolean qui indique s'il faut ou non encoder la valeur d'attribut.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A&gt;</ph> method registers a name/value pair as a custom (expando) attribute on the specified <ph id="ph2">&lt;xref:System.Web.UI.Control&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A&gt;</ph> méthode inscrit une paire nom/valeur en tant qu’attribut personnalisé (expando) spécifiées <ph id="ph2">&lt;xref:System.Web.UI.Control&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)">
          <source>The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</source>
          <target state="translated">L’attribut expando est défini dynamiquement à partir de JavaScript pour préserver la compatibilité XHTML pour le balisage du rendu du contrôle.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)">
          <source>Set the <ph id="ph1">`encode`</ph> parameter to <ph id="ph2">`true`</ph> if you need to escape quotes and backslashes in your expando attribute's value.</source>
          <target state="translated">Définir le <ph id="ph1">`encode`</ph> paramètre <ph id="ph2">`true`</ph> si vous devez échapper des guillemets et des barres obliques inverses dans la valeur de votre attribut expando.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)">
          <source>If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</source>
          <target state="translated">Si l’attribut expando est introuvable ou le contrôle à ajouter l’attribut expando est introuvable, le script client est toujours émis, mais cela n’affecte pas le contrôle.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> class.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A&gt;</ph> méthode de la <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)">
          <source>The client script in the rendered page sets the <ph id="ph1">`title`</ph> attribute of a <ph id="ph2">`&lt;span&gt;`</ph> element.</source>
          <target state="translated">Le script client dans la page rendue définit le <ph id="ph1">`title`</ph> attribut d’un <ph id="ph2">`&lt;span&gt;`</ph> élément.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Registers an event reference for validation.</source>
          <target state="translated">Inscrit une référence d'événement pour la validation.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)">
          <source>A unique ID representing the client control generating the event.</source>
          <target state="translated">ID unique représentant le contrôle client qui génère l'événement.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)">
          <source>Registers an event reference for validation with a unique control ID representing the client control generating the event.</source>
          <target state="translated">Inscrit une référence d'événement pour la validation avec un ID de contrôle unique qui représente le contrôle client qui génère l'événement.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)">
          <source>For more information and examples, see the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt;</ph> method.</source>
          <target state="translated">Pour plus d’informations et d’exemples, consultez la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A&gt;</ph> method in order to register a callback for validation, and how to validate that the callback originated from the page.</source>
          <target state="translated">L’exemple suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt;</ph> (méthode) et le <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A&gt;</ph> méthode pour inscrire un rappel pour la validation et comment valider que le rappel provenance de la page.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> object that specifies how client JavaScript is generated to initiate a postback event.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph> qui spécifie la façon dont le code JavaScript client est généré pour initier un événement de publication.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)">
          <source>Registers an event reference for validation with <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph>.</source>
          <target state="translated">Inscrit une référence d'événement pour la validation avec <ph id="ph1">&lt;see cref="T:System.Web.UI.PostBackOptions" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)">
          <source>For more information and examples, see the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt;</ph> method.</source>
          <target state="translated">Pour plus d’informations et d’exemples, consultez la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)">
          <source>A unique ID representing the client control generating the event.</source>
          <target state="translated">ID unique représentant le contrôle client qui génère l'événement.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)">
          <source>Event arguments passed with the client event.</source>
          <target state="translated">Les arguments d'événement sont passés avec l'événement client.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)">
          <source>Registers an event reference for validation with a unique control ID and event arguments representing the client control generating the event.</source>
          <target state="translated">Inscrit une référence d'événement pour la validation avec un ID de contrôle unique et des arguments d'événement représentant le contrôle client qui génère l'événement.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A&gt;</ph> method to register a callback for validation and to validate that the callback originated from the page.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt;</ph> (méthode) et le <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A&gt;</ph> méthode pour inscrire un rappel pour la validation et pour valider que le rappel provenance de la page.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)">
          <source>To improve on the validation shown in the example, you could modify the validation <ph id="ph1">`argument`</ph> parameter to contain information specific to the user such as an identity or role</source>
          <target state="translated">Pour améliorer la validation illustrée dans l’exemple, vous pouvez modifier la validation <ph id="ph1">`argument`</ph> paramètre pour contenir des informations spécifiques à l’utilisateur tel qu’une identité ou un rôle</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt;</ph> method to register a callback for validation.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt;</ph> méthode pour inscrire un rappel pour la validation.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)">
          <source>The method is called prior to the <ph id="ph1">&lt;see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph> method.</source>
          <target state="translated">La méthode est appelée avant la méthode <ph id="ph1">&lt;see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)">
          <source>The name of the hidden field to register.</source>
          <target state="translated">Nom du champ masqué à inscrire</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)">
          <source>The initial value of the field to register.</source>
          <target state="translated">Valeur initiale du champ à inscrire.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)">
          <source>Registers a hidden value with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object.</source>
          <target state="translated">Inscrit une valeur masquée avec l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A&gt;</ph> method creates a hidden <ph id="ph2">`&lt;input&gt;`</ph> element on the rendered HTML page.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A&gt;</ph> méthode crée un masqué <ph id="ph2">`&lt;input&gt;`</ph> élément sur la page HTML rendue.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A&gt;</ph> methods.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A&gt;</ph> méthodes.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)">
          <source>The example registers an array and a hidden value and defines the <ph id="ph1">`OnClick`</ph> event of an <ph id="ph2">`&lt;input&gt;`</ph> button to calculate the sum of two values of the array and the hidden value.</source>
          <target state="translated">L’exemple inscrit un tableau et une valeur masquée et définit les <ph id="ph1">`OnClick`</ph> événements d’un <ph id="ph2">`&lt;input&gt;`</ph> bouton pour calculer la somme de deux valeurs du tableau et la valeur masquée.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="hiddenFieldName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hiddenFieldName" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>The type of the OnSubmit statement to register.</source>
          <target state="translated">Type de l'instruction OnSubmit à inscrire.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>The key of the OnSubmit statement to register.</source>
          <target state="translated">Clé de l'instruction OnSubmit à inscrire.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>The script literal of the OnSubmit statement to register.</source>
          <target state="translated">Littéral de script de l'instruction OnSubmit à inscrire.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>Registers an OnSubmit statement with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using a type, a key, and a script literal.</source>
          <target state="translated">Inscrit une instruction OnSubmit avec l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> à l'aide d'un type, d'une clé et d'un littéral de script.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>The statement executes when the <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlControls.HtmlForm" /&gt;</ph> is submitted.</source>
          <target state="translated">L'instruction s'exécute lorsque le <ph id="ph1">&lt;see cref="T:System.Web.UI.HtmlControls.HtmlForm" /&gt;</ph> est envoyé.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>An OnSubmit statement is uniquely identified by its key and its type.</source>
          <target state="translated">Une instruction OnSubmit est identifiée par sa clé et son type.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>Statements with the same key and type are considered duplicates.</source>
          <target state="translated">Les instructions avec la même clé et le même type sont considérés comme des doublons.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>Only one statement with a given type and key pair can be registered with the page.</source>
          <target state="translated">Une seule instruction avec un type donné et une paire de clés peut être inscrits avec la page.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>Attempting to register a statement that is already registered will not create a duplicate of the statement.</source>
          <target state="translated">Tentative d’inscription d’une instruction qui est déjà inscrit ne crée pas un doublon de l’instruction.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>Call the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A&gt;</ph> method to determine whether an OnSubmit statement is already registered with a given key and type pair and avoid unnecessarily attempting to add the script.</source>
          <target state="translated">Appelez le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A&gt;</ph> méthode pour déterminer si une instruction OnSubmit est déjà inscrite avec une paire clé / type donnée et éviter toute tentative d’ajouter le script.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>The <ph id="ph1">`script`</ph> parameter of the <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;</ph> method can contain multiple script commands as long as they are properly delimited with a semicolon (;).</source>
          <target state="translated">Le <ph id="ph1">`script`</ph> paramètre de la <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;</ph> méthode peut contenir plusieurs commandes de script tant qu’ils sont correctement délimitées par un point-virgule ( ;).</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;</ph> adds a script that is executed before the page is submitted and gives you an opportunity to cancel the submission.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;</ph> ajoute un script exécuté avant que la page est envoyée et vous donne la possibilité d’annuler l’envoi.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>For more information on HTML forms and the <ph id="ph1">`OnSubmit`</ph> attribute, see the <bpt id="p1">[</bpt>World Wide Web Consortium (W3C) Web site<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37125)</ept>.</source>
          <target state="translated">Pour plus d’informations sur les formulaires HTML et le <ph id="ph1">`OnSubmit`</ph> d’attribut, consultez la <bpt id="p1">[</bpt>site Web du World Wide Web Consortium (W3C)<ept id="p1">](http://go.microsoft.com/fwlink/?linkid=37125)</ept>.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Registers the startup script with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object.</source>
          <target state="translated">Inscrit le script de démarrage avec l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>The type of the startup script to register.</source>
          <target state="translated">Type du script de démarrage à inscrire.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>The key of the startup script to register.</source>
          <target state="translated">Clé du script de démarrage à inscrire.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>The startup script literal to register.</source>
          <target state="translated">Littéral du script de démarrage à inscrire.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>Registers the startup script with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using a type, a key, and a script literal.</source>
          <target state="translated">Inscrit le script de démarrage avec l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> à l'aide d'un type, d'une clé et d'un littéral de script.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>A client script is uniquely identified by its key and its type.</source>
          <target state="translated">Un script client est identifié de manière unique par sa clé et son type.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">Les scripts avec la même clé et le même type sont considérés comme des doublons.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>Only one script with a given type and key pair can be registered with the page.</source>
          <target state="translated">Un seul script avec un type donné et une paire de clés peut être inscrits avec la page.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>Attempting to register a script that is already registered does not create a duplicate of the script.</source>
          <target state="translated">Tente d’inscrire un script qui est déjà inscrit ne crée pas un doublon du script.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>Call the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;</ph> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</source>
          <target state="translated">Appelez le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;</ph> méthode pour déterminer si un script de démarrage avec une paire clé / type donnée est déjà enregistré et éviter toute tentative d’ajouter le script.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>In this overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> method, you must make sure that the script provided in the <ph id="ph2">`script`</ph> parameter is wrapped with a <ph id="ph3">`&lt;script&gt;`</ph> element block.</source>
          <target state="translated">Dans cette surcharge de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> (méthode), vous devez vous assurer que le script fourni dans le <ph id="ph2">`script`</ph> paramètre est encapsulé avec un <ph id="ph3">`&lt;script&gt;`</ph> bloc d’élément.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>The script block added by the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> method executes when the page finishes loading but before the page's <ph id="ph2">&lt;xref:System.Web.UI.Control.OnLoad%2A&gt;</ph> event is raised.</source>
          <target state="translated">Le bloc de script ajouté par le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> méthode s’exécute lorsque la page est chargée, mais avant de la page <ph id="ph2">&lt;xref:System.Web.UI.Control.OnLoad%2A&gt;</ph> événement est déclenché.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>The script blocks are not guaranteed to be output in the order they are registered.</source>
          <target state="translated">Les blocs de script ne sont pas garanti que la sortie dans l’ordre qu’ils sont inscrits.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>If the order of the script blocks is important, use a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object to gather the scripts together in a single string, and then register them all in a single client script block.</source>
          <target state="translated">Si l’ordre des blocs de script est important, utilisez un <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> pour rassembler les scripts dans une chaîne unique de l’objet, puis tous les enregistrer dans un bloc de script client unique.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>Note that the beginning and closing script tags are included within the <ph id="ph1">`script`</ph> parameter.</source>
          <target state="translated">Notez que le début et la fermeture des balises de script sont inclus dans le <ph id="ph1">`script`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)">
          <source>To have the script tags added based on an additional parameter setting, see the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> method.</source>
          <target state="translated">Pour que le script de balises ajoutées en fonction d’un paramètre supplémentaire, consultez le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>The type of the startup script to register.</source>
          <target state="translated">Type du script de démarrage à inscrire.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>The key of the startup script to register.</source>
          <target state="translated">Clé du script de démarrage à inscrire.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>The startup script literal to register.</source>
          <target state="translated">Littéral du script de démarrage à inscrire.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>A Boolean value indicating whether to add script tags.</source>
          <target state="translated">Valeur Boolean qui indique s'il faut ajouter des balises de script.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>Registers the startup script with the <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> object using a type, a key, a script literal, and a Boolean value indicating whether to add script tags.</source>
          <target state="translated">Inscrit le script de démarrage avec l'objet <ph id="ph1">&lt;see cref="T:System.Web.UI.Page" /&gt;</ph> à l'aide d'un type, d'une clé, d'un littéral de script et d'une valeur Boolean indiquant s'il faut ajouter des balises de script.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>A startup script is uniquely identified by its key and its type.</source>
          <target state="translated">Un script de démarrage est identifié de manière unique par sa clé et son type.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>Scripts with the same key and type are considered duplicates.</source>
          <target state="translated">Les scripts avec la même clé et le même type sont considérés comme des doublons.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>Only one script with a given type and key pair can be registered with the page.</source>
          <target state="translated">Un seul script avec un type donné et une paire de clés peut être inscrits avec la page.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>Attempting to register a script that is already registered does not create a duplicate of the script.</source>
          <target state="translated">Tente d’inscrire un script qui est déjà inscrit ne crée pas un doublon du script.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>Call the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;</ph> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</source>
          <target state="translated">Appelez le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A&gt;</ph> méthode pour déterminer si un script de démarrage avec une paire clé / type donnée est déjà enregistré et éviter toute tentative d’ajouter le script.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>In this overload of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> method, you can indicate whether the script provided in the <ph id="ph2">`script`</ph> parameter is wrapped with a <ph id="ph3">`&lt;script&gt;`</ph> element block by using the <ph id="ph4">`addScriptTags`</ph> parameter.</source>
          <target state="translated">Dans cette surcharge de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> (méthode), vous pouvez indiquer si le script fourni dans le <ph id="ph2">`script`</ph> paramètre est encapsulé avec un <ph id="ph3">`&lt;script&gt;`</ph> bloc d’élément à l’aide de le <ph id="ph4">`addScriptTags`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>Setting <ph id="ph1">`addScriptTags`</ph> to <ph id="ph2">`true`</ph> indicates that script tags will be added automatically.</source>
          <target state="translated">Paramètre <ph id="ph1">`addScriptTags`</ph> à <ph id="ph2">`true`</ph> indique que les balises de script sont ajoutés automatiquement.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>The script block added by the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> method executes when the page finishes loading but before the page's <ph id="ph2">&lt;xref:System.Web.UI.Control.OnLoad%2A&gt;</ph> event is raised.</source>
          <target state="translated">Le bloc de script ajouté par le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> méthode s’exécute lorsque la page est chargée, mais avant de la page <ph id="ph2">&lt;xref:System.Web.UI.Control.OnLoad%2A&gt;</ph> événement est déclenché.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>The script blocks are not guaranteed to be output in the order they are registered.</source>
          <target state="translated">Les blocs de script ne sont pas garanti que la sortie dans l’ordre qu’ils sont inscrits.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>If the order of the script blocks is important, use a <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> object to gather the scripts together in a single string, and then register them all in a single client script block.</source>
          <target state="translated">Si l’ordre des blocs de script est important, utilisez un <ph id="ph1">&lt;xref:System.Text.StringBuilder&gt;</ph> pour rassembler les scripts dans une chaîne unique de l’objet, puis tous les enregistrer dans un bloc de script client unique.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> method.</source>
          <target state="translated">L’exemple de code suivant illustre l’utilisation de la <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source>Note that the <ph id="ph1">`addScriptTags`</ph> parameter is set to <ph id="ph2">`false`</ph> so the beginning and closing script tags are included with the <ph id="ph3">`script`</ph> parameter.</source>
          <target state="translated">Notez que la <ph id="ph1">`addScriptTags`</ph> paramètre est défini sur <ph id="ph2">`false`</ph> afin de début et de fermeture des balises de script sont inclus dans le <ph id="ph3">`script`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ClientScriptManager">
          <source>Validates a client event.</source>
          <target state="translated">Valide un événement client.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)">
          <source>A unique ID representing the client control generating the event.</source>
          <target state="translated">ID unique représentant le contrôle client qui génère l'événement.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)">
          <source>Validates a client event that was registered for event validation using the <ph id="ph1">&lt;see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" /&gt;</ph> method.</source>
          <target state="translated">Valide un événement client qui a été inscrit pour la validation d'événement à l'aide de la méthode <ph id="ph1">&lt;see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)">
          <source>A unique ID representing the client control generating the event.</source>
          <target state="translated">ID unique représentant le contrôle client qui génère l'événement.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)">
          <source>The event arguments passed with the client event.</source>
          <target state="translated">Les arguments d'événement passés avec l'événement client.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)">
          <source>Validates a client event that was registered for event validation using the <ph id="ph1">&lt;see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" /&gt;</ph> method.</source>
          <target state="translated">Valide un événement client qui a été inscrit pour la validation d'événement à l'aide de la méthode <ph id="ph1">&lt;see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)">
          <source>The following code example demonstrates using the <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt;</ph> method and the <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A&gt;</ph> method to register a callback for validation and to validate that the callback originated from the page.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A&gt;</ph> (méthode) et le <ph id="ph2">&lt;xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A&gt;</ph> méthode pour inscrire un rappel pour la validation et pour valider que le rappel provenance de la page.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)">
          <source>To improve on the validation shown here, you could modify the validation <ph id="ph1">`argument`</ph> parameter to contain information specific to the user such as an identity or role</source>
          <target state="translated">Pour améliorer la validation illustrée ici, vous pouvez modifier la validation <ph id="ph1">`argument`</ph> paramètre pour contenir des informations spécifiques à l’utilisateur tel qu’une identité ou un rôle</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="uniqueId" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or an empty string ("").</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="uniqueId" /&gt;</ph> ou <ph id="ph2">&lt;see langword="null" /&gt;</ph> est une chaîne vide ("").</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>