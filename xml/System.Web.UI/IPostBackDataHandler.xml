<Type Name="IPostBackDataHandler" FullName="System.Web.UI.IPostBackDataHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ba7b1c9a6c9f8a1f39b65306446296b76259839a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30605613" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IPostBackDataHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface IPostBackDataHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class IPostBackDataHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Définit des méthodes que les contrôles serveur ASP.NET doivent implémenter pour charger automatiquement les données de publication.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous devez implémenter le <xref:System.Web.UI.IPostBackDataHandler> lors de la création d’un contrôle serveur qui doit examiner des données de formulaire sont publiées sur le serveur par le client de l’interface. Le contrat qui définit de cette interface permet à un contrôle de serveur pour déterminer si son état doit être modifiée à la suite de la publication et pour déclencher les événements appropriés. Pour plus d’informations, consultez [gestion des événements serveur dans les Pages Web Forms ASP.NET](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9).  
  
   
  
## Examples  
 L’exemple de code suivant illustre un contrôle de serveur de zone de texte personnalisé qui implémente le <xref:System.Web.UI.IPostBackDataHandler> interface. Le <xref:System.Web.UI.WebControls.TextBox.Text%2A> propriété est modifiée à la suite de la publication et le contrôle serveur déclenche un <xref:System.Web.UI.WebControls.TextBox.TextChanged> événements après le chargement de données de publication (postback).  
  
 [!code-csharp[Classic IPostBackDataHandler Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IPostBackDataHandler Example/CS/source.cs#1)]
 [!code-vb[Classic IPostBackDataHandler Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IPostBackDataHandler Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="public bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">Identificateur de clé pour le contrôle.</param>
        <param name="postCollection">La collection de toutes les valeurs de nom entrantes.</param>
        <summary>Implémenté par une classe, traite les données de publication pour un contrôle serveur ASP.NET.</summary>
        <returns>
          <see langword="true" /> si l'état du contrôle serveur a été modifié à la suite d'une publication ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’infrastructure de page ASP.NET effectue le suivi de tous les contrôles serveur qui retournent `true` à cet appel de méthode, puis appelle la <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A> méthode sur ces contrôles.  
  
   
  
## Examples  
 L’exemple de code suivant illustre un contrôle serveur qui implémente une version de la <xref:System.Web.UI.IPostBackDataHandler.LoadPostData%2A> (méthode).  
  
 [!code-csharp[Classic IPostBackDataHandler.LoadPostData Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IPostBackDataHandler.LoadPostData Example/CS/source.cs#1)]
 [!code-vb[Classic IPostBackDataHandler.LoadPostData Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IPostBackDataHandler.LoadPostData Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="public void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaisePostDataChangedEvent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Implémenté par une classe, demande au contrôle serveur d'avertir l'application ASP.NET du changement d'état du contrôle.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A> méthode déclenche des événements de modification pour le contrôle serveur qui implémente le <xref:System.Web.UI.IPostBackDataHandler> interface.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment un contrôle serveur peut implémenter la <xref:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent%2A> (méthode).  
  
 [!code-csharp[Classic IPostBackDataHandler.RaisePostDataChangedEvent Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic IPostBackDataHandler.RaisePostDataChangedEvent Example/CS/source.cs#1)]
 [!code-vb[Classic IPostBackDataHandler.RaisePostDataChangedEvent Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic IPostBackDataHandler.RaisePostDataChangedEvent Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>