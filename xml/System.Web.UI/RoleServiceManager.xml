<Type Name="RoleServiceManager" FullName="System.Web.UI.RoleServiceManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c25de293be0141fa1242f71112f1cb33df6e84e1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36575936" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RoleServiceManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RoleServiceManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.RoleServiceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class RoleServiceManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoleServiceManager" />
  <TypeSignature Language="F#" Value="type RoleServiceManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Path")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Configure l'emplacement d'une implémentation personnalisée du service de rôle.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.RoleServiceManager> classe correspond à la <xref:System.Web.UI.ScriptManager.RoleService%2A> propriété de la <xref:System.Web.UI.ScriptManager> ou <xref:System.Web.UI.ScriptManagerProxy> contrôle.  
  
 Le rôle service Web est utilisé par les applications compatibles AJAX pour récupérer des informations de rôle pour l’utilisateur authentifié actuel à l’aide d’un appel de service Web asynchrone. Vous pouvez utiliser <xref:System.Web.UI.RoleServiceManager> pour fournir le chemin d’accès d’une autre implémentation du rôle de service Web au lieu d’utiliser le service Web intégré.  
  
 Pour utiliser le service de rôle dans votre application, vous devez l’activer dans le fichier de configuration et déclarez-le dans la page. Si vous utilisez le service Web de rôle intégré, vous devez l’activer, mais vous n’êtes pas obligé de déclarer explicitement le rôle de service manager dans la page.  
  
 Pour créer un service de rôle personnalisé, vous devez implémenter un service Web qui possède deux méthodes : `GetRolesForCurrentUser` et `IsCurrentUserInRole`. Ces méthodes doivent avoir la même signature que les méthodes correspondantes du service Web de rôle intégré.  
  
 L’exemple suivant illustre la structure de classe de base qui doit être implémentée dans un classe de service Web de rôle personnalisé.  
  
  
  
 Pour utiliser un service Web de rôle personnalisé, vous pouvez ajouter de façon déclarative le service dans le balisage en plaçant un `RoleService` élément à l’intérieur du <xref:System.Web.UI.ScriptManager> contrôler, comme indiqué dans l’exemple suivant.  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <RoleService Path="MyRoleService.asmx" LoadRoles="true" />  
</asp:ScriptManager>  
```  
  
 Vous pouvez également configurer par programme le <xref:System.Web.UI.RoleServiceManager.Path%2A> propriété à utiliser un service Web de rôle personnalisé.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.ScriptingRoleServiceSection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RoleServiceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.RoleServiceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RoleServiceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.RoleServiceManager" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadRoles">
      <MemberSignature Language="C#" Value="public bool LoadRoles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LoadRoles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.RoleServiceManager.LoadRoles" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadRoles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LoadRoles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LoadRoles : bool with get, set" Usage="System.Web.UI.RoleServiceManager.LoadRoles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit une valeur qui indique si la liste des rôles de l'utilisateur actuellement connecté doit être extraite.</summary>
        <value>
          <see langword="true" /> si la liste des rôles doit être extraite ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> est définie sur `true`, la liste des rôles est récupérée par le <xref:System.Web.UI.RoleServiceManager> classe à l’aide de la <xref:System.Web.Security.Roles.GetRolesForUser%2A?displayProperty=nameWithType> (méthode). La liste est sérialisée puis dans le balisage de page.  
  
> [!NOTE]
>  Lorsque <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> est `true`, tous les rôles de l’utilisateur authentifié actuel appartient sont envoyés au navigateur. Étant donné que les utilisateurs peuvent voir les informations de rôle, cela peut être un problème de sécurité.  
  
 Le <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> propriété peut être spécifiée dans le <xref:System.Web.UI.ScriptManager> contrôle ou associé à un <xref:System.Web.UI.ScriptManagerProxy> contrôle. Si <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> a la valeur `true` pour une instance de proxy, la liste des rôles est récupérée et ajoutée à la page. Si <xref:System.Web.UI.RoleServiceManager.LoadRoles%2A> est `false`, les rôles ne sont pas ajoutés à la balise de page. Dans ce cas, vous pouvez utiliser la méthode pour stocker des informations de rôle en mémoire dans le navigateur.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ScriptManager" />
        <altmember cref="T:System.Web.UI.ScriptManagerProxy" />
        <altmember cref="M:System.Web.Security.Roles.GetRolesForUser" />
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.RoleServiceManager.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.UI.RoleServiceManager.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le chemin d'accès du service de rôle.</summary>
        <value>Chemin d'accès du service Web de rôle personnalisé.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Web.UI.RoleServiceManager.Path%2A> propriété n’est pas définie, la valeur de retour est <xref:System.String.Empty?displayProperty=nameWithType>. Dans ce cas, ASP.NET utilise l’authentification intégrée de service Web qui correspond au chemin internes par défaut suivants : ~ / RolesService.svc. Le même comportement se produit si vous définissez <xref:System.Web.UI.RoleServiceManager.Path%2A> à une chaîne vide ou à `null`.  
  
 <xref:System.Web.UI.RoleServiceManager.Path%2A> peut être spécifié dans le <xref:System.Web.UI.ScriptManager> contrôle ou associé à un <xref:System.Web.UI.ScriptManagerProxy> contrôle. Lorsque <xref:System.Web.UI.RoleServiceManager.Path%2A> est défini sur le <xref:System.Web.UI.ScriptManagerProxy> niveau, les conditions suivantes sont remplies :  
  
-   S’il existe plusieurs objets proxy dans la hiérarchie des contrôles, <xref:System.Web.UI.RoleServiceManager.Path%2A> n’a pas à définir pour chaque instance de proxy.  
  
-   Si <xref:System.Web.UI.RoleServiceManager.Path%2A> est explicitement définie pour un objet proxy, la valeur doit être le même pour tous les autres objets proxy pour que cette propriété est définie pour. Si vous définissez des chemins d’accès différents pour les objets proxy différents dans la hiérarchie, un <xref:System.ArgumentException> exception est levée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Plus d'un chemin d'accès unique a été défini dans la hiérarchie de contrôles.</exception>
      </Docs>
    </Member>
  </Members>
</Type>