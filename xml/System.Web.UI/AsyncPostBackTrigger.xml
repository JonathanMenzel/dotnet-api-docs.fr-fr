<Type Name="AsyncPostBackTrigger" FullName="System.Web.UI.AsyncPostBackTrigger">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c9b2b6a2f8c6ccfeaea2ec0d9768dbb48b0576a9" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30598653" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AsyncPostBackTrigger : System.Web.UI.UpdatePanelControlTrigger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AsyncPostBackTrigger extends System.Web.UI.UpdatePanelControlTrigger" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.AsyncPostBackTrigger" />
  <TypeSignature Language="VB.NET" Value="Public Class AsyncPostBackTrigger&#xA;Inherits UpdatePanelControlTrigger" />
  <TypeSignature Language="C++ CLI" Value="public ref class AsyncPostBackTrigger : System::Web::UI::UpdatePanelControlTrigger" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.UpdatePanelControlTrigger</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Définit un événement de contrôle et un événement facultatif de contrôle comme déclencheur de contrôle de publication (postback) asynchrone qui provoque l'actualisation d'un contrôle <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Web.UI.AsyncPostBackTrigger> contrôle pour permettre aux contrôles d’être des déclencheurs pour un <xref:System.Web.UI.UpdatePanel> contrôle. Les contrôles qui sont des déclencheurs pour un panneau de mise à jour entraînent une actualisation du contenu du panneau après une publication (postback) asynchrone. Définition d’un contrôle de déclencheur asynchrone est utile dans les scénarios suivants :  
  
-   Pour les contrôles qui sont en dehors d’un panneau de configuration.  
  
-   Pour les contrôles qui sont à l’intérieur d’un panneau de configuration lorsque le <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> propriété est `false`.  
  
-   Pour les contrôles qui sont à l’intérieur des panneaux imbriqués, afin de provoquer une actualisation des panneaux parents.  
  
 Le contrôle qui le <xref:System.Web.UI.AsyncPostBackTrigger> références de contrôle doivent être dans le même conteneur d’attribution de noms que le panneau de mise à jour pour lesquels il est un déclencheur. Les déclencheurs qui sont basés sur les contrôles dans d’autres conteneurs d’affectation de noms ne sont pas pris en charge.  
  
 Ajouter <xref:System.Web.UI.AsyncPostBackTrigger> contrôle à l’aide de la **éditeur de collections UpdatePanelTrigger** boîte de dialogue dans le concepteur ou en créant un `Triggers` élément de façon déclarative dans le <xref:System.Web.UI.UpdatePanel> contrôle. Le <xref:System.Web.UI.AsyncPostBackTrigger.ControlID%2A> propriété est requise, mais la <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> propriété est facultative. Si le <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> propriété n’est pas spécifiée, le <xref:System.ComponentModel.DefaultEventAttribute> attribut du contrôle est utilisé pour déterminer l’événement par défaut. Par exemple, l’événement par défaut pour le <xref:System.Web.UI.WebControls.Button> contrôle est le <xref:System.Web.UI.WebControls.Button.Click> événement. Le <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> propriété respecte la casse.  
  
 Vous pouvez également référencer un conteneur d’attribution de noms en tant que déclencheur. Dans ce cas, tous les contrôles enfants dans le conteneur qui provoquent une publication (postback) sont considérés comme déclencheurs pour le <xref:System.Web.UI.UpdatePanel> contrôle.  
  
 Ajouter par programmation <xref:System.Web.UI.AsyncPostBackTrigger> contrôles n’est pas pris en charge. Pour enregistrer par programme un contrôle de publication (postback), utilisez la <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> méthode de la <xref:System.Web.UI.ScriptManager> contrôle. Appelez ensuite la <xref:System.Web.UI.UpdatePanel.Update%2A> méthode de la <xref:System.Web.UI.UpdatePanel> contrôle lorsque le contrôle est publié.  
  
 Si vous définissez un contrôle à l’aide de deux <xref:System.Web.UI.PostBackTrigger> et <xref:System.Web.UI.AsyncPostBackTrigger>, une exception est levée.  
  
   
  
## Examples  
 L’exemple suivant montre comment ajouter un <xref:System.Web.UI.AsyncPostBackTrigger> contrôler de façon déclarative. A <xref:System.Web.UI.WebControls.Button> contrôle qui est à l’extérieur une <xref:System.Web.UI.UpdatePanel> contrôle permet aux utilisateurs de saisir un terme de recherche pour rechercher dans le `Products` table de la base de données Northwind. A <xref:System.Web.UI.WebControls.GridView> contrôle qui se trouve dans le <xref:System.Web.UI.UpdatePanel> contrôle affiche les résultats. Le <xref:System.Web.UI.WebControls.Button> contrôle est spécifié en tant que déclencheur asynchrone pour la <xref:System.Web.UI.UpdatePanel> contrôle.  
  
 [!code-aspx-csharp[System.Web.UI.AsyncPostBackTrigger#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.AsyncPostBackTrigger/CS/AsyncPostBackTriggerCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.AsyncPostBackTrigger#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.AsyncPostBackTrigger/VB/AsyncPostBackTriggerVB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.PostBackTrigger" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AsyncPostBackTrigger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AsyncPostBackTrigger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.AsyncPostBackTrigger" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ajouter <xref:System.Web.UI.AsyncPostBackTrigger> contrôle à l’aide de la **éditeur de collections UpdatePanelTrigger** boîte de dialogue dans le concepteur ou en créant un `Triggers` élément de façon déclarative dans le <xref:System.Web.UI.UpdatePanel> contrôle.  
  
 Ajout de <xref:System.Web.UI.AsyncPostBackTrigger> contrôles par programmation n'est pas pris en charge.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ControlID">
      <MemberSignature Language="C#" Value="public string ControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AsyncPostBackTrigger.ControlID" />
      <MemberSignature Language="VB.NET" Value="Public Property ControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.AsyncPostBackTriggerControlIDConverter, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom du contrôle qui déclenche la publication (postback) asynchrone d'un contrôle <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <value>ID de contrôle serveur.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" />
      </Docs>
    </Member>
    <Member MemberName="EventName">
      <MemberSignature Language="C#" Value="public string EventName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EventName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.AsyncPostBackTrigger.EventName" />
      <MemberSignature Language="VB.NET" Value="Public Property EventName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EventName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.AsyncPostBackTriggerEventNameConverter, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit l'événement de contrôle de publication (postback) qui déclenche la mise à jour d'un contrôle <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <value>Nom de l'événement. La valeur par défaut est <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.AsyncPostBackTrigger.EventName%2A> propriété est facultative. S’il n’est pas spécifié, le <xref:System.ComponentModel.DefaultEventAttribute> attribut du contrôle est utilisé pour déterminer l’événement par défaut. Le tableau suivant répertorie les événements par défaut pour les contrôles communs ASP.NET 2.0.  
  
|Contrôle|Événement par défaut|  
|-------------|-------------------|  
|<xref:System.Web.UI.WebControls.Button>|<xref:System.Web.UI.WebControls.Button.Click>|  
|<xref:System.Web.UI.WebControls.Calendar>|<xref:System.Web.UI.WebControls.Calendar.SelectionChanged>|  
|<xref:System.Web.UI.WebControls.CheckBox>|<xref:System.Web.UI.WebControls.CheckBox.CheckedChanged>|  
|<xref:System.Web.UI.WebControls.GridView>|<xref:System.Web.UI.WebControls.GridView.SelectedIndexChanged>|  
|<xref:System.Web.UI.WebControls.TextBox>|<xref:System.Web.UI.WebControls.TextBox.TextChanged>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.DefaultEventAttribute" />
      </Docs>
    </Member>
    <Member MemberName="HasTriggered">
      <MemberSignature Language="C#" Value="protected internal override bool HasTriggered ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance bool HasTriggered() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.HasTriggered" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function HasTriggered () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override bool HasTriggered();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une valeur qui indique si le déclencheur a été appelé.</summary>
        <returns>
          <see langword="true" /> si le déclencheur a été appelé ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les développeurs de contrôles peuvent substituer la <xref:System.Web.UI.AsyncPostBackTrigger.HasTriggered%2A> méthode pour fournir une logique personnalisée pour déterminer si le déclencheur a été appelé. Pour voir un déclencheur personnalisé dans le `Triggers` élément de la <xref:System.Web.UI.UpdatePanel> (contrôle), vous pouvez ajouter une directive à la page ou à l’élément du fichier Web.config.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal override void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialise le contrôle <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> et détermine si l'événement nommé dans le déclencheur existe et est valide.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Aucun contrôle <see cref="T:System.Web.UI.ScriptManager" /> n'a été trouvé dans la page.  
  
 \- ou -  
  
 L'événement qui est nommé dans la propriété <see cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" /> est introuvable pour le contrôle qui est nommé dans la propriété <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" />.  
  
 \- ou -  
  
 L'événement qui est nommé dans la propriété <see cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" /> pour le contrôle qui est nommé dans la propriété <see cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" /> ne correspond pas à une signature de gestionnaire d'événements standard.</exception>
        <altmember cref="P:System.Web.UI.AsyncPostBackTrigger.EventName" />
        <altmember cref="P:System.Web.UI.UpdatePanelControlTrigger.ControlID" />
      </Docs>
    </Member>
    <Member MemberName="OnEvent">
      <MemberSignature Language="C#" Value="public void OnEvent (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnEvent(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.OnEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnEvent (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnEvent(System::Object ^ sender, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">L'expéditeur d'événement.</param>
        <param name="e">Données d'événement.</param>
        <summary>Déclenche l'événement qui provoque la publication (postback) et l'actualisation d'un contrôle <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.AsyncPostBackTrigger.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne une représentation sous forme de chaîne du contrôle <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> actuel.</summary>
        <returns>Chaîne qui représente le contrôle <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> actuel.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>