<Type Name="LiteralControl" FullName="System.Web.UI.LiteralControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4fd8fce88fd30589c835530914879f4c27e3e193" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30608403" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LiteralControl : System.Web.UI.Control, System.Web.UI.ITextControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LiteralControl extends System.Web.UI.Control implements class System.Web.UI.ITextControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.LiteralControl" />
  <TypeSignature Language="VB.NET" Value="Public Class LiteralControl&#xA;Inherits Control&#xA;Implements ITextControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class LiteralControl : System::Web::UI::Control, System::Web::UI::ITextControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ITextControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente les éléments HTML, le texte et les autres chaînes éventuelles dans une page ASP.NET qui n’ont pas besoin d’être traitées sur le serveur.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET compile tous les éléments HTML et texte lisible qui ne nécessitent pas de traitement côté serveur dans les instances de cette classe. Par exemple, un élément HTML qui ne contient-elle pas un `runat="server"` paire attribut/valeur dans sa balise d’ouverture est compilé dans un <xref:System.Web.UI.LiteralControl> objet. <xref:System.Web.UI.LiteralControl> objets ne conservent pas état d’affichage, par conséquent, le contenu d’un <xref:System.Web.UI.LiteralControl> objet doit être recréé à chaque demande.  
  
 Contrôles littéraux se comportent comme des espaces de texte, ce qui signifie que vous pouvez extraire du texte du contrôle littéral et supprimer le contrôle littéral à partir du contrôle serveur parent <xref:System.Web.UI.ControlCollection> collection par le biais du parent <xref:System.Web.UI.Control.Controls%2A> propriété. Par conséquent, lorsque vous développez un contrôle personnalisé dérivé de la <xref:System.Web.UI.LiteralControl> de classe, assurez-vous que votre contrôle effectue des étapes de prétraitement lui-même, au lieu d’utiliser un appel à tout le <xref:System.Web.UI.LiteralControl.Render%2A?displayProperty=nameWithType> méthode pour y répondre. En règle générale, cette tâche est nécessaire pour améliorer le temps de réponse de votre application Web.  
  
 Vous pouvez ajouter ou supprimer des contrôles littéraux d’un page ou un contrôle serveur par programme à l’aide de la <xref:System.Web.UI.ControlCollection.Add%2A?displayProperty=nameWithType> ou <xref:System.Web.UI.ControlCollection.Remove%2A?displayProperty=nameWithType> (méthode), respectivement.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser surchargées <xref:System.Web.UI.LiteralControl.%23ctor%2A> constructeur lors de la substitution du <xref:System.Web.UI.Control.CreateChildControls%2A?displayProperty=nameWithType> (méthode). Le code ajoute deux nouvelles <xref:System.Web.UI.LiteralControl> objets et un <xref:System.Web.UI.WebControls.TextBox> contrôle actuel du contrôle serveur Web <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> propriété.  
  
 [!code-csharp[SystemWebUILiteralControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUILiteralControl/CS/controlcreatechildcontrols.cs#1)]
 [!code-vb[SystemWebUILiteralControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUILiteralControl/VB/controlcreatechildcontrols.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Control" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.LiteralControl" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LiteralControl ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.LiteralControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LiteralControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.LiteralControl" /> qui contient une chaîne littérale à afficher sur la page ASP.NET demandée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant crée une classe, `CustLiteralControlClass`, qui étend la <xref:System.Web.UI.LiteralControl> classe. Il crée une instance de la classe nommée `myLiteralControlClass1` à l’aide du constructeur qui ne spécifie pas le texte de la <xref:System.Web.UI.LiteralControl> objet. Une fois que l’objet est créé, le <xref:System.Web.UI.LiteralControl.Text%2A> propriété est utilisée pour définir le texte qu’il contient.  
  
 [!code-csharp[LiteralControlSample#4](~/samples/snippets/csharp/VS_Snippets_WebNet/LiteralControlSample/CS/customliteralcontrol.cs.aspx#4)]
 [!code-vb[LiteralControlSample#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LiteralControlSample/VB/customliteralcontrol.vb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LiteralControl (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.LiteralControl.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LiteralControl(System::String ^ text);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Texte à afficher dans la page Web demandée.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.LiteralControl" /> avec le texte spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant crée deux instances de la <xref:System.Web.UI.LiteralControl> à l’aide de la classe le <xref:System.Web.UI.LiteralControl.%23ctor%2A> constructeur. Les deux instances de restituer des balises d’ouverture et de fermeture d’un élément HTML H3 et incluent le texte à afficher dans les balises H3.  
  
 [!code-csharp[SystemWebUILiteralControl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/SystemWebUILiteralControl/CS/controlcreatechildcontrols.cs#1)]
 [!code-vb[SystemWebUILiteralControl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SystemWebUILiteralControl/VB/controlcreatechildcontrols.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.LiteralControl.Text" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.LiteralControl.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée un objet <see cref="T:System.Web.UI.EmptyControlCollection" /> pour l'instance actuelle de la classe <see cref="T:System.Web.UI.LiteralControl" />.</summary>
        <returns>
          <see cref="T:System.Web.UI.EmptyControlCollection" /> du contrôle en cours.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Par défaut, <xref:System.Web.UI.LiteralControl> objets contiennent uniquement le texte et aucun contrôle serveur enfant. Si vous souhaitez modifier ce comportement, vous devez substituer cette méthode.  
  
   
  
## Examples  
 Suit exemple de code remplace le <xref:System.Web.UI.LiteralControl.CreateControlCollection%2A> méthode pour créer une instance de la <xref:System.Web.UI.ControlCollection> classe au lieu d’une instance de la <xref:System.Web.UI.EmptyControlCollection> classe.  
  
 [!code-csharp[LiteralControlSample#2](~/samples/snippets/csharp/VS_Snippets_WebNet/LiteralControlSample/CS/customliteralcontrol.cs#2)]
 [!code-vb[LiteralControlSample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LiteralControlSample/VB/customliteralcontrol.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.CreateControlCollection" />
        <altmember cref="T:System.Web.UI.EmptyControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.LiteralControl.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (output As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="output">Objet <see cref="T:System.Web.UI.HtmlTextWriter" /> qui affiche le contenu de l'objet <see cref="T:System.Web.UI.LiteralControl" /> sur le client qui le demande.</param>
        <summary>Écrit le contenu de l'objet <see cref="T:System.Web.UI.LiteralControl" /> dans la page ASP.NET.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous créez un serveur personnalisé contrôle et souhaitez effectuer le rendu HTML ou texte spécifique à un client, vous pouvez améliorer les performances du contrôle en passant la valeur de la <xref:System.Web.UI.LiteralControl.Text%2A> propriété le <xref:System.Web.UI.Control.Render%2A?displayProperty=nameWithType> méthode au lieu d’appeler le <xref:System.Web.UI.LiteralControl.Render%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.LiteralControl.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.ITextControl.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le contenu texte de l'objet <see cref="T:System.Web.UI.LiteralControl" />.</summary>
        <value>
          <see cref="T:System.String" /> qui représente le contenu texte du contrôle littéral. La valeur par défaut est <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant crée une classe, `CustLiteralControlClass`, qui étend la <xref:System.Web.UI.LiteralControl> classe. Il crée une instance de la classe nommée `myLiteralControlClass1` à l’aide du constructeur qui ne spécifie pas le texte de la <xref:System.Web.UI.LiteralControl> objet. Une fois que l’objet est créé, le <xref:System.Web.UI.LiteralControl.Text%2A> propriété est utilisée pour définir le texte qu’il contient.  
  
 [!code-csharp[LiteralControlSample#4](~/samples/snippets/csharp/VS_Snippets_WebNet/LiteralControlSample/CS/customliteralcontrol.cs.aspx#4)]
 [!code-vb[LiteralControlSample#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/LiteralControlSample/VB/customliteralcontrol.vb.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>