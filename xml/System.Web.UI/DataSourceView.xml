<Type Name="DataSourceView" FullName="System.Web.UI.DataSourceView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="496f6d8ca3e7758017f1539e8fc16ae8c391e2fb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30610643" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DataSourceView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DataSourceView extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DataSourceView" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataSourceView abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Sert de classe de base pour toutes les classes d'affichage de source de données qui définissent les fonctions des contrôles de source de données.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET prend en charge une architecture de liaison de données qui permet aux contrôles de serveur Web lier aux données de façon cohérente. Contrôles serveur Web liés aux données sont appelés contrôles liés aux données et les classes qui facilitent cette liaison sont appelées contrôles de source de données. Contrôles de source de données peuvent représenter n’importe quelle source de données : une base de données relationnelle, un fichier, un flux de données, un objet métier et ainsi de suite. Les contrôles de source de données présentent les données de façon cohérente à des contrôles liés aux données, quelle que soit la source ou le format des données sous-jacentes.  
  
 Vous utilisez les contrôles de source de données qui sont fournis avec ASP.NET, y compris <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.AccessDataSource>, et <xref:System.Web.UI.WebControls.XmlDataSource>, pour effectuer la plupart des tâches de développement Web. Vous utilisez la base de <xref:System.Web.UI.DataSourceControl> et <xref:System.Web.UI.DataSourceView> lorsque vous souhaitez implémenter vos propres données personnalisées de classes de contrôle de code source.  
  
 Vous pouvez considérer un contrôle de source de données comme la combinaison de la <xref:System.Web.UI.IDataSource> objet et ses listes associées de données, appelées des vues de source de données. Chaque liste de données est représentée par un <xref:System.Web.UI.DataSourceView> objet. Le <xref:System.Web.UI.DataSourceView> est la classe de base pour toutes les vues de sources de données ou les listes de données, associées aux contrôles de source de données. Vues de source de données définissent les fonctions d’un contrôle de source de données. Le stockage de données sous-jacent contenant une ou plusieurs listes de données, un contrôle de source de données est toujours associé à une ou plusieurs vues de source de données nommé. Le contrôle de source de données utilise le <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> actuellement associés au contrôle de source de données des vues de source de la méthode pour énumérer les données et le <xref:System.Web.UI.DataSourceControl.GetView%2A> pour récupérer une instance de vue de source de données spécifique par nom.  
  
 Tous les <xref:System.Web.UI.DataSourceView> objets prennent en charge la récupération des données à partir de la source de données sous-jacente à l’aide du <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> (méthode). Toutes les vues éventuellement prendre en charge qu’un ensemble d’opérations, y compris les opérations de base <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>, <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>, et <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>. Un contrôle lié aux données peut découvrir les fonctionnalités d’un contrôle de source de données en récupérant une source de données associé à afficher à l’aide de la <xref:System.Web.UI.DataSourceControl.GetView%2A> et <xref:System.Web.UI.DataSourceControl.GetViewNames%2A> méthodes et en interrogeant l’affichage au moment du design ou le moment de l’exécution.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment étendre la <xref:System.Web.UI.DataSourceView> classe pour créer une classe d’affichage fortement typé pour un contrôle de source de données. Le `CsVDataSourceView` classe définit les fonctionnalités de la `CsvDataSource` contrôle de source de données et fournit une implémentation pour les contrôles liés aux données à utiliser des données stockées dans les fichiers de valeurs séparées par des virgules (.csv). Pour plus d’informations sur la `CsvDataSource` de source de données de contrôle, consultez la <xref:System.Web.UI.DataSourceControl> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#5)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#5)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DataSourceView (System.Web.UI.IDataSource owner, string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.IDataSource owner, string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.#ctor(System.Web.UI.IDataSource,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (owner As IDataSource, viewName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DataSourceView(System::Web::UI::IDataSource ^ owner, System::String ^ viewName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.IDataSource" />
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="owner">Contrôle de source de données auquel <see cref="T:System.Web.UI.DataSourceView" /> est associé.</param>
        <param name="viewName">Nom de l'objet <see cref="T:System.Web.UI.DataSourceView" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.UI.DataSourceView" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="owner" /> est <see langword="null" />.  
  
 \- ou -  
  
 <paramref name="viewName" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public virtual bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Web.UI.DataSourceView" /> associé à l'objet <see cref="T:System.Web.UI.DataSourceControl" /> actif prend en charge l'opération <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />.</summary>
        <value>
          <see langword="true" /> si l'opération est prise en charge ; sinon, <see langword="false" />. L'implémentation de la classe de base retourne <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.DataSourceView.CanDelete%2A> propriété reflète non seulement d’une fonctionnalité de contrôle de source de données, mais également s’il est actuellement nécessaire d’effectuer une opération. Par exemple, même si une source de données afficher prend en charge la <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> opération en général, si une propriété requise ou autres données ne sont pas définies, la <xref:System.Web.UI.DataSourceView.CanDelete%2A> propriété renvoie `false`, comme une opération de suppression échoue.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.DataSourceView.CanDelete%2A> propriété et la <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> méthode dans une classe qui étend la <xref:System.Web.UI.DataSourceView> classe. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.DataSourceView> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#8)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanExecute">
      <MemberSignature Language="C#" Value="public virtual bool CanExecute (string commandName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExecute(string commandName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.CanExecute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CanExecute (commandName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanExecute(System::String ^ commandName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="commandName">Nom de la commande.</param>
        <summary>Détermine si la commande spécifiée peut être exécutée.</summary>
        <returns>
          <see langword="true" /> si la commande peut être exécutée ; sinon <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public virtual bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Web.UI.DataSourceView" /> associé à l'objet <see cref="T:System.Web.UI.DataSourceControl" /> actif prend en charge l'opération <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />.</summary>
        <value>
          <see langword="true" /> si l'opération est prise en charge ; sinon, <see langword="false" />. L'implémentation de la classe de base retourne <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.DataSourceView.CanInsert%2A> propriété reflète non seulement d’une fonctionnalité de contrôle de source de données, mais également s’il est actuellement nécessaire d’effectuer une opération. Par exemple, même si un contrôle de source de données prend en charge la <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> opération, si la commande d’insertion requise ou d’autres données ne sont pas définies, la <xref:System.Web.UI.DataSourceView.CanInsert%2A> propriété renvoie `false`, comme une opération d’insertion échoue.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.DataSourceView.CanInsert%2A> propriété et la <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> méthode dans une classe qui étend la <xref:System.Web.UI.DataSourceView> classe. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.DataSourceView> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#9)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public virtual bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Web.UI.DataSourceView" /> associé à l'objet en cours <see cref="T:System.Web.UI.DataSourceControl" /> prend en charge la consultation des données récupérées par la méthode <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />.</summary>
        <value>
          <see langword="true" /> si l'opération est prise en charge ; sinon, <see langword="false" />. L'implémentation de la classe de base retourne <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un contrôle lié aux données peut demander de paginer en ajoutant le <xref:System.Web.UI.DataSourceCapabilities.Page> au champ la <xref:System.Web.UI.DataSourceSelectArguments> objet passé à la <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> (méthode). Si un contrôle lié aux données demande la pagination, mais la <xref:System.Web.UI.DataSourceView.CanPage%2A> propriété renvoie `false`, la vue de source de données lève une exception.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.StartRowIndex" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.MaximumRows" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public virtual bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si l'objet <see cref="T:System.Web.UI.DataSourceView" /> associé à l'objet en cours <see cref="T:System.Web.UI.DataSourceControl" /> prend en charge la récupération du nombre total de lignes au lieu des données.</summary>
        <value>
          <see langword="true" /> si l'opération est prise en charge ; sinon, <see langword="false" />. L'implémentation de la classe de base retourne <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un contrôle lié aux données peut demander un nombre total de lignes en ajoutant le <xref:System.Web.UI.DataSourceCapabilities.RetrieveTotalRowCount?displayProperty=nameWithType> au champ la <xref:System.Web.UI.DataSourceSelectArguments?displayProperty=nameWithType> objet passé à la <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> (méthode). Si un contrôle lié aux données demande un nombre total de lignes, mais la <xref:System.Web.UI.DataSourceView.CanRetrieveTotalRowCount%2A> propriété renvoie `false`, la vue de source de données lève une exception.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.TotalRowCount" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
        <altmember cref="F:System.Web.UI.DataSourceOperation.SelectCount" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public virtual bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Web.UI.DataSourceView" /> associé à l'objet en cours <see cref="T:System.Web.UI.DataSourceControl" /> prend en charge un affichage trié de la source de données sous-jacente.</summary>
        <value>
          <see langword="true" /> si l'opération est prise en charge ; sinon, <see langword="false" />. L'implémentation par défaut retourne la valeur <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Un contrôle lié aux données peut demander de trier en ajoutant le <xref:System.Web.UI.DataSourceCapabilities.Sort> au champ la <xref:System.Web.UI.DataSourceSelectArguments> objet passé à la <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> (méthode). Si une limite de données de contrôle demande le tri, mais la <xref:System.Web.UI.DataSourceView.CanSort%2A> propriété renvoie `false`, la vue de source de données lève une exception.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.DataSourceView.CanSort%2A> propriété dans une classe qui étend la <xref:System.Web.UI.DataSourceView> classe. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.DataSourceView> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#7)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.SortExpression" />
        <altmember cref="T:System.Web.UI.DataSourceCapabilities" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public virtual bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'objet <see cref="T:System.Web.UI.DataSourceView" /> associé à l'objet <see cref="T:System.Web.UI.DataSourceControl" /> actif prend en charge l'opération <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />.</summary>
        <value>
          <see langword="true" /> si l'opération est prise en charge ; sinon, <see langword="false" />. L'implémentation par défaut retourne la valeur <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.DataSourceView.CanUpdate%2A> propriété reflète non seulement d’une fonctionnalité de contrôle de source de données, mais également s’il est actuellement nécessaire d’effectuer une opération. Par exemple, même si un contrôle lié aux données prend en charge la <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> opération, si une commande de mise à jour requise ou d’autres données ne sont pas définies, la <xref:System.Web.UI.DataSourceView.CanUpdate%2A> propriété renvoie `false`, comme une opération de mise à jour échoue.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.DataSourceView.CanUpdate%2A> propriété et la <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> méthode dans une classe qui étend la <xref:System.Web.UI.DataSourceView> classe. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.DataSourceView> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceViewChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceViewChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceViewChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.DataSourceView.DataSourceViewChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceViewChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceViewChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Se produit lorsque l'affichage de source de données a été modifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La modification de la vue de source de données peut être dû à une modification dans les valeurs de ses propriétés, ou à une modification dans les données en raison d’une opération de données effectuée par la vue de source de données.  
  
 Pour plus d’informations sur la gestion des événements, consultez [NIB : consommation d’événements](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public virtual void Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Delete (keys As IDictionary, oldValues As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="keys">
          <see cref="T:System.Collections.IDictionary" /> d'objet ou clés de ligne à supprimer par l'opération <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />.</param>
        <param name="oldValues">
          <see cref="T:System.Collections.IDictionary" /> de paires nom/valeur qui représentent les éléments de données et leurs valeurs d'origine.</param>
        <param name="callback">Délégué <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> qui est utilisé pour informer un contrôle lié aux données que l'opération asynchrone est terminée.</param>
        <summary>Exécute une opération de suppression asynchrone sur la liste des données que l'objet <see cref="T:System.Web.UI.DataSourceView" /> représente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.DataSourceView.Delete%2A> (méthode) est l’interface de suppression de données asynchrone pour tous les objets de vue de source de données. Le <xref:System.Web.UI.DataSourceView.Delete%2A> les appels de méthode le <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> méthode à l’aide d’un `keys` et `oldValues` les valeurs de paramètre fournies. Le `callback` paramètre est un délégué qu’un contrôle lié aux données passe à la source de données vue, qui est utilisée pour notifier les données liées au contrôle lorsque le <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> opération est terminée. La méthode utilise les paramètres de la <xref:System.Web.UI.DataSourceViewOperationCallback> délégué pour retourner le nombre d’enregistrements affectés et toute <xref:System.Exception> exception qui est levée par le <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> fourni est <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Events">
      <MemberSignature Language="C#" Value="protected System.ComponentModel.EventHandlerList Events { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.EventHandlerList Events" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.Events" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Events As EventHandlerList" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::ComponentModel::EventHandlerList ^ Events { System::ComponentModel::EventHandlerList ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.EventHandlerList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la liste des délégués de gestion d'événements pour l'affichage de source de données.</summary>
        <value>Liste des délégués de gestion d'événements.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette propriété est de type <xref:System.ComponentModel.EventHandlerList>, qui utilise un algorithme de recherche linéaire pour rechercher des entrées dans la liste de délégués. Un algorithme de recherche linéaire est inefficace lorsque vous travaillez avec un grand nombre d’entrées. Par conséquent, lorsque vous avez une grande liste, recherche les entrées de cette propriété sera lentes.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ExecuteCommand">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Exécute la commande spécifiée.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteCommand(string commandName, class System.Collections.IDictionary keys, class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteCommand (commandName As String, keys As IDictionary, values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteCommand(System::String ^ commandName, System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="commandName">Nom de la commande.</param>
        <param name="keys">Dictionnaire de clés d'objet ou de clés de ligne sur lequel agir.</param>
        <param name="values">Dictionnaire de paires nom/valeur qui représentent les éléments de données et leurs valeurs.</param>
        <summary>Exécute la commande spécifiée.</summary>
        <returns>Nombre d'éléments qui ont été affectés par l'opération.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteCommand">
      <MemberSignature Language="C#" Value="public virtual void ExecuteCommand (string commandName, System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ExecuteCommand(string commandName, class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ExecuteCommand (commandName As String, keys As IDictionary, values As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ExecuteCommand(System::String ^ commandName, System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="commandName">Nom de la commande.</param>
        <param name="keys">Dictionnaire de clés d'objet ou de clés de ligne sur lequel agir.</param>
        <param name="values">Dictionnaire de paires nom/valeur qui représentent les éléments de données et leurs valeurs.</param>
        <param name="callback">Objet <see cref="T:System.Web.UI.DataSourceViewOperationCallback" />.</param>
        <summary>Exécute la commande spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode ne retourne pas de valeur.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">
          <see cref="T:System.Collections.IDictionary" /> d'objet ou clés de ligne à supprimer par l'opération <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />.</param>
        <param name="oldValues">
          <see cref="T:System.Collections.IDictionary" /> de paires nom/valeur qui représentent les éléments de données et leurs valeurs d'origine.</param>
        <summary>Exécute une opération de suppression sur la liste des données que l'objet <see cref="T:System.Web.UI.DataSourceView" /> représente.</summary>
        <returns>Nombre d'éléments supprimés du stockage de données sous-jacent.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Des contrôles liés aux données peuvent déterminer si le <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> opération est prise en charge par un contrôle de source de données en récupérant le <xref:System.Web.UI.DataSourceView> à l’aide de l’objet le <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=nameWithType> (méthode) et en vérifiant la <xref:System.Web.UI.DataSourceView.CanDelete%2A> propriété.  
  
 Le `keys` paramètre représente l’objet ou clés de ligne des données à supprimer. Pour les sources de données qui représentent des données relationnelles, telles que la <xref:System.Web.UI.WebControls.SqlDataSource> (contrôle), le `keys` paramètre est une collection de clés primaires de base de données. Dans d’autres scénarios, le `keys` est une collection de paires nom/valeur de paramètre et est utilisé pour filtrer une liste de données. Toutes les données correspondant à une paire nom/valeur sont supprimées.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.DataSourceView> implémentation de la classe par défaut consiste à lever une <xref:System.NotSupportedException> exception. Si vous étendez le <xref:System.Web.UI.DataSourceView> de classe, remplacez le <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> méthode si votre classe prend en charge la suppression du stockage des données sous-jacent.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment une classe qui étend la <xref:System.Web.UI.DataSourceView> classe peut substituer la <xref:System.Web.UI.DataSourceView.CanDelete%2A> propriété et la <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> (méthode). Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.DataSourceView> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#8)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">L'opération <see cref="M:System.Web.UI.DataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> n'est pas prise en charge par <see cref="T:System.Web.UI.DataSourceView" />.</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanDelete" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">
          <see cref="T:System.Collections.IDictionary" /> de paires nom/valeur utilisé lors d'une opération d'insertion.</param>
        <summary>Exécute une opération d'insertion dans la liste des données que l'objet <see cref="T:System.Web.UI.DataSourceView" /> représente.</summary>
        <returns>Nombre d'éléments insérés dans le stockage des données sous-jacent.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Des contrôles liés aux données peuvent déterminer si le <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> opération est prise en charge par un contrôle de source de données en récupérant le <xref:System.Web.UI.DataSourceView> à l’aide de l’objet le <xref:System.Web.UI.DataSourceControl.GetView%2A> (méthode) et en vérifiant la <xref:System.Web.UI.DataSourceView.CanInsert%2A> propriété.  
  
 Le `values` paramètre est un ensemble de paires nom/valeur qui représente les colonnes de données ou les champs et les valeurs correspondantes à insérer.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.DataSourceView> implémentation de la classe par défaut consiste à lever une <xref:System.NotSupportedException> exception. Si vous étendez le <xref:System.Web.UI.DataSourceView> de classe, remplacez le <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> méthode si votre classe prend en charge l’insertion dans le stockage de données sous-jacent.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment une classe qui étend la <xref:System.Web.UI.DataSourceView> classe peut substituer la <xref:System.Web.UI.DataSourceView.CanInsert%2A> propriété et la <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> (méthode). Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.DataSourceView> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#9)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">L'opération <see cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" /> n'est pas prise en charge par <see cref="T:System.Web.UI.DataSourceView" />.</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanInsert" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal abstract System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend MustOverride Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; abstract System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">
          <see cref="T:System.Web.UI.DataSourceSelectArguments" /> utilisé pour demander des opérations sur les données, autres que la récupération des données de base.</param>
        <summary>Obtient une liste de données du stockage des données sous-jacent.</summary>
        <returns>Liste de données <see cref="T:System.Collections.IEnumerable" /> issue du stockage des données sous-jacent.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> méthode est appelée pour récupérer des données à partir du magasin de données sous-jacent et le retourner comme un <xref:System.Collections.IEnumerable> objet. Tous les contrôles de source de données prend en charge la récupération des données à partir de leur stockage de données sous-jacent, même si d’autres opérations telles que l’insertion et le tri ne sont pas pris en charge. Un contrôle lié aux données peut demander une liste de données à tout moment à la suite d’un <xref:System.Web.UI.IDataSource.DataSourceChanged> événement ou un <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> appel de méthode, la récupération de données doit être effectuée à la demande.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment substituer la <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> méthode dans une classe qui étend la <xref:System.Web.UI.DataSourceView> classe. Le `CsvDataSourceView` ouvre un fichier de valeurs séparées par des virgules (.csv), analyse ligne par ligne et crée un <xref:System.Data.DataTable> objet et un <xref:System.Data.DataView> objet pour contenir les données en mémoire. Enfin, une expression de tri est appliquée si elle est fournie par le <xref:System.Web.UI.DataSourceSelectArguments> objet et le <xref:System.Data.DataView> est retourné comme une <xref:System.Collections.IEnumerable> instance. Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.DataSourceView> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#6)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceView.CanSort" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected virtual int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">
          <see cref="T:System.Collections.IDictionary" /> d'objet ou clés de ligne à mettre à jour par l'opération de mise à jour.</param>
        <param name="values">
          <see cref="T:System.Collections.IDictionary" /> de paires nom/valeur qui représentent les éléments de données et leurs nouvelles valeurs.</param>
        <param name="oldValues">
          <see cref="T:System.Collections.IDictionary" /> de paires nom/valeur qui représentent les éléments de données et leurs valeurs d'origine.</param>
        <summary>Exécute une opération de mise à jour dans la liste des données que l'objet <see cref="T:System.Web.UI.DataSourceView" /> représente.</summary>
        <returns>Nombre d'éléments mis à jour au sein du stockage de données sous-jacent.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Des contrôles liés aux données peuvent déterminer si le <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> opération est prise en charge par un contrôle de source de données à l’aide de la <xref:System.Web.UI.DataSourceControl.GetView%2A?displayProperty=nameWithType> pour récupérer le <xref:System.Web.UI.DataSourceView> objet et en vérifiant la valeur de la <xref:System.Web.UI.DataSourceView.CanUpdate%2A> propriété.  
  
 Le `keys` paramètre représente l’objet ou clés de ligne des données à mettre à jour. Pour les sources de données qui représentent des données relationnelles, telles que la <xref:System.Web.UI.WebControls.SqlDataSource> (contrôle), le `keys` paramètre est une collection de clés primaires de base de données. Dans d’autres scénarios, le `keys` est une collection de paires nom/valeur de paramètre et est utilisé pour filtrer une liste de données. Toutes les données correspondant à une paire nom/valeur sont mise à jour avec les valeurs trouvées dans le `values` paramètre, qui est un ensemble de paires nom/valeur qui représente les nouvelles valeurs pour les champs ou les colonnes.  
  
> [!NOTE]
>  Le <xref:System.Web.UI.DataSourceView> implémentation de la classe par défaut consiste à lever une <xref:System.NotSupportedException> exception. Si vous étendez le <xref:System.Web.UI.DataSourceView> de classe, remplacez le <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> méthode si votre classe prend en charge la mise à jour des données dans le stockage de données sous-jacent.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment une classe qui étend la <xref:System.Web.UI.DataSourceView> classe peut substituer la <xref:System.Web.UI.DataSourceView.CanUpdate%2A> propriété et la <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> (méthode). Cet exemple de code fait partie d’un exemple plus complet fourni pour la <xref:System.Web.UI.DataSourceView> classe.  
  
 [!code-csharp[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/CS/csvdatasource.cs#10)]
 [!code-vb[Urtue.Samples.Alexkr.CsvDataSource_1#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.CsvDataSource_1/VB/csvdatasource.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">L'opération <see cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" /> n'est pas prise en charge par <see cref="T:System.Web.UI.DataSourceView" />.</exception>
        <altmember cref="P:System.Web.UI.DataSourceView.CanUpdate" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (System.Collections.IDictionary values, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(class System.Collections.IDictionary values, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (values As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(System::Collections::IDictionary ^ values, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="values">
          <see cref="T:System.Collections.IDictionary" /> de paires nom/valeur utilisé lors d'une opération d'insertion.</param>
        <param name="callback">Délégué <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> qui est utilisé pour informer un contrôle lié aux données que l'opération asynchrone est terminée.</param>
        <summary>Exécute une opération d'insertion asynchrone dans la liste des données que l'objet <see cref="T:System.Web.UI.DataSourceView" /> représente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.DataSourceView.Insert%2A> (méthode) est l’interface d’insertion de données asynchrone pour tous les objets de vue de source de données. Le <xref:System.Web.UI.DataSourceView.Insert%2A> les appels de méthode le <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> méthode à l’aide d’un `values` fourni. Le `callback` paramètre est un délégué qu’un contrôle lié aux données passe à la source de données vue, qui est utilisée pour notifier les données liées au contrôle lorsque le <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> opération est terminée. La méthode utilise les paramètres de la <xref:System.Web.UI.DataSourceViewOperationCallback> délégué pour retourner le nombre d’enregistrements affectés et toute <xref:System.Exception> exception qui est levée par le <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> appel de méthode.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> fourni est <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataSourceView.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom de l'affichage de source de données.</summary>
        <value>Nom du <see cref="T:System.Web.UI.DataSourceView" />, le cas échéant. La valeur par défaut est <see cref="F:System.String.Empty" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.DataSourceControl.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.DataSourceControl.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceViewChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceViewChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceViewChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceViewChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.EventArgs" /> qui contient les données d'événement.</param>
        <summary>Déclenche l'événement <see cref="E:System.Web.UI.DataSourceView.DataSourceViewChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A> méthode notifie à un contrôle lié aux données que la source de données sous-jacente a changé et que le contrôle doit relier et effectuer toutes les tâches nécessaires. En règle générale, le <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A> méthode est appelée lorsqu’une propriété de la vue de source de données a changé.  
  
 Le déclenchement d'un événement appelle le gestionnaire des événements par l'intermédiaire d'un délégué. Pour plus d’informations, consultez [gestion et déclenchement d’événements](~/docs/standard/events/index.md).  
  
 La méthode <xref:System.Web.UI.DataSourceView.OnDataSourceViewChanged%2A> permet également aux classes dérivées de gérer l'événement sans y attacher de délégué. Il s'agit de la méthode recommandée pour gérer l'événement dans une classe dérivée.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Lors de la substitution de <see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" /> dans une classe dérivée, veillez à appeler la méthode <see cref="M:System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)" /> de la classe de base de manière à ce que les délégués inscrits reçoivent l'événement.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RaiseUnsupportedCapabilityError">
      <MemberSignature Language="C#" Value="protected internal virtual void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RaiseUnsupportedCapabilityError(valuetype System.Web.UI.DataSourceCapabilities capability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RaiseUnsupportedCapabilityError (capability As DataSourceCapabilities)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RaiseUnsupportedCapabilityError(System::Web::UI::DataSourceCapabilities capability);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capability" Type="System.Web.UI.DataSourceCapabilities" />
      </Parameters>
      <Docs>
        <param name="capability">Une des valeurs <see cref="T:System.Web.UI.DataSourceCapabilities" /> comparée aux fonctions prises en charge par l'affichage.</param>
        <summary>Appelé par la méthode <see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" /> pour comparer les fonctions demandées pour une opération <see cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> à celles prises en charge par l'affichage.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError%2A> méthode est utilisée par la vue de source de données pour examiner chacune des fonctions demandées par un contrôle lié aux données, représenté par le <xref:System.Web.UI.DataSourceSelectArguments> objet passé à la <xref:System.Web.UI.DataSourceView.Select%2A> (méthode) et le compare aux fonctions prises en charge par les données vue de source.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">L'affichage de source de données ne prend pas en charge la fonction de source de données spécifiée.</exception>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public virtual void Select (System.Web.UI.DataSourceSelectArguments arguments, System.Web.UI.DataSourceViewSelectCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Select(class System.Web.UI.DataSourceSelectArguments arguments, class System.Web.UI.DataSourceViewSelectCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Select (arguments As DataSourceSelectArguments, callback As DataSourceViewSelectCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Select(System::Web::UI::DataSourceSelectArguments ^ arguments, System::Web::UI::DataSourceViewSelectCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewSelectCallback" />
      </Parameters>
      <Docs>
        <param name="arguments">
          <see cref="T:System.Web.UI.DataSourceSelectArguments" /> utilisé pour demander des opérations sur les données, autres que la récupération des données de base.</param>
        <param name="callback">Délégué <see cref="T:System.Web.UI.DataSourceViewSelectCallback" /> qui est utilisé pour informer un contrôle lié aux données que l'opération asynchrone est terminée.</param>
        <summary>Obtient une liste de données en mode asynchrone provenant du stockage des données sous-jacent.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.DataSourceView.Select%2A> (méthode) est l’interface de récupération de données asynchrone pour tous les objets de vue de source de données. Le <xref:System.Web.UI.DataSourceView.Select%2A> les appels de méthode le <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> méthode, en passant les <xref:System.Web.UI.DataSourceSelectArguments> fourni. Le `callback` paramètre est un délégué qu’un contrôle lié aux données passe à la source de données vue, qui est utilisée pour notifier les données liées au contrôle lorsque le <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> opération est terminée. Les données retournées par le <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> appel est retourné dans le paramètre de la <xref:System.Web.UI.DataSourceViewSelectCallback> déléguer.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le <see cref="T:System.Web.UI.DataSourceViewSelectCallback" /> fourni est <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewSelectCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public virtual void Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues, System.Web.UI.DataSourceViewOperationCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues, class System.Web.UI.DataSourceViewOperationCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary, callback As DataSourceViewOperationCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues, System::Web::UI::DataSourceViewOperationCallback ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
        <Parameter Name="callback" Type="System.Web.UI.DataSourceViewOperationCallback" />
      </Parameters>
      <Docs>
        <param name="keys">
          <see cref="T:System.Collections.IDictionary" /> d'objet ou clés de ligne à mettre à jour par l'opération de mise à jour.</param>
        <param name="values">
          <see cref="T:System.Collections.IDictionary" /> de paires nom/valeur qui représentent les éléments de données et leurs nouvelles valeurs.</param>
        <param name="oldValues">
          <see cref="T:System.Collections.IDictionary" /> de paires nom/valeur qui représentent les éléments de données et leurs valeurs d'origine.</param>
        <param name="callback">Délégué <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> qui est utilisé pour informer un contrôle lié aux données que l'opération asynchrone est terminée.</param>
        <summary>Exécute une opération de mise à jour asynchrone dans la liste des données que l'objet <see cref="T:System.Web.UI.DataSourceView" /> représente.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.UI.DataSourceView.Update%2A> (méthode) est l’interface de modification de données asynchrone pour tous les objets de vue de source de données. Le <xref:System.Web.UI.DataSourceView.Update%2A> les appels de méthode le <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> méthode à l’aide d’un `keys`, `values`, et `oldValues` les valeurs de paramètre fournies. Le `callback` paramètre est un délégué qu’un contrôle lié aux données passe à la source de données vue, qui est utilisée pour notifier les données liées au contrôle lorsque le <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> opération est terminée. La méthode utilise les paramètres de la <xref:System.Web.UI.DataSourceViewOperationCallback> délégué pour retourner le nombre d’enregistrements affectés et toute <xref:System.Exception> exception qui est levée par le <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> appeler.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Le <see cref="T:System.Web.UI.DataSourceViewOperationCallback" /> fourni est <see langword="null" />.</exception>
        <altmember cref="T:System.Web.UI.DataSourceViewOperationCallback" />
        <altmember cref="M:System.Web.UI.DataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
  </Members>
</Type>