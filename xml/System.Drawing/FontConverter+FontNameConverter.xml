<Type Name="FontConverter+FontNameConverter" FullName="System.Drawing.FontConverter+FontNameConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bfa0bee54dbf3123f3ca16558c00bf4e5b69d0be" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30408933" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FontConverter.FontNameConverter : System.ComponentModel.TypeConverter, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit FontConverter/FontNameConverter extends System.ComponentModel.TypeConverter implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.FontConverter.FontNameConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FontConverter.FontNameConverter&#xA;Inherits TypeConverter&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public: ref class FontConverter::FontNameConverter sealed : System::ComponentModel::TypeConverter, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="d7521-101">
        <see cref="T:System.Drawing.FontConverter.FontNameConverter" /> est convertisseur de type qui est utilisé pour convertir un nom de police dans et à partir de plusieurs autres représentations.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d7521-101">
          <see cref="T:System.Drawing.FontConverter.FontNameConverter" /> is a type converter that is used to convert a font name to and from various other representations.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontNameConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.FontNameConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontNameConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d7521-102">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.FontConverter.FontNameConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-102">Initializes a new instance of the <see cref="T:System.Drawing.FontConverter.FontNameConverter" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.FontNameConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="d7521-103">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-103">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to extract additional information about the environment this converter is being invoked from.</span>
          </span>
          <span data-ttu-id="d7521-104">La valeur peut être <see langword="null" />, vérifiez donc toujours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-104">This may be <see langword="null" />, so you should always check.</span>
          </span>
          <span data-ttu-id="d7521-105">En outre, les propriétés de l'objet de contexte peuvent retourner <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-105">Also, properties on the context object may return <see langword="null" />.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="d7521-106">Type à partir duquel vous souhaitez convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-106">The type you wish to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d7521-107">Détermine si ce convertisseur peut convertir un objet du type source donné en objet du type natif du convertisseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-107">Determines if this converter can convert an object in the given source type to the native type of the converter.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d7521-108">
            <see langword="true" /> si le convertisseur peut effectuer la conversion ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-108">
              <see langword="true" /> if the converter can perform the conversion; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.FontNameConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="d7521-109">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-109">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to extract additional information about the environment this converter is being invoked from.</span>
          </span>
          <span data-ttu-id="d7521-110">La valeur peut être <see langword="null" />, vérifiez donc toujours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-110">This may be <see langword="null" />, so you should always check.</span>
          </span>
          <span data-ttu-id="d7521-111">En outre, les propriétés de l'objet de contexte peuvent retourner <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-111">Also, properties on the context object may return <see langword="null" />.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="d7521-112">
            <see cref="T:System.Globalization.CultureInfo" /> à utiliser pour effectuer la conversion</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-112">A <see cref="T:System.Globalization.CultureInfo" /> to use to perform the conversion</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="d7521-113">Objet à convertir.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-113">The object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d7521-114">Convertit l'objet donné en type natif du convertisseur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-114">Converts the given object to the converter's native type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d7521-115">Objet converti.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-115">The converted object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="d7521-116">La conversion ne peut pas être effectuée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-116">The conversion cannot be completed.</span>
          </span>
        </exception>
        <forInternalUseOnly />
        <altmember cref="T:System.ComponentModel.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValues">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.TypeConverter/StandardValuesCollection GetStandardValues(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValues (context As ITypeDescriptorContext) As TypeConverter.StandardValuesCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::TypeConverter::StandardValuesCollection ^ GetStandardValues(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.TypeConverter+StandardValuesCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="d7521-117">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-117">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to extract additional information about the environment this converter is being invoked from.</span>
          </span>
          <span data-ttu-id="d7521-118">La valeur peut être <see langword="null" />, vérifiez donc toujours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-118">This may be <see langword="null" />, so you should always check.</span>
          </span>
          <span data-ttu-id="d7521-119">En outre, les propriétés de l'objet de contexte peuvent retourner <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-119">Also, properties on the context object may return <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d7521-120">Récupère une collection contenant un ensemble de valeurs standard pour le type de données pour lequel ce convertisseur a été conçu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-120">Retrieves a collection containing a set of standard values for the data type this converter is designed for.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d7521-121">Collection contenant un ensemble standard de valeurs valides ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-121">A collection containing a standard set of valid values, or <see langword="null" />.</span>
          </span>
          <span data-ttu-id="d7521-122">La valeur par défaut est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-122">The default is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesExclusive">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesExclusive(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesExclusive (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesExclusive(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="d7521-123">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-123">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to extract additional information about the environment this converter is being invoked from.</span>
          </span>
          <span data-ttu-id="d7521-124">La valeur peut être <see langword="null" />, vérifiez donc toujours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-124">This may be <see langword="null" />, so you should always check.</span>
          </span>
          <span data-ttu-id="d7521-125">En outre, les propriétés de l'objet de contexte peuvent retourner <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-125">Also, properties on the context object may return <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d7521-126">Détermine si la liste de valeurs standard retournée par la méthode <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> est une liste exclusive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-126">Determines if the list of standard values returned from the <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> method is an exclusive list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d7521-127">
            <see langword="true" /> si la collection retournée à partir de <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> est une liste exclusive des valeurs possibles ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-127">
              <see langword="true" /> if the collection returned from <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> is an exclusive list of possible values; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="d7521-128">La valeur par défaut est <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-128">The default is <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d7521-129">Si la liste est exclusive, aucune autre valeur n’est valide, comme dans un type de données d’énumération.</span><span class="sxs-lookup"><span data-stu-id="d7521-129">If the list is exclusive, no other values are valid, such as in an enumeration data type.</span></span> <span data-ttu-id="d7521-130">Si la liste n’est pas exclusive, il existe d’autres valeurs valides parallèlement à la liste de valeurs standard <xref:System.Drawing.FontConverter.FontNameConverter.GetStandardValues%2A> fournit.</span><span class="sxs-lookup"><span data-stu-id="d7521-130">If the list is not exclusive, then there are other valid values besides the list of standard values <xref:System.Drawing.FontConverter.FontNameConverter.GetStandardValues%2A> provides.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="GetStandardValuesSupported">
      <MemberSignature Language="C#" Value="public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetStandardValuesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.FontNameConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetStandardValuesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetStandardValuesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="d7521-131">
            <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui peut être utilisé pour extraire des informations supplémentaires sur l'environnement à partir duquel ce convertisseur est appelé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-131">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that can be used to extract additional information about the environment this converter is being invoked from.</span>
          </span>
          <span data-ttu-id="d7521-132">La valeur peut être <see langword="null" />, vérifiez donc toujours.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-132">This may be <see langword="null" />, so you should always check.</span>
          </span>
          <span data-ttu-id="d7521-133">En outre, les propriétés de l'objet de contexte peuvent retourner <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-133">Also, properties on the context object may return <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d7521-134">Détermine si cet objet prend en charge un jeu de valeurs standard qui peuvent être sélectionnées dans une liste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-134">Determines if this object supports a standard set of values that can be picked from a list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d7521-135">
            <see langword="true" /> si <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> doit être appelée pour rechercher un jeu commun de valeurs prises en charge par l'objet ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-135">
              <see langword="true" /> if <see cref="Overload:System.Drawing.FontConverter.FontNameConverter.GetStandardValues" /> should be called to find a common set of values the object supports; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontConverter.FontNameConverter.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d7521-136">Exécute les tâches définies par l’application associées à la libération ou à la redéfinition des ressources non managées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d7521-136">Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>