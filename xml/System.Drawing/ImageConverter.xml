<Type Name="ImageConverter" FullName="System.Drawing.ImageConverter">
  <TypeSignature Language="C#" Value="public class ImageConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImageConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.ImageConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class ImageConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImageConverter : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="8cd15-101"><see cref="T:System.Drawing.ImageConverter" /> est une classe qui peut être utilisée pour convertir des objets <see cref="T:System.Drawing.Image" /> d'un type de données à un autre.</span><span class="sxs-lookup"><span data-stu-id="8cd15-101"><see cref="T:System.Drawing.ImageConverter" /> is a class that can be used to convert <see cref="T:System.Drawing.Image" /> objects from one data type to another.</span></span> <span data-ttu-id="8cd15-102">Accédez à cette classe via l'objet <see cref="T:System.ComponentModel.TypeDescriptor" />.</span><span class="sxs-lookup"><span data-stu-id="8cd15-102">Access this class through the <see cref="T:System.ComponentModel.TypeDescriptor" /> object.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImageConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImageConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="8cd15-103">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.ImageConverter" />.</span><span class="sxs-lookup"><span data-stu-id="8cd15-103">Initializes a new instance of the <see cref="T:System.Drawing.ImageConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="8cd15-104"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span><span class="sxs-lookup"><span data-stu-id="8cd15-104">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="sourceType"><span data-ttu-id="8cd15-105"><see cref="T:System.Type" /> qui spécifie le type à partir duquel effectuer la conversion.</span><span class="sxs-lookup"><span data-stu-id="8cd15-105">A <see cref="T:System.Type" /> that specifies the type you want to convert from.</span></span></param>
        <summary><span data-ttu-id="8cd15-106">Détermine si ce <see cref="T:System.Drawing.ImageConverter" /> peut convertir une instance d'un type spécifié en <see cref="T:System.Drawing.Image" />, en utilisant le contexte spécifié.</span><span class="sxs-lookup"><span data-stu-id="8cd15-106">Determines whether this <see cref="T:System.Drawing.ImageConverter" /> can convert an instance of a specified type to an <see cref="T:System.Drawing.Image" />, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="8cd15-107">Cette méthode retourne <see langword="true" /> si ce <see cref="T:System.Drawing.ImageConverter" /> peut effectuer la conversion ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8cd15-107">This method returns <see langword="true" /> if this <see cref="T:System.Drawing.ImageConverter" /> can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cd15-108">Cette méthode retourne `true` uniquement si `sourceType` est égal à un tableau d’octets.</span><span class="sxs-lookup"><span data-stu-id="8cd15-108">This method returns `true` only if `sourceType` is equal to a byte array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="8cd15-109"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span><span class="sxs-lookup"><span data-stu-id="8cd15-109">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="destinationType"><span data-ttu-id="8cd15-110"><see cref="T:System.Type" /> spécifiant le type vers lequel effectuer la conversion.</span><span class="sxs-lookup"><span data-stu-id="8cd15-110">A <see cref="T:System.Type" /> that specifies the type you want to convert to.</span></span></param>
        <summary><span data-ttu-id="8cd15-111">Détermine si ce <see cref="T:System.Drawing.ImageConverter" /> peut convertir <see cref="T:System.Drawing.Image" /> en une instance d'un type spécifié, en utilisant le contexte spécifié.</span><span class="sxs-lookup"><span data-stu-id="8cd15-111">Determines whether this <see cref="T:System.Drawing.ImageConverter" /> can convert an <see cref="T:System.Drawing.Image" /> to an instance of a specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="8cd15-112">Cette méthode retourne <see langword="true" /> si ce <see cref="T:System.Drawing.ImageConverter" /> peut effectuer la conversion ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8cd15-112">This method returns <see langword="true" /> if this <see cref="T:System.Drawing.ImageConverter" /> can perform the conversion; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cd15-113">Cette méthode retourne `true` uniquement si `sourceType` est égal à un tableau d’octets ou une chaîne.</span><span class="sxs-lookup"><span data-stu-id="8cd15-113">This method returns `true` only if `sourceType` is equal to a byte array or string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="8cd15-114"><see cref="T:System.ComponentModel.ITypeDescriptorContext" /> qui fournit un contexte de format.</span><span class="sxs-lookup"><span data-stu-id="8cd15-114">An <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that provides a format context.</span></span></param>
        <param name="culture"><span data-ttu-id="8cd15-115"><see cref="T:System.Globalization.CultureInfo" /> qui contient des informations sur une culture spécifique.</span><span class="sxs-lookup"><span data-stu-id="8cd15-115">A <see cref="T:System.Globalization.CultureInfo" /> that holds information about a specific culture.</span></span></param>
        <param name="value"><span data-ttu-id="8cd15-116"><see cref="T:System.Object" /> à convertir.</span><span class="sxs-lookup"><span data-stu-id="8cd15-116">The <see cref="T:System.Object" /> to be converted.</span></span></param>
        <summary><span data-ttu-id="8cd15-117">Convertit un objet spécifié en <see cref="T:System.Drawing.Image" />.</span><span class="sxs-lookup"><span data-stu-id="8cd15-117">Converts a specified object to an <see cref="T:System.Drawing.Image" />.</span></span></summary>
        <returns><span data-ttu-id="8cd15-118">Si cette méthode réussit, elle retourne le <see cref="T:System.Drawing.Image" /> qu'elle a créé en convertissant l'objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="8cd15-118">If this method succeeds, it returns the <see cref="T:System.Drawing.Image" /> that it created by converting the specified object.</span></span> <span data-ttu-id="8cd15-119">Sinon, elle lève une exception.</span><span class="sxs-lookup"><span data-stu-id="8cd15-119">Otherwise, it throws an exception.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8cd15-120">La conversion ne peut pas être effectuée.</span><span class="sxs-lookup"><span data-stu-id="8cd15-120">The conversion cannot be completed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="8cd15-121">Contexte de formateur.</span><span class="sxs-lookup"><span data-stu-id="8cd15-121">A formatter context.</span></span> <span data-ttu-id="8cd15-122">Cet objet peut être utilisé pour obtenir des informations supplémentaires concernant l'environnement à partir duquel le convertisseur est appelé.</span><span class="sxs-lookup"><span data-stu-id="8cd15-122">This object can be used to get more information about the environment this converter is being called from.</span></span> <span data-ttu-id="8cd15-123">La valeur peut être <see langword="null" />, vérifiez donc toujours.</span><span class="sxs-lookup"><span data-stu-id="8cd15-123">This may be <see langword="null" />, so you should always check.</span></span> <span data-ttu-id="8cd15-124">En outre, les propriétés sur l'objet de contexte peuvent retourner <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8cd15-124">Also, properties on the context object may also return <see langword="null" />.</span></span></param>
        <param name="culture"><span data-ttu-id="8cd15-125">Objet <see cref="T:System.Globalization.CultureInfo" /> qui spécifie des conventions de mise en forme utilisées par une culture particulière.</span><span class="sxs-lookup"><span data-stu-id="8cd15-125">A <see cref="T:System.Globalization.CultureInfo" /> object that specifies formatting conventions used by a particular culture.</span></span></param>
        <param name="value"><span data-ttu-id="8cd15-126"><see cref="T:System.Drawing.Image" /> à convertir.</span><span class="sxs-lookup"><span data-stu-id="8cd15-126">The <see cref="T:System.Drawing.Image" /> to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="8cd15-127"><see cref="T:System.Type" /> dans lequel <see cref="T:System.Drawing.Image" /> doit être converti.</span><span class="sxs-lookup"><span data-stu-id="8cd15-127">The <see cref="T:System.Type" /> to convert the <see cref="T:System.Drawing.Image" /> to.</span></span></param>
        <summary><span data-ttu-id="8cd15-128">Convertit <see cref="T:System.Drawing.Image" /> (ou un objet pouvant être casté en <see cref="T:System.Drawing.Image" />) en un type spécifié.</span><span class="sxs-lookup"><span data-stu-id="8cd15-128">Converts an <see cref="T:System.Drawing.Image" /> (or an object that can be cast to an <see cref="T:System.Drawing.Image" />) to the specified type.</span></span></summary>
        <returns><span data-ttu-id="8cd15-129">Cette méthode retourne l'objet converti.</span><span class="sxs-lookup"><span data-stu-id="8cd15-129">This method returns the converted object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cd15-130">La conversion de type plus courante est vers et à partir d’un type de chaîne.</span><span class="sxs-lookup"><span data-stu-id="8cd15-130">The most common type conversion is to and from a string type.</span></span> <span data-ttu-id="8cd15-131">L’implémentation par défaut appelle la <xref:System.Object.ToString%2A> méthode de l’objet si l’objet est valide et si la destination est de type chaîne.</span><span class="sxs-lookup"><span data-stu-id="8cd15-131">The default implementation calls the <xref:System.Object.ToString%2A> method of the object if the object is valid and if the destination type is string.</span></span> <span data-ttu-id="8cd15-132">Si cette méthode ne peut pas convertir l’objet spécifié pour le type de destination, elle lève une <xref:System.NotSupportedException> exception.</span><span class="sxs-lookup"><span data-stu-id="8cd15-132">If this method cannot convert the specified object to the destination type, it throws a <xref:System.NotSupportedException> exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="8cd15-133">La conversion ne peut pas être effectuée.</span><span class="sxs-lookup"><span data-stu-id="8cd15-133">The conversion cannot be completed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetProperties">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.ComponentModel.PropertyDescriptorCollection GetProperties(class System.ComponentModel.ITypeDescriptorContext context, object value, class System.Attribute[] attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetProperties (context As ITypeDescriptorContext, value As Object, attributes As Attribute()) As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::ComponentModel::PropertyDescriptorCollection ^ GetProperties(System::ComponentModel::ITypeDescriptorContext ^ context, System::Object ^ value, cli::array &lt;Attribute ^&gt; ^ attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="attributes" Type="System.Attribute[]" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="8cd15-134">Descripteur de type par l'intermédiaire duquel un contexte supplémentaire peut être fourni.</span><span class="sxs-lookup"><span data-stu-id="8cd15-134">A type descriptor through which additional context can be provided.</span></span></param>
        <param name="value"><span data-ttu-id="8cd15-135">Valeur de l'objet pour lequel les propriétés doivent être obtenues.</span><span class="sxs-lookup"><span data-stu-id="8cd15-135">The value of the object to get the properties for.</span></span></param>
        <param name="attributes"><span data-ttu-id="8cd15-136">Tableau d'objets <see cref="T:System.Attribute" /> qui décrivent les propriétés.</span><span class="sxs-lookup"><span data-stu-id="8cd15-136">An array of <see cref="T:System.Attribute" /> objects that describe the properties.</span></span></param>
        <summary><span data-ttu-id="8cd15-137">Obtient l'ensemble de propriétés pour ce type.</span><span class="sxs-lookup"><span data-stu-id="8cd15-137">Gets the set of properties for this type.</span></span></summary>
        <returns><span data-ttu-id="8cd15-138">Ensemble des propriétés qui doivent être exposées pour ce type de données.</span><span class="sxs-lookup"><span data-stu-id="8cd15-138">The set of properties that should be exposed for this data type.</span></span> <span data-ttu-id="8cd15-139">Si aucune propriété ne doit être exposée, la valeur <see langword="null" /> peut être retournée.</span><span class="sxs-lookup"><span data-stu-id="8cd15-139">If no properties should be exposed, this can return <see langword="null" />.</span></span> <span data-ttu-id="8cd15-140">L'implémentation par défaut retourne toujours <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="8cd15-140">The default implementation always returns <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cd15-141">Par défaut, un type ne retourne aucune propriété.</span><span class="sxs-lookup"><span data-stu-id="8cd15-141">By default, a type does not return any properties.</span></span> <span data-ttu-id="8cd15-142">Une implémentation simple de cette méthode appelle la <xref:System.ComponentModel.TypeConverter.GetProperties%2A> méthode pour le type de données correct.</span><span class="sxs-lookup"><span data-stu-id="8cd15-142">An easy implementation of this method calls the <xref:System.ComponentModel.TypeConverter.GetProperties%2A> method for the correct data type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertiesSupported">
      <MemberSignature Language="C#" Value="public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool GetPropertiesSupported(class System.ComponentModel.ITypeDescriptorContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ImageConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPropertiesSupported (context As ITypeDescriptorContext) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool GetPropertiesSupported(System::ComponentModel::ITypeDescriptorContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="8cd15-143">Descripteur de type par l'intermédiaire duquel un contexte supplémentaire peut être fourni.</span><span class="sxs-lookup"><span data-stu-id="8cd15-143">A type descriptor through which additional context can be provided.</span></span></param>
        <summary><span data-ttu-id="8cd15-144">Indique si cet objet prend en charge les propriétés.</span><span class="sxs-lookup"><span data-stu-id="8cd15-144">Indicates whether this object supports properties.</span></span> <span data-ttu-id="8cd15-145">Par défaut, cette valeur est <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="8cd15-145">By default, this is <see langword="false" />.</span></span></summary>
        <returns><span data-ttu-id="8cd15-146">Cette méthode retourne <see langword="true" /> si la méthode <see cref="Overload:System.Drawing.ImageConverter.GetProperties" /> doit être appelée pour trouver les propriétés de cet objet.</span><span class="sxs-lookup"><span data-stu-id="8cd15-146">This method returns <see langword="true" /> if the <see cref="Overload:System.Drawing.ImageConverter.GetProperties" /> method should be called to find the properties of this object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>