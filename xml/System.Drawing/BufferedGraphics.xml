<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="BufferedGraphics.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58eb376f4bda7764bd0c534a86c20b084960c4a7d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8eb376f4bda7764bd0c534a86c20b084960c4a7d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.BufferedGraphics">
          <source>Provides a graphics buffer for double buffering.</source>
          <target state="translated">Fournit une mémoire tampon de graphiques pour la double mise en mémoire tampon.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class allows you to implement custom double buffering for your graphics.</source>
          <target state="translated">La <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> classe vous permet d’implémenter le mécanisme de double tampon personnalisé pour vos graphiques.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>It provides a wrapper for a graphics buffer, along with methods that you can use to write to the buffer and render its contents to an output device.</source>
          <target state="translated">Il fournit un wrapper pour une mémoire tampon de graphiques, ainsi que les méthodes que vous pouvez utiliser pour écrire dans la mémoire tampon et restituer son contenu sur un périphérique de sortie.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.</source>
          <target state="translated">Les graphiques qui utilisent le mécanisme de double tampon réduire ou éliminer le scintillement provoqué par le rafraîchissement du dessin une surface d’affichage.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>When you use double buffering, updated graphics are first drawn to a buffer in memory, and the contents of this buffer are then quickly written to some or all of the displayed surface.</source>
          <target state="translated">Lorsque vous utilisez le mécanisme de double tampon, des graphiques mis à jour sont dessinés en premier dans une mémoire tampon en mémoire, et le contenu de cette mémoire tampon est ensuite rapidement écrit à tout ou partie de la surface affichée.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>This relatively brief overwrite of the displayed graphics typically reduces or eliminates the flicker that sometimes occurs when graphics are updated.</source>
          <target state="translated">En règle générale, cette substitution relativement brève des graphiques affichés réduit ou élimine le scintillement qui se produit parfois lorsque le graphique est mis à jour.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The simplest way to use double buffering is to set the <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> control style flag on a control using the <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> method.</source>
          <target state="translated">La façon la plus simple d’utiliser le mécanisme de double tampon consiste à définir le <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> contrôler l’indicateur de style sur un contrôle à l’aide de la <ph id="ph2">&lt;xref:System.Windows.Forms.Control.SetStyle%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Setting the <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.</source>
          <target state="translated">Définition de la <ph id="ph1">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> indicateur pour un contrôle redirige toute la peinture du contrôle via une mémoire tampon de graphiques par défaut, sans requérir de code supplémentaire.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>This flag is set to <ph id="ph1">`true`</ph> by default.</source>
          <target state="translated">Cet indicateur est défini <ph id="ph1">`true`</ph> par défaut.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class has no public constructor and must be created by the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> for an application domain using its <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> classe n’a aucun constructeur public et doit être créée par le <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> pour un domaine d’application en utilisant son <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> (méthode).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>You can retrieve the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> for the current application domain from the static <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Vous pouvez récupérer le <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> pour le domaine d’application actuel à partir de la méthode statique <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Graphics%2A&gt;</ph> property can be used for drawing to the graphics buffer.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Graphics%2A&gt;</ph> propriété peut être utilisée pour le dessin de la mémoire tampon de graphiques.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>This property provides access to the <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object that draws to the graphics buffer allocated for this <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object.</source>
          <target state="translated">Cette propriété fournit l’accès à la <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> objet qui dessine dans la mémoire tampon de graphiques allouée à cet <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Render%2A&gt;</ph> method with no arguments draws the contents of the graphics buffer to the surface specified when the buffer was allocated.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Render%2A&gt;</ph> méthode sans argument dessine le contenu des graphiques de la mémoire tampon vers la surface spécifiée lorsque la mémoire tampon a été allouée.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Other overloads of the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Render%2A&gt;</ph> method allow you to specify a <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> object or an <ph id="ph3">&lt;xref:System.IntPtr&gt;</ph> object that points to a device context to which to draw the contents of the graphics buffer.</source>
          <target state="translated">D’autres surcharges de la <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Render%2A&gt;</ph> méthode vous permet de spécifier un <ph id="ph2">&lt;xref:System.Drawing.Graphics&gt;</ph> objet ou un <ph id="ph3">&lt;xref:System.IntPtr&gt;</ph> objet qui pointe vers un contexte de périphérique dans lequel dessiner le contenu de la mémoire tampon de graphiques.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>For more information about drawing double-buffered graphics, see <bpt id="p1">[</bpt>Double Buffered Graphics<ept id="p1">](~/docs/framework/winforms/advanced/double-buffered-graphics.md)</ept>.</source>
          <target state="translated">Pour plus d’informations sur le dessin de double tampon de graphiques, consultez <bpt id="p1">[</bpt>des graphiques mis en mémoire tampon Double<ept id="p1">](~/docs/framework/winforms/advanced/double-buffered-graphics.md)</ept>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The following code example demonstrates using a <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object to draw graphics using several types of buffering implementations.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser un <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> objet pour dessiner des graphiques à l’aide de plusieurs types de mise en mémoire tampon des implémentations.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Clicking the form alternately starts and stops a timer that causes draw updates.</source>
          <target state="translated">En cliquant sur le formulaire ou bien démarre et arrête une minuterie qui provoque des dessins mises à jour.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The draw updates allow you to observe the effect of double buffering.</source>
          <target state="translated">Autoriser les mises à jour de dessin permet d’observer l’effet de double tampon.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Right-clicking the form cycles through the following drawing modes:</source>
          <target state="translated">Clic droit sur les cycles de formulaire par le biais des modes de dessin suivants :</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Drawing directly to the <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> for a <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</source>
          <target state="translated">Dessiner directement à la <ph id="ph1">&lt;xref:System.Windows.Forms.Control.Handle%2A&gt;</ph> pour un <ph id="ph2">&lt;xref:System.Windows.Forms.Form&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Drawing by overriding the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> method using the <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> control style.</source>
          <target state="translated">Dessiner en substituant la <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> à l’aide de la méthode la <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> style de contrôle.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>Drawing by overriding the <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> method for the form method without using the <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> control style.</source>
          <target state="translated">Dessiner en substituant la <ph id="ph1">&lt;xref:System.Windows.Forms.Form.OnPaint%2A&gt;</ph> méthode pour la méthode de formulaire sans utiliser le <ph id="ph2">&lt;xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer&gt;</ph> style de contrôle.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>In each mode, text is drawn that identifies the current mode and describes the behavior that occurs when each mouse button is pressed.</source>
          <target state="translated">Dans chaque mode, le texte dessiné identifie le mode actif et décrit le comportement qui se produit lorsque chaque bouton de la souris est enfoncé.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph> class is not thread safe.</source>
          <target state="translated">La classe <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph> n'est pas thread-safe.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.BufferedGraphics">
          <source>When accessing a graphics buffer from separate threads, it is important to use a thread-access control mechanism to prevent conflicts.</source>
          <target state="translated">Lors de l’accès à une mémoire tampon de graphiques à partir de threads distincts, il est important d’utiliser un mécanisme de contrôle d’accès de thread pour éviter les conflits.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>Releases all resources used by the <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph> object.</source>
          <target state="translated">Libère toutes les ressources utilisées par l'objet <ph id="ph1">&lt;see cref="T:System.Drawing.BufferedGraphics" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object.</source>
          <target state="translated">Appelez <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph> lorsque vous avez terminé à l’aide de la <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object in an unusable state.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph> méthode laisse le <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> objet dans un état inutilisable.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object was occupying.</source>
          <target state="translated">Après avoir appelé <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph>, vous devez libérer toutes les références à la <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> pour que le garbage collector puisse récupérer la mémoire de l’objet qui le <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> occupée.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>de nettoyage des ressources non managées<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> et <bpt id="p2">[</bpt>implémentant une méthode de suppression<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object.</source>
          <target state="translated">Appelez toujours <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics.Dispose%2A&gt;</ph> avant de libérer votre dernière référence à le <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> de l'objet <ph id="ph2">`Finalize`</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Finalize">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">Autorise un objet à tenter de libérer des ressources et à exécuter d'autres opérations de nettoyage avant qu'il ne soit récupéré par une opération garbage collection.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="P:System.Drawing.BufferedGraphics.Graphics">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> object that outputs to the graphics buffer.</source>
          <target state="translated">Obtient un objet <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> qui est dirigé vers la mémoire tampon de graphiques.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphics.Graphics">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> object that outputs to the graphics buffer.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> qui est dirigé vers la mémoire tampon de graphiques.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.BufferedGraphics.Graphics">
          <source>This property provides a <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object that draws to the graphics buffer allocated for this <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object.</source>
          <target state="translated">Cette propriété fournit un <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> objet qui dessine dans la mémoire tampon de graphiques allouée à cet <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="T:System.Drawing.BufferedGraphics">
          <source>Writes the contents of the graphics buffer.</source>
          <target state="translated">Écrit le contenu de la mémoire tampon de graphiques.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Render">
          <source>Writes the contents of the graphics buffer to the default device.</source>
          <target state="translated">Écrit le contenu de la mémoire tampon de graphiques dans l'appareil par défaut.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render">
          <source>This method writes the contents of the graphics buffer to the device specified by calling the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> used to create this <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> object.</source>
          <target state="translated">Cette méthode écrit le contenu de la mémoire tampon de graphiques dans le périphérique spécifié en appelant le <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphicsContext.Allocate%2A&gt;</ph> méthode de la <ph id="ph2">&lt;xref:System.Drawing.BufferedGraphicsContext&gt;</ph> utilisé pour créer ce <ph id="ph3">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> object to which to write the contents of the graphics buffer.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> dans lequel écrire le contenu de la mémoire tampon de graphiques.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)">
          <source>Writes the contents of the graphics buffer to the specified <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> object.</source>
          <target state="translated">Écrit le contenu de la mémoire tampon de graphiques dans l'objet <ph id="ph1">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)">
          <source>This method writes the contents of the graphics buffer to the specified <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object.</source>
          <target state="translated">Cette méthode écrit le contenu de la mémoire tampon de graphiques spécifié <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)">
          <source>The following code example demonstrates rendering the contents of the graphics buffer to a specified <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object.</source>
          <target state="translated">L’exemple de code suivant illustre le rendu du contenu de la mémoire tampon de graphiques spécifié <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> objet.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)">
          <source>This code is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class.</source>
          <target state="translated">Ce code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> that points to the device context to which to write the contents of the graphics buffer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> qui pointe vers le contexte de périphérique dans lequel écrire le contenu de la mémoire tampon de graphiques.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>Writes the contents of the graphics buffer to the device context associated with the specified <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> handle.</source>
          <target state="translated">Écrit le contenu de la mémoire tampon de graphiques dans le contexte de périphérique associé au handle <ph id="ph1">&lt;see cref="T:System.IntPtr" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>This method writes the contents of the graphics buffer to the device context associated with the specified <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> handle.</source>
          <target state="translated">Cette méthode écrit le contenu de la mémoire tampon de graphiques dans le contexte de périphérique associé au <ph id="ph1">&lt;xref:System.IntPtr&gt;</ph> gérer.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>The following code example demonstrates how to render the contents of the graphics buffer <ph id="ph1">`grafx`</ph> to a specified device context.</source>
          <target state="translated">L’exemple de code suivant montre comment restituer le contenu de la mémoire tampon de graphiques <ph id="ph1">`grafx`</ph> vers un contexte de périphérique spécifié.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>This code is part of a larger example provided for the <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> class.</source>
          <target state="translated">Ce code fait partie d’un exemple plus complet fourni pour la <ph id="ph1">&lt;xref:System.Drawing.BufferedGraphics&gt;</ph> classe.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>for access to unmanaged code.</source>
          <target state="translated">Pour accéder au code non managé.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)">
          <source>Related enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</source>
          <target state="translated">Énumération connexe : <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>