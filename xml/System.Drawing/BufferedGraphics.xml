<Type Name="BufferedGraphics" FullName="System.Drawing.BufferedGraphics">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d81edbe985ef55b5b69b4aa7ea69e5b2ea525423" />
    <Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="12/05/2018" />
    <Meta Name="ms.locfileid" Value="52908488" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class BufferedGraphics : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BufferedGraphics extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.BufferedGraphics" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BufferedGraphics&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BufferedGraphics sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type BufferedGraphics = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="166ec-101">Fournit une mémoire tampon de graphiques pour la double mise en mémoire tampon.</span>
      <span class="sxs-lookup">
        <span data-stu-id="166ec-101">Provides a graphics buffer for double buffering.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="166ec-102">Le <xref:System.Drawing.BufferedGraphics> classe vous permet d’implémenter le mécanisme de double tampon personnalisé pour vos graphiques.</span><span class="sxs-lookup"><span data-stu-id="166ec-102">The <xref:System.Drawing.BufferedGraphics> class allows you to implement custom double buffering for your graphics.</span></span> <span data-ttu-id="166ec-103">Il fournit un wrapper pour une mémoire tampon de graphiques, ainsi que les méthodes que vous pouvez utiliser pour écrire dans la mémoire tampon et afficher son contenu sur un périphérique de sortie.</span><span class="sxs-lookup"><span data-stu-id="166ec-103">It provides a wrapper for a graphics buffer, along with methods that you can use to write to the buffer and render its contents to an output device.</span></span>  
  
 <span data-ttu-id="166ec-104">Les graphiques qui utilisent le mécanisme de double tampon peuvent réduire ou éliminer le scintillement provoqué par le rafraîchissement du dessin une surface d’affichage.</span><span class="sxs-lookup"><span data-stu-id="166ec-104">Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.</span></span> <span data-ttu-id="166ec-105">Lorsque vous utilisez la double mise en tampon, graphiques mis à jour sont tout d’abord dessinés dans une mémoire tampon en mémoire, et le contenu de cette mémoire tampon est ensuite rapidement écrit dans tout ou partie de la surface affichée.</span><span class="sxs-lookup"><span data-stu-id="166ec-105">When you use double buffering, updated graphics are first drawn to a buffer in memory, and the contents of this buffer are then quickly written to some or all of the displayed surface.</span></span> <span data-ttu-id="166ec-106">En général, cette substitution relativement brève des graphiques affichés réduit ou élimine le scintillement qui se produit parfois lorsque le graphique est mis à jour.</span><span class="sxs-lookup"><span data-stu-id="166ec-106">This relatively brief overwrite of the displayed graphics typically reduces or eliminates the flicker that sometimes occurs when graphics are updated.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="166ec-107">La façon la plus simple d’utiliser la double mise en tampon consiste à définir le <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> contrôler l’indicateur de style sur un contrôle en utilisant le <xref:System.Windows.Forms.Control.SetStyle%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="166ec-107">The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method.</span></span> <span data-ttu-id="166ec-108">Définition de la <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> indicateur pour un contrôle redirige toute la peinture du contrôle via une mémoire tampon de graphiques par défaut, sans requérir de code supplémentaire.</span><span class="sxs-lookup"><span data-stu-id="166ec-108">Setting the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.</span></span> <span data-ttu-id="166ec-109">Cet indicateur est défini `true` par défaut.</span><span class="sxs-lookup"><span data-stu-id="166ec-109">This flag is set to `true` by default.</span></span>  
  
 <span data-ttu-id="166ec-110">Le <xref:System.Drawing.BufferedGraphics> classe n’a aucun constructeur public et doit être créé par le <xref:System.Drawing.BufferedGraphicsContext> pour un domaine d’application en utilisant son <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="166ec-110">The <xref:System.Drawing.BufferedGraphics> class has no public constructor and must be created by the <xref:System.Drawing.BufferedGraphicsContext> for an application domain using its <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method.</span></span> <span data-ttu-id="166ec-111">Vous pouvez récupérer le <xref:System.Drawing.BufferedGraphicsContext> pour le domaine d’application actuel à partir de la méthode statique <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="166ec-111">You can retrieve the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="166ec-112">Le <xref:System.Drawing.BufferedGraphics.Graphics%2A> propriété peut être utilisée pour le dessin de la mémoire tampon de graphiques.</span><span class="sxs-lookup"><span data-stu-id="166ec-112">The <xref:System.Drawing.BufferedGraphics.Graphics%2A> property can be used for drawing to the graphics buffer.</span></span> <span data-ttu-id="166ec-113">Cette propriété fournit l’accès à la <xref:System.Drawing.Graphics> objet qui dessine dans la mémoire tampon de graphiques allouée à cet <xref:System.Drawing.BufferedGraphics> objet.</span><span class="sxs-lookup"><span data-stu-id="166ec-113">This property provides access to the <xref:System.Drawing.Graphics> object that draws to the graphics buffer allocated for this <xref:System.Drawing.BufferedGraphics> object.</span></span>  
  
 <span data-ttu-id="166ec-114">Le <xref:System.Drawing.BufferedGraphics.Render%2A> méthode sans argument dessine le contenu de la carte graphique de mémoire tampon vers la surface spécifiée lorsque la mémoire tampon a été allouée.</span><span class="sxs-lookup"><span data-stu-id="166ec-114">The <xref:System.Drawing.BufferedGraphics.Render%2A> method with no arguments draws the contents of the graphics buffer to the surface specified when the buffer was allocated.</span></span> <span data-ttu-id="166ec-115">Autres surcharges de la <xref:System.Drawing.BufferedGraphics.Render%2A> méthode permettent de spécifier un <xref:System.Drawing.Graphics> objet ou un <xref:System.IntPtr> objet qui pointe vers un contexte de périphérique dans lequel dessiner le contenu de la mémoire tampon de graphiques.</span><span class="sxs-lookup"><span data-stu-id="166ec-115">Other overloads of the <xref:System.Drawing.BufferedGraphics.Render%2A> method allow you to specify a <xref:System.Drawing.Graphics> object or an <xref:System.IntPtr> object that points to a device context to which to draw the contents of the graphics buffer.</span></span>  
  
 <span data-ttu-id="166ec-116">Pour plus d’informations sur le dessin de double tampon de graphiques, consultez [Double graphiques mis en mémoire tampon](~/docs/framework/winforms/advanced/double-buffered-graphics.md).</span><span class="sxs-lookup"><span data-stu-id="166ec-116">For more information about drawing double-buffered graphics, see [Double Buffered Graphics](~/docs/framework/winforms/advanced/double-buffered-graphics.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="166ec-117">L’exemple de code suivant montre comment utiliser un <xref:System.Drawing.BufferedGraphics> objet pour dessiner des graphiques à l’aide de plusieurs types d’implémentations de mise en mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="166ec-117">The following code example demonstrates using a <xref:System.Drawing.BufferedGraphics> object to draw graphics using several types of buffering implementations.</span></span> <span data-ttu-id="166ec-118">En cliquant sur le formulaire ou démarre et arrête une minuterie qui provoque des dessins mises à jour.</span><span class="sxs-lookup"><span data-stu-id="166ec-118">Clicking the form alternately starts and stops a timer that causes draw updates.</span></span> <span data-ttu-id="166ec-119">Les mises à jour de dessin permettent d’observer l’effet de double tampon.</span><span class="sxs-lookup"><span data-stu-id="166ec-119">The draw updates allow you to observe the effect of double buffering.</span></span> <span data-ttu-id="166ec-120">Clic droit sur les cycles de formulaire via les modes de dessins suivants :</span><span class="sxs-lookup"><span data-stu-id="166ec-120">Right-clicking the form cycles through the following drawing modes:</span></span>  
  
-   <span data-ttu-id="166ec-121">Dessiner directement à la <xref:System.Windows.Forms.Control.Handle%2A> pour un <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="166ec-121">Drawing directly to the <xref:System.Windows.Forms.Control.Handle%2A> for a <xref:System.Windows.Forms.Form>.</span></span>  
  
-   <span data-ttu-id="166ec-122">Dessiner en substituant la <xref:System.Windows.Forms.Form.OnPaint%2A> à l’aide de la méthode le <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> contrôler le style.</span><span class="sxs-lookup"><span data-stu-id="166ec-122">Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method using the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style.</span></span>  
  
-   <span data-ttu-id="166ec-123">Dessiner en substituant la <xref:System.Windows.Forms.Form.OnPaint%2A> méthode pour la méthode de formulaire sans utiliser le <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> contrôler le style.</span><span class="sxs-lookup"><span data-stu-id="166ec-123">Drawing by overriding the <xref:System.Windows.Forms.Form.OnPaint%2A> method for the form method without using the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style.</span></span>  
  
 <span data-ttu-id="166ec-124">Dans chaque mode, le texte dessiné identifie le mode actif et décrit le comportement qui se produit lorsque chaque bouton de la souris est enfoncé.</span><span class="sxs-lookup"><span data-stu-id="166ec-124">In each mode, text is drawn that identifies the current mode and describes the behavior that occurs when each mouse button is pressed.</span></span>  
  
 [!code-cpp[BufferedGraphicsExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferedGraphicsExample/CPP/bufferingtest.cpp#1)]
 [!code-csharp[BufferedGraphicsExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferedGraphicsExample/CS/bufferingtest.cs#1)]
 [!code-vb[BufferedGraphicsExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferedGraphicsExample/VB/bufferingtest.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="166ec-125">La classe <see cref="T:System.Drawing.BufferedGraphics" /> n'est pas thread-safe.</span>
      <span class="sxs-lookup">
        <span data-stu-id="166ec-125">The <see cref="T:System.Drawing.BufferedGraphics" /> class is not thread safe.</span>
      </span>
      <span data-ttu-id="166ec-126">Lors de l’accès à une mémoire tampon de graphiques à partir de threads séparés, il est important d’utiliser un mécanisme de contrôle d’accès de thread pour éviter les conflits.</span>
      <span class="sxs-lookup">
        <span data-stu-id="166ec-126">When accessing a graphics buffer from separate threads, it is important to use a thread-access control mechanism to prevent conflicts.</span>
      </span>
    </threadsafe>
    <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">
      <span data-ttu-id="166ec-127">Graphiques mis deux fois en mémoire tampon</span>
      <span class="sxs-lookup">
        <span data-stu-id="166ec-127">Double Buffered Graphics</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="bufferedGraphics.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="166ec-128">Libère toutes les ressources utilisées par l'objet <see cref="T:System.Drawing.BufferedGraphics" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ec-128">Releases all resources used by the <see cref="T:System.Drawing.BufferedGraphics" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="166ec-129">Appelez <xref:System.Drawing.BufferedGraphics.Dispose%2A> lorsque vous avez terminé à l’aide de la <xref:System.Drawing.BufferedGraphics> objet.</span><span class="sxs-lookup"><span data-stu-id="166ec-129">Call <xref:System.Drawing.BufferedGraphics.Dispose%2A> when you are finished using the <xref:System.Drawing.BufferedGraphics> object.</span></span> <span data-ttu-id="166ec-130">Le <xref:System.Drawing.BufferedGraphics.Dispose%2A> méthode laisse le <xref:System.Drawing.BufferedGraphics> objet dans un état inutilisable.</span><span class="sxs-lookup"><span data-stu-id="166ec-130">The <xref:System.Drawing.BufferedGraphics.Dispose%2A> method leaves the <xref:System.Drawing.BufferedGraphics> object in an unusable state.</span></span> <span data-ttu-id="166ec-131">Après avoir appelé <xref:System.Drawing.BufferedGraphics.Dispose%2A>, vous devez libérer toutes les références à la <xref:System.Drawing.BufferedGraphics> pour que le garbage collector puisse récupérer la mémoire de l’objet qui le <xref:System.Drawing.BufferedGraphics> occupée.</span><span class="sxs-lookup"><span data-stu-id="166ec-131">After calling <xref:System.Drawing.BufferedGraphics.Dispose%2A>, you must release all references to the <xref:System.Drawing.BufferedGraphics> object so the garbage collector can reclaim the memory that the <xref:System.Drawing.BufferedGraphics> object was occupying.</span></span> <span data-ttu-id="166ec-132">Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentation d’une méthode Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="166ec-132">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="166ec-133">Appelez toujours <xref:System.Drawing.BufferedGraphics.Dispose%2A> avant de libérer votre dernière référence à la <xref:System.Drawing.BufferedGraphics> objet.</span><span class="sxs-lookup"><span data-stu-id="166ec-133">Always call <xref:System.Drawing.BufferedGraphics.Dispose%2A> before you release your last reference to the <xref:System.Drawing.BufferedGraphics> object.</span></span> <span data-ttu-id="166ec-134">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <xref:System.Drawing.BufferedGraphics> de l'objet `Finalize`.</span><span class="sxs-lookup"><span data-stu-id="166ec-134">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Drawing.BufferedGraphics> object's `Finalize` method.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">
          <span data-ttu-id="166ec-135">Graphiques mis deux fois en mémoire tampon</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ec-135">Double Buffered Graphics</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~BufferedGraphics ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!BufferedGraphics ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="bufferedGraphics.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="166ec-136">Autorise un objet à tenter de libérer des ressources et à exécuter d'autres opérations de nettoyage avant qu'il ne soit récupéré par une opération garbage collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ec-136">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Object.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="Graphics">
      <MemberSignature Language="C#" Value="public System.Drawing.Graphics Graphics { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Graphics Graphics" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.BufferedGraphics.Graphics" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Graphics As Graphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Graphics ^ Graphics { System::Drawing::Graphics ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Graphics : System.Drawing.Graphics" Usage="System.Drawing.BufferedGraphics.Graphics" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Graphics</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="166ec-137">Obtient un objet <see cref="T:System.Drawing.Graphics" /> qui est dirigé vers la mémoire tampon de graphiques.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ec-137">Gets a <see cref="T:System.Drawing.Graphics" /> object that outputs to the graphics buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="166ec-138">Objet <see cref="T:System.Drawing.Graphics" /> qui est dirigé vers la mémoire tampon de graphiques.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ec-138">A <see cref="T:System.Drawing.Graphics" /> object that outputs to the graphics buffer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="166ec-139">Cette propriété fournit un <xref:System.Drawing.Graphics> objet qui dessine dans la mémoire tampon de graphiques allouée à cet <xref:System.Drawing.BufferedGraphics> objet.</span><span class="sxs-lookup"><span data-stu-id="166ec-139">This property provides a <xref:System.Drawing.Graphics> object that draws to the graphics buffer allocated for this <xref:System.Drawing.BufferedGraphics> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">
          <span data-ttu-id="166ec-140">Graphiques mis deux fois en mémoire tampon</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ec-140">Double Buffered Graphics</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="Render">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="166ec-141">Écrit le contenu de la mémoire tampon de graphiques.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ec-141">Writes the contents of the graphics buffer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render();" />
      <MemberSignature Language="F#" Value="member this.Render : unit -&gt; unit" Usage="bufferedGraphics.Render " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="166ec-142">Écrit le contenu de la mémoire tampon de graphiques dans l'appareil par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ec-142">Writes the contents of the graphics buffer to the default device.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="166ec-143">Cette méthode écrit le contenu de la mémoire tampon de graphiques dans le périphérique spécifié en appelant le <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> méthode de la <xref:System.Drawing.BufferedGraphicsContext> utilisé pour créer ce <xref:System.Drawing.BufferedGraphics> objet.</span><span class="sxs-lookup"><span data-stu-id="166ec-143">This method writes the contents of the graphics buffer to the device specified by calling the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method of the <xref:System.Drawing.BufferedGraphicsContext> used to create this <xref:System.Drawing.BufferedGraphics> object.</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">
          <span data-ttu-id="166ec-144">Graphiques mis deux fois en mémoire tampon</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ec-144">Double Buffered Graphics</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (System.Drawing.Graphics target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(class System.Drawing.Graphics target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (target As Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(System::Drawing::Graphics ^ target);" />
      <MemberSignature Language="F#" Value="member this.Render : System.Drawing.Graphics -&gt; unit" Usage="bufferedGraphics.Render target" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="166ec-145">Objet <see cref="T:System.Drawing.Graphics" /> dans lequel écrire le contenu de la mémoire tampon de graphiques.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ec-145">A <see cref="T:System.Drawing.Graphics" /> object to which to write the contents of the graphics buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="166ec-146">Écrit le contenu de la mémoire tampon de graphiques dans l'objet <see cref="T:System.Drawing.Graphics" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ec-146">Writes the contents of the graphics buffer to the specified <see cref="T:System.Drawing.Graphics" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="166ec-147">Cette méthode écrit le contenu de la mémoire tampon de graphiques spécifié <xref:System.Drawing.Graphics> objet.</span><span class="sxs-lookup"><span data-stu-id="166ec-147">This method writes the contents of the graphics buffer to the specified <xref:System.Drawing.Graphics> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="166ec-148">L’exemple de code suivant montre le rendu du contenu de la mémoire tampon de graphiques à une certaine <xref:System.Drawing.Graphics> objet.</span><span class="sxs-lookup"><span data-stu-id="166ec-148">The following code example demonstrates rendering the contents of the graphics buffer to a specified <xref:System.Drawing.Graphics> object.</span></span> <span data-ttu-id="166ec-149">Ce code fait partie d’un exemple plus complet fourni pour la <xref:System.Drawing.BufferedGraphics> classe.</span><span class="sxs-lookup"><span data-stu-id="166ec-149">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#5)]
 [!code-csharp[BufferingExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#5)]
 [!code-vb[BufferingExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Graphics" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">
          <span data-ttu-id="166ec-150">Graphiques mis deux fois en mémoire tampon</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ec-150">Double Buffered Graphics</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="public void Render (IntPtr targetDC);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Render(native int targetDC) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphics.Render(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Render (targetDC As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Render(IntPtr targetDC);" />
      <MemberSignature Language="F#" Value="member this.Render : nativeint -&gt; unit" Usage="bufferedGraphics.Render targetDC" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDC" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="targetDC">
          <span data-ttu-id="166ec-151">
            <see cref="T:System.IntPtr" /> qui pointe vers le contexte de périphérique dans lequel écrire le contenu de la mémoire tampon de graphiques.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ec-151">An <see cref="T:System.IntPtr" /> that points to the device context to which to write the contents of the graphics buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="166ec-152">Écrit le contenu de la mémoire tampon de graphiques dans le contexte de périphérique associé au handle <see cref="T:System.IntPtr" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ec-152">Writes the contents of the graphics buffer to the device context associated with the specified <see cref="T:System.IntPtr" /> handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="166ec-153">Cette méthode écrit le contenu de la mémoire tampon de graphiques dans le contexte de périphérique associé au <xref:System.IntPtr> gérer.</span><span class="sxs-lookup"><span data-stu-id="166ec-153">This method writes the contents of the graphics buffer to the device context associated with the specified <xref:System.IntPtr> handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="166ec-154">L’exemple de code suivant montre comment rendre le contenu de la mémoire tampon de graphiques `grafx` à un contexte de périphérique spécifié.</span><span class="sxs-lookup"><span data-stu-id="166ec-154">The following code example demonstrates how to render the contents of the graphics buffer `grafx` to a specified device context.</span></span> <span data-ttu-id="166ec-155">Ce code fait partie d’un exemple plus complet fourni pour la <xref:System.Drawing.BufferedGraphics> classe.</span><span class="sxs-lookup"><span data-stu-id="166ec-155">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#6)]
 [!code-csharp[BufferingExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#6)]
 [!code-vb[BufferingExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#6)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="166ec-156">Pour accéder au code non managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ec-156">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="166ec-157">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ec-157">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" />.</span>
          </span>
        </permission>
        <altmember cref="T:System.IntPtr" />
        <related type="Article" href="~/docs/framework/winforms/advanced/double-buffered-graphics.md">
          <span data-ttu-id="166ec-158">Graphiques mis deux fois en mémoire tampon</span>
          <span class="sxs-lookup">
            <span data-stu-id="166ec-158">Double Buffered Graphics</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>