<Type Name="CharacterRange" FullName="System.Drawing.CharacterRange">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a50c44165712bdc4848fc0092a575f8b47a23d7a" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52227900" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct CharacterRange" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit CharacterRange extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.CharacterRange" />
  <TypeSignature Language="VB.NET" Value="Public Structure CharacterRange" />
  <TypeSignature Language="C++ CLI" Value="public value class CharacterRange" />
  <TypeSignature Language="F#" Value="type CharacterRange = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="df77b-101">Spécifie une plage de positions de caractères dans une chaîne.</span>
      <span class="sxs-lookup">
        <span data-stu-id="df77b-101">Specifies a range of character positions within a string.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="df77b-102">L’exemple de code suivant montre comment créer un <xref:System.Drawing.CharacterRange> et utilisez-le pour mettre en surbrillance la partie d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="df77b-102">The following code example demonstrates how to create a <xref:System.Drawing.CharacterRange> and use it to highlight part of a string.</span></span> <span data-ttu-id="df77b-103">Cet exemple est conçu pour être utilisé avec Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="df77b-103">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="df77b-104">Collez l’exemple dans un formulaire et appelez le `HighlightACharacterRange` méthode lors du traitement du formulaire <xref:System.Windows.Forms.Control.Paint> événement, en passant `e` comme <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="df77b-104">Paste the example into a form and call the `HighlightACharacterRange` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.CharacterRangeExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CharacterRange (int First, int Length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 First, int32 Length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (First As Integer, Length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CharacterRange(int First, int Length);" />
      <MemberSignature Language="F#" Value="new System.Drawing.CharacterRange : int * int -&gt; System.Drawing.CharacterRange" Usage="new System.Drawing.CharacterRange (First, Length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="First" Type="System.Int32" />
        <Parameter Name="Length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="First">
          <span data-ttu-id="df77b-105">Position du premier caractère dans la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df77b-105">The position of the first character in the range.</span>
          </span>
          <span data-ttu-id="df77b-106">Par exemple, si la valeur de <paramref name="First" /> est 0, la première position de la plage correspond à la position 0 dans la chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df77b-106">For example, if <paramref name="First" /> is set to 0, the first position of the range is position 0 in the string.</span>
          </span>
        </param>
        <param name="Length">
          <span data-ttu-id="df77b-107">Nombre de positions dans la plage.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df77b-107">The number of positions in the range.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="df77b-108">Initialise une nouvelle instance de la structure <see cref="T:System.Drawing.CharacterRange" /> en spécifiant une plage de positions de caractères dans une chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df77b-108">Initializes a new instance of the <see cref="T:System.Drawing.CharacterRange" /> structure, specifying a range of character positions within a string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="df77b-109">L’exemple de code suivant montre comment créer un <xref:System.Drawing.CharacterRange> et utilisez-le pour mettre en surbrillance la partie d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="df77b-109">The following code example demonstrates how to create a <xref:System.Drawing.CharacterRange> and use it to highlight part of a string.</span></span> <span data-ttu-id="df77b-110">Cet exemple est conçu pour être utilisé avec Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="df77b-110">This example is designed to be used with Windows Forms.</span></span> <span data-ttu-id="df77b-111">Collez l’exemple dans un formulaire et appelez le `HighlightACharacterRange` méthode lors du traitement du formulaire <xref:System.Windows.Forms.Control.Paint> événement, en passant `e` comme <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="df77b-111">Paste the example into a form and call the `HighlightACharacterRange` method when handling the form's <xref:System.Windows.Forms.Control.Paint> event, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-cpp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.CharacterRangeExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.CharacterRangeExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.CharacterRangeExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="characterRange.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="df77b-112">Objet auquel comparer en termes d'égalité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df77b-112">The object to compare to for equality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="df77b-113">Obtient une valeur indiquant si cet objet équivaut à l'objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df77b-113">Gets a value indicating whether this object is equivalent to the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="df77b-114">
            <see langword="true" /> pour indiquer que l'objet spécifié est une instance qui a les mêmes valeurs <see cref="P:System.Drawing.CharacterRange.First" /> et <see cref="P:System.Drawing.CharacterRange.Length" /> que cette instance ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df77b-114">
              <see langword="true" /> to indicate the specified object is an instance with the same <see cref="P:System.Drawing.CharacterRange.First" /> and <see cref="P:System.Drawing.CharacterRange.Length" /> value as this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df77b-115">Vous pouvez également utiliser <xref:System.Drawing.CharacterRange.op_Equality%2A> pour tester l’égalité.</span><span class="sxs-lookup"><span data-stu-id="df77b-115">You can also use <xref:System.Drawing.CharacterRange.op_Equality%2A> to test for equality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="df77b-116">L'exemple suivant décrit comment utiliser la méthode <xref:System.Drawing.CharacterRange.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="df77b-116">The following example demonstrates how to use the <xref:System.Drawing.CharacterRange.Equals%2A> method.</span></span> <span data-ttu-id="df77b-117">Pour exécuter cet exemple, collez-le dans un formulaire Windows.</span><span class="sxs-lookup"><span data-stu-id="df77b-117">To run this example, paste it into a Windows Form.</span></span> <span data-ttu-id="df77b-118">Gérer le formulaire <xref:System.Windows.Forms.Control.Paint> événements et les appels le `CharacterRangeEquality2` méthode à partir de la <xref:System.Windows.Forms.Control.Paint> méthode de gestion des événements, en passant `e` comme <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="df77b-118">Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `CharacterRangeEquality2` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#2)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="First">
      <MemberSignature Language="C#" Value="public int First { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 First" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.CharacterRange.First" />
      <MemberSignature Language="VB.NET" Value="Public Property First As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int First { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.First : int with get, set" Usage="System.Drawing.CharacterRange.First" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="df77b-119">Obtient ou définit la position du premier caractère de ce <see cref="T:System.Drawing.CharacterRange" /> dans la chaîne.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df77b-119">Gets or sets the position in the string of the first character of this <see cref="T:System.Drawing.CharacterRange" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="df77b-120">Première position de ce <see cref="T:System.Drawing.CharacterRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df77b-120">The first position of this <see cref="T:System.Drawing.CharacterRange" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="characterRange.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="df77b-121">Retourne le code de hachage de cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df77b-121">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="df77b-122">Entier signé 32 bits qui est le code de hachage pour cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df77b-122">A 32-bit signed integer that is the hash code for this instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.CharacterRange.Length" />
      <MemberSignature Language="VB.NET" Value="Public Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Length : int with get, set" Usage="System.Drawing.CharacterRange.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="df77b-123">Obtient ou définit le nombre de positions dans ce <see cref="T:System.Drawing.CharacterRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df77b-123">Gets or sets the number of positions in this <see cref="T:System.Drawing.CharacterRange" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="df77b-124">Nombre de positions dans ce <see cref="T:System.Drawing.CharacterRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df77b-124">The number of positions in this <see cref="T:System.Drawing.CharacterRange" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Drawing.CharacterRange cr1, System.Drawing.CharacterRange cr2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Drawing.CharacterRange cr1, valuetype System.Drawing.CharacterRange cr2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (cr1 As CharacterRange, cr2 As CharacterRange) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Drawing::CharacterRange cr1, System::Drawing::CharacterRange cr2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : System.Drawing.CharacterRange * System.Drawing.CharacterRange -&gt; bool" Usage="cr1 = cr2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cr1" Type="System.Drawing.CharacterRange" />
        <Parameter Name="cr2" Type="System.Drawing.CharacterRange" />
      </Parameters>
      <Docs>
        <param name="cr1">
          <span data-ttu-id="df77b-125">
            <see cref="T:System.Drawing.CharacterRange" /> à comparer en termes d'égalité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df77b-125">A <see cref="T:System.Drawing.CharacterRange" /> to compare for equality.</span>
          </span>
        </param>
        <param name="cr2">
          <span data-ttu-id="df77b-126">
            <see cref="T:System.Drawing.CharacterRange" /> à comparer en termes d'égalité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df77b-126">A <see cref="T:System.Drawing.CharacterRange" /> to compare for equality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="df77b-127">Compare deux objets <see cref="T:System.Drawing.CharacterRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df77b-127">Compares two <see cref="T:System.Drawing.CharacterRange" /> objects.</span>
          </span>
          <span data-ttu-id="df77b-128">Obtient une valeur indiquant si les valeurs <see cref="P:System.Drawing.CharacterRange.First" /> et <see cref="P:System.Drawing.CharacterRange.Length" /> des deux objets <see cref="T:System.Drawing.CharacterRange" /> sont égales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df77b-128">Gets a value indicating whether the <see cref="P:System.Drawing.CharacterRange.First" /> and <see cref="P:System.Drawing.CharacterRange.Length" /> values of the two <see cref="T:System.Drawing.CharacterRange" /> objects are equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="df77b-129">
            <see langword="true" /> pour indiquer que les deux objets <see cref="T:System.Drawing.CharacterRange" /> ont les mêmes valeurs <see cref="P:System.Drawing.CharacterRange.First" /> et <see cref="P:System.Drawing.CharacterRange.Length" /> ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df77b-129">
              <see langword="true" /> to indicate the two <see cref="T:System.Drawing.CharacterRange" /> objects have the same <see cref="P:System.Drawing.CharacterRange.First" /> and <see cref="P:System.Drawing.CharacterRange.Length" /> values; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df77b-130">Vous pouvez également tester l’égalité à l’aide du <xref:System.Drawing.CharacterRange.Equals%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="df77b-130">You can also test for equality using the <xref:System.Drawing.CharacterRange.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="df77b-131">La méthode équivalente pour cet opérateur est <xref:System.Drawing.CharacterRange.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="df77b-131">The equivalent method for this operator is <xref:System.Drawing.CharacterRange.Equals%28System.Object%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="df77b-132">L’exemple suivant montre comment utiliser le <xref:System.Drawing.CharacterRange.op_Equality%2A> opérateur.</span><span class="sxs-lookup"><span data-stu-id="df77b-132">The following example demonstrates how to use the <xref:System.Drawing.CharacterRange.op_Equality%2A> operator.</span></span> <span data-ttu-id="df77b-133">Pour exécuter cet exemple, collez-le dans un formulaire Windows.</span><span class="sxs-lookup"><span data-stu-id="df77b-133">To run this example, paste it into a Windows Form.</span></span> <span data-ttu-id="df77b-134">Gérer le formulaire <xref:System.Windows.Forms.Control.Paint> événements et les appels le `CharacterRangeEquality1` méthode à partir de la <xref:System.Windows.Forms.Control.Paint> méthode de gestion des événements, en passant `e` comme <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="df77b-134">Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `CharacterRangeEquality1` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#1)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Drawing.CharacterRange cr1, System.Drawing.CharacterRange cr2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Drawing.CharacterRange cr1, valuetype System.Drawing.CharacterRange cr2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.CharacterRange.op_Inequality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (cr1 As CharacterRange, cr2 As CharacterRange) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Drawing::CharacterRange cr1, System::Drawing::CharacterRange cr2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : System.Drawing.CharacterRange * System.Drawing.CharacterRange -&gt; bool" Usage="System.Drawing.CharacterRange.op_Inequality (cr1, cr2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cr1" Type="System.Drawing.CharacterRange" />
        <Parameter Name="cr2" Type="System.Drawing.CharacterRange" />
      </Parameters>
      <Docs>
        <param name="cr1">
          <span data-ttu-id="df77b-135">
            <see cref="T:System.Drawing.CharacterRange" /> à comparer en termes d'inégalité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df77b-135">A <see cref="T:System.Drawing.CharacterRange" /> to compare for inequality.</span>
          </span>
        </param>
        <param name="cr2">
          <span data-ttu-id="df77b-136">
            <see cref="T:System.Drawing.CharacterRange" /> à comparer en termes d'inégalité.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df77b-136">A <see cref="T:System.Drawing.CharacterRange" /> to compare for inequality.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="df77b-137">Compare deux objets <see cref="T:System.Drawing.CharacterRange" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df77b-137">Compares two <see cref="T:System.Drawing.CharacterRange" /> objects.</span>
          </span>
          <span data-ttu-id="df77b-138">Obtient une valeur indiquant que les valeurs <see cref="P:System.Drawing.CharacterRange.First" /> ou <see cref="P:System.Drawing.CharacterRange.Length" /> des deux objets <see cref="T:System.Drawing.CharacterRange" /> ne sont pas égales.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df77b-138">Gets a value indicating whether the <see cref="P:System.Drawing.CharacterRange.First" /> or <see cref="P:System.Drawing.CharacterRange.Length" /> values of the two <see cref="T:System.Drawing.CharacterRange" /> objects are not equal.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="df77b-139">
            <see langword="true" /> pour indiquer que la valeur <see cref="P:System.Drawing.CharacterRange.First" /> ou la valeur <see cref="P:System.Drawing.CharacterRange.Length" /> des deux objets <see cref="T:System.Drawing.CharacterRange" /> diffère ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="df77b-139">
              <see langword="true" /> to indicate the either the <see cref="P:System.Drawing.CharacterRange.First" /> or <see cref="P:System.Drawing.CharacterRange.Length" /> values of the two <see cref="T:System.Drawing.CharacterRange" /> objects differ; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="df77b-140">Le <xref:System.Drawing.CharacterRange.op_Inequality%2A> méthode retourne l’inverse de la <xref:System.Drawing.CharacterRange.op_Equality%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="df77b-140">The <xref:System.Drawing.CharacterRange.op_Inequality%2A> method returns the opposite of the <xref:System.Drawing.CharacterRange.op_Equality%2A> method.</span></span>  
  
 <span data-ttu-id="df77b-141">La méthode équivalente pour cet opérateur est <xref:System.Drawing.CharacterRange.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="df77b-141">The equivalent method for this operator is <xref:System.Drawing.CharacterRange.Equals%28System.Object%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="df77b-142">L'exemple suivant décrit comment utiliser la méthode <xref:System.Drawing.CharacterRange.op_Inequality%2A>.</span><span class="sxs-lookup"><span data-stu-id="df77b-142">The following example demonstrates how to use the <xref:System.Drawing.CharacterRange.op_Inequality%2A> method.</span></span> <span data-ttu-id="df77b-143">Pour exécuter cet exemple, collez-le dans un formulaire Windows.</span><span class="sxs-lookup"><span data-stu-id="df77b-143">To run this example, paste it into a Windows Form.</span></span> <span data-ttu-id="df77b-144">Gérer le formulaire <xref:System.Windows.Forms.Control.Paint> événements et les appels le `CharacterRangeInequality` méthode à partir de la <xref:System.Windows.Forms.Control.Paint> méthode de gestion des événements, en passant `e` comme <xref:System.Windows.Forms.PaintEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="df77b-144">Handle the form’s <xref:System.Windows.Forms.Control.Paint> event and call the `CharacterRangeInequality` method from the <xref:System.Windows.Forms.Control.Paint> event-handling method, passing `e` as <xref:System.Windows.Forms.PaintEventArgs>.</span></span>  
  
 [!code-csharp[System.Drawing.MiscWhidbeySnippets#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/CS/Form1.cs#3)]
 [!code-vb[System.Drawing.MiscWhidbeySnippets#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscWhidbeySnippets/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Drawing.CharacterRange.Equals(System.Object)" />
        <altmember cref="M:System.Drawing.CharacterRange.op_Equality(System.Drawing.CharacterRange,System.Drawing.CharacterRange)" />
      </Docs>
    </Member>
  </Members>
</Type>