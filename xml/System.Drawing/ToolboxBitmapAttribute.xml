<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ToolboxBitmapAttribute.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58e7e3baddc7823e3a9d97c1cce31418160f7e4a9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8e7e3baddc7823e3a9d97c1cce31418160f7e4a9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>Allows you to specify an icon to represent a control in a container, such as the Microsoft Visual Studio Form Designer.</source>
          <target state="translated">Vous permet de spécifier une icône représentant un contrôle dans un conteneur, tel que le Microsoft Visual Studio Form Designer.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>You can apply a <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> to a control so that containers, such as Microsoft Visual Studio Form Designer, can retrieve an icon that represents the control.</source>
          <target state="translated">Vous pouvez appliquer un <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> à un contrôle afin que les conteneurs, tels que Microsoft Visual Studio Form Designer, puissent récupérer une icône qui représente le contrôle.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>The bitmap for the icon can be in a file by itself or embedded in the assembly that contains the control.</source>
          <target state="translated">La bitmap de l’icône peut être un fichier en lui-même ou incorporé dans l’assembly qui contient le contrôle.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>The size of the bitmap that you embed in the control's assembly (or store in a separate file) should be 16 by 16.</source>
          <target state="translated">La taille de l’image bitmap que vous incorporez dans assembly (ou un magasin dans un fichier distinct) du contrôle doit être de 16 par 16.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A&gt;</ph> method of a <ph id="ph2">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> object can return the small 16 by 16 image or a large 32 by 32 image that it creates by scaling the small image.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A&gt;</ph> méthode d’un <ph id="ph2">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> objet peut retourner l’image petit 16 par 16 ou une image de grande taille de 32 x 32 qu’elle crée en mise à l’échelle de la petite image.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>If you want to use different versions of your icons with different versions of your assembly, you do not have to modify the <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> for each version.</source>
          <target state="translated">Si vous souhaitez utiliser les différentes versions de vos icônes avec différentes versions de votre assembly, vous n’êtes pas obligé de modifier le <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> pour chaque version.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>Instead, you can declare the assembly with a <ph id="ph1">&lt;xref:System.Drawing.BitmapSuffixInSameAssemblyAttribute&gt;</ph> or a <ph id="ph2">&lt;xref:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute&gt;</ph>, and specify a <ph id="ph3">&lt;xref:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix%2A&gt;</ph> configuration value for each assembly version.</source>
          <target state="translated">Au lieu de cela, vous pouvez déclarer l’assembly avec un <ph id="ph1">&lt;xref:System.Drawing.BitmapSuffixInSameAssemblyAttribute&gt;</ph> ou un <ph id="ph2">&lt;xref:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute&gt;</ph>et spécifiez un <ph id="ph3">&lt;xref:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix%2A&gt;</ph> valeur de configuration pour chaque version de l’assembly.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>In this case, a file name indicated by a <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> is interpreted with the bitmap suffix appended.</source>
          <target state="translated">Dans ce cas, un nom de fichier indiqué par un <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> est interprété par le suffixe de bitmap est ajouté.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> class to set <ph id="ph2">`stop.bmp`</ph> as the toolbox icon for the <ph id="ph3">`StopSignControl`</ph>.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> classe pour définir <ph id="ph2">`stop.bmp`</ph> comme icône de boîte à outils pour le <ph id="ph3">`StopSignControl`</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>This example assumes the existence of a 16-by-16-pixel bitmap named <ph id="ph1">`stop.bmp`</ph> at c:<ph id="ph2">\\</ph>.</source>
          <target state="translated">Cet exemple suppose l’existence d’une bitmap de 16 par 16 pixels nommée <ph id="ph1">`stop.bmp`</ph> dans c:<ph id="ph2">\\</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">Initialise un nouvel objet <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)">
          <source>The name of a file that contains a 16 by 16 bitmap.</source>
          <target state="translated">Nom d'un fichier contenant une bitmap 16 sur 16.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object with an image from a specified file.</source>
          <target state="translated">Initialise un nouvel objet <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> avec une image provenant d'un fichier spécifié.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A&gt;</ph> constructor to set <ph id="ph2">`stop.bmp`</ph> as the toolbox icon for the <ph id="ph3">`StopSignControl`</ph>.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A&gt;</ph> constructeur pour définir <ph id="ph2">`stop.bmp`</ph> comme icône de boîte à outils pour le <ph id="ph3">`StopSignControl`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)">
          <source>This example assumes the existence of a 16-by-16-pixel bitmap named <ph id="ph1">`stop.bmp`</ph> at c:<ph id="ph2">\\</ph>.</source>
          <target state="translated">Cet exemple suppose l’existence d’une bitmap de 16 par 16 pixels nommée <ph id="ph1">`stop.bmp`</ph> dans c:<ph id="ph2">\\</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> whose defining assembly is searched for the bitmap resource.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> dont l'assembly de définition fait l'objet d'une recherche pour la ressource bitmap.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object based on a 16 x 16 bitmap that is embedded as a resource in a specified assembly.</source>
          <target state="translated">Initialise un nouvel objet <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> basé sur une bitmap 16 x 16 qui est incorporée en tant que ressource dans un assembly spécifié.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
          <source>This constructor searches for an embedded resource in the assembly that defines the type specified by the <ph id="ph1">`t`</ph> parameter.</source>
          <target state="translated">Ce constructeur recherche une ressource incorporée dans l’assembly qui définit le type spécifié par le <ph id="ph1">`t`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
          <source>The constructor searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the class specified by the <ph id="ph1">`t`</ph> parameter.</source>
          <target state="translated">Le constructeur recherche une ressource nommée namespace.classname.bmp, où namespace est l’espace de noms contenant la définition de la classe spécifiée par le <ph id="ph1">`t`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
          <source>For example, if ControlA is in NamespaceA in AssemblyA.dll, then the constructor searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.</source>
          <target state="translated">Par exemple, si ControlA se trouve dans NamespaceA dans AssemblyA.dll, le constructeur recherche AssemblyA.dll une ressource nommée NamespaceA.ControlA.bmp.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)">
          <source>The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A&gt;</ph> constructor to set the icon of the button control to the toolbox icon for a <ph id="ph2">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> named <ph id="ph3">`StopSignControl3`</ph>.</source>
          <target state="translated">L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A&gt;</ph> constructeur pour définir l’icône du contrôle de bouton sur l’icône de boîte à outils pour un <ph id="ph2">&lt;xref:System.Windows.Forms.UserControl&gt;</ph> nommé <ph id="ph3">`StopSignControl3`</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> whose defining assembly is searched for the bitmap resource.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> dont l'assembly de définition fait l'objet d'une recherche pour la ressource bitmap.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>The name of the embedded bitmap resource.</source>
          <target state="translated">Nom de la ressource bitmap incorporée.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>Initializes a new <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object based on a 16 by 16 bitmap that is embedded as a resource in a specified assembly.</source>
          <target state="translated">Initialise un nouvel objet <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> basé sur une bitmap 16 x 16 qui est incorporée en tant que ressource dans un assembly spécifié.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>This constructor searches for an embedded resource in the assembly that defines the type specified by the <ph id="ph1">`t`</ph> parameter.</source>
          <target state="translated">Ce constructeur recherche une ressource incorporée dans l’assembly qui définit le type spécifié par le <ph id="ph1">`t`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>The constructor searches for a resource named namespace.name, where namespace is the namespace containing the definition of the class specified by the <ph id="ph1">`t`</ph> parameter.</source>
          <target state="translated">Le constructeur recherche une ressource nommée namespace.name, où namespace est l’espace de noms contenant la définition de la classe spécifiée par le <ph id="ph1">`t`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>For example, suppose that ControlA is a class in NamespaceA in AssemblyA.dll and that you passed "MyBitmap.bmp" to the <ph id="ph1">`name`</ph> parameter.</source>
          <target state="translated">Par exemple, supposez que ControlA est une classe dans NamespaceA dans AssemblyA.dll et que vous avez passé « MyBitmap.bmp » pour le <ph id="ph1">`name`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>Then the constructor searches AssemblyA.dll for a resource named NamespaceA.MyBitmap.bmp.</source>
          <target state="translated">Le constructeur recherche AssemblyA.dll une ressource nommée NamespaceA.MyBitmap.bmp.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>'The following code example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A&gt;</ph> constructor to set <ph id="ph2">`StopSignControl2.bmp`</ph> as a toolbox icon for the <ph id="ph3">`StopSignControl2`</ph>.</source>
          <target state="translated">« L’exemple de code suivant montre comment utiliser le <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A&gt;</ph> constructeur pour définir <ph id="ph2">`StopSignControl2.bmp`</ph> comme une icône de boîte à outils pour le <ph id="ph3">`StopSignControl2`</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)">
          <source>This example assumes the existence of a 16-by-16-pixel bitmap named <ph id="ph1">`StopSignControl2.bmp`</ph> with its <bpt id="p1">**</bpt>BuildAction<ept id="p1">**</ept> property set to <bpt id="p2">**</bpt>EmbeddedResource<ept id="p2">**</ept>.</source>
          <target state="translated">Cet exemple suppose l’existence d’une bitmap de 16 par 16 pixels nommée <ph id="ph1">`StopSignControl2.bmp`</ph> avec son <bpt id="p1">**</bpt>Buiidaction<ept id="p1">**</ept> propriété <bpt id="p2">**</bpt>EmbeddedResource<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="F:System.Drawing.ToolboxBitmapAttribute.Default">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object that has its small image and its large image set to <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> dont la petite et la grande image ont la valeur <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to test.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> à tester.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)">
          <source>Indicates whether the specified object is a <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object and is identical to this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">Indique si l'objet spécifié est un objet <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> et s'il est identique à cet objet <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)">
          <source>This method returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is both a <ph id="ph3">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object and is identical to this <ph id="ph4">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">Cette méthode retourne <ph id="ph1">&lt;see langword="true" /&gt;</ph> si <ph id="ph2">&lt;paramref name="value" /&gt;</ph> est à la fois un objet <ph id="ph3">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> et est identique à cet objet <ph id="ph4">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetHashCode">
          <source>Gets a hash code for this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">Obtient un code de hachage pour cet objet <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetHashCode">
          <source>The hash code for this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">Code de hachage de cet objet <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="T:System.Drawing.ToolboxBitmapAttribute">
          <source>Gets the small or large <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">Obtient le <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> petit ou grand associé à cet objet <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>If this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type of the object specified by the component parameter.</source>
          <target state="translated">Si cet objet <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> ne possède pas déjà une petite image, cette méthode recherche une ressource bitmap dans l'assembly qui définit le type de l'objet spécifié par le paramètre component.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>For example, if you pass an object of type ControlA to the component parameter, then this method searches the assembly that defines ControlA.</source>
          <target state="translated">Par exemple, si vous passez un objet de type ControlA au paramètre component, cette méthode recherche alors l'assembly qui définit ControlA.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>Gets the small <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">Obtient le petit <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associé à cet objet <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>The small <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">Le petit <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associé à cet objet <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type of the object specified by the <ph id="ph1">`component`</ph> parameter.</source>
          <target state="translated">Cette méthode recherche une ressource nommée namespace.classname.bmp, où namespace est l’espace de noms contenant la définition du type de l’objet spécifié par le <ph id="ph1">`component`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>For example, suppose you pass an object of type ControlA to the <ph id="ph1">`component`</ph> parameter.</source>
          <target state="translated">Par exemple, supposez que vous passez un objet de type ControlA à la <ph id="ph1">`component`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.</source>
          <target state="translated">Si ControlA se trouve dans NamespaceA dans AssemblyA.dll, cette méthode recherche alors dans AssemblyA.dll une ressource nommée NamespaceA.ControlA.bmp.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)">
          <source>The following example demonstrates how to use the <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A&gt;</ph> method.</source>
          <target state="translated">L'exemple suivant décrit comment utiliser la méthode <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>If this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type specified by the type parameter.</source>
          <target state="translated">Si cet objet <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> ne possède pas déjà une petite image, cette méthode recherche une ressource bitmap dans l'assembly qui définit le type spécifié par le paramètre du type.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>For example, if you pass typeof(ControlA) to the type parameter, then this method searches the assembly that defines ControlA.</source>
          <target state="translated">Par exemple, si vous passez typeof(ControlA) au paramètre type, cette méthode recherche alors l'assembly qui définit ControlA.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>Gets the small <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">Obtient le petit <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associé à cet objet <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>The small <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">Le petit <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associé à cet objet <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type specified by the <ph id="ph1">`type`</ph> parameter.</source>
          <target state="translated">Cette méthode recherche une ressource nommée namespace.classname.bmp, où namespace est l’espace de noms contenant la définition du type spécifié par le <ph id="ph1">`type`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>For example, suppose you pass typeof(ControlA) to the <ph id="ph1">`type`</ph> parameter.</source>
          <target state="translated">Par exemple, supposez que vous passez typeof (ControlA) pour le <ph id="ph1">`type`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)">
          <source>If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.</source>
          <target state="translated">Si ControlA se trouve dans NamespaceA dans AssemblyA.dll, cette méthode recherche alors dans AssemblyA.dll une ressource nommée NamespaceA.ControlA.bmp.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>If this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type of the object specified by the component parameter.</source>
          <target state="translated">Si cet objet <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> ne possède pas déjà une petite image, cette méthode recherche une ressource bitmap dans l'assembly qui définit le type de l'objet spécifié par le paramètre component.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>For example, if you pass an object of type ControlA to the component parameter, then this method searches the assembly that defines ControlA.</source>
          <target state="translated">Par exemple, si vous passez un objet de type ControlA au paramètre component, cette méthode recherche alors l'assembly qui définit ControlA.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>Specifies whether this method returns a large image (<ph id="ph1">&lt;see langword="true" /&gt;</ph>) or a small image (<ph id="ph2">&lt;see langword="false" /&gt;</ph>).</source>
          <target state="translated">Spécifie si cette méthode retourne une grande image (<ph id="ph1">&lt;see langword="true" /&gt;</ph>) ou une petite image (<ph id="ph2">&lt;see langword="false" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>The small image is 16 by 16, and the large image is 32 by 32.</source>
          <target state="translated">La petite image mesure 16 x 16 et la grande image 32 x 32.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>Gets the small or large <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">Obtient le <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> petit ou grand associé à cet objet <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> object associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associé à cet objet <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type of the object specified by the <ph id="ph1">`component`</ph> parameter.</source>
          <target state="translated">Cette méthode recherche une ressource nommée namespace.classname.bmp, où namespace est l’espace de noms contenant la définition du type de l’objet spécifié par le <ph id="ph1">`component`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>For example, suppose you pass an object of type ControlA to the <ph id="ph1">`component`</ph> parameter.</source>
          <target state="translated">Par exemple, supposez que vous passez un objet de type ControlA à la <ph id="ph1">`component`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.</source>
          <target state="translated">Si ControlA se trouve dans NamespaceA dans AssemblyA.dll, cette méthode recherche alors dans AssemblyA.dll une ressource nommée NamespaceA.ControlA.bmp.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)">
          <source>If this <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> object does not already have a large image, this method creates a large image by scaling the small image.</source>
          <target state="translated">Si cette <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> objet n’a pas déjà une grande image, cette méthode crée une grande image par la mise à l’échelle de l’image.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>If this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object does not already have a small image, this method searches for a bitmap resource in the assembly that defines the type specified by the component type.</source>
          <target state="translated">Si cet objet <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> ne possède pas déjà une petite image, cette méthode recherche une ressource bitmap dans l'assembly qui définit le type spécifié par le paramètre component.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>For example, if you pass typeof(ControlA) to the type parameter, then this method searches the assembly that defines ControlA.</source>
          <target state="translated">Par exemple, si vous passez typeof(ControlA) au paramètre type, cette méthode recherche alors l'assembly qui définit ControlA.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>Specifies whether this method returns a large image (<ph id="ph1">&lt;see langword="true" /&gt;</ph>) or a small image (<ph id="ph2">&lt;see langword="false" /&gt;</ph>).</source>
          <target state="translated">Spécifie si cette méthode retourne une grande image (<ph id="ph1">&lt;see langword="true" /&gt;</ph>) ou une petite image (<ph id="ph2">&lt;see langword="false" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>The small image is 16 by 16, and the large image is 32 by 32.</source>
          <target state="translated">La petite image mesure 16 x 16 et la grande image 32 x 32.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>Gets the small or large <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">Obtient le <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> petit ou grand associé à cet objet <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associé à <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>This method searches for a resource named namespace.classname.bmp, where namespace is the namespace containing the definition of the type specified by the <ph id="ph1">`type`</ph> parameter.</source>
          <target state="translated">Cette méthode recherche une ressource nommée namespace.classname.bmp, où namespace est l’espace de noms contenant la définition du type spécifié par le <ph id="ph1">`type`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>For example, suppose you pass an typeof(ControlA) to the <ph id="ph1">`type`</ph> parameter.</source>
          <target state="translated">Par exemple, supposez que vous passez un typeof (ControlA) pour le <ph id="ph1">`type`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.ControlA.bmp.</source>
          <target state="translated">Si ControlA se trouve dans NamespaceA dans AssemblyA.dll, cette méthode recherche alors dans AssemblyA.dll une ressource nommée NamespaceA.ControlA.bmp.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)">
          <source>If this <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> object does not already have a large image, this method creates a large image by scaling the small image.</source>
          <target state="translated">Si cette <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> objet n’a pas déjà une grande image, cette méthode crée une grande image par la mise à l’échelle de l’image.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>If this <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object does not already have a small image, this method searches for an embedded bitmap resource in the assembly that defines the type specified by the component type.</source>
          <target state="translated">Si cet objet <ph id="ph1">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> ne possède pas déjà une petite image, cette méthode recherche une ressource bitmap incorporée dans l'assembly qui définit le type spécifié par le paramètre component.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>For example, if you pass typeof(ControlA) to the type parameter, then this method searches the assembly that defines ControlA.</source>
          <target state="translated">Par exemple, si vous passez typeof(ControlA) au paramètre type, cette méthode recherche alors l'assembly qui définit ControlA.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>The name of the embedded bitmap resource.</source>
          <target state="translated">Nom de la ressource bitmap incorporée.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>Specifies whether this method returns a large image (<ph id="ph1">&lt;see langword="true" /&gt;</ph>) or a small image (<ph id="ph2">&lt;see langword="false" /&gt;</ph>).</source>
          <target state="translated">Spécifie si cette méthode retourne une grande image (<ph id="ph1">&lt;see langword="true" /&gt;</ph>) ou une petite image (<ph id="ph2">&lt;see langword="false" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>The small image is 16 by 16, and the large image is 32 by 32.</source>
          <target state="translated">La petite image mesure 16 x 16 et la grande image 32 x 32.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>Gets the small or large <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated">Obtient le <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> petit ou grand associé à cet objet <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associated with this <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> associé à <ph id="ph2">&lt;see cref="T:System.Drawing.ToolboxBitmapAttribute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>This method searches for a resource named namespace.imgName, where namespace is the namespace containing the definition of the type specified by the <ph id="ph1">`type`</ph> parameter.</source>
          <target state="translated">Cette méthode recherche une ressource nommée namespace.imgName, où namespace est l’espace de noms contenant la définition du type spécifié par le <ph id="ph1">`type`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>For example, suppose you pass typeof(ControlA) to the <ph id="ph1">`type`</ph> parameter and that you passed "MyBitmap.bmp" to the imgName parameter.</source>
          <target state="translated">Par exemple, supposez que vous passez typeof (ControlA) pour le <ph id="ph1">`type`</ph> paramètre et que vous avez passé « MyBitmap.bmp » au paramètre imgName.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.MyBitmap.bmp.</source>
          <target state="translated">Si ControlA se trouve dans NamespaceA dans AssemblyA.dll, cette méthode recherche AssemblyA.dll une ressource nommée NamespaceA.MyBitmap.bmp.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)">
          <source>If this <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> object does not already have a large image, this method creates a large image by scaling the small image.</source>
          <target state="translated">Si cette <ph id="ph1">&lt;xref:System.Drawing.ToolboxBitmapAttribute&gt;</ph> objet n’a pas déjà une grande image, cette méthode crée une grande image par la mise à l’échelle de l’image.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>This method searches for an embedded bitmap resource in the assembly that defines the type specified by the t parameter.</source>
          <target state="translated">Cette méthode recherche une ressource bitmap incorporée dans l'assembly qui définit le type spécifié par le paramètre t.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>For example, if you pass typeof(ControlA) to the t parameter, then this method searches the assembly that defines ControlA.</source>
          <target state="translated">Par exemple, si vous passez typeof(ControlA) au paramètre t, cette méthode recherche alors l'assembly qui définit ControlA.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>The name of the embedded bitmap resource.</source>
          <target state="translated">Nom de la ressource bitmap incorporée.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>Specifies whether this method returns a large image (true)or a small image (false).</source>
          <target state="translated">Spécifie si cette méthode retourne une grande image (true) ou une petite image (false).</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>The small image is 16 by 16, and the large image is 32 x 32.</source>
          <target state="translated">La petite image mesure 16 x 16 et la grande image 32 x 32.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> object based on a bitmap resource that is embedded in an assembly.</source>
          <target state="translated">Retourne un objet <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> basé sur une ressource bitmap qui est incorporée dans un assembly.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> object based on the retrieved bitmap.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Drawing.Image" /&gt;</ph> basé sur la bitmap récupérée.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>This method searches for a resource named namespace.imgName, where namespace is the namespace containing the definition of the type specified by the <ph id="ph1">`t`</ph> parameter.</source>
          <target state="translated">Cette méthode recherche une ressource nommée namespace.imgName, où namespace est l’espace de noms contenant la définition du type spécifié par le <ph id="ph1">`t`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>For example, suppose you pass typeof(ControlA) to the <ph id="ph1">`t`</ph> parameter and you pass "MyBitmap.bmp" to the imgName parameter.</source>
          <target state="translated">Par exemple, supposez que vous passez typeof (ControlA) pour le <ph id="ph1">`t`</ph> paramètre et que vous passez « MyBitmap.bmp » au paramètre imgName.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>If ControlA is in NamespaceA in AssemblyA.dll, then this method searches AssemblyA.dll for a resource named NamespaceA.MyBitmap.bmp.</source>
          <target state="translated">Si ControlA se trouve dans NamespaceA dans AssemblyA.dll, cette méthode recherche AssemblyA.dll une ressource nommée NamespaceA.MyBitmap.bmp.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>This method is intended to retrieve a 16 x 16 bitmap resource that is embedded in an assembly.</source>
          <target state="translated">Cette méthode est destinée à récupérer une ressource bitmap 16 x 16 qui est incorporée dans un assembly.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>However, there is no requirement that the embedded bitmap has a size of 16 x 16.</source>
          <target state="translated">Toutefois, il n’est pas obligatoire que la bitmap incorporée possède une taille de 16 x 16.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>The bitmap that is retrieved from the assembly (no matter what size) is considered the small image.</source>
          <target state="translated">La bitmap qui est récupérée à partir de l’assembly (quelle que soit la taille) est considérée comme la petite image.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>The large image is created by scaling the "small" image to a size of 32 x 32.</source>
          <target state="translated">La grande image est créée par la mise à l’échelle de l’image « petite » à une taille de 32 x 32.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)">
          <source>So the large image will always be 32 by 32, regardless of the size of the bitmap retrieved from the assembly.</source>
          <target state="translated">Par conséquent, la grande image sera toujours 32 x 32, indépendamment de la taille de la bitmap récupérée à partir de l’assembly.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>