<Type Name="ToolboxBitmapAttribute" FullName="System.Drawing.ToolboxBitmapAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e90b6f7bf5e09a93e1a6785ec419a11954f93d9b" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52913753" /></Metadata><TypeSignature Language="C#" Value="public class ToolboxBitmapAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi ToolboxBitmapAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.ToolboxBitmapAttribute" />
  <TypeSignature Language="VB.NET" Value="Public Class ToolboxBitmapAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ToolboxBitmapAttribute : Attribute" />
  <TypeSignature Language="F#" Value="type ToolboxBitmapAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netcore-2.1;netframework-4.8;dotnet-plat-ext-2.1;netcore-2.2;dotnet-plat-ext-2.2">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Vous permet de spécifier une icône représentant un contrôle dans un conteneur, tel que le Microsoft Visual Studio Form Designer.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez appliquer un <xref:System.Drawing.ToolboxBitmapAttribute> à un contrôle afin que les conteneurs, tels que Microsoft Visual Studio Form Designer, puissent récupérer une icône qui représente le contrôle. L’image bitmap de l’icône peut être un fichier en lui-même ou incorporés dans l’assembly qui contient le contrôle. La taille de l’image bitmap que vous incorporez dans assembly du contrôle (ou les stocker dans un fichier distinct) doit être de 16 par 16. Le <xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A> méthode d’un <xref:System.Drawing.ToolboxBitmapAttribute> objet peut retourner l’image petit 16 par 16 ou une image de grande taille de 32 x 32 qu’il crée par la mise à l’échelle de la petite image.  
  
 Si vous souhaitez utiliser les différentes versions de vos icônes avec différentes versions de votre assembly, vous n’êtes pas obligé de modifier le <xref:System.Drawing.ToolboxBitmapAttribute> pour chaque version. Au lieu de cela, vous pouvez déclarer l’assembly avec un <xref:System.Drawing.BitmapSuffixInSameAssemblyAttribute> ou un <xref:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute>et spécifiez un <xref:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix%2A> valeur de configuration pour chaque version de l’assembly. Dans ce cas, un nom de fichier indiqué par un <xref:System.Drawing.ToolboxBitmapAttribute> est interprété avec le suffixe de bitmap est ajouté.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Drawing.ToolboxBitmapAttribute> classe pour définir `stop.bmp` en tant que l’icône de boîte à outils pour le `StopSignControl`. Cet exemple suppose l’existence d’une bitmap 16 x 16 pixels nommée `stop.bmp` dans c:\\.  
  
 [!code-cpp[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#1)]
 [!code-csharp[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#1)]
 [!code-vb[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise un nouvel objet <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxBitmapAttribute (string imageFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string imageFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (imageFile As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolboxBitmapAttribute(System::String ^ imageFile);" />
      <MemberSignature Language="F#" Value="new System.Drawing.ToolboxBitmapAttribute : string -&gt; System.Drawing.ToolboxBitmapAttribute" Usage="new System.Drawing.ToolboxBitmapAttribute imageFile" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="imageFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="imageFile">Nom d'un fichier contenant une bitmap 16 sur 16.</param>
        <summary>Initialise un nouvel objet <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> avec une image provenant d'un fichier spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A> constructeur afin de définir `stop.bmp` en tant que l’icône de boîte à outils pour le `StopSignControl`. Cet exemple suppose l’existence d’une bitmap 16 x 16 pixels nommée `stop.bmp` dans c:\\.  
  
 [!code-cpp[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#1)]
 [!code-csharp[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#1)]
 [!code-vb[System.Drawing.ToolBoxBitmapExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxBitmapAttribute (Type t);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type t) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (t As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolboxBitmapAttribute(Type ^ t);" />
      <MemberSignature Language="F#" Value="new System.Drawing.ToolboxBitmapAttribute : Type -&gt; System.Drawing.ToolboxBitmapAttribute" Usage="new System.Drawing.ToolboxBitmapAttribute t" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="t"><see cref="T:System.Type" /> dont l'assembly de définition fait l'objet d'une recherche pour la ressource bitmap.</param>
        <summary>Initialise un nouvel objet <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> basé sur une bitmap 16 x 16 qui est incorporée en tant que ressource dans un assembly spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur recherche une ressource incorporée dans l’assembly qui définit le type spécifié par le `t` paramètre. Le constructeur recherche une ressource nommée namespace.classname.bmp, où namespace est l’espace de noms contenant la définition de la classe spécifiée par le `t` paramètre. Par exemple, si ControlA se trouve dans NamespaceA dans AssemblyA.dll, le constructeur recherche AssemblyA.dll une ressource nommée NamespaceA.ControlA.bmp.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A> constructeur pour définir l’icône du contrôle bouton sur l’icône de boîte à outils pour un <xref:System.Windows.Forms.UserControl> nommé `StopSignControl3`.  
  
 [!code-cpp[System.Drawing.ToolBoxBitmapExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#3)]
 [!code-csharp[System.Drawing.ToolBoxBitmapExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#3)]
 [!code-vb[System.Drawing.ToolBoxBitmapExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ToolboxBitmapAttribute (Type t, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type t, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (t As Type, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ToolboxBitmapAttribute(Type ^ t, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Drawing.ToolboxBitmapAttribute : Type * string -&gt; System.Drawing.ToolboxBitmapAttribute" Usage="new System.Drawing.ToolboxBitmapAttribute (t, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="t"><see cref="T:System.Type" /> dont l'assembly de définition fait l'objet d'une recherche pour la ressource bitmap.</param>
        <param name="name">Nom de la ressource bitmap incorporée.</param>
        <summary>Initialise un nouvel objet <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> basé sur une bitmap 16 x 16 qui est incorporée en tant que ressource dans un assembly spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur recherche une ressource incorporée dans l’assembly qui définit le type spécifié par le `t` paramètre. Le constructeur recherche une ressource nommée namespace.name, où namespace est l’espace de noms contenant la définition de la classe spécifiée par le `t` paramètre. Par exemple, supposons que ControlA est une classe dans NamespaceA dans AssemblyA.dll et que vous avez passé « MyBitmap.bmp » à la `name` paramètre. Le constructeur recherche ensuite dans AssemblyA.dll une ressource nommée NamespaceA.MyBitmap.bmp.  
  
   
  
## Examples  
 « L’exemple de code suivant montre comment utiliser le <xref:System.Drawing.ToolboxBitmapAttribute.%23ctor%2A> constructeur afin de définir `StopSignControl2.bmp` sous forme d’icône Boîte à outils pour le `StopSignControl2`. Cet exemple suppose l’existence d’une bitmap 16 x 16 pixels nommée `StopSignControl2.bmp` avec son **BuildAction** propriété définie sur **EmbeddedResource**.  
  
 [!code-cpp[System.Drawing.ToolBoxBitmapExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#2)]
 [!code-csharp[System.Drawing.ToolBoxBitmapExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#2)]
 [!code-vb[System.Drawing.ToolBoxBitmapExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static readonly System.Drawing.ToolboxBitmapAttribute Default;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Drawing.ToolboxBitmapAttribute Default" />
      <MemberSignature Language="DocId" Value="F:System.Drawing.ToolboxBitmapAttribute.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Default As ToolboxBitmapAttribute " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Drawing::ToolboxBitmapAttribute ^ Default;" />
      <MemberSignature Language="F#" Value=" staticval mutable Default : System.Drawing.ToolboxBitmapAttribute" Usage="System.Drawing.ToolboxBitmapAttribute.Default" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.ToolboxBitmapAttribute</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Objet <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> dont la petite et la grande image ont la valeur <see langword="null" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="toolboxBitmapAttribute.Equals value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><see cref="T:System.Object" /> à tester.</param>
        <summary>Indique si l'objet spécifié est un objet <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> et s'il est identique à cet objet <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</summary>
        <returns>Cette méthode retourne <see langword="true" /> si <paramref name="value" /> est à la fois un objet <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> et est identique à cet objet <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="toolboxBitmapAttribute.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient un code de hachage pour cet objet <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</summary>
        <returns>Code de hachage de cet objet <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetImage">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient le <see cref="T:System.Drawing.Image" /> petit ou grand associé à cet objet <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetImage (object component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetImage(object component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetImage (component As Object) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Image ^ GetImage(System::Object ^ component);" />
      <MemberSignature Language="F#" Value="member this.GetImage : obj -&gt; System.Drawing.Image" Usage="toolboxBitmapAttribute.GetImage component" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="component">Si cet objet <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> ne possède pas déjà une petite image, cette méthode recherche une ressource bitmap dans l'assembly qui définit le type de l'objet spécifié par le paramètre component. Par exemple, si vous passez un objet de type ControlA au paramètre component, cette méthode recherche alors l'assembly qui définit ControlA.</param>
        <summary>Obtient le petit <see cref="T:System.Drawing.Image" /> associé à cet objet <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</summary>
        <returns>Le petit <see cref="T:System.Drawing.Image" /> associé à cet objet <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode recherche une ressource nommée namespace.classname.bmp, où namespace est l’espace de noms contenant la définition du type de l’objet spécifié par le `component` paramètre. Par exemple, supposons que vous passez un objet de type ControlA à la `component` paramètre. Si ControlA se trouve dans NamespaceA dans AssemblyA.dll, cette méthode recherche AssemblyA.dll une ressource nommée NamespaceA.ControlA.bmp.  
  
   
  
## Examples  
 L'exemple suivant décrit comment utiliser la méthode <xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A>.  
  
 [!code-cpp[System.Drawing.ToolBoxBitmapExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/cpp/usercontrol1.cpp#4)]
 [!code-csharp[System.Drawing.ToolBoxBitmapExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/CS/usercontrol1.cs#4)]
 [!code-vb[System.Drawing.ToolBoxBitmapExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ToolBoxBitmapExamples/VB/usercontrol1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetImage (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetImage(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Image ^ GetImage(Type ^ type);" />
      <MemberSignature Language="F#" Value="member this.GetImage : Type -&gt; System.Drawing.Image" Usage="toolboxBitmapAttribute.GetImage type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Si cet objet <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> ne possède pas déjà une petite image, cette méthode recherche une ressource bitmap dans l'assembly qui définit le type spécifié par le paramètre du type. Par exemple, si vous passez typeof(ControlA) au paramètre type, cette méthode recherche alors l'assembly qui définit ControlA.</param>
        <summary>Obtient le petit <see cref="T:System.Drawing.Image" /> associé à cet objet <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</summary>
        <returns>Le petit <see cref="T:System.Drawing.Image" /> associé à cet objet <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode recherche une ressource nommée namespace.classname.bmp, où namespace est l’espace de noms contenant la définition du type spécifié par le `type` paramètre. Par exemple, supposez que vous passez typeof (ControlA) pour le `type` paramètre. Si ControlA se trouve dans NamespaceA dans AssemblyA.dll, cette méthode recherche AssemblyA.dll une ressource nommée NamespaceA.ControlA.bmp.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetImage (object component, bool large);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetImage(object component, bool large) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetImage (component As Object, large As Boolean) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Image ^ GetImage(System::Object ^ component, bool large);" />
      <MemberSignature Language="F#" Value="member this.GetImage : obj * bool -&gt; System.Drawing.Image" Usage="toolboxBitmapAttribute.GetImage (component, large)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.Object" />
        <Parameter Name="large" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="component">Si cet objet <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> ne possède pas déjà une petite image, cette méthode recherche une ressource bitmap dans l'assembly qui définit le type de l'objet spécifié par le paramètre component. Par exemple, si vous passez un objet de type ControlA au paramètre component, cette méthode recherche alors l'assembly qui définit ControlA.</param>
        <param name="large">Spécifie si cette méthode retourne une grande image (<see langword="true" />) ou une petite image (<see langword="false" />). La petite image mesure 16 x 16 et la grande image 32 x 32.</param>
        <summary>Obtient le <see cref="T:System.Drawing.Image" /> petit ou grand associé à cet objet <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</summary>
        <returns>Objet <see cref="T:System.Drawing.Image" /> associé à cet objet <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode recherche une ressource nommée namespace.classname.bmp, où namespace est l’espace de noms contenant la définition du type de l’objet spécifié par le `component` paramètre. Par exemple, supposons que vous passez un objet de type ControlA à la `component` paramètre. Si ControlA se trouve dans NamespaceA dans AssemblyA.dll, cette méthode recherche AssemblyA.dll une ressource nommée NamespaceA.ControlA.bmp.  
  
 Si cette <xref:System.Drawing.ToolboxBitmapAttribute> objet n’a pas déjà une grande image, cette méthode crée une grande image par la mise à l’échelle de la petite image.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetImage (Type type, bool large);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetImage(class System.Type type, bool large) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Image ^ GetImage(Type ^ type, bool large);" />
      <MemberSignature Language="F#" Value="member this.GetImage : Type * bool -&gt; System.Drawing.Image" Usage="toolboxBitmapAttribute.GetImage (type, large)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="large" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">Si cet objet <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> ne possède pas déjà une petite image, cette méthode recherche une ressource bitmap dans l'assembly qui définit le type spécifié par le paramètre component. Par exemple, si vous passez typeof(ControlA) au paramètre type, cette méthode recherche alors l'assembly qui définit ControlA.</param>
        <param name="large">Spécifie si cette méthode retourne une grande image (<see langword="true" />) ou une petite image (<see langword="false" />). La petite image mesure 16 x 16 et la grande image 32 x 32.</param>
        <summary>Obtient le <see cref="T:System.Drawing.Image" /> petit ou grand associé à cet objet <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</summary>
        <returns><see cref="T:System.Drawing.Image" /> associé à <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode recherche une ressource nommée namespace.classname.bmp, où namespace est l’espace de noms contenant la définition du type spécifié par le `type` paramètre. Par exemple, supposez que vous passez un typeof (ControlA) pour le `type` paramètre. Si ControlA se trouve dans NamespaceA dans AssemblyA.dll, cette méthode recherche AssemblyA.dll une ressource nommée NamespaceA.ControlA.bmp.  
  
 Si cette <xref:System.Drawing.ToolboxBitmapAttribute> objet n’a pas déjà une grande image, cette méthode crée une grande image par la mise à l’échelle de la petite image.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImage">
      <MemberSignature Language="C#" Value="public System.Drawing.Image GetImage (Type type, string imgName, bool large);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Image GetImage(class System.Type type, string imgName, bool large) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Image ^ GetImage(Type ^ type, System::String ^ imgName, bool large);" />
      <MemberSignature Language="F#" Value="member this.GetImage : Type * string * bool -&gt; System.Drawing.Image" Usage="toolboxBitmapAttribute.GetImage (type, imgName, large)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="imgName" Type="System.String" />
        <Parameter Name="large" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">Si cet objet <see cref="T:System.Drawing.ToolboxBitmapAttribute" /> ne possède pas déjà une petite image, cette méthode recherche une ressource bitmap incorporée dans l'assembly qui définit le type spécifié par le paramètre component. Par exemple, si vous passez typeof(ControlA) au paramètre type, cette méthode recherche alors l'assembly qui définit ControlA.</param>
        <param name="imgName">Nom de la ressource bitmap incorporée.</param>
        <param name="large">Spécifie si cette méthode retourne une grande image (<see langword="true" />) ou une petite image (<see langword="false" />). La petite image mesure 16 x 16 et la grande image 32 x 32.</param>
        <summary>Obtient le <see cref="T:System.Drawing.Image" /> petit ou grand associé à cet objet <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</summary>
        <returns><see cref="T:System.Drawing.Image" /> associé à <see cref="T:System.Drawing.ToolboxBitmapAttribute" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode recherche une ressource nommée namespace.imgName, où namespace est l’espace de noms contenant la définition du type spécifié par le `type` paramètre. Par exemple, supposez que vous passez typeof (ControlA) pour le `type` paramètre et que vous avez passé « MyBitmap.bmp » au paramètre imgName. Si ControlA se trouve dans NamespaceA dans AssemblyA.dll, cette méthode recherche AssemblyA.dll une ressource nommée NamespaceA.MyBitmap.bmp.  
  
 Si cette <xref:System.Drawing.ToolboxBitmapAttribute> objet n’a pas déjà une grande image, cette méthode crée une grande image par la mise à l’échelle de la petite image.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImageFromResource">
      <MemberSignature Language="C#" Value="public static System.Drawing.Image GetImageFromResource (Type t, string imageName, bool large);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Image GetImageFromResource(class System.Type t, string imageName, bool large) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetImageFromResource (t As Type, imageName As String, large As Boolean) As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Image ^ GetImageFromResource(Type ^ t, System::String ^ imageName, bool large);" />
      <MemberSignature Language="F#" Value="static member GetImageFromResource : Type * string * bool -&gt; System.Drawing.Image" Usage="System.Drawing.ToolboxBitmapAttribute.GetImageFromResource (t, imageName, large)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="t" Type="System.Type" />
        <Parameter Name="imageName" Type="System.String" />
        <Parameter Name="large" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="t">Cette méthode recherche une ressource bitmap incorporée dans l'assembly qui définit le type spécifié par le paramètre t. Par exemple, si vous passez typeof(ControlA) au paramètre t, cette méthode recherche alors l'assembly qui définit ControlA.</param>
        <param name="imageName">Nom de la ressource bitmap incorporée.</param>
        <param name="large">Spécifie si cette méthode retourne une grande image (true) ou une petite image (false). La petite image mesure 16 x 16 et la grande image 32 x 32.</param>
        <summary>Retourne un objet <see cref="T:System.Drawing.Image" /> basé sur une ressource bitmap qui est incorporée dans un assembly.</summary>
        <returns>Objet <see cref="T:System.Drawing.Image" /> basé sur la bitmap récupérée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode recherche une ressource nommée namespace.imgName, où namespace est l’espace de noms contenant la définition du type spécifié par le `t` paramètre. Par exemple, supposez que vous passez typeof (ControlA) pour le `t` paramètre et que vous passez « MyBitmap.bmp » au paramètre imgName. Si ControlA se trouve dans NamespaceA dans AssemblyA.dll, cette méthode recherche AssemblyA.dll une ressource nommée NamespaceA.MyBitmap.bmp.  
  
 Cette méthode est destinée à récupérer une ressource bitmap 16 x 16 qui est incorporée dans un assembly. Toutefois, il n’est pas obligatoire que la bitmap incorporée possède une taille de 16 x 16. La bitmap est récupérée à partir de l’assembly (quelle que soit la taille) est considérée comme la petite image. La grande image est créée par la mise à l’échelle de l’image « petite » à une taille de 32 x 32. Par conséquent, la grande image sera toujours 32 x 32, indépendamment de la taille de la bitmap récupérée à partir de l’assembly.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>