<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Pen.xml" source-language="en-US" target-language="fr-FR">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d37fac39a424f3b42adab08f5106dc3d3cc57f2f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d37fac39a424f3b42adab08f5106dc3d3cc57f2f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>Defines an object used to draw lines and curves.</source>
          <target state="translated">Définit un objet utilisé pour dessiner des lignes et des courbes.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>This class cannot be inherited.</source>
          <target state="translated">Cette classe ne peut pas être héritée.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>A <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> draws a line of specified width and style.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> Dessine une ligne de largeur spécifiée et du style.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>Use the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashStyle&gt;</ph> property to draw several varieties of dashed lines.</source>
          <target state="translated">Utilisez le <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashStyle&gt;</ph> propriété pour dessiner plusieurs variétés de lignes en pointillés.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>The line drawn by a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> can be filled in a variety of fill styles, including solid colors and textures.</source>
          <target state="translated">La ligne dessinée par un <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> peut être remplie avec divers styles de remplissage, y compris des couleurs unies et les textures.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>The fill style depends on brush or texture that is used as the fill object.</source>
          <target state="translated">Le style de remplissage dépend du pinceau ou de la texture est utilisée comme objet de remplissage.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>The following code example demonstrates constructing a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> with a <ph id="ph2">&lt;xref:System.Drawing.Pen.Brush%2A&gt;</ph> and the effects of setting the <ph id="ph3">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> property on a <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">L’exemple de code suivant illustre la construction d’un <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> avec un <ph id="ph2">&lt;xref:System.Drawing.Pen.Brush%2A&gt;</ph> et les effets du paramètre de la <ph id="ph3">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> propriété sur un <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">Cet exemple est conçu pour être utilisé avec Windows Forms.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Drawing.Pen">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowLineJoin`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Collez le code dans un formulaire et appelez le <ph id="ph1">`ShowLineJoin`</ph> méthode lors du traitement du formulaire <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> événement, en passant <ph id="ph3">`e`</ph> comme <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> class with the specified color.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> avec la couleur spécifiée.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the fill properties of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> qui détermine les propriétés de remplissage de ce <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph>.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> avec le <ph id="ph2">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Pen.Brush%2A&gt;</ph> property determines how the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> draws lines.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Drawing.Pen.Brush%2A&gt;</ph> propriété détermine comment la <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> dessine des lignes.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>Lines are drawn as if they are filled rectangles, with the characteristics of the specified <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph>.</source>
          <target state="translated">Lignes sont dessinées comme s’ils sont remplis rectangles, avec les caractéristiques de l’objet <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> property of the new <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> is set to 1 (the default).</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> propriété du nouveau <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> a la valeur 1 (valeur par défaut).</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>The following code example demonstrates constructing a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> with a <ph id="ph2">&lt;xref:System.Drawing.Pen.Brush%2A&gt;</ph> and the effects of setting the <ph id="ph3">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> property on a <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">L’exemple de code suivant illustre la construction d’un <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> avec un <ph id="ph2">&lt;xref:System.Drawing.Pen.Brush%2A&gt;</ph> et les effets du paramètre de la <ph id="ph3">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> propriété sur un <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">Cet exemple est conçu pour être utilisé avec Windows Forms.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowLineJoin`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Collez le code dans un formulaire et appelez le <ph id="ph1">`ShowLineJoin`</ph> méthode lors du traitement du formulaire <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> événement, en passant <ph id="ph3">`e`</ph> comme <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> structure that indicates the color of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Structure <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> qui indique la couleur de ce <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> class with the specified color.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> avec la couleur spécifiée.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> property is set to the color specified by the <ph id="ph2">`color`</ph> parameter.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> est définie sur la couleur spécifiée par la <ph id="ph2">`color`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> property is set to 1 (the default).</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> est définie sur 1 (valeur par défaut).</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines the characteristics of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> qui détermine les caractéristiques de ce <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>The width of the new <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Largeur du nouveau <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Drawing.Pen.Width" /&gt;</ph>.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> avec les <ph id="ph2">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> et <ph id="ph3">&lt;see cref="P:System.Drawing.Pen.Width" /&gt;</ph> spécifiés.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph> is set to the color specified in the <ph id="ph2">`brush`</ph> parameter, the <ph id="ph3">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> property is set to the value specified in the <ph id="ph4">`width`</ph> parameter, and the units are set to <ph id="ph5">&lt;xref:System.Drawing.GraphicsUnit.World&gt;</ph>.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Drawing.Brush&gt;</ph> est défini sur la couleur spécifiée dans le <ph id="ph2">`brush`</ph> paramètre, le <ph id="ph3">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> est définie sur la valeur spécifiée dans le <ph id="ph4">`width`</ph> paramètre et les unités sont définis sur <ph id="ph5">&lt;xref:System.Drawing.GraphicsUnit.World&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>Note that the <ph id="ph1">`brush`</ph> parameter also specifies the <ph id="ph2">&lt;xref:System.Drawing.Color&gt;</ph> property of this <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Notez que la <ph id="ph1">`brush`</ph> paramètre spécifie également le <ph id="ph2">&lt;xref:System.Drawing.Color&gt;</ph> propriété de ce <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>A <ph id="ph1">`width`</ph> of 0 will result in the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> drawing as if the width were 1.</source>
          <target state="translated">A <ph id="ph1">`width`</ph> 0 entraîne le <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> dessin comme si la largeur était de 1.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> and demonstrates the effects of setting the <ph id="ph2">&lt;xref:System.Drawing.Pen.StartCap%2A&gt;</ph> and <ph id="ph3">&lt;xref:System.Drawing.Pen.EndCap%2A&gt;</ph> properties on a <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">L’exemple de code suivant crée un <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> et montre les effets du paramètre de la <ph id="ph2">&lt;xref:System.Drawing.Pen.StartCap%2A&gt;</ph> et <ph id="ph3">&lt;xref:System.Drawing.Pen.EndCap%2A&gt;</ph> propriétés sur un <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">Cet exemple est conçu pour être utilisé avec Windows Forms.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowStartAndEndCaps`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Collez le code dans un formulaire et appelez le <ph id="ph1">`ShowStartAndEndCaps`</ph> méthode lors du traitement du formulaire <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> événement, en passant <ph id="ph3">`e`</ph> comme <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Brush,System.Single)">
          <source><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="brush" /&gt;</ph> est <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> structure that indicates the color of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Structure <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> qui indique la couleur de ce <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>A value indicating the width of this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Valeur indiquant la largeur de ce <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> and <ph id="ph3">&lt;see cref="P:System.Drawing.Pen.Width" /&gt;</ph> properties.</source>
          <target state="translated">Initialise une nouvelle instance de la classe <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> avec les propriétés <ph id="ph2">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> et <ph id="ph3">&lt;see cref="P:System.Drawing.Pen.Width" /&gt;</ph> spécifiées.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> property is set to the color specified by the <ph id="ph2">`color`</ph> parameter.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> est définie sur la couleur spécifiée par la <ph id="ph2">`color`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> property is set to the value specified in the <ph id="ph2">`width`</ph> parameter.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> est définie sur la valeur spécifiée dans le <ph id="ph2">`width`</ph> paramètre.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>A <ph id="ph1">`width`</ph> of 0 will result in the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> drawing as if the width were 1.</source>
          <target state="translated">A <ph id="ph1">`width`</ph> 0 entraîne le <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> dessin comme si la largeur était de 1.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>The following code example demonstrates creating a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> and the effects of setting the <ph id="ph2">&lt;xref:System.Drawing.Pen.DashCap%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph> properties.</source>
          <target state="translated">L’exemple de code suivant montre comment créer un <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> et les effets du paramètre de la <ph id="ph2">&lt;xref:System.Drawing.Pen.DashCap%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>, et <ph id="ph4">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">Cet exemple est conçu pour être utilisé avec Windows Forms.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.#ctor(System.Drawing.Color,System.Single)">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowPensAndSmoothingMode`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing e as <ph id="ph3">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Collez le code dans un formulaire et appelez le <ph id="ph1">`ShowPensAndSmoothingMode`</ph> méthode lors du traitement du formulaire <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> événement, en passant e comme <ph id="ph3">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Alignment">
          <source>Gets or sets the alignment for this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit l'alignement pour ce <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PenAlignment" /&gt;</ph> that represents the alignment for this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PenAlignment" /&gt;</ph> qui représente l'alignement pour ce <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>This property determines how the <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> draws closed curves and polygons.</source>
          <target state="translated">Cette propriété détermine comment la <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> dessine des polygones et des courbes fermés.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment&gt;</ph> enumeration specifies five values; however, only two values—<ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Center&gt;</ph> and <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph>—will change the appearance of a drawn line.</source>
          <target state="translated">Le <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment&gt;</ph> énumération spécifie cinq valeurs ; Toutefois, seules deux valeurs :<ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Center&gt;</ph> et <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph>— modifiera l’apparence d’une ligne dessinée.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Center&gt;</ph> is the default value for this property and specifies that the width of the pen is centered on the outline of the curve or polygon.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Center&gt;</ph> est la valeur par défaut de cette propriété et spécifie que la largeur du stylet est centrée sur le contour de la courbe ou polygone.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>A value of <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph> for this property specifies that the width of the pen is inside the outline of the curve or polygon.</source>
          <target state="translated">La valeur <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph> pour cette propriété spécifie que la largeur du stylet se trouve dans le plan de la courbe ou polygone.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>The other three values, <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Right&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Left&gt;</ph>, and <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Outset&gt;</ph>, will result in a pen that is centered.</source>
          <target state="translated">Les trois autres valeurs, <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Right&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Left&gt;</ph>, et <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Outset&gt;</ph>, entraîne un stylet qui est centré.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>A <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> that has its alignment set to <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph> will yield unreliable results, sometimes drawing in the inset position and sometimes in the centered position.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> dont l’alignement a la valeur <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph> génèrera des résultats non fiables, parfois de dessin dans la position d’incrustation et parfois dans l’emplacement centré.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Alignment">
          <source>Also, an inset pen cannot be used to draw compound lines and cannot draw dashed lines with <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashCap.Triangle&gt;</ph> dash caps.</source>
          <target state="translated">En outre, un stylet d’incrustation ne peut pas être utilisé pour dessiner des lignes composées et ne peut pas dessiner des lignes en pointillés avec <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashCap.Triangle&gt;</ph> tiret en majuscules.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Alignment">
          <source>The specified value is not a member of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PenAlignment" /&gt;</ph>.</source>
          <target state="translated">La valeur spécifiée n'est pas un membre de <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PenAlignment" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Alignment">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Alignment" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">La valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Alignment" /&gt;</ph> est un <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> immuable, tel que ceux retournés par la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Brush">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines attributes of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit le <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> qui détermine les attributs de ce <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Brush">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> that determines attributes of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Brush" /&gt;</ph> qui détermine les attributs de ce <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Brush">
          <source>Assigning this property causes the pen to draw filled lines and curves.</source>
          <target state="translated">Affecter à cette propriété provoque le stylet dessiner des courbes et des lignes pleines.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Brush">
          <source>It overrides the <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Il remplace le <ph id="ph1">&lt;xref:System.Drawing.Color&gt;</ph> propriété de la <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Brush">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Brush" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">La valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Brush" /&gt;</ph> est un <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> immuable, tel que ceux retournés par la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.Clone">
          <source>Creates an exact copy of this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Crée une copie exacte de <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.Clone">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that can be cast to a <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> qui peut être casté en <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Clone">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, qui est un paramètre de la <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> Gestionnaire d’événements.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Clone">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Clone">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Crée un <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Clone">
          <source>Creates a copy of that pen.</source>
          <target state="translated">Crée une copie de ce stylet.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Clone">
          <source>Draws a line to the screen, using the copy of the pen.</source>
          <target state="translated">Dessine une ligne à l’écran, à l’aide de la copie du stylet.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Color">
          <source>Gets or sets the color of this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit la couleur de ce <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Color">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> structure that represents the color of this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Structure <ph id="ph1">&lt;see cref="T:System.Drawing.Color" /&gt;</ph> qui représente la couleur de ce <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Color">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Color" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">La valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Color" /&gt;</ph> est un <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> immuable, tel que ceux retournés par la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CompoundArray">
          <source>Gets or sets an array of values that specifies a compound pen.</source>
          <target state="translated">Obtient ou définit un tableau de valeurs qui spécifie un stylet composé.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CompoundArray">
          <source>A compound pen draws a compound line made up of parallel lines and spaces.</source>
          <target state="translated">Un stylet composé dessine une ligne composée constituée de lignes parallèles et d'espaces.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>An array of real numbers that specifies the compound array.</source>
          <target state="translated">Tableau de nombres réels qui spécifie le tableau composé.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>The elements in the array must be in increasing order, not less than 0, and not greater than 1.</source>
          <target state="translated">Les éléments du tableau doivent être dans l'ordre croissant, supérieurs à 0 et inférieurs à 1.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>A compound line is made up of alternating parallel lines and spaces of varying widths.</source>
          <target state="translated">Une ligne composée est constituée de lignes parallèles et espaces de largeurs variables en alternance.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>The values in the array specify the starting points of each component of the compound line relative to the pen's width.</source>
          <target state="translated">Les valeurs du tableau spécifient les points de départ de chaque composant de la ligne composée par rapport à la largeur du stylet.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>The first value in the array specifies where the first component (a line) begins as a fraction of the distance across the width of the pen.</source>
          <target state="translated">La première valeur dans le tableau spécifie où le premier composant (une ligne) commence comme une fraction de la distance entre la largeur du stylet.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>The second value in the array specifies the beginning of the next component (a space) as a fraction of the distance across the width of the pen.</source>
          <target state="translated">La deuxième valeur dans le tableau spécifie le début du composant suivant (un espace) comme une fraction de la distance entre la largeur du stylet.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>The final value in the array specifies where the last component ends.</source>
          <target state="translated">La valeur finale du tableau spécifie où le dernier composant se termine.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>Suppose you want a pen to draw two parallel lines where the width of the first line is 20 percent of the pen's width, the width of the space that separates the two lines is 50 percent of the pen' s width, and the width of the second line is 30 percent of the pen's width.</source>
          <target state="translated">Supposons que vous souhaitez un stylet pour dessiner les deux lignes parallèles où la largeur de la première ligne représente 20 pour cent de la largeur du stylet, la largeur de l’espace qui sépare les deux lignes est de 50 pour cent du stylet ' s largeur et la largeur de la deuxième ligne est de 30 pour cent de sa Largeur.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>Start by creating a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> and an array of real numbers.</source>
          <target state="translated">Commencez par créer un <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> et un tableau de nombres réels.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>Set the compound array by passing the array with the values 0.0, 0.2, 0.7, and 1.0 to this property.</source>
          <target state="translated">Définissez le tableau composé en passant un tableau avec les valeurs 0,0, 0,2, 0,7 et 1,0 à cette propriété.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CompoundArray">
          <source>Do not set this property if the <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> has its <ph id="ph2">&lt;xref:System.Drawing.Pen.Alignment%2A&gt;</ph> property set to <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph>.</source>
          <target state="translated">Ne définissez pas cette propriété si le <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> a son <ph id="ph2">&lt;xref:System.Drawing.Pen.Alignment%2A&gt;</ph> propriété <ph id="ph3">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CompoundArray">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.CompoundArray" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">La valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.CompoundArray" /&gt;</ph> est un <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> immuable, tel que ceux retournés par la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CustomEndCap">
          <source>Gets or sets a custom cap to use at the end of lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit une extrémité personnalisée à utiliser à la fin des lignes dessinées avec ce <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CustomEndCap">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> that represents the cap used at the end of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> qui représente l'extrémité utilisée à la fin des lignes dessinées à l'aide de ce <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CustomEndCap">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.CustomEndCap" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">La valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.CustomEndCap" /&gt;</ph> est un <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> immuable, tel que ceux retournés par la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CustomStartCap">
          <source>Gets or sets a custom cap to use at the beginning of lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit une extrémité personnalisée à utiliser au début des lignes dessinées à l'aide de ce <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.CustomStartCap">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> that represents the cap used at the beginning of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.CustomLineCap" /&gt;</ph> qui représente l'extrémité utilisée au début des lignes dessinées à l'aide de ce <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.CustomStartCap">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.CustomStartCap" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">La valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.CustomStartCap" /&gt;</ph> est un <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> immuable, tel que ceux retournés par la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashCap">
          <source>Gets or sets the cap style used at the end of the dashes that make up dashed lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit le style d'extrémité utilisé à la fin des tirets qui constituent les lignes en pointillés dessinées à l'aide de ce <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashCap">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.DashCap" /&gt;</ph> values that represents the cap style used at the beginning and end of the dashes that make up dashed lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Une des valeurs <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.DashCap" /&gt;</ph> qui représente le style d'extrémité utilisé au début et à la fin des tirets constituant les lignes en pointillés dessinées à l'aide de ce <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashCap">
          <source>Do not set this property to <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashCap.Triangle&gt;</ph> if the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> has its <ph id="ph3">&lt;xref:System.Drawing.Pen.Alignment%2A&gt;</ph> property set to <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph>.</source>
          <target state="translated">Ne définissez pas cette propriété sur <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashCap.Triangle&gt;</ph> si le <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> a son <ph id="ph3">&lt;xref:System.Drawing.Pen.Alignment%2A&gt;</ph> propriété <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.PenAlignment.Inset&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashCap">
          <source>The following code example demonstrates creating a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> and the effects of setting the <ph id="ph2">&lt;xref:System.Drawing.Pen.DashCap%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph> properties.</source>
          <target state="translated">L’exemple de code suivant montre comment créer un <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> et les effets du paramètre de la <ph id="ph2">&lt;xref:System.Drawing.Pen.DashCap%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>, et <ph id="ph4">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashCap">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">Cet exemple est conçu pour être utilisé avec Windows Forms.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashCap">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowPensAndSmoothingMode`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Collez le code dans un formulaire et appelez le <ph id="ph1">`ShowPensAndSmoothingMode`</ph> méthode lors du traitement du formulaire <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> événement, en passant <ph id="ph3">`e`</ph> comme <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashCap">
          <source>The specified value is not a member of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.DashCap" /&gt;</ph>.</source>
          <target state="translated">La valeur spécifiée n'est pas un membre de <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.DashCap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashCap">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashCap" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">La valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashCap" /&gt;</ph> est un <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> immuable, tel que ceux retournés par la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashOffset">
          <source>Gets or sets the distance from the start of a line to the beginning of a dash pattern.</source>
          <target state="translated">Obtient ou définit la distance entre le début d’une ligne et le début d’un modèle de tiret.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashOffset">
          <source>The distance from the start of a line to the beginning of a dash pattern.</source>
          <target state="translated">Distance entre le début d’une ligne et le début d’un modèle de tiret.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashOffset">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashOffset" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">La valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashOffset" /&gt;</ph> est un <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> immuable, tel que ceux retournés par la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashPattern">
          <source>Gets or sets an array of custom dashes and spaces.</source>
          <target state="translated">Obtient ou définit un tableau d'espaces et de tirets personnalisés.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>An array of real numbers that specifies the lengths of alternating dashes and spaces in dashed lines.</source>
          <target state="translated">Tableau de nombres réels qui spécifie la longueur des espaces et des tirets alternés dans les lignes en pointillés.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>Assigning a value other than <ph id="ph1">`null`</ph> to this property will set the <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.DashStyle&gt;</ph> property for this <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph> to <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.DashStyle.Custom&gt;</ph>.</source>
          <target state="translated">Affectation d’une valeur autre que <ph id="ph1">`null`</ph> définie pour cette propriété le <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.DashStyle&gt;</ph> propriété pour ce <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph> à <ph id="ph4">&lt;xref:System.Drawing.Drawing2D.DashStyle.Custom&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>The elements in the <ph id="ph1">`dashArray`</ph> array set the length of each dash and space in the dash pattern.</source>
          <target state="translated">Les éléments dans le <ph id="ph1">`dashArray`</ph> tableau définie la longueur de chaque tiret et espace dans le modèle de tirets.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>The first element sets the length of a dash, the second element sets the length of a space, the third element sets the length of a dash, and so on.</source>
          <target state="translated">Le premier élément définit la longueur d’un tiret, le deuxième élément définit la longueur d’un espace, le troisième élément définit la longueur d’un tiret et ainsi de suite.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>Consequently, each element should be a non-zero positive number.</source>
          <target state="translated">Par conséquent, chaque élément doit être un nombre positif différent de zéro.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>The length of each dash and space in the dash pattern is the product of the element value in the array and the width of the <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">La longueur de chaque tiret et espace dans le modèle de tirets est le produit de la valeur de l’élément dans le tableau et la largeur de la <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>The following code example demonstrates the effects of setting the <ph id="ph1">&lt;xref:System.Drawing.Pen.DashCap%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph> properties.</source>
          <target state="translated">L’exemple de code suivant montre les effets du paramètre de la <ph id="ph1">&lt;xref:System.Drawing.Pen.DashCap%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph>, et <ph id="ph3">&lt;xref:System.Drawing.Graphics.SmoothingMode%2A&gt;</ph> propriétés.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">Cet exemple est conçu pour être utilisé avec Windows Forms.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashPattern">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowPensAndSmoothingMode`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Collez le code dans un formulaire et appelez le <ph id="ph1">`ShowPensAndSmoothingMode`</ph> méthode lors du traitement du formulaire <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> événement, en passant <ph id="ph3">`e`</ph> comme <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashPattern">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashPattern" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">La valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashPattern" /&gt;</ph> est un <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> immuable, tel que ceux retournés par la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashStyle">
          <source>Gets or sets the style used for dashed lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit le style utilisé pour les lignes en pointillés dessinées avec ce <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashStyle">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.DashStyle" /&gt;</ph> that represents the style used for dashed lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.DashStyle" /&gt;</ph> qui représente le style utilisé pour les lignes en pointillés dessinées avec ce <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashStyle">
          <source>A value of <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashStyle.Custom&gt;</ph> for this property specifies that a custom pattern of dashes and spaces, defined by the <ph id="ph2">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph> property, makes up lines drawn with this <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">La valeur <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashStyle.Custom&gt;</ph> pour cette propriété spécifie qu’un modèle personnalisé de tirets et d’espaces, défini par le <ph id="ph2">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph> propriété constitue les lignes dessinées avec ce <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.DashStyle">
          <source>If the value of this property is <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashStyle.Custom&gt;</ph> and the value of the <ph id="ph2">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph> property is <ph id="ph3">`null`</ph>, the pen draws solid lines.</source>
          <target state="translated">Si la valeur de cette propriété est <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.DashStyle.Custom&gt;</ph> et la valeur de la <ph id="ph2">&lt;xref:System.Drawing.Pen.DashPattern%2A&gt;</ph> propriété est <ph id="ph3">`null`</ph>, le stylet dessine des lignes pleines.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.DashStyle">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashStyle" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">La valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.DashStyle" /&gt;</ph> est un <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> immuable, tel que ceux retournés par la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.Dispose">
          <source>Releases all resources used by this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Libère toutes les ressources utilisées par ce <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>Calling <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> allows the resources used by this <ph id="ph2">&lt;xref:System.Drawing.Brush&gt;</ph> to be reallocated for other purposes.</source>
          <target state="translated">Appel de <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> autorise les ressources utilisées par ce <ph id="ph2">&lt;xref:System.Drawing.Brush&gt;</ph> pour être réaffectés à d’autres fins.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>Call <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> when you are finished using the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Appelez la méthode <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> une fois que vous avez terminé d'utiliser <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> method leaves the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> in an unusable state.</source>
          <target state="translated">La méthode <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> rend le <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> inutilisable.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>After calling <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph>, you must release all references to the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> so the garbage collector can reclaim the memory that the <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph> was occupying.</source>
          <target state="translated">Après avoir appelé <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph>, vous devez libérer toutes les références à la <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> pour que le garbage collector puisse récupérer la mémoire qui le <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph> occupée.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>For more information, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Implementing a Dispose Method<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Pour plus d’informations, consultez <bpt id="p1">[</bpt>de nettoyage des ressources non managées<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> et <bpt id="p2">[</bpt>implémentant une méthode de suppression<ept id="p2">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>Always call <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> before you release your last reference to the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Appelez toujours <ph id="ph1">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> avant de libérer votre dernière référence à <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>Otherwise, the resources it is using will not be freed until the garbage collector calls the <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> object's <ph id="ph2">`Finalize`</ph> method.</source>
          <target state="translated">Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> de l'objet <ph id="ph2">`Finalize`</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>The following code example demonstrates the effects of setting the <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> properties, and shows how to call the <ph id="ph3">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> method for a <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">L’exemple de code suivant montre les effets du paramètre de la <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> propriétés et montre comment appeler le <ph id="ph3">&lt;xref:System.Drawing.Pen.Dispose%2A&gt;</ph> méthode pour un <ph id="ph4">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">Cet exemple est conçu pour être utilisé avec Windows Forms.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.Dispose">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowLineJoin`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Collez le code dans un formulaire et appelez le <ph id="ph1">`ShowLineJoin`</ph> méthode lors du traitement du formulaire <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> événement, en passant <ph id="ph3">`e`</ph> comme <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.EndCap">
          <source>Gets or sets the cap style used at the end of lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit le style d'extrémité utilisé à la fin des lignes dessinées avec ce <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.EndCap">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> values that represents the cap style used at the end of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Une des valeurs <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> qui représente le style d'extrémité utilisé à la fin des lignes dessinées avec ce <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.EndCap">
          <source>The following code example demonstrates the effects of setting the <ph id="ph1">&lt;xref:System.Drawing.Pen.StartCap%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Pen.EndCap%2A&gt;</ph> properties on a <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">L’exemple de code suivant montre les effets du paramètre de la <ph id="ph1">&lt;xref:System.Drawing.Pen.StartCap%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Drawing.Pen.EndCap%2A&gt;</ph> propriétés sur un <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.EndCap">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">Cet exemple est conçu pour être utilisé avec Windows Forms.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.EndCap">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowStartAndEndCaps`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Collez le code dans un formulaire et appelez le <ph id="ph1">`ShowStartAndEndCaps`</ph> méthode lors du traitement du formulaire <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> événement, en passant <ph id="ph3">`e`</ph> comme <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.EndCap">
          <source>The specified value is not a member of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph>.</source>
          <target state="translated">La valeur spécifiée n'est pas un membre de <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.EndCap">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.EndCap" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">La valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.EndCap" /&gt;</ph> est un <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> immuable, tel que ceux retournés par la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.Finalize">
          <source>Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</source>
          <target state="translated">Autorise un objet à tenter de libérer des ressources et à exécuter d'autres opérations de nettoyage avant qu'il ne soit récupéré par une opération garbage collection.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.LineJoin">
          <source>Gets or sets the join style for the ends of two consecutive lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit le style de jointure utilisé à la fin de deux lignes consécutives dessinées avec ce <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineJoin" /&gt;</ph> that represents the join style for the ends of two consecutive lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineJoin" /&gt;</ph> qui représente le style de jointure utilisé à la fin de deux lignes consécutives dessinées avec ce <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>A line join is the common area that is formed by two lines whose ends meet or overlap.</source>
          <target state="translated">Une jointure de ligne est la zone commune formée par deux lignes dont les extrémités se rencontrent ou se chevauchent.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>There are three line join styles: miter, bevel, and round.</source>
          <target state="translated">Il existe trois styles de jonction de ligne : angle aigu, en biseau et arrondie.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>When you specify a line join style for a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> object, that join style will be applied to all the connected lines in any <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> object drawn using that pen.The following illustration shows the results of the beveled line join example.</source>
          <target state="translated">Lorsque vous spécifiez un style de jointure de ligne pour un <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> ce style de jointure sera appliqué à toutes les lignes connectées dans un objet <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.GraphicsPath&gt;</ph> objet dessiné à l’aide de ce stylet. L’illustration suivante montre les résultats de l’exemple de jointure de ligne en relief.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source><bpt id="p1">![</bpt>Pens<ept id="p1">]</ept><bpt id="p2">(~/add/media/pens5.gif "</bpt>Pens<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>Stylets<ept id="p1">]</ept><bpt id="p2">(~/add/media/pens5.gif "</bpt>stylets<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>The following code example demonstrates the effects of setting the <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> properties on a <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">L’exemple de code suivant montre les effets du paramètre de la <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> propriétés sur un <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">Cet exemple est conçu pour être utilisé avec Windows Forms.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.LineJoin">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowLineJoin`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> .</source>
          <target state="translated">Collez le code dans un formulaire et appelez le <ph id="ph1">`ShowLineJoin`</ph> méthode lors du traitement du formulaire <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> événement, en passant <ph id="ph3">`e`</ph> comme <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> .</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.LineJoin">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.LineJoin" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">La valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.LineJoin" /&gt;</ph> est un <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> immuable, tel que ceux retournés par la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.MiterLimit">
          <source>Gets or sets the limit of the thickness of the join on a mitered corner.</source>
          <target state="translated">Obtient ou définit la limite d'épaisseur de la jointure sur un coin à onglet.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.MiterLimit">
          <source>The limit of the thickness of the join on a mitered corner.</source>
          <target state="translated">Limite d'épaisseur de la jointure sur un coin à onglet.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.MiterLimit">
          <source>The miter length is the distance from the intersection of the line walls on the inside of the join to the intersection of the line walls outside of the join.</source>
          <target state="translated">La longueur d’onglet est la distance entre l’intersection des parois de ligne à l’intérieur de la jointure à l’intersection des parois de ligne en dehors de la jointure.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.MiterLimit">
          <source>The miter length can be large when the angle between two lines is small.</source>
          <target state="translated">La longueur de l’onglet peut être volumineux lors de l’angle entre deux lignes est faible.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.MiterLimit">
          <source>The miter limit is the maximum allowed ratio of miter length to stroke width.</source>
          <target state="translated">La limite est le taux maximal autorisé de longueur de l’onglet à la largeur du trait.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.MiterLimit">
          <source>The default value is 10.0f.</source>
          <target state="translated">La valeur par défaut est 10.0f.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.MiterLimit">
          <source>If the miter length of the join of the intersection exceeds the limit of the join, then the join will be beveled to keep it within the limit of the join of the intersection.</source>
          <target state="translated">Si la longueur de l’onglet de la jointure de l’intersection dépasse la limite de la jointure, puis la jointure sera biseautée pour être maintenue dans la limite de la jointure de l’intersection.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.MiterLimit">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.MiterLimit" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">La valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.MiterLimit" /&gt;</ph> est un <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> immuable, tel que ceux retournés par la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>Multiplies the transformation matrix for this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> by the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">Multiplie la matrice de transformation de ce <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> par le <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> object by which to multiply the transformation matrix.</source>
          <target state="translated">Objet <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> par lequel multiplier la matrice de transformation.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>Multiplies the transformation matrix for this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> by the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph>.</source>
          <target state="translated">Multiplie la matrice de transformation de ce <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> par le <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> spécifié.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>This method prepends the multiplication matrix specified in the <ph id="ph1">`matrix`</ph> parameter to the transformation matrix for the multiplication operation.</source>
          <target state="translated">Cette méthode ajoute la matrice de multiplication spécifiée dans le <ph id="ph1">`matrix`</ph> paramètre à la matrice de transformation pour l’opération de multiplication.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, qui est un paramètre de la <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> Gestionnaire d’événements.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Crée un <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>Draws a line to the screen.</source>
          <target state="translated">Dessine une ligne à l’écran.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>Multiplies the transformation matrix of the pen by the specified matrix.</source>
          <target state="translated">Multiplie la matrice de transformation du stylet par la matrice spécifiée.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix)">
          <source>Draws a line with the transformed pen.</source>
          <target state="translated">Dessine une ligne avec le stylet transformé.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> by which to multiply the transformation matrix.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> par lequel multiplier la matrice de transformation.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The order in which to perform the multiplication operation.</source>
          <target state="translated">Ordre dans lequel effectuer l'opération de multiplication.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Multiplies the transformation matrix for this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> by the specified <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> in the specified order.</source>
          <target state="translated">Multiplie la matrice de transformation de ce <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> par le <ph id="ph2">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> spécifié dans l'ordre spécifié.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>This method uses the <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder&gt;</ph> enumeration element (either prepend or append) specified by the <ph id="ph2">`order`</ph> parameter to carry out the multiplication operation.</source>
          <target state="translated">Cette méthode utilise le <ph id="ph1">&lt;xref:System.Drawing.Drawing2D.MatrixOrder&gt;</ph> élément d’énumération (ajouté avant ou après) spécifié par le <ph id="ph2">`order`</ph> paramètre pour effectuer l’opération de multiplication.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, qui est un paramètre de la <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> Gestionnaire d’événements.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Crée un <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a line to the screen.</source>
          <target state="translated">Dessine une ligne à l’écran.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Multiplies the transformation matrix of the pen by the specified matrix.</source>
          <target state="translated">Multiplie la matrice de transformation du stylet par la matrice spécifiée.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.MultiplyTransform(System.Drawing.Drawing2D.Matrix,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a line with the transformed pen.</source>
          <target state="translated">Dessine une ligne avec le stylet transformé.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.PenType">
          <source>Gets the style of lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Obtient le style des lignes dessinées avec ce <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.PenType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PenType" /&gt;</ph> enumeration that specifies the style of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Énumération <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.PenType" /&gt;</ph> qui spécifie le style des lignes dessinées avec ce <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.PenType">
          <source>A <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> can draw solid lines, filled lines, or textured lines, depending on the style specified by a member of the <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenType&gt;</ph> enumeration.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> pouvez dessiner des lignes pleines, lignes pleines ou des lignes avec texture, selon le style spécifié par un membre de la <ph id="ph2">&lt;xref:System.Drawing.Drawing2D.PenType&gt;</ph> énumération.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ResetTransform">
          <source>Resets the geometric transformation matrix for this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> to identity.</source>
          <target state="translated">Rétablit l'identité de la matrice de transformation géométrique de ce <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, qui est un paramètre de la <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> Gestionnaire d’événements.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Crée un <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>Sets the transformation matrix of the pen to scale 2 times in the x-axis direction.</source>
          <target state="translated">Définit la matrice de transformation du stylet à l’échelle de 2 fois dans la direction de l’axe x.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>Draws a line to the screen.</source>
          <target state="translated">Dessine une ligne à l’écran.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>Resets the transformation matrix to identity.</source>
          <target state="translated">Réinitialise la matrice de transformation à l’identité.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ResetTransform">
          <source>Draws a second line to the screen.</source>
          <target state="translated">Dessine une deuxième ligne à l’écran.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>Rotates the local geometric transformation by the specified angle.</source>
          <target state="translated">Fait pivoter la transformation géométrique locale selon l'angle spécifié.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>This method prepends the rotation to the transformation.</source>
          <target state="translated">Cette méthode ajoute la rotation avant la transformation.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>The angle of rotation.</source>
          <target state="translated">Angle de rotation.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Rotates the local geometric transformation by the specified angle.</source>
          <target state="translated">Fait pivoter la transformation géométrique locale selon l'angle spécifié.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>This method prepends the rotation to the transformation.</source>
          <target state="translated">Cette méthode ajoute la rotation avant la transformation.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Because the shape of a pen is circular, a rotation does not have any visible effect unless the pen is scaled in the x- or y-axis direction.</source>
          <target state="translated">Étant donné que la forme d’un stylet est circulaire, une rotation n’a pas d’effet visible sauf si le stylet est ajusté sur l’axe x ou y.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, qui est un paramètre de la <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> Gestionnaire d’événements.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Crée un <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Draws a rectangle using the pen.</source>
          <target state="translated">Dessine un rectangle à l’aide du stylet.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Scales the pen by 2 times in the x-axis direction.</source>
          <target state="translated">Ajuste le stylet à 2 dans la direction de l’axe x.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Rotates the pen 90 degrees clockwise.</source>
          <target state="translated">Fait pivoter le stylet de 90 degrés dans le sens horaire.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single)">
          <source>Draws a second rectangle to demonstrate the difference.</source>
          <target state="translated">Dessine un deuxième rectangle pour illustrer la différence.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The angle of rotation.</source>
          <target state="translated">Angle de rotation.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> that specifies whether to append or prepend the rotation matrix.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> qui spécifie si la matrice de rotation doit être ajoutée avant ou après.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Rotates the local geometric transformation by the specified angle in the specified order.</source>
          <target state="translated">Fait pivoter la transformation géométrique locale selon l'angle et dans l'ordre spécifiés.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Because the shape of a pen is circular, a rotation does not have any visible effect unless the pen is scaled in the x- or y-axis direction.</source>
          <target state="translated">Étant donné que la forme d’un stylet est circulaire, une rotation n’a pas d’effet visible sauf si le stylet est ajusté sur l’axe x ou y.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, qui est un paramètre de la <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> Gestionnaire d’événements.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Crée une <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Scales the pen by 2 times in the x-axis direction.</source>
          <target state="translated">Ajuste le stylet à 2 dans la direction de l’axe x.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a rectangle using the pen.</source>
          <target state="translated">Dessine un rectangle à l’aide du stylet.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Rotates the pen 90 degrees clockwise.</source>
          <target state="translated">Fait pivoter le stylet de 90 degrés dans le sens horaire.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.RotateTransform(System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a second rectangle to demonstrate the difference.</source>
          <target state="translated">Dessine un deuxième rectangle pour illustrer la différence.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>Scales the local geometric transformation by the specified factors.</source>
          <target state="translated">Ajuste la transformation géométrique locale selon les facteurs spécifiés.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>This method prepends the scaling matrix to the transformation.</source>
          <target state="translated">Cette méthode ajoute la matrice de mise à l'échelle avant la transformation.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>The factor by which to scale the transformation in the x-axis direction.</source>
          <target state="translated">Facteur selon lequel la transformation est ajustée dans le sens de l'axe X.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>The factor by which to scale the transformation in the y-axis direction.</source>
          <target state="translated">Facteur selon lequel la transformation est ajustée dans le sens de l'axe Y.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>Scales the local geometric transformation by the specified factors.</source>
          <target state="translated">Ajuste la transformation géométrique locale selon les facteurs spécifiés.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>This method prepends the scaling matrix to the transformation.</source>
          <target state="translated">Cette méthode ajoute la matrice de mise à l'échelle avant la transformation.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, qui est un paramètre de la <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> Gestionnaire d’événements.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Crée un <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>Draws a rectangle using the pen.</source>
          <target state="translated">Dessine un rectangle à l’aide du stylet.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>Scales the pen by 2 times in the x-axis direction.</source>
          <target state="translated">Ajuste le stylet à 2 dans la direction de l’axe x.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single)">
          <source>Draws a second rectangle to demonstrate the difference.</source>
          <target state="translated">Dessine un deuxième rectangle pour illustrer la différence.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The factor by which to scale the transformation in the x-axis direction.</source>
          <target state="translated">Facteur selon lequel la transformation est ajustée dans le sens de l'axe X.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The factor by which to scale the transformation in the y-axis direction.</source>
          <target state="translated">Facteur selon lequel la transformation est ajustée dans le sens de l'axe Y.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> that specifies whether to append or prepend the scaling matrix.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.MatrixOrder" /&gt;</ph> qui spécifie si la matrice de mise à l'échelle doit être ajoutée avant ou après.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Scales the local geometric transformation by the specified factors in the specified order.</source>
          <target state="translated">Ajuste la transformation géométrique locale selon les facteurs et dans l'ordre spécifiés.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, qui est un paramètre de la <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> Gestionnaire d’événements.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The code performs the following actions:</source>
          <target state="translated">Le code exécute les actions suivantes :</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">Crée un <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a rectangle using the pen.</source>
          <target state="translated">Dessine un rectangle à l’aide du stylet.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Scales the pen by 2 times in the x-axis direction.</source>
          <target state="translated">Ajuste le stylet à 2 dans la direction de l’axe x.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.ScaleTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Draws a second rectangle to demonstrate the difference.</source>
          <target state="translated">Dessine un deuxième rectangle pour illustrer la différence.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> that represents the cap style to use at the beginning of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> qui représente le style d'extrémité utilisé au début des lignes dessinées avec ce <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> that represents the cap style to use at the end of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> qui représente le style d'extrémité à utiliser à la fin des lignes dessinées avec ce <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> that represents the cap style to use at the beginning or end of dashed lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> qui représente le style d'extrémité à utiliser au début ou à la fin des lignes en pointillés dessinées avec ce <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
          <source>Sets the values that determine the style of cap used to end lines drawn by this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Définit les valeurs qui déterminent le style d'extrémité utilisé à la fin des lignes dessinées par ce <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
          <source>The following code example is designed for use with Windows Forms, and it requires <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph><ph id="ph2">`e`</ph>, which is a parameter of the <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event handler.</source>
          <target state="translated">L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <ph id="ph1">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph> <ph id="ph2">`e`</ph>, qui est un paramètre de la <ph id="ph3">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> Gestionnaire d’événements.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Drawing.Pen.SetLineCap(System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.LineCap,System.Drawing.Drawing2D.DashCap)">
          <source>The code creates a <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> and sets it to draw arrow anchor caps at the beginning of lines:</source>
          <target state="translated">Le code crée un <ph id="ph1">&lt;xref:System.Drawing.Pen&gt;</ph> et définit pour dessiner des extrémités d’ancrage en flèche au début des lignes :</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.StartCap">
          <source>Gets or sets the cap style used at the beginning of lines drawn with this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit le style d'extrémité utilisé au début des lignes dessinées avec ce <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.StartCap">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> values that represents the cap style used at the beginning of lines drawn with this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Une des valeurs <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph> qui représente le style d'extrémité utilisé au début des lignes dessinées avec ce <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.StartCap">
          <source>The following code example demonstrates the effects of setting the <ph id="ph1">&lt;xref:System.Drawing.Pen.StartCap%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Pen.EndCap%2A&gt;</ph> properties on a <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">L’exemple de code suivant montre les effets du paramètre de la <ph id="ph1">&lt;xref:System.Drawing.Pen.StartCap%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Drawing.Pen.EndCap%2A&gt;</ph> propriétés sur un <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.StartCap">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">Cet exemple est conçu pour être utilisé avec Windows Forms.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.StartCap">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowStartAndEndCaps`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Collez le code dans un formulaire et appelez le <ph id="ph1">`ShowStartAndEndCaps`</ph> méthode lors du traitement du formulaire <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> événement, en passant <ph id="ph3">`e`</ph> comme <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.StartCap">
          <source>The specified value is not a member of <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph>.</source>
          <target state="translated">La valeur spécifiée n'est pas un membre de <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.LineCap" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.StartCap">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.StartCap" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">La valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.StartCap" /&gt;</ph> est un <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> immuable, tel que ceux retournés par la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Transform">
          <source>Gets or sets a copy of the geometric transformation for this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Obtient ou définit une copie de la transformation géométrique pour ce <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Transform">
          <source>A copy of the <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> that represents the geometric transformation for this <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Copie du <ph id="ph1">&lt;see cref="T:System.Drawing.Drawing2D.Matrix" /&gt;</ph> représentant la transformation géométrique pour ce <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Transform">
          <source>This property defines an elliptical shape for the pen tip.</source>
          <target state="translated">Cette propriété définit une forme elliptique pour l’extrémité du stylet.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Transform">
          <source>This ellipse is obtained from the default circular shape by applying the transformation matrix.</source>
          <target state="translated">Cette ellipse est obtenue à partir de la forme circulaire par défaut en appliquant la matrice de transformation.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Transform">
          <source>Note that the translation portion of the matrix is ignored.</source>
          <target state="translated">Notez que la partie de la traduction de la matrice est ignorée.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Transform">
          <source>Because the matrix returned and by the <ph id="ph1">&lt;xref:System.Drawing.Pen.Transform%2A&gt;</ph> property is a copy of the pen's geometric transform, you should dispose of the matrix when you no longer need it.</source>
          <target state="translated">Comme la matrice retournée et par le <ph id="ph1">&lt;xref:System.Drawing.Pen.Transform%2A&gt;</ph> propriété est une copie de la transformation du stylet géométrique, supprimez la matrice lorsque vous n’avez plus besoin.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Transform">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Transform" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">La valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Transform" /&gt;</ph> est un <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> immuable, tel que ceux retournés par la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>Translates the local geometric transformation by the specified dimensions.</source>
          <target state="translated">Effectue une translation de la transformation géométrique locale selon les dimensions spécifiées.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="T:System.Drawing.Pen">
          <source>This method prepends the translation to the transformation.</source>
          <target state="translated">Cette méthode ajoute la translation avant la transformation.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)">
          <source>The value of the translation in x.</source>
          <target state="translated">Valeur de la translation sur l'axe x.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)">
          <source>The value of the translation in y.</source>
          <target state="translated">Valeur de la translation sur l'axe y.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)">
          <source>Translates the local geometric transformation by the specified dimensions.</source>
          <target state="translated">Effectue une translation de la transformation géométrique locale selon les dimensions spécifiées.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single)">
          <source>This method prepends the translation to the transformation.</source>
          <target state="translated">Cette méthode ajoute la translation avant la transformation.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The value of the translation in x.</source>
          <target state="translated">Valeur de la translation sur l'axe x.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The value of the translation in y.</source>
          <target state="translated">Valeur de la translation sur l'axe y.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>The order (prepend or append) in which to apply the translation.</source>
          <target state="translated">Ordre (ajout au début ou à la fin) dans lequel la translation doit être appliquée.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Drawing.Pen.TranslateTransform(System.Single,System.Single,System.Drawing.Drawing2D.MatrixOrder)">
          <source>Translates the local geometric transformation by the specified dimensions in the specified order.</source>
          <target state="translated">Effectue une translation de la transformation géométrique locale selon les dimensions spécifiées dans l'ordre indiqué.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Width">
          <source>Gets or sets the width of this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, in units of the <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> object used for drawing.</source>
          <target state="translated">Obtient ou définit la largeur de ce <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, en unités de l'objet <ph id="ph2">&lt;see cref="T:System.Drawing.Graphics" /&gt;</ph> utilisé pour dessiner.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>The width of this <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</source>
          <target state="translated">Largeur de ce <ph id="ph1">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>You can access the unit of measure of the <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> object using its <ph id="ph2">&lt;xref:System.Drawing.Graphics.PageUnit%2A&gt;</ph> property.</source>
          <target state="translated">Vous pouvez accéder à l’unité de mesure de la <ph id="ph1">&lt;xref:System.Drawing.Graphics&gt;</ph> de l’objet à l’aide de son <ph id="ph2">&lt;xref:System.Drawing.Graphics.PageUnit%2A&gt;</ph> propriété.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>The unit of measure is typically pixels.</source>
          <target state="translated">L’unité de mesure est généralement des pixels.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>A <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> of 0 will result in the <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> drawing as if the <ph id="ph3">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> were 1.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> 0 entraîne le <ph id="ph2">&lt;xref:System.Drawing.Pen&gt;</ph> dessin comme si le <ph id="ph3">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> était de 1.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>The following code example demonstrates the effects of setting the <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> properties on a <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</source>
          <target state="translated">L’exemple de code suivant montre les effets du paramètre de la <ph id="ph1">&lt;xref:System.Drawing.Pen.Width%2A&gt;</ph> et <ph id="ph2">&lt;xref:System.Drawing.Pen.LineJoin%2A&gt;</ph> propriétés sur un <ph id="ph3">&lt;xref:System.Drawing.Pen&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>This example is designed to be used with Windows Forms.</source>
          <target state="translated">Cet exemple est conçu pour être utilisé avec Windows Forms.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Drawing.Pen.Width">
          <source>Paste the code into a form and call the <ph id="ph1">`ShowLineJoin`</ph> method when handling the form's <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> event, passing <ph id="ph3">`e`</ph> as <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</source>
          <target state="translated">Collez le code dans un formulaire et appelez le <ph id="ph1">`ShowLineJoin`</ph> méthode lors du traitement du formulaire <ph id="ph2">&lt;xref:System.Windows.Forms.Control.Paint&gt;</ph> événement, en passant <ph id="ph3">`e`</ph> comme <ph id="ph4">&lt;xref:System.Windows.Forms.PaintEventArgs&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="P:System.Drawing.Pen.Width">
          <source>The <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Width" /&gt;</ph> property is set on an immutable <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph>, such as those returned by the <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph> class.</source>
          <target state="translated">La valeur de la propriété <ph id="ph1">&lt;see cref="P:System.Drawing.Pen.Width" /&gt;</ph> est un <ph id="ph2">&lt;see cref="T:System.Drawing.Pen" /&gt;</ph> immuable, tel que ceux retournés par la classe <ph id="ph3">&lt;see cref="T:System.Drawing.Pens" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>