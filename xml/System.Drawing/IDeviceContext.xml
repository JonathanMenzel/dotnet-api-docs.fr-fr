<Type Name="IDeviceContext" FullName="System.Drawing.IDeviceContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a72424114ce362236d7bd2660aca57b018dcd6aa" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52918459" /></Metadata><TypeSignature Language="C#" Value="public interface IDeviceContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDeviceContext implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.IDeviceContext" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDeviceContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDeviceContext : IDisposable" />
  <TypeSignature Language="F#" Value="type IDeviceContext = interface&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="03a34-101">Définit les méthodes permettant d'obtenir et de libérer un handle de contexte de périphérique Windows existant.</span><span class="sxs-lookup"><span data-stu-id="03a34-101">Defines methods for obtaining and releasing an existing handle to a Windows device context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03a34-102">Un contexte de périphérique définit l’objet graphics pour dessiner sur un appareil basé sur Windows.</span><span class="sxs-lookup"><span data-stu-id="03a34-102">A device context defines the graphics object for drawing on a Windows-based device.</span></span> <span data-ttu-id="03a34-103">Un exemple d’une classe qui implémente le <xref:System.Drawing.IDeviceContext> interface est la <xref:System.Drawing.Graphics> classe.</span><span class="sxs-lookup"><span data-stu-id="03a34-103">An example of a class that implements the <xref:System.Drawing.IDeviceContext> interface is the <xref:System.Drawing.Graphics> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetHdc">
      <MemberSignature Language="C#" Value="public IntPtr GetHdc ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance native int GetHdc() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IDeviceContext.GetHdc" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHdc () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHdc();" />
      <MemberSignature Language="F#" Value="abstract member GetHdc : unit -&gt; nativeint" Usage="iDeviceContext.GetHdc " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="03a34-104">Retourne le handle d'un contexte de périphérique Windows.</span><span class="sxs-lookup"><span data-stu-id="03a34-104">Returns the handle to a Windows device context.</span></span></summary>
        <returns><span data-ttu-id="03a34-105"><see cref="T:System.IntPtr" /> qui représente le handle d'un contexte de périphérique.</span><span class="sxs-lookup"><span data-stu-id="03a34-105">An <see cref="T:System.IntPtr" /> representing the handle of a device context.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03a34-106"><xref:System.Drawing.IDeviceContext.GetHdc%2A> et <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> sont deux méthodes qui vous permettent d’obtenir et libérer le handle pour un appareil basé sur Windows.</span><span class="sxs-lookup"><span data-stu-id="03a34-106"><xref:System.Drawing.IDeviceContext.GetHdc%2A> and <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> are two methods that allow you to get and release the handle for a Windows-based device.</span></span> <span data-ttu-id="03a34-107">Vous devez toujours faire suivre un appel à <xref:System.Drawing.IDeviceContext.GetHdc%2A> avec un appel à <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> lorsque vous avez terminé avec le handle Windows.</span><span class="sxs-lookup"><span data-stu-id="03a34-107">You should always follow a call to <xref:System.Drawing.IDeviceContext.GetHdc%2A> with a call to <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> when you are finished with the Windows handle.</span></span>  
  
 <span data-ttu-id="03a34-108"><xref:System.Drawing.IDeviceContext.GetHdc%2A> n’est pas conçu pour obtenir des handles créés à l’aide de méthodes Windows GDI telles que `CreateDC` ou `CreateCompatibleDC`.</span><span class="sxs-lookup"><span data-stu-id="03a34-108"><xref:System.Drawing.IDeviceContext.GetHdc%2A> is not designed to obtain handles created using Windows GDI methods such as `CreateDC` or `CreateCompatibleDC`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseHdc">
      <MemberSignature Language="C#" Value="public void ReleaseHdc ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseHdc() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.IDeviceContext.ReleaseHdc" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseHdc ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseHdc();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseHdc : unit -&gt; unit" Usage="iDeviceContext.ReleaseHdc " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="03a34-109">Libère le handle d'un contexte de périphérique Windows.</span><span class="sxs-lookup"><span data-stu-id="03a34-109">Releases the handle of a Windows device context.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="03a34-110"><xref:System.Drawing.IDeviceContext.GetHdc%2A> et <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> sont deux méthodes qui vous permettent d’obtenir et libérer le handle pour un appareil basé sur Windows.</span><span class="sxs-lookup"><span data-stu-id="03a34-110"><xref:System.Drawing.IDeviceContext.GetHdc%2A> and <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> are two methods that allow you to get and release the handle for a Windows-based device.</span></span> <span data-ttu-id="03a34-111">Vous devez toujours faire suivre un appel à <xref:System.Drawing.IDeviceContext.GetHdc%2A> avec un appel à <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> lorsque vous avez terminé avec le handle Windows.</span><span class="sxs-lookup"><span data-stu-id="03a34-111">You should always follow a call to <xref:System.Drawing.IDeviceContext.GetHdc%2A> with a call to <xref:System.Drawing.IDeviceContext.ReleaseHdc%2A> when you are finished with the Windows handle.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>