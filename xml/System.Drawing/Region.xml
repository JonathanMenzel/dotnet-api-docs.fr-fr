<Type Name="Region" FullName="System.Drawing.Region">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d7ec1adf4a056425f87a11df8ba8f16afcd08e4f" /><Meta Name="ms.sourcegitcommit" Value="d40b35262cbc997b79bf76da3a39ccf59b738efc" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="12/05/2018" /><Meta Name="ms.locfileid" Value="52918004" /></Metadata><TypeSignature Language="C#" Value="public sealed class Region : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit Region extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Region" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Region&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Region sealed : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type Region = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.1</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Décrit l'intérieur d'une forme graphique composée de rectangles et de chemins d'accès. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une région est évolutive, car ses coordonnées sont spécifiées en coordonnées universelles. Toutefois, sur une surface de dessin, son intérieur est dépendante de la taille et la forme des pixels qui la représente. Une application peut utiliser des régions pour couper le résultat des opérations de dessin. Ces régions sont appelées des régions de découpage. Pour plus d’informations sur l’utilisation des régions pour le découpage, consultez [Comment : Utiliser le découpage avec une région](~/docs/framework/winforms/advanced/how-to-use-clipping-with-a-region.md).  
  
 Une application peut également utiliser des régions dans les opérations de test de positionnement, comme par exemple vérifier si un point ou un rectangle entre en intersection avec une région. Pour plus d’informations sur l’utilisation de régions pour le test de positionnement, consultez [Comment : Utilisez tests d’atteinte avec une région](~/docs/framework/winforms/advanced/how-to-use-hit-testing-with-a-region.md).  
  
 Une application peut remplir une région à l’aide de la <xref:System.Drawing.Graphics.FillRegion%2A?displayProperty=nameWithType> (méthode) et un <xref:System.Drawing.Brush> objet.  
  
   
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements.  L’exemple de code montre comment utiliser le <xref:System.Drawing.Drawing2D.RegionData.Data%2A> à partir d’un <xref:System.Drawing.Drawing2D.RegionData> objet à définir le <xref:System.Drawing.Drawing2D.RegionData.Data%2A> pour un autre <xref:System.Drawing.Drawing2D.RegionData>.  
  
 [!code-cpp[System.Drawing.MiscExamples#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#13)]
 [!code-csharp[System.Drawing.MiscExamples#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#13)]
 [!code-vb[System.Drawing.MiscExamples#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#13)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.Rectangle" />
    <altmember cref="T:System.Drawing.Drawing2D.GraphicsPath" />
    <related type="Article" href="https://msdn.microsoft.com/library/7809295b-870f-4107-a8b5-8386c298acd5">Utilisation de régions</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise un nouveau <see cref="T:System.Drawing.Region" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Region ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Region();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialise un nouveau <see cref="T:System.Drawing.Region" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur initialise un nouveau <xref:System.Drawing.Region> avec un intérieur infini.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Region (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.#ctor(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Region(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Region : System.Drawing.Drawing2D.GraphicsPath -&gt; System.Drawing.Region" Usage="new System.Drawing.Region path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path"><see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> qui définit le nouveau <see cref="T:System.Drawing.Region" />.</param>
        <summary>Initialise un nouveau <see cref="T:System.Drawing.Region" /> avec le <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode crée un nouveau <xref:System.Drawing.Region> avec un <xref:System.Drawing.Drawing2D.GraphicsPath>. La nouvelle région est définie comme étant l’intérieur de la <xref:System.Drawing.Drawing2D.GraphicsPath> spécifié par le `path` paramètre.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="path" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Region (System.Drawing.Drawing2D.RegionData rgnData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Drawing2D.RegionData rgnData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.#ctor(System.Drawing.Drawing2D.RegionData)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rgnData As RegionData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Region(System::Drawing::Drawing2D::RegionData ^ rgnData);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Region : System.Drawing.Drawing2D.RegionData -&gt; System.Drawing.Region" Usage="new System.Drawing.Region rgnData" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rgnData" Type="System.Drawing.Drawing2D.RegionData" />
      </Parameters>
      <Docs>
        <param name="rgnData"><see cref="T:System.Drawing.Drawing2D.RegionData" /> qui définit l’intérieur du nouveau <see cref="T:System.Drawing.Region" />.</param>
        <summary>Initialise un nouveau <see cref="T:System.Drawing.Region" /> à partir des données spécifiées.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode crée un nouveau <xref:System.Drawing.Region> avec un intérieur défini par un existant <xref:System.Drawing.Region>. Le `rgnData` paramètre est un tableau qui contient la définition d’un existant <xref:System.Drawing.Region>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="rgnData" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Region (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.#ctor(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Region(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Region : System.Drawing.Rectangle -&gt; System.Drawing.Region" Usage="new System.Drawing.Region rect" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">Structure <see cref="T:System.Drawing.Rectangle" /> qui définit l'intérieur du nouveau <see cref="T:System.Drawing.Region" />.</param>
        <summary>Initialise un nouveau <see cref="T:System.Drawing.Region" /> à partir de la structure <see cref="T:System.Drawing.Rectangle" /> spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode crée un nouveau <xref:System.Drawing.Region> avec un intérieur rectangulaire. L’intérieur est défini par le `rect` paramètre.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Drawing.Region.%23ctor%2A> constructeur et <xref:System.Drawing.Region.MakeEmpty%2A> (méthode). Cet exemple est conçu pour être utilisé avec Windows Forms. Créer un formulaire et collez-y le code suivant. Appelez le `FillEmptyRegion` méthode sous la forme <xref:System.Windows.Forms.Control.Paint> méthode de gestion des événements, en passant `e` comme <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.MiscExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.MiscExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.MiscExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Region (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.#ctor(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Region(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Region : System.Drawing.RectangleF -&gt; System.Drawing.Region" Usage="new System.Drawing.Region rect" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">Structure <see cref="T:System.Drawing.RectangleF" /> qui définit l'intérieur du nouveau <see cref="T:System.Drawing.Region" />.</param>
        <summary>Initialise un nouveau <see cref="T:System.Drawing.Region" /> à partir de la structure <see cref="T:System.Drawing.RectangleF" /> spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode crée un nouveau <xref:System.Drawing.Region> avec un intérieur rectangulaire. L’intérieur est défini par le `rect` paramètre.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Drawing.Region Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Region Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Region" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Region ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Drawing.Region" Usage="region.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Region</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée une copie exacte de <see cref="T:System.Drawing.Region" />.</summary>
        <returns><see cref="T:System.Drawing.Region" /> créé par cette méthode.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Complement">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Met à jour cet objet <see cref="T:System.Drawing.Region" /> pour contenir la partie de la structure <see cref="T:System.Drawing.RectangleF" /> spécifiée qui ne croise pas cet objet <see cref="T:System.Drawing.Region" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Complement">
      <MemberSignature Language="C#" Value="public void Complement (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complement(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Complement(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complement (path As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complement(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberSignature Language="F#" Value="member this.Complement : System.Drawing.Drawing2D.GraphicsPath -&gt; unit" Usage="region.Complement path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path"><see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> pour compléter ce <see cref="T:System.Drawing.Region" />.</param>
        <summary>Met à jour ce <see cref="T:System.Drawing.Region" /> pour contenir la partie du <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> spécifié qui ne définit pas d’intersection avec ce <see cref="T:System.Drawing.Region" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
-   Crée un rectangle et dessine à l’écran en noir.  
  
-   Crée un deuxième rectangle qui croise le premier et le dessine à l’écran en rouge.  
  
-   Crée une région à l’aide du premier rectangle.  
  
-   Crée un <xref:System.Drawing.Drawing2D.GraphicsPath>et ajoute le deuxième rectangle à celui-ci.  
  
-   Obtient le complément de la région lorsqu’elles sont combinées avec le <xref:System.Drawing.Drawing2D.GraphicsPath>.  
  
-   Remplit la zone complémentaire en bleu et dessine à l’écran.  
  
 Notez que la zone de la <xref:System.Drawing.Drawing2D.GraphicsPath> qui ne croise pas la région est colorée en bleue.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicRegionExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="path" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Complement">
      <MemberSignature Language="C#" Value="public void Complement (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complement(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Complement(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complement (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complement(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.Complement : System.Drawing.Rectangle -&gt; unit" Usage="region.Complement rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">Structure <see cref="T:System.Drawing.Rectangle" /> pour compléter cet objet <see cref="T:System.Drawing.Region" />.</param>
        <summary>Met à jour cet objet <see cref="T:System.Drawing.Region" /> pour contenir la partie de la structure <see cref="T:System.Drawing.Rectangle" /> spécifiée qui ne croise pas cet objet <see cref="T:System.Drawing.Region" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Pour obtenir un exemple, consultez le <xref:System.Drawing.Region.Complement%28System.Drawing.RectangleF%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Complement">
      <MemberSignature Language="C#" Value="public void Complement (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complement(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Complement(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complement (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complement(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.Complement : System.Drawing.RectangleF -&gt; unit" Usage="region.Complement rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">Structure <see cref="T:System.Drawing.RectangleF" /> pour compléter cet objet <see cref="T:System.Drawing.Region" />.</param>
        <summary>Met à jour cet objet <see cref="T:System.Drawing.Region" /> pour contenir la partie de la structure <see cref="T:System.Drawing.RectangleF" /> spécifiée qui ne croise pas cet objet <see cref="T:System.Drawing.Region" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
-   Crée un rectangle et dessine à l’écran en noir.  
  
-   Crée un deuxième rectangle qui croise le premier et le dessine à l’écran en rouge.  
  
-   Crée une région à l’aide du premier rectangle.  
  
-   Obtient le complément de cette région combinée avec le deuxième rectangle.  
  
-   Remplit la zone complémentaire en bleu et dessine à l’écran.  
  
 Notez que la zone du deuxième rectangle qui ne croise pas la région est colorée en bleue.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicRegionExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Complement">
      <MemberSignature Language="C#" Value="public void Complement (System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complement(class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Complement(System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complement(System::Drawing::Region ^ region);" />
      <MemberSignature Language="F#" Value="member this.Complement : System.Drawing.Region -&gt; unit" Usage="region.Complement region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="region">Objet <see cref="T:System.Drawing.Region" /> pour compléter cet objet <see cref="T:System.Drawing.Region" />.</param>
        <summary>Met à jour ce <see cref="T:System.Drawing.Region" /> pour contenir la partie du <see cref="T:System.Drawing.Region" /> spécifié qui ne définit pas d’intersection avec ce <see cref="T:System.Drawing.Region" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
-   Crée un rectangle et dessine à l’écran en noir  
  
-   Crée un deuxième rectangle qui croise le premier et le dessine à l’écran en rouge.  
  
-   Crée une région à l’aide du premier rectangle et crée une deuxième région à l’aide de la deuxième rectangle.  
  
-   Obtient le complément de cette première région lorsqu’elles sont combinées avec la deuxième région.  
  
-   Remplit la zone complémentaire en bleu et dessine à l’écran.  
  
 Notez que la zone de la deuxième région qui ne croise pas la première région est colorée en bleue.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicRegionExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="region" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="region.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libère toutes les ressources utilisées par ce <see cref="T:System.Drawing.Region" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appel <xref:System.Drawing.Region.Dispose%2A> autorise les ressources utilisées par ce <xref:System.Drawing.Region> d’être réaffectées à d’autres fins.  
  
 Appelez la méthode <xref:System.Drawing.Region.Dispose%2A> une fois que vous avez terminé d'utiliser <xref:System.Drawing.Region>. La méthode <xref:System.Drawing.Region.Dispose%2A> rend le <xref:System.Drawing.Region> inutilisable. Après avoir appelé <xref:System.Drawing.Region.Dispose%2A>, vous devez libérer toutes les références à la <xref:System.Drawing.Region> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.Drawing.Region> occupée. Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentation d’une méthode Dispose](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Appelez toujours <xref:System.Drawing.Region.Dispose%2A> avant de libérer votre dernière référence à <xref:System.Drawing.Region>. Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <xref:System.Drawing.Region> de l'objet `Finalize`.  
  
   
  
## Examples  
 L’exemple de code suivant montre le <xref:System.Drawing.Region.%23ctor%2A> constructeur et le <xref:System.Drawing.Region.Exclude%2A> et <xref:System.Drawing.Region.Dispose%2A> méthodes.  
  
 Cet exemple est conçu pour être utilisé avec Windows Forms. Collez le code dans un formulaire et appelez le `FillRegionExcludingPath` méthode lors du traitement du formulaire <xref:System.Windows.Forms.Control.Paint> événement, en passant `e` comme <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.GraphicsProperties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.GraphicsProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CS/form1.cs#1)]
 [!code-vb[System.Drawing.GraphicsProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Drawing.Region region, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(class System.Drawing.Region region, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Equals(System.Drawing.Region,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Drawing::Region ^ region, System::Drawing::Graphics ^ g);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Drawing.Region * System.Drawing.Graphics -&gt; bool" Usage="region.Equals (region, g)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="region"><see cref="T:System.Drawing.Region" /> à tester.</param>
        <param name="g"><see cref="T:System.Drawing.Graphics" /> qui représente une surface de dessin.</param>
        <summary>Teste si le <see cref="T:System.Drawing.Region" /> spécifié est identique à cet objet <see cref="T:System.Drawing.Region" /> sur la surface de dessin spécifiée.</summary>
        <returns><see langword="true" /> si l'intérieur de la région est identique à l'intérieur de cette région lorsque la transformation associée au paramètre <paramref name="g" /> est appliquée ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La transformation actuelle du contexte graphique `g` est utilisée pour calculer les intérieurs de régions sur la surface de dessin.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="g" /> ou <paramref name="region" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Exclude">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Met à jour cet objet <see cref="T:System.Drawing.Region" /> avec la partie de son intérieur qui ne croise pas la structure <see cref="T:System.Drawing.Rectangle" /> spécifiée.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Exclude">
      <MemberSignature Language="C#" Value="public void Exclude (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Exclude(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Exclude(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Exclude (path As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Exclude(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberSignature Language="F#" Value="member this.Exclude : System.Drawing.Drawing2D.GraphicsPath -&gt; unit" Usage="region.Exclude path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path"><see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> à exclure de cet objet <see cref="T:System.Drawing.Region" />.</param>
        <summary>Met à jour cet objet <see cref="T:System.Drawing.Region" /> pour contenir uniquement la partie de son intérieur qui ne croise pas le <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre le <xref:System.Drawing.Region.%23ctor%2A> constructeur et le <xref:System.Drawing.Region.Exclude%2A> et <xref:System.Drawing.Region.Dispose%2A> méthodes.  
  
 Cet exemple est conçu pour être utilisé avec Windows Forms. Collez le code dans un formulaire et appelez le `FillRegionExcludingPath` méthode lors du traitement du formulaire <xref:System.Windows.Forms.Control.Paint> événement, en passant `e` comme <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.GraphicsProperties#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.GraphicsProperties#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/CS/form1.cs#1)]
 [!code-vb[System.Drawing.GraphicsProperties#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.GraphicsProperties/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="path" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Exclude">
      <MemberSignature Language="C#" Value="public void Exclude (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Exclude(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Exclude(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Exclude (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Exclude(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.Exclude : System.Drawing.Rectangle -&gt; unit" Usage="region.Exclude rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">Structure <see cref="T:System.Drawing.Rectangle" /> à exclure de cet objet <see cref="T:System.Drawing.Region" />.</param>
        <summary>Met à jour cet objet <see cref="T:System.Drawing.Region" /> pour contenir uniquement la partie de son intérieur qui ne croise pas la structure <see cref="T:System.Drawing.Rectangle" /> spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Pour obtenir un exemple de code, consultez le <xref:System.Drawing.Region.Exclude%28System.Drawing.RectangleF%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exclude">
      <MemberSignature Language="C#" Value="public void Exclude (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Exclude(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Exclude(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Exclude (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Exclude(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.Exclude : System.Drawing.RectangleF -&gt; unit" Usage="region.Exclude rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">Structure <see cref="T:System.Drawing.RectangleF" /> à exclure de cet objet <see cref="T:System.Drawing.Region" />.</param>
        <summary>Met à jour cet objet <see cref="T:System.Drawing.Region" /> pour contenir uniquement la partie de son intérieur qui ne croise pas la structure <see cref="T:System.Drawing.RectangleF" /> spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
-   Crée un rectangle et dessine à l’écran en noir  
  
-   Crée un deuxième rectangle qui croise le premier et le dessine à l’écran en rouge.  
  
-   Crée une région à l’aide du premier rectangle.  
  
-   Obtient la zone non exclue de la région lorsqu’elles sont combinées avec le deuxième rectangle.  
  
-   Remplit la zone non exclue en bleu et dessine à l’écran.  
  
 Notez que la zone de la zone de la région qui ne croise pas le rectangle est colorée en bleue.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicRegionExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Exclude">
      <MemberSignature Language="C#" Value="public void Exclude (System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Exclude(class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Exclude(System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Exclude(System::Drawing::Region ^ region);" />
      <MemberSignature Language="F#" Value="member this.Exclude : System.Drawing.Region -&gt; unit" Usage="region.Exclude region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="region"><see cref="T:System.Drawing.Region" /> à exclure de cet objet <see cref="T:System.Drawing.Region" />.</param>
        <summary>Met à jour cet objet <see cref="T:System.Drawing.Region" /> pour contenir uniquement la partie de son intérieur qui ne croise pas le <see cref="T:System.Drawing.Region" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Pour plus d’exemples de code, consultez le <xref:System.Drawing.Region.Exclude%28System.Drawing.RectangleF%29> et <xref:System.Drawing.Region.Complement%28System.Drawing.Region%29> méthodes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="region" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~Region ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!Region ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="region.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Autorise un objet à tenter de libérer des ressources et à exécuter d'autres opérations de nettoyage avant qu'il ne soit récupéré par une opération garbage collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FromHrgn">
      <MemberSignature Language="C#" Value="public static System.Drawing.Region FromHrgn (IntPtr hrgn);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Region FromHrgn(native int hrgn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.FromHrgn(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHrgn (hrgn As IntPtr) As Region" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Region ^ FromHrgn(IntPtr hrgn);" />
      <MemberSignature Language="F#" Value="static member FromHrgn : nativeint -&gt; System.Drawing.Region" Usage="System.Drawing.Region.FromHrgn hrgn" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Region</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hrgn" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hrgn">Handle d'un <see cref="T:System.Drawing.Region" /> existant.</param>
        <summary>Initialise une nouvelle <see cref="T:System.Drawing.Region" /> d'un handle vers la région [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] existante spécifiée.</summary>
        <returns>Nouvelle <see cref="T:System.Drawing.Region" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode crée un nouveau <xref:System.Drawing.Region> avec un intérieur défini par existant <xref:System.Drawing.Region> référencé par le handle dans le `hrgn` paramètre.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour accéder au code non managé. Énumération associée <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF GetBounds (System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF GetBounds(class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.GetBounds(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds (g As Graphics) As RectangleF" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::RectangleF GetBounds(System::Drawing::Graphics ^ g);" />
      <MemberSignature Language="F#" Value="member this.GetBounds : System.Drawing.Graphics -&gt; System.Drawing.RectangleF" Usage="region.GetBounds g" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="g"><see cref="T:System.Drawing.Graphics" /> sur lequel cet objet <see cref="T:System.Drawing.Region" /> est dessiné.</param>
        <summary>Obtient une structure <see cref="T:System.Drawing.RectangleF" /> qui représente un rectangle qui lie cet objet <see cref="T:System.Drawing.Region" /> sur la surface de dessin d'un objet <see cref="T:System.Drawing.Graphics" />.</summary>
        <returns>Structure <see cref="T:System.Drawing.RectangleF" /> qui représente un rectangle englobant pour cet objet <see cref="T:System.Drawing.Region" /> sur la surface de dessin spécifiée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La transformation actuelle du contexte graphique est utilisée pour calculer l’intérieur de la région sur la surface de dessin. Le rectangle englobant n’est pas toujours le plus petit rectangle englobant possible en fonction de la transformation actuelle.  
  
   
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
-   Crée un <xref:System.Drawing.Drawing2D.GraphicsPath> et lui ajoute une ellipse.  
  
-   Remplit le chemin d’accès en bleu et dessine à l’écran.  
  
-   Crée une région qui utilise le <xref:System.Drawing.Drawing2D.GraphicsPath>.  
  
-   Obtient la zone non exclue de la région lorsqu’elles sont combinées avec le deuxième rectangle.  
  
-   Obtient le rectangle englobant pour la région et dessine à l’écran en rouge.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicRegionExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="g" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHrgn">
      <MemberSignature Language="C#" Value="public IntPtr GetHrgn (System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHrgn(class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.GetHrgn(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHrgn (g As Graphics) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHrgn(System::Drawing::Graphics ^ g);" />
      <MemberSignature Language="F#" Value="member this.GetHrgn : System.Drawing.Graphics -&gt; nativeint" Usage="region.GetHrgn g" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="g"><see cref="T:System.Drawing.Graphics" /> sur lequel cet objet <see cref="T:System.Drawing.Region" /> est dessiné.</param>
        <summary>Retourne un handle Windows à cet objet <see cref="T:System.Drawing.Region" /> dans le contexte graphique spécifié.</summary>
        <returns>Handle Windows de cet objet <see cref="T:System.Drawing.Region" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous êtes chargé d’appeler le <xref:System.Drawing.Region.ReleaseHrgn%2A> méthode pour libérer la mémoire utilisée par le [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] objet de zone. 
      
   ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="g" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRegionData">
      <MemberSignature Language="C#" Value="public System.Drawing.Drawing2D.RegionData GetRegionData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Drawing2D.RegionData GetRegionData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.GetRegionData" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRegionData () As RegionData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Drawing2D::RegionData ^ GetRegionData();" />
      <MemberSignature Language="F#" Value="member this.GetRegionData : unit -&gt; System.Drawing.Drawing2D.RegionData" Usage="region.GetRegionData " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Drawing2D.RegionData</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne un <see cref="T:System.Drawing.Drawing2D.RegionData" /> qui représente les informations qui décrivent cet objet <see cref="T:System.Drawing.Region" />.</summary>
        <returns><see cref="T:System.Drawing.Drawing2D.RegionData" /> qui représente les informations qui décrivent cet objet <see cref="T:System.Drawing.Region" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Drawing.Region> classe vous permet de définir une forme personnalisée. La forme peut être constituée de lignes, des polygones et des courbes. <xref:System.Drawing.Region.GetRegionData%2A> Décrit la forme contenue dans ce <xref:System.Drawing.Region>.  
  
   
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements.  L’exemple de code montre comment utiliser le <xref:System.Drawing.Drawing2D.RegionData.Data%2A> à partir d’un <xref:System.Drawing.Drawing2D.RegionData> objet à définir le <xref:System.Drawing.Drawing2D.RegionData.Data%2A> pour un autre <xref:System.Drawing.Drawing2D.RegionData>.  
  
 [!code-cpp[System.Drawing.MiscExamples#13](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#13)]
 [!code-csharp[System.Drawing.MiscExamples#13](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#13)]
 [!code-vb[System.Drawing.MiscExamples#13](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRegionScans">
      <MemberSignature Language="C#" Value="public System.Drawing.RectangleF[] GetRegionScans (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.RectangleF[] GetRegionScans(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.GetRegionScans(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Drawing::RectangleF&gt; ^ GetRegionScans(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.GetRegionScans : System.Drawing.Drawing2D.Matrix -&gt; System.Drawing.RectangleF[]" Usage="region.GetRegionScans matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.RectangleF[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><see cref="T:System.Drawing.Drawing2D.Matrix" /> qui représente une transformation géométrique à appliquer à la région.</param>
        <summary>Retourne un tableau de structures <see cref="T:System.Drawing.RectangleF" /> qui se rapprochent de cet objet <see cref="T:System.Drawing.Region" /> après que la transformation de matrice spécifiée a été appliquée.</summary>
        <returns>Tableau de structures <see cref="T:System.Drawing.RectangleF" /> qui se rapprochent de cet objet <see cref="T:System.Drawing.Region" /> après que la transformation de matrice spécifiée a été appliquée.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="matrix" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Intersect">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Met à jour ce <see cref="T:System.Drawing.Region" /> sur l’intersection entre celui-ci et le <see cref="T:System.Drawing.Region" /> spécifié.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public void Intersect (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Intersect(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Intersect(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Intersect (path As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Intersect(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberSignature Language="F#" Value="member this.Intersect : System.Drawing.Drawing2D.GraphicsPath -&gt; unit" Usage="region.Intersect path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path">Le <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> en intersection avec ce <see cref="T:System.Drawing.Region" />.</param>
        <summary>Met à jour ce <see cref="T:System.Drawing.Region" /> sur l’intersection entre celui-ci et le <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Pour plus d’exemples de code, consultez le <xref:System.Drawing.RectangleF.Intersect%28System.Drawing.RectangleF%29?displayProperty=nameWithType> et <xref:System.Drawing.Region.Complement%28System.Drawing.Drawing2D.GraphicsPath%29> méthodes.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public void Intersect (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Intersect(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Intersect(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Intersect (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Intersect(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.Intersect : System.Drawing.Rectangle -&gt; unit" Usage="region.Intersect rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">La structure <see cref="T:System.Drawing.Rectangle" /> en intersection avec cette <see cref="T:System.Drawing.Region" />.</param>
        <summary>Met à jour cette <see cref="T:System.Drawing.Region" /> sur l’intersection entre celui-ci et la structure <see cref="T:System.Drawing.Rectangle" /> spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Pour obtenir un exemple de code, consultez le <xref:System.Drawing.Region.Intersect%28System.Drawing.RectangleF%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public void Intersect (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Intersect(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Intersect(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Intersect (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Intersect(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.Intersect : System.Drawing.RectangleF -&gt; unit" Usage="region.Intersect rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">La structure <see cref="T:System.Drawing.RectangleF" /> en intersection avec cette <see cref="T:System.Drawing.Region" />.</param>
        <summary>Met à jour cette <see cref="T:System.Drawing.Region" /> sur l’intersection entre celui-ci et la structure <see cref="T:System.Drawing.RectangleF" /> spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
-   Crée le premier rectangle et dessine à l’écran en noir.  
  
-   Crée le deuxième rectangle et dessine à l’écran en rouge.  
  
-   Crée une région à partir du premier rectangle.  
  
-   Obtient la zone d’intersection de la région lorsqu’elles sont combinées avec le deuxième rectangle.  
  
-   Remplit la zone d’intersection en bleu et dessine à l’écran.  
  
 Notez que seule la zone superposée pour la région et le rectangle est bleu.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicRegionExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public void Intersect (System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Intersect(class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Intersect(System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Intersect(System::Drawing::Region ^ region);" />
      <MemberSignature Language="F#" Value="member this.Intersect : System.Drawing.Region -&gt; unit" Usage="region.Intersect region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="region">Le <see cref="T:System.Drawing.Region" /> en intersection avec ce <see cref="T:System.Drawing.Region" />.</param>
        <summary>Met à jour ce <see cref="T:System.Drawing.Region" /> sur l’intersection entre celui-ci et le <see cref="T:System.Drawing.Region" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Pour plus d’exemples de code, consultez le <xref:System.Drawing.Region.Intersect%28System.Drawing.RectangleF%29> et <xref:System.Drawing.Region.Complement%28System.Drawing.Drawing2D.GraphicsPath%29> (méthode)`.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty (System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsEmpty(class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsEmpty(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsEmpty (g As Graphics) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsEmpty(System::Drawing::Graphics ^ g);" />
      <MemberSignature Language="F#" Value="member this.IsEmpty : System.Drawing.Graphics -&gt; bool" Usage="region.IsEmpty g" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="g"><see cref="T:System.Drawing.Graphics" /> qui représente une surface de dessin.</param>
        <summary>Teste si cet objet <see cref="T:System.Drawing.Region" /> possède un intérieur vide sur la surface de dessin spécifiée.</summary>
        <returns><see langword="true" /> si l'intérieur de cet objet <see cref="T:System.Drawing.Region" /> est vide lorsque la transformation associée à <paramref name="g" /> est appliquée ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La transformation actuelle du contexte graphique `g` est utilisée pour calculer l’intérieur de la région sur la surface de dessin.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="g" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsInfinite">
      <MemberSignature Language="C#" Value="public bool IsInfinite (System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInfinite(class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsInfinite(System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInfinite (g As Graphics) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInfinite(System::Drawing::Graphics ^ g);" />
      <MemberSignature Language="F#" Value="member this.IsInfinite : System.Drawing.Graphics -&gt; bool" Usage="region.IsInfinite g" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="g"><see cref="T:System.Drawing.Graphics" /> qui représente une surface de dessin.</param>
        <summary>Teste si cet objet <see cref="T:System.Drawing.Region" /> possède un intérieur infini sur la surface de dessin spécifiée.</summary>
        <returns><see langword="true" /> si l'intérieur de cet objet <see cref="T:System.Drawing.Region" /> est infini lorsque la transformation associée à <paramref name="g" /> est appliquée ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La transformation actuelle du contexte graphique `g` est utilisée pour calculer l’intérieur de la région sur la surface de dessin.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="g" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsVisible">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Teste si <see cref="T:System.Drawing.Region" /> contient le rectangle spécifié.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Point -&gt; bool" Usage="region.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="point">Structure <see cref="T:System.Drawing.Point" /> à tester.</param>
        <summary>Teste si la structure <see cref="T:System.Drawing.Point" /> spécifiée est contenue dans cet objet <see cref="T:System.Drawing.Region" />.</summary>
        <returns><see langword="true" /> lorsque cet objet <see cref="T:System.Drawing.Region" /> contient <paramref name="point" /> ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Pour obtenir un exemple de code, consultez le <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Drawing.PointF)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (point As PointF) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF point);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.PointF -&gt; bool" Usage="region.IsVisible point" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
      </Parameters>
      <Docs>
        <param name="point">Structure <see cref="T:System.Drawing.PointF" /> à tester.</param>
        <summary>Teste si la structure <see cref="T:System.Drawing.PointF" /> spécifiée est contenue dans cet objet <see cref="T:System.Drawing.Region" />.</summary>
        <returns><see langword="true" /> lorsque cet objet <see cref="T:System.Drawing.Region" /> contient <paramref name="point" /> ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Pour obtenir un exemple de code, consultez le <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (rect As Rectangle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Rectangle -&gt; bool" Usage="region.IsVisible rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">Structure <see cref="T:System.Drawing.Rectangle" /> à tester.</param>
        <summary>Teste si une partie de la structure <see cref="T:System.Drawing.Rectangle" /> spécifiée est contenue dans cet objet <see cref="T:System.Drawing.Region" />.</summary>
        <returns>Cette méthode retourne <see langword="true" /> si une partie de <paramref name="rect" /> est contenue dans cet objet <see cref="T:System.Drawing.Region" /> ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Pour obtenir un exemple de code, consultez le <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (rect As RectangleF) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.RectangleF -&gt; bool" Usage="region.IsVisible rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">Structure <see cref="T:System.Drawing.RectangleF" /> à tester.</param>
        <summary>Teste si une partie de la structure <see cref="T:System.Drawing.RectangleF" /> spécifiée est contenue dans cet objet <see cref="T:System.Drawing.Region" />.</summary>
        <returns><see langword="true" /> si cet objet <see cref="T:System.Drawing.Region" /> contient une partie de <paramref name="rect" /> ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
-   Crée le premier rectangle et dessine à l’écran en bleu.  
  
-   Crée le deuxième rectangle et dessine à l’écran en rouge.  
  
-   Crée une région à partir du premier rectangle.  
  
-   Détermine si une partie du rectangle croise la région.  
  
-   Affiche le `true` ou `false` résultat sur l’écran.  
  
 Notez que le rectangle entre en intersection avec la région, donc le résultat est `true`.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicRegionExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Point point, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Point point, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Drawing.Point,System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Point point, System::Drawing::Graphics ^ g);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Point * System.Drawing.Graphics -&gt; bool" Usage="region.IsVisible (point, g)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.Point" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="point">Structure <see cref="T:System.Drawing.Point" /> à tester.</param>
        <param name="g"><see cref="T:System.Drawing.Graphics" /> qui représente un contexte graphique.</param>
        <summary>Teste si la structure <see cref="T:System.Drawing.Point" /> spécifiée est contenue dans cet objet <see cref="T:System.Drawing.Region" /> si elle est dessinée à l'aide du <see cref="T:System.Drawing.Graphics" /> spécifié.</summary>
        <returns><see langword="true" /> lorsque cet objet <see cref="T:System.Drawing.Region" /> contient <paramref name="point" /> ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La transformation actuelle du contexte graphique est utilisée pour calculer l’intérieur de la région et les coordonnées du point sur la surface de dessin.  
  
   
  
## Examples  
 Pour obtenir un exemple de code, consultez le <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.PointF point, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.PointF point, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Drawing.PointF,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (point As PointF, g As Graphics) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::PointF point, System::Drawing::Graphics ^ g);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.PointF * System.Drawing.Graphics -&gt; bool" Usage="region.IsVisible (point, g)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Drawing.PointF" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="point">Structure <see cref="T:System.Drawing.PointF" /> à tester.</param>
        <param name="g"><see cref="T:System.Drawing.Graphics" /> qui représente un contexte graphique.</param>
        <summary>Teste si la structure <see cref="T:System.Drawing.PointF" /> spécifiée est contenue dans cet objet <see cref="T:System.Drawing.Region" /> si elle est dessinée à l'aide du <see cref="T:System.Drawing.Graphics" /> spécifié.</summary>
        <returns><see langword="true" /> lorsque cet objet <see cref="T:System.Drawing.Region" /> contient <paramref name="point" /> ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La transformation actuelle du contexte graphique est utilisée pour calculer l’intérieur de la région et les coordonnées du point sur la surface de dessin.  
  
   
  
## Examples  
 Pour obtenir un exemple de code, consultez le <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.Rectangle rect, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.Rectangle rect, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Drawing.Rectangle,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (rect As Rectangle, g As Graphics) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::Rectangle rect, System::Drawing::Graphics ^ g);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.Rectangle * System.Drawing.Graphics -&gt; bool" Usage="region.IsVisible (rect, g)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="rect">Structure <see cref="T:System.Drawing.Rectangle" /> à tester.</param>
        <param name="g"><see cref="T:System.Drawing.Graphics" /> qui représente un contexte graphique.</param>
        <summary>Teste si une partie de la structure <see cref="T:System.Drawing.Rectangle" /> spécifiée est contenue dans cet objet <see cref="T:System.Drawing.Region" /> lorsqu'elle est dessinée à l'aide du <see cref="T:System.Drawing.Graphics" /> spécifié.</summary>
        <returns><see langword="true" /> si cet objet <see cref="T:System.Drawing.Region" /> contient une partie de <paramref name="rect" /> ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La transformation actuelle du contexte graphique est utilisée pour calculer l’intérieur de la région et les coordonnées du rectangle sur la surface de dessin.  
  
   
  
## Examples  
 Pour obtenir un exemple de code, consultez le <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (System.Drawing.RectangleF rect, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(valuetype System.Drawing.RectangleF rect, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Drawing.RectangleF,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (rect As RectangleF, g As Graphics) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(System::Drawing::RectangleF rect, System::Drawing::Graphics ^ g);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : System.Drawing.RectangleF * System.Drawing.Graphics -&gt; bool" Usage="region.IsVisible (rect, g)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="rect">Structure <see cref="T:System.Drawing.RectangleF" /> à tester.</param>
        <param name="g"><see cref="T:System.Drawing.Graphics" /> qui représente un contexte graphique.</param>
        <summary>Teste si une partie de la structure <see cref="T:System.Drawing.RectangleF" /> spécifiée est contenue dans cet objet <see cref="T:System.Drawing.Region" /> lorsqu'elle est dessinée à l'aide du <see cref="T:System.Drawing.Graphics" /> spécifié.</summary>
        <returns><see langword="true" /> lorsque cet objet <see cref="T:System.Drawing.Region" /> contient <paramref name="rect" /> ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La transformation actuelle du contexte graphique est utilisée pour calculer l’intérieur de la région et les coordonnées du rectangle sur la surface de dessin.  
  
   
  
## Examples  
 Pour obtenir un exemple de code, consultez le <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single -&gt; bool" Usage="region.IsVisible (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">Coordonnée x du point à tester.</param>
        <param name="y">Coordonnée y du point à tester.</param>
        <summary>Teste si <see cref="T:System.Drawing.Region" /> contient le point spécifié.</summary>
        <returns><see langword="true" /> si le point spécifié est contenu dans cet objet <see cref="T:System.Drawing.Region" /> ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Pour obtenir un exemple de code, consultez le <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Integer, y As Integer, g As Graphics) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y, System::Drawing::Graphics ^ g);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int * System.Drawing.Graphics -&gt; bool" Usage="region.IsVisible (x, y, g)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">Coordonnée x du point à tester.</param>
        <param name="y">Coordonnée y du point à tester.</param>
        <param name="g"><see cref="T:System.Drawing.Graphics" /> qui représente un contexte graphique.</param>
        <summary>Teste si le point spécifié est contenu dans cet objet <see cref="T:System.Drawing.Region" /> lorsqu'il est dessiné à l'aide de l'objet <see cref="T:System.Drawing.Graphics" /> spécifié.</summary>
        <returns><see langword="true" /> si le point spécifié est contenu dans cet objet <see cref="T:System.Drawing.Region" /> ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La transformation actuelle du contexte graphique est utilisée pour calculer l’intérieur de la région et les coordonnées du point sur la surface de dessin.  
  
   
  
## Examples  
 Pour obtenir un exemple de code, consultez le <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single, g As Graphics) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y, System::Drawing::Graphics ^ g);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single * System.Drawing.Graphics -&gt; bool" Usage="region.IsVisible (x, y, g)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">Coordonnée x du point à tester.</param>
        <param name="y">Coordonnée y du point à tester.</param>
        <param name="g"><see cref="T:System.Drawing.Graphics" /> qui représente un contexte graphique.</param>
        <summary>Teste si le point spécifié est contenu dans cet objet <see cref="T:System.Drawing.Region" /> lorsqu'il est dessiné à l'aide du <see cref="T:System.Drawing.Graphics" /> spécifié.</summary>
        <returns><see langword="true" /> si le point spécifié est contenu dans cet objet <see cref="T:System.Drawing.Region" /> ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La transformation actuelle du contexte graphique est utilisée pour calculer l’intérieur de la région et les coordonnées du point sur la surface de dessin.  
  
   
  
## Examples  
 Pour obtenir un exemple de code, consultez le <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Integer, y As Integer, width As Integer, height As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y, int width, int height);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int * int * int -&gt; bool" Usage="region.IsVisible (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Coordonnée x du coin supérieur gauche du rectangle à tester.</param>
        <param name="y">Coordonnée y du coin supérieur gauche du rectangle à tester.</param>
        <param name="width">Largeur du rectangle à tester.</param>
        <param name="height">Hauteur du rectangle à tester.</param>
        <summary>Teste si une partie du rectangle spécifié est contenue dans cet objet <see cref="T:System.Drawing.Region" />.</summary>
        <returns><see langword="true" /> si une partie du rectangle spécifié est contenue dans cet objet <see cref="T:System.Drawing.Region" /> ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Pour obtenir un exemple de code, consultez le <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y, float width, float height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y, float32 width, float32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single, width As Single, height As Single) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y, float width, float height);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single * single * single -&gt; bool" Usage="region.IsVisible (x, y, width, height)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="x">Coordonnée x du coin supérieur gauche du rectangle à tester.</param>
        <param name="y">Coordonnée y du coin supérieur gauche du rectangle à tester.</param>
        <param name="width">Largeur du rectangle à tester.</param>
        <param name="height">Hauteur du rectangle à tester.</param>
        <summary>Teste si une partie du rectangle spécifié est contenue dans cet objet <see cref="T:System.Drawing.Region" />.</summary>
        <returns><see langword="true" /> si une partie du rectangle spécifié est contenue dans cet objet <see cref="T:System.Drawing.Region" /> ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Pour obtenir un exemple de code, consultez le <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (int x, int y, int width, int height, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(int32 x, int32 y, int32 width, int32 height, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Int32,System.Int32,System.Int32,System.Int32,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Integer, y As Integer, width As Integer, height As Integer, g As Graphics) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(int x, int y, int width, int height, System::Drawing::Graphics ^ g);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : int * int * int * int * System.Drawing.Graphics -&gt; bool" Usage="region.IsVisible (x, y, width, height, g)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">Coordonnée x du coin supérieur gauche du rectangle à tester.</param>
        <param name="y">Coordonnée y du coin supérieur gauche du rectangle à tester.</param>
        <param name="width">Largeur du rectangle à tester.</param>
        <param name="height">Hauteur du rectangle à tester.</param>
        <param name="g"><see cref="T:System.Drawing.Graphics" /> qui représente un contexte graphique.</param>
        <summary>Teste si une partie du rectangle spécifié est contenue dans cet objet <see cref="T:System.Drawing.Region" /> lorsqu'elle est dessinée à l'aide du <see cref="T:System.Drawing.Graphics" /> spécifié.</summary>
        <returns><see langword="true" /> si une partie du rectangle spécifié est contenue dans cet objet <see cref="T:System.Drawing.Region" /> ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La transformation actuelle du contexte graphique est utilisée pour calculer l’intérieur de la région et les coordonnées du rectangle sur la surface de dessin.  
  
   
  
## Examples  
 Pour obtenir un exemple de code, consultez le <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsVisible">
      <MemberSignature Language="C#" Value="public bool IsVisible (float x, float y, float width, float height, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsVisible(float32 x, float32 y, float32 width, float32 height, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.IsVisible(System.Single,System.Single,System.Single,System.Single,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsVisible (x As Single, y As Single, width As Single, height As Single, g As Graphics) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsVisible(float x, float y, float width, float height, System::Drawing::Graphics ^ g);" />
      <MemberSignature Language="F#" Value="member this.IsVisible : single * single * single * single * System.Drawing.Graphics -&gt; bool" Usage="region.IsVisible (x, y, width, height, g)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Single" />
        <Parameter Name="y" Type="System.Single" />
        <Parameter Name="width" Type="System.Single" />
        <Parameter Name="height" Type="System.Single" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="x">Coordonnée x du coin supérieur gauche du rectangle à tester.</param>
        <param name="y">Coordonnée y du coin supérieur gauche du rectangle à tester.</param>
        <param name="width">Largeur du rectangle à tester.</param>
        <param name="height">Hauteur du rectangle à tester.</param>
        <param name="g"><see cref="T:System.Drawing.Graphics" /> qui représente un contexte graphique.</param>
        <summary>Teste si une partie du rectangle spécifié est contenue dans cet objet <see cref="T:System.Drawing.Region" /> lorsqu'elle est dessinée à l'aide du <see cref="T:System.Drawing.Graphics" /> spécifié.</summary>
        <returns><see langword="true" /> si une partie du rectangle spécifié est contenue dans cet objet <see cref="T:System.Drawing.Region" /> ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La transformation actuelle du contexte graphique est utilisée pour calculer l’intérieur de la région et les coordonnées du rectangle sur la surface de dessin.  
  
   
  
## Examples  
 Pour obtenir un exemple de code, consultez le <xref:System.Drawing.Region.IsVisible%28System.Drawing.RectangleF%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeEmpty">
      <MemberSignature Language="C#" Value="public void MakeEmpty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeEmpty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.MakeEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeEmpty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeEmpty();" />
      <MemberSignature Language="F#" Value="member this.MakeEmpty : unit -&gt; unit" Usage="region.MakeEmpty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialise cet objet <see cref="T:System.Drawing.Region" /> avec un intérieur vide.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Drawing.Region.%23ctor%2A> constructeur et <xref:System.Drawing.Region.MakeEmpty%2A> (méthode). Cet exemple est conçu pour être utilisé avec Windows Forms. Créer un formulaire et collez-y le code suivant. Appelez le `FillEmptyRegion` méthode sous la forme <xref:System.Windows.Forms.Control.Paint> méthode de gestion des événements, en passant `e` comme <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.MiscExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.MiscExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.MiscExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MakeInfinite">
      <MemberSignature Language="C#" Value="public void MakeInfinite ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeInfinite() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.MakeInfinite" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeInfinite ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeInfinite();" />
      <MemberSignature Language="F#" Value="member this.MakeInfinite : unit -&gt; unit" Usage="region.MakeInfinite " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialise cet objet <see cref="T:System.Drawing.Region" /> avec un intérieur infini.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L'exemple de code suivant illustre l'utilisation de la méthode <xref:System.Drawing.Region.MakeInfinite%2A>. Cet exemple est conçu pour être utilisé avec Windows Forms. Créer un formulaire et collez-y le code suivant. Appelez le `FillEmptyRegion` méthode sous la forme <xref:System.Windows.Forms.Control.Paint> méthode de gestion des événements, en passant `e` comme <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.MiscExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.MiscExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.MiscExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReleaseHrgn">
      <MemberSignature Language="C#" Value="public void ReleaseHrgn (IntPtr regionHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReleaseHrgn(native int regionHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.ReleaseHrgn(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReleaseHrgn (regionHandle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReleaseHrgn(IntPtr regionHandle);" />
      <MemberSignature Language="F#" Value="member this.ReleaseHrgn : nativeint -&gt; unit" Usage="region.ReleaseHrgn regionHandle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionHandle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="regionHandle">Handle de <see cref="T:System.Drawing.Region" />.</param>
        <summary>Libère le handle de <see cref="T:System.Drawing.Region" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="regionHandle" /> a la valeur <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">Pour accéder au code non managé. Énumération associée <see cref="T:System.Security.Permissions.SecurityPermissionFlag" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Drawing.Drawing2D.Matrix matrix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(class System.Drawing.Drawing2D.Matrix matrix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Transform(System.Drawing.Drawing2D.Matrix)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Drawing::Drawing2D::Matrix ^ matrix);" />
      <MemberSignature Language="F#" Value="member this.Transform : System.Drawing.Drawing2D.Matrix -&gt; unit" Usage="region.Transform matrix" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="matrix" Type="System.Drawing.Drawing2D.Matrix" />
      </Parameters>
      <Docs>
        <param name="matrix"><see cref="T:System.Drawing.Drawing2D.Matrix" /> par lequel transformer cet objet <see cref="T:System.Drawing.Region" />.</param>
        <summary>Transforme cet objet <see cref="T:System.Drawing.Region" /> en <see cref="T:System.Drawing.Drawing2D.Matrix" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
-   Crée un rectangle et dessine à l’écran en bleu.  
  
-   Crée une zone du rectangle.  
  
-   Crée une matrice de transformation et lui affecte la valeur de 45 degrés.  
  
-   Applique la transformation à la région.  
  
-   Remplit la région transformée en rouge et dessine à l’écran en rouge.  
  
 Notez que le rectangle rouge a pivoté de 45 degrés par rapport au rectangle d’origine, indiqué en bleu.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.ClassicRegionExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="matrix" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Translate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Décale les coordonnées de cet objet <see cref="T:System.Drawing.Region" /> de la valeur spécifiée.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (int dx, int dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(int32 dx, int32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Translate(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (dx As Integer, dy As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(int dx, int dy);" />
      <MemberSignature Language="F#" Value="member this.Translate : int * int -&gt; unit" Usage="region.Translate (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Int32" />
        <Parameter Name="dy" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dx">Valeur de l'offset (décalage horizontal) de cet objet <see cref="T:System.Drawing.Region" />.</param>
        <param name="dy">Valeur de l'offset (décalage vertical) de cet objet <see cref="T:System.Drawing.Region" />.</param>
        <summary>Décale les coordonnées de cet objet <see cref="T:System.Drawing.Region" /> de la valeur spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
-   Crée un rectangle et dessine à l’écran en bleu.  
  
-   Crée une zone du rectangle.  
  
-   Applique la translation à la région.  
  
-   Remplit la région convertie en rouge et dessine celle-ci à l’écran en rouge.  
  
 Notez que le rectangle rouge est décalé vers le bas et vers la droite du rectangle d’origine, indiqué en bleu.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.ClassicRegionExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Translate">
      <MemberSignature Language="C#" Value="public void Translate (float dx, float dy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Translate(float32 dx, float32 dy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Translate(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Translate (dx As Single, dy As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Translate(float dx, float dy);" />
      <MemberSignature Language="F#" Value="member this.Translate : single * single -&gt; unit" Usage="region.Translate (dx, dy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dx" Type="System.Single" />
        <Parameter Name="dy" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="dx">Valeur de l'offset (décalage horizontal) de cet objet <see cref="T:System.Drawing.Region" />.</param>
        <param name="dy">Valeur de l'offset (décalage vertical) de cet objet <see cref="T:System.Drawing.Region" />.</param>
        <summary>Décale les coordonnées de cet objet <see cref="T:System.Drawing.Region" /> de la valeur spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Pour obtenir un exemple de code, consultez le <xref:System.Drawing.Region.Translate%28System.Single%2CSystem.Single%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Union">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Met à jour cet objet <see cref="T:System.Drawing.Region" /> avec l'union de celui-ci et du <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> spécifié.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Union(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Union (path As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberSignature Language="F#" Value="member this.Union : System.Drawing.Drawing2D.GraphicsPath -&gt; unit" Usage="region.Union path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path"><see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> à unir avec cet objet <see cref="T:System.Drawing.Region" />.</param>
        <summary>Met à jour cet objet <see cref="T:System.Drawing.Region" /> avec l'union de celui-ci et du <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Pour obtenir un exemple de code, consultez le <xref:System.Drawing.Region.Union%28System.Drawing.RectangleF%29> et <xref:System.Drawing.Region.Complement%28System.Drawing.Drawing2D.GraphicsPath%29> méthodes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="path" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Union(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Union (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.Union : System.Drawing.Rectangle -&gt; unit" Usage="region.Union rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">Structure <see cref="T:System.Drawing.Rectangle" /> à unir avec cet objet <see cref="T:System.Drawing.Region" />.</param>
        <summary>Met à jour cet objet <see cref="T:System.Drawing.Region" /> avec l'union de celui-ci et de la structure <see cref="T:System.Drawing.Rectangle" /> spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Pour obtenir un exemple de code, consultez le <xref:System.Drawing.Region.Union%28System.Drawing.RectangleF%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Union(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Union (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.Union : System.Drawing.RectangleF -&gt; unit" Usage="region.Union rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">Structure <see cref="T:System.Drawing.RectangleF" /> à unir avec cet objet <see cref="T:System.Drawing.Region" />.</param>
        <summary>Met à jour cet objet <see cref="T:System.Drawing.Region" /> avec l'union de celui-ci et de la structure <see cref="T:System.Drawing.RectangleF" /> spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`. Le code exécute les actions suivantes :  
  
-   Crée le premier rectangle et dessine à l’écran en noir.  
  
-   Crée un deuxième rectangle et dessine à l’écran en rouge.  
  
-   Crée une région à l’aide du premier rectangle.  
  
-   Obtient la zone d’union pour `myRegion` lorsqu’elles sont combinées avec `complementRect`.  
  
-   Remplit le remplit la zone d’union en bleu et dessine à l’écran.  
  
 Notez que les deux rectangles sont remplis en bleu, y compris la zone de superposition.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#11](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#11)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#11)]
 [!code-vb[System.Drawing.ClassicRegionExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public void Union (System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Union(class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Union(System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Union(System::Drawing::Region ^ region);" />
      <MemberSignature Language="F#" Value="member this.Union : System.Drawing.Region -&gt; unit" Usage="region.Union region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="region"><see cref="T:System.Drawing.Region" /> à unir avec cet objet <see cref="T:System.Drawing.Region" />.</param>
        <summary>Met à jour cet objet <see cref="T:System.Drawing.Region" /> avec l'union de celui-ci et du <see cref="T:System.Drawing.Region" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Pour obtenir un exemple de code, consultez le <xref:System.Drawing.Region.Union%28System.Drawing.RectangleF%29> et <xref:System.Drawing.Region.Complement%28System.Drawing.Drawing2D.GraphicsPath%29> (méthode).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="region" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Xor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Met à jour cet objet <see cref="T:System.Drawing.Region" /> avec l'union moins l'intersection de celui-ci et de l'objet <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> spécifié.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public void Xor (System.Drawing.Drawing2D.GraphicsPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Xor(class System.Drawing.Drawing2D.GraphicsPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Xor(System.Drawing.Drawing2D.GraphicsPath)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Xor (path As GraphicsPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Xor(System::Drawing::Drawing2D::GraphicsPath ^ path);" />
      <MemberSignature Language="F#" Value="member this.Xor : System.Drawing.Drawing2D.GraphicsPath -&gt; unit" Usage="region.Xor path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Drawing.Drawing2D.GraphicsPath" />
      </Parameters>
      <Docs>
        <param name="path"><see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> à <see cref="Overload:System.Drawing.Region.Xor" /> avec cet objet <see cref="T:System.Drawing.Region" />.</param>
        <summary>Met à jour cet objet <see cref="T:System.Drawing.Region" /> avec l'union moins l'intersection de celui-ci et du <see cref="T:System.Drawing.Drawing2D.GraphicsPath" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Pour obtenir un exemple de code, consultez le <xref:System.Drawing.Region.Xor%28System.Drawing.RectangleF%29> et <xref:System.Drawing.Region.Complement%28System.Drawing.Drawing2D.GraphicsPath%29> méthodes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="path" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public void Xor (System.Drawing.Rectangle rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Xor(valuetype System.Drawing.Rectangle rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Xor(System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Xor (rect As Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Xor(System::Drawing::Rectangle rect);" />
      <MemberSignature Language="F#" Value="member this.Xor : System.Drawing.Rectangle -&gt; unit" Usage="region.Xor rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rect">Structure <see cref="T:System.Drawing.Rectangle" /> à <see cref="Overload:System.Drawing.Region.Xor" /> avec cet objet <see cref="T:System.Drawing.Region" />.</param>
        <summary>Met à jour cet objet <see cref="T:System.Drawing.Region" /> avec l'union moins l'intersection de celui-ci et de la structure <see cref="T:System.Drawing.Rectangle" /> spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Pour obtenir un exemple de code, consultez le <xref:System.Drawing.Region.Xor%28System.Drawing.RectangleF%29> (méthode).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public void Xor (System.Drawing.RectangleF rect);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Xor(valuetype System.Drawing.RectangleF rect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Xor(System.Drawing.RectangleF)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Xor (rect As RectangleF)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Xor(System::Drawing::RectangleF rect);" />
      <MemberSignature Language="F#" Value="member this.Xor : System.Drawing.RectangleF -&gt; unit" Usage="region.Xor rect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
      </Parameters>
      <Docs>
        <param name="rect">Structure <see cref="T:System.Drawing.RectangleF" /> à <see cref="M:System.Drawing.Region.Xor(System.Drawing.Drawing2D.GraphicsPath)" /> avec cet objet <see cref="T:System.Drawing.Region" />.</param>
        <summary>Met à jour cet objet <see cref="T:System.Drawing.Region" /> avec l'union moins l'intersection de celui-ci et de la structure <see cref="T:System.Drawing.RectangleF" /> spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
-   Crée le premier rectangle et dessine à l’écran en noir.  
  
-   Crée un deuxième rectangle et dessine à l’écran en rouge.  
  
-   Crée une région à l’aide du premier rectangle.  
  
-   Obtient le <xref:System.Drawing.Region.Xor%2A> zone pour `myRegion` lorsqu’elles sont combinées avec `complementRect`.  
  
-   Remplit le <xref:System.Drawing.Region.Xor%2A> zone en bleu et dessine à l’écran.  
  
 Notez que les deux rectangles sont remplis en bleu, à l’exception de la zone de superposition.  
  
 [!code-cpp[System.Drawing.ClassicRegionExamples#12](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CPP/form1.cpp#12)]
 [!code-csharp[System.Drawing.ClassicRegionExamples#12](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/CS/form1.cs#12)]
 [!code-vb[System.Drawing.ClassicRegionExamples#12](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicRegionExamples/VB/form1.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Xor">
      <MemberSignature Language="C#" Value="public void Xor (System.Drawing.Region region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Xor(class System.Drawing.Region region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Region.Xor(System.Drawing.Region)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Xor(System::Drawing::Region ^ region);" />
      <MemberSignature Language="F#" Value="member this.Xor : System.Drawing.Region -&gt; unit" Usage="region.Xor region" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.1</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Drawing.Region" />
      </Parameters>
      <Docs>
        <param name="region"><see cref="T:System.Drawing.Region" /> à <see cref="Overload:System.Drawing.Region.Xor" /> avec cet objet <see cref="T:System.Drawing.Region" />.</param>
        <summary>Met à jour cet objet <see cref="T:System.Drawing.Region" /> avec l'union moins l'intersection de celui-ci et du <see cref="T:System.Drawing.Region" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Pour obtenir un exemple de code, consultez le <xref:System.Drawing.Region.Xor%28System.Drawing.RectangleF%29> et <xref:System.Drawing.Region.Complement%28System.Drawing.Drawing2D.GraphicsPath%29> méthodes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="region" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>