<Type Name="BufferedGraphicsContext" FullName="System.Drawing.BufferedGraphicsContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2505cc4bca381dc53178fdaa930e0e1c184112e1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36340535" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class BufferedGraphicsContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BufferedGraphicsContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.BufferedGraphicsContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BufferedGraphicsContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class BufferedGraphicsContext sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type BufferedGraphicsContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="349f1-101">Fournit des méthodes permettant de créer des mémoires tampons de graphiques qui peuvent être utilisées pour le mécanisme de double tampon.</span>
      <span class="sxs-lookup">
        <span data-stu-id="349f1-101">Provides methods for creating graphics buffers that can be used for double buffering.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="349f1-102">La <xref:System.Drawing.BufferedGraphicsContext> classe vous permet d’implémenter le mécanisme de double tampon personnalisé pour vos graphiques.</span><span class="sxs-lookup"><span data-stu-id="349f1-102">The <xref:System.Drawing.BufferedGraphicsContext> class allows you to implement custom double buffering for your graphics.</span></span> <span data-ttu-id="349f1-103">Les graphiques qui utilisent le mécanisme de double tampon réduire ou éliminer le scintillement provoqué par le rafraîchissement du dessin une surface d’affichage.</span><span class="sxs-lookup"><span data-stu-id="349f1-103">Graphics that use double buffering can reduce or eliminate flicker that is caused by redrawing a display surface.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="349f1-104">La façon la plus simple d’utiliser le mécanisme de double tampon consiste à définir le <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> contrôler l’indicateur de style sur un contrôle à l’aide de la <xref:System.Windows.Forms.Control.SetStyle%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="349f1-104">The simplest way to use double buffering is to set the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control style flag on a control using the <xref:System.Windows.Forms.Control.SetStyle%2A> method.</span></span> <span data-ttu-id="349f1-105">Définition de la <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> indicateur de styles de contrôle pour un contrôle redirige toute la peinture du contrôle via une mémoire tampon de graphiques par défaut, sans requérir de code supplémentaire.</span><span class="sxs-lookup"><span data-stu-id="349f1-105">Setting the <xref:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer> control styles flag for a control redirects all painting for the control through a default graphics buffer, without requiring any additional code.</span></span> <span data-ttu-id="349f1-106">Cet indicateur est défini `true` par défaut.</span><span class="sxs-lookup"><span data-stu-id="349f1-106">This flag is set to `true` by default.</span></span>  
  
 <span data-ttu-id="349f1-107">La <xref:System.Drawing.BufferedGraphicsContext> classe fournit des méthodes pour créer et configurer une mémoire tampon de graphiques.</span><span class="sxs-lookup"><span data-stu-id="349f1-107">The <xref:System.Drawing.BufferedGraphicsContext> class provides methods for creating and configuring a graphics buffer.</span></span> <span data-ttu-id="349f1-108">Le <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> méthode crée un <xref:System.Drawing.BufferedGraphics>, qui est un wrapper pour une mémoire tampon de graphiques qui fournit également des méthodes que vous pouvez utiliser pour écrire dans la mémoire tampon et restituer son contenu sur un périphérique de sortie.</span><span class="sxs-lookup"><span data-stu-id="349f1-108">The <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method creates a <xref:System.Drawing.BufferedGraphics>, which is a wrapper for a graphics buffer that also provides methods you can use to write to the buffer and render its contents to an output device.</span></span>  
  
 <span data-ttu-id="349f1-109">Vous pouvez récupérer le <xref:System.Drawing.BufferedGraphicsContext> pour le domaine d’application actuel à partir de la méthode statique <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="349f1-109">You can retrieve the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain from the static <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="349f1-110">Pour les applications gourmandes en ressources graphiques telles que l’animation, vous pouvez créer une dédiée <xref:System.Drawing.BufferedGraphicsContext> en utilisant le constructeur, mais la plupart des applications le <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> propriété seront suffisante.</span><span class="sxs-lookup"><span data-stu-id="349f1-110">For graphically intensive applications such as animation, you can create a dedicated <xref:System.Drawing.BufferedGraphicsContext> using the constructor, but for most applications the <xref:System.Drawing.BufferedGraphicsManager.Current%2A?displayProperty=nameWithType> property will be sufficient.</span></span>  
  
 <span data-ttu-id="349f1-111">Pour plus d’informations sur le dessin des graphiques mis en mémoire tampon et la mise en mémoire tampon des implémentations personnalisées, consultez [Double Buffered Graphics](~/docs/framework/winforms/advanced/double-buffered-graphics.md) et [Comment : gérer manuellement mis en mémoire tampon des graphiques](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md).</span><span class="sxs-lookup"><span data-stu-id="349f1-111">For more information on drawing buffered graphics and custom buffering implementations, see [Double Buffered Graphics](~/docs/framework/winforms/advanced/double-buffered-graphics.md) and [How to: Manually Manage Buffered Graphics](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="349f1-112">L’exemple de code suivant montre comment acquérir la <xref:System.Drawing.BufferedGraphicsContext> pour le domaine d’application actuel.</span><span class="sxs-lookup"><span data-stu-id="349f1-112">The following code example demonstrates how to acquire the <xref:System.Drawing.BufferedGraphicsContext> for the current application domain.</span></span> <span data-ttu-id="349f1-113">Ce code fait partie d’un exemple plus complet fourni pour la <xref:System.Drawing.BufferedGraphics> classe.</span><span class="sxs-lookup"><span data-stu-id="349f1-113">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#1)]
 [!code-csharp[BufferingExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#1)]
 [!code-vb[BufferingExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Drawing.BufferedGraphics" />
    <altmember cref="T:System.Drawing.BufferedGraphicsManager" />
    <altmember cref="F:System.Windows.Forms.ControlStyles.OptimizedDoubleBuffer" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BufferedGraphicsContext ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BufferedGraphicsContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="349f1-114">Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.BufferedGraphicsContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="349f1-114">Initializes a new instance of the <see cref="T:System.Drawing.BufferedGraphicsContext" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="349f1-115">Pour les applications gourmandes en ressources graphiques telles que l’animation, vous pouvez parfois améliorer les performances en utilisant une dédiée <xref:System.Drawing.BufferedGraphicsContext> au lieu de l’instance par défaut fournie par le <xref:System.Drawing.BufferedGraphicsManager>.</span><span class="sxs-lookup"><span data-stu-id="349f1-115">For graphically intensive applications such as animation, you can sometimes improve performance by using a dedicated <xref:System.Drawing.BufferedGraphicsContext> instead of the default instance provided by the <xref:System.Drawing.BufferedGraphicsManager>.</span></span> <span data-ttu-id="349f1-116">Cela vous permet de créer et gérer les mémoires tampon de graphiques individuellement.</span><span class="sxs-lookup"><span data-stu-id="349f1-116">This allows you to create and manage graphics buffers individually.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="349f1-117">Vous devez toujours appeler <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> lorsque vous avez terminé à l’aide d’une dédiée <xref:System.Drawing.BufferedGraphicsContext>.</span><span class="sxs-lookup"><span data-stu-id="349f1-117">You should always call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> when you finish using a dedicated <xref:System.Drawing.BufferedGraphicsContext>.</span></span>  
  
 <span data-ttu-id="349f1-118">Pour plus d’informations sur les mémoires tampons de graphiques dédiées, consultez [Comment : gérer manuellement mis en mémoire tampon des graphiques](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md).</span><span class="sxs-lookup"><span data-stu-id="349f1-118">For more information about dedicated graphics buffers, see [How to: Manually Manage Buffered Graphics](~/docs/framework/winforms/advanced/how-to-manually-manage-buffered-graphics.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Allocate">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="349f1-119">Crée une mémoire tampon de graphiques.</span>
          <span class="sxs-lookup">
            <span data-stu-id="349f1-119">Creates a graphics buffer.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Allocate">
      <MemberSignature Language="C#" Value="public System.Drawing.BufferedGraphics Allocate (System.Drawing.Graphics targetGraphics, System.Drawing.Rectangle targetRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.BufferedGraphics Allocate(class System.Drawing.Graphics targetGraphics, valuetype System.Drawing.Rectangle targetRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Allocate(System.Drawing.Graphics,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Allocate (targetGraphics As Graphics, targetRectangle As Rectangle) As BufferedGraphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::BufferedGraphics ^ Allocate(System::Drawing::Graphics ^ targetGraphics, System::Drawing::Rectangle targetRectangle);" />
      <MemberSignature Language="F#" Value="member this.Allocate : System.Drawing.Graphics * System.Drawing.Rectangle -&gt; System.Drawing.BufferedGraphics" Usage="bufferedGraphicsContext.Allocate (targetGraphics, targetRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.BufferedGraphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetGraphics" Type="System.Drawing.Graphics" />
        <Parameter Name="targetRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="targetGraphics">
          <span data-ttu-id="349f1-120">
            <see cref="T:System.Drawing.Graphics" /> pour correspondre au format pixel de la nouvelle mémoire tampon.</span>
          <span class="sxs-lookup">
            <span data-stu-id="349f1-120">The <see cref="T:System.Drawing.Graphics" /> to match the pixel format for the new buffer to.</span>
          </span>
        </param>
        <param name="targetRectangle">
          <span data-ttu-id="349f1-121">
            <see cref="T:System.Drawing.Rectangle" /> indiquant la taille de la mémoire tampon à créer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="349f1-121">A <see cref="T:System.Drawing.Rectangle" /> indicating the size of the buffer to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="349f1-122">Crée une mémoire tampon de graphiques de la taille spécifiée à l'aide du format pixel du <see cref="T:System.Drawing.Graphics" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="349f1-122">Creates a graphics buffer of the specified size using the pixel format of the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="349f1-123">
            <see cref="T:System.Drawing.BufferedGraphics" /> qui peut être utilisé pour dessiner dans une mémoire tampon des dimensions spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="349f1-123">A <see cref="T:System.Drawing.BufferedGraphics" /> that can be used to draw to a buffer of the specified dimensions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="349f1-124">Lorsque vous appelez le <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> méthode avec un rectangle dont la taille dépasse la valeur de la <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> propriété, une valeur temporaire <xref:System.Drawing.BufferedGraphicsContext> est créé pour allouer la mémoire tampon et de fournir un contexte temporaire pour la mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="349f1-124">When you call the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer.</span></span> <span data-ttu-id="349f1-125">La nouvelle <xref:System.Drawing.BufferedGraphicsContext> est différente de la <xref:System.Drawing.BufferedGraphicsContext> pour l’application de domaine et il est supprimé automatiquement lorsque le <xref:System.Drawing.BufferedGraphics> retourné par la <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> méthode est supprimée.</span><span class="sxs-lookup"><span data-stu-id="349f1-125">The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method is disposed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="349f1-126">L’exemple de code suivant illustre la création d’une mémoire tampon de graphiques à l’aide de la <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="349f1-126">The following code example demonstrates creating a graphics buffer using the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method.</span></span> <span data-ttu-id="349f1-127">Ce code fait partie d’un exemple plus complet fourni pour la <xref:System.Drawing.BufferedGraphics> classe.</span><span class="sxs-lookup"><span data-stu-id="349f1-127">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#3)]
 [!code-csharp[BufferingExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#3)]
 [!code-vb[BufferingExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.BufferedGraphics" />
        <altmember cref="T:System.Drawing.Graphics" />
        <altmember cref="T:System.Drawing.Rectangle" />
      </Docs>
    </Member>
    <Member MemberName="Allocate">
      <MemberSignature Language="C#" Value="public System.Drawing.BufferedGraphics Allocate (IntPtr targetDC, System.Drawing.Rectangle targetRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.BufferedGraphics Allocate(native int targetDC, valuetype System.Drawing.Rectangle targetRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Allocate(System.IntPtr,System.Drawing.Rectangle)" />
      <MemberSignature Language="VB.NET" Value="Public Function Allocate (targetDC As IntPtr, targetRectangle As Rectangle) As BufferedGraphics" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::BufferedGraphics ^ Allocate(IntPtr targetDC, System::Drawing::Rectangle targetRectangle);" />
      <MemberSignature Language="F#" Value="member this.Allocate : nativeint * System.Drawing.Rectangle -&gt; System.Drawing.BufferedGraphics" Usage="bufferedGraphicsContext.Allocate (targetDC, targetRectangle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.BufferedGraphics</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetDC" Type="System.IntPtr" />
        <Parameter Name="targetRectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="targetDC">
          <span data-ttu-id="349f1-128">
            <see cref="T:System.IntPtr" /> pour qu'un contexte de périphérique (Device Context) corresponde au format pixel de la nouvelle mémoire tampon.</span>
          <span class="sxs-lookup">
            <span data-stu-id="349f1-128">An <see cref="T:System.IntPtr" /> to a device context to match the pixel format of the new buffer to.</span>
          </span>
        </param>
        <param name="targetRectangle">
          <span data-ttu-id="349f1-129">
            <see cref="T:System.Drawing.Rectangle" /> indiquant la taille de la mémoire tampon à créer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="349f1-129">A <see cref="T:System.Drawing.Rectangle" /> indicating the size of the buffer to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="349f1-130">Crée une mémoire tampon de graphiques de la taille spécifiée à l'aide du format pixel du <see cref="T:System.Drawing.Graphics" /> spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="349f1-130">Creates a graphics buffer of the specified size using the pixel format of the specified <see cref="T:System.Drawing.Graphics" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="349f1-131">
            <see cref="T:System.Drawing.BufferedGraphics" /> qui peut être utilisé pour dessiner dans une mémoire tampon des dimensions spécifiées.</span>
          <span class="sxs-lookup">
            <span data-stu-id="349f1-131">A <see cref="T:System.Drawing.BufferedGraphics" /> that can be used to draw to a buffer of the specified dimensions.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="349f1-132">Lorsque vous appelez le <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> méthode avec un rectangle dont la taille dépasse la valeur de la <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> propriété, une valeur temporaire <xref:System.Drawing.BufferedGraphicsContext> est créé pour allouer la mémoire tampon et de fournir un contexte temporaire pour la mémoire tampon.</span><span class="sxs-lookup"><span data-stu-id="349f1-132">When you call the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method with a rectangle whose size exceeds the value of the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> property, a temporary <xref:System.Drawing.BufferedGraphicsContext> is created to allocate the buffer and provide a temporary context for the buffer.</span></span> <span data-ttu-id="349f1-133">La nouvelle <xref:System.Drawing.BufferedGraphicsContext> est différente de la <xref:System.Drawing.BufferedGraphicsContext> pour l’application de domaine et il est supprimé automatiquement lorsque le <xref:System.Drawing.BufferedGraphics> retourné par la <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> méthode est supprimée.</span><span class="sxs-lookup"><span data-stu-id="349f1-133">The new <xref:System.Drawing.BufferedGraphicsContext> is distinct from the <xref:System.Drawing.BufferedGraphicsContext> for the application domain and it is disposed automatically when the <xref:System.Drawing.BufferedGraphics> returned by the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method is disposed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="349f1-134">L’exemple de code suivant illustre la création d’une mémoire tampon de graphiques à l’aide de la <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="349f1-134">The following code example demonstrates creating a graphics buffer using the <xref:System.Drawing.BufferedGraphicsContext.Allocate%2A> method.</span></span> <span data-ttu-id="349f1-135">Ce code fait partie d’un exemple plus complet fourni pour la <xref:System.Drawing.BufferedGraphics> classe.</span><span class="sxs-lookup"><span data-stu-id="349f1-135">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#4)]
 [!code-csharp[BufferingExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#4)]
 [!code-vb[BufferingExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#4)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="349f1-136">Pour accéder au code non managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="349f1-136">for access to unmanaged code.</span>
          </span>
          <span data-ttu-id="349f1-137">Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="349f1-137">Related enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Drawing.BufferedGraphics" />
        <altmember cref="T:System.IntPtr" />
        <altmember cref="T:System.Drawing.Rectangle" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="bufferedGraphicsContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="349f1-138">Libère toutes les ressources utilisées par <see cref="T:System.Drawing.BufferedGraphicsContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="349f1-138">Releases all resources used by the <see cref="T:System.Drawing.BufferedGraphicsContext" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="349f1-139">Appelez la méthode <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> une fois que vous avez terminé d'utiliser <xref:System.Drawing.BufferedGraphicsContext>.</span><span class="sxs-lookup"><span data-stu-id="349f1-139">Call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> when you are finished using the <xref:System.Drawing.BufferedGraphicsContext>.</span></span> <span data-ttu-id="349f1-140">La méthode <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> rend le <xref:System.Drawing.BufferedGraphicsContext> inutilisable.</span><span class="sxs-lookup"><span data-stu-id="349f1-140">The <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> method leaves the <xref:System.Drawing.BufferedGraphicsContext> in an unusable state.</span></span> <span data-ttu-id="349f1-141">Après avoir appelé <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>, vous devez libérer toutes les références à la <xref:System.Drawing.BufferedGraphicsContext> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.Drawing.BufferedGraphicsContext> occupée.</span><span class="sxs-lookup"><span data-stu-id="349f1-141">After calling <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A>, you must release all references to the <xref:System.Drawing.BufferedGraphicsContext> so the garbage collector can reclaim the memory that the <xref:System.Drawing.BufferedGraphicsContext> was occupying.</span></span> <span data-ttu-id="349f1-142">Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentant une méthode de suppression](~/docs/standard/garbage-collection/implementing-dispose.md).</span><span class="sxs-lookup"><span data-stu-id="349f1-142">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="349f1-143">Appelez toujours <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> avant de libérer votre dernière référence à <xref:System.Drawing.BufferedGraphicsContext>.</span><span class="sxs-lookup"><span data-stu-id="349f1-143">Always call <xref:System.Drawing.BufferedGraphicsContext.Dispose%2A> before you release your last reference to the <xref:System.Drawing.BufferedGraphicsContext>.</span></span> <span data-ttu-id="349f1-144">Sinon, les ressources qu’il utilise ne seront pas libérées tant que le garbage collector du <xref:System.Object.Finalize%2A> méthode de la <xref:System.Drawing.BufferedGraphicsContext>.</span><span class="sxs-lookup"><span data-stu-id="349f1-144">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Object.Finalize%2A> method of the <xref:System.Drawing.BufferedGraphicsContext>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~BufferedGraphicsContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!BufferedGraphicsContext ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="bufferedGraphicsContext.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="349f1-145">Autorise un objet à tenter de libérer des ressources et à exécuter d'autres opérations de nettoyage avant qu'il ne soit récupéré par une opération garbage collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="349f1-145">Allows an object to try to free resources and perform other cleanup operations before it is reclaimed by garbage collection.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.BufferedGraphicsContext.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberSignature Language="F#" Value="member this.Invalidate : unit -&gt; unit" Usage="bufferedGraphicsContext.Invalidate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="349f1-146">Supprime la mémoire tampon de graphiques active, si une mémoire tampon a été allouée et n'a pas encore été supprimée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="349f1-146">Disposes of the current graphics buffer, if a buffer has been allocated and has not yet been disposed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="349f1-147">Si la mémoire tampon de graphiques est en cours d’utilisation, elle est marquée pour suppression dès qu’il est disponible ; Sinon, elle est immédiatement supprimée.</span><span class="sxs-lookup"><span data-stu-id="349f1-147">If the graphics buffer is in use, it will be marked for disposal as soon as it is free; otherwise, it will be disposed immediately.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumBuffer">
      <MemberSignature Language="C#" Value="public System.Drawing.Size MaximumBuffer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size MaximumBuffer" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.BufferedGraphicsContext.MaximumBuffer" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumBuffer As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Size MaximumBuffer { System::Drawing::Size get(); void set(System::Drawing::Size value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumBuffer : System.Drawing.Size with get, set" Usage="System.Drawing.BufferedGraphicsContext.MaximumBuffer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="349f1-148">Obtient ou définit la taille maximale de la mémoire tampon à utiliser.</span>
          <span class="sxs-lookup">
            <span data-stu-id="349f1-148">Gets or sets the maximum size of the buffer to use.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="349f1-149">
            <see cref="T:System.Drawing.Size" /> indiquant la taille maximale des dimensions de la mémoire tampon.</span>
          <span class="sxs-lookup">
            <span data-stu-id="349f1-149">A <see cref="T:System.Drawing.Size" /> indicating the maximum size of the buffer dimensions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="349f1-150">Cette propriété permet d’obtenir ou définir les dimensions maximales pour une mémoire tampon qui doit être conservée en mémoire.</span><span class="sxs-lookup"><span data-stu-id="349f1-150">This property allows you to get or set the maximum dimensions for a buffer that should be retained in memory.</span></span> <span data-ttu-id="349f1-151">Vous pouvez allouer une mémoire tampon de n’importe quelle taille, toutefois, les mettre en mémoire tampon des dimensions supérieure à la <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> taille sera utilisée temporairement et puis ignorées lorsque la <xref:System.Drawing.BufferedGraphics> objet est libéré.</span><span class="sxs-lookup"><span data-stu-id="349f1-151">You can allocate a buffer of any size, however any buffer with dimensions greater than the <xref:System.Drawing.BufferedGraphicsContext.MaximumBuffer%2A> size will be used temporarily and then discarded when the <xref:System.Drawing.BufferedGraphics> object is released.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="349f1-152">L’exemple suivant illustre la définition de la taille maximale de la mémoire tampon pour un <xref:System.Drawing.BufferedGraphicsContext>.</span><span class="sxs-lookup"><span data-stu-id="349f1-152">The following example demonstrates setting the maximum size for the buffer for a <xref:System.Drawing.BufferedGraphicsContext>.</span></span> <span data-ttu-id="349f1-153">Ce code fait partie d’un exemple plus complet fourni pour la <xref:System.Drawing.BufferedGraphics> classe.</span><span class="sxs-lookup"><span data-stu-id="349f1-153">This code is part of a larger example provided for the <xref:System.Drawing.BufferedGraphics> class.</span></span>  
  
 [!code-cpp[BufferingExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/BufferingExamples/CPP/bufferingexamples.cpp#2)]
 [!code-csharp[BufferingExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/BufferingExamples/CS/bufferingexamples.cs#2)]
 [!code-vb[BufferingExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/BufferingExamples/VB/bufferingexamples.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="349f1-154">La hauteur ou la largeur de la taille est inférieure ou égale à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="349f1-154">The height or width of the size is less than or equal to zero.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="349f1-155">Pour autoriser l’accès utilisateur à toutes les fenêtres.</span>
          <span class="sxs-lookup">
            <span data-stu-id="349f1-155">for allowing user access to all windows.</span>
          </span>
          <span data-ttu-id="349f1-156">Énumération associée : <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="349f1-156">Related enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" /></span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>