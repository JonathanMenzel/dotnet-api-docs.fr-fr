<Type Name="FontFamily" FullName="System.Drawing.FontFamily">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="db85b7265d277ba1fdd9013386377a5e18c6e997" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32037356" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class FontFamily : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FontFamily extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.FontFamily" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FontFamily&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontFamily sealed : MarshalByRefObject, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Définit un groupe de polices dont le design de base est similaire, mais qui comportent des variations de styles. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant affiche toutes les familles de polices dans le <xref:System.Drawing.FontFamily.Families%2A> propriété de la <xref:System.Drawing.FontFamily> classe. Cet exemple est conçu pour être utilisé avec un Windows Form. Pour exécuter cet exemple, ajoutez un <xref:System.Windows.Forms.ListBox> nommé `listBox1` à un formulaire et appelez le `PopulateListBoxWithFonts` méthode à partir du constructeur du formulaire.  
  
 [!code-cpp[System.Drawing.MiscExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.MiscExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.MiscExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise un nouveau <see cref="T:System.Drawing.FontFamily" /> utilisant le nom spécifié.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily (System.Drawing.Text.GenericFontFamilies genericFamily);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Drawing.Text.GenericFontFamilies genericFamily) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.#ctor(System.Drawing.Text.GenericFontFamilies)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (genericFamily As GenericFontFamilies)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamily(System::Drawing::Text::GenericFontFamilies genericFamily);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="genericFamily" Type="System.Drawing.Text.GenericFontFamilies" />
      </Parameters>
      <Docs>
        <param name="genericFamily">
          <see cref="T:System.Drawing.Text.GenericFontFamilies" /> à partir duquel créer le <see cref="T:System.Drawing.FontFamily" />.</param>
        <summary>Initialise un nouveau <see cref="T:System.Drawing.FontFamily" /> à partir de la famille de polices générique spécifiée.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamily(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nom de la nouvelle classe <see cref="T:System.Drawing.FontFamily" />.</param>
        <summary>Initialise un nouveau <see cref="T:System.Drawing.FontFamily" /> avec le nom spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En passant une chaîne vide (« ») pour le `name` paramètre provoque une exception.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Le <paramref name="name" /> est une chaîne vide ("").  
  
 - ou -  
  
 <paramref name="name" /> spécifie une police qui n'est pas installée sur l'ordinateur qui exécute l'application.  
  
 - ou -  
  
 <paramref name="name" /> spécifie une police qui n'est pas une police TrueType.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontFamily (string name, System.Drawing.Text.FontCollection fontCollection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Drawing.Text.FontCollection fontCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.#ctor(System.String,System.Drawing.Text.FontCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontFamily(System::String ^ name, System::Drawing::Text::FontCollection ^ fontCollection);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fontCollection" Type="System.Drawing.Text.FontCollection" />
      </Parameters>
      <Docs>
        <param name="name">
          <see cref="T:System.String" /> qui représente le nom du nouveau <see cref="T:System.Drawing.FontFamily" />.</param>
        <param name="fontCollection">
          <see cref="T:System.Drawing.Text.FontCollection" /> qui contient ce <see cref="T:System.Drawing.FontFamily" />.</param>
        <summary>Initialise un nouveau <see cref="T:System.Drawing.FontFamily" /> dans le <see cref="T:System.Drawing.Text.FontCollection" /> spécifié avec le nom indiqué.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          Le <paramref name="name" /> est une chaîne vide ("").  
  
 - ou -  
  
 <paramref name="name" /> spécifie une police qui n'est pas installée sur l'ordinateur qui exécute l'application.  
  
 - ou -  
  
 <paramref name="name" /> spécifie une police qui n'est pas une police TrueType.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Libère toutes les ressources utilisées par ce <see cref="T:System.Drawing.FontFamily" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Appel de <xref:System.Drawing.FontFamily.Dispose%2A> autorise les ressources utilisées par ce <xref:System.Drawing.FontFamily> pour être réaffectés à d’autres fins.  
  
 Appelez la méthode <xref:System.Drawing.FontFamily.Dispose%2A> une fois que vous avez terminé d'utiliser <xref:System.Drawing.FontFamily>. La méthode <xref:System.Drawing.FontFamily.Dispose%2A> rend le <xref:System.Drawing.FontFamily> inutilisable. Après avoir appelé <xref:System.Drawing.FontFamily.Dispose%2A>, vous devez libérer toutes les références à la <xref:System.Drawing.FontFamily> pour que le garbage collector puisse récupérer la mémoire qui le <xref:System.Drawing.FontFamily> occupée. Pour plus d’informations, consultez [de nettoyage des ressources non managées](~/docs/standard/garbage-collection/unmanaged.md) et [implémentant une méthode de suppression](~/docs/standard/garbage-collection/implementing-dispose.md).  
  
> [!NOTE]
>  Appelez toujours <xref:System.Drawing.FontFamily.Dispose%2A> avant de libérer votre dernière référence à <xref:System.Drawing.FontFamily>. Sinon, les ressources utilisées ne seront pas libérées tant que le garbage collector n'aura pas appelé la méthode <xref:System.Drawing.FontFamily> de l'objet `Finalize`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Objet à tester.</param>
        <summary>Indique si l'objet spécifié est un <see cref="T:System.Drawing.FontFamily" /> et s'il est identique à ce <see cref="T:System.Drawing.FontFamily" />.</summary>
        <returns>
          <see langword="true" /> si <paramref name="obj" /> est un <see cref="T:System.Drawing.FontFamily" /> et s'il est identique à ce <see cref="T:System.Drawing.FontFamily" /> ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
-   Crée deux <xref:System.Drawing.Font> objets.  
  
-   Vérifie s’ils sont équivalents.  
  
-   Affiche le résultat du test dans une boîte de message.  
  
 [!code-cpp[System.Drawing.ClassicFontFamilyExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicFontFamilyExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicFontFamilyExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Families">
      <MemberSignature Language="C#" Value="public static System.Drawing.FontFamily[] Families { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.FontFamily[] Families" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.FontFamily.Families" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Families As FontFamily()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property cli::array &lt;System::Drawing::FontFamily ^&gt; ^ Families { cli::array &lt;System::Drawing::FontFamily ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.FontFamily[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Retourne un tableau contenant tous les objets <see cref="T:System.Drawing.FontFamily" /> associés au contexte graphique actuel.</summary>
        <value>Tableau d'objets <see cref="T:System.Drawing.FontFamily" /> associés au contexte graphique actuel.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant affiche toutes les familles de polices dans le <xref:System.Drawing.FontFamily.Families%2A> propriété de la <xref:System.Drawing.FontFamily> classe. Cet exemple est conçu pour être utilisé avec un Windows Form. Pour exécuter cet exemple, ajoutez un <xref:System.Windows.Forms.ListBox> nommé `listBox1` à un formulaire et appelez le `PopulateListBoxWithFonts` méthode à partir du constructeur du formulaire.  
  
 [!code-cpp[System.Drawing.MiscExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.MiscExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.MiscExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~FontFamily ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!FontFamily ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Autorise un objet à tenter de libérer des ressources et à exécuter d'autres opérations de nettoyage avant qu'il ne soit récupéré par une opération garbage collection.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericMonospace">
      <MemberSignature Language="C#" Value="public static System.Drawing.FontFamily GenericMonospace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.FontFamily GenericMonospace" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.FontFamily.GenericMonospace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property GenericMonospace As FontFamily" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::FontFamily ^ GenericMonospace { System::Drawing::FontFamily ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.FontFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un <see cref="T:System.Drawing.FontFamily" /> générique à espacement fixe.</summary>
        <value>
          <see cref="T:System.Drawing.FontFamily" /> représentant une police générique à espacement fixe.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericSansSerif">
      <MemberSignature Language="C#" Value="public static System.Drawing.FontFamily GenericSansSerif { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.FontFamily GenericSansSerif" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.FontFamily.GenericSansSerif" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property GenericSansSerif As FontFamily" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::FontFamily ^ GenericSansSerif { System::Drawing::FontFamily ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.FontFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un objet <see cref="T:System.Drawing.FontFamily" /> Sans Serif générique.</summary>
        <value>Objet <see cref="T:System.Drawing.FontFamily" /> représentant une police Sans Serif générique.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenericSerif">
      <MemberSignature Language="C#" Value="public static System.Drawing.FontFamily GenericSerif { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Drawing.FontFamily GenericSerif" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.FontFamily.GenericSerif" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property GenericSerif As FontFamily" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Drawing::FontFamily ^ GenericSerif { System::Drawing::FontFamily ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.FontFamily</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient un <see cref="T:System.Drawing.FontFamily" /> Serif générique.</summary>
        <value>
          <see cref="T:System.Drawing.FontFamily" /> qui représente une police Sans Serif générique.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCellAscent">
      <MemberSignature Language="C#" Value="public int GetCellAscent (System.Drawing.FontStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCellAscent(valuetype System.Drawing.FontStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.GetCellAscent(System.Drawing.FontStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCellAscent (style As FontStyle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCellAscent(System::Drawing::FontStyle style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
      </Parameters>
      <Docs>
        <param name="style">
          <see cref="T:System.Drawing.FontStyle" /> contenant des informations de style pour la police.</param>
        <summary>Retourne la ligne ascendante de la matrice du <see cref="T:System.Drawing.FontFamily" /> du style spécifié, en unités de design.</summary>
        <returns>Ligne ascendante de la matrice de ce <see cref="T:System.Drawing.FontFamily" /> utilisant le <see cref="T:System.Drawing.FontStyle" /> spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
-   Crée un <xref:System.Drawing.FontFamily>.  
  
-   Obtient la hauteur de cellule de cette famille de polices.  
  
-   Dessine la valeur de la hauteur de cellule à l’écran en tant que texte.  
  
 [!code-cpp[System.Drawing.ClassicFontFamilyExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicFontFamilyExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicFontFamilyExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCellDescent">
      <MemberSignature Language="C#" Value="public int GetCellDescent (System.Drawing.FontStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCellDescent(valuetype System.Drawing.FontStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.GetCellDescent(System.Drawing.FontStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCellDescent (style As FontStyle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCellDescent(System::Drawing::FontStyle style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
      </Parameters>
      <Docs>
        <param name="style">
          <see cref="T:System.Drawing.FontStyle" /> contenant des informations de style pour la police.</param>
        <summary>Retourne la ligne descendante de la matrice du <see cref="T:System.Drawing.FontFamily" /> du style spécifié, en unités de design.</summary>
        <returns>Ligne descendante de la matrice de ce <see cref="T:System.Drawing.FontFamily" /> utilisant le <see cref="T:System.Drawing.FontStyle" /> spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
-   Crée un <xref:System.Drawing.FontFamily>.  
  
-   Obtient la profondeur de la cellule de cette famille de polices.  
  
-   Dessine la valeur de la profondeur de la cellule à l’écran en tant que texte.  
  
 [!code-cpp[System.Drawing.ClassicFontFamilyExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicFontFamilyExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicFontFamilyExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEmHeight">
      <MemberSignature Language="C#" Value="public int GetEmHeight (System.Drawing.FontStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetEmHeight(valuetype System.Drawing.FontStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.GetEmHeight(System.Drawing.FontStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEmHeight (style As FontStyle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetEmHeight(System::Drawing::FontStyle style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
      </Parameters>
      <Docs>
        <param name="style">
          <see cref="T:System.Drawing.FontStyle" /> pour laquelle obtenir la hauteur du carré cadratin.</param>
        <summary>Obtient la hauteur, en unités de design de police, du carré cadratin pour le style spécifié.</summary>
        <returns>Hauteur du carré cadratin.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 *Carré cadratin* est un terme typographique qui fait référence au rectangle occupé par la lettre la plus large de la police, traditionnellement la lettre M.  
  
   
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
-   Crée un <xref:System.Drawing.FontFamily>.  
  
-   Obtient la hauteur du carré cadratin pour cette famille de polices.  
  
-   Dessine la valeur de la hauteur du carré cadratin à l’écran en tant que texte.  
  
 [!code-cpp[System.Drawing.ClassicFontFamilyExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicFontFamilyExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicFontFamilyExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFamilies">
      <MemberSignature Language="C#" Value="public static System.Drawing.FontFamily[] GetFamilies (System.Drawing.Graphics graphics);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.FontFamily[] GetFamilies(class System.Drawing.Graphics graphics) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.GetFamilies(System.Drawing.Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::Drawing::FontFamily ^&gt; ^ GetFamilies(System::Drawing::Graphics ^ graphics);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Do not use method GetFamilies, use property Families instead")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.FontFamily[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="graphics" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="graphics">Objet <see cref="T:System.Drawing.Graphics" /> à partir duquel retourner les objets <see cref="T:System.Drawing.FontFamily" />.</param>
        <summary>Retourne un tableau contenant tous les objets <see cref="T:System.Drawing.FontFamily" /> disponibles pour le contexte graphique spécifié.</summary>
        <returns>Tableau d'objets <see cref="T:System.Drawing.FontFamily" /> disponibles pour l'objet <see cref="T:System.Drawing.Graphics" /> spécifié.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="graphics" /> est <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient un code de hachage pour ce <see cref="T:System.Drawing.FontFamily" />.</summary>
        <returns>Code de hachage pour cette <see cref="T:System.Drawing.FontFamily" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
-   Crée un <xref:System.Drawing.FontFamily>.  
  
-   Obtient le code de hachage pour la famille de polices.  
  
-   Dessine la valeur du code de hachage à l’écran en tant que texte.  
  
 [!code-cpp[System.Drawing.ClassicFontFamilyExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicFontFamilyExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicFontFamilyExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineSpacing">
      <MemberSignature Language="C#" Value="public int GetLineSpacing (System.Drawing.FontStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLineSpacing(valuetype System.Drawing.FontStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.GetLineSpacing(System.Drawing.FontStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineSpacing (style As FontStyle) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLineSpacing(System::Drawing::FontStyle style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
      </Parameters>
      <Docs>
        <param name="style">
          <see cref="T:System.Drawing.FontStyle" /> à appliquer.</param>
        <summary>Retourne l'interligne du <see cref="T:System.Drawing.FontFamily" /> du style spécifié, en unités de design. L'interligne est la distance verticale séparant les lignes de base de deux lignes de texte consécutives.</summary>
        <returns>Distance entre deux lignes de texte consécutives.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
-   Crée un <xref:System.Drawing.FontFamily>.  
  
-   Obtient l’interligne pour la famille de polices.  
  
-   Dessine la valeur de l’espacement des lignes à l’écran en tant que texte.  
  
 [!code-cpp[System.Drawing.ClassicFontFamilyExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicFontFamilyExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicFontFamilyExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public string GetName (int language);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetName(int32 language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.GetName(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetName (language As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetName(int language);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="language">Langue dans laquelle le nom est retourné.</param>
        <summary>Retourne le nom, dans la langue spécifiée, de ce <see cref="T:System.Drawing.FontFamily" />.</summary>
        <returns>
          <see cref="T:System.String" /> représentant le nom, dans la langue spécifiée, de ce <see cref="T:System.Drawing.FontFamily" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour indiquer la langue neutre, vous devez indiquer 0 pour le `language` paramètre. Pour obtenir la liste des langues disponibles et sous-langues, consultez le fichier d’en-tête Winnt.h. Si vous avez installé Visual Studio, ce fichier d’en-tête trouverez généralement relatif au répertoire d’installation de Visual Studio à \\\VC\PlatformSDK\Include.  
  
   
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
-   Crée un <xref:System.Drawing.FontFamily>.  
  
-   Obtient le nom de la famille de polices.  
  
-   Dessine le nom de la famille de polices à l’écran en tant que texte.  
  
 [!code-cpp[System.Drawing.ClassicFontFamilyExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicFontFamilyExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicFontFamilyExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsStyleAvailable">
      <MemberSignature Language="C#" Value="public bool IsStyleAvailable (System.Drawing.FontStyle style);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStyleAvailable(valuetype System.Drawing.FontStyle style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.IsStyleAvailable(System.Drawing.FontStyle)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsStyleAvailable (style As FontStyle) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStyleAvailable(System::Drawing::FontStyle style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="style" Type="System.Drawing.FontStyle" />
      </Parameters>
      <Docs>
        <param name="style">
          <see cref="T:System.Drawing.FontStyle" /> à tester.</param>
        <summary>Indique si l'énumération <see cref="T:System.Drawing.FontStyle" /> spécifiée est disponible.</summary>
        <returns>
          <see langword="true" /> si le <see cref="T:System.Drawing.FontStyle" /> spécifié est disponible ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
-   Crée un <xref:System.Drawing.FontFamily>.  
  
-   Teste si la famille de polices est disponible dans une police en italique.  
  
-   S’il s’agit, dessine le texte à l’écran.  
  
 [!code-cpp[System.Drawing.ClassicFontFamilyExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.ClassicFontFamilyExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.ClassicFontFamilyExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Drawing.FontFamily.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom de cet objet <see cref="T:System.Drawing.FontFamily" />.</summary>
        <value>
          <see cref="T:System.String" /> représentant le nom de ce <see cref="T:System.Drawing.FontFamily" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant affiche toutes les familles de polices dans le <xref:System.Drawing.FontFamily.Families%2A> propriété de la <xref:System.Drawing.FontFamily> classe. Cet exemple est conçu pour être utilisé avec un Windows Form. Pour exécuter cet exemple, ajoutez un <xref:System.Windows.Forms.ListBox> nommé `listBox1` à un formulaire et appelez le `PopulateListBoxWithFonts` méthode à partir du constructeur du formulaire.  
  
 [!code-cpp[System.Drawing.MiscExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.MiscExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.MiscExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.FontFamily.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Convertit ce <see cref="T:System.Drawing.FontFamily" /> en représentation sous forme de chaîne explicite.</summary>
        <returns>Chaîne qui représente ce <see cref="T:System.Drawing.FontFamily" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code crée un <xref:System.Drawing.FontFamily> et dessine la représentation de chaîne de la famille de polices à l’écran.  
  
 [!code-cpp[System.Drawing.ClassicFontFamilyExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.ClassicFontFamilyExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.ClassicFontFamilyExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicFontFamilyExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>