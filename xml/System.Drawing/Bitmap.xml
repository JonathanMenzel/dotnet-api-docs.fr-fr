<Type Name="Bitmap" FullName="System.Drawing.Bitmap">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="823c5e4f1b6f6846d5146d1f84b2dc636d33e474" />
    <Meta Name="ms.sourcegitcommit" Value="0d6aa6694f157a08fe52cd25b4d9d3dcf913e812" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="10/12/2018" />
    <Meta Name="ms.locfileid" Value="49149124" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class Bitmap : System.Drawing.Image" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit Bitmap extends System.Drawing.Image" />
  <TypeSignature Language="DocId" Value="T:System.Drawing.Bitmap" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class Bitmap&#xA;Inherits Image" />
  <TypeSignature Language="C++ CLI" Value="public ref class Bitmap sealed : System::Drawing::Image" />
  <TypeSignature Language="F#" Value="type Bitmap = class&#xA;    inherit Image" />
  <AssemblyInfo>
    <AssemblyName>System.Drawing</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Drawing.Common</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Drawing.Image</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.BitmapEditor, System.Drawing.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1">
      <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.BitmapEditor, System.Drawing.Design, Version=1.0.5000.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Editor("System.Drawing.Design.BitmapEditor, System.Drawing.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Encapsule une bitmap GDI+, composée des données de pixels d’une image graphique et de ses attributs. <see cref="T:System.Drawing.Bitmap" /> est un objet utilisé pour manipuler des images définies par des données de pixels.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Une image bitmap se compose de données de pixels d’une image graphique et de ses attributs. Il existe de nombreux formats standards pour l’enregistrement d’une image bitmap dans un fichier. [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] prend en charge les formats de fichier suivants : BMP, GIF, EXIF, JPG, PNG et TIFF. Pour plus d’informations sur les formats pris en charge, consultez [Types de Bitmaps](~/docs/framework/winforms/advanced/types-of-bitmaps.md).  
  
 Vous pouvez créer des images à partir de fichiers, flux et d’autres sources en utilisant l’une de le <xref:System.Drawing.Bitmap.%23ctor%2A> constructeurs et les enregistrer dans un flux de données ou au système de fichiers avec le <xref:System.Drawing.Image.Save%2A> (méthode). Dessiner des images à l’écran ou vers la mémoire à l’aide de la <xref:System.Drawing.Graphics.DrawImage%2A> méthode de la <xref:System.Drawing.Graphics> objet. Pour obtenir la liste des rubriques sur l’utilisation des fichiers image, consultez [utilisation des Images, Bitmaps, icônes et métafichiers](~/docs/framework/winforms/advanced/working-with-images-bitmaps-icons-and-metafiles.md).  
  
> [!NOTE]
>  Le <xref:System.Drawing.Bitmap> classe n’est pas accessible entre domaines d’application. Par exemple, si vous créez un dynamique <xref:System.AppDomain> et créez plusieurs pinceaux, des stylets et des bitmaps dans ce domaine, puis passe ces objets au domaine d’application principal, vous pouvez utiliser avec succès les stylets et des pinceaux. Toutefois, si vous appelez le <xref:System.Drawing.Graphics.DrawImage%2A> méthode pour dessiner le marshalé <xref:System.Drawing.Bitmap>, vous recevez l’exception suivante.  
>   
>  Communication à distance ne peut pas trouver le champ « native image » sur le type « System.Drawing.Image ».  
  
   
  
## Examples  
 L’exemple de code suivant montre comment construire un nouveau <xref:System.Drawing.Bitmap> à partir d’un fichier, à l’aide de la <xref:System.Drawing.Bitmap.GetPixel%2A> et <xref:System.Drawing.Bitmap.SetPixel%2A> méthodes pour recolorier l’image. Il utilise également le <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Width%2A>, et <xref:System.Drawing.Image.Height%2A> propriétés.  
  
 Cet exemple est conçu pour être utilisé avec un formulaire Windows qui contient un <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox>, et <xref:System.Windows.Forms.Button> nommé `Label1`, `PictureBox1`, et `Button1`, respectivement. Collez le code dans le formulaire et associer le `Button1_Click` méthode avec le bouton <xref:System.Windows.Forms.Control.Click> événement.  
  
 [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.PictureBox" />
    <related type="Article" href="http://msdn.microsoft.com/library/7152b45b-a55c-49bc-8c78-ae002a844f71">Images, bitmaps et métafichiers</related>
    <related type="Article" href="http://msdn.microsoft.com/library/a626d701-bd99-4fd8-b92f-7b8f794e042b">Utilisation des images, bitmaps, icônes et métafichiers</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Bitmap" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.Drawing.Image original);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (original As Image)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::Drawing::Image ^ original);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : System.Drawing.Image -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap original" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Drawing.Image" />
      </Parameters>
      <Docs>
        <param name="original">
          <see cref="T:System.Drawing.Image" /> à partir duquel créer le <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Bitmap" /> à partir de l'image existante spécifiée.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : System.IO.Stream -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Flux de données utilisé pour charger l'image.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Bitmap" /> à partir du flux de données spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous devez garder le flux ouvert pour la durée de vie de la <xref:System.Drawing.Bitmap>.  
  
 En raison d’une limitation de la [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] décodeur, un <xref:System.ArgumentException?displayProperty=nameWithType> est levée si vous construisez une bitmap à partir d’un fichier d’image .png avec une seule dimension supérieure à 65 535 pixels.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment charger une bitmap à partir d’un flux de données.  
  
 Cet exemple est conçu pour être utilisé avec Windows Forms. Créer un formulaire qui contient un <xref:System.Windows.Forms.PictureBox> nommé `PictureBox1`. Collez le code dans le formulaire et appelez le `InitializeStreamBitmap` méthode à partir du constructeur du formulaire ou <xref:System.Windows.Forms.Form.Load> méthode de gestion des événements.  
  
 [!code-cpp[System.Drawing.BitmapMembers#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.BitmapMembers#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#2)]
 [!code-vb[System.Drawing.BitmapMembers#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stream" /> ne contient pas de donnée image ou est <see langword="null" />.  
  
- ou - 
 <paramref name="stream" /> contient un fichier image PNG avec une seule dimension supérieure à 65 535 pixels.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/6be085a2-2c13-47c8-b80a-c18b32777d8d">Types de bitmaps</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : string -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap filename" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">Nom de fichier et chemin d'accès de l'image bitmap.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Bitmap" /> à partir du fichier spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le nom de fichier et le chemin d’accès peuvent être relatif à l’application ou un chemin d’accès absolu. Utilisez ce constructeur pour ouvrir des images avec les formats de fichier suivants : BMP, GIF, EXIF, JPG, PNG et TIFF. Pour plus d’informations sur les formats pris en charge, consultez [Types de Bitmaps](~/docs/framework/winforms/advanced/types-of-bitmaps.md). Le fichier reste verrouillé jusqu'à ce que le <xref:System.Drawing.Bitmap> est supprimé.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.FileNotFoundException">Le fichier spécifié est introuvable.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/6be085a2-2c13-47c8-b80a-c18b32777d8d">Types de bitmaps</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.Drawing.Image original, System.Drawing.Size newSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image original, valuetype System.Drawing.Size newSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (original As Image, newSize As Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::Drawing::Image ^ original, System::Drawing::Size newSize);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : System.Drawing.Image * System.Drawing.Size -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (original, newSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Drawing.Image" />
        <Parameter Name="newSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="original">
          <see cref="T:System.Drawing.Image" /> à partir duquel créer le <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="newSize">Structure <see cref="T:System.Drawing.Size" /> représentant la taille du nouveau <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Bitmap" /> à partir de l'image existante spécifiée, ajustée à la taille spécifiée.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception">L'opération a échoué.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : int * int -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="width">Largeur, en pixels, du nouveau <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="height">Hauteur, en pixels, du nouveau <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Bitmap" /> avec la taille spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur crée un <xref:System.Drawing.Bitmap> avec un <xref:System.Drawing.Imaging.PixelFormat> valeur d’énumération de <xref:System.Drawing.Imaging.PixelFormat.Format32bppArgb>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">L'opération a échoué.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.IO.Stream stream, bool useIcm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, bool useIcm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::IO::Stream ^ stream, bool useIcm);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : System.IO.Stream * bool -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (stream, useIcm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="useIcm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">Flux de données utilisé pour charger l'image.</param>
        <param name="useIcm">
          <see langword="true" /> pour appliquer la correction des couleurs à ce <see cref="T:System.Drawing.Bitmap" /> ; sinon, <see langword="false" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Bitmap" /> à partir du flux de données spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous devez garder le flux ouvert pour la durée de vie de la <xref:System.Drawing.Bitmap>.  
  
 En raison d’une limitation de la [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] décodeur, un <xref:System.ArgumentException?displayProperty=nameWithType> est levée si vous construisez une bitmap à partir d’un fichier d’image .png avec une seule dimension supérieure à 65 535 pixels.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stream" /> ne contient pas de donnée image ou est <see langword="null" />.  
  
- ou - 
 <paramref name="stream" /> contient un fichier image PNG avec une seule dimension supérieure à 65 535 pixels.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/6be085a2-2c13-47c8-b80a-c18b32777d8d">Types de bitmaps</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (string filename, bool useIcm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string filename, bool useIcm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filename As String, useIcm As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::String ^ filename, bool useIcm);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : string * bool -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (filename, useIcm)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
        <Parameter Name="useIcm" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filename">Nom du fichier bitmap.</param>
        <param name="useIcm">
          <see langword="true" /> pour appliquer la correction des couleurs à ce <see cref="T:System.Drawing.Bitmap" /> ; sinon, <see langword="false" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Bitmap" /> à partir du fichier spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez ce constructeur pour ouvrir des images avec les formats de fichier suivants : BMP, GIF, EXIF, JPG, PNG et TIFF. Pour plus d’informations sur les formats pris en charge, consultez [Types de Bitmaps](~/docs/framework/winforms/advanced/types-of-bitmaps.md). Le fichier reste verrouillé jusqu'à ce que le <xref:System.Drawing.Bitmap> est supprimé.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment construire une nouvelle bitmap à partir d’un fichier. L’exemple utilise le <xref:System.Drawing.Bitmap.GetPixel%2A> et <xref:System.Drawing.Bitmap.SetPixel%2A> méthodes pour recolorier l’image. Il utilise également le <xref:System.Drawing.Image.PixelFormat%2A> propriété.  
  
 Cet exemple est conçu pour être utilisé avec un formulaire Windows qui contient un <xref:System.Windows.Forms.Label>, <xref:System.Windows.Forms.PictureBox> et <xref:System.Windows.Forms.Button> nommé `Label1`, `PictureBox1` et `Button1`, respectivement. Collez le code dans le formulaire et associer le `Button1_Click` méthode avec le bouton <xref:System.Windows.Forms.Control.Click> événement.  
  
 [!code-cpp[System.Drawing.ImageExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ImageExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ImageExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ImageExample/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ImageExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ImageExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour appeler dans du code non managé. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <related type="Article" href="http://msdn.microsoft.com/library/6be085a2-2c13-47c8-b80a-c18b32777d8d">Types de bitmaps</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (Type type, string resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type type, string resource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(Type ^ type, System::String ^ resource);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : Type * string -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (type, resource)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resource" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">Classe utilisée pour extraire la ressource.</param>
        <param name="resource">Nom de la ressource.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Bitmap" /> à partir d'une ressource spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur associe l’espace de noms du type donné avec le nom de chaîne de la ressource et recherche une correspondance dans le manifeste d’assembly. Par exemple, vous pouvez transmettre le <xref:System.Windows.Forms.Button> type et `Button.bmp` à ce constructeur et il recherchera une ressource nommée `System.Windows.Forms.Button.bmp`.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment construire une bitmap à partir d’un type et comment utiliser le <xref:System.Drawing.Image.Save%2A> (méthode). Pour exécuter cet exemple, collez le code dans un formulaire Windows. Gérer le formulaire <xref:System.Windows.Forms.Control.Paint> événement et appelez le `ConstructFromResourceSaveAsGif` méthode, en passant `e` en tant que <xref:System.Windows.Forms.PaintEventArgs>  
  
 [!code-cpp[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/cpp/form1.cpp#1)]
 [!code-csharp[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/CS/form1.cs#1)]
 [!code-vb[System.Drawing.BmpCtorAndSave#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BmpCtorAndSave/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/6be085a2-2c13-47c8-b80a-c18b32777d8d">Types de bitmaps</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (System.Drawing.Image original, int width, int height);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Drawing.Image original, int32 width, int32 height) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Drawing.Image,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (original As Image, width As Integer, height As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(System::Drawing::Image ^ original, int width, int height);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : System.Drawing.Image * int * int -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (original, width, height)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Drawing.Image" />
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="original">
          <see cref="T:System.Drawing.Image" /> à partir duquel créer le <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="width">Largeur, en pixels, du nouveau <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="height">Hauteur, en pixels, du nouveau <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Bitmap" /> à partir de l'image existante spécifiée, ajustée à la taille spécifiée.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Exception">L'opération a échoué.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height, System.Drawing.Graphics g);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height, class System.Drawing.Graphics g) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Graphics)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer, g As Graphics)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height, System::Drawing::Graphics ^ g);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : int * int * System.Drawing.Graphics -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (width, height, g)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="g" Type="System.Drawing.Graphics" />
      </Parameters>
      <Docs>
        <param name="width">Largeur, en pixels, du nouveau <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="height">Hauteur, en pixels, du nouveau <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="g">Objet <see cref="T:System.Drawing.Graphics" /> spécifiant la résolution du nouveau <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Bitmap" /> avec la taille spécifiée et la résolution de l'objet <see cref="T:System.Drawing.Graphics" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La nouvelle <xref:System.Drawing.Bitmap> que cette méthode crée prend sa résolution horizontale et verticale de la <xref:System.Drawing.Graphics.DpiX%2A> et <xref:System.Drawing.Graphics.DpiY%2A> propriétés de `g`, respectivement.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="g" /> a la valeur <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer, format As PixelFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height, System::Drawing::Imaging::PixelFormat format);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : int * int * System.Drawing.Imaging.PixelFormat -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (width, height, format)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="width">Largeur, en pixels, du nouveau <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="height">Hauteur, en pixels, du nouveau <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="format">Format de pixel du nouveau <see cref="T:System.Drawing.Bitmap" />. Une valeur commençant par <c>Format</c> doit être spécifiée.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Bitmap" /> avec la taille et le format spécifiés.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Une valeur <see cref="T:System.Drawing.Imaging.PixelFormat" /> dont le nom ne commence pas par *Format* est spécifiée. Par exemple, <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> provoquera une <see cref="T:System.ArgumentException" />, mais pas <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Bitmap (int width, int height, int stride, System.Drawing.Imaging.PixelFormat format, IntPtr scan0);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 width, int32 height, int32 stride, valuetype System.Drawing.Imaging.PixelFormat format, native int scan0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.#ctor(System.Int32,System.Int32,System.Int32,System.Drawing.Imaging.PixelFormat,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (width As Integer, height As Integer, stride As Integer, format As PixelFormat, scan0 As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Bitmap(int width, int height, int stride, System::Drawing::Imaging::PixelFormat format, IntPtr scan0);" />
      <MemberSignature Language="F#" Value="new System.Drawing.Bitmap : int * int * int * System.Drawing.Imaging.PixelFormat * nativeint -&gt; System.Drawing.Bitmap" Usage="new System.Drawing.Bitmap (width, height, stride, format, scan0)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="width" Type="System.Int32" />
        <Parameter Name="height" Type="System.Int32" />
        <Parameter Name="stride" Type="System.Int32" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
        <Parameter Name="scan0" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="width">Largeur, en pixels, du nouveau <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="height">Hauteur, en pixels, du nouveau <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="stride">Entier qui spécifie l'offset d'octet entre le début d'une ligne de numérisation et la suivante. Il s'agit généralement (mais pas nécessairement) du nombre d'octets en format de pixel (par exemple, 2 pour 16 bits par pixel) multiplié par la largeur de la bitmap. La valeur passée à ce paramètre doit être un multiple de quatre.</param>
        <param name="format">Format de pixel du nouveau <see cref="T:System.Drawing.Bitmap" />. Une valeur commençant par <c>Format</c> doit être spécifiée.</param>
        <param name="scan0">Pointeur vers un tableau d'octets qui contient les données de pixels.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Drawing.Bitmap" /> avec la taille ainsi que le format et les données de pixels spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’appelant est chargé d’allouer et libérer le bloc de mémoire spécifié par le `scan0` paramètre. Toutefois, la mémoire ne doit pas être libérée jusqu'à ce que connexe <xref:System.Drawing.Bitmap> est libéré.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Drawing.Bitmap.%23ctor%28System.Int32%2CSystem.Int32%2CSystem.Int32%2CSystem.Drawing.Imaging.PixelFormat%2CSystem.IntPtr%29> constructeur. Cet exemple est conçu pour être utilisé avec Windows Forms et nécessite un <xref:System.Windows.Forms.PaintEventArgs> paramètre, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> événement.  
  
 [!code-csharp[System.Drawing.MiscExamples#Constructor](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.MiscExamples/CS/form1.cs#constructor)]
 [!code-vb[System.Drawing.MiscExamples#Constructor](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.MiscExamples/VB/form1.vb#constructor)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Une valeur <see cref="T:System.Drawing.Imaging.PixelFormat" /> dont le nom ne commence pas par *Format* est spécifiée. Par exemple, <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> provoquera une <see cref="T:System.ArgumentException" />, mais pas <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour appeler dans du code non managé. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Clone">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crée une copie d'une section de ce <see cref="T:System.Drawing.Bitmap" /> définie à l'aide d'un <see cref="T:System.Drawing.Imaging.PixelFormat" /> spécifié.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Drawing.Bitmap Clone (System.Drawing.Rectangle rect, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Bitmap Clone(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.Clone(System.Drawing.Rectangle,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone (rect As Rectangle, format As PixelFormat) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Bitmap ^ Clone(System::Drawing::Rectangle rect, System::Drawing::Imaging::PixelFormat format);" />
      <MemberSignature Language="F#" Value="override this.Clone : System.Drawing.Rectangle * System.Drawing.Imaging.PixelFormat -&gt; System.Drawing.Bitmap" Usage="bitmap.Clone (rect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="rect">Définit la partie de ce <see cref="T:System.Drawing.Bitmap" /> à copier. Les coordonnées sont relatives à ce <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="format">Format de pixel du nouveau <see cref="T:System.Drawing.Bitmap" />. Une valeur commençant par <c>Format</c> doit être spécifiée.</param>
        <summary>Crée une copie de la section de ce <see cref="T:System.Drawing.Bitmap" /> définie par la structure <see cref="T:System.Drawing.Rectangle" />, avec une énumération <see cref="T:System.Drawing.Imaging.PixelFormat" /> spécifiée.</summary>
        <returns>Nouveau <see cref="T:System.Drawing.Bitmap" /> créé par cette méthode.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
-   Crée un <xref:System.Drawing.Bitmap> à partir d’un fichier.  
  
-   Clone une partie de ce <xref:System.Drawing.Bitmap>.  
  
-   Dessine la partie clonée à l’écran.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#1)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#1)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <paramref name="rect" /> est en dehors des limites de la bitmap source.</exception>
        <exception cref="T:System.ArgumentException">La hauteur ou la largeur de <paramref name="rect" /> est 0.  
  
- ou - 
Une valeur <see cref="T:System.Drawing.Imaging.PixelFormat" /> dont le nom ne commence pas par *Format* est spécifiée. Par exemple, <see cref="F:System.Drawing.Imaging.PixelFormat.Gdi" /> provoquera une <see cref="T:System.ArgumentException" />, mais pas <see cref="F:System.Drawing.Imaging.PixelFormat.Format48bppRgb" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Drawing.Bitmap Clone (System.Drawing.RectangleF rect, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Bitmap Clone(valuetype System.Drawing.RectangleF rect, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.Clone(System.Drawing.RectangleF,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone (rect As RectangleF, format As PixelFormat) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Bitmap ^ Clone(System::Drawing::RectangleF rect, System::Drawing::Imaging::PixelFormat format);" />
      <MemberSignature Language="F#" Value="override this.Clone : System.Drawing.RectangleF * System.Drawing.Imaging.PixelFormat -&gt; System.Drawing.Bitmap" Usage="bitmap.Clone (rect, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.RectangleF" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="rect">Définit la partie de ce <see cref="T:System.Drawing.Bitmap" /> à copier.</param>
        <param name="format">Spécifie l'énumération <see cref="T:System.Drawing.Imaging.PixelFormat" /> pour le <see cref="T:System.Drawing.Bitmap" /> de destination.</param>
        <summary>Crée une copie d'une section de ce <see cref="T:System.Drawing.Bitmap" /> définie à l'aide d'une énumération <see cref="T:System.Drawing.Imaging.PixelFormat" /> spécifiée.</summary>
        <returns>
          <see cref="T:System.Drawing.Bitmap" /> créé par cette méthode.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
-   Crée un <xref:System.Drawing.Bitmap> à partir d’un fichier.  
  
-   Clone une partie de ce <xref:System.Drawing.Bitmap>.  
  
-   Dessine la partie clonée à l’écran.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#2)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#2)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <paramref name="rect" /> est en dehors des limites de la bitmap source.</exception>
        <exception cref="T:System.ArgumentException">La hauteur ou la largeur de <paramref name="rect" /> est 0.</exception>
      </Docs>
    </Member>
    <Member MemberName="FromHicon">
      <MemberSignature Language="C#" Value="public static System.Drawing.Bitmap FromHicon (IntPtr hicon);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Bitmap FromHicon(native int hicon) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.FromHicon(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHicon (hicon As IntPtr) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Bitmap ^ FromHicon(IntPtr hicon);" />
      <MemberSignature Language="F#" Value="static member FromHicon : nativeint -&gt; System.Drawing.Bitmap" Usage="System.Drawing.Bitmap.FromHicon hicon" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hicon" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="hicon">Handle d'une icône.</param>
        <summary>Crée un <see cref="T:System.Drawing.Bitmap" /> à partir du handle Windows d'une icône.</summary>
        <returns>
          <see cref="T:System.Drawing.Bitmap" /> créé par cette méthode.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
-   Obtient le handle vers une image d’icône existante.  
  
-   Crée un <xref:System.Drawing.Bitmap> à partir du handle.  
  
-   Dessine le <xref:System.Drawing.Bitmap> à l’écran.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#3](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#3)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#3)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour appeler dans du code non managé. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="FromResource">
      <MemberSignature Language="C#" Value="public static System.Drawing.Bitmap FromResource (IntPtr hinstance, string bitmapName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Drawing.Bitmap FromResource(native int hinstance, string bitmapName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.FromResource(System.IntPtr,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromResource (hinstance As IntPtr, bitmapName As String) As Bitmap" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Bitmap ^ FromResource(IntPtr hinstance, System::String ^ bitmapName);" />
      <MemberSignature Language="F#" Value="static member FromResource : nativeint * string -&gt; System.Drawing.Bitmap" Usage="System.Drawing.Bitmap.FromResource (hinstance, bitmapName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Bitmap</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hinstance" Type="System.IntPtr" />
        <Parameter Name="bitmapName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hinstance">Handle d'une instance du fichier exécutable contenant la ressource.</param>
        <param name="bitmapName">Chaîne qui contient le nom de la bitmap de ressource.</param>
        <summary>Crée un <see cref="T:System.Drawing.Bitmap" /> à partir de la ressource Windows spécifiée.</summary>
        <returns>
          <see cref="T:System.Drawing.Bitmap" /> créé par cette méthode.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Drawing.Bitmap.FromResource%2A> requiert l’autorisation de sécurité d’appeler du code non managé. Pour une alternative managée pour la création d’une image bitmap à partir d’une ressource incorporée, consultez <xref:System.Drawing.Bitmap.%23ctor%28System.Type%2CSystem.String%29?displayProperty=nameWithType>. <xref:System.Drawing.Bitmap.FromResource%2A> fonctionne uniquement avec les bitmaps qui sont des ressources nommées dans une DLL.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour appeler dans du code non managé. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetHbitmap">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crée un objet bitmap GDI à partir d’un <see cref="T:System.Drawing.Bitmap" /> GDI+.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetHbitmap">
      <MemberSignature Language="C#" Value="public IntPtr GetHbitmap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHbitmap() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetHbitmap" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHbitmap () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHbitmap();" />
      <MemberSignature Language="F#" Value="member this.GetHbitmap : unit -&gt; nativeint" Usage="bitmap.GetHbitmap " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;dotnet-plat-ext-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Crée un objet bitmap [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] à partir de <see cref="T:System.Drawing.Bitmap" />.</summary>
        <returns>Handle de l'objet bitmap [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] créé par cette méthode.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous êtes chargé d’appeler le [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject` méthode pour libérer la mémoire utilisée par le [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] objet bitmap. Pour plus d’informations sur les images bitmap GDI, consultez [Bitmaps](http://go.microsoft.com/fwlink/?LinkId=205685) dans la documentation Windows GDI.  
  
   
  
## Examples  
 L'exemple de code suivant illustre l'utilisation de la méthode <xref:System.Drawing.Bitmap.GetHbitmap%2A>.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#4)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#4)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La largeur ou la hauteur de la bitmap est supérieure à <see cref="F:System.Int16.MaxValue" />.</exception>
        <exception cref="T:System.Exception">L'opération a échoué.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour appeler dans du code non managé. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHbitmap">
      <MemberSignature Language="C#" Value="public IntPtr GetHbitmap (System.Drawing.Color background);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHbitmap(valuetype System.Drawing.Color background) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetHbitmap(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHbitmap (background As Color) As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHbitmap(System::Drawing::Color background);" />
      <MemberSignature Language="F#" Value="member this.GetHbitmap : System.Drawing.Color -&gt; nativeint" Usage="bitmap.GetHbitmap background" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;dotnet-plat-ext-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="background" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="background">Structure <see cref="T:System.Drawing.Color" /> qui spécifie la couleur d'arrière-plan. Ce paramètre est ignoré si la bitmap est totalement opaque.</param>
        <summary>Crée un objet bitmap [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] à partir de <see cref="T:System.Drawing.Bitmap" />.</summary>
        <returns>Handle de l'objet bitmap [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] créé par cette méthode.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous êtes chargé d’appeler le [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] `DeleteObject` méthode pour libérer la mémoire utilisée par le [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] objet bitmap. Pour plus d’informations sur les images bitmap GDI, consultez [Bitmaps](http://go.microsoft.com/fwlink/?LinkId=205685) dans la documentation Windows GDI.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Drawing.Bitmap.GetHbitmap%2A>.method.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#5)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La largeur ou la hauteur de la bitmap est supérieure à <see cref="F:System.Int16.MaxValue" />.</exception>
        <exception cref="T:System.Exception">L'opération a échoué.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour appeler dans du code non managé. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetHicon">
      <MemberSignature Language="C#" Value="public IntPtr GetHicon ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance native int GetHicon() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetHicon" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHicon () As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IntPtr GetHicon();" />
      <MemberSignature Language="F#" Value="member this.GetHicon : unit -&gt; nativeint" Usage="bitmap.GetHicon " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netcore-2.1;dotnet-plat-ext-2.1">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne le handle d'une icône.</summary>
        <returns>Handle Windows d'une icône avec la même image que <see cref="T:System.Drawing.Bitmap" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Au départ, une icône créée à partir du handle aura la même taille que la bitmap d’origine.  
  
   
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
-   Crée un <xref:System.Drawing.Bitmap>.  
  
-   Dessine l’objet à l’écran.  
  
-   Obtient un handle de l’icône pour le <xref:System.Drawing.Bitmap>.  
  
-   Définit le <xref:System.Windows.Forms.Form.Icon%2A?displayProperty=nameWithType> attribut de la forme d’une icône créée à partir du handle.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#6](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#6)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#6)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">L'opération a échoué.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">pour appeler dans du code non managé. Énumération associée : <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="GetPixel">
      <MemberSignature Language="C#" Value="public System.Drawing.Color GetPixel (int x, int y);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Color GetPixel(int32 x, int32 y) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.GetPixel(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPixel (x As Integer, y As Integer) As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Color GetPixel(int x, int y);" />
      <MemberSignature Language="F#" Value="member this.GetPixel : int * int -&gt; System.Drawing.Color" Usage="bitmap.GetPixel (x, y)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="x">Coordonnée x du pixel à récupérer.</param>
        <param name="y">Coordonnée y du pixel à récupérer.</param>
        <summary>Obtient la couleur du pixel spécifié dans ce <see cref="T:System.Drawing.Bitmap" />.</summary>
        <returns>Structure <see cref="T:System.Drawing.Color" /> représentant la couleur du pixel spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code obtient la couleur d’un pixel dans une image bitmap, puis remplit un rectangle avec cette couleur.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#7](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#7)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#7)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="x" /> est inférieur à 0 ou supérieur ou égal à <see cref="P:System.Drawing.Image.Width" />.  
  
- ou - 
 <paramref name="y" /> est inférieur à 0 ou supérieur ou égal à <see cref="P:System.Drawing.Image.Height" />.</exception>
        <exception cref="T:System.Exception">L'opération a échoué.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="LockBits">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Verrouille <see cref="T:System.Drawing.Bitmap" /> dans la mémoire système.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LockBits">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.BitmapData LockBits (System.Drawing.Rectangle rect, System.Drawing.Imaging.ImageLockMode flags, System.Drawing.Imaging.PixelFormat format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Imaging.BitmapData LockBits(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Imaging.ImageLockMode flags, valuetype System.Drawing.Imaging.PixelFormat format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Function LockBits (rect As Rectangle, flags As ImageLockMode, format As PixelFormat) As BitmapData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Imaging::BitmapData ^ LockBits(System::Drawing::Rectangle rect, System::Drawing::Imaging::ImageLockMode flags, System::Drawing::Imaging::PixelFormat format);" />
      <MemberSignature Language="F#" Value="member this.LockBits : System.Drawing.Rectangle * System.Drawing.Imaging.ImageLockMode * System.Drawing.Imaging.PixelFormat -&gt; System.Drawing.Imaging.BitmapData" Usage="bitmap.LockBits (rect, flags, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.BitmapData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ImageLockMode" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
      </Parameters>
      <Docs>
        <param name="rect">Structure <see cref="T:System.Drawing.Rectangle" /> qui spécifie la partie de <see cref="T:System.Drawing.Bitmap" /> à verrouiller.</param>
        <param name="flags">Énumération <see cref="T:System.Drawing.Imaging.ImageLockMode" /> qui spécifie le niveau d'accès (lecture/écriture) de <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="format">Énumération <see cref="T:System.Drawing.Imaging.PixelFormat" /> qui spécifie le format de données de ce <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Verrouille <see cref="T:System.Drawing.Bitmap" /> dans la mémoire système.</summary>
        <returns>
          <see cref="T:System.Drawing.Imaging.BitmapData" /> qui contient des informations sur cette opération de verrouillage.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Drawing.Bitmap.LockBits%2A> méthode pour verrouiller une bitmap existante dans la mémoire système afin qu’il peut être modifié par programme. Vous pouvez modifier la couleur d’une image avec la <xref:System.Drawing.Bitmap.SetPixel%2A> (méthode), bien que le <xref:System.Drawing.Bitmap.LockBits%2A> méthode offre de meilleures performances pour les modifications à grande échelle.  
  
 Le <xref:System.Drawing.Imaging.BitmapData> spécifie les attributs de la <xref:System.Drawing.Bitmap>, telles que la taille, le format de pixel ou l’adresse de départ des données de pixels dans la mémoire et la longueur de chaque ligne de numérisation (pas).  
  
 Lorsque vous appelez cette méthode, vous devez utiliser un membre de la <xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType> énumération qui contient une valeur spécifique bits par pixel (BPP). À l’aide de <xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType> valeurs telles que <xref:System.Drawing.Imaging.PixelFormat.Indexed> et <xref:System.Drawing.Imaging.PixelFormat.Gdi> lèvera une <xref:System.ArgumentException?displayProperty=nameWithType>. En outre, en passant le format de pixel incorrect pour une image bitmap lèvera une <xref:System.ArgumentException?displayProperty=nameWithType>.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Height%2A>, <xref:System.Drawing.Image.Width%2A>, et <xref:System.Drawing.Imaging.BitmapData.Scan0%2A> propriétés ; le <xref:System.Drawing.Bitmap.LockBits%2A> et <xref:System.Drawing.Bitmap.UnlockBits%2A> méthodes ; et le <xref:System.Drawing.Imaging.ImageLockMode> énumération. Cet exemple est conçu pour être utilisé avec Windows Forms. Cet exemple n’est pas conçu pour fonctionner correctement avec tous les formats de pixel, mais pour fournir un exemple montrant comment utiliser le <xref:System.Drawing.Bitmap.LockBits%2A> (méthode). Pour exécuter cet exemple, collez-le dans un formulaire et gérer du formulaire <xref:System.Windows.Forms.Control.Paint> événement en appelant le `LockUnlockBitsExample` méthode, en passant `e` comme <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.BitmapMembers#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.BitmapMembers#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#5)]
 [!code-vb[System.Drawing.BitmapMembers#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <see cref="T:System.Drawing.Imaging.PixelFormat" /> n'est pas une valeur en bits par pixel spécifique.  
  
- ou - 
Le <see cref="T:System.Drawing.Imaging.PixelFormat" /> inexact est passé pour une bitmap.</exception>
        <exception cref="T:System.Exception">L'opération a échoué.</exception>
      </Docs>
    </Member>
    <Member MemberName="LockBits">
      <MemberSignature Language="C#" Value="public System.Drawing.Imaging.BitmapData LockBits (System.Drawing.Rectangle rect, System.Drawing.Imaging.ImageLockMode flags, System.Drawing.Imaging.PixelFormat format, System.Drawing.Imaging.BitmapData bitmapData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Drawing.Imaging.BitmapData LockBits(valuetype System.Drawing.Rectangle rect, valuetype System.Drawing.Imaging.ImageLockMode flags, valuetype System.Drawing.Imaging.PixelFormat format, class System.Drawing.Imaging.BitmapData bitmapData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.LockBits(System.Drawing.Rectangle,System.Drawing.Imaging.ImageLockMode,System.Drawing.Imaging.PixelFormat,System.Drawing.Imaging.BitmapData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Imaging::BitmapData ^ LockBits(System::Drawing::Rectangle rect, System::Drawing::Imaging::ImageLockMode flags, System::Drawing::Imaging::PixelFormat format, System::Drawing::Imaging::BitmapData ^ bitmapData);" />
      <MemberSignature Language="F#" Value="member this.LockBits : System.Drawing.Rectangle * System.Drawing.Imaging.ImageLockMode * System.Drawing.Imaging.PixelFormat * System.Drawing.Imaging.BitmapData -&gt; System.Drawing.Imaging.BitmapData" Usage="bitmap.LockBits (rect, flags, format, bitmapData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Imaging.BitmapData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rect" Type="System.Drawing.Rectangle" />
        <Parameter Name="flags" Type="System.Drawing.Imaging.ImageLockMode" />
        <Parameter Name="format" Type="System.Drawing.Imaging.PixelFormat" />
        <Parameter Name="bitmapData" Type="System.Drawing.Imaging.BitmapData" />
      </Parameters>
      <Docs>
        <param name="rect">Structure rectangle qui spécifie la partie de <see cref="T:System.Drawing.Bitmap" /> à verrouiller.</param>
        <param name="flags">Une des valeurs <see cref="T:System.Drawing.Imaging.ImageLockMode" /> qui spécifie le niveau d'accès (lecture/écriture) de <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="format">Une des valeurs <see cref="T:System.Drawing.Imaging.PixelFormat" /> qui spécifie le format des données de <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="bitmapData">
          <see cref="T:System.Drawing.Imaging.BitmapData" /> qui contient des informations sur l'opération de verrouillage.</param>
        <summary>Verrouille <see cref="T:System.Drawing.Bitmap" /> dans la mémoire système</summary>
        <returns>
          <see cref="T:System.Drawing.Imaging.BitmapData" /> qui contient des informations sur l'opération de verrouillage.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez le <xref:System.Drawing.Bitmap.LockBits%2A> méthode pour verrouiller une bitmap existante dans la mémoire système afin qu’il peut être modifié par programme. Vous pouvez modifier la couleur d’une image avec la <xref:System.Drawing.Bitmap.SetPixel%2A> (méthode), bien que le <xref:System.Drawing.Bitmap.LockBits%2A> méthode offre de meilleures performances pour les modifications à grande échelle.  
  
 Lorsque vous appelez cette méthode, vous devez utiliser un membre de la <xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType> énumération qui contient une valeur spécifique bits par pixel (BPP). À l’aide de <xref:System.Drawing.Imaging.PixelFormat?displayProperty=nameWithType> valeurs, telles que <xref:System.Drawing.Imaging.PixelFormat.Indexed> et <xref:System.Drawing.Imaging.PixelFormat.Gdi>, lève un <xref:System.ArgumentException?displayProperty=nameWithType>. En outre, en passant le format de pixel incorrect pour une image bitmap lèvera une <xref:System.ArgumentException?displayProperty=nameWithType>.  
  
 Cette version de la <xref:System.Drawing.Bitmap.LockBits%2A> méthode est destinée à être utilisé avec un `flags` valeur <xref:System.Drawing.Imaging.ImageLockMode.UserInputBuffer?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">La valeur <see cref="T:System.Drawing.Imaging.PixelFormat" /> n'est pas une valeur en bits par pixel spécifique.  
  
- ou - 
Le <see cref="T:System.Drawing.Imaging.PixelFormat" /> inexact est passé pour une bitmap.</exception>
        <exception cref="T:System.Exception">L'opération a échoué.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MakeTransparent">
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Rend transparente la couleur transparente par défaut pour ce <see cref="T:System.Drawing.Bitmap" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MakeTransparent">
      <MemberSignature Language="C#" Value="public void MakeTransparent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeTransparent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.MakeTransparent" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeTransparent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeTransparent();" />
      <MemberSignature Language="F#" Value="member this.MakeTransparent : unit -&gt; unit" Usage="bitmap.MakeTransparent " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Rend transparente la couleur transparente par défaut pour ce <see cref="T:System.Drawing.Bitmap" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La palette système définit une couleur comme couleur transparente ou alpha, par défaut. Cette méthode rend la couleur transparente par défaut par ce <xref:System.Drawing.Bitmap>. Si aucune couleur transparente n’est spécifié par le système, <xref:System.Drawing.Color.LightGray%2A> est la couleur transparente.  
  
 Lorsque vous appelez <xref:System.Drawing.Bitmap.MakeTransparent%2A>, l’image bitmap sera converti en la <xref:System.Drawing.Imaging.PixelFormat.Format32bppArgb> mettre en forme, car ce format prend en charge un canal alpha.  
  
   
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code rend le système par défaut couleur transparente pour `myBitmap`, puis dessine la <xref:System.Drawing.Bitmap> à l’écran.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#8](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#8)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#8)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Le format d’image du <see cref="T:System.Drawing.Bitmap" /> est un format icône.</exception>
        <exception cref="T:System.Exception">L'opération a échoué.</exception>
      </Docs>
    </Member>
    <Member MemberName="MakeTransparent">
      <MemberSignature Language="C#" Value="public void MakeTransparent (System.Drawing.Color transparentColor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MakeTransparent(valuetype System.Drawing.Color transparentColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.MakeTransparent(System.Drawing.Color)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MakeTransparent (transparentColor As Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MakeTransparent(System::Drawing::Color transparentColor);" />
      <MemberSignature Language="F#" Value="member this.MakeTransparent : System.Drawing.Color -&gt; unit" Usage="bitmap.MakeTransparent transparentColor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transparentColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="transparentColor">Structure <see cref="T:System.Drawing.Color" /> représentant la couleur à rendre transparente.</param>
        <summary>Rend transparente la couleur spécifiée de ce <see cref="T:System.Drawing.Bitmap" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque vous appelez <xref:System.Drawing.Bitmap.MakeTransparent%2A>, l’image bitmap sera converti en la <xref:System.Drawing.Imaging.PixelFormat.Format32bppArgb> mettre en forme, car ce format prend en charge un canal alpha.  
  
   
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
-   Obtient la couleur d’un pixel dans un <xref:System.Drawing.Bitmap>.  
  
-   Rend cette couleur transparente de l’image bitmap.  
  
-   Dessine le <xref:System.Drawing.Bitmap> à l’écran.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#9](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#9)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#9)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Le format d’image du <see cref="T:System.Drawing.Bitmap" /> est un format icône.</exception>
        <exception cref="T:System.Exception">L'opération a échoué.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetPixel">
      <MemberSignature Language="C#" Value="public void SetPixel (int x, int y, System.Drawing.Color color);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPixel(int32 x, int32 y, valuetype System.Drawing.Color color) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.SetPixel(System.Int32,System.Int32,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPixel(int x, int y, System::Drawing::Color color);" />
      <MemberSignature Language="F#" Value="member this.SetPixel : int * int * System.Drawing.Color -&gt; unit" Usage="bitmap.SetPixel (x, y, color)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="x" Type="System.Int32" />
        <Parameter Name="y" Type="System.Int32" />
        <Parameter Name="color" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="x">Coordonnée x du pixel à définir.</param>
        <param name="y">Coordonnée y du pixel à définir.</param>
        <param name="color">Une structure <see cref="T:System.Drawing.Color" /> qui représente la couleur à assigner au pixel spécifié.</param>
        <summary>Définit la couleur du pixel spécifié dans ce <see cref="T:System.Drawing.Bitmap" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez <xref:System.Drawing.Bitmap.SetPixel%2A> méthode pour définir la couleur d’un pixel dans une image par programmation. Vous pouvez également modifier une image par programmation à l’aide de la <xref:System.Drawing.Bitmap.LockBits%2A> (méthode). En général, pour les modifications à grande échelle, le <xref:System.Drawing.Bitmap.LockBits%2A> méthode offre de meilleures performances.  
  
   
  
## Examples  
 L’exemple de code suivant est conçu pour une utilisation avec Windows Forms et nécessite <xref:System.Windows.Forms.PaintEventArgs> `e`, qui est un paramètre de la <xref:System.Windows.Forms.Control.Paint> Gestionnaire d’événements. Le code exécute les actions suivantes :  
  
-   Crée un <xref:System.Drawing.Bitmap>.  
  
-   Définit la couleur de chaque pixel dans l’image bitmap en noir.  
  
-   Dessine l’image bitmap.  
  
 [!code-cpp[System.Drawing.ClassicBitmapExamples#10](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CPP/form1.cpp#10)]
 [!code-csharp[System.Drawing.ClassicBitmapExamples#10](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/CS/form1.cs#10)]
 [!code-vb[System.Drawing.ClassicBitmapExamples#10](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.ClassicBitmapExamples/VB/form1.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">L'opération a échoué.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetResolution">
      <MemberSignature Language="C#" Value="public void SetResolution (float xDpi, float yDpi);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResolution(float32 xDpi, float32 yDpi) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.SetResolution(System.Single,System.Single)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResolution (xDpi As Single, yDpi As Single)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetResolution(float xDpi, float yDpi);" />
      <MemberSignature Language="F#" Value="member this.SetResolution : single * single -&gt; unit" Usage="bitmap.SetResolution (xDpi, yDpi)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xDpi" Type="System.Single" />
        <Parameter Name="yDpi" Type="System.Single" />
      </Parameters>
      <Docs>
        <param name="xDpi">Résolution horizontale, en points par pouce, du <see cref="T:System.Drawing.Bitmap" />.</param>
        <param name="yDpi">Résolution verticale, en points par pouce, du <see cref="T:System.Drawing.Bitmap" />.</param>
        <summary>Définit la résolution de ce <see cref="T:System.Drawing.Bitmap" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez cette méthode pour définir la résolution de votre choix sur une image bitmap nouvellement créée. Modification de la résolution de l’image ne modifie pas sa taille physique.  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Drawing.Bitmap.SetResolution%2A> (méthode).  
  
 [!code-csharp[System.Drawing.Misc3#SetResolution](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.Misc3/CS/Form1.cs#setresolution)]
 [!code-vb[System.Drawing.Misc3#SetResolution](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.Misc3/VB/Form1.vb#setresolution)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">L'opération a échoué.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnlockBits">
      <MemberSignature Language="C#" Value="public void UnlockBits (System.Drawing.Imaging.BitmapData bitmapdata);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnlockBits(class System.Drawing.Imaging.BitmapData bitmapdata) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Drawing.Bitmap.UnlockBits(System.Drawing.Imaging.BitmapData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnlockBits(System::Drawing::Imaging::BitmapData ^ bitmapdata);" />
      <MemberSignature Language="F#" Value="member this.UnlockBits : System.Drawing.Imaging.BitmapData -&gt; unit" Usage="bitmap.UnlockBits bitmapdata" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Drawing</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Drawing.Common</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bitmapdata" Type="System.Drawing.Imaging.BitmapData" />
      </Parameters>
      <Docs>
        <param name="bitmapdata">
          <see cref="T:System.Drawing.Imaging.BitmapData" /> qui spécifie des informations sur l'opération de verrouillage.</param>
        <summary>Déverrouille ce <see cref="T:System.Drawing.Bitmap" /> dans la mémoire système.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Drawing.Imaging.BitmapData> spécifie les attributs de la <xref:System.Drawing.Bitmap>, telles que la taille, le format de pixel ou l’adresse de départ des données de pixels dans la mémoire et la longueur de chaque ligne de numérisation (pas).  
  
   
  
## Examples  
 L’exemple de code suivant montre comment utiliser le <xref:System.Drawing.Image.PixelFormat%2A>, <xref:System.Drawing.Image.Height%2A>, <xref:System.Drawing.Image.Width%2A>, et <xref:System.Drawing.Imaging.BitmapData.Scan0%2A> propriétés ; le <xref:System.Drawing.Bitmap.LockBits%2A> et <xref:System.Drawing.Bitmap.UnlockBits%2A> méthodes ; et le <xref:System.Drawing.Imaging.ImageLockMode> énumération. Cet exemple n’est pas conçu pour fonctionner correctement avec tous les formats de pixel, mais pour fournir un exemple montrant comment utiliser le <xref:System.Drawing.Bitmap.LockBits%2A> (méthode). Cet exemple est conçu pour être utilisé avec Windows Forms. Pour exécuter cet exemple, collez-le dans un formulaire et gérer du formulaire <xref:System.Windows.Forms.Control.Paint> événement en appelant le `LockUnlockBitsExample` méthode, en passant `e` comme <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-cpp[System.Drawing.BitmapMembers#5](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CPP/form1.cpp#5)]
 [!code-csharp[System.Drawing.BitmapMembers#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Drawing.BitmapMembers/CS/form1.cs#5)]
 [!code-vb[System.Drawing.BitmapMembers#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Drawing.BitmapMembers/VB/form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">L'opération a échoué.</exception>
      </Docs>
    </Member>
  </Members>
</Type>