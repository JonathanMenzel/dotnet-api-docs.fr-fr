<Type Name="SqlMembershipProvider" FullName="System.Web.Security.SqlMembershipProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2c653fcd735b425b1a29ff05b8e411e9f2c59cc5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36397774" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlMembershipProvider : System.Web.Security.MembershipProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlMembershipProvider extends System.Web.Security.MembershipProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.SqlMembershipProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlMembershipProvider&#xA;Inherits MembershipProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlMembershipProvider : System::Web::Security::MembershipProvider" />
  <TypeSignature Language="F#" Value="type SqlMembershipProvider = class&#xA;    inherit MembershipProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.MembershipProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Manages storage of membership information for an ASP.NET application in a SQL Server database.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette classe est utilisée par le <xref:System.Web.Security.Membership> et <xref:System.Web.Security.MembershipUser> classes pour fournir des services d’appartenance pour une application ASP.NET à l’aide d’une base de données SQL Server. Vous ne pouvez pas utiliser un <xref:System.Web.Security.SqlMembershipProvider> sans SQL Server. Lorsque votre ordinateur SQL Server Express est installé avec le nom de l’instance par défaut et l’instanciation de l’utilisateur activé, le <xref:System.Web.Security.SqlMembershipProvider> objet crée une base de données appelée `aspnetdb` dans l’application `App_Data` Active la première fois que l’application est exécuté.  
  
 Pour créer manuellement la base de données, exécutez le `Aspnet_regsql.exe` exécutable se trouve dans le `%systemroot%\Microsoft.NET\Framework\ versionNumber` dossier et spécifiez le `-A m` option (par exemple `aspnet_regsql.exe -A m`). La base de données créée est appelée Aspnetdb. Vous pouvez également exécuter `Aspnet_regsql.exe` pour extraire le mode de configuration de l’interface graphique utilisateur et choisir de configurer toutes les fonctionnalités ASP.NET.  
  
 Si le fournisseur d’appartenances est configuré avec une chaîne de connexion qui utilise la sécurité intégrée, le compte de processus de l’application ASP.NET doit disposer des droits pour se connecter à la base de données SQL Server.  
  
 Le fichier Machine.config définit une valeur par défaut <xref:System.Web.Security.SqlMembershipProvider> instance nommée `AspNetSqlMembershipProvider` qui se connecte à l’instance de SQL Server Express par défaut sur l’ordinateur local. Vous pouvez utiliser cette instance du fournisseur si vous avez installé SQL Server Express avec le nom de l’instance par défaut, ou vous pouvez définir votre propre instance dans le fichier Web.config de votre application ASP.NET.  
  
 Si vous définissez la `passwordCompatMode` attribut <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework40>, l’application peut utiliser le hachage et les options de l’appartenance de chiffrement qui ont été ajoutées dans ASP.NET 4. Toutefois, si le `passwordCompatMode` attribut a la valeur <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20>, les options que l’appartenance de hachage et de chiffrement d’ASP.NET 2.0, ASP.NET 3.5, et ASP.NET 3.5 SP1 peut être utilisé. La valeur par défaut est <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode.Framework20>. Pour plus d'informations, consultez <xref:System.Web.Configuration.MembershipPasswordCompatibilityMode>.  
  
   
  
## Examples  
 L’exemple de code suivant montre le fichier Web.config pour une application ASP.NET configurée pour utiliser un <xref:System.Web.Security.SqlMembershipProvider>.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="login.aspx"  
        name=".ASPXFORMSAUTH" />  
    </authentication>  
    <authorization>  
      <deny users="?" />  
    </authorization>  
    <membership defaultProvider="SqlProvider"  
      userIsOnlineTimeWindow="15">  
      <providers>  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          applicationName="MyApplication"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          requiresUniqueEmail="false"  
          passwordFormat="Hashed"  
          maxInvalidPasswordAttempts="5"  
          passwordAttemptWindow="10" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlMembershipProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlMembershipProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Web.Security.SqlMembershipProvider" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.SqlMembershipProvider.%23ctor%2A> constructeur est appelé par ASP.NET pour créer une instance de la <xref:System.Web.Security.SqlMembershipProvider> classe comme spécifié dans la configuration de l’application. Ce constructeur n’est pas destiné à être utilisé à partir de votre code.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.SqlMembershipProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of the application to store and retrieve membership information for.</summary>
        <value>Le nom de l’application pour stocker et récupérer des informations d’appartenance. La valeur par défaut est la <see cref="P:System.Web.HttpRequest.ApplicationPath" /> valeur en cours de la propriété <see cref="P:System.Web.HttpContext.Request" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> est utilisé par le <xref:System.Web.Security.SqlMembershipProvider> pour regrouper les informations utilisateur. En qualifiant des informations utilisateur avec un nom d’application, vous pouvez stocker des informations pour plusieurs applications dans une base de données sans provoquer de conflits entre les noms d’utilisateur en double. En outre, plusieurs applications ASP.NET peuvent utiliser la même base de données utilisateur en spécifiant la même valeur dans le <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> propriété. Le <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> propriété peut être définie par programme, ou il peut être définie de manière déclarative dans le fichier de configuration de l’application Web avec le `applicationName` attribut.  
  
 Si une valeur n’est pas spécifiée pour le `applicationName` attribut dans le fichier de configuration de l’application Web, puis le <xref:System.Web.HttpRequest.ApplicationPath%2A> valeur de propriété pour la première demande adressée à l’application est utilisée.  
  
> [!CAUTION]
>  Car une instance du fournisseur d’appartenances par défaut unique est utilisée pour toutes les demandes traitées par un <xref:System.Web.HttpApplication> de l’objet, vous pouvez avoir plusieurs demandes exécutées concurremment et tentez de définir la <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> valeur de propriété. Le <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> propriété n’est pas thread-safe pour les écritures multiples et la modification du <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> valeur de propriété peut entraîner un comportement inattendu pour plusieurs utilisateurs d’une application. Nous vous recommandons d’éviter l’écriture de code pour permettre aux utilisateurs de définir la <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> propriété, sauf si vous devez. Un exemple d’une application où le paramètre le <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> propriété peut être requise est une application d’administration qui gère les données d’appartenance de plusieurs applications. Une telle application doit être une application utilisateur unique et non une application Web.  
  
   
  
## Examples  
 L’exemple de code suivant montre l’élément dans la `system.web` section du fichier Web.config pour une application ASP.NET. Il spécifie l’application <xref:System.Web.Security.SqlMembershipProvider> instance et définit les <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> à `MyApplication`.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">An attempt was made to set the <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> property to an empty string or <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">An attempt was made to set the <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" /> property to a string that is longer than 256 characters.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public override bool ChangePassword (string username, string oldPassword, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePassword(string username, string oldPassword, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ChangePassword(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePassword (username As String, oldPassword As String, newPassword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePassword(System::String ^ username, System::String ^ oldPassword, System::String ^ newPassword);" />
      <MemberSignature Language="F#" Value="override this.ChangePassword : string * string * string -&gt; bool" Usage="sqlMembershipProvider.ChangePassword (username, oldPassword, newPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="oldPassword" Type="System.String" />
        <Parameter Name="newPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to update the password for.</param>
        <param name="oldPassword">The current password for the specified user.</param>
        <param name="newPassword">The new password for the specified user.</param>
        <summary>Modifies a user's password.</summary>
        <returns>
          <see langword="true" /> if the password was updated successfully. <see langword="false" /> if the supplied old password is invalid, the user is locked out, or the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée par la <xref:System.Web.Security.Membership> classe pour mettre à jour le mot de passe d’un utilisateur dans la base de données SQL Server spécifiée dans le fichier de configuration de l’application ASP.NET (Web.config).  
  
 La longueur maximale est de 128 caractères.  
  
 Si un mot de passe est fournie à la <xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A> (méthode), le compteur interne qui suit les tentatives de mot de passe non valide est incrémenté d’un. Cela peut entraîner l’utilisateur est verrouillé et Impossible de se connecter jusqu'à ce que l’état du verrou est désactivée par un appel à la <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> (méthode). Si le mot de passe correct est spécifié et que l’utilisateur n’est pas verrouillé actuellement, les compteurs internes ce mot de passe non valide de suivre et de tentatives de réponse de mot de passe sont remis à zéro. Pour plus d’informations, consultez la <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> et <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> propriétés.  
  
 Vous pouvez appeler la <xref:System.Web.Security.SqlMembershipProvider.ChangePassword%2A> méthode directement en obtenant d’abord une référence à la <xref:System.Web.Security.SqlMembershipProvider> par le biais de l’instance le <xref:System.Web.Security.Membership.Provider%2A> propriété de la <xref:System.Web.Security.Membership> classe. Le <xref:System.Web.Security.Membership.Provider%2A> propriété expose le `defaultProvider` spécifié dans le fichier Web.config de l’application. Configuré des fournisseurs qui ne sont pas le fournisseur par défaut référencé à l’aide de la <xref:System.Web.Security.Membership.Providers%2A> propriété.  
  
 Vous pouvez également modifier les mots de passe utilisateur à l’aide de la <xref:System.Web.Security.MembershipUser.ChangePassword%2A> (méthode).  
  
 Début et les espaces de fin sont supprimés de toutes les valeurs de paramètre.  
  
   
  
## Examples  
 L’exemple de code suivant modifie le mot de passe pour l’utilisateur spécifié.  
  
> [!NOTE]
>  Cet exemple utilise le <xref:System.Web.Security.Membership.Provider%2A> propriété de la <xref:System.Web.Security.Membership> classe pour appeler le <xref:System.Web.Security.SqlMembershipProvider> spécifié en tant que le `defaultProvider` dans le fichier Web.config. Si vous devez accéder au fournisseur par défaut en tant que type <xref:System.Web.Security.SqlMembershipProvider>, vous pouvez effectuer un cast du <xref:System.Web.Security.Membership.Provider%2A> propriété de la <xref:System.Web.Security.Membership> classe. Pour accéder à d’autres fournisseurs configurés en tant que type de fournisseur spécifique, vous pouvez y accéder par leur nom configuré avec le <xref:System.Web.Security.Membership.Providers%2A> propriété de la <xref:System.Web.Security.Membership> classe et de les convertir en tant que type de fournisseur spécifique.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordcs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  <paramref name="oldPassword" /> is an empty string or longer than 128 characters.  \- or -  <paramref name="newPassword" /> is an empty string or longer than 128 characters.  \- or -  The encoded version of <paramref name="newPassword" /> is greater than 128 characters.  \- or -  The change-password action was canceled by a subscriber to the <see cref="E:System.Web.Security.Membership.ValidatingPassword" /> event, and the <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" /> property was <see langword="null" />.  \- or -  The length of <paramref name="newPassword" /> is less than the minimum length specified in the <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" /> property.  \- or -  The number of non-alphabetic characters in <paramref name="newPassword" /> is less than the required number of non-alphabetic characters specified in the <see cref="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" /> property.  \- or -  <paramref name="newPassword" /> does not pass the regular expression defined in the <see cref="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" /> property.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="oldPassword" /> is <see langword="null" />.  \- or -  <paramref name="newPassword" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="username" /> was not found in the database.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">An error occurred while setting the new password value at the database.</exception>
        <exception cref="T:System.Exception">An unhandled exception occurred.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePasswordQuestionAndAnswer(string username, string password, string newPasswordQuestion, string newPasswordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePasswordQuestionAndAnswer (username As String, password As String, newPasswordQuestion As String, newPasswordAnswer As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePasswordQuestionAndAnswer(System::String ^ username, System::String ^ password, System::String ^ newPasswordQuestion, System::String ^ newPasswordAnswer);" />
      <MemberSignature Language="F#" Value="override this.ChangePasswordQuestionAndAnswer : string * string * string * string -&gt; bool" Usage="sqlMembershipProvider.ChangePasswordQuestionAndAnswer (username, password, newPasswordQuestion, newPasswordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="newPasswordQuestion" Type="System.String" />
        <Parameter Name="newPasswordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to change the password question and answer for.</param>
        <param name="password">The password for the specified user.</param>
        <param name="newPasswordQuestion">The new password question for the specified user.</param>
        <param name="newPasswordAnswer">The new password answer for the specified user.</param>
        <summary>Updates the password question and answer for a user in the SQL Server membership database.</summary>
        <returns>
          <see langword="true" /> if the update was successful; otherwise, <see langword="false" />. A value of <see langword="false" /> is also returned if the <paramref name="password" /> is incorrect, the user is locked out, or the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée par la <xref:System.Web.Security.MembershipUser> classe pour mettre à jour de la question de mot de passe et de réponse pour un utilisateur dans la base de données SQL Server qui est spécifié dans le fichier de configuration de l’application ASP.NET (Web.config). La réponse de mot de passe est chiffrée à l’aide du format spécifié dans le <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> propriété.  
  
 Exiger une question de mot de passe et une réponse fournit une couche supplémentaire de sécurité lors de la récupération ou de réinitialisation de mot de passe d’un utilisateur. Lorsque vous créez un nom d’utilisateur, un utilisateur peut fournir une question et une réponse qui permettre être utilisée ultérieurement pour récupérer ou réinitialiser un mot de passe oublié. Le <xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A> méthode met à jour la question de mot de passe et la réponse d’un utilisateur d’appartenance.  
  
 Si un mot de passe est fournie à la <xref:System.Web.Security.SqlMembershipProvider.ChangePasswordQuestionAndAnswer%2A> (méthode), les compteurs internes que suivre les tentatives de mot de passe non valides est incrémenté d’un. Cela peut entraîner l’utilisateur est verrouillé et Impossible de se connecter jusqu'à ce que l’état du verrou est supprimé en appelant le <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> (méthode). Si le mot de passe correct est spécifié et que l’utilisateur n’est pas verrouillé actuellement, les compteurs internes ce mot de passe non valide de suivre et de tentatives de réponse de mot de passe sont remis à zéro. Pour plus d’informations, consultez la <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> et <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> propriétés.  
  
 La longueur maximale de la question de mot de passe est de 256 caractères. La longueur maximale de la réponse de mot de passe est de 128 caractères.  
  
 Pour plus d'informations, consultez <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A>, <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> et <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>.  
  
 Début et les espaces de fin sont supprimés de toutes les valeurs de paramètre.  
  
   
  
## Examples  
 L’exemple de code suivant met à jour la question de mot de passe et la réponse d’un utilisateur.  
  
> [!NOTE]
>  Cet exemple utilise le <xref:System.Web.Security.Membership.Provider%2A> propriété de la <xref:System.Web.Security.Membership> classe pour appeler le <xref:System.Web.Security.SqlMembershipProvider> spécifié en tant que le `defaultProvider` dans le fichier Web.config. Si vous devez accéder au fournisseur par défaut en tant que type <xref:System.Web.Security.SqlMembershipProvider>, vous pouvez effectuer un cast du <xref:System.Web.Security.Membership.Provider%2A> propriété de la <xref:System.Web.Security.Membership> classe. Pour accéder à d’autres fournisseurs configurés en tant que type de fournisseur spécifique, vous pouvez y accéder par leur nom configuré avec le <xref:System.Web.Security.Membership.Providers%2A> propriété de la <xref:System.Web.Security.Membership> classe et de les convertir en tant que type de fournisseur spécifique.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ChangePasswordQuestioncs.aspx#10)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ChangePasswordQuestionvb.aspx#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  <paramref name="password" /> is an empty string or is longer than 128 characters.  \- or -  <paramref name="newPasswordQuestion" /> is an empty string or is longer than 256 characters.  \- or -  <paramref name="newPasswordAnswer" /> is an empty string or is longer than 128 characters.  \- or -  The encoded version of <paramref name="newPasswordAnswer" /> is longer than 128 characters.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="password" /> is <see langword="null" />.  \- or -  <paramref name="newPasswordQuestion" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.  \- or -  <paramref name="newPasswordAnswer" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">An error occurred when changing the password question and answer in the database.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="override this.CreateUser : string * string * string * string * string * bool * obj *  -&gt; System.Web.Security.MembershipUser" Usage="sqlMembershipProvider.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, providerUserKey, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">The user name for the new user.</param>
        <param name="password">The password for the new user.</param>
        <param name="email">The email address for the new user.</param>
        <param name="passwordQuestion">The password question for the new user.</param>
        <param name="passwordAnswer">The password answer for the new user.</param>
        <param name="isApproved">Whether or not the new user is approved to be validated.</param>
        <param name="providerUserKey">A <see cref="T:System.Guid" /> that uniquely identifies the membership user in the SQL Server database.</param>
        <param name="status">One of the <see cref="T:System.Web.Security.MembershipCreateStatus" /> values, indicating whether the user was created successfully.</param>
        <summary>Adds a new user to the SQL Server membership database.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object for the newly created user. If no user was created, this method returns <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée par la <xref:System.Web.Security.Membership> classe pour créer un nouvel utilisateur dans la base de données SQL Server spécifiée dans le fichier de configuration de l’application ASP.NET.  
  
 Nouveaux utilisateurs sont identifiés avec configuré <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 Si le <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> est définie sur `true`, et `null` ou une chaîne vide (« ») est spécifié pour le `email` paramètre, la création de l’utilisateur échoue. La création de l’utilisateur échoue également si le <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> est définie sur `true` et la valeur spécifiée pour le `email` paramètre est un doublon d’adresse de messagerie d’un utilisateur existant dans la base de données pour le <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 La longueur maximale du nom d’utilisateur est de 256 caractères. La longueur maximale de l’adresse de messagerie est de 256 caractères. La longueur maximale du mot de passe en texte clair ou après que qu’il a été haché ou chiffré est de 128 caractères.  
  
 Autres conditions qui provoqueront l’échec de la création d’utilisateur :  
  
-   Le `password` paramètre est `null`, ou une chaîne vide après troncature.  
  
-   La longueur de la `password` paramètre est inférieure à la valeur spécifiée dans le <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> propriété.  
  
-   Le nombre de caractères non alphabétiques dans le `password` paramètre est inférieure à la valeur spécifiée dans le <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> propriété.  
  
-   Le `password` paramètre ne passe pas l’expression régulière dans le <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> propriété.  
  
-   Code de validation de mot de passe personnalisé annulé la création de l’utilisateur pendant la <xref:System.Web.Security.MembershipProvider.ValidatingPassword> événement.  
  
-   Le <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> propriété est `true` et `passwordAnswer` paramètre est soit `null` ou une chaîne vide après troncature.  
  
-   Le `passwordAnswer` paramètre est une chaîne vide.  
  
-   Le `passwordAnswer` paramètre est supérieure à 128 caractères.  
  
-   Le <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> propriété `true` et la question de mot de passe est `null` ou une chaîne vide après troncature.  
  
-   Le `passwordQuestion` paramètre est une chaîne vide.  
  
-   Le `passwordQuestion` paramètre est plu de 256 caractères.  
  
-   Le `providerUserKey` paramètre défini sur un objet d’un type autre que <xref:System.Guid?displayProperty=nameWithType>.  
  
-   Le `providerUserKey` paramètre est un doublon d’une clé d’utilisateur existant.  
  
-   Le `username` paramètre est un doublon d’un nom d’utilisateur existant.  
  
 Espaces à gauche et sont retirés de toutes les valeurs de paramètre de chaîne.  
  
   
  
## Examples  
 L’exemple de code suivant crée un nouvel utilisateur pour une application ASP.NET configurée pour utiliser l’authentification par formulaire et la <xref:System.Web.Security.SqlMembershipProvider>. Si l’utilisateur n’est pas créé avec succès, un message s’affiche à l’utilisateur. Dans le cas contraire, l’utilisateur est redirigé vers la page de connexion pour l’application.  
  
> [!NOTE]
>  Cet exemple appelle la <xref:System.Web.Security.SqlMembershipProvider> spécifié en tant que le `defaultProvider` dans le fichier Web.config à l’aide de la <xref:System.Web.Security.Membership> classe. Si vous devez accéder au fournisseur par défaut en tant que type <xref:System.Web.Security.SqlMembershipProvider>, vous pouvez effectuer un cast du <xref:System.Web.Security.Membership.Provider%2A> propriété de la <xref:System.Web.Security.Membership> classe. Pour accéder à d’autres fournisseurs configurés en tant que type de fournisseur spécifique, vous pouvez y accéder par leur nom configuré avec le <xref:System.Web.Security.Membership.Providers%2A> propriété de la <xref:System.Web.Security.Membership> classe et de les convertir en tant que type de fournisseur spécifique.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/CreateUsercs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/CreateUservb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public override bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberSignature Language="F#" Value="override this.DeleteUser : string * bool -&gt; bool" Usage="sqlMembershipProvider.DeleteUser (username, deleteAllRelatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to delete.</param>
        <param name="deleteAllRelatedData">
          <see langword="true" /> to delete data related to the user from the database; <see langword="false" /> to leave data related to the user in the database.</param>
        <summary>Removes a user's membership information from the SQL Server membership database.</summary>
        <returns>
          <see langword="true" /> if the user was deleted; otherwise, <see langword="false" />. A value of <see langword="false" /> is also returned if the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée par la <xref:System.Web.Security.Membership> classe pour supprimer un utilisateur à partir de la base de données SQL Server spécifiée dans le fichier de configuration de l’application ASP.NET.  
  
 Utilisateurs supprimés ne sont pas supprimés à partir de la configuration <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 Si `deleteAllRelatedData` a la valeur `true`, toutes les données utilisateur stockées dans la base de données pour le <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, ou <xref:System.Web.UI.WebControls.WebParts.WebPart> les fonctionnalités de personnalisation est également supprimé pour le <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 Si l’utilisateur d’appartenance n’existe pas dans la base de données, et `deleteAllRelatedData` est `true`, puis les données associées et les informations utilisateur stockées pour la <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, ou <xref:System.Web.UI.WebControls.WebParts.WebPart> les fonctionnalités de personnalisation seront encore supprimées pour le application spécifiée dans le <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> propriété. Par conséquent, le <xref:System.Web.Security.SqlMembershipProvider.DeleteUser%2A> méthode peut être utilisé pour supprimer rapidement des informations relatives à un utilisateur, même lorsque le <xref:System.Web.Security.SqlMembershipProvider> objet n’est pas utilisé pour stocker les informations de l’utilisateur authentifié.  
  
 Espaces à gauche et sont retirées de la `username` la valeur du paramètre.  
  
   
  
## Examples  
 L’exemple de code suivant supprime l’utilisateur actuellement connecté.  
  
> [!NOTE]
>  Cet exemple utilise <xref:System.Web.Security.SqlMembershipProvider> pour appeler le <xref:System.Web.Security.SqlMembershipProvider> spécifié en tant que le `defaultProvider` dans le fichier Web.config. Si vous devez accéder au fournisseur par défaut en tant que type <xref:System.Web.Security.SqlMembershipProvider>, vous pouvez effectuer un cast du <xref:System.Web.Security.Membership.Provider%2A> propriété de la <xref:System.Web.Security.Membership> classe. Pour accéder à d’autres fournisseurs configurés en tant que type de fournisseur spécifique, vous pouvez y accéder par leur nom configuré avec le <xref:System.Web.Security.Membership.Providers%2A> propriété de la <xref:System.Web.Security.Membership> classe et de les convertir en tant que type de fournisseur spécifique.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/DeleteUsercs.aspx#6)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/DeleteUservb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordReset { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordReset : bool" Usage="System.Web.Security.SqlMembershipProvider.EnablePasswordReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the SQL Server membership provider is configured to allow users to reset their passwords.</summary>
        <value>
          <see langword="true" /> si le fournisseur d’appartenances prend en charge la réinitialisation du mot de passe ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Réinitialisation de mot de passe permet de remplacer le mot de passe actuel du mot de passe pour un nom d’utilisateur avec un nouveau généré de façon aléatoire le fournisseur d’appartenances. Cela est particulièrement utile quand le <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> est définie sur <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, car les utilisateurs ne peuvent pas récupérer les valeurs de mot de passe haché.  
  
   
  
## Examples  
 L’exemple de code suivant montre l’élément dans la `system.web` section du fichier Web.config pour une application ASP.NET. Il spécifie l’application <xref:System.Web.Security.SqlMembershipProvider> instance et vous permet de mot de passe réinitialisé.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordRetrieval : bool" Usage="System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the SQL Server membership provider is configured to allow users to retrieve their passwords.</summary>
        <value>
          <see langword="true" /> Si le fournisseur d’appartenances prend en charge la récupération du mot de passe ; dans le cas contraire, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> est définie sur <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, un utilisateur ne sera pas en mesure de récupérer son mot de passe existant à partir de la base de données. Le <xref:System.Web.Security.MembershipPasswordFormat.Hashed> format de mot de passe fournit un codage unidirectionnel des valeurs de mot de passe. Les mots de passe sont hachés avec une valeur salt générée de façon aléatoire et comparées aux valeurs stockées dans la base de données pour l’authentification. Valeurs de hachage ne peut pas être décodées pour récupérer la valeur de mot de passe d’origine.  
  
 Si le <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> est définie sur <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, et <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> a la valeur `true`, un <xref:System.Configuration.Provider.ProviderException> est levée lorsque le fournisseur est initialisé.  
  
   
  
## Examples  
 L’exemple de code suivant montre l’élément dans la `system.web` section du fichier Web.config pour une application ASP.NET. Il spécifie l’application <xref:System.Web.Security.SqlMembershipProvider> de l’instance et Active la récupération du mot de passe.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="true"  
      enablePasswordReset="false"  
      requiresQuestionAndAnswer="false"  
      passwordFormat="Encrypted"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.FindUsersByEmail : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="sqlMembershipProvider.FindUsersByEmail (emailToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">The email address to search for.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">The total number of matched users.</param>
        <summary>Returns a collection of membership users for which the email address field contains the specified email address.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> that contains a page of <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> objects beginning at the page specified by <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> Retourne une liste d’utilisateurs d’appartenance dans laquelle l’adresse de messagerie contient une correspondance avec le `emailToMatch` pour le <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 Le <xref:System.Web.Security.SqlMembershipProvider> recherche un nom d’utilisateur qui correspond à la `emailToMatch` valeur de paramètre, à l’aide de la clause LIKE. Caractères génériques de SQL Server peuvent être inclus dans la valeur du paramètre. Par exemple, si le `emailToMatch` paramètre est défini sur «address@example.com», puis les informations pour les utilisateurs avec l’adresse de messagerie »address@example.com» est retournée, si elle existe. Si le `emailToMatch` paramètre est défini sur « %@example.com», puis les informations pour les utilisateurs avec l’adresse de messagerie «address@example.com«, »address2@example.com«, »admin@example.com», et ainsi de suite est retourné.  
  
 Les résultats retournés par <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> sont limitées par le `pageIndex` et `pageSize` paramètres. Le `pageSize` paramètre identifie le nombre maximal de <xref:System.Web.Security.MembershipUser> objets à retourner dans le <xref:System.Web.Security.MembershipUserCollection>. Le `pageIndex` paramètre identifie la page de résultats à retourner, 0 correspondant à la première page. Le `totalRecords` paramètre est un `out` paramètre qui est défini sur le nombre total d’utilisateurs d’appartenance pour le `applicationName`. Par exemple, si 13 utilisateurs pour le `applicationName`et le `pageIndex` valeur était 1 avec un `pageSize` de 5, le <xref:System.Web.Security.MembershipUserCollection> retourné contient les sixième à dixième utilisateurs retournés. Le `totalRecords` paramètre a la valeur 13.  
  
 Espaces à gauche et sont retirées de la `emailToMatch` la valeur du paramètre.  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Web.Security.SqlMembershipProvider.FindUsersByEmail%2A> pour récupérer les informations utilisateur d’appartenance et affiche les résultats dans les pages de données.  
  
> [!NOTE]
>  Cet exemple utilise le <xref:System.Web.Security.Membership> classe pour appeler le <xref:System.Web.Security.SqlMembershipProvider> spécifié en tant que le `defaultProvider` dans le fichier Web.config. Si vous devez accéder au fournisseur par défaut en tant que type <xref:System.Web.Security.SqlMembershipProvider>, vous pouvez effectuer un cast du <xref:System.Web.Security.Membership.Provider%2A> propriété de la <xref:System.Web.Security.Membership> classe. Pour accéder à d’autres fournisseurs configurés en tant que type de fournisseur spécifique, vous pouvez y accéder par leur nom configuré avec le <xref:System.Web.Security.Membership.Providers%2A> propriété de la <xref:System.Web.Security.Membership> classe et de les convertir en tant que type de fournisseur spécifique.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByEmailcs.aspx#13)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#13](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByEmailvb.aspx#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="emailToMatch" /> is longer than 256 characters.  \- or -  <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than one.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> plus <paramref name="pageSize" /> minus one exceeds <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.FindUsersByName : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="sqlMembershipProvider.FindUsersByName (usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">The user name to search for.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains the total number of matched users.</param>
        <summary>Gets a collection of membership users where the user name contains the specified user name to match.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> that contains a page of <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> objects beginning at the page specified by <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> Retourne une liste d’utilisateurs d’appartenance dont le nom d’utilisateur contient une correspondance avec le `usernameToMatch` pour le <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A>.  
  
 Le <xref:System.Web.Security.SqlMembershipProvider> recherche un nom d’utilisateur qui correspond à la `usernameToMatch` valeur de paramètre, à l’aide de la clause LIKE. Caractères génériques de SQL Server peuvent être inclus avec la valeur du paramètre. Par exemple, si le `usernameToMatch` paramètre est défini sur « user1 », puis les informations utilisateur pour l’utilisateur avec le nom d’utilisateur de « user1 » sont retournées, si elle existe. Si le `usernameToMatch` paramètre est défini sur « User% », puis les informations des utilisateurs avec le nom d’utilisateur de « user1 », « user2 », « user_admin », et ainsi de suite sont retournés.  
  
 Les résultats retournés par <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> sont limitées par le `pageIndex` et `pageSize` paramètres. Le `pageSize` paramètre identifie le nombre maximal de <xref:System.Web.Security.MembershipUser> objets à retourner dans le <xref:System.Web.Security.MembershipUserCollection>. Le `pageIndex` paramètre identifie la page de résultats à retourner, 0 correspondant à la première page. Le `totalRecords` paramètre est un `out` paramètre qui est défini sur le nombre total d’utilisateurs d’appartenance pour le `applicationName`. Par exemple, si 13 utilisateurs pour le `applicationName`et le `pageIndex` valeur était 1 avec un `pageSize` de 5, le <xref:System.Web.Security.MembershipUserCollection> retourné contient les sixième à dixième utilisateurs retournés. Le `totalRecords` paramètre a la valeur 13.  
  
 Espaces à gauche et sont retirées de la `usernameToMatch` la valeur du paramètre.  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A> pour récupérer les informations utilisateur d’appartenance et affiche les résultats dans les pages de données.  
  
> [!NOTE]
>  Cet exemple utilise System.Web.Security.SqlMembershipProvider pour appeler le <xref:System.Web.Security.SqlMembershipProvider> spécifié en tant que le `defaultProvider` dans le fichier Web.config. Si vous devez accéder au fournisseur par défaut en tant que type <xref:System.Web.Security.SqlMembershipProvider>, vous pouvez effectuer un cast du <xref:System.Web.Security.Membership.Provider%2A> propriété de la <xref:System.Web.Security.Membership> classe. Pour accéder à d’autres fournisseurs configurés en tant que type de fournisseur spécifique, vous pouvez y accéder par leur nom configuré avec le <xref:System.Web.Security.Membership.Providers%2A> propriété de la <xref:System.Web.Security.Membership> classe et de les convertir en tant que type de fournisseur spécifique.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/FindUsersByNamecs.aspx#12)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#12](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/FindUsersByNamevb.aspx#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> is an empty string ("") or is longer than 256 characters.  \- or -  <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than 1.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> plus <paramref name="pageSize" /> minus one exceeds <see cref="F:System.Int32.MaxValue" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GeneratePassword">
      <MemberSignature Language="C#" Value="public virtual string GeneratePassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GeneratePassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GeneratePassword" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GeneratePassword () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GeneratePassword();" />
      <MemberSignature Language="F#" Value="abstract member GeneratePassword : unit -&gt; string&#xA;override this.GeneratePassword : unit -&gt; string" Usage="sqlMembershipProvider.GeneratePassword " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generates a random password that is at least 14 characters long.</summary>
        <returns>A random password that is at least 14 characters long.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.Membership> classe fournit un <xref:System.Web.Security.Membership.GeneratePassword%2A> (méthode), ce qui génère un mot de passe d’un dimensionner avec au moins le nombre spécifié de caractères non alphabétiques. Le <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> méthode de la <xref:System.Web.Security.SqlMembershipProvider> appelle la <xref:System.Web.Security.Membership.GeneratePassword%2A> méthode de la <xref:System.Web.Security.Membership> classe pour récupérer un mot de passe aléatoire qui comprend au moins 14 caractères. Si le <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> est supérieure à 14, le mot de passe renvoyée est la longueur spécifiée dans le <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> propriété.  
  
 Vous pouvez appeler spécifiquement la <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> méthode en référençant la <xref:System.Web.Security.SqlMembershipProvider> classe directement à partir de la <xref:System.Web.Security.Membership.Provider%2A> propriété de la <xref:System.Web.Security.Membership> classe.  
  
 Le mot de passe généré contient uniquement des caractères alphanumériques et les marques de ponctuation suivants : `!@#$%^&*()_-+=[{]};:<>|./?`. Aucun caractère de contrôle masqué ou non imprimables n’est inclus dans le mot de passe généré.  
  
> [!NOTE]
>  Le mot de passe aléatoire créé par la <xref:System.Web.Security.SqlMembershipProvider.GeneratePassword%2A> méthode n’est pas garantie pour passer de l’expression régulière dans le <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> propriété. Toutefois, le mot de passe aléatoire répond aux critères établis par le <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> et <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> propriétés.  
  
   
  
## Examples  
 L’exemple de code suivant génère un mot de passe aléatoire de 10 caractères.  
  
 [!code-csharp[System.Web.Security.SqlMembershipProvider#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GeneratePasswordcs.aspx#9)]
 [!code-vb[System.Web.Security.SqlMembershipProvider#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GeneratePasswordvb.aspx#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.GetAllUsers : int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="sqlMembershipProvider.GetAllUsers (pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">The total number of users.</param>
        <summary>Gets a collection of all the users in the SQL Server membership database.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> of <see cref="T:System.Web.Security.MembershipUser" /> objects representing all the users in the database for the configured <see cref="P:System.Web.Security.SqlMembershipProvider.ApplicationName" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée par la <xref:System.Web.Security.Membership> classe pour récupérer des informations à partir de la base de données SQL Server spécifiée dans le fichier de configuration de l’application ASP.NET (Web.config).  
  
 Les résultats retournés par <xref:System.Web.Security.SqlMembershipProvider.GetAllUsers%2A> sont limitées par le `pageIndex` et `pageSize` paramètres. Le `pageSize` paramètre identifie le nombre maximal de <xref:System.Web.Security.MembershipUser> objets à retourner dans le <xref:System.Web.Security.MembershipUserCollection>. Le `pageIndex` paramètre identifie la page de résultats à retourner, 0 correspondant à la première page. Le `totalRecords` paramètre est un `out` paramètre qui est défini sur le nombre total d’utilisateurs d’appartenance pour le `applicationName`. Par exemple, si 13 utilisateurs pour le `applicationName`et le `pageIndex` valeur était 1 avec un `pageSize` de 5, le <xref:System.Web.Security.MembershipUserCollection> retourné contient les sixième à dixième utilisateurs retournés. Le `totalRecords` paramètre a la valeur 13.  
  
   
  
## Examples  
 L’exemple de code suivant retourne une liste d’utilisateurs dans les pages de données avec le nombre d’utilisateurs actuellement en ligne.  
  
> [!NOTE]
>  Cet exemple utilise le <xref:System.Web.Security.Membership> classe pour appeler le <xref:System.Web.Security.SqlMembershipProvider> spécifié en tant que le `defaultProvider` dans le fichier Web.config. Si vous devez accéder au fournisseur par défaut en tant que type <xref:System.Web.Security.SqlMembershipProvider>, vous pouvez effectuer un cast du <xref:System.Web.Security.Membership.Provider%2A> propriété de la <xref:System.Web.Security.Membership> classe. Pour accéder à d’autres fournisseurs configurés en tant que type de fournisseur spécifique, vous pouvez y accéder par leur nom configuré avec le <xref:System.Web.Security.Membership.Providers%2A> propriété de la <xref:System.Web.Security.Membership> classe et de les convertir en tant que type de fournisseur spécifique.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> is less than zero.  \- or -  <paramref name="pageSize" /> is less than one.  \- or -  <paramref name="pageIndex" /> multiplied by <paramref name="pageSize" /> plus <paramref name="pageSize" /> minus one exceeds <see cref="F:System.Int32.MaxValue" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public override int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetNumberOfUsersOnline();" />
      <MemberSignature Language="F#" Value="override this.GetNumberOfUsersOnline : unit -&gt; int" Usage="sqlMembershipProvider.GetNumberOfUsersOnline " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns the number of users currently accessing the application.</summary>
        <returns>The number of users currently accessing the application.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée par la <xref:System.Web.Security.Membership> classe pour récupérer le nombre d’utilisateurs pris en compte en ligne à partir de la base de données SQL Server spécifiée dans le fichier de configuration de l’application ASP.NET (Web.config).  
  
 <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> Retourne le nombre d’utilisateurs de l’application actuelle dont dernière date de l’activité et l’heure est supérieure à la date et heure actuelles moins la valeur de la <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> propriété en minutes.  
  
 Seuls les utilisateurs associés configuré <xref:System.Web.Security.SqlMembershipProvider.ApplicationName%2A> sont inclus dans le nombre.  
  
   
  
## Examples  
 L’exemple de code suivant retourne une liste d’utilisateurs avec un nombre d’utilisateurs actuellement en ligne.  
  
> [!NOTE]
>  Cet exemple utilise le <xref:System.Web.Security.Membership> classe pour appeler le <xref:System.Web.Security.SqlMembershipProvider> spécifié en tant que le `defaultProvider` dans le fichier Web.config. Si vous devez accéder au fournisseur par défaut en tant que type <xref:System.Web.Security.SqlMembershipProvider>, vous pouvez effectuer un cast du <xref:System.Web.Security.Membership.Provider%2A> propriété de la <xref:System.Web.Security.Membership> classe. Pour accéder à d’autres fournisseurs configurés en tant que type de fournisseur spécifique, vous pouvez y accéder par leur nom configuré avec le <xref:System.Web.Security.Membership.Providers%2A> propriété de la <xref:System.Web.Security.Membership> classe et de les convertir en tant que type de fournisseur spécifique.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ShowUserscs.aspx#5)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ShowUsersvb.aspx#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPassword">
      <MemberSignature Language="C#" Value="public override string GetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberSignature Language="F#" Value="override this.GetPassword : string * string -&gt; string" Usage="sqlMembershipProvider.GetPassword (username, passwordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to retrieve the password for.</param>
        <param name="passwordAnswer">The password answer for the user.</param>
        <summary>Returns the password for the specified user name from the SQL Server membership database.</summary>
        <returns>The password for the specified user name.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée par la <xref:System.Web.Security.MembershipUser> classe pour récupérer le mot de passe pour un utilisateur à partir de la base de données SQL Server spécifiée dans le fichier de configuration de l’application ASP.NET (Web.config).  
  
 Si une réponse de mot de passe incorrect est fournie à la <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> (méthode), le compteur interne qui suit les tentatives de réponse de mot de passe non valides est incrémenté d’un. Cela peut entraîner l’utilisateur est verrouillé et Impossible de se connecter jusqu'à ce que l’état du verrou est désactivée par un appel à la <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> (méthode). Si la réponse de mot de passe correct est spécifiée et que l’utilisateur n’est pas verrouillé actuellement, puis le compteur interne qui suit les tentatives de réponse de mot de passe non valides est remis à zéro. Pour plus d’informations, consultez la <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> et <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> propriétés.  
  
 Vous pouvez appeler la <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> méthode directement en obtenant d’abord une référence à la <xref:System.Web.Security.SqlMembershipProvider> par le biais de l’instance le <xref:System.Web.Security.Membership.Provider%2A> propriété de la <xref:System.Web.Security.Membership> classe.  
  
 Si le <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> est définie sur <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, le <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A> méthode ne peut pas récupérer le mot de passe. Mots de passe hachés sont chiffrés à sens unique et ne peut pas être déchiffrés. Si le <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> est définie sur <xref:System.Web.Security.MembershipPasswordFormat.Hashed>, et <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> a la valeur `true`, un <xref:System.Configuration.Provider.ProviderException> est levée lorsque le fournisseur est initialisé.  
  
 Début et les espaces de fin sont supprimés de toutes les valeurs de paramètre.  
  
   
  
## Examples  
 L’exemple de code suivant récupère le mot de passe pour un nom d’utilisateur spécifié et l’envoie à l’utilisateur dans un message électronique.  
  
> [!NOTE]
>  Renvoi d’un mot de passe en texte clair à l’aide de la messagerie n’est pas recommandée pour les sites qui nécessitent un niveau élevé de sécurité. Pour les sites de haute sécurité, nous vous recommandons de retourner des mots de passe à l’aide du chiffrement, tel que SSL.  
  
> [!NOTE]
>  Cet exemple appelle la <xref:System.Web.Security.SqlMembershipProvider> spécifié en tant que le `defaultProvider` dans le fichier Web.config à l’aide de la <xref:System.Web.Security.Membership> classe. Si vous devez accéder au fournisseur par défaut en tant que type <xref:System.Web.Security.SqlMembershipProvider>, vous pouvez effectuer un cast du <xref:System.Web.Security.Membership.Provider%2A> propriété de la <xref:System.Web.Security.Membership> classe. Pour accéder à d’autres fournisseurs configurés en tant que type de fournisseur spécifique, vous pouvez y accéder par leur nom configuré avec le <xref:System.Web.Security.Membership.Providers%2A> propriété de la <xref:System.Web.Security.Membership> classe et de les convertir en tant que type de fournisseur spécifique.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="passwordAnswer" /> is invalid.  \- or -  The membership user identified by <paramref name="username" /> is locked out.</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval" /> is set to <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="username" /> is not found in the membership database.  \- or -  An error occurred while retrieving the password from the database.</exception>
        <exception cref="T:System.ArgumentException">One of the parameter values exceeds the maximum allowed length.  \- or -  <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  <paramref name="passwordAnswer" /> is an empty string and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.  \- or -  <paramref name="passwordAnswer" /> is greater than 128 characters.  \- or -  The encoded version of <paramref name="passwordAnswer" /> is greater than 128 characters.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="passwordAnswer" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets the information for a membership user from the data source.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="override this.GetUser : obj * bool -&gt; System.Web.Security.MembershipUser" Usage="sqlMembershipProvider.GetUser (providerUserKey, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">The unique identifier for the user.</param>
        <param name="userIsOnline">
          <see langword="true" /> to update the last-activity date/time stamp for the specified user; otherwise, <see langword="false" />.</param>
        <summary>Gets the information from the data source for the membership user associated with the specified unique identifier and updates the last activity date/time stamp for the user, if specified.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the user associated with the specified unique identifier. If no user is found in the database for the specified <paramref name="providerUserKey" /> value, <see langword="null" /> is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.Membership.GetUser%2A> Récupère les informations utilisateur à partir de la source de données et crée un <xref:System.Web.Security.MembershipUser> objet rempli avec les données retournées. L’utilisateur est identifié à l’aide de l’identificateur unique spécifié avec le `providerUserKey` paramètre.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerUserKey" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerUserKey" /> is not of type <see cref="T:System.Guid" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="override this.GetUser : string * bool -&gt; System.Web.Security.MembershipUser" Usage="sqlMembershipProvider.GetUser (username, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to get information for.</param>
        <param name="userIsOnline">
          <see langword="true" /> to update the last activity date/time stamp for the user; <see langword="false" /> to return user information without updating the last activity date/time stamp for the user.</param>
        <summary>Returns information from the SQL Server membership database for a user and provides an option to update the last activity date/time stamp for the user.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> object representing the specified user. If no user is found in the database for the specified <paramref name="username" /> value, <see langword="null" /> is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée par la <xref:System.Web.Security.Membership> classe pour récupérer des informations à partir de la base de données SQL Server spécifiée dans le fichier de configuration de l’application ASP.NET (Web.config).  
  
 Si `userIsOnline` est `true`, les informations de date/heure de dernière activité de l’utilisateur sont mise à jour à la date et heure actuelles. Cela se reflète dans le <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> et <xref:System.Web.Security.MembershipUser.IsOnline%2A> propriétés et dans la valeur retournée par <xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>.  
  
 Espaces à gauche et sont retirées de la `username` la valeur du paramètre.  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Web.Security.SqlMembershipProvider.GetUser%2A> méthode pour déterminer si un utilisateur existe avant de récupérer le mot de passe pour l’utilisateur.  
  
> [!NOTE]
>  Cet exemple utilise le <xref:System.Web.Security.Membership> classe pour appeler le <xref:System.Web.Security.SqlMembershipProvider> spécifié en tant que le `defaultProvider` dans le fichier Web.config. Si vous devez accéder au fournisseur par défaut en tant que type <xref:System.Web.Security.SqlMembershipProvider>, vous pouvez effectuer un cast du <xref:System.Web.Security.Membership.Provider%2A> propriété de la <xref:System.Web.Security.Membership> classe. Pour accéder à d’autres fournisseurs configurés en tant que type de fournisseur spécifique, vous pouvez y accéder par leur nom configuré avec le <xref:System.Web.Security.Membership.Providers%2A> propriété de la <xref:System.Web.Security.Membership> classe et de les convertir en tant que type de fournisseur spécifique.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/RetrievePasswordcs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/RetrievePasswordvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> exceeds 256 characters.  \- or -  <paramref name="username" /> contains a comma.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public override string GetUserNameByEmail (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetUserNameByEmail(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUserNameByEmail (email As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetUserNameByEmail(System::String ^ email);" />
      <MemberSignature Language="F#" Value="override this.GetUserNameByEmail : string -&gt; string" Usage="sqlMembershipProvider.GetUserNameByEmail email" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">The email address to search for.</param>
        <summary>Gets the user name associated with the specified email address.</summary>
        <returns>The user name associated with the specified email address. If no match is found, this method returns <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée par la <xref:System.Web.Security.Membership> classe avec une adresse de messagerie qu’il utilise pour récupérer le nom d’utilisateur associé à partir de la base de données SQL Server spécifiée dans le fichier de configuration de l’application ASP.NET (Web.config).  
  
 Si plusieurs utilisateurs dans la base de données d’appartenance a la même adresse de messagerie, le premier nom d’utilisateur rencontré est retourné. Vous pouvez définir le `requiresUniqueEmail` attribut `true` dans le fichier de configuration d’application pour vous assurer que chaque e-mail adresse dans la base de données est unique.  
  
 Espaces à gauche et sont retirées de la `email` la valeur du paramètre.  
  
   
  
## Examples  
 L’exemple de code suivant récupère le nom d’utilisateur pour une adresse de messagerie spécifiée.  
  
> [!NOTE]
>  Cet exemple utilise le <xref:System.Web.Security.Membership> classe pour appeler le <xref:System.Web.Security.SqlMembershipProvider> spécifié en tant que le `defaultProvider` dans le fichier Web.config. Si vous devez accéder au fournisseur par défaut en tant que type <xref:System.Web.Security.SqlMembershipProvider>, vous pouvez effectuer un cast du <xref:System.Web.Security.Membership.Provider%2A> propriété de la <xref:System.Web.Security.Membership> classe. Pour accéder à d’autres fournisseurs configurés en tant que type de fournisseur spécifique, vous pouvez y accéder par leur nom configuré avec le <xref:System.Web.Security.Membership.Providers%2A> propriété de la <xref:System.Web.Security.Membership> classe et de les convertir en tant que type de fournisseur spécifique.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/GetUserByEmailcs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/GetUserByEmailvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="email" /> exceeds 256 characters.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">More than one user with the same email address exists in the database and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is <see langword="true" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="sqlMembershipProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">The name of the <see cref="T:System.Web.Security.SqlMembershipProvider" /> instance to initialize.</param>
        <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> that contains the names and values of configuration options for the membership provider.</param>
        <summary>Initializes the SQL Server membership provider with the property values specified in the ASP.NET application's configuration file. This method is not intended to be used directly from your code.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode initialise la <xref:System.Web.Security.SqlMembershipProvider> avec la propriété, les valeurs spécifiées dans le fichier de configuration de l’application ASP.NET (Web.config) et n’est pas destinée à être utilisée directement depuis votre code.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="config" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see langword="enablePasswordRetrieval" />, <see langword="enablePasswordReset" />, <see langword="requiresQuestionAndAnswer" />, or <see langword="requiresUniqueEmail" /> attribute is set to a value other than a <see langword="Boolean" />.  \- or -  The <see langword="maxInvalidPasswordAttempts" /> or the <see langword="passwordAttemptWindow" /> attribute is set to a value other than a positive integer.  \- or -  The <see langword="minRequiredPasswordLength" /> attribute is set to a value other than a positive integer, or the value is greater than 128.  \- or -  The <see langword="minRequiredNonalphanumericCharacters" /> attribute is set to a value other than zero or a positive integer, or the value is greater than 128.  \- or -  The value for the <see langword="passwordStrengthRegularExpression" /> attribute is not a valid regular expression.  \- or -  The <see langword="applicationName" /> attribute is set to a value that is greater than 256 characters.  \- or -  The <see langword="passwordFormat" /> attribute specified in the application configuration file is an invalid <see cref="T:System.Web.Security.MembershipPasswordFormat" /> enumeration.  \- or -  The <see langword="passwordFormat" /> attribute is set to <see cref="F:System.Web.Security.MembershipPasswordFormat.Hashed" /> and the <see langword="enablePasswordRetrieval" /> attribute is set to <see langword="true" /> in the application configuration.  \- or -  The <see langword="passwordFormat" /> attribute is set to <see langword="Encrypted" /> and the  configuration element specifies <see langword="AutoGenerate" /> for the <see langword="decryptionKey" /> attribute.  \- or -  The <see langword="connectionStringName" /> attribute is empty or does not exist in the application configuration.  \- or -  The value of the connection string for the <see langword="connectionStringName" /> attribute value is empty, or the specified <see langword="connectionStringName" /> does not exist in the application configuration file.  \- or -  The value for the <see langword="commandTimeout" /> attribute is set to a value other than zero or a positive integer.  \- or -  The application configuration file for this <see cref="T:System.Web.Security.SqlMembershipProvider" /> instance contains an unrecognized attribute.</exception>
        <exception cref="T:System.Web.HttpException">The current trust level is less than <see langword="Low" />.</exception>
        <exception cref="T:System.InvalidOperationException">The provider has already been initialized prior to the current call to the <see cref="M:System.Web.Security.SqlMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" /> method.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public override int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxInvalidPasswordAttempts : int" Usage="System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of invalid password or password-answer attempts allowed before the membership user is locked out.</summary>
        <value>Nombre de tentatives autorisées de saisie de mot de passe ou de réponse de mot de passe non valide avant que l’utilisateur d’appartenance soit verrouillé.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> fonctionne conjointement avec le <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> pour vous prémunir contre une source non deviner le mot de passe ou une réponse de mot de passe d’un utilisateur d’appartenance par des tentatives répétées. Si le nombre de mots de passe ou de questions de mot de passe fournies pour un utilisateur d’appartenance est supérieur ou égal à la valeur de la <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> propriété dans le nombre de minutes identifié par la valeur de la <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> propriété, puis l’utilisateur d’appartenance est verrouillé, en définissant le <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> propriété `true` jusqu'à ce que l’utilisateur est déverrouillé par le <xref:System.Web.Security.MembershipUser.UnlockUser%2A> (méthode). Si un mot de passe valide est fourni avant que la <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> valeur est atteinte, les compteurs pour suivre le nombre de tentatives de réponse de mot de passe et le mot de passe non valides sont remis à zéro. Si une réponse de mot de passe valide est fournie avant que la <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> valeur est atteinte, le compteur qui assure le suivi du nombre de tentatives de réponse de mot de passe non valides est remis à zéro.  
  
 Le <xref:System.Web.Security.SqlMembershipProvider> conserve séparément le nombre de tentatives de mot de passe non valides et de tentatives de réponse de mot de passe non valide. Mot de passe incorrect tente de résultat dans le compteur de mot de passe qui est incrémenté. Entraîne uniquement la réponse de mot de passe incrémentation du compteur de tentatives de réponse de mot de passe non valide.  
  
 Le <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> valeur de propriété est définie dans la configuration d’application à l’aide du `maxInvalidPasswordAttempts` attribut de la section de configuration.  
  
 Si le <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> est définie sur `false`, les tentatives de réponse de mot de passe non valides ne sont pas suivies.  
  
   
  
## Examples  
 L’exemple de code suivant montre l’élément dans la `system.web` section du fichier Web.config pour une application ASP.NET. Il spécifie que l’application utilise une instance de la <xref:System.Web.Security.SqlMembershipProvider> et définit les `maxInvalidPasswordAttempts` attribut cinq tentatives non valides et `passwordAttemptWindow` à 30 minutes.  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
    <providers>  
      <add name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        maxInvalidPasswordAttempts="5"  
        passwordAttemptWindow="30"  
        applicationName="MyApplication" />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public override int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredNonAlphanumericCharacters : int" Usage="System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minimum number of special characters that must be present in a valid password.</summary>
        <value>Nombre minimal de caractères spéciaux qui doivent être présents dans un mot de passe.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> propriété retourne le nombre minimal de caractères spéciaux non alphabétiques qui doivent être entrés pour créer un mot de passe valide pour le <xref:System.Web.Security.SqlMembershipProvider> objet.  
  
 Le <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> valeur de propriété est définie dans la configuration d’application à l’aide du `minRequiredNonalphanumericCharacters` attribut de la [membership, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) élément de configuration.  
  
 Un caractère non alphanumérique est un caractère pour lequel la <xref:System.Char.IsLetterOrDigit%2A> méthode renvoie `false`.  
  
   
  
## Examples  
 L’exemple suivant illustre la [membership, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) élément de configuration dans la `system.web` section du fichier Web.config de l’application. Il spécifie que l’application utilise une instance de la <xref:System.Web.Security.SqlMembershipProvider> classe pour fournir des services d’appartenance et affecte la `minRequiredNonalphanumericCharacters` d’attribut à un caractère.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      minRequiredNonalphanumericCharacters="1"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public override int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredPasswordLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredPasswordLength : int" Usage="System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minimum length required for a password.</summary>
        <value>Longueur minimale requise pour un mot de passe.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> propriété obtient le nombre minimal de caractères qui doivent être entrés pour créer un mot de passe valide pour le <xref:System.Web.Security.SqlMembershipProvider> objet.  
  
 Le <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A> valeur de propriété est définie dans la configuration d’application à l’aide du `minRequiredPasswordLength` attribut de la [membership, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) élément de configuration.  
  
   
  
## Examples  
 L’exemple suivant illustre la [membership, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) élément de configuration dans la `system.web` section du fichier Web.config de l’application. Il spécifie que l’application utilise une instance de la <xref:System.Web.Security.SqlMembershipProvider> classe pour fournir des services d’appartenance et affecte la `minRequiredPasswordLength` attribut sept caractères.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
    <providers>  
      <add  
        name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        minRequiredPasswordLength="7"  
        />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public override int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PasswordAttemptWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordAttemptWindow : int" Usage="System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the time window between which consecutive failed attempts to provide a valid password or password answers are tracked.</summary>
        <value>La fenêtre de temps, en minutes, pendant laquelle consécutifs a échoué tente de fournir un mot de passe ou de réponses de mot de passe sont suivies. La valeur par défaut est 10 minutes. Si l’intervalle entre l’échec de la tentative actuels et l’échec de la dernière tentative est supérieure à la <see cref="P:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow" /> la propriété, chaque tentative ayant échoué est traitée comme s’il s’agissait de la première tentative a échoué.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> propriété fonctionne conjointement avec le <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> tentatives répétées de propriété pour vous protéger contre une source non autorisée ne découvre le mot de passe ou la réponse de mot de passe d’un utilisateur d’appartenance. Quand les utilisateurs essaient de se connecter, de modifier leur mot de passe ou de réinitialiser leur mot de passe, seul un certain nombre de tentatives consécutives est autorisé dans une fenêtre de temps spécifié. La longueur de la fenêtre de temps spécifiée par le <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> propriété, qui identifie le nombre de minutes autorisées entre les tentatives non valides. Si le nombre d’échecs des tentatives successives qu’un utilisateur effectue pour réinitialiser son mot de passe est égal à la valeur stockée dans le <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> propriété et le temps écoulé depuis la dernière tentative non valide est inférieur au nombre de minutes spécifié pour le <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> propriété, puis l’utilisateur d’appartenance est verrouillé, en définissant le <xref:System.Web.Security.MembershipUser.IsLockedOut%2A> propriété `true`. L’utilisateur peut être déverrouillé en appelant le <xref:System.Web.Security.MembershipUser.UnlockUser%2A> (méthode). Si l’intervalle entre l’échec de la tentative actuels et l’échec de la dernière tentative est supérieure à la <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> la propriété, la tentative non valide actuelle est considérée comme la première. Si une réponse de mot de passe valide est fournie avant que le nombre maximal de tentatives non valides autorisées est atteinte, le nombre de tentatives de réponse de mot de passe non valide est défini à zéro. Si un mot de passe valide est fourni avant que le nombre maximal de non valide autorisées tentatives est atteint, le nombre de tentatives de mot de passe non valide et le nombre de tentatives de réponse de mot de passe non valides sont définies à zéro.  
  
 Le <xref:System.Web.Security.SqlMembershipProvider> conserve séparément le nombre de tentatives de mot de passe non valides et de tentatives de réponse de mot de passe non valide. Mot de passe incorrect tente de résultat dans le compteur de mot de passe qui est incrémenté. Entraîne uniquement la réponse de mot de passe incrémentation du compteur de tentatives de réponse de mot de passe non valide.  
  
 Le <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A> valeur de propriété est définie dans la configuration d’application à l’aide du `passwordAttemptWindow` attribut de la section de configuration.  
  
 Si le <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> est définie sur `false`, les tentatives de réponse de mot de passe non valides ne sont pas suivies.  
  
   
  
## Examples  
 L’exemple de code suivant montre l’élément dans la `system.web` section du fichier Web.config pour une application ASP.NET. Il spécifie que l’application utilise une instance de la <xref:System.Web.Security.SqlMembershipProvider> et définit les `maxInvalidPasswordAttempts` attribut cinq tentatives non valides et `passwordAttemptWindow` à 30 minutes.  
  
```  
<membership defaultProvider="SqlProvider"   
  userIsOnlineTimeWindow="20">  
    <providers>  
      <add name="SqlProvider"  
        type="System.Web.Security.SqlMembershipProvider"  
        connectionStringName="SqlServices"  
        requiresQuestionAndAnswer="true"  
        maxInvalidPasswordAttempts="5"  
        passwordAttemptWindow="30"  
        applicationName="MyApplication" />  
    </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordFormat">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Security.MembershipPasswordFormat PasswordFormat" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordFormat As MembershipPasswordFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Security::MembershipPasswordFormat PasswordFormat { System::Web::Security::MembershipPasswordFormat get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordFormat : System.Web.Security.MembershipPasswordFormat" Usage="System.Web.Security.SqlMembershipProvider.PasswordFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipPasswordFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating the format for storing passwords in the SQL Server membership database.</summary>
        <value>L’une des valeurs <see cref="T:System.Web.Security.MembershipPasswordFormat" /> indiquant le format de stockage des mots de passe dans la base de données SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Utilisez `Hashed` uniquement, `Clear` et `Encrypted` ne sont pas sécurisées. `Hashed` les mots de passe sont hachés à l’aide d’un algorithme de hachage unidirectionnel et une valeur salt générée de manière aléatoire lorsque stockées dans la base de données. Lorsqu’un mot de passe est validé, il est haché avec la valeur salt dans la base de données pour la vérification. Mots de passe hachés ne peuvent pas être récupérées. `Encrypted` les mots de passe ne sont pas considérés comme sécurisés, comme une violation qui fait apparaître le contenu de votre base de données peut également exposer la clé de chiffrement. Cela signifie que vos mots de passe chiffrés peuvent être déchiffrés et exposées.  
  
 Le <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> valeur est spécifiée dans la section du fichier Web.config de l’application ASP.NET.  
  
 `Encrypted` et `Hashed` des mots de passe sont chiffrés ou hachés par défaut en fonction des informations fournies dans l’élément dans votre configuration. Notez que si vous spécifiez une valeur de `3DES` pour le `validation` attribut, ou si aucune valeur n’est spécifiée, les mots de passe sont hachés à l’aide de la <xref:System.Security.Cryptography.SHA1> algorithme.  
  
 Un algorithme de hachage personnalisés peut être défini à l’aide de la `hashAlgorithmType` attribut de la [membership, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) élément de configuration. Si vous choisissez le chiffrement, le chiffrement de mot de passe par défaut utilise AES. Vous pouvez modifier l’algorithme de chiffrement en définissant le `decryption` attribut de l’élément de configuration. Si vous chiffrez des mots de passe, vous devez fournir une valeur explicite pour le `decryptionKey` attribut dans l’élément. La valeur par défaut `AutoGenerate` pour la `decryptionKey` attribut n’est pas pris en charge lorsque crypter les mots de passe avec l’appartenance d’ASP.NET.  
  
   
  
## Examples  
 L’exemple de code suivant montre l’élément dans la `system.web` section du fichier Web.config pour une application ASP.NET. Il spécifie l’application <xref:System.Web.Security.SqlMembershipProvider> de l’instance et affecte à son format de mot de passe `Hashed`.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public override string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordStrengthRegularExpression : string" Usage="System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the regular expression used to evaluate a password.</summary>
        <value>Expression régulière utilisée pour évaluer un mot de passe.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> propriété obtient l’expression régulière utilisée pour évaluer la complexité du mot de passe pour le <xref:System.Web.Security.SqlMembershipProvider> objet.  
  
 Le <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> propriété est définie dans la configuration d’application à l’aide du `passwordStrengthRegularExpression` attribut de la [membership, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) élément de configuration.  
  
   
  
## Examples  
 L’exemple suivant illustre la [membership, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) élément de configuration dans la `system.web` section du fichier Web.config de l’application. Il spécifie que l’application utilise une instance de la <xref:System.Web.Security.SqlMembershipProvider> classe pour fournir des services d’appartenance et affecte la `passwordStrengthRegularExpression` d’attribut à une expression régulière qui valide que le mot de passe répond aux critères suivants :  
  
-   Est au moins sept caractères.  
  
-   Contient au moins un chiffre.  
  
-   Contient au moins un caractère (non alphanumériques) spécial.  
  
 Si le mot de passe ne répond pas à ces critères, le mot de passe n’est pas accepté par le fournisseur d’appartenances.  
  
```  
<membership defaultProvider="SqlProvider"  
  userIsOnlineTimeWindow = "20">  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      requiresQuestionAndAnswer="true"  
      passwordStrengthRegularExpression="@\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})"  
      />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresQuestionAndAnswer : bool" Usage="System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the SQL Server membership provider is configured to require the user to answer a password question for password reset and retrieval.</summary>
        <value>
          <see langword="true" /> Si une réponse de mot de passe est requise pour la réinitialisation de mot de passe et la récupération ; dans le cas contraire, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Exiger une question de mot de passe et une réponse fournit une couche supplémentaire de sécurité lors de la récupération ou de réinitialisation de mot de passe d’un utilisateur. Lorsque vous créez un nom d’utilisateur, un utilisateur peut fournir une question et une réponse qui permettre être utilisée ultérieurement pour récupérer ou réinitialiser un mot de passe oublié. Si le <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordReset%2A> propriété et la <xref:System.Web.Security.SqlMembershipProvider.EnablePasswordRetrieval%2A> propriété sont tous deux `false`, la valeur de la <xref:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer%2A> propriété n’est pas pertinente.  
  
 Pour plus d’informations, consultez <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> et <xref:System.Web.Security.SqlMembershipProvider.GetPassword%2A>.  
  
   
  
## Examples  
 L’exemple de code suivant montre l’élément dans la `system.web` section du fichier Web.config pour une application ASP.NET. Il spécifie l’application <xref:System.Web.Security.SqlMembershipProvider> de l’instance et le configure pour requérir une réponse de mot de passe pour la réinitialisation de mot de passe ou la récupération.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueEmail">
      <MemberSignature Language="C#" Value="public override bool RequiresUniqueEmail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueEmail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresUniqueEmail As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueEmail { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueEmail : bool" Usage="System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the SQL Server membership provider is configured to require a unique email address for each user name.</summary>
        <value>
          <see langword="true" /> Si le fournisseur d’appartenances requiert une adresse de messagerie unique ; dans le cas contraire, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant montre l’élément dans la `system.web` section du fichier Web.config pour une application ASP.NET. Il spécifie le <xref:System.Web.Security.SqlMembershipProvider> de l’instance et le configure pour requérir une adresse de messagerie unique pour chaque nom d’utilisateur.  
  
```  
<membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
  <providers>  
    <add name="SqlProvider"  
      type="System.Web.Security.SqlMembershipProvider"  
      connectionStringName="SqlServices"  
      enablePasswordRetrieval="false"  
      enablePasswordReset="true"  
      requiresQuestionAndAnswer="true"  
      passwordFormat="Hashed"  
      requiresUniqueEmail="true"  
      applicationName="MyApplication" />  
  </providers>  
</membership>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ResetPassword">
      <MemberSignature Language="C#" Value="public override string ResetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ResetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ResetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ResetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberSignature Language="F#" Value="override this.ResetPassword : string * string -&gt; string" Usage="sqlMembershipProvider.ResetPassword (username, passwordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to reset the password for.</param>
        <param name="passwordAnswer">The password answer for the specified user.</param>
        <summary>Resets a user's password to a new, automatically generated password.</summary>
        <returns>The new password for the specified user.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée par le <xref:System.Web.Security.Membership> pour réinitialiser le mot de passe d’un utilisateur dans la base de données SQL Server spécifiée dans le fichier de configuration de l’application ASP.NET (Web.config) vers une nouvelle classe générée de façon aléatoire valeur. Le nouveau mot de passe est retourné.  
  
> [!NOTE]
>  Le mot de passe aléatoire créé par la <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> méthode n’est pas garantie pour passer de l’expression régulière dans le <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> propriété. Toutefois, le mot de passe aléatoire répond aux critères établis par le <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> et <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> propriétés.  
  
 Le <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> (méthode) est le plus couramment utilisé lorsque le <xref:System.Web.Security.SqlMembershipProvider.PasswordFormat%2A> est définie sur `Hashed`. Si un utilisateur oublie un mot de passe est haché, le mot de passe ne peut pas être récupérée. Toutefois, le fournisseur peut réinitialiser le mot de passe pour un nouveau mot de passe généré automatiquement si l’utilisateur fournit la réponse de mot de passe correct.  
  
 Si une réponse de mot de passe incorrect est fournie à la <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> (méthode), le compteur interne qui suit les tentatives de mot de passe non valide est incrémenté d’un. Cela peut entraîner l’utilisateur est verrouillé et Impossible de se connecter jusqu'à ce que l’état du verrou est désactivée par un appel à la <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> (méthode). Si la réponse de mot de passe correct est spécifiée et que l’utilisateur n’est pas verrouillé actuellement, puis le compteur interne qui suit les tentatives de réponse de mot de passe non valides est remis à zéro. Pour plus d’informations, consultez la <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> et <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> propriétés.  
  
 Vous pouvez appeler la <xref:System.Web.Security.SqlMembershipProvider.ResetPassword%2A> méthode directement en obtenant d’abord une référence à la <xref:System.Web.Security.SqlMembershipProvider> instance à partir de la <xref:System.Web.Security.Membership.Provider%2A> propriété de la <xref:System.Web.Security.Membership> classe. Le mot de passe généré sera au moins 14 caractères, ou la longueur spécifiée dans le <xref:System.Web.Security.SqlMembershipProvider.MinRequiredPasswordLength%2A> propriété et contient le nombre de caractères non alphanumériques spécifié dans le <xref:System.Web.Security.SqlMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> propriété. Le mot de passe n’est pas garanti pour passer de l’expression régulière contenue dans le <xref:System.Web.Security.SqlMembershipProvider.PasswordStrengthRegularExpression%2A> propriété, le cas échéant.  
  
 Début et les espaces de fin sont supprimés de toutes les valeurs de paramètre.  
  
   
  
## Examples  
 L’exemple de code suivant réinitialise le mot de passe d’un utilisateur et retourne le nouveau mot de passe généré automatiquement.  
  
> [!NOTE]
>  Cet exemple utilise le <xref:System.Web.Security.Membership> classe pour appeler le <xref:System.Web.Security.SqlMembershipProvider> spécifié en tant que le `defaultProvider` dans le fichier Web.config. Si vous devez accéder au fournisseur par défaut en tant que type <xref:System.Web.Security.SqlMembershipProvider>, vous pouvez effectuer un cast du <xref:System.Web.Security.Membership.Provider%2A> propriété de la <xref:System.Web.Security.Membership> classe. Pour accéder à d’autres fournisseurs configurés en tant que type de fournisseur spécifique, vous pouvez y accéder par leur nom configuré avec le <xref:System.Web.Security.Membership.Providers%2A> propriété de la <xref:System.Web.Security.Membership> classe et de les convertir en tant que type de fournisseur spécifique.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/ResetPasswordcs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/ResetPasswordvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="passwordAnswer" /> is invalid.  \- or -  The user account is currently locked.</exception>
        <exception cref="T:System.NotSupportedException">
          <see cref="P:System.Web.Security.SqlMembershipProvider.EnablePasswordReset" /> is set to <see langword="false" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="username" /> is not found in the membership database.  \- or -  The change password action was canceled by a subscriber to the <see cref="E:System.Web.Security.Membership.ValidatingPassword" /> event and the <see cref="P:System.Web.Security.ValidatePasswordEventArgs.FailureInformation" /> property was <see langword="null" />.  \- or -  An error occurred while retrieving the password from the database.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  <paramref name="passwordAnswer" /> is an empty string, or is longer than 128 characters, and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.  \- or -  <paramref name="passwordAnswer" /> is longer than 128 characters after encoding.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="passwordAnswer" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresQuestionAndAnswer" /> is <see langword="true" />.</exception>
        <exception cref="T:System.Exception">An unhandled exception occurred.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnlockUser">
      <MemberSignature Language="C#" Value="public override bool UnlockUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool UnlockUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.UnlockUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnlockUser (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool UnlockUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.UnlockUser : string -&gt; bool" Usage="sqlMembershipProvider.UnlockUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The name of the membership user to clear the locked-out status for.</param>
        <summary>Clears the user's locked-out status so that the membership user can be validated.</summary>
        <returns>
          <see langword="true" /> if the membership user was successfully unlocked; otherwise, <see langword="false" />. A value of <see langword="false" /> is also returned if the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les utilisateurs sont plus fréquemment verrouillés et ne peut pas être validés par le <xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A> (méthode) lorsque le <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> est dépassée dans le <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A>.  
  
 Espaces à gauche et sont retirées de la `username` la valeur du paramètre.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is an empty string, is longer than 256 characters, or contains a comma.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public override void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberSignature Language="F#" Value="override this.UpdateUser : System.Web.Security.MembershipUser -&gt; unit" Usage="sqlMembershipProvider.UpdateUser user" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">A <see cref="T:System.Web.Security.MembershipUser" /> object that represents the user to update and the updated information for the user.</param>
        <summary>Updates information about a user in the SQL Server membership database.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée par la <xref:System.Web.Security.Membership> classe pour mettre à jour les informations utilisateur pour un utilisateur dans la base de données SQL Server spécifiée dans le fichier de configuration de l’application ASP.NET (Web.config). Le <xref:System.Web.Security.MembershipUser.Email%2A>, <xref:System.Web.Security.MembershipUser.Comment%2A>, <xref:System.Web.Security.MembershipUser.IsApproved%2A>, <xref:System.Web.Security.MembershipUser.LastLoginDate%2A>, et <xref:System.Web.Security.MembershipUser.LastActivityDate%2A> les valeurs de propriété sont mises à jour pour l’utilisateur d’appartenance spécifié.  
  
 La longueur maximale pour le <xref:System.Web.Security.MembershipUser.UserName%2A> propriété est de 256 caractères. La longueur maximale pour le <xref:System.Web.Security.MembershipUser.Email%2A> propriété est de 256 caractères.  
  
 Le mot de passe pour un utilisateur d’appartenance ne peut pas être mis à jour à l’aide de la <xref:System.Web.Security.SqlMembershipProvider.UpdateUser%2A> (méthode). Pour mettre à jour le mot de passe pour un utilisateur d’appartenance, utilisez la <xref:System.Web.Security.MembershipUser.ChangePassword%2A> méthode de la <xref:System.Web.Security.MembershipUser> classe.  
  
   
  
## Examples  
 L’exemple de code suivant met à jour l’adresse de messagerie pour un utilisateur.  
  
> [!NOTE]
>  Cet exemple utilise le <xref:System.Web.Security.Membership> classe pour appeler le <xref:System.Web.Security.SqlMembershipProvider> spécifié en tant que le `defaultProvider` dans le fichier Web.config. Si vous devez accéder au fournisseur par défaut en tant que type <xref:System.Web.Security.SqlMembershipProvider>, vous pouvez effectuer un cast du <xref:System.Web.Security.Membership.Provider%2A> propriété de la <xref:System.Web.Security.Membership> classe. Pour accéder à d’autres fournisseurs configurés en tant que type de fournisseur spécifique, vous pouvez y accéder par leur nom configuré avec le <xref:System.Web.Security.Membership.Providers%2A> propriété de la <xref:System.Web.Security.Membership> classe et de les convertir en tant que type de fournisseur spécifique.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/UpdateEmailcs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/UpdateEmailvb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="user" /> is <see langword="null" />.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.UserName" /> property of <paramref name="user" /> is <see langword="null" />.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> is <see langword="null" /> and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is set to <see langword="true" />.</exception>
        <exception cref="T:System.ArgumentException">The <see cref="P:System.Web.Security.MembershipUser.UserName" /> property of <paramref name="user" /> is an empty string (""), contains a comma, or is longer than 256 characters.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> is longer than 256 characters.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> is an empty string and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is set to <see langword="true" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see cref="P:System.Web.Security.MembershipUser.UserName" /> property of <paramref name="user" /> was not found in the database.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Email" /> property of <paramref name="user" /> was equal to an existing email address in the database and <see cref="P:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail" /> is set to true.  \- or -  The user update failed.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public override bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlMembershipProvider.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="override this.ValidateUser : string * string -&gt; bool" Usage="sqlMembershipProvider.ValidateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to validate.</param>
        <param name="password">The password for the specified user.</param>
        <summary>Verifies that the specified user name and password exist in the SQL Server membership database.</summary>
        <returns>
          <see langword="true" /> if the specified username and password are valid; otherwise, <see langword="false" />. A value of <see langword="false" /> is also returned if the user does not exist in the database.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée par la <xref:System.Web.Security.Membership> classe pour valider les informations utilisateur pour un utilisateur dans la base de données SQL Server spécifiée dans le fichier de configuration de l’application ASP.NET (Web.config).  
  
 Lorsqu’un utilisateur est validé avec succès, la dernière date d’activité et les dernières valeurs de date de connexion sont mises à jour à la date et l’heure dans la base de données.  
  
 Si un mot de passe est fournie à la <xref:System.Web.Security.SqlMembershipProvider.ValidateUser%2A> (méthode), le compteur interne qui suit les tentatives de mot de passe non valide est incrémenté d’un. Cela peut entraîner l’utilisateur est verrouillé et Impossible de se connecter jusqu'à ce que l’état du verrou est désactivée par un appel à la <xref:System.Web.Security.SqlMembershipProvider.UnlockUser%2A> (méthode). Si le mot de passe correct est spécifié et que l’utilisateur n’est pas verrouillé actuellement, les compteurs internes ce mot de passe non valide de suivre et de tentatives de réponse de mot de passe sont remis à zéro. Pour plus d’informations, consultez la <xref:System.Web.Security.SqlMembershipProvider.MaxInvalidPasswordAttempts%2A> et <xref:System.Web.Security.SqlMembershipProvider.PasswordAttemptWindow%2A> propriétés.  
  
 Début et les espaces de fin sont supprimés de toutes les valeurs de paramètre.  
  
   
  
## Examples  
 L’exemple de code suivant montre la page de connexion pour une application ASP.NET configurée pour utiliser l’authentification par formulaire et la <xref:System.Web.Security.SqlMembershipProvider>. Si les informations d’identification d’utilisateur fourni ne sont pas valides, un message s’affiche à l’utilisateur. Dans le cas contraire, l’utilisateur est redirigé vers l’URL demandée initialement à l’aide de la <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> (méthode).  
  
> [!NOTE]
>  Cet exemple utilise le <xref:System.Web.Security.Membership> classe pour appeler le <xref:System.Web.Security.SqlMembershipProvider> spécifié en tant que le `defaultProvider` dans le fichier Web.config. Si vous devez accéder au fournisseur par défaut en tant que type <xref:System.Web.Security.SqlMembershipProvider>, vous pouvez effectuer un cast du <xref:System.Web.Security.Membership.Provider%2A> propriété de la <xref:System.Web.Security.Membership> classe. Pour accéder à d’autres fournisseurs configurés en tant que type de fournisseur spécifique, vous pouvez y accéder par leur nom configuré avec le <xref:System.Web.Security.Membership.Providers%2A> propriété de la <xref:System.Web.Security.Membership> classe et de les convertir en tant que type de fournisseur spécifique.  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>