<Type Name="RoleProvider" FullName="System.Web.Security.RoleProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="33a7ad2cf07f9ba52a5dfcde65d9f08df7a73804" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57927970" /></Metadata><TypeSignature Language="C#" Value="public abstract class RoleProvider : System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit RoleProvider extends System.Configuration.Provider.ProviderBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.RoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class RoleProvider&#xA;Inherits ProviderBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class RoleProvider abstract : System::Configuration::Provider::ProviderBase" />
  <TypeSignature Language="F#" Value="type RoleProvider = class&#xA;    inherit ProviderBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web.ApplicationServices</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Configuration.Provider.ProviderBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web, Version=2.0.0.0, Culture=Neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Définit le contrat qu'ASP.NET implémente pour fournir des services de gestion de rôles à l'aide de fournisseurs de rôles personnalisés.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Gestion des rôles ASP.NET est conçue pour vous permettre d’utiliser facilement un nombre de fournisseurs de rôles différents pour vos applications ASP.NET. Vous pouvez utiliser les fournisseurs de rôles qui sont inclus avec le .NET Framework, ou vous pouvez implémenter votre propre fournisseur.  
  
 Lorsque vous implémentez un fournisseur de rôle personnalisé, vous devez hériter de la <xref:System.Web.Security.RoleProvider> classe abstraite.  
  
 Il existe deux raisons principales pour la création d’un fournisseur de rôles personnalisé.  
  
-   Vous devez stocker des informations de rôle dans une source de données qui n’est pas pris en charge par les fournisseurs de rôles inclus avec le .NET Framework, par exemple une base de données FoxPro, une base de données Oracle ou d’autres sources de données.  
  
-   Vous avez besoin gérer les informations de rôle à l’aide d’un schéma de base de données qui est différent du schéma de base de données utilisé par les fournisseurs fournis avec le .NET Framework. Un exemple courant de ce serait les données de rôle existant déjà dans une base de données SQL Server pour une entreprise ou d’un site Web.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implémentation d’un fournisseur de rôle</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Security.RoleProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous n’êtes pas obligé d’implémenter un constructeur pour une classe qui hérite la <xref:System.Web.Security.RoleProvider> classe abstraite. Valeurs d’initialisation d’un <xref:System.Web.Security.RoleProvider> implémentation sont passés à la <xref:System.Configuration.Provider.ProviderBase.Initialize%2A> implémentation de la méthode.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implémentation d’un fournisseur de rôle</related>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public abstract void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="abstract member AddUsersToRoles : string[] * string[] -&gt; unit" Usage="roleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="roleNames" Type="System.String[]" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="usernames">Tableau de chaînes contenant les noms d’utilisateurs à ajouter aux rôles spécifiés.</param>
        <param name="roleNames">Tableau de chaînes contenant les noms des rôles auxquels ajouter les noms d’utilisateurs spécifiés.</param>
        <summary>Ajoute les noms d’utilisateurs spécifiés aux rôles spécifiés pour le <see langword="applicationName" /> configuré.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A> est appelée par la <xref:System.Web.Security.Roles> classe à associer les utilisateurs spécifiés des rôles spécifiés dans la source de données. Les rôles sont ajoutés à la configuration <xref:System.Web.Security.RoleProvider.ApplicationName%2A>.  
  
 Si un des noms de rôles spécifiés est introuvable pour le `applicationName`, il est recommandé que votre fournisseur lève une <xref:System.Configuration.Provider.ProviderException>.  
  
 Si un des noms d’utilisateurs spécifiés ne sont pas associé à aucun des noms de rôles spécifiés pour le `applicationName`, il est recommandé que votre fournisseur lève une <xref:System.Configuration.Provider.ProviderException>.  
  
 Si un des noms d’utilisateurs spécifiés est `null` ou est une chaîne vide, nous recommandons que votre fournisseur lève une exception.  
  
 Si un des noms de rôles spécifiés est `null` ou est une chaîne vide, nous recommandons que votre fournisseur lève une exception.  
  
 Si votre source de données prend en charge les transactions, nous vous recommandons d’inclure chaque opération d’ajout dans une transaction et que vous restaurez la transaction et lève une exception si une opération d’ajout échoue.  
  
   
  
## Examples  
 L’exemple de code suivant montre un exemple d’implémentation de la <xref:System.Web.Security.RoleProvider.AddUsersToRoles%2A> (méthode).  
  
 [!code-csharp[System.Web.Security.IRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#2)]
 [!code-vb[System.Web.Security.IRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implémentation d’un fournisseur de rôle</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public abstract string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.RoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de l'application pour laquelle stocker ou récupérer des informations de rôle.</summary>
        <value>Nom de l'application pour laquelle stocker et récupérer des informations de rôle.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.RoleProvider.ApplicationName%2A> est utilisé par le <xref:System.Web.Security.Roles> classe à associer des utilisateurs et des rôles à différentes applications. Cela permet à plusieurs applications à utiliser la même base de données pour stocker des informations d’utilisateur et rôle sans provoquer de conflits entre les noms d’utilisateur en double ou les noms de rôles. Plusieurs applications ASP.NET peuvent utiliser la même base de données en spécifiant la même valeur dans le <xref:System.Web.Security.Roles.ApplicationName%2A> propriété. Le <xref:System.Web.Security.Roles.ApplicationName%2A> propriété peut être définie par programme, ou elle peut ensuite être définie de façon déclarative dans le fichier de configuration pour l’application Web en utilisant le `applicationName` attribut.  
  
 Si aucun <xref:System.Web.Security.RoleProvider.ApplicationName%2A> propriété est spécifiée, il est recommandé que le <xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A> valeur de propriété.  
  
   
  
## Examples  
 L’exemple de code suivant montre un exemple d’implémentation de la <xref:System.Web.Security.RoleProvider.ApplicationName%2A> propriété.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#1)]
 [!code-vb[System.Web.Security.IRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implémentation d’un fournisseur de rôle</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public abstract void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member CreateRole : string -&gt; unit" Usage="roleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="roleName">Nom du rôle à créer.</param>
        <summary>Ajoute un nouveau rôle à la source de données pour le <see langword="applicationName" /> configuré.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.CreateRole%2A> est appelée par le <xref:System.Web.Security.Roles.CreateRole%2A> méthode de la <xref:System.Web.Security.Roles> classe pour ajouter le rôle spécifié à la source de données pour le <xref:System.Web.Security.RoleProvider.ApplicationName%2A>.  
  
 Si le nom de rôle spécifié existe déjà pour le `applicationName`, est `null`, ou est une chaîne vide, nous recommandons que votre fournisseur lève une exception.  
  
 Si le nom de rôle spécifié contient une virgule, il est recommandé que votre fournisseur lève une exception.  
  
 Si votre source de données limite la longueur du nom du rôle, par exemple, via une colonne de longueur fixe d’une table dans une base de données, nous recommandons que vous levez une exception si le nom de rôle dépasse la longueur maximale autorisée par la source de données.  
  
   
  
## Examples  
 L’exemple de code suivant montre un exemple d’implémentation de la <xref:System.Web.Security.RoleProvider.CreateRole%2A> (méthode).  
  
 [!code-csharp[System.Web.Security.IRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#3)]
 [!code-vb[System.Web.Security.IRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implémentation d’un fournisseur de rôle</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public abstract bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="abstract member DeleteRole : string * bool -&gt; bool" Usage="roleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="roleName">Nom du rôle à supprimer.</param>
        <param name="throwOnPopulatedRole">Si <see langword="true" />, lèvent une exception si <paramref name="roleName" /> possède au moins un membre et ne suppriment pas <paramref name="roleName" />.</param>
        <summary>Supprime un rôle de la source de données pour le <see langword="applicationName" /> configuré.</summary>
        <returns><see langword="true" /> si le rôle a été correctement supprimé ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.DeleteRole%2A> est appelée par le <xref:System.Web.Security.Roles.DeleteRole%2A> et <xref:System.Web.Security.Roles.DeleteRole%2A> méthodes de la <xref:System.Web.Security.Roles> classe pour supprimer le rôle spécifié à partir de la source de données pour le <xref:System.Web.Security.RoleProvider.ApplicationName%2A>.  
  
 Lorsque vous supprimez un rôle à partir de la source de données, assurez-vous que vous supprimez également toutes les associations entre un nom d’utilisateur et le rôle supprimé configuré `applicationName`.  
  
 Si `throwOnPopulatedRole` est `true`et le rôle identifié par le `roleName` paramètre a un ou plusieurs membres, levez une <xref:System.Configuration.Provider.ProviderException> et ne supprimez pas le rôle. Si `throwOnPopulatedRole` est `false`, puis supprimez le rôle qu’il soit vide ou non.  
  
 Si le nom de rôle spécifié n’existe pas, est `null`, ou est une chaîne vide, nous recommandons que votre fournisseur lève une exception.  
  
   
  
## Examples  
 L’exemple de code suivant montre un exemple d’implémentation de la <xref:System.Web.Security.RoleProvider.DeleteRole%2A> (méthode).  
  
 [!code-csharp[System.Web.Security.IRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#4)]
 [!code-vb[System.Web.Security.IRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#4)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implémentation d’un fournisseur de rôle</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public abstract string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="abstract member FindUsersInRole : string * string -&gt; string[]" Usage="roleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="usernameToMatch" Type="System.String" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="roleName">Rôle dans lequel effectuer la recherche.</param>
        <param name="usernameToMatch">Nom d'utilisateur à rechercher.</param>
        <summary>Obtient un tableau des noms d'utilisateurs figurant dans un rôle, dans lequel le nom d'utilisateur contient le nom d'utilisateur spécifié correspondant.</summary>
        <returns>Tableau de chaînes contenant le nom de tous les utilisateurs, dans lequel le nom d'utilisateur correspond à <paramref name="usernameToMatch" /> et pour lequel l'utilisateur est membre du rôle spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.RoleProvider.FindUsersInRole%2A> méthode est appelée par le <xref:System.Web.Security.Roles> classe et retourne une liste d’utilisateurs dans un rôle dont le nom d’utilisateur contient l’équivalent de l’élément `usernameToMatch` pour configuré `applicationName`. Prise en charge des génériques est inclus en fonction de la source de données. Les utilisateurs sont retournés dans l’ordre alphabétique par nom d’utilisateur.  
  
 Nous vous recommandons de lever une <xref:System.Configuration.Provider.ProviderException> si `roleName` n’existe pas dans la source de données.  
  
   
  
## Examples  
 L’exemple de code suivant montre un exemple <xref:System.Web.Security.RoleProvider.FindUsersInRole%2A> implémentation.  
  
 [!code-csharp[System.Web.Security.IRoleProvider#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#11)]
 [!code-vb[System.Web.Security.IRoleProvider#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#11)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implémentation d’un fournisseur de rôle</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public abstract string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="abstract member GetAllRoles : unit -&gt; string[]" Usage="roleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient la liste de tous les rôles pour le <see langword="applicationName" /> configuré.</summary>
        <returns>Tableau de chaînes contenant le nom de tous les rôles stockés dans la source de données pour le <see langword="applicationName" /> configuré.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetAllRoles%2A> est appelée par le <xref:System.Web.Security.Roles.GetAllRoles%2A> méthode de la <xref:System.Web.Security.Roles> classe à récupérer une liste de noms de rôles à partir de la source de données. Seuls les rôles spécifiés <xref:System.Web.Security.RoleProvider.ApplicationName%2A> sont récupérés.  
  
 Si aucun rôle n’existe pour le `applicationName`, nous recommandons que votre fournisseur retourne un tableau de chaînes sans éléments.  
  
   
  
## Examples  
 L’exemple de code suivant montre un exemple d’implémentation de la <xref:System.Web.Security.RoleProvider.GetAllRoles%2A> (méthode).  
  
 [!code-csharp[System.Web.Security.IRoleProvider#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#5)]
 [!code-vb[System.Web.Security.IRoleProvider#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#5)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implémentation d’un fournisseur de rôle</related>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public abstract string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="abstract member GetRolesForUser : string -&gt; string[]" Usage="roleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="username">Utilisateur pour lequel retourner une liste de rôles.</param>
        <summary>Obtient la liste des rôles dans lesquels figure l'utilisateur spécifié pour le <see langword="applicationName" /> configuré.</summary>
        <returns>Tableau de chaînes contenant le nom de tous les rôles dans lesquels figure l'utilisateur spécifié pour le <see langword="applicationName" /> configuré.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> est appelée par le <xref:System.Web.Security.Roles.GetRolesForUser%2A> méthode de la <xref:System.Web.Security.Roles> classe à récupérer les noms de rôles dont l’utilisateur spécifié est associé à partir de la source de données. Seuls les rôles configurés <xref:System.Web.Security.RoleProvider.ApplicationName%2A> sont récupérés.  
  
 Si aucun rôle n’existe pour l’utilisateur spécifié pour le `applicationName`, nous recommandons que votre fournisseur retourne un tableau de chaînes sans éléments.  
  
 Si le nom d’utilisateur spécifié est `null` ou est une chaîne vide, nous recommandons que votre fournisseur lève une exception.  
  
   
  
## Examples  
 L’exemple de code suivant montre un exemple d’implémentation de la <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> (méthode).  
  
 [!code-csharp[System.Web.Security.IRoleProvider#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#6)]
 [!code-vb[System.Web.Security.IRoleProvider#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implémentation d’un fournisseur de rôle</related>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public abstract string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member GetUsersInRole : string -&gt; string[]" Usage="roleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="roleName">Nom du rôle pour lequel obtenir la liste d'utilisateurs.</param>
        <summary>Obtient une liste des utilisateurs du rôle spécifié pour le <see langword="applicationName" /> configuré.</summary>
        <returns>Tableau de chaînes contenant le nom de tous les utilisateurs membres du rôle spécifié pour le <see langword="applicationName" /> configuré.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.GetUsersInRole%2A> est appelée par le <xref:System.Web.Security.Roles.GetUsersInRole%2A> méthode de la <xref:System.Web.Security.Roles> classe à récupérer les noms d’utilisateur associés à un rôle à partir de la source de données. Seuls les rôles configurés <xref:System.Web.Security.RoleProvider.ApplicationName%2A> sont récupérés.  
  
 Si le nom de rôle spécifié n’existe pas pour le `applicationName` ou si elle est `null` ou une chaîne vide, nous vous recommandons que votre fournisseur lève une exception.  
  
 Si aucun utilisateur n’est associé au rôle spécifié pour le `applicationName`, nous recommandons que votre fournisseur retourne un tableau de chaînes sans éléments.  
  
   
  
## Examples  
 L’exemple de code suivant montre un exemple d’implémentation de la <xref:System.Web.Security.RoleProvider.GetUsersInRole%2A> (méthode).  
  
 [!code-csharp[System.Web.Security.IRoleProvider#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#7)]
 [!code-vb[System.Web.Security.IRoleProvider#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#7)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implémentation d’un fournisseur de rôle</related>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public abstract bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member IsUserInRole : string * string -&gt; bool" Usage="roleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="roleName" Type="System.String" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="username">Nom d'utilisateur à rechercher.</param>
        <param name="roleName">Rôle dans lequel effectuer la recherche.</param>
        <summary>Obtient une valeur indiquant si l'utilisateur indiqué figure dans le rôle spécifié pour le <see langword="applicationName" /> configuré.</summary>
        <returns><see langword="true" /> si l'utilisateur spécifié figure dans le rôle spécifié pour le <see langword="applicationName" /> configuré ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> méthode est appelée par le <xref:System.Web.Security.Roles.IsUserInRole%2A> méthode de la <xref:System.Web.Security.Roles> classe pour déterminer si l’utilisateur connecté actuel est associé à un rôle à partir de la source de données pour le <xref:System.Web.Security.Roles.ApplicationName%2A>.  
  
 Si le nom d’utilisateur spécifié est `null` ou est une chaîne vide, nous recommandons que votre fournisseur lève une exception.  
  
 Si le nom de rôle spécifié est `null` ou est une chaîne vide, nous recommandons que votre fournisseur lève une exception.  
  
   
  
## Examples  
 L’exemple de code suivant montre un exemple d’implémentation de la <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> (méthode).  
  
 [!code-csharp[System.Web.Security.IRoleProvider#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#8)]
 [!code-vb[System.Web.Security.IRoleProvider#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#8)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implémentation d’un fournisseur de rôle</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public abstract void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="abstract member RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="roleProvider.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" Index="0" FrameworkAlternate="netframework-4.8" />
        <Parameter Name="roleNames" Type="System.String[]" Index="1" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="usernames">Tableau de chaînes contenant les noms d'utilisateurs à supprimer des rôles spécifiés.</param>
        <param name="roleNames">Tableau de chaînes contenant les noms de rôles desquels supprimer les noms d'utilisateurs spécifiés.</param>
        <summary>Supprime l'utilisateur spécifié des rôles spécifiés pour le <see langword="applicationName" /> configuré.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A> est appelée par <xref:System.Web.Security.Roles.RemoveUserFromRole%2A> , <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A> , <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A> , et <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> méthodes de la <xref:System.Web.Security.Roles> classe à supprimer les utilisateurs spécifiés des rôles spécifiés à la source de données. Seuls les rôles pour le <xref:System.Web.Security.RoleProvider.ApplicationName%2A> sont modifiées.  
  
 Si un des noms de rôles spécifiés est introuvable pour le `applicationName`, il est recommandé que votre fournisseur lève une <xref:System.Configuration.Provider.ProviderException>.  
  
 Si un des noms d’utilisateurs spécifiés ne sont pas associé à aucun des noms de rôles spécifiés pour le `applicationName`, il est recommandé que votre fournisseur lève une <xref:System.Configuration.Provider.ProviderException>.  
  
 Si un des noms d’utilisateurs spécifiés est `null` ou est une chaîne vide, nous recommandons que votre fournisseur lève une exception.  
  
 Si un des noms de rôles spécifiés est `null` ou est une chaîne vide, nous recommandons que votre fournisseur lève une exception.  
  
 Si votre source de données prend en charge les transactions, nous vous recommandons d’inclure chaque opération de suppression dans une transaction et de restaurer la transaction et de lever une exception si une opération de suppression échoue.  
  
   
  
## Examples  
 L’exemple de code suivant montre un exemple d’implémentation de la <xref:System.Web.Security.RoleProvider.RemoveUsersFromRoles%2A> (méthode).  
  
 [!code-csharp[System.Web.Security.IRoleProvider#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#9)]
 [!code-vb[System.Web.Security.IRoleProvider#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#9)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implémentation d’un fournisseur de rôle</related>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public abstract bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="abstract member RoleExists : string -&gt; bool" Usage="roleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.ApplicationServices</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" Index="0" FrameworkAlternate="netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="roleName">Nom du rôle à rechercher dans la source de données.</param>
        <summary>Obtient une valeur qui indique si le nom de rôle spécifié existe déjà dans la source de données du rôle pour le <see langword="applicationName" /> configuré.</summary>
        <returns><see langword="true" /> si le nom de rôle existe déjà dans la source de données pour le <see langword="applicationName" /> configuré ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RoleProvider.RoleExists%2A> est appelée par le <xref:System.Web.Security.Roles.RoleExists%2A> méthode de la <xref:System.Web.Security.Roles> classe pour déterminer si un nom de rôle existe dans la source de données pour le <xref:System.Web.Security.Roles.ApplicationName%2A>.  
  
 Si le nom de rôle spécifié est `null` ou est une chaîne vide, nous recommandons que votre fournisseur lève une exception.  
  
   
  
## Examples  
 L’exemple de code suivant montre un exemple d’implémentation de la <xref:System.Web.Security.RoleProvider.RoleExists%2A> (méthode).  
  
 [!code-csharp[System.Web.Security.IRoleProvider#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/CS/odbcroleprovidersnippets.cs#10)]
 [!code-vb[System.Web.Security.IRoleProvider#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.IRoleProvider/VB/odbcroleprovidersnippets.vb#10)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/851671ce-bf9b-43f2-aba4-bc9d28b11c7d">Implémentation d’un fournisseur de rôle</related>
      </Docs>
    </Member>
  </Members>
</Type>