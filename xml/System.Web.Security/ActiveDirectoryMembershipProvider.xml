<Type Name="ActiveDirectoryMembershipProvider" FullName="System.Web.Security.ActiveDirectoryMembershipProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="59f0c7f111049d03f7f023d07cc3a9a7b57d3c13" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37545550" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ActiveDirectoryMembershipProvider : System.Web.Security.MembershipProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ActiveDirectoryMembershipProvider extends System.Web.Security.MembershipProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.ActiveDirectoryMembershipProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class ActiveDirectoryMembershipProvider&#xA;Inherits MembershipProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class ActiveDirectoryMembershipProvider : System::Web::Security::MembershipProvider" />
  <TypeSignature Language="F#" Value="type ActiveDirectoryMembershipProvider = class&#xA;    inherit MembershipProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.MembershipProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Manages storage of membership information for an ASP.NET application in Active Directory and Active Directory Application Mode servers.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette classe est utilisée par le <xref:System.Web.Security.Membership> et <xref:System.Web.Security.MembershipUser> classes pour fournir des services d’appartenance pour une application ASP.NET à l’aide d’un Active Directory (AD) ou un serveur d’Active Directory Application Mode (ADAM).  
  
> [!NOTE]
>  À l’aide d’un serveur ADAM requiert une configuration spécifique. Pour plus d’informations, consultez la section de Configuration d’ADAM ci-dessous.  
  
> [!IMPORTANT]
>  Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance fonctionne uniquement dans la configuration par défaut de stratégie de confiance totale d’ASP.NET. Pour pouvoir utiliser le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance à tout niveau de confiance partielle, vous devez apporter des modifications au fichier de stratégie de confiance approprié pour votre application ou vous devez créer un assembly de « bac à sable » qui est déployé dans le GAC.  
>   
>  Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe nécessite un illimité <xref:System.DirectoryServices.DirectoryServicesPermission> autorisé à exécuter. Cette autorisation n’est pas ajoutée à tous les fichiers de stratégie de confiance partielle fournis avec ASP.NET. Bien que l’ajout du <xref:System.DirectoryServices.DirectoryServicesPermission> autorisation dans un fichier de stratégie de confiance partielle permette d’utiliser la <xref:System.Web.Security.ActiveDirectoryMembershipProvider> (classe), ceci met le <xref:System.DirectoryServices> classes d’espace de noms disponibles pour tout code s’exécutant dans vos pages ASP.NET. Cette option n’est pas recommandée pour tous les serveurs Web qui doivent s’exécuter en mode sécurisé et verrouillé.  
>   
>  Comme alternative, vous pouvez créer un assembly de « bac à sable » qui appelle la <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe. Cet assembly peut contenir une classe wrapper qui transfère les appels de méthode pour le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe ou une classe qui dérive de la <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe. Dans les deux cas, la classe wrapper doit déclarer sans restriction <xref:System.DirectoryServices.DirectoryServicesPermission> autorisation. Déployez l’assembly sandbox dans le GAC et marquez l’assembly avec le <xref:System.Security.AllowPartiallyTrustedCallersAttribute> attribut (APTCA). Cela permettra à votre code ASP.NET de confiance partiel d’appeler votre classe wrapper, étant donné que la classe wrapper assertions en interne l’unrestricted <xref:System.DirectoryServices.DirectoryServicesPermission> autorisation, votre classe wrapper sera en mesure d’appeler correctement le fournisseur  
  
 Vous devez créer un [connectionStrings, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/b6ffbb2e-a4d1-410e-8f7e-9755e92c65de) entrée dans le fichier Web.config qui identifie le serveur Active Directory, le domaine Active Directory ou la partition d’application ADAM à utiliser. Le fournisseur ne fonctionnera à la portée de domaine, ou dans une sous-étendue au sein d’un domaine. Le tableau suivant répertorie autorisée des chaînes de connexion et la portée utilisée.  
  
|Chaîne de connexion|Portée|  
|-----------------------|-----------|  
|LDAP : / /\<domaine ou du serveur > : [port]<br /><br /> Numéro de port est facultatif pour ADAM et inutile pour Active Directory.|Le fournisseur s’exécute sur le domaine spécifié ou le serveur. Avec AD, la création d’utilisateur et la suppression est effectuée dans le conteneur d’utilisateurs par défaut. Toutes les autres opérations, y compris les méthodes de recherche, seront être inclues dans le contexte d’appellation par défaut pour le domaine.<br /><br /> Si la chaîne de connexion spécifie un domaine Active Directory plutôt qu’un serveur spécifique et le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> propriété est `true`, le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance se connectera toujours au serveur avec le rôle de contrôleur de domaine principal pour le domaine pour vous assurer de ce mot de passe modifications prennent effet et sont disponibles lorsque le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ValidateUser%2A> méthode est appelée.<br /><br /> Cette chaîne de connexion n’est pas autorisée lorsque l’utilisation d’ADAM et lève un <xref:System.NotSupportedException>.|  
|LDAP : / /\<domaine ou du serveur > : [port] /\<conteneur dn ><br /><br /> Numéro de port est facultatif pour ADAM et inutile pour Active Directory.|Le fournisseur s’exécute sur le domaine spécifié ou le serveur. Création de l’utilisateur et la suppression s’effectue uniquement dans le conteneur spécifié. Toutes les autres opérations, y compris les méthodes de recherche, effectuent des recherches de sous-arborescence dont la racine du conteneur.<br /><br /> Pour les serveurs ADAM, le conteneur spécifie la racine d’une partition d’application ou un conteneur au sein d’une partition d’application.<br /><br /> Nous recommandons que la chaîne de connexion définit un conteneur spécifique pour améliorer les performances.|  
  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance mappe les attributs de répertoire à <xref:System.Web.Security.ActiveDirectoryMembershipUser> propriétés. Attributs par défaut sont utilisés si aucun mappage d’attribut n’est effectué dans le fichier Web.config. Pour plus d’informations sur les mappages d’attributs, consultez les propriétés individuelles dans le <xref:System.Web.Security.ActiveDirectoryMembershipUser> documentation sur la classe.  
  
 Le tableau suivant répertorie les <xref:System.Web.Security.ActiveDirectoryMembershipUser> mappages d’attributs de propriétés et leur valeur par défaut.  
  
> [!IMPORTANT]
>  Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe ne vérifie pas explicitement que les attributs de fournisseur ne sont pas mappés aux attributs principaux de l’objet utilisateur dans le répertoire. Vous devez vous assurer que les informations sensibles à partir du répertoire ne sont pas exposées via les attributs mappés.  
  
|Propriété|Attribut d’annuaire par défaut|Peut être mappé ?|  
|--------------|---------------------------------|--------------------|  
|<xref:System.Web.Security.ActiveDirectoryMembershipUser.ProviderUserKey%2A>|securityIdentifier|Non|  
|<xref:System.Web.Security.MembershipUser.UserName%2A>|userPrincipalName|Oui, mais doit être userPrincipalName ou sAMAccountName|  
|<xref:System.Web.Security.ActiveDirectoryMembershipUser.Comment%2A>|commentaire|Non|  
|<xref:System.Web.Security.MembershipUser.CreationDate%2A>|whenCreated|Non|  
|<xref:System.Web.Security.ActiveDirectoryMembershipUser.Email%2A>|message électronique|Oui, mais doit être un attribut à valeur unique de type chaîne Unicode.|  
|<xref:System.Web.Security.ActiveDirectoryMembershipUser.LastActivityDate%2A>|N/A|Non pris en charge par <xref:System.Web.Security.ActiveDirectoryMembershipProvider>.|  
|<xref:System.Web.Security.ActiveDirectoryMembershipUser.LastLoginDate%2A>|N/A|Non pris en charge par <xref:System.Web.Security.ActiveDirectoryMembershipProvider>.|  
|<xref:System.Web.Security.MembershipUser.LastPasswordChangedDate%2A>|pwdLastSet|Non|  
|<xref:System.Web.Security.MembershipUser.PasswordQuestion%2A>|none|Oui, mais doit être un attribut à valeur unique de type chaîne Unicode.|  
|<xref:System.Web.Security.ActiveDirectoryMembershipUser.IsApproved%2A>|Contrôle de compte utilisateur (AD)<br /><br /> mDS-UserAccountDisabled (ADAM)|Non|  
|<xref:System.Web.Security.MembershipUser.IsLockedOut%2A>|calculé à partir de lockoutTime et la durée de verrouillage AD (AD sur Windows 2000)<br /><br /> msDS-utilisateur-compte-contrôle-calculée (AD sur Windows Server 2003)<br /><br /> msDS-utilisateur-compte-contrôle-calculée (ADAM)|Non|  
|<xref:System.Web.Security.MembershipUser.LastLockoutDate%2A>|Si l’utilisateur est verrouillé en raison de trop nombreuses tentatives de mot de passe, l’attribut de durée de verrouillage est retourné.<br /><br /> Si l’utilisateur est verrouillé en raison d’une réponse de mot de passe incorrect trop de tentatives, la valeur stockée dans l’attribut défini par `attributeMapFailedPasswordAnswerLockoutTime` est retourné.<br /><br /> Si l’utilisateur est verrouillé en raison d’un mot de passe incorrect et trop de tentatives de mot de passe, la valeur date/heure la plus récente est retourné.<br /><br /> Si le compte n’est pas verrouillé, retourne 1/1/1754 pour la compatibilité SQL.|Non|  
  
 Lorsqu’à la fois le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer%2A> et <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> sont des propriétés `true`, la <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe prend en charge la sécurité de réinitialisation du mot de passe en demandant à l’utilisateur pour répondre à une question prédéterminée. Pour prendre en charge la question et la réponse, vous devez définir les attributs de configuration suivants à l’aide de la [add, élément de providers pour membership (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/8423ec7f-a06d-4606-977e-a46400b2fc18) dans le fichier de configuration d’application.  
  
|Attribut de configuration|Type d'attribut|  
|-----------------------------|--------------------|  
|`attributeMapPasswordQuestion`|Doit être un attribut à valeur unique de type chaîne Unicode.|  
|`attributeMapPasswordAnswer`|Doit être un attribut à valeur unique de type chaîne Unicode.|  
|`attributeMapFailedPasswordAnswerCount`|Doit être un attribut à valeur unique de type entier.|  
|`attributeMapFailedPasswordAnswerTime`|Doit être un attribut à valeur unique de type entier long/intervalle.|  
|`attributeMapFailedPasswordAnswerLockoutTime`|Doit être un attribut à valeur unique de type entier long/intervalle.|  
  
 Pour plus d’informations sur l’utilisation de sécurité de réinitialisation du mot de passe, consultez le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer%2A> propriété.  
  
## <a name="active-directory-connections"></a>Connexions Active Directory  
 Lorsque le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe est utilisée pour se connecter à un annuaire Active Directory ou un serveur Active Directory Application Mode (ADAM), le `connectionProtection` attribut qui est défini à l’aide de la [add, élément de providers pour membership (schéma des paramètres ASP.NET) ](http://msdn.microsoft.com/library/8423ec7f-a06d-4606-977e-a46400b2fc18) dans la configuration d’application fichier peut-être restreindre les types d’opérations le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe peut effectuer sur la connexion. Le `connectionProtection` attribut détermine également les méthodes le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance utilisera pour créer la connexion au serveur Active Directory ou ADAM.  
  
 Le tableau suivant montre l’effet de la `connectionProtection` attribut lors de la connexion à un annuaire Active Directory.  
  
|Paramètre `connectionProtection` |Effet|  
|------------------------------------|------------|  
|<xref:System.Web.Security.ActiveDirectoryConnectionProtection.None>|Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe se connecte à un annuaire Active Directory avec ces restrictions.<br /><br /> -N’importe quelle méthode qui définit un mot de passe échouera. Active Directory requiert une connexion sécurisée lors de la modification des mots de passe.<br />-Vous devez définir explicitement la `connectionUsername` et `connectionPassword` attributs à l’aide de la [add, élément de providers pour membership (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/8423ec7f-a06d-4606-977e-a46400b2fc18) dans le fichier de configuration d’application ; sinon, le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance lèvera une <xref:System.Configuration.Provider.ProviderException> exception.|  
|`Secure`|Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe tentera de se connecter à Active Directory à l’aide de SSL. Si SSL échoue, une deuxième tentative de connexion à Active Directory à l’aide de la connexion et joint sera. Si les deux tentatives échouent, le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance lèvera une <xref:System.Configuration.Provider.ProviderException> exception.<br /><br /> Les informations d’identification de processus et les informations d’identification explicites sont prises en charge.|  
  
 Le tableau suivant montre l’effet de la `connectionProtection` attribut lors de la connexion à un serveur ADAM.  
  
|Paramètre `connectionProtection` |Effet|  
|------------------------------------|------------|  
|<xref:System.Web.Security.ActiveDirectoryConnectionProtection.None>|Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe se connectera à un serveur ADAM, avec cette restriction.<br /><br /> -N’importe quelle méthode qui définit les mots de passe échoue, sauf si vous configurez explicitement le serveur ADAM pour autoriser les mots de passe pour l’envoi et la modification sur une connexion non sécurisée.<br /><br /> Les informations d’identification de processus et les informations d’identification explicites sont prises en charge.|  
|`Secure`|Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe tentera de se connecter au serveur ADAM à l’aide de SSL. Si une connexion ne peut pas être établie, le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance lèvera une <xref:System.Configuration.Provider.ProviderException> exception.<br /><br /> Les informations d’identification de processus et les informations d’identification explicites sont prises en charge.|  
  
## <a name="adam-configuration"></a>Configuration d’ADAM  
 Lorsque vous utilisez un serveur ADAM, l’instance d’ADAM doit contenir un schéma qui définit la `User` classe. Vous pouvez importer le `User` classe avec une importation LDIF de le `MS-User.ldf` fichier disponible dans le répertoire d’installation ADAM.  
  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe fonctionne avec un serveur ADAM configuré pour utiliser les ports de réseau par défaut. Le tableau suivant présente les valeurs par défaut prévus pour le serveur ADAM.  
  
|paramètre connectionProtection|Port ADAM attendu|  
|----------------------------------|------------------------|  
|<xref:System.Web.Security.ActiveDirectoryConnectionProtection.None>|389|  
|`Secure`|636|  
  
 Si votre serveur ADAM n’utilise pas les ports par défaut, consultez l’article 817583, « Services Active Directory ne demande pas d’autorisation sécurisée via une connexion SSL, » dans le [Base de connaissances Microsoft](http://go.microsoft.com/fwlink/?linkid=37115).  
  
   
  
## Examples  
 Les exemples de code suivants montrent le fichier Web.config pour une application ASP.NET configurée pour utiliser un <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance. Le premier exemple utilise les mappages par défaut pour les attributs Active Directory et ne prend pas en charge la sécurité de réinitialisation du mot de passe avec questions et réponses ni la capacité d’appeler des méthodes de recherche. Le deuxième exemple montre tous les paramètres d’attribut autorisés pour un <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance.  
  
 Le premier exemple est un simple fichier de configuration à l’aide des mappages par défaut pour les attributs Active Directory.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 Cet exemple affiche tous les paramètres d’attribut qui sont disponibles pour une instance de <xref:System.Web.Security.ActiveDirectoryMembershipProvider>.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership  
      defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"  
          type="System.Web.Security.ActiveDirectoryMembershipProvider,  
          System.Web, Version=1.0.3600, Culture=neutral,  
          PublicKeyToken=b03f5f7f11d50a3a"  
          connectionStringName="ADService"  
          connectionUsername="UserWithAppropriateRights"  
          connectionPassword="PasswordForUser"  
          connectionProtection="Secure"  
          enablePasswordReset="true"  
          enableSearchMethods="true"  
          requiresQuestionAndAnswer="true"  
          applicationName="/"  
          description="Default AD connection"  
          requiresUniqueEmail="false"  
          clientSearchTimeout="30"  
          serverSearchTimeout="30"  
          timeoutUnit="Minutes"  
          attributeMapPasswordQuestion="department"  
          attributeMapPasswordAnswer="division"  
          attributeMapFailedPasswordAnswerCount="singleIntAttribute"  
         attributeMapFailedPasswordAnswerTime="singleLargeIntAttribute"  
         attributeMapFailedPasswordAnswerLockoutTime="singleLargeIntAttribute"  
          attributeMapEmail = "mail"  
          attributeMapUsername = "userPrincipalName"  
          maxInvalidPasswordAttempts = "5"  
          passwordAttemptWindow = "10"  
          passwordAnswerAttemptLockoutDuration = "30"  
          minRequiredPasswordLength="7"  
          minRequiredNonalphanumericCharacters="1"  
          passwordStrengthRegularExpression="  
          @\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})" />  
        />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 `clientSearchTimeout` et `serverSearchTimeout` par défaut pour les minutes. Pour modifier les unités, définissez la `timeoutUnit` valeur d’attribut à un des « Jours », « Heures », « Minutes », « Secondes » ou « Millisecondes ». Si l’attribut n’est pas spécifié, la valeur par défaut est « Minutes ».  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActiveDirectoryMembershipProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActiveDirectoryMembershipProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Creates a new instance of the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> constructeur est appelé par ASP.NET pour créer une instance de la <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe tel que spécifié dans la configuration de l’application. Ce constructeur n’est pas destiné à être utilisée à partir de votre code.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>The name of the application using the custom membership provider.</summary>
        <value>Nom de l’application utilisant le fournisseur d’appartenances personnalisé.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ApplicationName%2A> propriété peut être définie sur le nom de l’application ASP.NET ; Toutefois, le nom de l’application n’est pas utilisé par le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe.  
  
 Par conséquent, contrairement à d’autres <xref:System.Web.Security.MembershipProvider> implémentations, toutes les applications ASP.NET qu’accès même magasin de données Active Directory partagent toujours les mêmes données utilisateur.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">An attempt was made to set the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.ApplicationName" /> property.</exception>
        <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.ApplicationName" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePassword">
      <MemberSignature Language="C#" Value="public override bool ChangePassword (string username, string oldPassword, string newPassword);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePassword(string username, string oldPassword, string newPassword) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePassword(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePassword (username As String, oldPassword As String, newPassword As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePassword(System::String ^ username, System::String ^ oldPassword, System::String ^ newPassword);" />
      <MemberSignature Language="F#" Value="override this.ChangePassword : string * string * string -&gt; bool" Usage="activeDirectoryMembershipProvider.ChangePassword (username, oldPassword, newPassword)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="oldPassword" Type="System.String" />
        <Parameter Name="newPassword" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to update the password for.</param>
        <param name="oldPassword">The current password for the specified user.</param>
        <param name="newPassword">The new password for the specified user.</param>
        <summary>Changes the password for the specified user.</summary>
        <returns>
          <see langword="true" /> if the password was updated successfully; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePassword%2A> méthode est utilisée pour mettre à jour le mot de passe dans le magasin de données Active Directory. Quel que soit les informations d’identification qui le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance est configurée pour utiliser, le fournisseur se connecte au serveur Active Directory en utilisant le `username` et `oldPassword` paramètres en tant que les informations d’identification de connexion.  
  
 Si le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> propriété est `true`, l’utilisateur ne peut pas modifier son ou mot de passe si le compte a été précédemment verrouillé, car l’utilisateur a fait trop de tentatives pour répondre à la question de mot de passe. L’utilisateur devra attendre le nombre de minutes spécifié dans le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A> propriété avant de modifier le mot de passe.  
  
 Si la modification de mot de passe réussit et le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> propriété est `true`, puis les compteurs de suivi des réponses de mot de passe incorrect de l’utilisateur sont réinitialisés.  
  
 Le fournisseur de recherche de l’instance utilisateur à mettre à jour en effectuant une recherche dans la sous-arborescence du nom d’utilisateur à partir du point de recherche spécifié dans la chaîne de connexion. Consultez le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> rubrique pour plus d’informations sur les chaînes de connexion de la classe.  
  
 Pour modifier les mots de passe sur un serveur Active Directory le `connectionProtection` attribut doit être défini sur <xref:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal>.  
  
 Lorsque vous utilisez un serveur ADAM, le `connectionProtection` attribut peut être défini sur <xref:System.Web.Security.ActiveDirectoryConnectionProtection.None>, mais uniquement si vous configurez explicitement le serveur ADAM pour autoriser la modification de mot de passe sur les connexions non sécurisées.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is empty, or exceeds the maximum length for the user name (usually 256 characters).  \- or -  <paramref name="username" /> contains commas.  \- or -  The user name is mapped to the <see langword="userPrincipalName" /> attribute and the <paramref name="username" /> parameter contains backslashes.  \- or -  <paramref name="oldPassword" /> or <paramref name="newPassword" /> is a zero-length string.  \- or -  <paramref name="oldPassword" /> or <paramref name="newPassword" /> exceeds the maximum password length (usually 128 characters).  \- or -  <paramref name="newPassword" /> is less than the minimum password size specified in the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredPasswordLength" /> property  \- or -  <paramref name="newPassword" /> contains fewer than the number of non-alphabetic characters specified in the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredNonAlphanumericCharacters" /> property.  \- or -  <paramref name="newPassword" /> fails validation by the regular expression defined in the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression" /> property.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="oldPassword" /> is <see langword="null" />.  \- or -  <paramref name="newPassword" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Web.Security.MembershipPasswordException">
          <paramref name="newPassword" /> does not meet the complexity requirements defined by the Active Directory server.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">A secure connection could not be made to an Active Directory Application Mode server.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePassword(System.String,System.String,System.String)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
        <exception cref="T:System.Exception">An unhandled exception occurred.</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangePasswordQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool ChangePasswordQuestionAndAnswer (string username, string password, string newPasswordQuestion, string newPasswordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ChangePasswordQuestionAndAnswer(string username, string password, string newPasswordQuestion, string newPasswordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ChangePasswordQuestionAndAnswer (username As String, password As String, newPasswordQuestion As String, newPasswordAnswer As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ChangePasswordQuestionAndAnswer(System::String ^ username, System::String ^ password, System::String ^ newPasswordQuestion, System::String ^ newPasswordAnswer);" />
      <MemberSignature Language="F#" Value="override this.ChangePasswordQuestionAndAnswer : string * string * string * string -&gt; bool" Usage="activeDirectoryMembershipProvider.ChangePasswordQuestionAndAnswer (username, password, newPasswordQuestion, newPasswordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="newPasswordQuestion" Type="System.String" />
        <Parameter Name="newPasswordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to change the password question and answer for.</param>
        <param name="password">The password for the specified user.</param>
        <param name="newPasswordQuestion">The new password question for the specified user.</param>
        <param name="newPasswordAnswer">The new password answer for the specified user.</param>
        <summary>Updates the password question and answer for a user in the Active Directory store.</summary>
        <returns>
          <see langword="true" /> if the update was successful; otherwise, <see langword="false" />. A value of <see langword="false" /> is also returned if the password is incorrect, the user is locked out, or the user does not exist in the Active Directory data store.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode est appelée par la <xref:System.Web.Security.ActiveDirectoryMembershipUser> classe mettre à jour la question de mot de passe et de réponse pour un utilisateur dans le magasin d’appartenance Active Directory.  
  
 Exiger une question de mot de passe et une réponse de fournit une couche supplémentaire de sécurité lors de la réinitialisation de mot de passe d’un utilisateur. Lorsque vous créez un nom d’utilisateur, un utilisateur peut fournir une question et une réponse qui permettre être utilisée ultérieurement pour réinitialiser un mot de passe oublié. Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePasswordQuestionAndAnswer%2A> méthode met à jour la question de mot de passe et la réponse d’un utilisateur d’appartenance avec de nouvelles valeurs.  
  
 Pour pouvoir utiliser le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePasswordQuestionAndAnswer%2A> (méthode), vous devez définir ces attributs supplémentaires dans le fichier de configuration de votre application :  
  
-   `requiresQuestionAndAnswer` doit être `true.`  
  
-   `attributeMapPasswordQuestion` et `attributeMapPasswordAnswer` doivent être mappés aux attributs dans le schéma Active Directory.  
  
 Si les critères ci-dessus ne sont pas remplies, une <xref:System.Configuration.Provider.ProviderException> est levée lors de l’initialisation.  
  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance se connecte au magasin de données Active Directory avec les informations d’identification fournies dans le `username` et `password` paramètres pour valider la combinaison nom/mot de passe d’utilisateur. La mise à jour réelle de la question et la réponse est effectuée avec les informations d’identification de connexion configurés du fournisseur.  
  
 Si un mot de passe est fournie à la <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePasswordQuestionAndAnswer%2A> (méthode), le serveur d’annuaire incrémente les compteurs qui effectuent le suivi des tentatives de mot de passe non valide. Cela peut entraîner l’utilisateur est verrouillé et Impossible de se connecter jusqu'à ce que l’état du verrou est désactivée par un appel à la <xref:System.Web.Security.ActiveDirectoryMembershipProvider.UnlockUser%2A> méthode ou la durée du verrouillage spécifiée dans l’annuaire.  
  
 Si la mise à jour la question et la réponse réussit et le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> propriété est `true`, suivi des réponses de mot de passe incorrect de l’utilisateur compteurs sont réinitialisés.  
  
 La réponse de mot de passe est chiffrée à l’aide de la <xref:System.Web.Security.MembershipProvider.EncryptPassword%2A> méthode avant d’être stockée dans le magasin de données Active Directory. La clé de chiffrement et l’algorithme sont spécifiées par le [machineKey, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46) élément de configuration. L’attribut de déchiffrement sur les [machineKey, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46) élément doit être spécifié, la <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe ne prend pas en charge les clés de chiffrement générées automatiquement.  
  
 Caractères génériques de SQL Server peuvent être inclus avec la valeur du paramètre. Par exemple, si le  paramètre est défini sur « user1 », puis les informations utilisateur pour l’utilisateur avec le nom d’utilisateur de « user1 » sont renvoyées, si elle existe.  
  
 Et les espaces à droite sont retirés de toutes les valeurs de paramètre à l’exception de `password`.  
  
 Le fournisseur de recherche de l’instance utilisateur à mettre à jour en effectuant une recherche dans la sous-arborescence du nom d’utilisateur à partir du point de recherche spécifié dans la chaîne de connexion. Consultez le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> rubrique pour plus d’informations sur les chaînes de connexion de la classe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The administrator has not mapped the password question-and-answer fields to attributes of the Active Directory schema.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is empty, or exceeds the maximum length for the user name (usually 256 characters).  \- or -  <paramref name="username" /> contains commas.  \- or -  The user name is mapped to the <see langword="userPrincipalName" /> attribute and the <paramref name="username" /> parameter contains backslashes.  \- or -  <paramref name="password" /> is a zero-length string.  \- or -  <paramref name="password" /> exceeds the maximum password length (usually 128 characters).  \- or -  <paramref name="newPasswordQuestion" /> is empty and the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer" /> property value is <see langword="true" />.  \- or -  <paramref name="newPasswordQuestion" /> exceeds 256 characters.  \- or -  <paramref name="newPasswordAnswer" /> exceeds 128 characters after the answer is encrypted.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.  \- or -  <paramref name="password" /> is <see langword="null" />.  \- or -  <paramref name="newPasswordQuestion" /> is <see langword="null" /> and <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer" /> property is <see langword="true" />.  \- or -  <paramref name="newPasswordAnswer" /> is <see langword="null" /> and <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer" /> property is <see langword="true" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The [machineKey Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46) configuration element indicates an auto-generated machine encryption key. You must explicitly set the <see langword="decriptionKey" /> attribute of the [machineKey Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46) element to store password answers with the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" />.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePasswordQuestionAndAnswer(System.String,System.String,System.String,System.String)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser CreateUser(string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, [out] valuetype System.Web.Security.MembershipCreateStatus&amp; status) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CreateUser (username As String, password As String, email As String, passwordQuestion As String, passwordAnswer As String, isApproved As Boolean, providerUserKey As Object, ByRef status As MembershipCreateStatus) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ CreateUser(System::String ^ username, System::String ^ password, System::String ^ email, System::String ^ passwordQuestion, System::String ^ passwordAnswer, bool isApproved, System::Object ^ providerUserKey, [Runtime::InteropServices::Out] System::Web::Security::MembershipCreateStatus % status);" />
      <MemberSignature Language="F#" Value="override this.CreateUser : string * string * string * string * string * bool * obj *  -&gt; System.Web.Security.MembershipUser" Usage="activeDirectoryMembershipProvider.CreateUser (username, password, email, passwordQuestion, passwordAnswer, isApproved, providerUserKey, status)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="email" Type="System.String" />
        <Parameter Name="passwordQuestion" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
        <Parameter Name="isApproved" Type="System.Boolean" />
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="status" Type="System.Web.Security.MembershipCreateStatus&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="username">The user name for the new user.</param>
        <param name="password">The password for the new user.</param>
        <param name="email">The email address of the new user.</param>
        <param name="passwordQuestion">The password question for the new user.</param>
        <param name="passwordAnswer">The password answer for the new user.</param>
        <param name="isApproved">Whether or not the new user is approved to be validated.</param>
        <param name="providerUserKey">The unique identifier from the membership data source for the user. This parameter must be <see langword="null" /> when using the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> class.</param>
        <param name="status">When this method returns, contains one of the <see cref="T:System.Web.Security.MembershipCreateStatus" /> enumeration values indicating whether the user was created successfully.</param>
        <summary>Adds a new user to the Active Directory data store.</summary>
        <returns>An <see cref="T:System.Web.Security.ActiveDirectoryMembershipUser" /> instance containing the information for the newly created user, or <see langword="null" /> if the user was not successfully created.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.CreateUser%2A> méthode est appelée par la <xref:System.Web.Security.Membership> classe pour créer un nouvel utilisateur dans le magasin de données Active Directory.  
  
 Pour les serveurs Active Directory et Active Directory Application Mode (ADAM), le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe nécessite que la classe d’instance dans le répertoire soit `user`. Autres classes d’utilisateur comme `inetOrgPerson` ne sont pas pris en charge.  
  
 Lorsque, à l’aide d’un serveur Active Directory et le nom d’utilisateur est mappé à la `userPrincipalName` attribut, le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe génère automatiquement un nom d’utilisateur de 20 caractères aléatoires pour la `sAMAccountName` paramètre à votre place.  
  
 Paramètres par défaut, les longueurs maximales suivantes.  
  
|Paramètre|Longueur maximale|  
|---------------|--------------------|  
|`username`|64 caractères, si vous utilisez le `userPrincipalName` attribut. Si vous utilisez le `sAMAccountName` attribut, la restriction du common est de 20 caractères ou moins.|  
|`password`|128 caractères.|  
|`email`|256 caractères.|  
|`passwordQuestion`|256 caractères.|  
|`passwordAnswer`|128 caractères avant et après chiffrement.|  
  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipUser.Comment%2A> propriété sur retourné <xref:System.Web.Security.ActiveDirectoryMembershipUser> instance est limitée à 1 024 caractères.  
  
 Si le schéma d’annuaire a été modifié en réduisant les longueurs maximales autorisées pour ces attributs, ces longueurs seront prioritaire.  
  
 Avant de créer l’utilisateur, le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe garantira que le nom d’utilisateur est unique. Si le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance est configurée pour exiger des adresses de messagerie unique, il permet également de garantir l’adresse de messagerie est unique.  
  
 Dans un annuaire Active Directory, l’unicité du nom d’utilisateur est appliquée en effectuant une recherche de catalogue global lorsque le nom d’utilisateur est mappé à `userPrincipalName`. Si `sAMAccountName` est utilisé, le répertoire sera automatiquement l’unicité de la `sAMAccountName` dans le domaine Active Directory.  
  
 Un serveur ADAM applique automatiquement l’unicité du nom d’utilisateur le `userPrincipalName` dans toutes les partitions d’application.  
  
 L’unicité de l’adresse de messagerie est appliquée en effectuant une recherche dans la sous-arborescence pour une adresse de messagerie en double en commençant à la racine du conteneur dans lequel les utilisateurs sont créés. Il s’agit soit du conteneur utilisateur par défaut (si connecté à un annuaire Active Directory et aucun conteneur a été spécifié dans la chaîne de connexion) ou le conteneur spécifié dans la chaîne de connexion.  
  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe crée l’utilisateur directement dans le conteneur de l’utilisateur spécifié dans la chaîne de connexion. Consultez le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> rubrique pour plus d’informations sur les chaînes de connexion de la classe.  
  
 Pour les mots de passe à définir sur un serveur Active Directory, le `connectionProtection` attribut doit être défini sur <xref:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal>.  
  
 Lorsqu’un serveur ADAM est utilisé, le `connectionProtection` attribut peut être défini sur <xref:System.Web.Security.ActiveDirectoryConnectionProtection.None>, mais uniquement si vous configurez explicitement le serveur ADAM pour autoriser les modifications de mot de passe sur des connexions non sécurisées.  
  
 Et les espaces à droite sont retirés de toutes les valeurs de paramètre de chaîne à l’exception `password`.  
  
> [!IMPORTANT]
>  Vous ne pouvez pas créer de nouveaux utilisateurs, sauf si les informations d’identification utilisées pour se connecter au serveur Active Directory ont des droits d’administrateur de domaine (non recommandés) ou sur « Créer une instance enfant, » « supprimer une instance enfant » et les droits d’accès « set password ». Le droit d’accès « supprimer une instance enfant » est requis, car la création d’un utilisateur est un processus en plusieurs étapes, et si une étape de création de l’utilisateur échoue, la <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe supprimera l’instance d’utilisateur au lieu de laisser une instance d’utilisateur construite partiellement dans le répertoire.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The <paramref name="providerUserKey" /> parameter is not <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">The administrator has not mapped the password question-and-answer fields to attributes of the Active Directory schema, and either the <paramref name="passwordQuestion" /> or <paramref name="passwordAnswer" /> parameter is not <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The [machineKey Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46) configuration element indicates an auto-generated machine encryption key. You must explicitly set the <see langword="decriptionKey" /> attribute of the [machineKey Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/4b5699a9-bc21-4c4a-85f1-8b3b8ebd2d46) element to store password answers with the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" />.  \- or -  The <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> was unable to establish a secure connection to the directory when attempting to set the password for the new user.</exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">An error occurred while attempting to create the user.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentConnectionProtection">
      <MemberSignature Language="C#" Value="public System.Web.Security.ActiveDirectoryConnectionProtection CurrentConnectionProtection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Security.ActiveDirectoryConnectionProtection CurrentConnectionProtection" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.CurrentConnectionProtection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentConnectionProtection As ActiveDirectoryConnectionProtection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Security::ActiveDirectoryConnectionProtection CurrentConnectionProtection { System::Web::Security::ActiveDirectoryConnectionProtection get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentConnectionProtection : System.Web.Security.ActiveDirectoryConnectionProtection" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.CurrentConnectionProtection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.ActiveDirectoryConnectionProtection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the current level of security being used to protect communications with the server.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.Security.ActiveDirectoryConnectionProtection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.CurrentConnectionProtection%2A> propriété indique le niveau actuel de sécurité qui les <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance est configurée pour utiliser. Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.CurrentConnectionProtection%2A> propriété repose sur le `connnectionProtection` attribut défini avec la [add, élément de providers pour membership (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/8423ec7f-a06d-4606-977e-a46400b2fc18) dans le fichier de configuration d’application.  
  
 Le `connectionProtection` attribut peut uniquement être défini sur <xref:System.Web.Security.ActiveDirectoryConnectionProtection.None> ou <xref:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal> dans le fichier de configuration.  
  
 Consultez le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> rubrique pour plus d’informations sur les chaînes de connexion de la classe.  
  
   
  
## Examples  
 L’exemple de code suivant montre une entrée Web.config qui configure une <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance à utiliser le protocole de sécurité SSL pour se connecter à un serveur Active Directory.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,  
          PublicKeyToken=b03f5f7f11d50a3a"  
          connectionProtection="SignAndSeal" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.CurrentConnectionProtection" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteUser">
      <MemberSignature Language="C#" Value="public override bool DeleteUser (string username, bool deleteAllRelatedData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteUser(string username, bool deleteAllRelatedData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.DeleteUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteUser (username As String, deleteAllRelatedData As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteUser(System::String ^ username, bool deleteAllRelatedData);" />
      <MemberSignature Language="F#" Value="override this.DeleteUser : string * bool -&gt; bool" Usage="activeDirectoryMembershipProvider.DeleteUser (username, deleteAllRelatedData)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="deleteAllRelatedData" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to delete.</param>
        <param name="deleteAllRelatedData">This parameter is ignored by the <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.DeleteUser(System.String,System.Boolean)" /> method.</param>
        <summary>Removes a user's membership information from the Active Directory data store.</summary>
        <returns>
          <see langword="true" /> if the user was deleted; otherwise, <see langword="false" /> if the user was not found in the data store.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.DeleteUser%2A> méthode supprime immédiatement l’utilisateur identifié par le `username` paramètre. Étant donné que le magasin de données Active Directory ne stocke pas les informations utilisateur dans différentes zones du répertoire, le `deleteAllRelatedData` paramètre est ignoré, même si elle doit être définie avec la valeur `true` ou `false` lors de l’appel le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.DeleteUser%2A> (méthode).  
  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe recherche l’instance de l’utilisateur à supprimer en effectuant une recherche de niveau unique pour le nom d’utilisateur dans le conteneur utilisateurs déterminé par la chaîne de connexion. Consultez le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> rubrique pour plus d’informations sur les chaînes de connexion de la classe.  
  
 `username` doit comporter 64 caractères ou moins.  
  
> [!IMPORTANT]
>  Vous ne pouvez pas supprimer les utilisateurs, sauf si les informations d’identification utilisées pour se connecter au serveur Active Directory ont deux droits d’administrateur de domaine (non recommandés) ou les supprimer des « instances enfants » droit d’accès.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is empty, or exceeds the maximum length for the user name (usually 256 characters).  \- or -  <paramref name="username" /> contains commas.  \- or -  The user name is mapped to the <see langword="userPrincipalName" /> attribute and the <paramref name="userName" /> parameter contains backslashes.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">An error occurred while attempting to delete the user.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.DeleteUser(System.String,System.Boolean)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordReset">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordReset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordReset" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordReset As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordReset { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordReset : bool" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is configured to allow users to reset their passwords.</summary>
        <value>
          <see langword="true" /> Si la réinitialisation de mot de passe est autorisée ; Sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> propriété indique si vous pouvez utiliser la <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ResetPassword%2A> méthode pour réinitialiser un mot de passe utilisateur. Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> propriété est définie dans la configuration de votre application à l’aide de fichiers le `enablePasswordReset` attribut de la [membership, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) élément.  
  
 Vous pouvez uniquement définir le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> propriété `true` lorsque les éléments suivants [membership, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) paramètres de l’élément ont été apportées.  
  
-   `requiresQuestionAndAnswer` doit être `true`.  
  
-   Le schéma Active Directory doit être modifié pour contenir des attributs pour le stockage de la question de mot de passe et de réponse, ainsi que les trois champs de suivi pour les tentatives de modification de réponse de mot de passe.  
  
-   `attributeMapPasswordQuestion`, `attributeMapPasswordAnswer`, `attributeMapFailedPasswordAnswerCount`, `attributeMapFailedPasswordAnswerTime`, et `attributeMapFailedPasswordAnswerLockoutTime` doivent être mappés aux attributs dans le schéma Active Directory.  
  
 Si les critères ci-dessus ne sont pas remplies, une <xref:System.Configuration.Provider.ProviderException> est levée lors de l’initialisation.  
  
 Lorsque la chaîne de connexion dans le fichier de configuration d’application spécifie un domaine Active Directory plutôt qu’un serveur spécifique, le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance se connectera toujours au contrôleur de domaine qui a le rôle de contrôleur de domaine principal pour le domaine pour vous assurer que modifications de mot de passe prennent effet et sont disponibles lorsque le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ValidateUser%2A> méthode est appelée.  
  
> [!NOTE]
>  Même si le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> propriété est `true`, vous ne pouvez pas réinitialiser les mots de passe utilisateur, sauf si les informations d’identification utilisées pour se connecter au serveur Active Directory ont des droits d’administrateur de domaine (non recommandés) ou le droit d’accès « réinitialisation de mot de passe ».  
  
   
  
## Examples  
 L’exemple de code suivant montre une entrée Web.config qui configure une <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance à activer des réinitialisations de mot de passe. Il utilise les informations d’identification explicites d’un utilisateur ayant le droit d’accès « réinitialisation de mot de passe ».  
  
> [!IMPORTANT]
>  Lorsque vous placez des informations d’identification utilisateur dans votre fichier Web.config, il existe des menaces de sécurité potentielles. Les utilisateurs disposant de droits d’accès au répertoire contenant le fichier Web.config peuvent lire le fichier et par conséquent, consultez les informations d’identification. Pour plus d’informations sur la façon de se protéger contre cette menace, consultez [chiffrement Configuration des informations à l’aide de la Configuration protégée](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a"  
          connectionUsername="UserWithResetPasswordRights"  
          connectionPassword="PasswordForUser"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          attributeMapPasswordQuestion="PasswordQuestionADAttribute"  
          attributeMapPasswordAnswer="PasswordAnswerADAttribute"  
          attributeMapFailedPasswordAnswerCount="AnswerCountADAttribute"  
          attributeMapFailedPasswordAnswerTime="AnswerTimeADAttribute"  
          attributeMapFailedPasswordAnswerLockoutTime="LockOutTimeADAttribute" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnablePasswordRetrieval">
      <MemberSignature Language="C#" Value="public override bool EnablePasswordRetrieval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePasswordRetrieval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordRetrieval" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EnablePasswordRetrieval As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnablePasswordRetrieval { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnablePasswordRetrieval : bool" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordRetrieval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the user's password can be retrieved from the Active Directory data store. This property always returns <see langword="false" />.</summary>
        <value>
          <see langword="false" /> pour indiquer que la récupération de mot de passe n’est pas pris en charge par le <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> classe.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe ne prend pas en charge la récupération de mot de passe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordRetrieval" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="EnableSearchMethods">
      <MemberSignature Language="C#" Value="public bool EnableSearchMethods { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableSearchMethods" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EnableSearchMethods As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableSearchMethods { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnableSearchMethods : bool" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether search-oriented <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> methods are available.</summary>
        <value>
          <see langword="true" /> Si les méthodes de recherche sont disponibles ; Sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Étant donné que la recherche d’un serveur Active Directory est potentiellement beaucoup de ressources le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A> propriété vous permet de désactiver orientées recherche <xref:System.Web.Security.ActiveDirectoryMembershipProvider> méthodes. Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A> propriété est définie dans la configuration de votre application à l’aide de fichiers le `enableSearchMethods` attribut de la [membership, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) élément.  
  
 Lorsque le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A> propriété est `false`, les méthodes suivantes ne sont pas disponibles :  
  
-   <xref:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByName%2A>  
  
-   <xref:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByEmail%2A>  
  
-   <xref:System.Web.Security.ActiveDirectoryMembershipProvider.GetAllUsers%2A>  
  
 Le fournisseur utilise une recherche dans la sous-arborescence en commençant par le point de recherche spécifié dans la chaîne de connexion. Consultez le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> rubrique pour plus d’informations sur les chaînes de connexion de la classe.  
  
 Nous vous recommandons de ne pas activer les recherches sur les systèmes de production jusqu'à ce que vous avez confirmé que les requêtes de recherche émis par le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe n’affectent pas négativement les performances de votre serveur d’annuaire. Dans la mesure où le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe est conçue pour un environnement Web sans état, il est impossible d’utiliser les optimisations de pagination exposées par sous-jacent <xref:System.DirectoryServices> API. Cela signifie que les opérations de pagination lors de recherches sur des annuaires volumineux sont très coûteuses et doivent être évitées. Opérations de recherche sont toujours exécutées sur le serveur d’annuaire configuré dans la chaîne de connexion ou un serveur sélectionné automatiquement dans le cas d’une chaîne de connexion pointant vers un domaine. Le fournisseur n’utilise pas un catalogue global pour ses méthodes de recherche.  
  
   
  
## Examples  
 L’exemple de code suivant montre une entrée Web.config qui configure une <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance pour permettre la recherche d’un serveur Active Directory.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a"  
          enableSearchMethods="true" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByEmail">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByEmail(string emailToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByEmail (emailToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByEmail(System::String ^ emailToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.FindUsersByEmail : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="activeDirectoryMembershipProvider.FindUsersByEmail (emailToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="emailToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="emailToMatch">Email address or portion of email address to search for.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains the total number of users returned in the collection. This parameter is passed uninitialized.</param>
        <summary>Returns a collection of membership users from the Active Directory data store based on the user's email address.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> containing <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> instances beginning at the page specified by <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByEmail%2A> méthode obtient un <xref:System.Web.Security.MembershipUserCollection> contenant les enregistrements d’utilisateur à partir de l’annuaire Active Directory stocker qui correspondent à la `emailToMatch` paramètres. Les enregistrements d’utilisateur sont retournés dans l’ordre croissant par adresse de messagerie.  
  
 Le `emailToMatch` paramètre est limité à 256 caractères.  
  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe lancera la recherche à l’aide à la fois le `clientSearchTimeout` et `serverSearchTimeout` les valeurs de configuration. Dans la mesure où le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe effectue des recherches sur le serveur d’annuaire à l’aide des pages avec 512 lignes par page, les délais d’attente s’appliquent à chaque page de résultats extraite par la <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe. Par exemple, si une requête de recherche produit 1 000 lignes de données, la <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe extrait ces informations en tant que deux pages de données. Cela signifie que les délais d’attente du client et la recherche démarre à partir de zéro lorsque la <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe demandes la deuxième page de données.  
  
 Les résultats retournés par la <xref:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByEmail%2A> méthode sont contraints par le `pageIndex` et `pageSize` paramètres. Le `pageSize` paramètre spécifie le nombre maximal de <xref:System.Web.Security.MembershipUser> instances à retourner dans le <xref:System.Web.Security.MembershipUserCollection>. Le `pageIndex` paramètre spécifie la page de résultats à retourner, où 0 (zéro) indique la première page.  
  
 Le `totalRecords` paramètre est un `out` paramètre est défini sur le nombre total d’utilisateurs d’appartenance correspondant trouvé dans le magasin de données Active Directory. Par exemple, si 13 utilisateurs pour le magasin de données configuré et le `pageIndex` valeur était 1 avec un `pageSize` de 5, le <xref:System.Web.Security.MembershipUserCollection> retournée contient les sixième à dixième utilisateurs. Le `totalRecords` paramètre est défini sur 13.  
  
 Vous pouvez contrôler s’il faut autoriser la recherche d’utilisateurs, en définissant le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A> à l’aide de fichiers de propriété dans la configuration d’application le `enableSearchMethods` attribut de la [membership, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) élément . Définition de la <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A> propriété `false` provoque la <xref:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByEmail%2A> méthode lève un <xref:System.NotSupportedException> exception.  
  
 Le fournisseur utilise une recherche dans la sous-arborescence en commençant par le point de recherche spécifié dans la chaîne de connexion. Consultez le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> rubrique pour plus d’informations sur les chaînes de connexion de la classe.  
  
 Nous vous recommandons de ne pas activer les recherches sur les systèmes de production jusqu'à ce que vous avez confirmé que les requêtes de recherche émis par le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe n’affectent pas négativement les performances de votre serveur d’annuaire. Dans la mesure où le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe est conçue pour un environnement Web sans état, il est impossible d’utiliser les optimisations de pagination exposées par sous-jacent <xref:System.DirectoryServices> API. Cela signifie que les opérations de pagination lors de recherches sur des annuaires volumineux sont très coûteuses et doivent être évitées. Opérations de recherche sont toujours exécutées sur le serveur d’annuaire configuré dans la chaîne de connexion ou un serveur sélectionné automatiquement dans le cas d’une chaîne de connexion pointant vers un domaine. Le fournisseur n’utilise pas un catalogue global pour ses méthodes de recherche.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="emailToMatch" /> is empty.  \- or -  <paramref name="emailToMatch" /> exceeds 256 characters.  \- or -  <paramref name="pageIndex" /> is less than 0.  \- or -  <paramref name="pageSize" /> is less than 1.  \- or -  <paramref name="pageSize" /> multiplied by <paramref name="pageIndex" />, plus <paramref name="pageSize" />, minus 1 is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
        <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods" /> property is <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindUsersByName">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection FindUsersByName(string usernameToMatch, int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersByName (usernameToMatch As String, pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ FindUsersByName(System::String ^ usernameToMatch, int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.FindUsersByName : string * int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="activeDirectoryMembershipProvider.FindUsersByName (usernameToMatch, pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernameToMatch" Type="System.String" />
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="usernameToMatch">The user name or portion of a user name to search for.</param>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains the total number of records returned in the collection. This parameter is passed uninitialized.</param>
        <summary>Returns a collection of users from the Active Directory data store based on the user name.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> containing <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> instances beginning at the page specified by <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByName%2A> méthode retourne un <xref:System.Web.Security.MembershipUserCollection> instance qui contient les enregistrements d’utilisateur à partir du magasin de données Active Directory pour tous les noms d’utilisateur qui correspondent à la `userNameToMatch` paramètres. Les enregistrements sont retournés par ordre alphabétique par nom d’utilisateur.  
  
 Les résultats retournés par la <xref:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByName%2A> méthode sont contraints par le `pageIndex` et `pageSize` paramètres. Le `pageSize` paramètre spécifie le nombre maximal de <xref:System.Web.Security.MembershipUser> instances à retourner dans le <xref:System.Web.Security.MembershipUserCollection>. Le `pageIndex` paramètre spécifie la page de résultats à retourner, où 0 (zéro) indique la première page.  
  
 Le `totalRecords` paramètre est un `out` paramètre est défini sur le nombre total d’utilisateurs d’appartenance correspondant trouvé dans le magasin de données Active Directory. Par exemple, si 13 utilisateurs pour le magasin de données configuré et le `pageIndex` valeur était 1 avec un `pageSize` de 5, le <xref:System.Web.Security.MembershipUserCollection> retournée contient les sixième à dixième utilisateurs. Le `totalRecords` paramètre est défini sur 13.  
  
 Vous pouvez contrôler s’il faut autoriser la recherche d’utilisateurs, en définissant le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A> à l’aide de fichiers de propriété dans la configuration d’application le `enableSearchMethods` attribut de la [membership, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) élément . Définition de la <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A> valeur de propriété à `false` provoque la <xref:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByName%2A> méthode lève un <xref:System.NotSupportedException> exception.  
  
 Le fournisseur utilise une recherche dans la sous-arborescence en commençant par le point de recherche spécifié dans la chaîne de connexion. Consultez le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> rubrique pour plus d’informations sur les chaînes de connexion de la classe.  
  
 Nous vous recommandons de ne pas activer les recherches sur les systèmes de production jusqu'à ce que vous avez confirmé que les requêtes de recherche émis par le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe n’affectent pas négativement les performances de votre serveur d’annuaire. Dans la mesure où le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe est conçue pour un environnement Web sans état, il est impossible d’utiliser les optimisations de pagination exposées par sous-jacent <xref:System.DirectoryServices> API. Cela signifie que les opérations de pagination lors de recherches sur des annuaires volumineux sont très coûteuses et doivent être évitées. Opérations de recherche sont toujours exécutées sur le serveur d’annuaire configuré dans la chaîne de connexion ou un serveur sélectionné automatiquement dans le cas d’une chaîne de connexion pointant vers un domaine. Le fournisseur n’utilise pas un catalogue global pour ses méthodes de recherche.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="usernameToMatch" /> is empty, or exceeds the maximum length for the user name (usually 256 characters).  \- or -  <paramref name="usernameToMatch" /> contains commas.  \- or -  <paramref name="pageIndex" /> is less than 0.  -or  <paramref name="pageSize" /> is less than 1.  \- or -  <paramref name="pageSize" /> multiplied by <paramref name="pageIndex" />, plus <paramref name="pageSize" />, minus 1 is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="usernameToMatch" /> is <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods" /> property is <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GeneratePassword">
      <MemberSignature Language="C#" Value="public virtual string GeneratePassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GeneratePassword() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.GeneratePassword" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GeneratePassword () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GeneratePassword();" />
      <MemberSignature Language="F#" Value="abstract member GeneratePassword : unit -&gt; string&#xA;override this.GeneratePassword : unit -&gt; string" Usage="activeDirectoryMembershipProvider.GeneratePassword " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Generates a random password.</summary>
        <returns>A random password.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.GeneratePassword%2A> méthode de la <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe appelle le <xref:System.Web.Security.Membership.GeneratePassword%2A> méthode de la <xref:System.Web.Security.Membership> classe à récupérer le mot de passe aléatoire. La longueur de mot de passe est définie à la valeur de la <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredPasswordLength%2A> propriété. La longueur de mot de passe ne peut jamais être inférieur à 14.  
  
 Vous pouvez appeler spécifiquement la <xref:System.Web.Security.Membership.GeneratePassword%2A> méthode en référençant le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe directement à partir de la propriété du fournisseur de la <xref:System.Web.Security.Membership> classe.  
  
 Le mot de passe généré contient uniquement des caractères alphanumériques et les marques de ponctuation suivants : ! @# $% ^ & * () _-+= [{}]} ; : <>&#124;. / ?. Aucun caractère de contrôle masqué ou non imprimables n’est inclus dans le mot de passe généré.  
  
 Le mot de passe généré contiendra au moins le nombre de caractères non alphanumériques spécifié dans le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> propriété. Le mot de passe généré ne sera pas testé avec l’expression régulière dans le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression%2A> propriété.  
  
> [!NOTE]
>  Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe ne génère pas de mots de passe qui correspondent aux exigences de complexité définies dans le répertoire. Il est possible de générer un mot de passe aléatoire qui ne parvient pas les règles de complexité de mot de passe définies par l’annuaire.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllUsers">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUserCollection GetAllUsers(int32 pageIndex, int32 pageSize, [out] int32&amp; totalRecords) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllUsers (pageIndex As Integer, pageSize As Integer, ByRef totalRecords As Integer) As MembershipUserCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUserCollection ^ GetAllUsers(int pageIndex, int pageSize, [Runtime::InteropServices::Out] int % totalRecords);" />
      <MemberSignature Language="F#" Value="override this.GetAllUsers : int * int *  -&gt; System.Web.Security.MembershipUserCollection" Usage="activeDirectoryMembershipProvider.GetAllUsers (pageIndex, pageSize, totalRecords)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUserCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pageIndex" Type="System.Int32" />
        <Parameter Name="pageSize" Type="System.Int32" />
        <Parameter Name="totalRecords" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pageIndex">The index of the page of results to return. <c>pageIndex</c> is zero-based.</param>
        <param name="pageSize">The size of the page of results to return.</param>
        <param name="totalRecords">When this method returns, contains the total number of records returned in the collection. This parameter is passed uninitialized.</param>
        <summary>Gets a collection of all the users stored in an Active Directory data source.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUserCollection" /> containing <paramref name="pageSize" /><see cref="T:System.Web.Security.MembershipUser" /> instances beginning at the page specified by <paramref name="pageIndex" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée par la <xref:System.Web.Security.Membership> classe pour récupérer des informations utilisateur dans le magasin de données Active Directory spécifié dans le fichier de configuration de l’application ASP.NET.  
  
 Les résultats retournés par la <xref:System.Web.Security.ActiveDirectoryMembershipProvider.GetAllUsers%2A> méthode sont contraints par le `pageIndex` et `pageSize` paramètres. Le `pageSize` paramètre spécifie le nombre maximal de <xref:System.Web.Security.MembershipUser> instances à retourner dans le <xref:System.Web.Security.MembershipUserCollection> collection. Le `pageIndex` paramètre spécifie la page de résultats à retourner, où 0 (zéro) indique la première page.  
  
 Le `totalRecords` paramètre est un `out` paramètre est défini sur le nombre total d’utilisateurs d’appartenance correspondant trouvé dans le magasin de données Active Directory. Par exemple, si 13 utilisateurs pour le magasin de données configuré et le `pageIndex` valeur était égale à 1 avec `pageSize` de 5, le <xref:System.Web.Security.MembershipUserCollection> retournée contient les sixième à dixième utilisateurs. Le `totalRecords` paramètre est défini sur 13.  
  
 Vous pouvez contrôler s’il faut autoriser la recherche d’utilisateurs en définissant le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A> à l’aide de fichiers de propriété dans la configuration d’application le `enableSearchMethods` attribut de la [membership, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) élément. Définition de la <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A> propriété `false` provoque la <xref:System.Web.Security.ActiveDirectoryMembershipProvider.GetAllUsers%2A> méthode lève un <xref:System.NotSupportedException> exception.  
  
 Le fournisseur utilise une recherche dans la sous-arborescence en commençant par le point de recherche spécifié dans la chaîne de connexion. Consultez le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> rubrique pour plus d’informations sur les chaînes de connexion de la classe.  
  
 Nous vous recommandons de ne pas activer les recherches sur les systèmes de production jusqu'à ce que vous avez confirmé que les requêtes de recherche émis par le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe n’affectent pas négativement les performances de votre serveur d’annuaire. Dans la mesure où le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe est conçue pour un environnement Web sans état, il est impossible d’utiliser les optimisations de pagination exposées par sous-jacent <xref:System.DirectoryServices> API. Cela signifie que les opérations de pagination lors de recherches sur des annuaires volumineux sont très coûteuses et doivent être évitées. Opérations de recherche sont toujours exécutées sur le serveur d’annuaire configuré dans la chaîne de connexion ou un serveur sélectionné automatiquement dans le cas d’une chaîne de connexion pointant vers un domaine. Le fournisseur n’utilise pas un catalogue global pour ses méthodes de recherche.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetAllUsers(System.Int32,System.Int32,System.Int32@)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pageIndex" /> is less than 0.  -or  <paramref name="pageSize" /> is less than 1.  \- or -  <paramref name="pageSize" /> multiplied by <paramref name="pageIndex" />, plus <paramref name="pageSize" />, minus 1 is greater than <see cref="F:System.Int32.MaxValue" />.</exception>
        <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods" /> property is <see langword="false" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetNumberOfUsersOnline">
      <MemberSignature Language="C#" Value="public override int GetNumberOfUsersOnline ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetNumberOfUsersOnline() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetNumberOfUsersOnline" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetNumberOfUsersOnline () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetNumberOfUsersOnline();" />
      <MemberSignature Language="F#" Value="override this.GetNumberOfUsersOnline : unit -&gt; int" Usage="activeDirectoryMembershipProvider.GetNumberOfUsersOnline " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Throws a <see cref="T:System.NotSupportedException" /> exception in all cases.</summary>
        <returns>A <see cref="T:System.NotSupportedException" /> in all cases.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe ne prend pas en charge le retour du nombre d’utilisateurs en ligne.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Any call to the <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetNumberOfUsersOnline" /> method.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPassword">
      <MemberSignature Language="C#" Value="public override string GetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberSignature Language="F#" Value="override this.GetPassword : string * string -&gt; string" Usage="activeDirectoryMembershipProvider.GetPassword (username, passwordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to retrieve the password for.</param>
        <param name="passwordAnswer">The password answer for the user.</param>
        <summary>Returns the password of the specified user from the database. The <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> class does not support this method.</summary>
        <returns>Always throws a <see cref="T:System.NotSupportedException" /> exception.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe ne prend pas en charge le retour de mot de passe de l’utilisateur.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">The <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> does not support password retrieval.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetUser">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gets the information from a membership user in the Active Directory data store.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(object providerUserKey, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (providerUserKey As Object, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::Object ^ providerUserKey, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="override this.GetUser : obj * bool -&gt; System.Web.Security.MembershipUser" Usage="activeDirectoryMembershipProvider.GetUser (providerUserKey, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="providerUserKey" Type="System.Object" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="providerUserKey">The unique identifier for the user.</param>
        <param name="userIsOnline">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser(System.Object,System.Boolean)" /> method ignores this parameter.</param>
        <summary>Gets the membership user information associated with the specified user key.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> instance representing the user specified. If no user is found in the Active Directory data store for the specified <paramref name="providerUserKey" /> value, <see langword="null" /> is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser%2A> méthode est appelée par la <xref:System.Web.Security.Membership> classe pour récupérer des informations sur l’utilisateur spécifié à partir du magasin de données Active Directory.  
  
 La recherche porte sur une instance utilisateur où le `objectSID` attribut correspond à la `providerUserKey` paramètre.  
  
 Le fournisseur utilise une recherche dans la sous-arborescence en commençant par le point de recherche spécifié dans la chaîne de connexion. Consultez le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> rubrique pour plus d’informations sur les chaînes de connexion de la classe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser(System.Object,System.Boolean)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="providerUserKey" /> is not of type <see cref="T:System.Security.Principal.SecurityIdentifier" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="providerUserKey" /> is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUser">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.Security.MembershipUser GetUser(string username, bool userIsOnline) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUser (username As String, userIsOnline As Boolean) As MembershipUser" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::Security::MembershipUser ^ GetUser(System::String ^ username, bool userIsOnline);" />
      <MemberSignature Language="F#" Value="override this.GetUser : string * bool -&gt; System.Web.Security.MembershipUser" Usage="activeDirectoryMembershipProvider.GetUser (username, userIsOnline)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipUser</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="userIsOnline" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to get information for.</param>
        <param name="userIsOnline">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser(System.String,System.Boolean)" /> method ignores this parameter.</param>
        <summary>Gets the membership user information associated with the specified user name.</summary>
        <returns>A <see cref="T:System.Web.Security.MembershipUser" /> instance representing the user specified. If no user is found in the Active Directory data store for the specified <paramref name="username" /> value, <see langword="null" /> is returned.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser%2A> méthode est appelée par la <xref:System.Web.Security.Membership> classe pour récupérer des informations sur l’utilisateur spécifié à partir du magasin de données Active Directory.  
  
 Le fournisseur utilise une recherche dans la sous-arborescence en commençant par le point de recherche spécifié dans la chaîne de connexion. Consultez le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> rubrique pour plus d’informations sur les chaînes de connexion de la classe.  
  
 Et les espaces à droite sont retirés de la `username` valeur du paramètre.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is empty, or exceeds the maximum length for the user name (usually 256 characters).  \- or -  <paramref name="username" /> contains commas.  \- or -  The user name is mapped to the <see langword="userPrincipalName" /> attribute and the <paramref name="username" /> parameter contains backslashes.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUser(System.String,System.Boolean)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetUserNameByEmail">
      <MemberSignature Language="C#" Value="public override string GetUserNameByEmail (string email);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string GetUserNameByEmail(string email) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.GetUserNameByEmail(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUserNameByEmail (email As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ GetUserNameByEmail(System::String ^ email);" />
      <MemberSignature Language="F#" Value="override this.GetUserNameByEmail : string -&gt; string" Usage="activeDirectoryMembershipProvider.GetUserNameByEmail email" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="email" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="email">The email address to search for.</param>
        <summary>Gets the user name associated with the specified email address.</summary>
        <returns>The user name associated with the specified email address.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée par la <xref:System.Web.Security.Membership> classe à récupérer un nom d’utilisateur à partir du magasin de données Active Directory en fonction de l’adresse de messagerie pour l’utilisateur.  
  
 Si plusieurs utilisateurs dans le magasin de données d’appartenance a la même adresse e-mail, le premier nom d’utilisateur rencontré est retourné. Vous pouvez définir le `requiresUniqueEmail` attribut de la [membership, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) élément à `true` dans le fichier de configuration d’application pour vous assurer que chaque e-mail adresse dans la base de données est unique.  
  
 Et les espaces à droite sont retirés de la `email` valeur du paramètre. Si l’adresse de messagerie est vide après rognage, un <xref:System.ArgumentException> est levée. Si l’adresse de messagerie est `null`, tous les noms d’utilisateur dans le magasin de données Active Directory sont recherchés, et le premier nom d’utilisateur est retourné.  
  
 Nous vous recommandons de ne pas activer les recherches sur les systèmes de production jusqu'à ce que vous avez confirmé que les requêtes de recherche émis par le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe n’affectent pas négativement les performances de votre serveur d’annuaire.  
  
> [!IMPORTANT]
>  Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.GetUserNameByEmail%2A> méthode s’exécute même lorsque le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnableSearchMethods%2A> propriété est `false`.  
  
 Dans la mesure où le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe est conçue pour un environnement Web sans état, il est impossible d’utiliser les optimisations de pagination exposées par sous-jacent <xref:System.DirectoryServices> API. Cela signifie que les opérations de pagination lors de recherches sur des annuaires volumineux sont très coûteuses et doivent être évitées. Opérations de recherche sont toujours exécutées sur le serveur d’annuaire configuré dans la chaîne de connexion ou un serveur sélectionné automatiquement dans le cas d’une chaîne de connexion pointant vers un domaine. Le fournisseur n’utilise pas un catalogue global pour ses méthodes de recherche.  
  
 Le fournisseur utilise une recherche dans la sous-arborescence en commençant par le point de recherche spécifié dans la chaîne de connexion. Consultez le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> rubrique pour plus d’informations sur les chaînes de connexion de la classe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="email" /> exceeds 256 characters  \- or -  after trimming, <paramref name="email" /> is empty.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">More than one user exists in the data store with the same email address and the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail" /> property value is <see langword="true" />.</exception>
        <exception cref="T:System.InvalidOperationException">The provider is not initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="activeDirectoryMembershipProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">The name of the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance to initialize.</param>
        <param name="config">A <see cref="T:System.Collections.Specialized.NameValueCollection" /> containing the names and values of the configuration options for the membership provider.</param>
        <summary>Initializes the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance with the property values from the application's configuration files. This method is not intended to be called from your code.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode initialise la <xref:System.Web.Security.ActiveDirectoryMembershipProvider> objet avec les valeurs de propriété spécifiées dans le fichier de configuration de l’application ASP.NET (Web.config) et n’est pas destinée à être utilisée directement depuis votre code.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="config" /> is <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The <see langword="applicationName" /> attribute specified in the application configuration exceeds 256 characters.  \- or -  The <see langword="connectionStringName" /> attribute is empty or does not exist in the application configuration.  \- or -  The connection string specified in the <see langword="connectionStringName" /> attribute in the application configuration file is empty or does not exist.  \- or -  The <see langword="connectionProtection" /> attribute is set to a value other than <see cref="F:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal" /> or <see cref="F:System.Web.Security.ActiveDirectoryConnectionProtection.None" /> in the application configuration file.  \- or -  The <see langword="connectionUsername" /> attribute is specified in the application configuration file but its value is empty.  \- or -  The <see langword="connectionPassword" /> attribute is specified in the application configuration file but its value is empty.  \- or -  Either the <see langword="connectionUsername" /> attribute or the <see langword="connectionPassword" /> attribute is specified in the application configuration file, but not both.  \- or -  The <see langword="clientSearchTimeout" /> attribute is specified but is not a positive integer.  \- or -  The <see langword="serverSearchTimeout" /> attribute is specified but is not a positive integer.  \- or -  The <see langword="enableSearchMethods" /> attribute is specified, but is not a Boolean value.  \- or -  The <see langword="requiresUniqueEmail" /> attribute is specified, but is not a Boolean value.  \- or -  The <see langword="enablePasswordReset" /> attribute is specified, but is not a Boolean value.  \- or -  The <see langword="requiresQuestionAndAnswer" /> attribute is specified, but is not a Boolean value.  \- or -  The <see langword="minRequiredPasswordLength" /> attribute is specified and it is either negative or greater than 128.  \- or -  The <see langword="minRequiredNonalphanumericCharacters" /> attribute is specified and it is either negative or greater than 128.  \- or -  The regular expression specified in the <see langword="passwordStrengthRegularExpression" /> attribute in the application configuration file is not a valid regular expression  \- or -  The <see langword="attributeMapUsername" /> attribute is specified, but it is an empty string.  \- or -  The <see langword="connectionString" /> attribute does not begin with "LDAP".  \- or -  The connection string specified in the <see langword="connectionString" /> attribute is invalid.  \- or -  The connection string in the <see langword="connectionString" /> attribute specifies a server-less bind.  \- or -  The <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> could not establish a connection with the domain or directory server.  \- or -  The <see langword="connectionProtection" /> attribute is set to <see cref="F:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal" />, but neither an SSL nor a signed and sealed connection can be established with the server.  \- or -  The <see langword="connectionProtection" /> attribute is set to <see cref="F:System.Web.Security.ActiveDirectoryConnectionProtection.None" /> but the <see langword="connectionUsername" /> and <see langword="connectionPassword" /> attributes are not set.  \- or -  The <see langword="connectionProtection" /> attribute is set to <see cref="F:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal" /> but the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> could not establish an SSL connection with an ADAM server.  \- or -  The <see langword="connectionString" /> attribute specifies either the global catalog (GC) or an SSL global catalog port.  \- or -  The <see langword="connectionString" /> attribute specifies an Active Directory server or domain, but the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> could not retrieve the default naming context for the domain.  \- or -  The <see langword="connectionString" /> attribute specifies an Active Directory server or domain, but the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> could not retrieve the default users container.  \- or -  The <see langword="connectionString" /> attribute specifies an ADAM server, but it does not specify an application partition or container.  \- or -  The <see langword="connectionString" /> attribute specifies an application partition or container, but the specified container does not exist.  \- or -  The <see langword="connectionString" /> attribute specifies a container that is not allowed to contain user instances.  An attribute mapping is specified but its value was empty.  \- or -  An attribute mapping is specified twice.  \- or -  An attribute mapping is specified but the attribute does not exist on the user instance.  \- or -  An attribute mapping is specified but the directory attribute is not of the correct data type.  \- or -  An attribute mapping is specified but the directory attribute is multi-valued.  \- or -  The <see langword="attributeMapUserName" /> attribute is specified but was mapped to neither the <c>sAMAccountName</c> nor the <c>userPrincipalName</c> directory attribute when connecting to an Active Directory.  \- or -  The <see langword="attributeMapUserName" /> attribute is specified but was not mapped to the <c>userPrincipalName</c> directory attribute when connecting to an ADAM server.  \- or -  The <see langword="enablePasswordReset" /> attribute is <see langword="true" /> and the <see langword="requiresQuestionAndAnswer" /> attribute is <see langword="false" /> in the application configuration file.  \- or -  The <see langword="maxInvalidPasswordAttempts" /> attribute was specified but is not a non-zero positive integer.  \- or -  The <see langword="passwordAttemptWindow" /> attribute was specified but is not a non-zero positive integer.  \- or -  The <see langword="passwordAnswerAttemptLockoutDuration" /> attribute was specified but is not a non-zero positive integer.  \- or -  The <see langword="enablePasswordReset" /> attribute is <see langword="true" /> and any of the <see langword="attributeMapFailedPasswordAnswerCount" />, <see langword="attributeMapFailedPasswordAnswerTime" />, and <see langword="attributeMapFailedPasswordAnswerLockoutTime" /> attributes are empty.  \- or -  The <see langword="requiresQuestionAndAnswer" /> attribute is <see langword="true" /> but either the <see langword="attributeMapPasswordQuestion" /> or the <see langword="attributeMapPasswordAnswer" /> attribute is empty.  \- or -  An attribute specified in the application configuration file is not valid.</exception>
        <exception cref="T:System.Web.HttpException">The application is running in a hosted environment and the <see cref="T:System.Web.AspNetHostingPermissionLevel" /> is set to <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />.</exception>
        <exception cref="T:System.Runtime.InteropServices.COMException">An error occurred while querying the directory.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxInvalidPasswordAttempts">
      <MemberSignature Language="C#" Value="public override int MaxInvalidPasswordAttempts { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxInvalidPasswordAttempts" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MaxInvalidPasswordAttempts As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MaxInvalidPasswordAttempts { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MaxInvalidPasswordAttempts : int" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the number of failed answer attempts a user is allowed for the password-reset question.</summary>
        <value>Un utilisateur est autorisé avant le verrouillage du compte est de tentatives de réponse de nombre de mot de passe ayant échoué. La valeur par défaut est <c>5</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> propriété est `true`, l’utilisateur doit répondre à la question de mot de passe pour réinitialiser son mot de passe. L’utilisateur est autorisé à un nombre limité de tentatives de réponse dans la fenêtre de temps établie par le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow%2A> propriété. Si le nombre de tentatives de réponse de mot de passe est supérieur ou égal à la valeur stockée dans le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts%2A> propriété, l’utilisateur est verrouillée pour les autres tentatives pour le nombre de minutes stockées dans le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A> propriété.  
  
> [!NOTE]
>  Cette propriété ne contrôle pas le nombre de tentatives d’ouverture de session ayant échoué qu'un utilisateur peut effectuer avant de leur compte est verrouillé. Le serveur Active Directory gère les tentatives d’ouverture de session ayant échoué et n’est pas affecté par la valeur de cette propriété.  
  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts%2A> propriété est définie dans la configuration de votre application à l’aide de fichiers le `maxInvalidPasswordAttempts` attribut de la [membership, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) élément. Si la propriété n’est pas définie dans le fichier de configuration de l’application, le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts%2A> propriété est définie sur la valeur par défaut `5`.  
  
   
  
## Examples  
 L’exemple de code suivant montre une entrée Web.config qui configure une <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance pour verrouiller les utilisateurs qui ne parviennent pas, trois tente de saisir la réponse de mot de passe dans une fenêtre de temps de 10 minutes. Si l’utilisateur est verrouillé, aucun autre tente de répondre à la question de mot de passe peut être prévu 15 minutes.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,  
          PublicKeyToken=b03f5f7f11d50a3a"  
          maxInvalidPasswordAttempts="3"  
          passwordAttemptWindow="10"  
          passwordAnswerAttemptLockoutDuration="15" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredNonAlphanumericCharacters">
      <MemberSignature Language="C#" Value="public override int MinRequiredNonAlphanumericCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredNonAlphanumericCharacters As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredNonAlphanumericCharacters { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredNonAlphanumericCharacters : int" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredNonAlphanumericCharacters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minimum number of special characters that must be present in a valid password.</summary>
        <value>Nombre minimal de caractères spéciaux qui doivent être présents dans un mot de passe.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> propriété retourne le nombre minimal de caractères spéciaux non alphanumériques qui doivent être entrés pour créer un mot de passe valide.  
  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> valeur de propriété est définie dans la configuration d’application à l’aide du `minRequiredNonalphanumericCharacters` attribut de la [membership, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) élément de configuration.  
  
 Un caractère non alphanumérique est un caractère pour lequel la <xref:System.Char.IsLetterOrDigit%2A> retourne de la méthode `false`.  
  
   
  
## Examples  
 L’exemple suivant montre le [membership, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) élément de configuration dans la `system.web` section du fichier Web.config de l’application. Il indique que l’application utilise une instance de la <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe pour fournir des services d’appartenance et affecte le `minRequiredNonalphanumericCharacters` d’attribut à un seul caractère.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a"  
          minRequiredNonalphanumericCharacters = "1" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredNonAlphanumericCharacters" /> property is accessed before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="MinRequiredPasswordLength">
      <MemberSignature Language="C#" Value="public override int MinRequiredPasswordLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MinRequiredPasswordLength" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredPasswordLength" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MinRequiredPasswordLength As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int MinRequiredPasswordLength { int get(); };" />
      <MemberSignature Language="F#" Value="member this.MinRequiredPasswordLength : int" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredPasswordLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the minimum length required for a password.</summary>
        <value>Longueur minimale requise pour un mot de passe.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredPasswordLength%2A> propriété obtient le nombre minimal de caractères qui doivent être entrés pour créer un mot de passe valide.  
  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredPasswordLength%2A> valeur de propriété est définie dans la configuration d’application à l’aide du `minRequiredPasswordLength` attribut de la [membership, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) élément de configuration.  
  
   
  
## Examples  
 L’exemple suivant montre le [membership, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) élément de configuration dans la `system.web` section du fichier Web.config de l’application. Il indique que l’application utilise une instance de la <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe pour fournir des services d’appartenance et affecte le `minRequiredPasswordLength` attribut sept caractères.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a"  
          minRequiredPasswordLength = "7" />  
  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredPasswordLength" /> property is accessed before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="PasswordAnswerAttemptLockoutDuration">
      <MemberSignature Language="C#" Value="public int PasswordAnswerAttemptLockoutDuration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordAnswerAttemptLockoutDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PasswordAnswerAttemptLockoutDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int PasswordAnswerAttemptLockoutDuration { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordAnswerAttemptLockoutDuration : int" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Get the length of time for which a user account is locked out after the user makes too many bad password-answer attempts.</summary>
        <value>La durée, en minutes, pendant laquelle un utilisateur est verrouillé après avoir fourni les réponses de mot de passe incorrect trop nombreux.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> propriété est `true`, l’utilisateur doit répondre à la question de mot de passe pour réinitialiser son mot de passe. Si l’utilisateur ne parvient pas à fournir la bonne réponse un nombre consécutif de fois égal à la <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts%2A> valeur de propriété au sein de la période d’observation spécifiée par la <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow%2A> propriété, l’utilisateur est verrouillée de tentatives pour le nombre de minutes contenus dans le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A> propriété.  
  
> [!NOTE]
>  Cette propriété ne définit pas la durée de qu'un utilisateur est verrouillé après avoir échoué à entrer un mot de passe valide. Le serveur Active Directory gère les tentatives d’ouverture de session ayant échoué et n’est pas affecté par la valeur de cette propriété. Nous vous recommandons le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A> propriété être définie sur la même valeur que la durée de verrouillage de compte spécifiée pour un trop grand nombre de tentatives d’ouverture de session dans la configuration d’Active Directory. Cela présente un comportement de verrouillage automatique cohérent pour les utilisateurs indépendamment de si elles ont été bloqués en raison d’échecs de connexion ou à des réponses de mot de passe incorrect.  
  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A> propriété est définie dans la configuration de votre application à l’aide de fichiers le `passwordAnswerAttemptLockoutDuration` attribut de la [membership, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) élément. Si la propriété n’est pas définie dans le fichier de configuration de l’application, le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A> propriété est définie sur la valeur par défaut de 30 minutes.  
  
   
  
## Examples  
 L’exemple de code suivant montre une entrée Web.config qui configure une <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance pour verrouiller les utilisateurs qui ne parviennent pas, trois tente de saisir la réponse de mot de passe dans une fenêtre de temps de 10 minutes. Si l’utilisateur est verrouillé, aucun autre tente de répondre à la question de mot de passe peut être prévu 15 minutes.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a"  
          maxInvalidPasswordAttempts="3"  
          passwordAttemptWindow="10"  
          passwordAnswerAttemptLockoutDuration="15" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="PasswordAttemptWindow">
      <MemberSignature Language="C#" Value="public override int PasswordAttemptWindow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PasswordAttemptWindow" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordAttemptWindow As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PasswordAttemptWindow { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordAttemptWindow : int" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the time window during which consecutive failed attempts to provide a valid password or a valid password answer are tracked.</summary>
        <value>La fenêtre de temps, en minutes, durant les échecs des tentatives successives pour fournir un mot de passe ou un mot de passe valide sont suivis les réponses. La valeur par défaut est 10 minutes. Si l’intervalle entre chaque tentative non réussie est supérieur à la <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow" /> paramètre de propriété, le <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance traite chaque tentative non réussie comme s’il s’agissait de la première tentative ayant échouée.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow%2A> propriété fonctionne conjointement avec le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts%2A> propriété pour vous prémunir contre une source non deviner le mot de passe ou une réponse de mot de passe d’un utilisateur d’appartenance par le biais de tentatives répétées. Quand les utilisateurs essaient de se connecter, modifier leur mot de passe ou réinitialiser leur mot de passe, seul un certain nombre de tentatives consécutives est autorisé dans une fenêtre de temps spécifié. La longueur de la fenêtre de temps spécifiée par le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow%2A> propriété, qui identifie le nombre de minutes autorisées entre les tentatives non valides. Si le nombre de consécutives infructueuses un utilisateur effectue pour réinitialiser son ou son mot de passe est égal à la valeur stockée dans le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts%2A> propriété et le temps écoulé depuis la dernière tentative non valide est inférieur au nombre de minutes spécifié pour le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow%2A> propriété, puis le compte d’utilisateur s verrouillé pendant le nombre de minutes contenues dans le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A> propriété. Si l’intervalle entre l’échec de la tentative actuels et l’échec de la dernière tentative est supérieure à la <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow%2A> la propriété, la tentative non valide en cours est considérée comme la première tentative. Si une réponse de mot de passe valide est fournie avant que le nombre maximal de tentatives non valides autorisées est atteinte, le nombre de tentatives de réponse de mot de passe non valide est défini à zéro. Si un mot de passe valide est fourni avant que le nombre maximal de non valide autorisées tentatives soit atteint, le nombre de tentatives de mot de passe non valide et le nombre de tentatives de réponse de mot de passe non valides sont définies à zéro.  
  
 Nous vous recommandons le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A> propriété être définie sur la même valeur que les tentatives de nombre d’échecs de connexion de la durée de verrouillage de compte qui est spécifiée pour la valeur maximale dans la configuration d’Active Directory. Comportement de verrouillage automatique cohérent pour les utilisateurs s’affiche si elles ont été verrouillés en raison d’échecs de connexion ou à des réponses de mot de passe incorrect.  
  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A> propriété est définie dans la configuration de votre application à l’aide de fichiers le `passwordAttemptWindow` attribut de la [membership, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) élément. Si la propriété n’est pas définie dans le fichier de configuration de l’application, le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A> propriété est définie sur la valeur par défaut de 10 minutes.  
  
   
  
## Examples  
 L’exemple de code suivant montre une entrée Web.config qui configure une <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance pour verrouiller les utilisateurs qui ne parviennent pas, trois tente de saisir la réponse de mot de passe dans une fenêtre de temps de 10 minutes. Si l’utilisateur est verrouillé, aucun autre tente de répondre à la question de mot de passe peut être prévu 15 minutes.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,  
          PublicKeyToken=b03f5f7f11d50a3a"  
          maxInvalidPasswordAttempts="3"  
          passwordAttemptWindow="10"  
        passwordAnswerAttemptLockoutDuration="15" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="PasswordFormat">
      <MemberSignature Language="C#" Value="public override System.Web.Security.MembershipPasswordFormat PasswordFormat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Security.MembershipPasswordFormat PasswordFormat" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordFormat" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordFormat As MembershipPasswordFormat" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Security::MembershipPasswordFormat PasswordFormat { System::Web::Security::MembershipPasswordFormat get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordFormat : System.Web.Security.MembershipPasswordFormat" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.PasswordFormat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipPasswordFormat</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating the format of passwords in the Active Directory data store.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.Security.MembershipPasswordFormat" />. Le <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordFormat" /> propriété retourne toujours <see cref="F:System.Web.Security.MembershipPasswordFormat.Hashed" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> propriété ne prend pas en charge la récupération de mot de passe. Le comportement de la <xref:System.Web.Security.ActiveDirectoryMembershipProvider> objet est le même que les autres fournisseurs qui `Hashed` les mots de passe.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PasswordStrengthRegularExpression">
      <MemberSignature Language="C#" Value="public override string PasswordStrengthRegularExpression { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PasswordStrengthRegularExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PasswordStrengthRegularExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PasswordStrengthRegularExpression { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PasswordStrengthRegularExpression : string" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the regular expression used to evaluate a password.</summary>
        <value>Expression régulière utilisée pour évaluer un mot de passe.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression%2A> propriété obtient l’expression régulière utilisée pour évaluer la complexité du mot de passe.  
  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression%2A> propriété n’est pas utilisée pour valider les mots de passe généré automatiquement dans le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ResetPassword%2A> (méthode).  
  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression%2A> propriété est définie dans la configuration d’application à l’aide du `passwordStrengthRegularExpression` attribut de la [membership, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) élément de configuration.  
  
   
  
## Examples  
 L’exemple suivant montre le [membership, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) élément de configuration dans la `system.web` section du fichier Web.config de l’application. Il indique que l’application utilise une instance de la <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe pour fournir des services d’appartenance et définit le `passwordStrengthRegularExpression` attribut à une expression régulière qui valide le fait que le mot de passe répond aux critères suivants :  
  
-   Est supérieure à sept caractères.  
  
-   Contient au moins un chiffre.  
  
-   Contient au moins un caractère (non alphanumériques) spécial.  
  
 Si le mot de passe ne répond pas à ces critères, le mot de passe n’est pas accepté par le fournisseur d’appartenances.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a"  
          passwordStrengthRegularExpression=  
            "@\"(?=.{6,})(?=(.*\d){1,})(?=(.*\W){1,})" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression" /> property is accessed before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequiresQuestionAndAnswer">
      <MemberSignature Language="C#" Value="public override bool RequiresQuestionAndAnswer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresQuestionAndAnswer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresQuestionAndAnswer As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresQuestionAndAnswer { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresQuestionAndAnswer : bool" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether the membership provider is configured to require a password question and answer when creating a user.</summary>
        <value>
          <see langword="true" /> Si le <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> objet est configuré pour exiger une question de mot de passe et une réponse pour un utilisateur ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer%2A> propriété est définie dans la configuration de votre application à l’aide de fichiers le `requiresQuestionAndAnswer` attribut de la [membership, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) élément. Si la propriété n’est pas définie dans le fichier de configuration de l’application, le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer%2A> propriété est définie sur la valeur par défaut `false`.  
  
 Lorsque le `requiresQuestionAndAnswer` attribut est défini sur `true`, vous devez également définir ces attributs supplémentaires.  
  
-   `attributeMapPasswordQuestion` et `attributeMapPasswordAnswer` doivent être mappés aux attributs dans le schéma Active Directory.  
  
 Si les critères ci-dessus ne sont pas remplies, une <xref:System.Configuration.Provider.ProviderException> est levée lors de l’initialisation.  
  
> [!NOTE]
>  Vous pouvez exiger une question de mot de passe et une réponse lors de la création d’un utilisateur, mais vous pouvez définir le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> propriété `false` pour empêcher les utilisateurs de modifier leurs mots de passe à l’aide de la <xref:System.Web.Security.ActiveDirectoryMembershipProvider> classe.  
  
   
  
## Examples  
 L’exemple de code suivant montre une entrée Web.config qui configure une <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance à activer des réinitialisations de mot de passe. Il utilise les informations d’identification explicites d’un utilisateur ayant le droit d’accès « réinitialisation de mot de passe ».  
  
> [!IMPORTANT]
>  Lorsque vous placez des informations d’identification utilisateur dans votre fichier Web.config, il existe des menaces de sécurité potentielles. Les utilisateurs disposant de droits d’accès au répertoire contenant le fichier Web.config peuvent lire le fichier et par conséquent, consultez les informations d’identification. Pour plus d’informations sur la façon de se protéger contre cette menace, consultez [chiffrement Configuration des informations à l’aide de la Configuration protégée](http://msdn.microsoft.com/library/51cdfe5b-9d82-458c-94ff-c551c4f38ed1).  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,  
          PublicKeyToken=b03f5f7f11d50a3a"  
          connectionUsername="UserWithResetPasswordRights"  
          connectionPassword="PasswordForUser"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          attributeMapPasswordQuestion="PasswordQuestionADAttribute"  
          attributeMapPasswordAnswer="PasswordAnswerADAttribute"  
          attributeMapFailedPasswordAnswerCount="AnswerCountADAttribute"  
          attributeMapFailedPasswordAnswerTime="AnswerTimeADAttribute"  
          attributeMapFailedPasswordAnswerLockoutTime="LockOutTimeADAttribute" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="RequiresUniqueEmail">
      <MemberSignature Language="C#" Value="public override bool RequiresUniqueEmail { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUniqueEmail" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property RequiresUniqueEmail As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RequiresUniqueEmail { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequiresUniqueEmail : bool" Usage="System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a value indicating whether an email address stored on the Active Directory server must be unique.</summary>
        <value>
          <see langword="true" /> Si les adresses de messagerie doivent être uniques ; Sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lorsque le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail%2A> propriété est `true`, le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance garantit que l’adresse de messagerie n’est pas utilisée par d’autres utilisateurs au sein d’actuel l’étendue lorsque soit la <xref:System.Web.Security.ActiveDirectoryMembershipProvider.CreateUser%2A> ou <xref:System.Web.Security.ActiveDirectoryMembershipProvider.UpdateUser%2A> méthode est appelée.  
  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail%2A> propriété est définie dans la configuration de votre application à l’aide de fichiers le `requiresUniqueEmail` attribut de la [membership, élément (schéma des paramètres ASP.NET)](http://msdn.microsoft.com/library/b9c1ee8f-33ca-4361-8666-b42a0fe86049) élément. Si la propriété n’est pas définie dans le fichier de configuration de l’application, le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail%2A> propriété est définie sur la valeur par défaut `false`.  
  
   
  
## Examples  
 L’exemple de code suivant montre une entrée Web.config qui configure une <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance pour exiger des adresses de messagerie unique pour les utilisateurs stockés sur le serveur Active Directory.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="ADService" connectionString="LDAP://ldapServer/" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="AspNetActiveDirectoryMembershipProvider">  
      <providers>  
        <add name="AspNetActiveDirectoryMembershipProvider"   
          type="System.Web.Security.ActiveDirectoryMembershipProvider,   
          System.Web, Version=2.0.3600, Culture=neutral,   
          PublicKeyToken=b03f5f7f11d50a3a"  
          requiresUniqueEmail="true" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">An attempt to access the <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail" /> property was made before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance was initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="ResetPassword">
      <MemberSignature Language="C#" Value="public override string ResetPassword (string username, string passwordAnswer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ResetPassword(string username, string passwordAnswer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.ResetPassword(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ResetPassword (username As String, passwordAnswer As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ResetPassword(System::String ^ username, System::String ^ passwordAnswer);" />
      <MemberSignature Language="F#" Value="override this.ResetPassword : string * string -&gt; string" Usage="activeDirectoryMembershipProvider.ResetPassword (username, passwordAnswer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="passwordAnswer" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The user to reset the password for.</param>
        <param name="passwordAnswer">The password answer for the specified user.</param>
        <summary>Resets a user's password to a new, automatically generated password.</summary>
        <returns>The new password for the specified user.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode est appelée par le <xref:System.Web.Security.Membership> valeur générée de classe pour réinitialiser le mot de passe d’un utilisateur dans le magasin de données Active Directory vers une nouvelle façon aléatoire. Le nouveau mot de passe est retourné.  
  
> [!NOTE]
>  Le mot de passe aléatoire créé par la <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ResetPassword%2A> n’est pas garanti que le méthode correspond à l’expression régulière dans le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordStrengthRegularExpression%2A> propriété. Toutefois, le mot de passe aléatoire répond aux critères établis par le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredPasswordLength%2A> et <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MinRequiredNonAlphanumericCharacters%2A> propriétés.  
  
 Si une réponse incorrecte est fournie à la <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ResetPassword%2A> (méthode), le compteur interne qui suit les tentatives de réponse de mot de passe non valides est incrémenté d’un. Cela peut entraîner l’utilisateur est incapable de se connecter jusqu'à ce que l’état du verrou est désactivée par un appel à la <xref:System.Web.Security.ActiveDirectoryMembershipProvider.UnlockUser%2A> (méthode). Si la réponse de mot de passe correct est spécifiée et l’utilisateur n'est pas actuellement verrouillé, le compteur interne qui suit les tentatives de mot de passe non valides sont remis à zéro. Pour plus d’informations, consultez le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts%2A> et <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow%2A> propriétés.  
  
 Début et les espaces à droite sont supprimés de toutes les valeurs de paramètre.  
  
 Vous pouvez appeler la <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ResetPassword%2A> méthode directement en obtenant d’abord une référence à la <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance à partir de la <xref:System.Web.Security.Membership.Provider%2A?displayProperty=nameWithType> propriété.  
  
 Le fournisseur utilise une recherche dans la sous-arborescence en commençant par le point de recherche spécifié dans la chaîne de connexion. Consultez le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> rubrique pour plus d’informations sur les chaînes de connexion de la classe.  
  
 Pour définir les mots de passe sur un serveur Active Directory, le `connectionProtection` attribut doit être défini sur <xref:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal>.  
  
 Lorsque vous utilisez un serveur ADAM, le `connectionProtection` attribut peut être défini sur <xref:System.Web.Security.ActiveDirectoryConnectionProtection.None>, mais uniquement si vous configurez explicitement le serveur ADAM pour autoriser les modifications de mot de passe sur des connexions non sécurisées.  
  
> [!IMPORTANT]
>  Vous ne pouvez pas réinitialiser les mots de passe, sauf si les informations d’identification utilisées pour se connecter au serveur Active Directory ont des droits d’administrateur de domaine (non recommandés) ou le droit d’accès « réinitialisation de mot de passe ».  
  
 Pour réinitialiser un mot de passe, toutes les conditions suivantes doivent être remplies :  
  
-   Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> propriété doit être définie sur `true`.  
  
-   Le schéma Active Directory doit être modifié pour contenir des attributs pour le stockage de la question de mot de passe et la réponse, et les modifications de la réponse les trois champs de suivi pour le mot de passe.  
  
-   Le `attributeMapPasswordQuestion`, `attributeMapPasswordAnswer`, `attributMapFailedPasswordAnswerCount`, `attributeMapFailedPasswordAnswerTime`, et `attributeMapFailedPasswordAnswerLockedTime` attributs doivent être définis dans le fichier de configuration d’application.  
  
-   Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresQuestionAndAnswer%2A> propriété doit être définie sur `true`.  
  
-   Le contexte de sécurité pour la connexion au magasin de données Active Directory (le compte de processus ou les informations d’identification explicites) doit avoir des privilèges suffisants pour modifier les mots de passe. Les informations d’identification utilisées pour se connecter au serveur Active Directory ont des droits d’administrateur de domaine (non recommandés) ou le droit d’accès « réinitialisation de mot de passe ».  
  
> [!NOTE]
>  Les stratégies de sécurité définies sur le serveur Active Directory risque de rendre impossible pour le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ResetPassword%2A> méthode permettant de générer un mot de passe qui satisfait aux stratégies. L’implémentation par défaut de la <xref:System.Web.Security.ActiveDirectoryMembershipProvider.GeneratePassword%2A> méthode générera des mots de passe qui satisfont aux stratégies de mot de passe par défaut sur les contrôleurs de domaine exécutant Windows Server 2003 SP1. Si le mot de passe ne peut pas être réinitialisé en raison des stratégies de sécurité sur le serveur Active Directory, un <xref:System.Configuration.Provider.ProviderException> est levée.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.ResetPassword(System.String,System.String)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
        <exception cref="T:System.NotSupportedException">The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset" /> property value is <see langword="false" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="passwordAnswer" /> is <see langword="null" />.  \- or -  <paramref name="username" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="passwordAnswer" /> is empty after trimming  \- or -  <paramref name="passwordAnswer" /> exceeds 128 characters.  \- or -  <paramref name="username" /> is empty, or exceeds the maximum length allowed for user names (usually 256 characters).  \- or -  <paramref name="username" /> contains commas.  \- or -  The user name is mapped to <see langword="userPrincipalName" /> but the <paramref name="username" /> parameter contains backslashes.</exception>
        <exception cref="T:System.Web.Security.MembershipPasswordException">The user is locked out because of too many bad logon attempts or too many attempted password-answer reset attempts.  \- or -  <paramref name="passwordAnswer" /> does not match the stored password answer.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The user specified in <paramref name="username" /> does not exist in the Active Directory data store.  \- or -  A generated password does not pass a custom validation handler.  \- or -  The generated password is not complex enough to satisfy custom password policies set on the Active Directory server.  \- or -  A secure connection cannot be made to an Active Directory Application Mode server to set the new password.</exception>
        <exception cref="T:System.Exception">An unhandled exception occurred.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnlockUser">
      <MemberSignature Language="C#" Value="public override bool UnlockUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool UnlockUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.UnlockUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function UnlockUser (username As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool UnlockUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.UnlockUser : string -&gt; bool" Usage="activeDirectoryMembershipProvider.UnlockUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The name of the membership user to clear the lock status for.</param>
        <summary>Clears a lock so that a membership user can be validated.</summary>
        <returns>
          <see langword="true" /> if the membership user was successfully unlocked; otherwise, <see langword="false" />. The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.UnlockUser(System.String)" /> method also returns <see langword="false" /> when the membership user is not found in the data store.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Les utilisateurs sont plus fréquemment verrouillés et ne peut pas être validés par le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ValidateUser%2A> (méthode) lorsque le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.MaxInvalidPasswordAttempts%2A> propriété est dépassée au cours de la durée spécifiée dans le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAttemptWindow%2A> propriété ou lorsque trop de tentatives ont été apportées pour vous connecter à l’aide du mot de passe incorrect.  
  
 Si le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> propriété est `true`, lorsqu’un utilisateur est déverrouillé, les compteurs pour les mots de passe incorrects sont réinitialisés.  
  
 Le fournisseur utilise une recherche dans la sous-arborescence en commençant par le point de recherche spécifié dans la chaîne de connexion. Consultez le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> rubrique pour plus d’informations sur les chaînes de connexion de la classe.  
  
 Et les espaces à droite sont retirés de la `username` valeur du paramètre.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> is empty, or exceeds the maximum length allowed for user names (usually 256 characters).  \- or -  <paramref name="username" /> contains commas.  \- or -  The user name is mapped to <see langword="userPrincipalName" /> but the <paramref name="username" /> parameter contains backslashes.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> is <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.UnlockUser(System.String)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
      </Docs>
    </Member>
    <Member MemberName="UpdateUser">
      <MemberSignature Language="C#" Value="public override void UpdateUser (System.Web.Security.MembershipUser user);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void UpdateUser(class System.Web.Security.MembershipUser user) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub UpdateUser (user As MembershipUser)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void UpdateUser(System::Web::Security::MembershipUser ^ user);" />
      <MemberSignature Language="F#" Value="override this.UpdateUser : System.Web.Security.MembershipUser -&gt; unit" Usage="activeDirectoryMembershipProvider.UpdateUser user" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="user" Type="System.Web.Security.MembershipUser" />
      </Parameters>
      <Docs>
        <param name="user">A <see cref="T:System.Web.Security.MembershipUser" /> instance representing the user to update and the updated information for the user.</param>
        <summary>Updates information about a user in the Active Directory data store.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée par la <xref:System.Web.Security.Membership> classe pour mettre à jour les informations utilisateur dans le magasin de données Active Directory. Le <xref:System.Web.Security.MembershipUser.Email%2A>, <xref:System.Web.Security.MembershipUser.Comment%2A>, et <xref:System.Web.Security.MembershipUser.IsApproved%2A> les valeurs de propriété sont mises à jour pour l’utilisateur d’appartenance spécifié. Toutes les autres propriétés sont ignorées.  
  
 La longueur maximale pour le `username` paramètre est de 256 caractères. La longueur maximale pour le <xref:System.Web.Security.MembershipUser.Email%2A> 256 caractères.  
  
 Le mot de passe pour un utilisateur d’appartenance ne peut pas être mis à jour à l’aide de la <xref:System.Web.Security.ActiveDirectoryMembershipProvider.UpdateUser%2A> (méthode). Pour mettre à jour le mot de passe pour un utilisateur d’appartenance, utilisez la <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ChangePassword%2A> (méthode).  
  
 Le fournisseur utilise une recherche dans la sous-arborescence en commençant par le point de recherche spécifié dans la chaîne de connexion. Consultez le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> rubrique pour plus d’informations sur les chaînes de connexion de la classe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.UpdateUser(System.Web.Security.MembershipUser)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="user" /> is <see langword="null" />.  \- or -  The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail" /> property is <see langword="true" /> but the email address from the supplied <see cref="T:System.Web.Security.MembershipUser" /> instance is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <see cref="P:System.Web.Security.MembershipUser.Email" /> property is empty after trimming.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Email" /> property exceeds 256 characters.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Comment" /> property exceeds 1024 characters.  \- or -  The <see cref="P:System.Web.Security.MembershipUser.Comment" /> property is empty.  \- or -  The user name from the supplied <see cref="T:System.Web.Security.MembershipUser" /> instance is empty, or exceeds the maximum length allowed for user names (usually 256 characters).  \- or -  The user name from the supplied <see cref="T:System.Web.Security.MembershipUser" /> instance contains commas.  \- or -  The user name is mapped to <see langword="userPrincipalName" /> but the user name from the supplied <see cref="T:System.Web.Security.MembershipUser" /> instance contains backslashes.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">The specified user is not found in the Active Directory data store.  \- or -  The <see cref="P:System.Web.Security.ActiveDirectoryMembershipProvider.RequiresUniqueEmail" /> property is <see langword="true" />, and the new value of the <see cref="P:System.Web.Security.MembershipUser.Email" /> property duplicates an existing email address.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public override bool ValidateUser (string username, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool ValidateUser(string username, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.ActiveDirectoryMembershipProvider.ValidateUser(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ValidateUser (username As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool ValidateUser(System::String ^ username, System::String ^ password);" />
      <MemberSignature Language="F#" Value="override this.ValidateUser : string * string -&gt; bool" Usage="activeDirectoryMembershipProvider.ValidateUser (username, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">The name of the user to validate.</param>
        <param name="password">The password for the specified user.</param>
        <summary>Verifies that the specified user name and password exist in the Active Directory data store.</summary>
        <returns>
          <see langword="true" /> if the specified <paramref name="username" /> and <paramref name="password" /> are valid; otherwise, <see langword="false" />. If the user specified does not exist in the Active Directory data store, the <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.ValidateUser(System.String,System.String)" /> method returns <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée par la <xref:System.Web.Security.Membership> classe pour valider les informations d’identification utilisateur par rapport au magasin de données Active Directory.  
  
 Si le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> propriété est `true` et les informations d’identification fournies sont valides, réinitialisation des compteurs de suivi de l’utilisateur pour obtenir des réponses de mot de passe incorrect.  
  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.ValidateUser%2A> méthode peut retourner `false` quand les informations d’identification correctes sont fournies dans les circonstances suivantes :  
  
1.  Le compte d’utilisateur a été verrouillé par le serveur d’annuaire en raison de trop nombreuses tentatives d’ouverture de session ayant échoué. L’utilisateur ne sera pas en mesure de se connecter jusqu'à ce que la durée de verrouillage du répertoire réussit.  
  
2.  Si le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> propriété est `true`, le compte d’utilisateur sera verrouillé si l’utilisateur a fourni une réponse de mot de passe incorrect trop souvent. Déverrouille le compte d’utilisateur après l’heure spécifiée dans le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.PasswordAnswerAttemptLockoutDuration%2A> propriété écoulé.  
  
3.  L’utilisateur doit exister dans le conteneur spécifié dans la chaîne de connexion. Informations d’identification valides sont fournies pour un compte d’utilisateur situé dans un autre conteneur ou dans un autre domaine. L’utilisateur doit exister dans le conteneur spécifié dans la chaîne de connexion.  
  
 Lors de la validation d’un utilisateur, le fournisseur valide les informations d’identification en vous connectant au magasin de données Active Directory à l’aide du nom d’utilisateur spécifié et le mot de passe, pas les informations d’identification configurées dans le fichier de configuration d’application.  
  
 Toutefois, le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance se connecte à l’annuaire en utilisant les informations d’identification configurées pour les raisons suivantes.  
  
-   Pour confirmer qu’un utilisateur existe dans la zone de recherche, comme déterminé par le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> chaîne de connexion de l’instance. Le fournisseur utilise une recherche dans la sous-arborescence en commençant par le point de recherche spécifié dans la chaîne de connexion pour déterminer si un utilisateur existe. L’utilisateur doit exister dans le conteneur spécifié. Informations d’identification sont valides en dehors du conteneur spécifié de la chaîne de connexion ne sont pas validées. Consultez le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> rubrique pour plus d’informations sur les chaînes de connexion de la classe.  
  
-   Si le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.EnablePasswordReset%2A> propriété est `true`, le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance utilisera les informations d’identification configurées pour charger l’instance d’utilisateur pour vérifier si l’utilisateur a été verrouillé parce qu’il a effectué trop de tentatives ayant échoués de modification de la réponse de mot de passe .  
  
> [!IMPORTANT]
>  Connexion à un contrôleur de domaine Active Directory avec le compte « Invité » activé est une menace de sécurité potentielle. Toutes les tentatives de validation effectuées sur un contrôleur de domaine Active Directory avec le compte « Invité » activé réussit. Pour améliorer la sécurité lors de l’utilisation d’un contrôleur de domaine Active Directory, vous devez désactiver le compte « Invité » sur le contrôleur de domaine.  
  
 Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance tentera d’établir une liaison simultanée avec Active Directory lorsqu’une des conditions suivantes est remplie :  
  
-   La propriété <xref:System.Web.Security.ActiveDirectoryMembershipProvider.CurrentConnectionProtection%2A> a la valeur <xref:System.Web.Security.ActiveDirectoryConnectionProtection.None>.  
  
-   Le <xref:System.Web.Security.ActiveDirectoryMembershipProvider.CurrentConnectionProtection%2A> propriété est définie sur <xref:System.Web.Security.ActiveDirectoryConnectionProtection.SignAndSeal> et SSL est choisi par le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance pour sécuriser la connexion.  
  
 En outre, pour établir une liaison simultanée à effectuer, les conditions suivantes doivent être remplies :  
  
-   Le serveur d’annuaire doit s’exécuter sur Windows Server 2003.  
  
-   Le système d’exploitation du serveur Web exécutant le <xref:System.Web.Security.ActiveDirectoryMembershipProvider> instance doit prendre en charge des liaisons simultanées (par exemple, Windows Server 2003).  
  
 Lorsqu’une liaison simultanée est utilisée, la dernière date d’ouverture de session pour l’utilisateur n’est pas mis à jour dans le répertoire ; Par conséquent, le <xref:System.Web.Security.ActiveDirectoryMembershipUser.LastLoginDate%2A> propriété ne peut pas être s’appuyaient sur.  
  
 Et les espaces à droite sont retirés de la `username` paramètre.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">The <see cref="M:System.Web.Security.ActiveDirectoryMembershipProvider.ValidateUser(System.String,System.String)" /> method is called before the <see cref="T:System.Web.Security.ActiveDirectoryMembershipProvider" /> instance is initialized.</exception>
      </Docs>
    </Member>
  </Members>
</Type>