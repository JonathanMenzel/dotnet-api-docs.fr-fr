<Type Name="FormsAuthentication" FullName="System.Web.Security.FormsAuthentication">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f4f56adb7aba1c1c15a54767ca04681d14f6b223" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52245592" /></Metadata><TypeSignature Language="C#" Value="public sealed class FormsAuthentication" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit FormsAuthentication extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.FormsAuthentication" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class FormsAuthentication" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormsAuthentication sealed" />
  <TypeSignature Language="F#" Value="type FormsAuthentication = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Gère les services d'authentification par formulaire pour les applications Web. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 L’authentification par formulaire permet d’utilisateur et validation de mot de passe pour les applications Web qui ne nécessitent pas l’authentification Windows. Avec l’authentification par formulaire, les informations utilisateur sont stockées dans une source de données externe, comme un <xref:System.Web.Security.Membership> base de données, ou dans le fichier de configuration pour une application. Une fois qu’un utilisateur est authentifié, l’authentification par formulaire conserve un ticket d’authentification dans un cookie ou dans l’URL et un utilisateur authentifié n’a pas besoin de fournir des informations d’identification avec chaque requête.  
  
 L’authentification par formulaire est activée en définissant le `mode` attribut de l’élément de configuration `Forms`. Vous pouvez exiger que toutes les demandes à une application contiennent un ticket d’authentification utilisateur valide à l’aide de l’élément de configuration de refuser la demande d’un utilisateur inconnu, comme indiqué dans l’exemple suivant.  
  
```  
<system.web>  
  <authentication mode="Forms">  
    <forms loginUrl="login.aspx" />  
  </authentication>  
  <authorization>  
    <deny users="?" />  
  </authorization>  
</system.web>  
```  
  
 Dans l’exemple précédent, toute demande d’une page ASP.NET qui fait partie de l’application nécessite un nom d’utilisateur valide est fourni par l’authentification par formulaire. Si aucun nom d’utilisateur n’existe, la demande est redirigée vers configuré <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.  
  
 Le <xref:System.Web.Security.FormsAuthentication> classe fournit l’accès aux méthodes et propriétés que vous pouvez utiliser dans une application qui authentifie les utilisateurs. Le <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> méthode redirige un navigateur vers configuré <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> pour les utilisateurs de se connecter à une application. Le <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> méthode redirige un utilisateur authentifié vers l’URL d’origine qui a été demandée ou à la <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>. Il existe également des méthodes qui vous permettent de gérer les tickets d’authentification par formulaire, si nécessaire.  
  
   
  
## Examples  
 L’exemple de code suivant montre le fichier Web.config pour une application ASP.NET qui utilise le fournisseur d’appartenances ASP.NET pour l’authentification par formulaire et nécessite tous les utilisateurs soient authentifiés.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="20">  
      <providers>  
        <add name="SqlProvider"  
          type="System.Web.Security.SqlMembershipProvider"  
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="true"  
          requiresQuestionAndAnswer="true"  
          passwordFormat="Hashed"  
          applicationName="/" />  
      </providers>  
    </membership>  
  </system.web>  
</configuration>  
```  
  
 L’exemple de code suivant montre la page de connexion pour une application ASP.NET qui utilise l’authentification par formulaire et l’appartenance ASP.NET.  
  
> [!IMPORTANT]
>  Cet exemple contient une zone de texte qui accepte l’entrée d’utilisateur, ce qui constitue une menace de sécurité potentielle. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Web.AspNetHostingPermission">Pour utiliser le <see cref="T:System.Web.Security.FormsAuthentication" /> classe dans un environnement hébergé. Valeur de la demande : <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" />. Valeur d’autorisation : <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />.</permission>
    <related type="Article" href="https://msdn.microsoft.com/library/77e21ba2-bad1-4967-a8ec-74942dea7e47">Fournisseur d’authentification Forms</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormsAuthentication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormsAuthentication();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Security.FormsAuthentication" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce constructeur n’est pas destiné à être utilisée à partir de votre code.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Authenticate">
      <MemberSignature Language="C#" Value="public static bool Authenticate (string name, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Authenticate(string name, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Authenticate (name As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Authenticate(System::String ^ name, System::String ^ password);" />
      <MemberSignature Language="F#" Value="static member Authenticate : string * string -&gt; bool" Usage="System.Web.Security.FormsAuthentication.Authenticate (name, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is to use the Membership APIs, such as Membership.ValidateUser. For more information, see http://go.microsoft.com/fwlink/?LinkId=252463.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Nom d'utilisateur.</param>
        <param name="password">Mot de passe de l'utilisateur.</param>
        <summary>Valide un nom d'utilisateur et un mot de passe par rapport aux informations d'identification stockées dans le fichier de configuration d'une application.</summary>
        <returns><see langword="true" /> si le mot de passe et le nom d'utilisateur sont valides ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La méthode Authenticate vérifie les informations d’identification utilisateur qui sont stockées dans la section du fichier de configuration d’application. Vous pouvez également utiliser l’appartenance ASP.NET pour stocker les informations d’identification utilisateur et appelez le <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> pour vérifier les informations d’identification. Pour plus d’informations, consultez [gestion des utilisateurs à l’aide de l’appartenance](https://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
 Pour améliorer la sécurité, vous pouvez chiffrer des mots de passe stockés dans le fichier de configuration pour une application à l’aide de la <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> (méthode).  
  
   
  
## Examples  
 L’exemple de code suivant montre les informations d’identification utilisateur stockées dans le fichier Web.config pour une application. Les valeurs de mot de passe ont été hachées à l’aide de la <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> (méthode).  
  
 `<authentication mode="Forms">`  
  
 `<forms loginUrl="login.aspx">`  
  
 `<credentials passwordFormat="SHA1">`  
  
 `<user name="user1"   password="27CE4CA7FBF00685AF2F617E3F5BBCAFF7B7403C" />`  
  
 `<user name="user2"   password="D108F80936F78DFDD333141EBC985B0233A30C7A" />`  
  
 `<user name="user3" password="7BDB09781A3F23885CD43177C0508B375CB1B7E9"/>`  
  
 `</credentials>`  
  
 `</forms>`  
  
 `</authentication>`  
  
 L’exemple de code suivant montre une page de connexion qui utilise le <xref:System.Web.Security.FormsAuthentication.Authenticate%2A> méthode pour valider les informations d’identification de l’utilisateur.  
  
> [!IMPORTANT]
>  Cet exemple contient une zone de texte qui accepte l’entrée d’utilisateur, ce qui constitue une menace de sécurité potentielle. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CookieDomain">
      <MemberSignature Language="C#" Value="public static string CookieDomain { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string CookieDomain" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookieDomain" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieDomain As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ CookieDomain { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieDomain : string" Usage="System.Web.Security.FormsAuthentication.CookieDomain" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la valeur du domaine du cookie d'authentification par formulaire.</summary>
        <value>Le <see cref="P:System.Web.HttpCookie.Domain" /> du cookie d'authentification par formulaire. La valeur par défaut est une chaîne vide ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.FormsAuthentication.CookieDomain%2A> valeur de propriété est définie dans le fichier de configuration pour une application ASP.NET à l’aide de la `domain` attribut de l’élément de configuration. Le <xref:System.Web.Security.FormsAuthentication.CookieDomain%2A> valeur de propriété détermine le <xref:System.Web.HttpCookie.Domain%2A> que le cookie sera utilisé pour.  
  
   
  
## Examples  
 Le code suivant exemple définit le `domain` attribut dans le fichier Web.config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    domain="contoso.com" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CookieMode">
      <MemberSignature Language="C#" Value="public static System.Web.HttpCookieMode CookieMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Web.HttpCookieMode CookieMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookieMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieMode As HttpCookieMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::HttpCookieMode CookieMode { System::Web::HttpCookieMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieMode : System.Web.HttpCookieMode" Usage="System.Web.Security.FormsAuthentication.CookieMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookieMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si l'application est configurée pour l'authentification par formulaire sans cookie.</summary>
        <value>Une des valeurs de <see cref="T:System.Web.HttpCookieMode" /> qui indique si l'application est configurée pour l'authentification par formulaire sans cookies. La valeur par défaut est <see cref="F:System.Web.HttpCookieMode.UseDeviceProfile" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> propriété reflète la valeur pour le `cookieless` attribut de l’élément de configuration. Le <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> propriété détermine si le <xref:System.Web.Security.FormsAuthenticationTicket> valeur est stockée dans un cookie de session dans le navigateur ou stockée dans le <xref:System.Web.HttpRequest.QueryString%2A> propriété.  
  
> [!NOTE]
>  Lorsque le <xref:System.Web.Security.FormsAuthenticationTicket> valeur est stockée dans l’URI, la longueur de l’URI généré peut être supérieure à la longueur maximale autorisée. Il s’agit probablement de se produire lorsque le <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> propriété est définie sur le nom de l’application et le nom de l’application est long (au moins 40 caractères), lorsque les noms d’utilisateur dans l’application sont longs ou lorsque de longues <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> chaînes sont stockées dans le <xref:System.Web.Security.FormsAuthenticationTicket> valeur. Si l’URI généré est trop long, le serveur Web renvoie un `400 - Bad Request` erreur.  
  
   
  
## Examples  
 Le code suivant exemple définit le `cookieless` attribut `AutoDetect` dans le fichier Web.config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="AutoDetect" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CookieSameSite">
      <MemberSignature Language="C#" Value="public static System.Web.SameSiteMode CookieSameSite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Web.SameSiteMode CookieSameSite" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookieSameSite" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookieSameSite As SameSiteMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::SameSiteMode CookieSameSite { System::Web::SameSiteMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CookieSameSite : System.Web.SameSiteMode" Usage="System.Web.Security.FormsAuthentication.CookieSameSite" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.SameSiteMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit la valeur de l’attribut SameSite du cookie.</summary>
        <value>Une des valeurs d'énumération qui représente le mode d’application du cookie. La valeur par défaut est <see cref="F:System.Web.SameSiteMode.Lax" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CookiesSupported">
      <MemberSignature Language="C#" Value="public static bool CookiesSupported { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool CookiesSupported" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.CookiesSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CookiesSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool CookiesSupported { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CookiesSupported : bool" Usage="System.Web.Security.FormsAuthentication.CookiesSupported" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si l'application est configurée pour prendre en charge l'authentification par formulaire sans cookie.</summary>
        <value><see langword="false" /> si l'application est configurée pour prendre en charge l'authentification par formulaire sans cookies ; sinon, <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propriété retourne une valeur basée sur la <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> valeur et les fonctionnalités du navigateur.  
  
-   Si le <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> propriété est définie sur <xref:System.Web.HttpCookieMode.UseCookies>, le <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propriété retournera `true`.  
  
-   Si le <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> propriété est définie sur <xref:System.Web.HttpCookieMode.UseUri>, le <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propriété retournera `false`.  
  
-   Si le <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> propriété est définie sur <xref:System.Web.HttpCookieMode.AutoDetect>, le <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propriété retournera `true` si le navigateur prend en charge les cookies et les cookies sont activés ; sinon, le <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propriété retournera `false`.  
  
-   Si le <xref:System.Web.Security.FormsAuthentication.CookieMode%2A> propriété est définie sur <xref:System.Web.HttpCookieMode.UseDeviceProfile>, le <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propriété retournera `true` si le <xref:System.Web.HttpRequest.Browser%2A> actif <xref:System.Web.HttpContext.Request%2A> prend en charge les cookies et la redirection avec les cookies ; sinon, le <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propriété retournera `false`.  
  
   
  
## Examples  
 Le code suivant exemple définit le `cookieless` attribut <xref:System.Web.HttpCookieMode.UseUri> dans le fichier Web.config. Cette configuration entraîne la <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propriété renvoie `false`.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseUri" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Decrypt">
      <MemberSignature Language="C#" Value="public static System.Web.Security.FormsAuthenticationTicket Decrypt (string encryptedTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.FormsAuthenticationTicket Decrypt(string encryptedTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Decrypt(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Decrypt (encryptedTicket As String) As FormsAuthenticationTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::FormsAuthenticationTicket ^ Decrypt(System::String ^ encryptedTicket);" />
      <MemberSignature Language="F#" Value="static member Decrypt : string -&gt; System.Web.Security.FormsAuthenticationTicket" Usage="System.Web.Security.FormsAuthentication.Decrypt encryptedTicket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.FormsAuthenticationTicket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encryptedTicket" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="encryptedTicket">Ticket d'authentification chiffré.</param>
        <summary>Crée un objet <see cref="T:System.Web.Security.FormsAuthenticationTicket" /> selon le ticket d'authentification par formulaire chiffré passé à la méthode.</summary>
        <returns>Objet <see cref="T:System.Web.Security.FormsAuthenticationTicket" />. Si le paramètre <paramref name="encryptedTicket" /> n'est pas un ticket valide, la valeur <see langword="null" /> est retournée.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><paramref name="encryptedTicket" /> a la valeur <see langword="null" />.  
  
\- ou - 
 Le <paramref name="encryptedTicket" /> est une chaîne vide ("").  
  
\- ou - 
La longueur de <paramref name="encryptedTicket" /> est supérieure à 4 096 caractères.  
  
\- ou - 
 <paramref name="encryptedTicket" /> n'est pas d'un format valide.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DefaultUrl">
      <MemberSignature Language="C#" Value="public static string DefaultUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string DefaultUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.DefaultUrl" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DefaultUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DefaultUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultUrl : string" Usage="System.Web.Security.FormsAuthentication.DefaultUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'URL vers laquelle la classe <see cref="T:System.Web.Security.FormsAuthentication" /> effectuera la redirection si aucune URL de redirection n'est spécifiée.</summary>
        <value>URL vers laquelle la classe <see cref="T:System.Web.Security.FormsAuthentication" /> effectuera la redirection si aucune URL de redirection n'est spécifiée. La valeur par défaut est "default.aspx".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> valeur de propriété est définie dans le fichier de configuration pour une application ASP.NET à l’aide de la `defaultUrl` attribut de l’élément de configuration. Le <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> propriété est utilisée par le <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> méthode si aucune URL de renvoi n’est incluse dans la demande. De même, le <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> méthode retournera le <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> si aucune URL de renvoi n’est incluse dans la demande.  
  
   
  
## Examples  
 Le code suivant exemple définit le `defaultUrl` attribut dans le fichier Web.config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    defaultUrl="index.aspx" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EnableCrossAppRedirects">
      <MemberSignature Language="C#" Value="public static bool EnableCrossAppRedirects { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool EnableCrossAppRedirects" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnableCrossAppRedirects As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool EnableCrossAppRedirects { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.EnableCrossAppRedirects : bool" Usage="System.Web.Security.FormsAuthentication.EnableCrossAppRedirects" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si les utilisateurs authentifiés peuvent être redirigés vers des URL dans d'autres applications Web.</summary>
        <value><see langword="true" /> si les utilisateurs authentifiés peuvent être redirigés vers des URL dans d'autres applications Web ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> valeur de propriété est définie à l’aide de la `enableCrossAppRedirects` attribut de l’élément de configuration.  
  
 Le <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> propriété est vérifiée dans le <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> méthode lors de l’URL de redirection ne pointe pas vers une page dans l’application actuelle. Si <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> est `true`, la redirection est effectuée ; si <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> est `false`, le navigateur est redirigé vers la page définie dans le <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> propriété.  
  
> [!NOTE]
>  Lorsque vous redirigez les pages entre les applications, il se peut que vous devez vous assurer que les attributs spécifiques dans l’élément de configuration sont dupliquées entre les applications authentifiées. Pour plus d’informations et un exemple, consultez [l’authentification des formulaires dans les Applications](https://msdn.microsoft.com/library/99e2f9e8-5b97-4a4d-a4ed-5f93276053b7).  
  
> [!IMPORTANT]
>  Lorsque les redirections entre applications sont autorisées, votre site est vulnérable à une attaque qui dirige les utilisateurs vers un site Web malveillant mais utilise la page de connexion pour votre site. Vérifiez toujours que l’URL de redirection qui est retourné par la <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> méthode est une URL que vous attendez afin que vous pouvez vous assurer que vous autorisez redirige uniquement vers les sites Web approuvés. Vous devez également vérifier que l’URL de redirection utilise le protocole approprié (HTTP ou HTTPS). Pour effectuer ces vérifications effectuées, vous pouvez ajouter un gestionnaire d’événements de publication (postback) à votre page de connexion, ou vous pouvez ajouter un gestionnaire pour le <xref:System.Web.UI.WebControls.Login.LoggedIn> événements de la <xref:System.Web.UI.WebControls.Login> contrôle.  
  
   
  
## Examples  
 Le code suivant exemple définit le `enableCrossAppRedirects` attribut `true` dans le fichier Web.config pour une application ASP.NET.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseUri"  
    requireSSL="true"   
    enableCrossAppRedirects="true" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="EnableFormsAuthentication">
      <MemberSignature Language="C#" Value="public static void EnableFormsAuthentication (System.Collections.Specialized.NameValueCollection configurationData);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void EnableFormsAuthentication(class System.Collections.Specialized.NameValueCollection configurationData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub EnableFormsAuthentication (configurationData As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void EnableFormsAuthentication(System::Collections::Specialized::NameValueCollection ^ configurationData);" />
      <MemberSignature Language="F#" Value="static member EnableFormsAuthentication : System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="System.Web.Security.FormsAuthentication.EnableFormsAuthentication configurationData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="configurationData" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="configurationData">Collection nom-valeur qui contient des valeurs pour "defaultUrl" et/ou "loginUrl". Le paramètre peut avoir la valeur Null s'il n'existe aucune valeur pour l'URL par défaut ou l'URL de connexion.</param>
        <summary>Active l'authentification par formulaire.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> propriété est `null`, que la propriété est définie à la valeur d’URL par défaut à partir de la `configurationData` paramètre. Si le <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> propriété est `null`, que la propriété est définie à la valeur d’URL de connexion à partir de la `configurationData` paramètre.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">L'application n'est pas en phase d'initialisation de prédémarrage.</exception>
      </Docs>
    </Member>
    <Member MemberName="Encrypt">
      <MemberSignature Language="C#" Value="public static string Encrypt (System.Web.Security.FormsAuthenticationTicket ticket);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Encrypt(class System.Web.Security.FormsAuthenticationTicket ticket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encrypt (ticket As FormsAuthenticationTicket) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Encrypt(System::Web::Security::FormsAuthenticationTicket ^ ticket);" />
      <MemberSignature Language="F#" Value="static member Encrypt : System.Web.Security.FormsAuthenticationTicket -&gt; string" Usage="System.Web.Security.FormsAuthentication.Encrypt ticket" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ticket" Type="System.Web.Security.FormsAuthenticationTicket" />
      </Parameters>
      <Docs>
        <param name="ticket">L'objet <see cref="T:System.Web.Security.FormsAuthenticationTicket" /> avec lequel créer le ticket d'authentification par formulaire chiffré.</param>
        <summary>Crée une chaîne contenant un ticket d'authentification par formulaire chiffré qui peut être utilisé dans un cookie HTTP.</summary>
        <returns>Chaîne contenant un ticket d'authentification par formulaire chiffré.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple de code suivant stocke le résultat de la <xref:System.Web.Security.FormsAuthentication.Encrypt%2A> méthode dans un cookie à l’aide de la <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> propriété et redirige l’utilisateur vers l’URL retournée par la <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> (méthode).  
  
> [!IMPORTANT]
>  Cet exemple contient une zone de texte qui accepte l’entrée d’utilisateur, ce qui constitue une menace de sécurité potentielle. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormsAuthenticationTicketClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationTicketClass/CS/formsauthenticationticketclasscs.aspx#1)]
 [!code-aspx-vb[FormsAuthenticationTicketClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationTicketClass/VB/formsauthenticationticketclassvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="ticket" /> a la valeur <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FormsCookieName">
      <MemberSignature Language="C#" Value="public static string FormsCookieName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string FormsCookieName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.FormsCookieName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FormsCookieName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ FormsCookieName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormsCookieName : string" Usage="System.Web.Security.FormsAuthentication.FormsCookieName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom du cookie utilisé pour stocker le ticket d'authentification par formulaire.</summary>
        <value>Nom du cookie utilisé pour stocker le ticket d'authentification par formulaire. La valeur par défaut est ".ASPXAUTH".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> valeur de propriété est définie dans le fichier de configuration pour une application ASP.NET à l’aide de la `name` attribut de l’élément de configuration. Le <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> est utilisé pour référencer le cookie qui stocke le <xref:System.Web.Security.FormsAuthenticationTicket> plus d’informations.  
  
   
  
## Examples  
 Le code suivant exemple définit le <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> valeur de propriété à l’aide de la `name` attribut dans le fichier Web.config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    name=".ASPXFORMSAUTH" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FormsCookiePath">
      <MemberSignature Language="C#" Value="public static string FormsCookiePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string FormsCookiePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.FormsCookiePath" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FormsCookiePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ FormsCookiePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FormsCookiePath : string" Usage="System.Web.Security.FormsAuthentication.FormsCookiePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le chemin d'accès au cookie d'authentification par formulaire.</summary>
        <value>Chemin d'accès au cookie dans lequel les informations de ticket d'authentification par formulaire sont stockées. La valeur par défaut est "/".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> valeur de propriété est définie dans le fichier de configuration pour une application ASP.NET en utilisant le `path` attribut de l’élément de configuration. Le <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> Spécifie le <xref:System.Web.HttpCookie.Path%2A> pour le cookie qui stocke le <xref:System.Web.Security.FormsAuthenticationTicket> plus d’informations.  
  
   
  
## Examples  
 Le code suivant exemple définit le <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> valeur de propriété à l’aide de la `path` attribut dans le fichier Web.config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    path="/MyApplication" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetAuthCookie">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crée un cookie d'authentification pour un nom d'utilisateur donné.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetAuthCookie">
      <MemberSignature Language="C#" Value="public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.HttpCookie GetAuthCookie(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAuthCookie (userName As String, createPersistentCookie As Boolean) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::HttpCookie ^ GetAuthCookie(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member GetAuthCookie : string * bool -&gt; System.Web.HttpCookie" Usage="System.Web.Security.FormsAuthentication.GetAuthCookie (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">Nom de l'utilisateur authentifié.</param>
        <param name="createPersistentCookie"><see langword="true" /> pour créer un cookie persistant (enregistré d'une session de navigation à l'autre) ; sinon, <see langword="false" />.</param>
        <summary>Crée un cookie d'authentification pour un nom d'utilisateur donné. Le cookie n'est pas pour autant défini comme faisant partie de la réponse sortante, de sorte qu'une application peut contrôler davantage la façon dont le cookie est émis.</summary>
        <returns>Un <see cref="T:System.Web.HttpCookie" /> qui contient des informations de ticket d'authentification par formulaire chiffrées. La valeur par défaut de la propriété <see cref="P:System.Web.Security.FormsAuthentication.FormsCookiePath" /> est utilisée.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le chemin d’accès du cookie est déterminé par le <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> propriété.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetAuthCookie">
      <MemberSignature Language="C#" Value="public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.HttpCookie GetAuthCookie(string userName, bool createPersistentCookie, string strCookiePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetAuthCookie (userName As String, createPersistentCookie As Boolean, strCookiePath As String) As HttpCookie" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::HttpCookie ^ GetAuthCookie(System::String ^ userName, bool createPersistentCookie, System::String ^ strCookiePath);" />
      <MemberSignature Language="F#" Value="static member GetAuthCookie : string * bool * string -&gt; System.Web.HttpCookie" Usage="System.Web.Security.FormsAuthentication.GetAuthCookie (userName, createPersistentCookie, strCookiePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpCookie</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
        <Parameter Name="strCookiePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">Nom de l'utilisateur authentifié.</param>
        <param name="createPersistentCookie"><see langword="true" /> pour créer un cookie persistant (enregistré d'une session de navigation à l'autre) ; sinon, <see langword="false" />.</param>
        <param name="strCookiePath">Le <see cref="P:System.Web.HttpCookie.Path" /> du cookie d'authentification.</param>
        <summary>Crée un cookie d'authentification pour un nom d'utilisateur donné. Cela ne définit pas le cookie dans le cadre de la réponse sortante.</summary>
        <returns>Un <see cref="T:System.Web.HttpCookie" /> qui contient des informations de ticket d'authentification par formulaire chiffrées.</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetRedirectUrl">
      <MemberSignature Language="C#" Value="public static string GetRedirectUrl (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetRedirectUrl(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetRedirectUrl (userName As String, createPersistentCookie As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetRedirectUrl(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member GetRedirectUrl : string * bool -&gt; string" Usage="System.Web.Security.FormsAuthentication.GetRedirectUrl (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">Nom de l'utilisateur authentifié.</param>
        <param name="createPersistentCookie">Ce paramètre est ignoré.</param>
        <summary>Retourne l'URL de redirection pour la requête d'origine qui a provoqué la redirection vers la page de connexion.</summary>
        <returns>Chaîne contenant l’URL de redirection ou null si <paramref name="userName" /> est null.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Vous pouvez utiliser cette méthode lorsque vous souhaitez exécuter la redirection dans votre code d’application au lieu d’utiliser le <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> (méthode).  
  
 Le <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> méthode retourne l’URL spécifiée dans la chaîne de requête à l’aide de la `ReturnURL` nom de la variable. Par exemple, dans l’URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, le <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> méthode retourne l’URL de renvoi `caller.aspx`. Si le `ReturnURL` variable n’existe pas, le <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> méthode retourne l’URL dans le <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> propriété.  
  
 ASP.NET ajoute automatiquement l’URL de renvoi lorsque le navigateur est redirigé vers la page de connexion.  
  
 Par défaut, le `ReturnUrl` variable doit faire référence à une page dans l’application actuelle. Si `ReturnUrl` fait référence à une page dans une autre application ou sur un autre serveur, le <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> méthodes retourne l’URL dans le <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> propriété. Si vous souhaitez autoriser l’URL de renvoi faire référence à une page en dehors de l’application actuelle, vous devez définir le <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> propriété `true` à l’aide de la `enableCrossAppRedirects` attribut de l’élément de configuration.  

Cette méthode ne crée pas un cookie.
  
> [!IMPORTANT]
>  Définition de la <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> propriété `true` pour autoriser les redirections entre applications constitue une menace de sécurité potentielle. Pour plus d'informations, consultez la propriété <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>.  
  
   
  
## Examples  
 Le code suivant effectue une redirection exemple utilisateurs authentifiés à l’URL retournées à partir de la <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> (méthode).  
  
> [!IMPORTANT]
>  Cet exemple contient une zone de texte qui accepte l’entrée d’utilisateur, ce qui constitue une menace de sécurité potentielle. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormsAuthenticationTicketClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationTicketClass/CS/formsauthenticationticketclasscs.aspx#1)]
 [!code-aspx-vb[FormsAuthenticationTicketClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationTicketClass/VB/formsauthenticationticketclassvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="HashPasswordForStoringInConfigFile">
      <MemberSignature Language="C#" Value="public static string HashPasswordForStoringInConfigFile (string password, string passwordFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string HashPasswordForStoringInConfigFile(string password, string passwordFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function HashPasswordForStoringInConfigFile (password As String, passwordFormat As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ HashPasswordForStoringInConfigFile(System::String ^ password, System::String ^ passwordFormat);" />
      <MemberSignature Language="F#" Value="static member HashPasswordForStoringInConfigFile : string * string -&gt; string" Usage="System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile (password, passwordFormat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Obsolete("The recommended alternative is to use the Membership APIs, such as Membership.CreateUser. For more information, see http://go.microsoft.com/fwlink/?LinkId=252463.")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="passwordFormat" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="password">Mot de passe à hacher.</param>
        <param name="passwordFormat">Algorithme de hachage à utiliser. <paramref name="passwordFormat" /> est un <see langword="String" /> qui représente l'une des valeurs d'énumération <see cref="T:System.Web.Configuration.FormsAuthPasswordFormat" />.</param>
        <summary>Crée un mot de passe de hachage approprié au stockage dans un fichier de configuration selon le mot de passe et l'algorithme de hachage spécifiés.</summary>
        <returns>Mot de passe haché.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> méthode crée une valeur de mot de passe haché qui peut être utilisée lors de l’authentification par formulaire de stocker des informations d’identification dans le fichier de configuration pour une application.  
  
 Informations d’identification stockées dans le fichier de configuration pour une application sont utilisées par le <xref:System.Web.Security.FormsAuthentication.Authenticate%2A> méthode pour vérifier les mots de passe pour les utilisateurs d’une application. Ou bien, vous pouvez utiliser l’appartenance ASP.NET pour stocker les informations d’identification de l’utilisateur. Pour plus d’informations, consultez [gestion des utilisateurs à l’aide de l’appartenance](https://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
   
  
## Examples  
 L’exemple de code suivant prend un nom d’utilisateur, le mot de passe et le type de hachage et affiche la section de configuration qui inclut la définition de l’utilisateur et le mot de passe haché.  
  
> [!IMPORTANT]
>  Cet exemple contient une zone de texte qui accepte l’entrée d’utilisateur, ce qui constitue une menace de sécurité potentielle. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormsAuthenticationHashPassword#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormsAuthenticationHashPassword/CS/formsauthenticationhashpasswordcs.aspx#1)]
 [!code-aspx-vb[FormsAuthenticationHashPassword#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormsAuthenticationHashPassword/VB/formsauthenticationhashpasswordvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="password" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="passwordFormat" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="passwordFormat" /> n’est pas une valeur de <see cref="T:System.Web.Configuration.FormsAuthPasswordFormat" /> valide.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public static void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Initialize();" />
      <MemberSignature Language="F#" Value="static member Initialize : unit -&gt; unit" Usage="System.Web.Security.FormsAuthentication.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Initialise l'objet <see cref="T:System.Web.Security.FormsAuthentication" /> selon les paramètres de configuration de l'application.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.FormsAuthentication.Initialize%2A> méthode est appelée lorsque le <xref:System.Web.Security.FormsAuthenticationModule> crée une instance de la <xref:System.Web.Security.FormsAuthentication> classe. Cette méthode n'est pas conçue pour être appelée à partir de votre code.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="public static bool IsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool" Usage="System.Web.Security.FormsAuthentication.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si l'authentification des formulaires est activé.</summary>
        <value><see langword="true" /> si l'authentification par formulaire est activée ; sinon <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoginUrl">
      <MemberSignature Language="C#" Value="public static string LoginUrl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property string LoginUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.LoginUrl" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LoginUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ LoginUrl { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LoginUrl : string" Usage="System.Web.Security.FormsAuthentication.LoginUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'URL de la page de connexion vers laquelle la classe <see cref="T:System.Web.Security.FormsAuthentication" /> effectuera la redirection.</summary>
        <value>URL de la page de connexion vers laquelle la classe <see cref="T:System.Web.Security.FormsAuthentication" /> effectuera la redirection. La valeur par défaut est "login.aspx".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> valeur de propriété est définie dans le fichier de configuration pour une application ASP.NET à l’aide de la `loginUrl` attribut de l’élément de configuration. Le <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> est utilisé par le <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> (méthode).  
  
   
  
## Examples  
 Le code suivant exemple définit le `loginUrl` attribut dans le fichier Web.config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    defaultUrl="index.aspx" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectFromLoginPage">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Redirige un utilisateur authentifié vers l'URL demandée à l'origine ou l'URL par défaut.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectFromLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectFromLoginPage (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectFromLoginPage(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectFromLoginPage (userName As String, createPersistentCookie As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectFromLoginPage(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member RedirectFromLoginPage : string * bool -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectFromLoginPage (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">Nom d'utilisateur authentifié.</param>
        <param name="createPersistentCookie"><see langword="true" /> pour créer un cookie persistant (enregistré d'une session de navigation à l'autre) ; sinon, <see langword="false" />.</param>
        <summary>Redirige un utilisateur authentifié vers l'URL demandée à l'origine ou l'URL par défaut.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> méthode redirige vers l’URL spécifiée dans la chaîne de requête à l’aide de la `ReturnURL` nom de la variable. Par exemple, dans l’URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, le <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> méthode redirige vers l’URL de renvoi `caller.aspx`. Si le `ReturnURL` variable n’existe pas, le <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> méthode redirige vers l’URL dans le <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> propriété.  
  
 ASP.NET ajoute automatiquement l’URL de renvoi lorsque le navigateur est redirigé vers la page de connexion.  
  
 Par défaut, le `ReturnUrl` variable doit faire référence à une page dans l’application actuelle. Si `ReturnUrl` fait référence à une page dans une autre application ou sur un autre serveur, le <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> méthodes redirige vers l’URL dans le <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> propriété. Si vous souhaitez autoriser les redirections vers une page en dehors de l’application actuelle, vous devez définir le <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> propriété `true` à l’aide de la `enableCrossAppRedirects` attribut de l’élément de configuration.  
  
> [!IMPORTANT]
>  Définition de la <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> propriété `true` pour autoriser les redirections entre applications constitue une menace de sécurité potentielle. Pour plus d'informations, consultez la propriété <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>.  
  
 Si le <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propriété est `true`et la valeur la `ReturnUrl` variable se trouve dans l’application actuelle ou la <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> propriété est `true`, puis le <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> méthode émet un ticket d’authentification et le place dans le à l’aide de cookie par défaut le <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> (méthode).  
  
 Si <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> est `false` et le chemin de redirection correspond à une URL dans l’application actuelle, le ticket est émis dans le cadre de l’URL de redirection. Si <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> est `false`, <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> est `true`et la redirection d’URL ne fait pas référence à une page dans l’application actuelle, le <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> méthode émet un ticket d’authentification et le place dans le <xref:System.Web.HttpRequest.QueryString%2A> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant redirige les utilisateurs validés vers l’URL demandée à l’origine ou le <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>. L’exemple de code utilise l’appartenance ASP.NET pour valider les utilisateurs. Pour plus d’informations sur l’appartenance d’ASP.NET, consultez [gestion des utilisateurs à l’aide de l’appartenance](https://msdn.microsoft.com/library/824c3a24-f0af-427c-a652-0d2d1e9397cd).  
  
> [!IMPORTANT]
>  Cet exemple contient une zone de texte qui accepte l’entrée d’utilisateur, ce qui constitue une menace de sécurité potentielle. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/CS/logincs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlMembershipProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlMembershipProvider/VB/loginvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">L'URL de renvoi spécifiée dans la chaîne de requête contient un protocole autre que HTTP: ou HTTPS:.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RedirectFromLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectFromLoginPage (string userName, bool createPersistentCookie, string strCookiePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectFromLoginPage(string userName, bool createPersistentCookie, string strCookiePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectFromLoginPage (userName As String, createPersistentCookie As Boolean, strCookiePath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectFromLoginPage(System::String ^ userName, bool createPersistentCookie, System::String ^ strCookiePath);" />
      <MemberSignature Language="F#" Value="static member RedirectFromLoginPage : string * bool * string -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectFromLoginPage (userName, createPersistentCookie, strCookiePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
        <Parameter Name="strCookiePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">Nom d'utilisateur authentifié.</param>
        <param name="createPersistentCookie"><see langword="true" /> pour créer un cookie persistant (enregistré d'une session de navigation à l'autre) ; sinon, <see langword="false" />.</param>
        <param name="strCookiePath">Chemin d'accès au cookie pour le ticket d'authentification par formulaire.</param>
        <summary>Redirige un utilisateur authentifié vers l'URL demandée à l'origine ou l'URL par défaut à l'aide du chemin d'accès spécifié pour le cookie d'authentification par formulaire.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> méthode redirige vers l’URL de renvoi spécifiée dans la chaîne de requête à l’aide de la `ReturnURL` nom de la variable. Par exemple, dans l’URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, le <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> méthode redirige vers l’URL de renvoi `caller.aspx`. Si le `ReturnURL` variable n’existe pas, le <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> méthode redirige vers l’URL dans le <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> propriété.  
  
 ASP.NET ajoute automatiquement l’URL de renvoi lorsque le navigateur est redirigé vers la page de connexion.  
  
 Par défaut, le `ReturnUrl` variable doit faire référence à une page dans l’application actuelle. Si `ReturnUrl` fait référence à une page dans une autre application ou sur un autre serveur, le <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> méthode redirige vers l’URL dans le <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> propriété. Si vous souhaitez autoriser les redirections vers une page en dehors de l’application actuelle, vous devez définir le <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> propriété `true` à l’aide de la `enableCrossAppRedirects` attribut de l’élément de configuration.  
  
> [!IMPORTANT]
>  Définition de la <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> propriété `true` pour autoriser les redirections entre applications constitue une menace de sécurité potentielle. Pour plus d'informations, consultez la propriété <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>.  
  
 Si le <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> propriété est `true`et la valeur la `ReturnUrl` variable se trouve dans l’application actuelle ou la <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> propriété est `true`, puis le <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> méthode émet un ticket d’authentification et le place dans le cookie spécifié par le `strCookiePath` à l’aide du paramètre le <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> (méthode).  
  
 Si <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> est `false` et le chemin de redirection correspond à une URL dans l’application actuelle, le ticket est émis dans le cadre de l’URL de redirection. Si <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> est `false`, <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> est `true`et la redirection d’URL ne fait pas référence à une page dans l’application actuelle, le <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> méthode émet un ticket d’authentification et le place dans le <xref:System.Web.HttpRequest.QueryString%2A> propriété.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">L'URL de renvoi spécifiée dans la chaîne de requête contient un protocole autre que HTTP: ou HTTPS:.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="RedirectToLoginPage">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Redirige le navigateur vers l'URL de connexion.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> méthode redirige le navigateur à le <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.  
  
 Le <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> méthode n’efface pas le cookie d’authentification par formulaire. Vous pouvez utiliser la <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> méthode conjointement avec la <xref:System.Web.Security.FormsAuthentication.SignOut%2A> méthode pour déconnecter un utilisateur et permettre à un autre utilisateur pour vous connecter.  
  
 Contrairement à la <xref:System.Web.HttpResponse.Redirect%2A?displayProperty=nameWithType> (méthode), cette méthode ne termine pas la demande en appelant <xref:System.Web.HttpResponse.End%2A?displayProperty=nameWithType>. Cela signifie que le code qui suit le <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> appel de méthode s’exécute.  
  
   
  
## Examples  
 L’exemple de code suivant efface le cookie d’authentification par formulaire à l’aide du <xref:System.Web.Security.FormsAuthentication.SignOut%2A> (méthode) et les redirections de page de l’utilisateur à la connexion à l’aide de la <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> (méthode).  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signoutcs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signoutvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="RedirectToLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectToLoginPage ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectToLoginPage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectToLoginPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectToLoginPage ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectToLoginPage();" />
      <MemberSignature Language="F#" Value="static member RedirectToLoginPage : unit -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectToLoginPage " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Redirige le navigateur vers l'URL de connexion.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> méthode redirige le navigateur à le <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.  
  
 Le <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> méthode n’efface pas le cookie d’authentification par formulaire. Vous pouvez utiliser la <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> méthode conjointement avec la <xref:System.Web.Security.FormsAuthentication.SignOut%2A> méthode pour déconnecter un utilisateur et permettre à un autre utilisateur pour vous connecter.  
  
   
  
## Examples  
 L’exemple de code suivant efface le cookie d’authentification par formulaire à l’aide du <xref:System.Web.Security.FormsAuthentication.SignOut%2A> (méthode) et les redirections de page de l’utilisateur à la connexion à l’aide de la <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> (méthode).  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signoutcs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signoutvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RedirectToLoginPage">
      <MemberSignature Language="C#" Value="public static void RedirectToLoginPage (string extraQueryString);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RedirectToLoginPage(string extraQueryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RedirectToLoginPage (extraQueryString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RedirectToLoginPage(System::String ^ extraQueryString);" />
      <MemberSignature Language="F#" Value="static member RedirectToLoginPage : string -&gt; unit" Usage="System.Web.Security.FormsAuthentication.RedirectToLoginPage extraQueryString" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extraQueryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="extraQueryString">Chaîne de requête à inclure avec l'URL de redirection.</param>
        <summary>Redirige le navigateur vers l'URL de connexion avec la chaîne de requête spécifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> méthode redirige le navigateur vers le <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> et inclut le `extraQueryString` valeur en tant que le <xref:System.Management.ManagementQuery.QueryString%2A> pour l’URL redirigée.  
  
 Le <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> méthode n’efface pas le cookie d’authentification par formulaire. Vous pouvez utiliser la <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> méthode conjointement avec la <xref:System.Web.Security.FormsAuthentication.SignOut%2A> méthode pour déconnecter un utilisateur et permettre à un autre utilisateur pour vous connecter.  
  
   
  
## Examples  
 L’exemple de code suivant efface le cookie d’authentification par formulaire à l’aide du <xref:System.Web.Security.FormsAuthentication.SignOut%2A> (méthode) et les redirections de page de l’utilisateur à la connexion à l’aide de la <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> (méthode).  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signout2cs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signout2vb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RenewTicketIfOld">
      <MemberSignature Language="C#" Value="public static System.Web.Security.FormsAuthenticationTicket RenewTicketIfOld (System.Web.Security.FormsAuthenticationTicket tOld);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.Security.FormsAuthenticationTicket RenewTicketIfOld(class System.Web.Security.FormsAuthenticationTicket tOld) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RenewTicketIfOld (tOld As FormsAuthenticationTicket) As FormsAuthenticationTicket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::Security::FormsAuthenticationTicket ^ RenewTicketIfOld(System::Web::Security::FormsAuthenticationTicket ^ tOld);" />
      <MemberSignature Language="F#" Value="static member RenewTicketIfOld : System.Web.Security.FormsAuthenticationTicket -&gt; System.Web.Security.FormsAuthenticationTicket" Usage="System.Web.Security.FormsAuthentication.RenewTicketIfOld tOld" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.FormsAuthenticationTicket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="tOld" Type="System.Web.Security.FormsAuthenticationTicket" />
      </Parameters>
      <Docs>
        <param name="tOld">Ticket d'authentification par formulaire à mettre à jour.</param>
        <summary>Met à jour de manière conditionnelle les dates et heures d'émission et d'expiration d'un <see cref="T:System.Web.Security.FormsAuthenticationTicket" />.</summary>
        <returns><see cref="T:System.Web.Security.FormsAuthenticationTicket" /> mise à jour.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.FormsAuthentication.RenewTicketIfOld%2A> méthode met à jour la date d’expiration et l’heure de l’élément <xref:System.Web.Security.FormsAuthenticationTicket> si la date et heure actuelles moins la <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> valeur est supérieure à la <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> valeur moins la date et heure actuelles.  
  
 Le ticket est mis à jour avec la <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> propriété définie sur la date et heure actuelles et les <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> propriété définie sur la date et heure actuelles plus la version d’origine <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> valeur moins la version d’origine <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> valeur.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RequireSSL">
      <MemberSignature Language="C#" Value="public static bool RequireSSL { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool RequireSSL" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.RequireSSL" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RequireSSL As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool RequireSSL { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.RequireSSL : bool" Usage="System.Web.Security.FormsAuthentication.RequireSSL" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si le cookie d'authentification par formulaire requiert une connexion SSL pour être retourné au serveur.</summary>
        <value><see langword="true" /> si une connexion SSL est nécessaire pour retourner le cookie d'authentification par formulaire au serveur ; sinon, <see langword="false" />. La valeur par défaut est <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> valeur de propriété est définie dans le fichier de configuration pour une application ASP.NET à l’aide de la `requireSSL` attribut de l’élément de configuration. Vous pouvez spécifier dans le fichier Web.config de votre application ASP.NET si SSL (Secure Sockets Layer) est requise pour retourner le cookie d’authentification par formulaire au serveur en définissant le `requireSSL` attribut. Pour plus d'informations, consultez <xref:System.Web.HttpCookie.Secure%2A>.  
  
 Il est recommandé que si vous configurez `requireSSL` comme `false`, vous configurez également `slidingExpiration` comme `false`, afin de réduire la durée pendant laquelle un ticket est valid.  
  
   
  
## Examples  
 Le code suivant exemple définit le `requireSSL` attribut dans le fichier Web.config.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    cookieless="UseCookies"  
    requireSSL="true"  
    path="/MyApplication" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetAuthCookie">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crée un ticket d'authentification pour le nom d'utilisateur fourni et l'ajoute à la collection de cookies de la réponse, ou à l'URL si vous utilisez une authentification sans cookies.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> méthode ajoute un ticket d’authentification par formulaire à la collection de cookies ou l’URL si <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> est `false`. Le ticket d’authentification par formulaire fournit des informations d’authentification par formulaire à la demande suivante faite par le navigateur. Avec l’authentification par formulaire, vous pouvez utiliser la <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> méthode lorsque vous souhaitez authentifier un utilisateur tout en conservant le contrôle de la navigation avec redirection.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197376">Explication : L’authentification par formulaire dans ASP.NET 2.0</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197377">Comment : Utiliser l’appartenance dans ASP.NET 2.0</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetAuthCookie">
      <MemberSignature Language="C#" Value="public static void SetAuthCookie (string userName, bool createPersistentCookie);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAuthCookie(string userName, bool createPersistentCookie) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAuthCookie (userName As String, createPersistentCookie As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAuthCookie(System::String ^ userName, bool createPersistentCookie);" />
      <MemberSignature Language="F#" Value="static member SetAuthCookie : string * bool -&gt; unit" Usage="System.Web.Security.FormsAuthentication.SetAuthCookie (userName, createPersistentCookie)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="userName">Nom d'un utilisateur authentifié. Ne correspond pas obligatoirement à un compte Windows.</param>
        <param name="createPersistentCookie"><see langword="true" /> pour créer un cookie persistant (enregistré d'une session de navigation à l'autre) ; sinon, <see langword="false" />.</param>
        <summary>Crée un ticket d'authentification pour le nom d'utilisateur fourni et l'ajoute à la collection de cookies de la réponse, ou à l'URL si vous utilisez une authentification sans cookies.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> méthode ajoute un ticket d’authentification par formulaire à la collection de cookies ou à l’URL si <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> est `false`. Le ticket d’authentification par formulaire fournit des informations d’authentification par formulaire à la demande suivante faite par le navigateur. Avec l’authentification par formulaire, vous pouvez utiliser la <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> méthode lorsque vous souhaitez authentifier un utilisateur tout en conservant le contrôle de la navigation avec redirection.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.Security.FormsAuthentication.RequireSSL" /> a la valeur <see langword="true" /> et <see cref="P:System.Web.HttpRequest.IsSecureConnection" /> a la valeur <see langword="false" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SetAuthCookie">
      <MemberSignature Language="C#" Value="public static void SetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetAuthCookie(string userName, bool createPersistentCookie, string strCookiePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetAuthCookie (userName As String, createPersistentCookie As Boolean, strCookiePath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetAuthCookie(System::String ^ userName, bool createPersistentCookie, System::String ^ strCookiePath);" />
      <MemberSignature Language="F#" Value="static member SetAuthCookie : string * bool * string -&gt; unit" Usage="System.Web.Security.FormsAuthentication.SetAuthCookie (userName, createPersistentCookie, strCookiePath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="createPersistentCookie" Type="System.Boolean" />
        <Parameter Name="strCookiePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">Nom d'un utilisateur authentifié.</param>
        <param name="createPersistentCookie"><see langword="true" /> pour créer un cookie persistant (enregistré d'une session de navigation à l'autre) ; sinon, <see langword="false" />.</param>
        <param name="strCookiePath">Chemin d'accès au cookie pour le ticket d'authentification par formulaire.</param>
        <summary>Crée un ticket d'authentification pour le nom d'utilisateur fourni et l'ajoute à la collection de cookies de la réponse, à l'aide du chemin d'accès au cookie fourni ou de l'URL si vous utilisez une authentification sans cookies.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> méthode ajoute un ticket d’authentification par formulaire à la collection de cookies ou l’URL si <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> est `false`. Le ticket d’authentification par formulaire fournit des informations d’authentification par formulaire à la demande suivante faite par le navigateur. Avec l’authentification par formulaire, vous pouvez utiliser la <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> méthode lorsque vous souhaitez authentifier un utilisateur tout en conservant le contrôle de la navigation avec redirection.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="P:System.Web.Security.FormsAuthentication.RequireSSL" /> a la valeur <see langword="true" /> et <see cref="P:System.Web.HttpRequest.IsSecureConnection" /> a la valeur <see langword="false" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197376">Explication : L’authentification par formulaire dans ASP.NET 2.0</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197377">Comment : Utiliser l’appartenance dans ASP.NET 2.0</related>
      </Docs>
    </Member>
    <Member MemberName="SignOut">
      <MemberSignature Language="C#" Value="public static void SignOut ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SignOut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.FormsAuthentication.SignOut" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SignOut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SignOut();" />
      <MemberSignature Language="F#" Value="static member SignOut : unit -&gt; unit" Usage="System.Web.Security.FormsAuthentication.SignOut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Supprime du navigateur le ticket d'authentification par formulaire.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.FormsAuthentication.SignOut%2A> méthode supprime les informations de ticket d’authentification par formulaire du cookie ou de l’URL si <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> est `false`. Vous pouvez utiliser la <xref:System.Web.Security.FormsAuthentication.SignOut%2A> méthode conjointement avec la <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> méthode pour déconnecter un utilisateur et permettre à un autre utilisateur pour vous connecter.  
  
 Si vous exécutez exclusivement en mode sans cookie, ou si vous prenez en charge les utilisateurs authentifiés et anonymes, vous devez explicitement contrôler la redirection vers la page de connexion si vous avez besoin d’une logique métier spéciale à exécuter suite à la suppression de l’identificateur anonyme.  
  
 Lorsque le <xref:System.Web.Security.FormsAuthentication.SignOut%2A> est appelée, une redirection vers la page de connexion de l’application est effectuée en appelant le <xref:System.Web.HttpResponse.Redirect%2A> méthode avec le `endResponse` paramètre défini sur `false`. La redirection n'a pas lieu tant que la page actuelle est terminée, afin d’exécuter du code supplémentaire. Si le code ne contient pas de redirection explicite vers une autre page, l’utilisateur est redirigé vers la page de connexion configurée dans le fichier de configuration de l’application.  
  
 Appel de la <xref:System.Web.Security.FormsAuthentication.SignOut%2A> méthode supprime uniquement le cookie d’authentification de formulaires. Le serveur Web ne stocke pas de tickets d’authentification valide et a expiré pour les comparer ultérieurement. Cela rend votre site vulnérable à une attaque par relecture si un utilisateur malveillant obtient un cookie d’authentification par formulaires valide. Pour améliorer la sécurité lors de l’utilisation d’un cookie d’authentification par formulaires, vous devez procédez comme suit :  
  
-   Utilisez l’expiration absolue pour les cookies d’authentification en définissant le <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> propriété `false`. Cela limite la fenêtre dans laquelle un cookie détourné peut être relu.  
  
-   Émettre uniquement et accepter des cookies d’authentification sur couche SSL (Secure Sockets), en définissant le <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> propriété `true` et en exécutant l’ensemble du site Web sous SSL. Définition de la <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> propriété `true` garantit que ASP.NET n’enverra jamais un cookie d’authentification au navigateur via une connexion non-SSL ; Toutefois, le client ne peut pas respecter le paramètre sécurisé sur le cookie. Cela signifie que le client peut envoyer le cookie d’authentification forms via une connexion non-SSL, par conséquent, en le laissant vulnérable pour détourner. Vous pouvez empêcher un client d’envoyer le cookie d’authentification de formulaires en clair en exécutant l’ensemble du site Web sous SSL.  
  
-   Utilisez le stockage persistant sur le serveur pour enregistrer quand un utilisateur se déconnecte du site Web et ensuite utiliser un événement d’application telles que <xref:System.Web.HttpApplication.PostAuthenticateRequest> événement pour déterminer si l’utilisateur actuel a été authentifié avec l’authentification par formulaire. Si l’utilisateur a été authentifié avec l’authentification par formulaire, et si les informations contenues dans un stockage persistant indiquent l’utilisateur est déconnecté, immédiatement effacer le cookie d’authentification et redirige le navigateur vers la page de connexion. Après une connexion réussie, mettez à jour de stockage pour indiquer que l’utilisateur est connecté. Lorsque vous utilisez cette méthode, votre application doit suivre l’état enregistré de l’utilisateur et doit forcer les utilisateurs inactifs à déconnecter.  
  
   
  
## Examples  
 L’exemple de code suivant efface le cookie d’authentification par formulaire à l’aide du <xref:System.Web.Security.FormsAuthentication.SignOut%2A> (méthode) et les redirections de page de l’utilisateur à la connexion à l’aide de la <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> (méthode).  
  
 [!code-aspx-csharp[System.Web.Security.FormsAuthentication#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/CS/signoutcs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.FormsAuthentication#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.FormsAuthentication/VB/signoutvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197376">Explication : L’authentification par formulaire dans ASP.NET 2.0</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=197377">Comment : Utiliser l’appartenance dans ASP.NET 2.0</related>
      </Docs>
    </Member>
    <Member MemberName="SlidingExpiration">
      <MemberSignature Language="C#" Value="public static bool SlidingExpiration { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool SlidingExpiration" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.SlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SlidingExpiration As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool SlidingExpiration { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SlidingExpiration : bool" Usage="System.Web.Security.FormsAuthentication.SlidingExpiration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si l'expiration décalée est activée.</summary>
        <value><see langword="true" /> si l'expiration décalée est activée ; sinon, <see langword="false" />. La valeur par défaut est <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> valeur de propriété est définie à l’aide de la `slidingExpiration` attribut de l’élément de configuration.  
  
 L’expiration décalée de réinitialise le délai d’expiration d’un cookie d’authentification valide si une demande est faite et plus de la moitié de l’intervalle de délai d’expiration s’est écoulé. Si le cookie expire, l’utilisateur doit se réauthentifier. Définition de la <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> propriété `false` peut améliorer la sécurité d’une application en limitant la durée pendant laquelle un cookie d’authentification est valide, selon la configuration `timeout` valeur.  
  
 Il est recommandé que si vous configurez `requireSSL` comme `false`, vous configurez également `slidingExpiration` en tant que `false`, afin de réduire la durée pendant laquelle un ticket est valid.  
  
   
  
## Examples  
 Le code suivant exemple définit le `slidingExpiration` attribut `false` dans le fichier Web.config pour une application ASP.NET.  
  
```  
<authentication mode="Forms">  
  <forms loginUrl="member_login.aspx"  
    name=".ASPXFORMSAUTH"  
    cookieless="UseCookies"  
    requireSSL="true"   
    slidingExpiration="false" />  
</authentication>  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/658d0430-1644-4744-b52d-08b0d6fcacb8">Sécurité des applications web ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="TicketCompatibilityMode">
      <MemberSignature Language="C#" Value="public static System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.TicketCompatibilityMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TicketCompatibilityMode As TicketCompatibilityMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Configuration::TicketCompatibilityMode TicketCompatibilityMode { System::Web::Configuration::TicketCompatibilityMode get(); };" />
      <MemberSignature Language="F#" Value="member this.TicketCompatibilityMode : System.Web.Configuration.TicketCompatibilityMode" Usage="System.Web.Security.FormsAuthentication.TicketCompatibilityMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.TicketCompatibilityMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique s'il convient d'utiliser le temps universel coordonné ou l'heure locale pour la date d'expiration du ticket.</summary>
        <value>Valeur qui indique s'il convient d'utiliser le temps universel coordonné ou l'heure locale pour la date d'expiration du ticket.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Timeout">
      <MemberSignature Language="C#" Value="public static TimeSpan Timeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.TimeSpan Timeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.FormsAuthentication.Timeout" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Timeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property TimeSpan Timeout { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.Timeout : TimeSpan" Usage="System.Web.Security.FormsAuthentication.Timeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la durée avant expiration d'un ticket d'authentification.</summary>
        <value>Durée avant expiration d'un ticket d'authentification.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>