<Type Name="RolePrincipal" FullName="System.Web.Security.RolePrincipal">
  <Metadata><Meta Name="ms.openlocfilehash" Value="17aaf2ebe147f2c32fa84ceac97e2dca9979224a" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55342844" /></Metadata><TypeSignature Language="C#" Value="public class RolePrincipal : System.Security.Claims.ClaimsPrincipal, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RolePrincipal extends System.Security.Claims.ClaimsPrincipal implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.RolePrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class RolePrincipal&#xA;Inherits ClaimsPrincipal&#xA;Implements ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class RolePrincipal : System::Security::Claims::ClaimsPrincipal, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type RolePrincipal = class&#xA;    inherit ClaimsPrincipal&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Security.Claims.ClaimsPrincipal</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-2.0">System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Représente des informations sur la sécurité pour la requête HTTP en cours, y compris l'appartenance aux rôles. Cette classe ne peut pas être héritée.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.RolePrincipal> objet implémente le <xref:System.Security.Principal.IPrincipal> interface et représente le contexte de sécurité actuel pour la requête HTTP.  
  
 Lorsque la gestion des rôles est activée (consultez <xref:System.Web.Security.Roles>), la <xref:System.Web.Security.RoleManagerModule> attribue un <xref:System.Web.Security.RolePrincipal> de l’objet à la <xref:System.Web.HttpContext.User%2A> propriété de la <xref:System.Web.HttpContext.Current%2A> <xref:System.Web.HttpContext>.  
  
 Le <xref:System.Web.Security.RolePrincipal> classe expose l’identité de sécurité pour la requête HTTP actuelle et en outre ne vérifie l’appartenance au rôle. Si <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> est `true`, puis le <xref:System.Web.Security.RolePrincipal> objet gère la liste mise en cache des rôles et de recherche de l’appartenance au rôle de l’utilisateur actuel dans la mise en cache répertorie tout d’abord, puis le rôle <xref:System.Web.Security.Roles.Provider%2A>. Si <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> est `false`, le <xref:System.Web.Security.RolePrincipal> objet vérifie toujours l’appartenance aux rôles à l’aide du fournisseur de rôle.  
  
 Le <xref:System.Web.Security.RolePrincipal> objet chiffre et déchiffre les informations de rôle mises en cache dans le cookie identifié par le <xref:System.Web.Security.Roles.CookieName%2A> selon le <xref:System.Web.Security.Roles.CookieProtectionValue%2A>.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Gestion des autorisations à l’aide de rôles ASP.NET</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Crée une instance de la classe <see cref="T:System.Web.Security.RolePrincipal" />.</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Gestion des autorisations à l’aide de rôles ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::Security::Principal::IIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : System.Security.Principal.IIdentity -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal identity" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="identity">Identité de l'utilisateur pour lequel créer <see cref="T:System.Web.Security.RolePrincipal" />.</param>
        <summary>Instancie un objet <see cref="T:System.Web.Security.RolePrincipal" /> pour le paramètre <paramref name="identity" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette surcharge de la <xref:System.Web.Security.RolePrincipal.%23ctor%2A> le constructeur crée un nouveau <xref:System.Web.Security.RolePrincipal> de l’objet et initialise ses valeurs de propriété. Informations de rôle mises en cache ne sont pas en lecture à partir du cookie identifié par le <xref:System.Web.Security.Roles.CookieName%2A> propriété. Le <xref:System.Web.Security.RolePrincipal.ProviderName%2A> propriété est définie sur la <xref:System.Configuration.Provider.ProviderBase.Name%2A> du fournisseur de rôle par défaut.  
  
 Pour plus d’informations sur l’activation de la gestion des rôles, consultez la <xref:System.Web.Security.Roles> classe.  
  
   
  
## Examples  
 L’exemple de code suivant crée un nouveau <xref:System.Web.Security.RolePrincipal> objet. Si <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> est `true`, l’exemple crée le <xref:System.Web.Security.RolePrincipal> avec les informations de cookie à partir du cookie identifié par le <xref:System.Web.Security.Roles.CookieName%2A> propriété.  
  
 [!code-csharp[System.Web.Security.RolePrincipal#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/snippetscs.aspx#2)]
 [!code-vb[System.Web.Security.RolePrincipal#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/snippetsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" /> est <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Gestion des autorisations à l’aide de rôles ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected RolePrincipal (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; RolePrincipal(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir avec des données.</param>
        <param name="context">Destination de cette sérialisation.</param>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Security.RolePrincipal" /> en utilisant les informations contenues dans l'objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> spécifié et le contexte de diffusion en continu indiqué.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (System.Security.Principal.IIdentity identity, string encryptedTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Principal.IIdentity identity, string encryptedTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.Security.Principal.IIdentity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (identity As IIdentity, encryptedTicket As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::Security::Principal::IIdentity ^ identity, System::String ^ encryptedTicket);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : System.Security.Principal.IIdentity * string -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal (identity, encryptedTicket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="encryptedTicket" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="identity">Identité de l'utilisateur pour lequel créer <see cref="T:System.Web.Security.RolePrincipal" />.</param>
        <param name="encryptedTicket">Chaîne contenant des informations de rôle chiffrées.</param>
        <summary>Instancie un objet <see cref="T:System.Web.Security.RolePrincipal" /> pour le paramètre <paramref name="identity" /> spécifié avec les informations de rôle du paramètre <paramref name="encryptedTicket" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)]

 Cette surcharge de la <xref:System.Web.Security.RolePrincipal.%23ctor%2A> le constructeur crée un nouveau <xref:System.Web.Security.RolePrincipal> de l’objet et initialise ses valeurs de propriété. Informations de rôle pour l’utilisateur actuel sont en lecture à partir de le `encryptedTicket` et mis en cache avec le <xref:System.Web.Security.RolePrincipal> objet. Le <xref:System.Web.Security.RolePrincipal.ProviderName%2A> propriété est définie sur la <xref:System.Configuration.Provider.ProviderBase.Name%2A> du fournisseur de rôle par défaut.  
  
 Pour plus d’informations sur l’activation de la gestion des rôles, consultez la <xref:System.Web.Security.Roles> classe.  
  
   
  
## Examples  
 L’exemple de code suivant crée un nouveau <xref:System.Web.Security.RolePrincipal> objet. Si <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> est `true`, l’exemple crée le <xref:System.Web.Security.RolePrincipal> avec les informations de cookie à partir du cookie identifié par le <xref:System.Web.Security.Roles.CookieName%2A> propriété.  
  
 [!code-csharp[System.Web.Security.RolePrincipal#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/snippetscs.aspx#2)]
 [!code-vb[System.Web.Security.RolePrincipal#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/snippetsvb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" /> est <see langword="null" />.  
  
- ou - 
 <paramref name="encryptedTicket" /> est <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Gestion des autorisations à l’aide de rôles ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (string providerName, System.Security.Principal.IIdentity identity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, class System.Security.Principal.IIdentity identity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, identity As IIdentity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::String ^ providerName, System::Security::Principal::IIdentity ^ identity);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : string * System.Security.Principal.IIdentity -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal (providerName, identity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
      </Parameters>
      <Docs>
        <param name="providerName">Nom du fournisseur de rôles de l'utilisateur.</param>
        <param name="identity">Identité de l'utilisateur pour lequel créer <see cref="T:System.Web.Security.RolePrincipal" />.</param>
        <summary>Instancie un objet <see cref="T:System.Web.Security.RolePrincipal" /> pour le paramètre <paramref name="identity" /> spécifié à l'aide du <paramref name="providerName" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette surcharge de la <xref:System.Web.Security.RolePrincipal.%23ctor%2A> le constructeur crée un nouveau <xref:System.Web.Security.RolePrincipal> de l’objet et initialise ses valeurs de propriété. Le <xref:System.Web.Security.RolePrincipal.ProviderName%2A> propriété est définie sur la valeur spécifiée dans le `providerName` paramètre.  
  
 Pour plus d’informations sur l’activation de la gestion des rôles, consultez la <xref:System.Web.Security.Roles> classe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="providerName" /> est <see langword="null" />.  
  
ou 
 <paramref name="providerName" /> fait référence à un fournisseur de rôles qui n'existe pas dans la configuration de l'application.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Gestion des autorisations à l’aide de rôles ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RolePrincipal (string providerName, System.Security.Principal.IIdentity identity, string encryptedTicket);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, class System.Security.Principal.IIdentity identity, string encryptedTicket) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.#ctor(System.String,System.Security.Principal.IIdentity,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, identity As IIdentity, encryptedTicket As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RolePrincipal(System::String ^ providerName, System::Security::Principal::IIdentity ^ identity, System::String ^ encryptedTicket);" />
      <MemberSignature Language="F#" Value="new System.Web.Security.RolePrincipal : string * System.Security.Principal.IIdentity * string -&gt; System.Web.Security.RolePrincipal" Usage="new System.Web.Security.RolePrincipal (providerName, identity, encryptedTicket)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="identity" Type="System.Security.Principal.IIdentity" />
        <Parameter Name="encryptedTicket" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerName">Nom du fournisseur de rôles de l'utilisateur.</param>
        <param name="identity">Identité de l'utilisateur pour lequel créer <see cref="T:System.Web.Security.RolePrincipal" />.</param>
        <param name="encryptedTicket">Chaîne contenant des informations de rôle chiffrées.</param>
        <summary>Instancie un objet <see cref="T:System.Web.Security.RolePrincipal" /> pour le paramètre <paramref name="identity" /> spécifié à l'aide du <paramref name="providerName" /> spécifié et des informations de rôle du <paramref name="encryptedTicket" /> spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE [untrusted-data-instance-note](~/includes/untrusted-data-instance-note.md)]

 Cette surcharge de la <xref:System.Web.Security.RolePrincipal.%23ctor%2A> le constructeur crée un nouveau <xref:System.Web.Security.RolePrincipal> de l’objet et initialise ses valeurs de propriété. Informations de rôle pour l’utilisateur actuel sont en lecture à partir de le `encryptedTicket` et mis en cache avec le <xref:System.Web.Security.RolePrincipal> objet. Le <xref:System.Web.Security.RolePrincipal.ProviderName%2A> propriété est définie sur la valeur spécifiée dans le `providerName` paramètre.  
  
 Pour plus d’informations sur l’activation de la gestion des rôles, consultez la <xref:System.Web.Security.Roles> classe.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="identity" /> est <see langword="null" />.  
  
- ou - 
 <paramref name="encryptedTicket" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="providerName" /> est <see langword="null" />.  
  
ou 
 <paramref name="providerName" /> fait référence à un fournisseur de rôles qui n'existe pas dans la configuration de l'application.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Gestion des autorisations à l’aide de rôles ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CachedListChanged">
      <MemberSignature Language="C#" Value="public bool CachedListChanged { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CachedListChanged" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.CachedListChanged" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CachedListChanged As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CachedListChanged { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CachedListChanged : bool" Usage="System.Web.Security.RolePrincipal.CachedListChanged" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si la liste des noms de rôles mise en cache avec l'objet <see cref="T:System.Web.Security.RolePrincipal" /> a été modifiée.</summary>
        <value><see langword="true" /> si la liste des noms de rôles mise en cache avec l'objet <see cref="T:System.Web.Security.RolePrincipal" /> a été modifiée ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> propriété retournera `true` après extraction des noms de rôle du rôle par défaut <xref:System.Web.Security.Roles.Provider%2A> et ajoutés au cache par le <xref:System.Web.Security.RolePrincipal.GetRoles%2A> (méthode), ou lorsque le <xref:System.Web.Security.RolePrincipal.IsInRole%2A> les appels de méthode le <xref:System.Web.Security.RoleProvider.IsUserInRole%2A> méthode de la par défaut du fournisseur de rôle, puis reçoit une réponse de `true`, se traduisant par le nom du rôle passé à la <xref:System.Web.Security.RolePrincipal.IsInRole%2A> méthode ajouté au cache.  
  
 Le <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> propriété également retourne true si <xref:System.Web.Security.Roles.CookieSlidingExpiration%2A> a la valeur `true` et <xref:System.Web.Security.RolePrincipal.ExpireDate%2A> s’est écoulé, résultant dans un nouveau <xref:System.Web.Security.RolePrincipal.ExpireDate%2A> définie.  
  
   
  
## Examples  
 L’exemple suivant affiche des informations de mise en cache de rôle pour l’utilisateur actuel si la gestion des rôles est activée. Pour plus d’informations sur l’activation de la gestion des rôles, consultez la <xref:System.Web.Security.Roles> classe.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Gestion des autorisations à l’aide de rôles ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CookiePath">
      <MemberSignature Language="C#" Value="public string CookiePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CookiePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.CookiePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CookiePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CookiePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CookiePath : string" Usage="System.Web.Security.RolePrincipal.CookiePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le chemin d’accès pour le cookie contenant les noms de rôles en cache.</summary>
        <value>Chemin d'accès du cookie contenant les noms de rôles en cache. La valeur par défaut est « / ».</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.RolePrincipal.CookiePath%2A> propriété retourne la valeur de la `cookiePath` attribut à partir du fichier Web.config de votre application ASP.NET. Pour plus d’informations sur les chemins d’accès du cookie, consultez <xref:System.Web.HttpCookie.Path%2A>.  
  
   
  
## Examples  
 L’exemple suivant affiche des informations de mise en cache de rôle pour l’utilisateur actuel si la gestion des rôles est activée. Pour plus d’informations sur l’activation de la gestion des rôles, consultez la <xref:System.Web.Security.Roles> classe.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Gestion des autorisations à l’aide de rôles ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Expired">
      <MemberSignature Language="C#" Value="public bool Expired { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Expired" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.Expired" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expired As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Expired { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Expired : bool" Usage="System.Web.Security.RolePrincipal.Expired" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur indiquant si le cookie de rôles a expiré.</summary>
        <value><see langword="true" /> si le cookie de rôles a expiré ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.RolePrincipal.Expired%2A> propriété retourne un `Boolean` valeur indiquant si le cookie de rôles a expiré basée sur le <xref:System.Web.Security.RolePrincipal.ExpireDate%2A> et la date et heure actuelles.  
  
   
  
## Examples  
 L’exemple suivant affiche des informations de mise en cache de rôle pour l’utilisateur actuel si la gestion des rôles est activée. Pour plus d’informations sur l’activation de la gestion des rôles, consultez la <xref:System.Web.Security.Roles> classe.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Gestion des autorisations à l’aide de rôles ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ExpireDate">
      <MemberSignature Language="C#" Value="public DateTime ExpireDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime ExpireDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.ExpireDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpireDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime ExpireDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpireDate : DateTime" Usage="System.Web.Security.RolePrincipal.ExpireDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la date et l'heure auxquelles le cookie de rôles doit expirer.</summary>
        <value>Valeur <see cref="T:System.DateTime" /> à laquelle le cookie de rôles doit expirer.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant affiche des informations de mise en cache de rôle pour l’utilisateur actuel si la gestion des rôles est activée. Pour plus d’informations sur l’activation de la gestion des rôles, consultez la <xref:System.Web.Security.Roles> classe.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Gestion des autorisations à l’aide de rôles ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="protected override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="rolePrincipal.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir avec des données.</param>
        <param name="context">Destination de cette sérialisation.</param>
        <summary>Remplit un objet <see cref="T:System.Runtime.Serialization.SerializationInfo" /> avec les données requises pour la sérialisation de l'objet cible à l'aide du contexte de diffusion en continu spécifié.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Pour plus d'informations, voir la méthode <xref:System.Runtime.Serialization.ISerializable.GetObjectData%28System.Runtime.Serialization.SerializationInfo%2CSystem.Runtime.Serialization.StreamingContext%29>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRoles">
      <MemberSignature Language="C#" Value="public string[] GetRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.GetRoles" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetRoles();" />
      <MemberSignature Language="F#" Value="member this.GetRoles : unit -&gt; string[]" Usage="rolePrincipal.GetRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient une liste de rôles dont le <see cref="T:System.Web.Security.RolePrincipal" /> est membre.</summary>
        <returns>Liste des rôles dont le <see cref="T:System.Web.Security.RolePrincipal" /> est membre.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> est `true` et noms de rôles ont été mis en cache pour l’utilisateur représenté par le <xref:System.Web.Security.RolePrincipal>, le <xref:System.Web.Security.RolePrincipal.GetRoles%2A> méthode retourne la liste des noms de rôles dans le cache de l’utilisateur est membre. Si les noms de rôles n’ont pas été mis en cache, puis le <xref:System.Web.Security.RolePrincipal.GetRoles%2A> méthode retourne la liste des noms de rôles que l’utilisateur est membre du rôle par défaut <xref:System.Web.Security.Roles.Provider%2A>. Uniquement les noms de rôles pour actuel <xref:System.Web.Security.Roles.ApplicationName%2A> sont retournés. Pour déterminer si les noms de rôles ont été mis en cache dans le <xref:System.Web.Security.RolePrincipal> objet, vérifiez le <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> propriété.  
  
   
  
## Examples  
 L’exemple de code suivant affiche les rôles de l’utilisateur connecté est membre.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/GetRolescs.aspx#7)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/GetRolesvb.aspx#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">La propriété <see cref="P:System.Web.Security.RolePrincipal.Identity" /> a la valeur <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Gestion des autorisations à l’aide de rôles ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Identity">
      <MemberSignature Language="C#" Value="public override System.Security.Principal.IIdentity Identity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IIdentity Identity" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.Identity" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Identity As IIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IIdentity ^ Identity { System::Security::Principal::IIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Identity : System.Security.Principal.IIdentity" Usage="System.Web.Security.RolePrincipal.Identity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient l'identité de sécurité de la requête HTTP en cours.</summary>
        <value>Identité de sécurité de la requête HTTP en cours.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.RolePrincipal.Identity%2A> d’un <xref:System.Web.Security.RolePrincipal> objet est défini lorsque le <xref:System.Web.Security.RolePrincipal> constructeur est appelé.  
  
   
  
## Examples  
 L’exemple suivant affiche des informations de mise en cache de rôle pour l’utilisateur actuel si la gestion des rôles est activée. Pour plus d’informations sur l’activation de la gestion des rôles, consultez la <xref:System.Web.Security.Roles> classe.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Gestion des autorisations à l’aide de rôles ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsInRole">
      <MemberSignature Language="C#" Value="public override bool IsInRole (string role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsInRole(string role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.IsInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsInRole (role As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsInRole(System::String ^ role);" />
      <MemberSignature Language="F#" Value="override this.IsInRole : string -&gt; bool" Usage="rolePrincipal.IsInRole role" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="role" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="role">Rôle à rechercher.</param>
        <summary>Obtient une valeur indiquant si l'utilisateur représenté par le <see cref="T:System.Web.Security.RolePrincipal" /> figure dans le rôle spécifié.</summary>
        <returns><see langword="true" /> si l'utilisateur représenté par le <see cref="T:System.Web.Security.RolePrincipal" /> figure dans le rôle spécifié ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Security.RolePrincipal.IsInRole%2A> vérifie d’abord le <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> propriété afin de déterminer si une liste mise en cache des noms de rôles pour l’utilisateur actuel est disponible. Si le <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> propriété est `true`, la liste mise en cache est activée pour le rôle spécifié. Si le <xref:System.Web.Security.RolePrincipal.IsInRole%2A> méthode recherche le rôle spécifié dans la liste mise en cache, elle retourne `true`.  
  
 Si <xref:System.Web.Security.RolePrincipal.IsInRole%2A> ne trouve pas le rôle spécifié, il appelle le <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> méthode de la valeur par défaut <xref:System.Web.Security.Roles.Provider%2A> instance pour déterminer si le nom d’utilisateur est associé à un rôle à partir de la source de données pour le <xref:System.Web.Security.Roles.ApplicationName%2A> valeur.  
  
   
  
## Examples  
 L’exemple de code suivant vérifie si l’utilisateur connecté est dans le rôle Administrateurs avant d’autoriser l’utilisateur d’afficher les rôles d’utilisateur.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/ViewRolescs.aspx#8)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/ViewRolesvb.aspx#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">La propriété <see cref="P:System.Web.Security.RolePrincipal.Identity" /> a la valeur <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Gestion des autorisations à l’aide de rôles ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsRoleListCached">
      <MemberSignature Language="C#" Value="public bool IsRoleListCached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRoleListCached" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.IsRoleListCached" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRoleListCached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRoleListCached { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRoleListCached : bool" Usage="System.Web.Security.RolePrincipal.IsRoleListCached" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient une valeur qui indique si la liste des rôles de l'utilisateur a été mise en cache dans un cookie.</summary>
        <value><see langword="true" /> si les noms de rôles sont mis en cache dans un cookie ; sinon, <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Si le `cacheRolesInCookie` d’attribut dans le fichier Web.config de l’application a la valeur `true`, une liste de noms de rôles pour l’utilisateur actuel est écrit dans un cookie lorsque l’appartenance de l’utilisateur dans un rôle particulier est vérifiée. Le <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> propriété indique si les noms de rôles ont été écrits au cookie. Notez que, même si le `cacheRolesInCookie` attribut de configuration peut être `true`, le <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> propriété ne retourne pas `true` jusqu'à ce qu’après l’écriture d’informations sur les rôles au cookie. Si aucun rôle les vérifications sont effectuées pour un utilisateur, <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> retournera `false`.  
  
   
  
## Examples  
 L’exemple suivant affiche des informations de mise en cache de rôle pour l’utilisateur actuel si la gestion des rôles est activée. Pour plus d’informations sur l’activation de la gestion des rôles, consultez la <xref:System.Web.Security.Roles> classe.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Gestion des autorisations à l’aide de rôles ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IssueDate">
      <MemberSignature Language="C#" Value="public DateTime IssueDate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime IssueDate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.IssueDate" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IssueDate As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime IssueDate { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.IssueDate : DateTime" Usage="System.Web.Security.RolePrincipal.IssueDate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient la date et l'heure auxquelles le cookie de rôles a été créé.</summary>
        <value><see cref="T:System.DateTime" /> à laquelle le cookie de rôles a été créé.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 L’exemple suivant affiche des informations de mise en cache de rôle pour l’utilisateur actuel si la gestion des rôles est activée. Pour plus d’informations sur l’activation de la gestion des rôles, consultez la <xref:System.Web.Security.Roles> classe.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Gestion des autorisations à l’aide de rôles ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public string ProviderName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ProviderName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProviderName : string" Usage="System.Web.Security.RolePrincipal.ProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nom du fournisseur de rôles qui stocke et récupère les informations de rôle de l'utilisateur.</summary>
        <value>Nom du fournisseur de rôles qui stocke et récupère les informations de rôle de l'utilisateur.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.RolePrincipal.ProviderName%2A> propriété expose le nom du fournisseur de rôles qui gère les informations de rôle pour l’utilisateur représenté par le <xref:System.Web.Security.RolePrincipal> objet. Vous pouvez ainsi accéder à l’instance de fournisseur de rôle spécifique pour un utilisateur à l’aide de la <xref:System.Web.Security.Roles.Providers%2A> propriété de la <xref:System.Web.Security.Roles> classe que le fournisseur soit le fournisseur par défaut pour l’application. Par exemple, vous pouvez créer une méthode qui prend un <xref:System.Web.Security.RolePrincipal> comme entrée et retourne la liste des rôles de l’utilisateur représenté. Vous pouvez vous assurer que le fournisseur de rôle approprié est utilisé pour retourner la liste des rôles pour le <xref:System.Web.Security.RolePrincipal> en appelant le <xref:System.Web.Security.RoleProvider.GetRolesForUser%2A> méthode du fournisseur de rôle à partir de la <xref:System.Web.Security.Roles.Providers%2A> collection indexée par le <xref:System.Web.Security.RolePrincipal.ProviderName%2A> valeur de propriété.  
  
 Pour remplir le <xref:System.Web.Security.RolePrincipal> objet pour chaque demande, vous devez utiliser un <xref:System.Web.Security.RoleManagerModule.GetRoles> Gestionnaire d’événements défini dans le fichier Global.asax de l’application.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Gestion des autorisations à l’aide de rôles ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="SetDirty">
      <MemberSignature Language="C#" Value="public void SetDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.SetDirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDirty();" />
      <MemberSignature Language="F#" Value="member this.SetDirty : unit -&gt; unit" Usage="rolePrincipal.SetDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Marque la liste des rôles mise en cache comme étant modifiée.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.RolePrincipal.SetDirty%2A> méthode marque la liste des rôles mise en cache comme étant modifiée en définissant <xref:System.Web.Security.RolePrincipal.CachedListChanged%2A> à `true` et <xref:System.Web.Security.RolePrincipal.IsRoleListCached%2A> à `false`.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Gestion des autorisations à l’aide de rôles ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><see cref="T:System.Runtime.Serialization.SerializationInfo" /> à remplir de données.</param>
        <param name="context">Destination de cette sérialisation.</param>
        <summary>Pour obtenir une description de ce membre, consultez <see cref="M:System.Runtime.Serialization.ISerializationSurrogate.GetObjectData(System.Object,System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ce membre est une implémentation de membre d’interface explicite. Il peut uniquement être utilisé lorsque l'instance de <xref:System.Web.Security.RolePrincipal> est castée en interface <xref:System.Runtime.Serialization.ISerializable>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToEncryptedTicket">
      <MemberSignature Language="C#" Value="public string ToEncryptedTicket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToEncryptedTicket() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.RolePrincipal.ToEncryptedTicket" />
      <MemberSignature Language="VB.NET" Value="Public Function ToEncryptedTicket () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToEncryptedTicket();" />
      <MemberSignature Language="F#" Value="member this.ToEncryptedTicket : unit -&gt; string" Usage="rolePrincipal.ToEncryptedTicket " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Retourne les informations de rôle mises en cache avec l'objet <see cref="T:System.Web.Security.RolePrincipal" /> chiffré en fonction de la <see cref="P:System.Web.Security.Roles.CookieProtectionValue" />.</summary>
        <returns>Informations de rôle mises en cache avec l'objet <see cref="T:System.Web.Security.RolePrincipal" /> chiffré en fonction de la <see cref="P:System.Web.Security.Roles.CookieProtectionValue" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 La valeur retournée par la <xref:System.Web.Security.RolePrincipal.ToEncryptedTicket%2A> méthode est stockée dans le cookie de rôles lorsque <xref:System.Web.Security.Roles.CacheRolesInCookie%2A> est `true`.  
  
   
  
## Examples  
 L’exemple de code suivant écrit les résultats de la <xref:System.Web.Security.RolePrincipal.ToEncryptedTicket%2A> méthode pour le cookie de rôles.  
  
 [!code-csharp[System.Web.Security.RolePrincipal#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/snippetscs.aspx#6)]
 [!code-vb[System.Web.Security.RolePrincipal#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/snippetsvb.aspx#6)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Gestion des autorisations à l’aide de rôles ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Version">
      <MemberSignature Language="C#" Value="public int Version { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Version" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.RolePrincipal.Version" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Version As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Version { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Version : int" Usage="System.Web.Security.RolePrincipal.Version" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le numéro de version du cookie de rôles.</summary>
        <value>Numéro de version du cookie de rôles.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 En incluant un numéro de version dans le cookie de rôles, les futures versions d’ASP.NET peuvent modifier le format du cookie de rôles et utiliser le <xref:System.Web.Security.RolePrincipal.Version%2A> propriété faire la distinction entre différents formats.  
  
   
  
## Examples  
 L’exemple suivant affiche des informations de mise en cache de rôle pour l’utilisateur actuel si la gestion des rôles est activée. Pour plus d’informations sur l’activation de la gestion des rôles, consultez la <xref:System.Web.Security.Roles> classe.  
  
 [!code-aspx-csharp[System.Web.Security.RolePrincipal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/CS/getroleinfocs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.RolePrincipal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.RolePrincipal/VB/getroleinfovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195">Gestion des autorisations à l’aide de rôles ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>