<Type Name="WindowsTokenRoleProvider" FullName="System.Web.Security.WindowsTokenRoleProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="949f845453ff9a9f5df7f7514d8414e429cda711" />
    <Meta Name="ms.sourcegitcommit" Value="9dda17222b9f7d3edf130133bfb1370d5b410a4b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="09/22/2018" />
    <Meta Name="ms.locfileid" Value="46611702" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class WindowsTokenRoleProvider : System.Web.Security.RoleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WindowsTokenRoleProvider extends System.Web.Security.RoleProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.WindowsTokenRoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class WindowsTokenRoleProvider&#xA;Inherits RoleProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class WindowsTokenRoleProvider : System::Web::Security::RoleProvider" />
  <TypeSignature Language="F#" Value="type WindowsTokenRoleProvider = class&#xA;    inherit RoleProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.RoleProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Reçoit les informations de rôle d'une application ASP.NET à partir de l'appartenance à des groupes Windows.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.WindowsTokenRoleProvider> classe est un fournisseur d’appartenance au rôle en lecture seule qui Récupère les informations de rôle pour un utilisateur de Windows basé sur les groupes de sécurité Windows. Il est particulièrement utile avec les applications ASP.NET qui utilisent le mode de l’authentification Windows où les paramètres d’authentification IIS désactivent l’authentification anonyme. Vous pouvez configurer les applications ASP.NET pour autoriser ou refuser l’accès basé sur l’appartenance d’un utilisateur dans un groupe Windows particulier.  
  
 Vous ne pouvez pas utiliser le <xref:System.Web.Security.WindowsTokenRoleProvider> classe pour créer ou supprimer des rôles ou modifier l’appartenance à un rôle qui repose sur l’appartenance au groupe de Windows. Cette fonctionnalité est gérée par le système d’exploitation Windows. Le <xref:System.Web.Security.WindowsTokenRoleProvider> classe prend en charge uniquement le <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A> et <xref:System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser%2A> méthodes de la <xref:System.Web.Security.RoleProvider> classe abstraite.  
  
   
  
## Examples  
 L’exemple suivant montre le fichier Web.config pour une application ASP.NET. Il spécifie que l’application utilise à la fois l’authentification Windows et le <xref:System.Web.Security.WindowsTokenRoleProvider> classe à récupérer les informations de rôle pour les utilisateurs de Windows. L’élément spécifie que seuls les utilisateurs dans le groupe BUILTIN\Administrators ont accès à l’application.  
  
```  
<configuration>  
  <system.web>  
    <authentication mode="Windows" />  
  
    <authorization>  
      <allow roles="BUILTIN\Administrators" />  
        <deny users="*" />  
      </authorization>  
  
    <roleManager defaultProvider="WindowsProvider"   
      enabled="true"  
      cacheRolesInCookie="false">  
      <providers>  
        <add  
          name="WindowsProvider"  
          type="System.Web.Security.WindowsTokenRoleProvider" />  
      </providers>  
    </roleManager>  
  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WindowsTokenRoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WindowsTokenRoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Crée une instance de la classe <see cref="T:System.Web.Security.WindowsTokenRoleProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.WindowsTokenRoleProvider.%23ctor%2A> constructeur est appelé par ASP.NET pour créer une instance de la <xref:System.Web.Security.WindowsTokenRoleProvider> classe tel que spécifié dans la configuration de l’application. Ce constructeur n’est pas destiné à être utilisée à partir de votre code.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public override void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.AddUsersToRoles : string[] * string[] -&gt; unit" Usage="windowsTokenRoleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Tableau de chaînes contenant les noms d’utilisateurs à ajouter aux rôles spécifiés.</param>
        <param name="roleNames">Tableau de chaînes contenant le nom des rôles auxquels les noms d’utilisateurs spécifiés doivent être ajoutés.</param>
        <summary>Cette méthode n’est pas prise en charge par le fournisseur de rôles de jeton Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode n’est pas pris en charge par le <xref:System.Web.Security.WindowsTokenRoleProvider> classe et lève toujours une <xref:System.Configuration.Provider.ProviderException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Une méthode non prise en charge a été appelée.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.WindowsTokenRoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.WindowsTokenRoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de l'application.</summary>
        <value>Nom de l'application.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Contrairement à d’autres fournisseurs de rôles tels que le <xref:System.Web.Security.SqlRoleProvider>, la <xref:System.Web.Security.WindowsTokenRoleProvider> classe n’associe pas les informations de rôle à une application. Au lieu de cela, les informations de rôle sont effectuées dans les groupes Windows sur l’ordinateur local. Plusieurs applications sur le même serveur qui utilisent la <xref:System.Web.Security.WindowsTokenRoleProvider> classe partagent toujours les mêmes informations de rôle. Bien que le `applicationName` peuvent être configurés dans le fichier Web.config pour l’application, le <xref:System.Web.Security.WindowsTokenRoleProvider.ApplicationName%2A> propriété n’est pas utilisée pour récupérer des informations de rôle.  
  
   
  
## Examples  
 L’exemple suivant montre l’élément dans la `system.web` section du fichier Web.config pour une application ASP.NET. Elle spécifie l’application <xref:System.Web.Security.WindowsTokenRoleProvider> instance et définit les <xref:System.Web.Security.WindowsTokenRoleProvider.ApplicationName%2A> propriété `MyApplication`.  
  
```  
<roleManager defaultProvider="WindowsProvider"   
  enabled="true"  
  cacheRolesInCookie="false">  
  <providers>  
    <add  
      name="WindowsProvider"  
      type="System.Web.Security.WindowsTokenRoleProvider"   
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Une tentative a été faite pour définir la propriété <see cref="P:System.Web.Security.WindowsTokenRoleProvider.ApplicationName" /> par un appelant qui n'a pas autorisation d'hébergement ASP.NET <see cref="F:System.Web.AspNetHostingPermissionLevel.High" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Une tentative a été faite pour affecter à <see cref="P:System.Web.Security.WindowsTokenRoleProvider.ApplicationName" /> une chaîne dépassant 256 caractères.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public override void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.CreateRole : string -&gt; unit" Usage="windowsTokenRoleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nom du rôle à créer.</param>
        <summary>Cette méthode n’est pas prise en charge par le fournisseur de rôles de jeton Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode n’est pas pris en charge par le <xref:System.Web.Security.WindowsTokenRoleProvider> classe et lève toujours une <xref:System.Configuration.Provider.ProviderException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Une méthode non prise en charge a été appelée.</exception>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="override this.DeleteRole : string * bool -&gt; bool" Usage="windowsTokenRoleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">Nom du rôle à supprimer.</param>
        <param name="throwOnPopulatedRole">Si <see langword="true" />, une exception sera levée lors d'une tentative pour supprimer un rôle contenant un ou plusieurs membres.</param>
        <summary>Cette méthode n’est pas prise en charge par le fournisseur de rôles de jeton Windows.</summary>
        <returns>Aucun. La méthode n'est pas prise en charge par la classe <see cref="T:System.Web.Security.WindowsTokenRoleProvider" /> et lève toujours une exception <see cref="T:System.Configuration.Provider.ProviderException" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Une méthode non prise en charge a été appelée.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="override this.FindUsersInRole : string * string -&gt; string[]" Usage="windowsTokenRoleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Rôle dans lequel effectuer la recherche.</param>
        <param name="usernameToMatch">Nom de l'utilisateur à rechercher dans le rôle.</param>
        <summary>Cette méthode n’est pas prise en charge par le fournisseur de rôles de jeton Windows.</summary>
        <returns>Aucun. La méthode n'est pas prise en charge par la classe <see cref="T:System.Web.Security.WindowsTokenRoleProvider" /> et lève toujours une exception <see cref="T:System.Configuration.Provider.ProviderException" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Une méthode non prise en charge a été appelée.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public override string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="override this.GetAllRoles : unit -&gt; string[]" Usage="windowsTokenRoleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Cette méthode n’est pas prise en charge par le fournisseur de rôles de jeton Windows.</summary>
        <returns>Aucun. La méthode n'est pas prise en charge par la classe <see cref="T:System.Web.Security.WindowsTokenRoleProvider" /> et lève toujours une exception <see cref="T:System.Configuration.Provider.ProviderException" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Une méthode non prise en charge a été appelée.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public override string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.GetRolesForUser : string -&gt; string[]" Usage="windowsTokenRoleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Utilisateur pour lequel retourner la liste des groupes Windows sous la forme DOMAINE\nomutilisateur.</param>
        <summary>Obtient la liste des groupes Windows dans lesquels figure l'utilisateur.</summary>
        <returns>Tableau de chaînes contenant le nom de tous les groupes Windows dans lesquels figure l'utilisateur spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode est appelée par la <xref:System.Web.Security.Roles> classe pour récupérer la liste des groupes Windows auxquels l’utilisateur spécifié figure dans le système d’exploitation Windows. Le <xref:System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser%2A> méthode peut être appelée uniquement pour l’utilisateur actuellement connecté, tel qu’identifié par la variable serveur LOGON_USER. Si la valeur fournie dans le `username` paramètre n’est pas le nom de l’utilisateur actuellement connecté, un <xref:System.Configuration.Provider.ProviderException?displayProperty=nameWithType> est levée.  
  
 Pour plus d’informations sur ASP.NET et l’authentification Windows, consultez [l’authentification ASP.NET](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100)).  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Web.Security.WindowsTokenRoleProvider.GetRolesForUser%2A> méthode pour récupérer une liste des rôles pour un utilisateur spécifié et lie la liste des rôles à un <xref:System.Web.UI.WebControls.GridView> contrôle. Pour obtenir un exemple d’un fichier Web.config qui permet la gestion des rôles, consultez <xref:System.Web.Security.WindowsTokenRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.WindowsTokenRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.WindowsTokenRoleProvider/CS/viewrolescs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.WindowsTokenRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.WindowsTokenRoleProvider/VB/viewrolesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">L'utilisateur en cours d'exécution n'a pas d'identité <see cref="T:System.Security.Principal.WindowsIdentity" /> authentifiée associée à <see cref="P:System.Web.UI.Page.User" />. Pour les scénarios autres que HTTP, l'utilisateur en cours d'exécution n'a pas d'identité <see cref="T:System.Security.Principal.WindowsIdentity" /> authentifiée associée à <see cref="P:System.Threading.Thread.CurrentPrincipal" />.  
  
- ou - 
 <paramref name="username" /> ne correspond pas à <see cref="P:System.Security.Principal.WindowsIdentity.Name" /> de l'identité <see cref="T:System.Security.Principal.WindowsIdentity" /> en cours.  
  
- ou - 
Une défaillance s'est produite en récupérant les informations de groupes Windows de l'utilisateur.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> est <see langword="null" />.</exception>
        <exception cref="T:System.Web.HttpException">Le niveau de confiance est inférieur à <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" />.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.GetUsersInRole : string -&gt; string[]" Usage="windowsTokenRoleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nom du rôle pour lequel obtenir la liste des utilisateurs.</param>
        <summary>Cette méthode n’est pas prise en charge par le fournisseur de rôles de jeton Windows.</summary>
        <returns>Aucun. La méthode n'est pas prise en charge par la classe <see cref="T:System.Web.Security.WindowsTokenRoleProvider" /> et lève toujours une exception <see cref="T:System.Configuration.Provider.ProviderException" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Une méthode non prise en charge a été appelée.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="windowsTokenRoleProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Nom de l'instance de <see cref="T:System.Web.Security.WindowsTokenRoleProvider" /> à initialiser.</param>
        <param name="config">Constructeur <see cref="T:System.Collections.Specialized.NameValueCollection" /> contenant le nom et la valeur des options de configuration de la classe <see cref="T:System.Web.Security.WindowsTokenRoleProvider" />.</param>
        <summary>Initialise le fournisseur de rôles de jeton Windows à l'aide des valeurs de propriété spécifiées dans le fichier de configuration de l'application ASP.NET. Cette méthode n'est pas destinée à être utilisée directement depuis votre code.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.WindowsTokenRoleProvider.Initialize%2A> méthode initialise la <xref:System.Web.Security.WindowsTokenRoleProvider> classe avec les valeurs de propriété spécifiées dans le fichier de configuration de l’application ASP.NET (Web.config) et n’est pas destinée à être utilisée directement depuis votre code.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="config" /> est <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">L'attribut <see langword="applicationName" /> de la configuration dépasse 256 caractères.  
  
- ou - 
Le fichier de configuration de l'application de cette instance de <see cref="T:System.Web.Security.WindowsTokenRoleProvider" /> contient un attribut non reconnu.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <MemberGroup MemberName="IsUserInRole">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Obtient une valeur indiquant si l'utilisateur spécifié se trouve dans le rôle Windows intégré spécifié.</summary>
        <related type="Article" href="http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public bool IsUserInRole (string username, System.Security.Principal.WindowsBuiltInRole role);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsUserInRole(string username, valuetype System.Security.Principal.WindowsBuiltInRole role) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.Security.Principal.WindowsBuiltInRole)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUserInRole (username As String, role As WindowsBuiltInRole) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsUserInRole(System::String ^ username, System::Security::Principal::WindowsBuiltInRole role);" />
      <MemberSignature Language="F#" Value="override this.IsUserInRole : string * System.Security.Principal.WindowsBuiltInRole -&gt; bool" Usage="windowsTokenRoleProvider.IsUserInRole (username, role)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="role" Type="System.Security.Principal.WindowsBuiltInRole" />
      </Parameters>
      <Docs>
        <param name="username">Nom d'utilisateur à rechercher sous la forme DOMAINE\nomutilisateur.</param>
        <param name="role">Rôle Windows dans lequel effectuer la recherche.</param>
        <summary>Obtient une valeur indiquant si l'utilisateur spécifié se trouve dans le rôle Windows intégré spécifié.</summary>
        <returns>
          <see langword="true" /> si l'utilisateur spécifié figure dans le rôle Windows spécifié ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A> méthode vous permet de vérifier si un utilisateur est dans un des rôles Windows décrits par le <xref:System.Security.Principal.WindowsBuiltInRole> énumération. Cette méthode est utile pour les applications qui sont traduites dans plusieurs langues. Cette surcharge de la <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A> méthode n’est pas dans le cadre de la <xref:System.Web.Security.RoleProvider> classe de base et sont accessibles en effectuant un cast le <xref:System.Web.Security.Roles.Provider%2A> propriété de la <xref:System.Web.Security.Roles> classe en tant que le <xref:System.Web.Security.WindowsTokenRoleProvider> type.  
  
 Vous pouvez appeler la <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A> méthode uniquement pour l’utilisateur actuellement connecté, comme identifié par la variable serveur LOGON_USER. Si la valeur fournie dans le `username` paramètre n’est pas le nom de l’utilisateur actuellement connecté, un <xref:System.Web.HttpException> est levée.  
  
 <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A> méthode peut uniquement être appelée pour l’utilisateur actuellement connecté, identifié par la variable serveur LOGON_USER. L’utilisateur actuellement connecté doit être un utilisateur authentifié Windows. Pour plus d’informations sur l’authentification ASP.NET et Windows, consultez [l’authentification ASP.NET](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100)).  
  
   
  
## Examples  
 L’exemple de code suivant vérifie par programme si l’utilisateur actuellement connecté est dans le rôle Administrateurs avant d’autoriser l’utilisateur d’afficher des informations sur les rôles pour l’application. Pour obtenir un exemple d’un fichier Web.config qui permet la gestion des rôles, consultez <xref:System.Web.Security.WindowsTokenRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.WindowsTokenRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.WindowsTokenRoleProvider/CS/ViewRoles2cs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.WindowsTokenRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.WindowsTokenRoleProvider/VB/ViewRoles2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> est <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">L'utilisateur en cours d'exécution n'a pas d'identité <see cref="T:System.Security.Principal.WindowsIdentity" /> authentifiée associée à <see cref="P:System.Web.UI.Page.User" />. Pour les scénarios autres que HTTP, l'utilisateur en cours d'exécution n'a pas d'identité <see cref="T:System.Security.Principal.WindowsIdentity" /> authentifiée associée à <see cref="P:System.Threading.Thread.CurrentPrincipal" />.  
  
- ou - 
 <paramref name="username" /> ne correspond pas à <see cref="P:System.Security.Principal.WindowsIdentity.Name" /> de l'identité <see cref="T:System.Security.Principal.WindowsIdentity" /> en cours.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public override bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.IsUserInRole : string * string -&gt; bool" Usage="windowsTokenRoleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nom d'utilisateur à rechercher sous la forme DOMAINE\nomutilisateur.</param>
        <param name="roleName">Groupe Windows à rechercher sous la forme DOMAINE\nomderôle.</param>
        <summary>Obtient une valeur indiquant si l'utilisateur spécifié figure dans le groupe Windows spécifié.</summary>
        <returns>
          <see langword="true" /> si le nom de l'utilisateur spécifié figure dans le groupe Windows spécifié ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A> méthode est appelée par le <xref:System.Web.Security.Roles> classe et le <xref:System.Security.Principal.IPrincipal.IsInRole%2A> méthode de la <xref:System.Web.UI.Page.User%2A> propriété afin de déterminer si un utilisateur est dans un groupe Windows. Vous pouvez appeler la <xref:System.Web.Security.WindowsTokenRoleProvider.IsUserInRole%2A> méthode uniquement pour l’utilisateur actuellement connecté, comme identifié par la variable serveur LOGON_USER. L’utilisateur connecté doit être un utilisateur authentifié Windows. Pour plus d’informations sur l’authentification ASP.NET et Windows, consultez [l’authentification ASP.NET](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100)).  
  
   
  
## Examples  
 L’exemple de code suivant vérifie par programme si l’utilisateur actuellement connecté est dans le rôle Administrateurs avant d’autoriser l’utilisateur d’afficher des informations sur les rôles pour l’application. Pour obtenir un exemple d’un fichier Web.config qui permet la gestion des rôles, consultez <xref:System.Web.Security.WindowsTokenRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.WindowsTokenRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.WindowsTokenRoleProvider/CS/viewrolescs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.WindowsTokenRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.WindowsTokenRoleProvider/VB/viewrolesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> est <see langword="null" />.  
  
- ou - 
 <paramref name="roleName" /> est <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">L'utilisateur en cours d'exécution n'a pas d'identité <see cref="T:System.Security.Principal.WindowsIdentity" /> authentifiée associée à <see cref="P:System.Web.UI.Page.User" />. Pour les scénarios autres que HTTP, l'utilisateur en cours d'exécution n'a pas d'identité <see cref="T:System.Security.Principal.WindowsIdentity" /> authentifiée associée à <see cref="P:System.Threading.Thread.CurrentPrincipal" />.  
  
- ou - 
 <paramref name="username" /> ne correspond pas à <see cref="P:System.Security.Principal.WindowsIdentity.Name" /> de l'identité <see cref="T:System.Security.Principal.WindowsIdentity" /> en cours.  
  
- ou - 
Une défaillance s'est produite en récupérant les informations de groupes Windows de l'utilisateur.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="windowsTokenRoleProvider.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Tableau de chaînes contenant les noms d’utilisateurs à ajouter aux rôles spécifiés.</param>
        <param name="roleNames">Tableau de chaînes contenant le nom des rôles auxquels les noms d’utilisateurs spécifiés doivent être ajoutés.</param>
        <summary>Cette méthode n’est pas prise en charge par le fournisseur de rôles de jeton Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode n’est pas pris en charge par le <xref:System.Web.Security.WindowsTokenRoleProvider> classe et lève toujours une <xref:System.Configuration.Provider.ProviderException>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Une méthode non prise en charge a été appelée.</exception>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public override bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.WindowsTokenRoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.RoleExists : string -&gt; bool" Usage="windowsTokenRoleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nom du rôle à rechercher dans la source de données.</param>
        <summary>Cette méthode n’est pas prise en charge par le fournisseur de rôles de jeton Windows.</summary>
        <returns>Aucun. La méthode n'est pas prise en charge par la classe <see cref="T:System.Web.Security.WindowsTokenRoleProvider" /> et lève toujours une exception <see cref="T:System.Configuration.Provider.ProviderException" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Une méthode non prise en charge a été appelée.</exception>
        <related type="Article" href="http://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>