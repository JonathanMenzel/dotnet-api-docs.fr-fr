<Type Name="SqlRoleProvider" FullName="System.Web.Security.SqlRoleProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="40a532be31204260b3cfdf50959973f03bef6d49" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51915655" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlRoleProvider : System.Web.Security.RoleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlRoleProvider extends System.Web.Security.RoleProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.SqlRoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlRoleProvider&#xA;Inherits RoleProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlRoleProvider : System::Web::Security::RoleProvider" />
  <TypeSignature Language="F#" Value="type SqlRoleProvider = class&#xA;    inherit RoleProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.RoleProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Gère le stockage des informations d'appartenance aux rôles pour une application ASP.NET dans une base de données SQL Server.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette classe est utilisée par le <xref:System.Web.Security.Roles> et <xref:System.Web.Security.RolePrincipal> classes pour fournir des services de gestion des rôles pour une application ASP.NET à l’aide d’une base de données SQL Server. Vous pouvez utiliser la gestion des rôles pour spécifier différents niveaux d’autorisation pour votre application.  
  
 Pour utiliser le <xref:System.Web.Security.SqlRoleProvider> (classe), vous devez d’abord créer la base de données SQL Server utilisée par le <xref:System.Web.Security.SqlRoleProvider>. Pour créer la base de données utilisé par le <xref:System.Web.Security.SqlRoleProvider> (classe), exécutez le `aspnet_regsql.exe` exécutable trouvé dans le C:\WINDOWS\Microsoft.NET\Framework\ `versionNumber` dossier et spécifiez le `-Ar` option (par exemple, `aspnet_regsql.exe -Ar`). La base de données créée est appelée Aspnetdb. Vous pouvez également exécuter aspnet_regsql.exe pour extraire le mode de configuration de l’interface graphique utilisateur et configurer toutes les fonctionnalités ASP.NET.  
  
 Si le fournisseur de rôle est configuré avec une chaîne de connexion qui utilise la sécurité intégrée, le compte de processus de l’application ASP.NET doit disposer des droits pour se connecter à la base de données SQL Server.  
  
 Le fichier Machine.config est configuré avec un <xref:System.Web.Security.SqlRoleProvider> instance nommée AspNetSqlProvider qui se connecte à SQL Server sur l’ordinateur local. Vous pouvez utiliser cette instance du fournisseur, ou spécifier votre propre dans le fichier Web.config de votre application ASP.NET. Pour utiliser l’instance AspNetSqlProvider, spécifiez AspNetSqlProvider comme le `defaultProvider` dans votre configuration.  
  
 Vous pouvez configurer le <xref:System.Web.Security.SqlRoleProvider> à utiliser les mêmes informations de base de données et d’utilisateur que le <xref:System.Web.Security.SqlMembershipProvider> afin d’utiliser une base de données pour les informations d’authentification et d’autorisation. Pour utiliser la même base de données pour l’appartenance et les informations de rôle, lancez l’exécutable aspnet_regsql.exe et installer la fonctionnalité d’appartenance. Ensuite, spécifiez la chaîne de connexion dans votre configuration à la fois pour votre <xref:System.Web.Security.SqlRoleProvider> et <xref:System.Web.Security.SqlMembershipProvider> instances. Vérifiez également que les deux instances de fournisseur sont configurées avec le même <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A>.  
  
   
  
## Examples  
 L’exemple suivant montre le fichier Web.config pour une application ASP.NET configurée pour utiliser un <xref:System.Web.Security.SqlRoleProvider> objet et le <xref:System.Web.Security.SqlMembershipProvider>. L’élément est configuré pour autoriser uniquement l’accès aux utilisateurs authentifiés dans le rôle Administrateurs.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="SqlServices" connectionString="Data Source=localhost;Integrated Security=SSPI;Initial Catalog=aspnetdb;" />  
  </connectionStrings>  
  <system.web>  
    <authentication mode="Forms" >  
      <forms loginUrl="logincs.aspx"  
      name=".ASPXFORMSAUTH" />  
    </authentication>  
    <authorization>  
      <deny users="?" />  
         <allow roles="Administrators" />  
         <deny users="*" />  
    </authorization>  
    <membership defaultProvider="SqlProvider" userIsOnlineTimeWindow="15">  
      <providers>  
        <add   
          name="SqlProvider"   
          type="System.Web.Security.SqlMembershipProvider"   
          connectionStringName="SqlServices"  
          enablePasswordRetrieval="false"  
          enablePasswordReset="false"  
          requiresQuestionAndAnswer="false"   
          passwordFormat="Hashed"   
          applicationName="SampleApplication" />  
      </providers>  
    </membership>  
    <roleManager defaultProvider="SqlProvider"   
      enabled="true"  
      cacheRolesInCookie="true"  
      cookieName=".ASPROLES"  
      cookieTimeout="30"  
      cookiePath="/"  
      cookieRequireSSL="true"  
      cookieSlidingExpiration="true"  
      cookieProtection="All" >  
      <providers>  
        <add  
          name="SqlProvider"  
          type="System.Web.Security.SqlRoleProvider"  
          connectionStringName="SqlServices"   
          applicationName="SampleApplication" />  
      </providers>  
    </roleManager>  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlRoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlRoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Crée une instance de la classe <see cref="T:System.Web.Security.SqlRoleProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.SqlRoleProvider.%23ctor%2A> constructeur est appelé par ASP.NET pour créer une instance de la <xref:System.Web.Security.SqlRoleProvider> classe tel que spécifié dans la configuration de l’application. Ce constructeur n’est pas destiné à être utilisée à partir de votre code.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public override void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.AddUsersToRoles : string[] * string[] -&gt; unit" Usage="sqlRoleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Tableau de chaînes contenant les noms d’utilisateurs à ajouter aux rôles spécifiés.</param>
        <param name="roleNames">Tableau de chaînes contenant le nom des rôles auxquels les noms d’utilisateurs spécifiés doivent être ajoutés.</param>
        <summary>Ajoute le nom des utilisateurs spécifiés à chacun des rôles spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.SqlRoleProvider.AddUsersToRoles%2A> méthode est appelée par la <xref:System.Web.Security.Roles> classe à associer un ou plusieurs utilisateurs à un ou plusieurs rôles dans la base de données SQL Server spécifiée dans le fichier de configuration de l’application ASP.NET (Web.config). Cette méthode est appelée par le <xref:System.Web.Security.Roles.AddUserToRole%2A>, <xref:System.Web.Security.Roles.AddUserToRoles%2A>, <xref:System.Web.Security.Roles.AddUsersToRole%2A>, et <xref:System.Web.Security.Roles.AddUsersToRoles%2A> méthodes de la <xref:System.Web.Security.Roles> classe.  
  
 Les mises à jour de la base de données qui sont effectuées pendant l’appel à la <xref:System.Web.Security.SqlRoleProvider.AddUsersToRoles%2A> méthode sont effectuées dans une transaction. Si une erreur s’est produite, par exemple un nom d’utilisateur qui se trouve déjà dans un rôle spécifié, la transaction est annulée et aucune mise à jour n’est effectuées.  
  
 Si le <xref:System.Web.Security.SqlRoleProvider> est utilisé avec le <xref:System.Web.Security.SqlMembershipProvider>et un des noms d’utilisateurs spécifiés n’existe pas dans la base de données, le nom d’utilisateur sera automatiquement ajouté à la base de données.  
  
 Noms d’utilisateur et les noms de rôles ne peuvent pas contenir de virgules.  
  
   
  
## Examples  
 L’exemple de code suivant ajoute un ou plusieurs utilisateurs à un rôle ou supprime un utilisateur d’un rôle. Pour obtenir un exemple d’un fichier Web.config qui permet la gestion des rôles, consultez <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Un des rôles dans <paramref name="roleNames" /> est <see langword="null" />.  
  
- ou - 
L'un des utilisateurs de <paramref name="usernames" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Un des rôles dans <paramref name="roleNames" /> est une chaîne vide ou contient une virgule.  
  
- ou - 
Un des utilisateurs dans <paramref name="usernames" /> est une chaîne vide ou contient une virgule.  
  
- ou - 
Un des rôles dans <paramref name="roleNames" /> dépasse 256 caractères.  
  
- ou - 
Un des utilisateurs dans <paramref name="usernames" /> dépasse 256 caractères.  
  
- ou - 
 <paramref name="roleNames" /> contient un élément en double.  
  
- ou - 
 <paramref name="usernames" /> contient un élément en double.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Au moins un des noms de rôles spécifiés n'a pas été trouvé.  
  
- ou - 
Au moins un des noms d'utilisateurs spécifiés n'a pas été trouvé.  
  
- ou - 
Au moins un des noms d'utilisateurs spécifiés est déjà associé à un ou plusieurs des noms de rôles spécifiés.  
  
- ou - 
Une erreur inconnue s'est produite lors de la communication avec la base de données.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.SqlRoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.SqlRoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de l'application pour laquelle stocker ou récupérer des informations de rôle.</summary>
        <value>Nom de l'application pour laquelle stocker et récupérer des informations de rôle. La valeur par défaut est celle de la propriété <see cref="P:System.Web.HttpRequest.ApplicationPath" /> du <see cref="P:System.Web.HttpContext.Request" /> en cours.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> est utilisé par le <xref:System.Web.Security.SqlRoleProvider> pour associer des utilisateurs et des rôles à différentes applications. Cela permet à plusieurs applications à utiliser la même base de données pour stocker des informations d’utilisateur et rôle sans provoquer de conflits entre les noms d’utilisateur en double ou les noms de rôles. Plusieurs applications ASP.NET peuvent utiliser la même base de données en spécifiant la même valeur dans le <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> propriété. Le <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> propriété peut être définie par programme, ou elle peut ensuite être définie de façon déclarative dans le fichier de configuration pour l’application Web en utilisant le `applicationName` attribut.  
  
 Si une valeur n’est pas spécifiée pour le `applicationName` attribut dans le fichier de configuration pour l’application Web, puis le <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=nameWithType> valeur de propriété pour actuel <xref:System.Web.HttpContext.Request%2A?displayProperty=nameWithType> objet est utilisé.  
  
> [!CAUTION]
>  Car une instance de fournisseur de rôle par défaut unique est utilisée pour toutes les demandes prises en charge par un <xref:System.Web.HttpApplication> de l’objet, plusieurs demandes peuvent s’exécuter simultanément et tentez de définir la <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> valeur de propriété. Le <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> propriété n’est pas thread-safe pour les écritures multiples et la modification du <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> valeur de propriété peut entraîner un comportement inattendu pour plusieurs utilisateurs d’une application. Il est recommandé d’éviter d’écrire du code qui permet aux utilisateurs de définir la <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> propriété, sauf si vous devez. Un exemple d’une application où le paramètre le <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> propriété peut être requise est une application administrative qui gère les données de rôle pour plusieurs applications. Ce type d’application doit être une application pour utilisateur unique et non une application Web.  
  
   
  
## Examples  
 L’exemple suivant montre l’élément dans la `system.web` section du fichier Web.config pour une application ASP.NET. Elle spécifie l’application <xref:System.Web.Security.SqlRoleProvider> instance et définit les <xref:System.Web.Security.SqlRoleProvider.ApplicationName%2A> propriété `MyApplication`.  
  
```  
<roleManager defaultProvider="SqlProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.SqlRoleProvider"  
      connectionStringName="SqlServices"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Une tentative a été faite pour définir la propriété <see cref="P:System.Web.Security.SqlRoleProvider.ApplicationName" /> par un appelant qui n'a pas autorisation d'hébergement ASP.NET <see cref="F:System.Web.AspNetHostingPermissionLevel.High" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Une tentative a été faite pour affecter à <see cref="P:System.Web.Security.SqlRoleProvider.ApplicationName" /> une chaîne dépassant 256 caractères.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public override void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.CreateRole : string -&gt; unit" Usage="sqlRoleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nom du rôle à créer.</param>
        <summary>Ajoute un nouveau rôle à la base de données des rôles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.SqlRoleProvider.CreateRole%2A> méthode est appelée par la <xref:System.Web.Security.Roles> classe pour créer un rôle dans la base de données SQL Server spécifiée dans le fichier de configuration de l’application ASP.NET (Web.config).  
  
 La longueur maximale pour le nom de rôle est de 256 caractères. Noms de rôles ne respectent pas la casse. Des virgules ne sont pas autorisés dans les noms de rôle.  
  
   
  
## Examples  
 L’exemple de code suivant crée un nouveau rôle dans la base de données. Pour obtenir un exemple d’un fichier Web.config qui permet la gestion des rôles, consultez <xref:System.Web.Security.SqlRoleProvider>.  
  
> [!IMPORTANT]
>  Cet exemple contient une zone de texte qui accepte l’entrée d’utilisateur, ce qui constitue une menace de sécurité potentielle. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> est une chaîne vide ou contient une virgule.  
  
- ou - 
 <paramref name="roleName" /> fait plus de 256 caractères.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="roleName" /> existe déjà dans la base de données.  
  
- ou - 
Une erreur inconnue s'est produite lors de la communication avec la base de données.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="override this.DeleteRole : string * bool -&gt; bool" Usage="sqlRoleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">Nom du rôle à supprimer.</param>
        <param name="throwOnPopulatedRole">Si la valeur est <see langword="true" />, lève une exception si <c>roleName</c> possède au moins un membre.</param>
        <summary>Supprime un rôle de la base de données.</summary>
        <returns>
          <see langword="true" /> si le rôle a été supprimé avec succès ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.SqlRoleProvider.DeleteRole%2A> méthode est appelée par la <xref:System.Web.Security.Roles> classe pour supprimer un rôle à partir de la base de données SQL Server spécifiée dans le fichier de configuration de l’application ASP.NET (Web.config). Lorsqu’un rôle est supprimé, la liste des utilisateurs associés à ce rôle est également supprimée de la base de données. Les informations utilisateur dans la base de données ne sont pas affectées.  
  
 Si `throwOnPopulatedRole` est `true`, puis une exception est levée et le rôle ne sera pas supprimé si le rôle est identifié par le `roleName` paramètre a un ou plusieurs membres. Si `throwOnPopulatedRole` est `false`, le rôle est supprimé si elle est vide ou non.  
  
   
  
## Examples  
 L’exemple suivant supprime un rôle à partir de la base de données. Pour obtenir un exemple d’un fichier Web.config qui permet la gestion des rôles, consultez <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/deleterolecs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/deleterolevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> est <see langword="null" /> (<see langword="Nothing" /> en Visual Basic).</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> est une chaîne vide ou contient une virgule.  
  
- ou - 
 <paramref name="roleName" /> fait plus de 256 caractères.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="roleName" /> possède au moins un membre et <paramref name="throwOnPopulatedRole" /> a la valeur <see langword="true" />.  
  
- ou - 
Une erreur inconnue s'est produite lors de la communication avec la base de données.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="override this.FindUsersInRole : string * string -&gt; string[]" Usage="sqlRoleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Rôle dans lequel effectuer la recherche.</param>
        <param name="usernameToMatch">Nom d'utilisateur à rechercher.</param>
        <summary>Obtient un tableau de noms d’utilisateurs dans un rôle dont le nom d’utilisateur contient le nom d’utilisateur spécifié.</summary>
        <returns>Tableau de chaînes contenant le nom de tous les utilisateurs dont le nom correspond à <paramref name="usernameToMatch" /> et qui sont membres du rôle spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.SqlRoleProvider.FindUsersInRole%2A> méthode est appelée par le <xref:System.Web.Security.Roles> classe et retourne une liste d’utilisateurs dans un rôle dont le nom d’utilisateur contient l’équivalent de l’élément `usernameToMatch` pour configuré `applicationName`. Le <xref:System.Web.Security.SqlRoleProvider> recherche un nom d’utilisateur qui correspond à la `usernameToMatch` valeur de paramètre en utilisant les caractères génériques SQL Server prend en charge et de mot clé LIKE. Par exemple, si le `usernameToMatch` paramètre est défini sur « user1 », puis les informations d’appartenance pour l’utilisateur avec le nom d’utilisateur de « user1 » sont renvoyées, si elle existe. Si le `usernameToMatch` paramètre est défini sur « User% », puis les informations d’appartenance pour les utilisateurs avec le nom d’utilisateur « user1 », « user2 », « user_admin » et ainsi de suite sont retournées.  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Web.Security.Roles.FindUsersInRole%2A> méthode pour afficher l’appartenance au rôle en fonction de l’utilisateur. Pour obtenir un exemple d’un fichier Web.config qui permet la gestion des rôles, consultez <xref:System.Web.Security.Roles>.  
  
> [!IMPORTANT]
>  Cet exemple contient une zone de texte qui accepte l’entrée d’utilisateur, ce qui constitue une menace de sécurité potentielle. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.Roles#11](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.Roles/CS/FindUsersInRolecs.aspx#11)]
 [!code-aspx-vb[System.Web.Security.Roles#11](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.Roles/VB/FindUsersInRolevb.aspx#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> est <see langword="null" /> (<see langword="Nothing" /> en Visual Basic).  
  
- ou - 
 <paramref name="usernameToMatch" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> est une chaîne vide ou contient une virgule.  
  
- ou - 
 <paramref name="usernameToMatch" /> est une chaîne vide.  
  
- ou - 
 <paramref name="roleName" /> fait plus de 256 caractères.  
  
- ou - 
 <paramref name="usernameToMatch" /> fait plus de 256 caractères.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="roleName" /> est introuvable dans la base de données.  
  
- ou - 
Une erreur inconnue s'est produite lors de la communication avec la base de données.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public override string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="override this.GetAllRoles : unit -&gt; string[]" Usage="sqlRoleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient la liste de tous les rôles pour l'application.</summary>
        <returns>Tableau de chaînes contenant le nom de tous les rôles stockés dans la base de données d'une application spécifique.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.SqlRoleProvider.GetAllRoles%2A> méthode est appelée par la <xref:System.Web.Security.Roles> classe à récupérer une liste de tous les rôles dans la base de données SQL Server spécifiée dans le fichier de configuration de l’application ASP.NET (Web.config).  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Web.Security.Roles.GetAllRoles%2A> méthode pour obtenir la liste des rôles pour une application et de lier les résultats à un <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> contrôle. Pour obtenir un exemple d’un fichier Web.config qui permet la gestion des rôles, consultez <xref:System.Web.Security.SqlRoleProvider>.  
  
> [!IMPORTANT]
>  Cet exemple contient une zone de texte qui accepte l’entrée d’utilisateur, ce qui constitue une menace de sécurité potentielle. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Une erreur inconnue s'est produite lors de la communication avec la base de données.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public override string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.GetRolesForUser : string -&gt; string[]" Usage="sqlRoleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Utilisateur pour lequel retourner une liste de rôles.</param>
        <summary>Obtient une liste des rôles dans lesquels figure l'utilisateur.</summary>
        <returns>Tableau de chaînes contenant le nom de tous les rôles dans lesquels figure l'utilisateur spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.SqlRoleProvider.GetRolesForUser%2A> méthode est appelée par la <xref:System.Web.Security.Roles> classe à récupérer une liste des rôles d’un utilisateur spécifié à partir de la base de données SQL Server spécifiée dans le fichier de configuration de l’application ASP.NET (Web.config).  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Web.Security.Roles.GetRolesForUser%2A> méthode pour récupérer une liste des rôles pour un utilisateur spécifié et les lie à un <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> contrôle. Pour obtenir un exemple d’un fichier Web.config qui permet la gestion des rôles, consultez <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="username" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="username" /> contient une virgule.  
  
- ou - 
 <paramref name="username" /> fait plus de 256 caractères.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Une erreur inconnue s'est produite lors de la communication avec la base de données.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.GetUsersInRole : string -&gt; string[]" Usage="sqlRoleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nom du rôle pour lequel obtenir la liste des utilisateurs.</param>
        <summary>Obtient une liste des utilisateurs du rôle spécifié.</summary>
        <returns>Tableau de chaînes contenant le nom de tous les utilisateurs membres du rôle spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.SqlRoleProvider.GetUsersInRole%2A> méthode est appelée par la <xref:System.Web.Security.Roles> classe à récupérer la liste des utilisateurs associés au rôle spécifié dans la base de données SQL Server spécifiée dans le fichier de configuration de l’application ASP.NET (Web.config).  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Web.Security.Roles.GetUsersInRole%2A> méthode pour obtenir une liste des utilisateurs dans un rôle particulier et lier les résultats à un <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> contrôle. Pour obtenir un exemple d’un fichier Web.config qui permet la gestion des rôles, consultez <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> est une chaîne vide ou contient une virgule.  
  
- ou - 
 <paramref name="roleName" /> fait plus de 256 caractères.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">
          <paramref name="rolename" /> est introuvable dans la base de données.  
  
- ou - 
Une erreur inconnue s'est produite lors de la communication avec la base de données.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="sqlRoleProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Nom de l'instance de <see cref="T:System.Web.Security.SqlRoleProvider" /> à initialiser.</param>
        <param name="config">
          <see cref="T:System.Collections.Specialized.NameValueCollection" /> contenant le nom et la valeur des options de configuration du fournisseur de rôles.</param>
        <summary>Initialise le fournisseur de rôles SQL Server à l'aide des valeurs de propriété spécifiées dans le fichier de configuration de l'application ASP.NET. Cette méthode n'est pas destinée à être utilisée directement depuis votre code.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette méthode initialise le <xref:System.Web.Security.SqlRoleProvider> avec la propriété valeurs spécifiées dans le fichier de configuration de l’application ASP.NET (Web.config) et n’est pas destinée à être utilisée directement depuis votre code.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">L'application ASP.NET ne s'exécute pas au niveau de confiance <see cref="F:System.Web.AspNetHostingPermissionLevel.Medium" /> ou supérieur.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="config" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">L'attribut <see langword="connectionStringName" /> est vide ou n'existe pas dans le fichier de configuration de l'application pour cette instance de <see cref="T:System.Web.Security.SqlRoleProvider" />.  
  
- ou - 
L'attribut <see langword="applicationName" /> dépasse 256 caractères.  
  
- ou - 
Le fichier de configuration de l'application de cette instance de <see cref="T:System.Web.Security.SqlRoleProvider" /> contient un attribut non reconnu.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public override bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.IsUserInRole : string * string -&gt; bool" Usage="sqlRoleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nom d'utilisateur à rechercher.</param>
        <param name="roleName">Rôle dans lequel effectuer la recherche.</param>
        <summary>Obtient une valeur indiquant si l'utilisateur spécifié figure dans le rôle spécifié.</summary>
        <returns>
          <see langword="true" /> si le nom de l'utilisateur spécifié figure dans le rôle spécifié ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.SqlRoleProvider.IsUserInRole%2A> méthode est appelée par le <xref:System.Web.Security.Roles> classe et le <xref:System.Security.Principal.IPrincipal.IsInRole%2A> méthode de la <xref:System.Web.UI.Page.User%2A?displayProperty=nameWithType> propriété afin de déterminer si un utilisateur est associé à un rôle dans la base de données SQL Server spécifiée dans le fichier de configuration de l’application ASP.NET (Web.config).  
  
   
  
## Examples  
 L’exemple de code suivant vérifie par programme si l’utilisateur connecté est dans le rôle Administrateurs avant d’autoriser l’utilisateur d’afficher les rôles d’utilisateur. Pour obtenir un exemple d’un fichier Web.config qui permet la gestion des rôles, consultez <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="username" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> est une chaîne vide ou contient une virgule.  
  
- ou - 
 <paramref name="username" /> contient une virgule.  
  
- ou - 
 <paramref name="roleName" /> fait plus de 256 caractères.  
  
- ou - 
 <paramref name="username" /> fait plus de 256 caractères.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Une erreur inconnue s'est produite lors de la communication avec la base de données.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public override void RemoveUsersFromRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveUsersFromRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveUsersFromRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="sqlRoleProvider.RemoveUsersFromRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Tableau de chaînes contenant les noms d’utilisateur à supprimer des rôles spécifiés.</param>
        <param name="roleNames">Tableau de chaînes contenant les noms de rôles desquels supprimer les noms d’utilisateur spécifiés.</param>
        <summary>Supprime les noms d'utilisateurs spécifiés des rôles spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles%2A> méthode est appelée par la <xref:System.Web.Security.Roles> classe à supprimer un ou plusieurs utilisateurs à partir d’un ou plusieurs rôles dans la base de données SQL Server spécifiée dans le fichier de configuration de l’application ASP.NET (Web.config). Cette méthode est appelée par le <xref:System.Web.Security.Roles.RemoveUserFromRole%2A>, <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A>, <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A>, et <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> méthodes de la <xref:System.Web.Security.Roles> classe.  
  
 Les mises à jour de la base de données qui sont effectuées pendant l’appel à <xref:System.Web.Security.SqlRoleProvider.RemoveUsersFromRoles%2A> sont effectuées dans une transaction. Si une erreur s’est produite, par exemple un nom d’utilisateur qui n’existe pas ou un nom d’utilisateur qui se trouve déjà dans un rôle spécifié, la transaction est annulée et aucune mise à jour n’est effectuées.  
  
 Noms d’utilisateur et les noms de rôles ne peuvent pas contenir de virgules.  
  
   
  
## Examples  
 L’exemple de code suivant ajoute un ou plusieurs utilisateurs à un rôle ou supprime un utilisateur d’un rôle. Pour obtenir un exemple d’un fichier Web.config qui permet la gestion des rôles, consultez <xref:System.Web.Security.SqlRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Un des rôles dans <paramref name="roleNames" /> est <see langword="null" />.  
  
- ou - 
L'un des utilisateurs de <paramref name="usernames" /> est <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Un des rôles dans <paramref name="roleNames" /> est une chaîne vide ou contient une virgule.  
  
- ou - 
Un des utilisateurs dans <paramref name="usernames" /> est une chaîne vide ou contient une virgule.  
  
- ou - 
Un des rôles dans <paramref name="roleNames" /> dépasse 256 caractères.  
  
- ou - 
Un des utilisateurs dans <paramref name="usernames" /> dépasse 256 caractères.  
  
- ou - 
 <paramref name="roleNames" /> contient un élément en double.  
  
- ou - 
 <paramref name="usernames" /> contient un élément en double.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Au moins un des noms d'utilisateurs spécifiés n'a pas été trouvé.  
  
- ou - 
Au moins un des noms de rôles spécifiés n'a pas été trouvé.  
  
- ou - 
Au moins un des noms d'utilisateurs spécifiés n'est pas associé à un ou plusieurs des noms de rôles spécifiés.  
  
- ou - 
Une erreur inconnue s'est produite lors de la communication avec la base de données.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public override bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.SqlRoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.RoleExists : string -&gt; bool" Usage="sqlRoleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nom du rôle à rechercher dans la base de données.</param>
        <summary>Obtient une valeur qui indique si le nom de rôle spécifié existe déjà dans la base de données des rôles.</summary>
        <returns>
          <see langword="true" /> si le nom de rôle existe déjà dans la base de données ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.SqlRoleProvider.RoleExists%2A> méthode est appelée par la <xref:System.Web.Security.Roles> classe pour déterminer si un nom de rôle existe dans la base de données SQL Server spécifiée dans le fichier de configuration de l’application ASP.NET (Web.config).  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Web.Security.Roles.RoleExists%2A> méthode pour déterminer si un nom de rôle existe déjà avant de créer le rôle. Pour obtenir un exemple d’un fichier Web.config qui permet la gestion des rôles, consultez <xref:System.Web.Security.SqlRoleProvider>.  
  
> [!IMPORTANT]
>  Cet exemple contient une zone de texte qui accepte l’entrée d’utilisateur, ce qui constitue une menace de sécurité potentielle. Par défaut, les pages web ASP.NET vérifient que l’entrée d’utilisateur n’inclut pas de script ou d’éléments HTML. Pour plus d’informations, consultez [Vue d’ensemble des attaques de script](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="roleName" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="roleName" /> est une chaîne vide ou contient une virgule.  
  
- ou - 
 <paramref name="roleName" /> fait plus de 256 caractères.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Une erreur inconnue s'est produite lors de la communication avec la base de données.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>