<Type Name="AuthorizationStoreRoleProvider" FullName="System.Web.Security.AuthorizationStoreRoleProvider">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7664a660b7c321799e51d290e875ffa92f1d34c7" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52244874" /></Metadata><TypeSignature Language="C#" Value="public class AuthorizationStoreRoleProvider : System.Web.Security.RoleProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthorizationStoreRoleProvider extends System.Web.Security.RoleProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.Security.AuthorizationStoreRoleProvider" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthorizationStoreRoleProvider&#xA;Inherits RoleProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthorizationStoreRoleProvider : System::Web::Security::RoleProvider" />
  <TypeSignature Language="F#" Value="type AuthorizationStoreRoleProvider = class&#xA;    inherit RoleProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.Security.RoleProvider</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Gère le stockage des informations d'appartenance (membership) à des rôles pour une application ASP.NET dans un magasin de stratégies de Gestionnaire d'autorisations, que ce soit dans un fichier XML, sur un serveur Active Directory ou sur un serveur Active Directory Application Mode.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Cette classe est utilisée par le <xref:System.Web.Security.Roles> et <xref:System.Web.Security.RolePrincipal> classes pour fournir des services de gestion des rôles pour une application ASP.NET à l’aide d’un magasin de gestionnaire d’autorisations. Vous pouvez utiliser la gestion des rôles pour spécifier différents niveaux d’autorisation pour votre application. Le Gestionnaire d’autorisations sont accessibles à l’aide de la Console de gestion Microsoft.  
  
 Le <xref:System.Web.Security.AuthorizationStoreRoleProvider> objet fonctionne avec les deux l’authentification Windows et forms des modes d’authentification.  
  
 Vous pouvez configurer le <xref:System.Web.Security.AuthorizationStoreRoleProvider> objet à utiliser un fichier XML local ou un serveur Active Directory ou Active Directory Application Mode (ADAM). Lorsque vous utilisez un fichier local, la chaîne de connexion doit ressembler à l’exemple suivant.  
  
```  
msxml://<path to xml file>  
```  
  
 Si le fichier local est stocké dans l’arborescence de répertoires d’une application Web ASP.NET, vous pouvez utiliser le tilde (« ~ ») pour indiquer le répertoire racine. Par exemple, pour indiquer que le fichier local est stocké dans le répertoire de données de l’application Web, vous utiliseriez une chaîne de connexion semblable à l’exemple suivant.  
  
 `msxml://~\App_Data\datafilename.xml`  
  
> [!IMPORTANT]
>  Le stockage d’un fichier de données XML dans le répertoire de l’application Web est une menace de sécurité potentielle. Par défaut, IIS distribuera les fichiers de données XML sur le Web. Pour améliorer la sécurité lors de l’utilisation d’un fichier de données local dans une application ASP.NET, vous devez stocker le fichier de données dans le `App_Data` directory. Fichiers stockés dans le `App_Data` directory n’est pas traitée sur le Web.  
  
 Si vous utilisez un serveur Active Directory ou ADAM pour le magasin de stratégies, votre chaîne de connexion doit être similaire à l’exemple suivant.  
  
 `msldap://myserver/CN=MyAzManStore,OU=MyOU,DC=MyDomain,DC=MyDC,DC=Com`  
  
 Les exceptions répertoriées dans la documentation de <xref:System.Web.Security.AuthorizationStoreRoleProvider> méthodes d’objet sont les exceptions qui sont déclenchées par le <xref:System.Web.Security.AuthorizationStoreRoleProvider> objet. Dans la mesure où le fournisseur repose sur le runtime du Gestionnaire d’authentification sous-jacent, un <xref:System.Runtime.InteropServices.COMException> exception peut être levée chaque fois que le <xref:System.Web.Security.AuthorizationStoreRoleProvider> objet transfère un appel de méthode à l’exécution du Gestionnaire d’authentification.  
  
> [!IMPORTANT]
>  Le <xref:System.Web.Security.AuthorizationStoreRoleProvider> objet exige les éléments suivants pour l’exécution dans des environnements de confiance partielle :  
>   
>  Lors de l’utilisation d’un magasin de stratégie basée sur le fichier dans une application ASP.NET, les autorisations de fichier e/s accordées par le niveau de confiance actuel déterminent que lire et écriture autorisées par le fournisseur. L’application ASP.NET doit avoir accès en lecture sur le fichier à lire des données dans le magasin de stratégies et doit avoir l’autorisation d’écriture pour enregistrer les nouvelles informations ou mettre à jour les informations existantes dans le magasin de stratégies. Le fichier de stratégie de confiance moyenne par défaut donne des autorisations de lecture/écriture une application ASP.NET dans son répertoire d’application. Le fichier de stratégie de confiance basse par défaut donne uniquement une application ASP.NET en lecture dans son répertoire d’application. En outre, l’identité du processus sous lequel s’exécute l’application ASP.NET doit avoir les autorisations de système de fichiers pour lire et/ou écrire le fichier de stratégie.  
>   
>  Lorsque vous utilisez un serveur Active Directory ou ADAM, l’application ASP.NET nécessite des autorisations de code non managé, car le texte interne <xref:System.Web.Security.AuthorizationStoreRoleProvider> code objet utilise COM interop.  
>   
>  Lorsque vous utilisez la <xref:System.Web.Security.AuthorizationStoreRoleProvider> de l’objet en dehors d’ASP.NET, le code appelant a besoin d’autorisation de code non managé.  
  
   
  
## Examples  
 L’exemple de code suivant montre un fichier Web.config configuré pour utiliser le <xref:System.Web.Security.AuthorizationStoreRoleProvider> pour la gestion des rôles.  
  
```  
<configuration>  
  <connectionStrings>  
    <add name="AuthorizationServices" connectionString="msxml://~\App_Data\SampleStore.xml" />  
  </connectionStrings>  
  
  <system.web>  
  
    <authentication mode="Windows" />  
    <identity impersonate="true" />  
  
    <roleManager defaultProvider="AuthorizationStoreRoleProvider"   
      enabled="true"  
      cacheRolesInCookie="true"  
      cookieName=".ASPROLES"  
      cookieTimeout="30"  
      cookiePath="/"  
      cookieRequireSSL="false"  
      cookieSlidingExpiration="true"  
      cookieProtection="All" >  
      <providers>  
        <clear />  
          <add  
            name="AuthorizationStoreRoleProvider"  
            type="System.Web.Security.AuthorizationStoreRoleProvider"  
            connectionStringName="AuthorizationServices"  
            applicationName="SampleApplication"   
            cacheRefreshInterval="60"  
            scopeName="" />  
      </providers>  
    </roleManager>  
  
  </system.web>  
</configuration>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthorizationStoreRoleProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthorizationStoreRoleProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialise une nouvelle instance de la classe <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.AuthorizationStoreRoleProvider.%23ctor%2A> constructeur est appelé par ASP.NET pour créer une instance de la <xref:System.Web.Security.AuthorizationStoreRoleProvider> classe tel que spécifié dans la configuration de l’application. Ce constructeur n’est pas destiné à être utilisée à partir de votre code.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="AddUsersToRoles">
      <MemberSignature Language="C#" Value="public override void AddUsersToRoles (string[] usernames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void AddUsersToRoles(string[] usernames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub AddUsersToRoles (usernames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void AddUsersToRoles(cli::array &lt;System::String ^&gt; ^ usernames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.AddUsersToRoles : string[] * string[] -&gt; unit" Usage="authorizationStoreRoleProvider.AddUsersToRoles (usernames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="usernames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="usernames">Tableau de chaînes contenant les noms d’utilisateurs à ajouter aux rôles spécifiés.</param>
        <param name="roleNames">Tableau de chaînes contenant le nom des rôles auxquels les noms d’utilisateurs spécifiés doivent être ajoutés.</param>
        <summary>Ajoute le nom des utilisateurs spécifiés à chacun des rôles spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.AuthorizationStoreRoleProvider.AddUsersToRoles%2A> méthode est appelée par la <xref:System.Web.Security.Roles> classe à associer un ou plusieurs utilisateurs à un ou plusieurs rôles dans le magasin de données de gestionnaire d’autorisations spécifié dans le fichier de configuration de l’application ASP.NET (Web.config). Cette méthode est appelée par le <xref:System.Web.Security.Roles.AddUserToRole%2A?displayProperty=nameWithType>, <xref:System.Web.Security.Roles.AddUserToRoles%2A?displayProperty=nameWithType>, <xref:System.Web.Security.Roles.AddUsersToRole%2A?displayProperty=nameWithType>, et <xref:System.Web.Security.Roles.AddUsersToRoles%2A?displayProperty=nameWithType> méthodes de la <xref:System.Web.Security.Roles> classe.  
  
   
  
## Examples  
 L’exemple de code suivant ajoute un ou plusieurs utilisateurs à un rôle ou supprime un utilisateur d’un rôle. Pour obtenir un exemple d’un fichier Web.config qui permet la gestion des rôles, consultez <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'un des noms d'utilisateurs spécifiés est <see langword="null" />.  
  
- ou - 
L'un des noms de rôles spécifiés est <see langword="null" />.  
  
- ou - 
 <paramref name="usernames" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="roleNames" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Un des noms d'utilisateurs spécifiés est une chaîne vide ou contient une virgule (,).  
  
- ou - 
Un des noms de rôles spécifiés est une chaîne vide ou contient une virgule (,).  
  
- ou - 
 <paramref name="usernames" /> contient un élément en double.  
  
- ou - 
 <paramref name="roleNames" /> contient un élément en double.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Le <see langword="applicationName" /> configuré est introuvable.  
  
- ou - 
Le <see langword="scopeName" /> configuré est introuvable.  
  
- ou - 
Le runtime du Gestionnaire d'autorisations n'est pas installé sur le serveur.</exception>
        <exception cref="T:System.IO.FileNotFoundException">L'attribut <see langword="connectionStringName" /> fait référence à une chaîne de connexion dans un fichier qui n'existe pas.</exception>
        <exception cref="T:System.Web.HttpException">L'instance <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> est configurée avec un magasin de stratégies basé sur des fichiers et l'accès en lecture au fichier n'est pas autorisé au niveau de confiance actuel.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ApplicationName">
      <MemberSignature Language="C#" Value="public override string ApplicationName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ApplicationName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ApplicationName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationName : string with get, set" Usage="System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de l'application de magasin d'autorisations pour laquelle stocker et récupérer des informations de rôle.</summary>
        <value>Nom de l'application de magasin d'autorisations pour laquelle stocker et récupérer des informations de rôle. La valeur par défaut est celle de la propriété <see cref="P:System.Web.HttpRequest.ApplicationPath" /> du <see cref="P:System.Web.HttpContext.Request" /> en cours.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> est utilisé par le <xref:System.Web.Security.AuthorizationStoreRoleProvider> pour associer des utilisateurs et des rôles avec le Gestionnaire d’autorisations différentes applications, ce qui permet à ASP.NET de plusieurs applications à utiliser la même stratégie de gestionnaire d’autorisations stockent pour stocker les informations de rôle sans provoquer de conflits entre les noms de rôles en double. Plusieurs applications ASP.NET peuvent également utiliser le même magasin de stratégies en spécifiant la même valeur dans le <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> propriété. Le <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> propriété peut être définie par programme, ou elle peut être définie façon déclarative dans le fichier Web.config de l’application à l’aide de la `applicationName` attribut.  
  
 Si une valeur n’est pas spécifiée pour le `applicationName` attribut dans le fichier Web.config, puis le <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=nameWithType> valeur de propriété pour actuel <xref:System.Web.HttpContext.Request%2A?displayProperty=nameWithType> objet est utilisé.  
  
> [!NOTE]
>  Noms de gestionnaire d’autorisations d’application ne peut pas contenir le caractère « / » qui est inclus dans le <xref:System.Web.HttpRequest.ApplicationPath%2A?displayProperty=nameWithType> propriété. Par conséquent, la valeur par défaut pour le <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> propriété ne peut pas être utilisée comme un nom de l’application Gestionnaire d’autorisations, et dans le fichier Web.config de l’application, vous devez toujours spécifier un `applicationName` d’attribut dans le `provider` élément à configurer votre <xref:System.Web.Security.AuthorizationStoreRoleProvider> instance.  
  
> [!CAUTION]
>  Car une instance de fournisseur de rôle par défaut unique est utilisée pour toutes les demandes prises en charge par un <xref:System.Web.HttpApplication> de l’objet, plusieurs demandes peuvent s’exécuter simultanément et tentez de définir la <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> valeur de propriété. Le <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> propriété n’est pas thread-safe pour les écritures multiples et la modification du <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> valeur de propriété peut entraîner un comportement inattendu quand il existe plusieurs utilisateurs d’une application. Nous vous recommandons d’éviter d’écrire du code qui permet aux utilisateurs de définir la <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> propriété, sauf si vous devez. Un exemple d’une application où le paramètre le <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> propriété peut être requise est une application administrative qui gère les données de rôle pour plusieurs applications. Ce type d’application doit être une application pour utilisateur unique et non une application Web.  
  
   
  
## Examples  
 L’exemple suivant montre l’élément dans la `system.web` section du fichier Web.config pour une application ASP.NET. Elle spécifie l’application <xref:System.Web.Security.AuthorizationStoreRoleProvider> instance et définit les <xref:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName%2A> propriété `MyApplication`.  
  
```  
<roleManager defaultProvider="AuthorizationStoreProvider"   
  enabled="true"  
  cacheRolesInCookie="true"  
  cookieName=".ASPROLES"  
  cookieTimeout="30"  
  cookiePath="/"  
  cookieRequireSSL="false"  
  cookieSlidingExpiration="true"  
  cookieProtection="All" >  
  <providers>  
    <add  
      name="SqlProvider"  
      type="System.Web.Security.AuthorizationStoreRoleProvider"  
      connectionStringName="AuthorizationStoreServices"   
      scopeName="MyScope"  
      applicationName="MyApplication" />  
  </providers>  
</roleManager>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Une tentative a été faite pour affecter à <see cref="P:System.Web.Security.AuthorizationStoreRoleProvider.ApplicationName" /> une chaîne dépassant 256 caractères.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CacheRefreshInterval">
      <MemberSignature Language="C#" Value="public int CacheRefreshInterval { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheRefreshInterval" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CacheRefreshInterval As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int CacheRefreshInterval { int get(); };" />
      <MemberSignature Language="F#" Value="member this.CacheRefreshInterval : int" Usage="System.Web.Security.AuthorizationStoreRoleProvider.CacheRefreshInterval" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient le nombre de minutes entre les actualisations du cache des données du magasin de stratégies.</summary>
        <value>Nombre de minutes entre les actualisations des données du magasin de stratégies mises en cache. La valeur par défaut est 60.</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="CreateRole">
      <MemberSignature Language="C#" Value="public override void CreateRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CreateRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.CreateRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CreateRole (roleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CreateRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.CreateRole : string -&gt; unit" Usage="authorizationStoreRoleProvider.CreateRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nom du rôle à créer.</param>
        <summary>Ajoute un nouveau rôle au magasin de stratégies du Gestionnaire d'autorisations de rôles.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.AuthorizationStoreRoleProvider.CreateRole%2A> méthode est appelée par la <xref:System.Web.Security.Roles> classe pour créer un rôle dans le magasin de données de gestionnaire d’autorisations spécifié dans le fichier de configuration de l’application ASP.NET (Web.config).  
  
 Noms de rôles ne respectent pas la casse.  
  
   
  
## Examples  
 L’exemple de code suivant crée un nouveau rôle dans le magasin de stratégies du Gestionnaire d’autorisations. Pour obtenir un exemple d’un fichier Web.config qui permet la gestion des rôles, consultez <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> est une chaîne vide.  
  
- ou - 
 <paramref name="roleName" /> contient une virgule.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Le <see langword="applicationName" /> configuré est introuvable.  
  
- ou - 
Le <see langword="scopeName" /> configuré est introuvable.  
  
- ou - 
Le runtime du Gestionnaire d'autorisations n'est pas installé sur le serveur.</exception>
        <exception cref="T:System.IO.FileNotFoundException">L'attribut <see langword="connectionStringName" /> fait référence à une chaîne de connexion dans un fichier qui n'existe pas.</exception>
        <exception cref="T:System.Web.HttpException">L'instance <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> est configurée avec un magasin de stratégies basé sur des fichiers et l'accès en lecture au fichier n'est pas autorisé au niveau de confiance actuel.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteRole">
      <MemberSignature Language="C#" Value="public override bool DeleteRole (string roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool DeleteRole(string roleName, bool throwOnPopulatedRole) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function DeleteRole (roleName As String, throwOnPopulatedRole As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool DeleteRole(System::String ^ roleName, bool throwOnPopulatedRole);" />
      <MemberSignature Language="F#" Value="override this.DeleteRole : string * bool -&gt; bool" Usage="authorizationStoreRoleProvider.DeleteRole (roleName, throwOnPopulatedRole)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="throwOnPopulatedRole" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="roleName">Nom du rôle à supprimer.</param>
        <param name="throwOnPopulatedRole">Si <see langword="true" />, lève une exception si <paramref name="roleName" /> possède au moins un membre.</param>
        <summary>Supprime un rôle du magasin de stratégies du Gestionnaire d'autorisations.</summary>
        <returns><see langword="true" /> si le rôle a été supprimé ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.AuthorizationStoreRoleProvider.DeleteRole%2A> méthode est appelée par la <xref:System.Web.Security.Roles> classe pour supprimer un rôle dans le magasin de stratégies de gestionnaire d’autorisations spécifié dans le fichier de configuration de l’application ASP.NET (Web.config). Lorsqu’un rôle est supprimé, la liste des utilisateurs associés à ce rôle est également supprimée du magasin de stratégies. Les informations utilisateur dans la base de données ne sont pas affectées.  
  
 Si `throwOnPopulatedRole` est `true`, puis une exception est levée et le rôle ne sera pas supprimé si le rôle est identifié par le `roleName` paramètre a un ou plusieurs membres. Si `throwOnPopulatedRole` est `false`, le rôle est supprimé si elle est vide ou non.  
  
   
  
## Examples  
 L’exemple suivant supprime un rôle dans le magasin de stratégies du Gestionnaire d’autorisations. Pour obtenir un exemple d’un fichier Web.config qui permet la gestion des rôles, consultez <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/deleterolecs.aspx#2)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/deleterolevb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> est une chaîne vide.  
  
- ou - 
 <paramref name="roleName" /> contient une virgule.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException"><paramref name="roleName" /> possède au moins un membre et <paramref name="throwOnPopulatedRole" /> a la valeur <see langword="true" />.  
  
- ou - 
Le <see langword="applicationName" /> configuré est introuvable.  
  
- ou - 
Le <see langword="scopeName" /> configuré est introuvable.  
  
- ou - 
Le runtime du Gestionnaire d'autorisations n'est pas installé sur le serveur.</exception>
        <exception cref="T:System.IO.FileNotFoundException">L'attribut <see langword="connectionStringName" /> fait référence à une chaîne de connexion dans un fichier qui n'existe pas.</exception>
        <exception cref="T:System.Web.HttpException">L'instance <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> est configurée avec un magasin de stratégies basé sur des fichiers et l'accès en lecture au fichier n'est pas autorisé au niveau de confiance actuel.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="FindUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] FindUsersInRole (string roleName, string usernameToMatch);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] FindUsersInRole(string roleName, string usernameToMatch) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.FindUsersInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindUsersInRole (roleName As String, usernameToMatch As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ FindUsersInRole(System::String ^ roleName, System::String ^ usernameToMatch);" />
      <MemberSignature Language="F#" Value="override this.FindUsersInRole : string * string -&gt; string[]" Usage="authorizationStoreRoleProvider.FindUsersInRole (roleName, usernameToMatch)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
        <Parameter Name="usernameToMatch" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Rôle dans lequel effectuer la recherche.</param>
        <param name="usernameToMatch">Nom d'utilisateur à rechercher.</param>
        <summary>Cette méthode n'est pas prise en charge par le fournisseur de rôles de magasin d'autorisations.</summary>
        <returns>Tableau de chaînes contenant le nom de tous les utilisateurs dont le nom d'utilisateur correspond à <paramref name="usernameToMatch" /> et qui sont membres du rôle spécifié.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">Une méthode non prise en charge a été appelée.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetAllRoles">
      <MemberSignature Language="C#" Value="public override string[] GetAllRoles ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetAllRoles() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAllRoles () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetAllRoles();" />
      <MemberSignature Language="F#" Value="override this.GetAllRoles : unit -&gt; string[]" Usage="authorizationStoreRoleProvider.GetAllRoles " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Obtient la liste de tous les rôles pour l'application.</summary>
        <returns>Tableau de chaînes contenant le nom de tous les rôles stockés dans le magasin de stratégies du Gestionnaire d'autorisations d'une application spécifique.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetAllRoles%2A> méthode est appelée par la <xref:System.Web.Security.Roles> classe à récupérer une liste de tous les rôles dans le magasin de stratégies de gestionnaire d’autorisations spécifié dans le fichier de configuration de l’application ASP.NET (Web.config).  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Web.Security.Roles.GetAllRoles%2A> méthode pour obtenir la liste des rôles pour une application et de lier les résultats à un <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> contrôle. Pour obtenir un exemple d’un fichier Web.config qui permet la gestion des rôles, consultez <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Configuration.Provider.ProviderException">Le <see langword="applicationName" /> configuré est introuvable.  
  
- ou - 
Le <see langword="scopeName" /> configuré est introuvable.  
  
- ou - 
Le runtime du Gestionnaire d'autorisations n'est pas installé sur le serveur.</exception>
        <exception cref="T:System.IO.FileNotFoundException">L'attribut <see langword="connectionStringName" /> fait référence à une chaîne de connexion dans un fichier qui n'existe pas.</exception>
        <exception cref="T:System.Web.HttpException">L'instance <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> est configurée avec un magasin de stratégies basé sur des fichiers et l'accès en lecture au fichier n'est pas autorisé au niveau de confiance actuel.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetRolesForUser">
      <MemberSignature Language="C#" Value="public override string[] GetRolesForUser (string username);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetRolesForUser(string username) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetRolesForUser (username As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetRolesForUser(System::String ^ username);" />
      <MemberSignature Language="F#" Value="override this.GetRolesForUser : string -&gt; string[]" Usage="authorizationStoreRoleProvider.GetRolesForUser username" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Utilisateur pour lequel retourner une liste de rôles.</param>
        <summary>Obtient une liste des rôles dans lesquels figure l'utilisateur.</summary>
        <returns>Tableau de chaînes contenant le nom de tous les rôles dans lesquels figure l'utilisateur spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetRolesForUser%2A> méthode est appelée par la <xref:System.Web.Security.Roles> classe pour récupérer une liste des rôles d’un utilisateur spécifié dans le magasin de stratégies de gestionnaire d’autorisations spécifié dans le fichier de configuration de l’application ASP.NET (Web.config).  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Web.Security.Roles.GetRolesForUser%2A> méthode pour récupérer une liste des rôles pour un utilisateur spécifié et les lie à un <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> contrôle. Pour obtenir un exemple d’un fichier Web.config qui permet la gestion des rôles, consultez <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="username" /> contient une virgule.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Le <see langword="applicationName" /> configuré est introuvable.  
  
- ou - 
Le <see langword="scopeName" /> configuré est introuvable.  
  
- ou - 
Le runtime du Gestionnaire d'autorisations n'est pas installé sur le serveur.</exception>
        <exception cref="T:System.IO.FileNotFoundException">L'attribut <see langword="connectionStringName" /> fait référence à une chaîne de connexion dans un fichier qui n'existe pas.</exception>
        <exception cref="T:System.Web.HttpException">L'instance <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> est configurée avec un magasin de stratégies basé sur des fichiers et l'accès en lecture au fichier n'est pas autorisé au niveau de confiance actuel.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="GetUsersInRole">
      <MemberSignature Language="C#" Value="public override string[] GetUsersInRole (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetUsersInRole(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetUsersInRole (roleName As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetUsersInRole(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.GetUsersInRole : string -&gt; string[]" Usage="authorizationStoreRoleProvider.GetUsersInRole roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nom du rôle pour lequel obtenir la liste des utilisateurs.</param>
        <summary>Obtient une liste des utilisateurs du rôle spécifié.</summary>
        <returns>Tableau de chaînes contenant le nom de tous les utilisateurs membres du rôle spécifié.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole%2A> méthode est appelée par la <xref:System.Web.Security.Roles> classe à récupérer la liste des utilisateurs associés au rôle spécifié dans le magasin de stratégies de gestionnaire d’autorisations spécifié dans le fichier de configuration de l’application ASP.NET (Web.config).  
  
 Le <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole%2A> méthode retourne uniquement les noms d’utilisateur qui sont contenus directement dans le rôle de gestionnaire d’autorisations spécifié par le `roleName` paramètre. L’API appelée par du Gestionnaire d’autorisation sous-jacente la <xref:System.Web.Security.AuthorizationStoreRoleProvider.GetUsersInRole%2A> méthode ne prend pas charge expansion du groupe, les utilisateurs contenus dans NT groupes imbriqués, les groupes imbriqués de gestionnaire d’autorisations et les groupes de requêtes LDAP ne seront pas renvoyés.  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Web.Security.Roles.GetUsersInRole%2A> méthode pour obtenir une liste des utilisateurs dans un rôle particulier et lier les résultats à un <xref:System.Web.UI.WebControls.GridView?displayProperty=nameWithType> contrôle. Pour obtenir un exemple d’un fichier Web.config qui permet la gestion des rôles, consultez <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> est une chaîne vide.  
  
- ou - 
 <paramref name="roleName" /> contient une virgule.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Le <see langword="applicationName" /> configuré est introuvable.  
  
- ou - 
Le <see langword="scopeName" /> configuré est introuvable.  
  
- ou - 
Le runtime du Gestionnaire d'autorisations n'est pas installé sur le serveur.</exception>
        <exception cref="T:System.IO.FileNotFoundException">L'attribut <see langword="connectionStringName" /> fait référence à une chaîne de connexion dans un fichier qui n'existe pas.</exception>
        <exception cref="T:System.Web.HttpException">L'instance <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> est configurée avec un magasin de stratégies basé sur des fichiers et l'accès en lecture au fichier n'est pas autorisé au niveau de confiance actuel.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(string name, class System.Collections.Specialized.NameValueCollection config) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (name As String, config As NameValueCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::String ^ name, System::Collections::Specialized::NameValueCollection ^ config);" />
      <MemberSignature Language="F#" Value="override this.Initialize : string * System.Collections.Specialized.NameValueCollection -&gt; unit" Usage="authorizationStoreRoleProvider.Initialize (name, config)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="config" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="name">Nom de l'instance de <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> à initialiser.</param>
        <param name="config"><see cref="T:System.Collections.Specialized.NameValueCollection" /> contenant le nom et la valeur des options de configuration du fournisseur de rôles.</param>
        <summary>Initialise le fournisseur de rôles du Gestionnaire d'autorisations à l'aide des valeurs de propriété spécifiées dans le fichier de configuration de l'application ASP.NET. Cette méthode n'est pas destinée à être utilisée directement depuis votre code.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.AuthorizationStoreRoleProvider.Initialize%2A> méthode initialise la <xref:System.Web.Security.AuthorizationStoreRoleProvider> avec la propriété valeurs spécifiées dans le fichier de configuration de l’application ASP.NET (Web.config) et n’est pas destinée à être utilisée directement depuis votre code.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="config" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">L’attribut <see langword="connectionStringName" /> est vide ou n’existe pas dans la section de configuration de l’[élément connectionStrings (Schéma des paramètres ASP.NET)](https://msdn.microsoft.com/library/b6ffbb2e-a4d1-410e-8f7e-9755e92c65de).  
  
- ou - 
Le <see langword="applicationName" /> configuré dépasse 256 caractères.  
  
- ou - 
La configuration pour cette instance de <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> contient un attribut non reconnu.</exception>
        <exception cref="T:System.Web.HttpException">L'application ASP.NET ne s'exécute pas au niveau de confiance <see cref="F:System.Web.AspNetHostingPermissionLevel.Low" /> ou supérieur.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="IsUserInRole">
      <MemberSignature Language="C#" Value="public override bool IsUserInRole (string username, string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsUserInRole(string username, string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsUserInRole (username As String, roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsUserInRole(System::String ^ username, System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.IsUserInRole : string * string -&gt; bool" Usage="authorizationStoreRoleProvider.IsUserInRole (username, roleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Nom d'utilisateur à rechercher.</param>
        <param name="roleName">Rôle dans lequel effectuer la recherche.</param>
        <summary>Obtient une valeur indiquant si l'utilisateur spécifié figure dans le rôle spécifié.</summary>
        <returns><see langword="true" /> si le nom de l'utilisateur spécifié figure dans le rôle spécifié ; sinon <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.AuthorizationStoreRoleProvider.IsUserInRole%2A> méthode est appelée par le <xref:System.Web.Security.Roles> classe et le <xref:System.Security.Principal.IPrincipal.IsInRole%2A> méthode de la <xref:System.Web.UI.Page.User%2A?displayProperty=nameWithType> propriété afin de déterminer si un utilisateur est associé à un rôle dans le magasin de données de gestionnaire d’autorisations spécifié dans l’application ASP.NET fichier de configuration (Web.config).  
  
   
  
## Examples  
 L’exemple de code suivant vérifie par programme si l’utilisateur connecté est dans le rôle Administrateurs avant d’autoriser l’utilisateur d’afficher les rôles d’utilisateur. Pour obtenir un exemple d’un fichier Web.config qui permet la gestion des rôles, consultez <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/ViewRolescs.aspx#4)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/ViewRolesvb.aspx#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="username" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="roleName" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> est une chaîne vide.  
  
- ou - 
 <paramref name="roleName" /> contient une virgule.  
  
- ou - 
 <paramref name="username" /> contient une virgule.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Le <see langword="applicationName" /> configuré est introuvable.  
  
- ou - 
Le <see langword="scopeName" /> configuré est introuvable.  
  
- ou - 
Le runtime du Gestionnaire d'autorisations n'est pas installé sur le serveur.</exception>
        <exception cref="T:System.IO.FileNotFoundException">L'attribut <see langword="connectionStringName" /> fait référence à une chaîne de connexion dans un fichier qui n'existe pas.</exception>
        <exception cref="T:System.Web.HttpException">L'instance <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> est configurée avec un magasin de stratégies basé sur des fichiers et l'accès en lecture au fichier n'est pas autorisé au niveau de confiance actuel.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveUsersFromRoles">
      <MemberSignature Language="C#" Value="public override void RemoveUsersFromRoles (string[] userNames, string[] roleNames);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveUsersFromRoles(string[] userNames, string[] roleNames) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles(System.String[],System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveUsersFromRoles (userNames As String(), roleNames As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveUsersFromRoles(cli::array &lt;System::String ^&gt; ^ userNames, cli::array &lt;System::String ^&gt; ^ roleNames);" />
      <MemberSignature Language="F#" Value="override this.RemoveUsersFromRoles : string[] * string[] -&gt; unit" Usage="authorizationStoreRoleProvider.RemoveUsersFromRoles (userNames, roleNames)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userNames" Type="System.String[]" />
        <Parameter Name="roleNames" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="userNames">Tableau de chaînes contenant les noms d’utilisateur à supprimer des rôles spécifiés.</param>
        <param name="roleNames">Tableau de chaînes contenant les noms de rôles desquels supprimer les noms d’utilisateur spécifiés.</param>
        <summary>Supprime les noms d'utilisateurs spécifiés des rôles spécifiés.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.AuthorizationStoreRoleProvider.RemoveUsersFromRoles%2A> méthode est appelée par la <xref:System.Web.Security.Roles> classe à supprimer un ou plusieurs utilisateurs à partir d’un ou plusieurs rôles dans le magasin de stratégies de gestionnaire d’autorisations spécifié dans le fichier de configuration de l’application ASP.NET (Web.config). Cette méthode est appelée par le <xref:System.Web.Security.Roles.RemoveUserFromRole%2A>, <xref:System.Web.Security.Roles.RemoveUserFromRoles%2A>, <xref:System.Web.Security.Roles.RemoveUsersFromRole%2A>, et <xref:System.Web.Security.Roles.RemoveUsersFromRoles%2A> méthodes de la <xref:System.Web.Security.Roles> classe.  
  
   
  
## Examples  
 L’exemple de code suivant ajoute un ou plusieurs utilisateurs à un rôle ou supprime un utilisateur d’un rôle. Pour obtenir un exemple d’un fichier Web.config qui permet la gestion des rôles, consultez <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/adduserstorolecs.aspx#3)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/adduserstorolevb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">L'un des noms d'utilisateurs spécifiés est <see langword="null" />.  
  
- ou - 
L'un des noms de rôles spécifiés est <see langword="null" />.  
  
- ou - 
 <paramref name="userNames" /> a la valeur <see langword="null" />.  
  
- ou - 
 <paramref name="roleNames" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Un des noms d'utilisateurs spécifiés est une chaîne vide ou contient une virgule.  
  
- ou - 
Un des noms de rôles spécifiés est une chaîne vide ou contient une virgule.  
  
- ou - 
 <paramref name="userNames" /> contient un élément en double.  
  
- ou - 
 <paramref name="roleNames" /> contient un élément en double.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Le <see langword="applicationName" /> configuré est introuvable.  
  
- ou - 
Le <see langword="scopeName" /> configuré est introuvable.  
  
- ou - 
Le runtime du Gestionnaire d'autorisations n'est pas installé sur le serveur.</exception>
        <exception cref="T:System.IO.FileNotFoundException">L'attribut <see langword="connectionStringName" /> fait référence à une chaîne de connexion dans un fichier qui n'existe pas.</exception>
        <exception cref="T:System.Web.HttpException">L'instance <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> est configurée avec un magasin de stratégies basé sur des fichiers et l'accès en lecture au fichier n'est pas autorisé au niveau de confiance actuel.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="RoleExists">
      <MemberSignature Language="C#" Value="public override bool RoleExists (string roleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool RoleExists(string roleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Security.AuthorizationStoreRoleProvider.RoleExists(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function RoleExists (roleName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool RoleExists(System::String ^ roleName);" />
      <MemberSignature Language="F#" Value="override this.RoleExists : string -&gt; bool" Usage="authorizationStoreRoleProvider.RoleExists roleName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="roleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="roleName">Nom du rôle à rechercher dans le magasin de stratégies du Gestionnaire d'autorisations.</param>
        <summary>Obtient une valeur qui indique si le nom de rôle spécifié existe déjà dans le magasin de stratégies du Gestionnaire d'autorisations.</summary>
        <returns><see langword="true" /> si le nom de rôle existe déjà dans le magasin de stratégies du Gestionnaire d'autorisations ; sinon, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.AuthorizationStoreRoleProvider.RoleExists%2A> méthode est appelée par la <xref:System.Web.Security.Roles> classe pour déterminer si un nom de rôle existe dans le magasin de données de gestionnaire d’autorisations spécifié dans le fichier de configuration de l’application ASP.NET (Web.config).  
  
   
  
## Examples  
 Le code suivant exemple utilise le <xref:System.Web.Security.Roles.RoleExists%2A> méthode pour déterminer si un nom de rôle existe déjà avant de créer le rôle. Pour obtenir un exemple d’un fichier Web.config qui permet la gestion des rôles, consultez <xref:System.Web.Security.AuthorizationStoreRoleProvider>.  
  
 [!code-aspx-csharp[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/CS/createrolecs.aspx#1)]
 [!code-aspx-vb[System.Web.Security.SqlRoleProvider#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.SqlRoleProvider/VB/createrolevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="roleName" /> a la valeur <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="roleName" /> est une chaîne vide.  
  
- ou - 
 <paramref name="roleName" /> contient une virgule.</exception>
        <exception cref="T:System.Configuration.Provider.ProviderException">Le <see langword="applicationName" /> configuré est introuvable.  
  
- ou - 
Le <see langword="scopeName" /> configuré est introuvable.  
  
- ou - 
Le runtime du Gestionnaire d'autorisations n'est pas installé sur le serveur.</exception>
        <exception cref="T:System.IO.FileNotFoundException">L'attribut <see langword="connectionStringName" /> fait référence à une chaîne de connexion dans un fichier qui n'existe pas.</exception>
        <exception cref="T:System.Web.HttpException">L'instance <see cref="T:System.Web.Security.AuthorizationStoreRoleProvider" /> est configurée avec un magasin de stratégies basé sur des fichiers et l'accès en lecture au fichier n'est pas autorisé au niveau de confiance actuel.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
    <Member MemberName="ScopeName">
      <MemberSignature Language="C#" Value="public string ScopeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ScopeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName" />
      <MemberSignature Language="VB.NET" Value="Public Property ScopeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ScopeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ScopeName : string with get, set" Usage="System.Web.Security.AuthorizationStoreRoleProvider.ScopeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Obtient ou définit le nom de portée pour le magasin d'autorisations.</summary>
        <value>Nom de portée pour le magasin d'autorisations.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Le <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> propriété peut être définie à l’aide de la `scopeName` attribut de configuration pour l’instance de fournisseur dans la `providers` section de la section de configuration.  
  
> [!CAUTION]
>  Car une instance de fournisseur de rôle par défaut unique est utilisée pour toutes les demandes prises en charge par un <xref:System.Web.HttpApplication> de l’objet, plusieurs demandes peuvent s’exécuter simultanément et tentez de définir la <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> valeur de propriété. Le <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> propriété n’est pas thread-safe pour les écritures multiples et la modification du <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> valeur de propriété peut entraîner un comportement inattendu quand il existe plusieurs utilisateurs d’une application. Nous vous recommandons d’éviter d’écrire du code qui permet aux utilisateurs de définir la <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> propriété, sauf si vous devez. Un exemple d’une application où le paramètre le <xref:System.Web.Security.AuthorizationStoreRoleProvider.ScopeName%2A> propriété peut être requise est une application administrative qui gère les données de rôle pour plusieurs applications. Ce type d’application doit être une application pour utilisateur unique et non une application Web.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/a0d2f19d-a2a7-496d-88b6-30133f8ea3d6">Présentation de la gestion de rôle ASP.NET</related>
      </Docs>
    </Member>
  </Members>
</Type>