<Type Name="SignatureToken" FullName="System.Reflection.Emit.SignatureToken">
  <TypeSignature Language="C#" Value="public struct SignatureToken" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit SignatureToken extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.SignatureToken" />
  <TypeSignature Language="VB.NET" Value="Public Structure SignatureToken" />
  <TypeSignature Language="C++ CLI" Value="public value class SignatureToken" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="73581-101">Représente le <see langword="Token" /> retourné par les métadonnées pour représenter une signature.</span><span class="sxs-lookup"><span data-stu-id="73581-101">Represents the <see langword="Token" /> returned by the metadata to represent a signature.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.Reflection.Emit.SignatureToken Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.Reflection.Emit.SignatureToken Empty" />
      <MemberSignature Language="DocId" Value="F:System.Reflection.Emit.SignatureToken.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As SignatureToken " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Reflection::Emit::SignatureToken Empty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="73581-102"><see langword="SignatureToken" /> par défaut avec <see cref="P:System.Reflection.Emit.SignatureToken.Token" /> égal à 0.</span><span class="sxs-lookup"><span data-stu-id="73581-102">The default <see langword="SignatureToken" /> with <see cref="P:System.Reflection.Emit.SignatureToken.Token" /> value 0.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="73581-103">Indique si l'instance actuelle est égale à un objet spécifié.</span><span class="sxs-lookup"><span data-stu-id="73581-103">Indicates whether the current instance is equal to a specified object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureToken.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="73581-104">Objet à comparer à ce <see langword="SignatureToken" />.</span><span class="sxs-lookup"><span data-stu-id="73581-104">The object to compare with this <see langword="SignatureToken" />.</span></span></param>
        <summary><span data-ttu-id="73581-105">Vérifie si l'objet donné est une instance de <see langword="SignatureToken" /> et s'il est égal à cette dernière.</span><span class="sxs-lookup"><span data-stu-id="73581-105">Checks if the given object is an instance of <see langword="SignatureToken" /> and is equal to this instance.</span></span></summary>
        <returns>
          <span data-ttu-id="73581-106"><see langword="true" /> si <paramref name="obj" /> est une instance de <see langword="SignatureToken" /> et s’il est égal à cet objet ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="73581-106"><see langword="true" /> if <paramref name="obj" /> is an instance of <see langword="SignatureToken" /> and is equal to this object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Reflection.Emit.SignatureToken obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Reflection.Emit.SignatureToken obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureToken.Equals(System.Reflection.Emit.SignatureToken)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As SignatureToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Reflection::Emit::SignatureToken obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Reflection.Emit.SignatureToken" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="73581-107"><see cref="T:System.Reflection.Emit.SignatureToken" /> à comparer à l'instance en cours.</span><span class="sxs-lookup"><span data-stu-id="73581-107">The <see cref="T:System.Reflection.Emit.SignatureToken" /> to compare to the current instance.</span></span></param>
        <summary><span data-ttu-id="73581-108">Détermine si l'instance actuelle est égale à l'objet <see cref="T:System.Reflection.Emit.SignatureToken" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="73581-108">Indicates whether the current instance is equal to the specified <see cref="T:System.Reflection.Emit.SignatureToken" />.</span></span></summary>
        <returns>
          <span data-ttu-id="73581-109"><see langword="true" /> si la valeur de <paramref name="obj" /> est égale à la valeur de l'instance actuelle ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="73581-109"><see langword="true" /> if the value of <paramref name="obj" /> is equal to the value of the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureToken.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="73581-110">Génère le code de hachage pour cette signature.</span><span class="sxs-lookup"><span data-stu-id="73581-110">Generates the hash code for this signature.</span></span></summary>
        <returns><span data-ttu-id="73581-111">Retourne le code de hachage pour cette signature.</span><span class="sxs-lookup"><span data-stu-id="73581-111">Returns the hash code for this signature.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Reflection.Emit.SignatureToken a, System.Reflection.Emit.SignatureToken b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Reflection.Emit.SignatureToken a, valuetype System.Reflection.Emit.SignatureToken b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureToken.op_Equality(System.Reflection.Emit.SignatureToken,System.Reflection.Emit.SignatureToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (a As SignatureToken, b As SignatureToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Reflection::Emit::SignatureToken a, System::Reflection::Emit::SignatureToken b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Emit.SignatureToken" />
        <Parameter Name="b" Type="System.Reflection.Emit.SignatureToken" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="73581-112"><see cref="T:System.Reflection.Emit.SignatureToken" /> à comparer à <c>b</c>.</span><span class="sxs-lookup"><span data-stu-id="73581-112">The <see cref="T:System.Reflection.Emit.SignatureToken" /> to compare to <c>b</c>.</span></span></param>
        <param name="b"><span data-ttu-id="73581-113"><see cref="T:System.Reflection.Emit.SignatureToken" /> à comparer à <c>a</c>.</span><span class="sxs-lookup"><span data-stu-id="73581-113">The <see cref="T:System.Reflection.Emit.SignatureToken" /> to compare to <c>a</c>.</span></span></param>
        <summary><span data-ttu-id="73581-114">Indique si deux structures <see cref="T:System.Reflection.Emit.SignatureToken" /> sont égales.</span><span class="sxs-lookup"><span data-stu-id="73581-114">Indicates whether two <see cref="T:System.Reflection.Emit.SignatureToken" /> structures are equal.</span></span></summary>
        <returns>
          <span data-ttu-id="73581-115"><see langword="true" /> si <paramref name="a" /> est égal à <paramref name="b" /> ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="73581-115"><see langword="true" /> if <paramref name="a" /> is equal to <paramref name="b" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="73581-116">La méthode équivalente pour cet opérateur est <xref:System.Reflection.Emit.SignatureToken.Equals%28System.Reflection.Emit.SignatureToken%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="73581-116">The equivalent method for this operator is <xref:System.Reflection.Emit.SignatureToken.Equals%28System.Reflection.Emit.SignatureToken%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Reflection.Emit.SignatureToken a, System.Reflection.Emit.SignatureToken b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Reflection.Emit.SignatureToken a, valuetype System.Reflection.Emit.SignatureToken b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureToken.op_Inequality(System.Reflection.Emit.SignatureToken,System.Reflection.Emit.SignatureToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (a As SignatureToken, b As SignatureToken) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Reflection::Emit::SignatureToken a, System::Reflection::Emit::SignatureToken b);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Reflection.Emit.SignatureToken" />
        <Parameter Name="b" Type="System.Reflection.Emit.SignatureToken" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="73581-117"><see cref="T:System.Reflection.Emit.SignatureToken" /> à comparer à <c>b</c>.</span><span class="sxs-lookup"><span data-stu-id="73581-117">The <see cref="T:System.Reflection.Emit.SignatureToken" /> to compare to <c>b</c>.</span></span></param>
        <param name="b"><span data-ttu-id="73581-118"><see cref="T:System.Reflection.Emit.SignatureToken" /> à comparer à <c>a</c>.</span><span class="sxs-lookup"><span data-stu-id="73581-118">The <see cref="T:System.Reflection.Emit.SignatureToken" /> to compare to <c>a</c>.</span></span></param>
        <summary><span data-ttu-id="73581-119">Indique si deux structures <see cref="T:System.Reflection.Emit.SignatureToken" /> ne sont pas égales.</span><span class="sxs-lookup"><span data-stu-id="73581-119">Indicates whether two <see cref="T:System.Reflection.Emit.SignatureToken" /> structures are not equal.</span></span></summary>
        <returns>
          <span data-ttu-id="73581-120"><see langword="true" /> si <paramref name="a" /> n'est pas égal à <paramref name="b" /> ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="73581-120"><see langword="true" /> if <paramref name="a" /> is not equal to <paramref name="b" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[<span data-ttu-id="73581-121">La méthode équivalente pour cet opérateur est <xref:System.Reflection.Emit.SignatureToken.Equals%28System.Reflection.Emit.SignatureToken%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="73581-121">The equivalent method for this operator is <xref:System.Reflection.Emit.SignatureToken.Equals%28System.Reflection.Emit.SignatureToken%29?displayProperty=nameWithType>.</span></span>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="public int Token { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Token" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.SignatureToken.Token" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Token As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Token { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="73581-122">Récupère le jeton de métadonnées pour la signature de variable locale pour cette méthode.</span><span class="sxs-lookup"><span data-stu-id="73581-122">Retrieves the metadata token for the local variable signature for this method.</span></span></summary>
        <value><span data-ttu-id="73581-123">Lecture seule.</span><span class="sxs-lookup"><span data-stu-id="73581-123">Read-only.</span></span> <span data-ttu-id="73581-124">Récupère le jeton de métadonnées pour cette signature.</span><span class="sxs-lookup"><span data-stu-id="73581-124">Retrieves the metadata token of this signature.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73581-125">Cela retourne une représentation numérique du jeton de métadonnées.</span><span class="sxs-lookup"><span data-stu-id="73581-125">This returns a numeric representation of the metadata token.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>