<Type Name="UnmanagedMarshal" FullName="System.Reflection.Emit.UnmanagedMarshal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="46fc4e13279b8ca823d2162a58c8f9ff13114e65" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class UnmanagedMarshal" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit UnmanagedMarshal extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.UnmanagedMarshal" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UnmanagedMarshal" />
  <TypeSignature Language="C++ CLI" Value="public ref class UnmanagedMarshal sealed" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("An alternate API is available: Emit the MarshalAs custom attribute instead.")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="6dd57-101">Représente la classe qui décrit comment marshaler un champ d'un code managé à un code non managé.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6dd57-101">Represents the class that describes how to marshal a field from managed to unmanaged code.</span>
      </span>
      <span data-ttu-id="6dd57-102">Cette classe ne peut pas être héritée.</span>
      <span class="sxs-lookup">
        <span data-stu-id="6dd57-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dd57-103">L’exemple de code montre la solution de contournement pour ce type obsolète.</span><span class="sxs-lookup"><span data-stu-id="6dd57-103">The code example shows the workaround for this obsolete type.</span></span>  
  
 <span data-ttu-id="6dd57-104">Marshaling étant le processus d’empaquetage et de décompactage des paramètres des appels de procédure distante peuvent se produire.</span><span class="sxs-lookup"><span data-stu-id="6dd57-104">Marshaling is the process of packaging and unpackaging parameters so remote procedure calls can occur.</span></span> <span data-ttu-id="6dd57-105">Lors du marshaling, un champ peut subir une conversion de format quand le format du type managé est différent du format du type non managé correspondant.</span><span class="sxs-lookup"><span data-stu-id="6dd57-105">During marshaling, a field might undergo a format conversion when the format of the managed type is different from the format of the corresponding unmanaged type.</span></span> <span data-ttu-id="6dd57-106">Par exemple, vous souhaiterez peut-être marshaler un `String` type en BSTR non managé.</span><span class="sxs-lookup"><span data-stu-id="6dd57-106">For example, you might want to marshal a `String` type as an unmanaged BSTR.</span></span> <span data-ttu-id="6dd57-107">Certaines conversions de format sont gérées automatiquement par le runtime.</span><span class="sxs-lookup"><span data-stu-id="6dd57-107">Some format conversions are handled automatically by the runtime.</span></span> <span data-ttu-id="6dd57-108">Pour substituer le comportement par défaut, vous devez utiliser le `UnmanagedMarshal` classe pour définir la conversion de format.</span><span class="sxs-lookup"><span data-stu-id="6dd57-108">To override the default behavior, you must use the `UnmanagedMarshal` class to define the format conversion.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6dd57-109">L’exemple de code suivant montre le code de remplacement pour l’obsolète <xref:System.Reflection.Emit.UnmanagedMarshal> type.</span><span class="sxs-lookup"><span data-stu-id="6dd57-109">The following code example shows replacement code for the obsolete <xref:System.Reflection.Emit.UnmanagedMarshal> type.</span></span> <span data-ttu-id="6dd57-110">L’exemple émet un assembly de module unique nommé `EmitMarshalAs.dll`, qui contient un type nommé `Sample`.</span><span class="sxs-lookup"><span data-stu-id="6dd57-110">The example emits a single-module assembly named `EmitMarshalAs.dll`, containing a type named `Sample`.</span></span> <span data-ttu-id="6dd57-111">Le type a une méthode nommée `Test`, avec un paramètre de type <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="6dd57-111">The type has a method named `Test`, with one parameter of type <xref:System.String>.</span></span> <span data-ttu-id="6dd57-112">L’exemple de code applique la <xref:System.Runtime.InteropServices.MarshalAsAttribute> avec <xref:System.Runtime.InteropServices.UnmanagedType.BStr?displayProperty=nameWithType> au paramètre.</span><span class="sxs-lookup"><span data-stu-id="6dd57-112">The code example applies the <xref:System.Runtime.InteropServices.MarshalAsAttribute> with <xref:System.Runtime.InteropServices.UnmanagedType.BStr?displayProperty=nameWithType> to the parameter.</span></span>  
  
 <span data-ttu-id="6dd57-113">Vous pouvez utiliser la [Ildasm.exe (désassembleur IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) pour examiner l’assembly émis et observer que le paramètre est marqué comme `marshal(bstr)`.</span><span class="sxs-lookup"><span data-stu-id="6dd57-113">You can use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the emitted assembly and observe that the parameter is marked `marshal(bstr)`.</span></span>  
  
 [!code-cpp[UnmanagedMarshalObsolete#1](~/samples/snippets/cpp/VS_Snippets_CLR/UnmanagedMarshalObsolete/cpp/source.cpp#1)]
 [!code-csharp[UnmanagedMarshalObsolete#1](~/samples/snippets/csharp/VS_Snippets_CLR/UnmanagedMarshalObsolete/cs/source.cs#1)]
 [!code-vb[UnmanagedMarshalObsolete#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/UnmanagedMarshalObsolete/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Type" />
    <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
    <altmember cref="T:System.Guid" />
  </Docs>
  <Members>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.UnmanagedType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.UnmanagedType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As UnmanagedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::UnmanagedType BaseType { System::Runtime::InteropServices::UnmanagedType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.UnmanagedType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dd57-114">Obtient un type de base non managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-114">Gets an unmanaged base type.</span>
          </span>
          <span data-ttu-id="6dd57-115">Cette propriété est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-115">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dd57-116">Objet <see langword="UnmanagedType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-116">An <see langword="UnmanagedType" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6dd57-117">Le type non managé n'est ni <see langword="LPArray" /> ni <see langword="SafeArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-117">The unmanaged type is not an <see langword="LPArray" /> or a <see langword="SafeArray" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineByValArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineByValArray (int elemCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineByValArray(int32 elemCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineByValArray(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineByValArray (elemCount As Integer) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineByValArray(int elemCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elemCount">
          <span data-ttu-id="6dd57-118">Nombre d'éléments dans le tableau de longueur fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-118">The number of elements in the fixed-length array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dd57-119">Spécifie un tableau de longueur fixe (ByValArray) à marshaler en code non managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-119">Specifies a fixed-length array (ByValArray) to marshal to unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dd57-120">Objet <see cref="T:System.Reflection.Emit.UnmanagedMarshal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-120">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dd57-121">Le `DefineByValArray` méthode n’est pas un marshaling natif simple.</span><span class="sxs-lookup"><span data-stu-id="6dd57-121">The `DefineByValArray` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="6dd57-122">Uniquement des constructions de marshaling non managé peuvent être effectuées à l’aide de ces constructeurs statiques.</span><span class="sxs-lookup"><span data-stu-id="6dd57-122">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="6dd57-123">Marshaling d’un tableau est un processus plus complexe que le marshaling d’un paramètre de type entier.</span><span class="sxs-lookup"><span data-stu-id="6dd57-123">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="6dd57-124">Membres de tableau sont copiés dans un ordre spécifique afin que l’autre côté peut reconstruire le tableau exactement.</span><span class="sxs-lookup"><span data-stu-id="6dd57-124">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6dd57-125">L'argument n'est pas un type natif simple.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-125">The argument is not a simple native type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineByValTStr">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineByValTStr (int elemCount);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineByValTStr(int32 elemCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineByValTStr(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineByValTStr (elemCount As Integer) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineByValTStr(int elemCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elemCount">
          <span data-ttu-id="6dd57-126">Nombre d'éléments dans la mémoire tampon de tableau de longueur fixe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-126">The number of elements in the fixed array buffer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dd57-127">Spécifie une chaîne dans une mémoire tampon de tableau de longueur fixe (ByValTStr) à marshaler en code non managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-127">Specifies a string in a fixed array buffer (ByValTStr) to marshal to unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dd57-128">Objet <see cref="T:System.Reflection.Emit.UnmanagedMarshal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-128">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dd57-129">Le `DefineByValStr` méthode n’est pas un marshaling natif simple.</span><span class="sxs-lookup"><span data-stu-id="6dd57-129">The `DefineByValStr` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="6dd57-130">Uniquement des constructions de marshaling non managé peuvent être effectuées à l’aide de ces constructeurs statiques.</span><span class="sxs-lookup"><span data-stu-id="6dd57-130">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="6dd57-131">Marshaling d’un tableau est un processus plus complexe que le marshaling d’un paramètre de type entier.</span><span class="sxs-lookup"><span data-stu-id="6dd57-131">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="6dd57-132">Membres de tableau sont copiés dans un ordre spécifique afin que l’autre côté peut reconstruire le tableau exactement.</span><span class="sxs-lookup"><span data-stu-id="6dd57-132">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6dd57-133">L'argument n'est pas un type natif simple.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-133">The argument is not a simple native type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.String" />
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineLPArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineLPArray (System.Runtime.InteropServices.UnmanagedType elemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineLPArray(valuetype System.Runtime.InteropServices.UnmanagedType elemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineLPArray(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineLPArray (elemType As UnmanagedType) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineLPArray(System::Runtime::InteropServices::UnmanagedType elemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="elemType">
          <span data-ttu-id="6dd57-134">Type non managé vers lequel le tableau doit être marshalé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-134">The unmanaged type to which to marshal the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dd57-135">Spécifie un <see langword="LPArray" /> à marshaler en code non managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-135">Specifies an <see langword="LPArray" /> to marshal to unmanaged code.</span>
          </span>
          <span data-ttu-id="6dd57-136">La longueur d'un <see langword="LPArray" /> est déterminée par la taille du tableau réellement marshalé au moment de l'exécution.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-136">The length of an <see langword="LPArray" /> is determined at runtime by the size of the actual marshaled array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dd57-137">Objet <see cref="T:System.Reflection.Emit.UnmanagedMarshal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-137">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dd57-138">Le `DefineLPArray` méthode n’est pas un marshaling natif simple.</span><span class="sxs-lookup"><span data-stu-id="6dd57-138">The `DefineLPArray` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="6dd57-139">Uniquement des constructions de marshaling non managé peuvent être effectuées à l’aide de ces constructeurs statiques.</span><span class="sxs-lookup"><span data-stu-id="6dd57-139">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="6dd57-140">Marshaling d’un tableau est un processus plus complexe que le marshaling d’un paramètre de type entier.</span><span class="sxs-lookup"><span data-stu-id="6dd57-140">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="6dd57-141">Membres de tableau sont copiés dans un ordre spécifique afin que l’autre côté peut reconstruire le tableau exactement.</span><span class="sxs-lookup"><span data-stu-id="6dd57-141">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6dd57-142">L'argument n'est pas un type natif simple.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-142">The argument is not a simple native type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineSafeArray">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineSafeArray (System.Runtime.InteropServices.UnmanagedType elemType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineSafeArray(valuetype System.Runtime.InteropServices.UnmanagedType elemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineSafeArray(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineSafeArray (elemType As UnmanagedType) As UnmanagedMarshal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineSafeArray(System::Runtime::InteropServices::UnmanagedType elemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elemType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="elemType">
          <span data-ttu-id="6dd57-143">Type de base ou <see langword="UnmanagedType" /> de chaque élément du tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-143">The base type or the <see langword="UnmanagedType" /> of each element of the array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dd57-144">Spécifie un <see langword="SafeArray" /> à marshaler en code non managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-144">Specifies a <see langword="SafeArray" /> to marshal to unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dd57-145">Objet <see cref="T:System.Reflection.Emit.UnmanagedMarshal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-145">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dd57-146">Le `DefineSafeArray` méthode n’est pas un marshaling natif simple.</span><span class="sxs-lookup"><span data-stu-id="6dd57-146">The `DefineSafeArray` method is not a simple native marshal.</span></span>  
  
 <span data-ttu-id="6dd57-147">Uniquement des constructions de marshaling non managé peuvent être effectuées à l’aide de ces constructeurs statiques.</span><span class="sxs-lookup"><span data-stu-id="6dd57-147">Only unmanaged marshal constructs can be made using these static constructors.</span></span>  
  
 <span data-ttu-id="6dd57-148">Marshaling d’un tableau est un processus plus complexe que le marshaling d’un paramètre de type entier.</span><span class="sxs-lookup"><span data-stu-id="6dd57-148">Marshaling an array is a more complex process than marshaling an integer parameter.</span></span> <span data-ttu-id="6dd57-149">Membres de tableau sont copiés dans un ordre spécifique afin que l’autre côté peut reconstruire le tableau exactement.</span><span class="sxs-lookup"><span data-stu-id="6dd57-149">Array members are copied in a specific order so that the other side can reconstruct the array exactly.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6dd57-150">L'argument n'est pas un type natif simple.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-150">The argument is not a simple native type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="DefineUnmanagedMarshal">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.UnmanagedMarshal DefineUnmanagedMarshal (System.Runtime.InteropServices.UnmanagedType unmanagedType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.UnmanagedMarshal DefineUnmanagedMarshal(valuetype System.Runtime.InteropServices.UnmanagedType unmanagedType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.UnmanagedMarshal.DefineUnmanagedMarshal(System.Runtime.InteropServices.UnmanagedType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::UnmanagedMarshal ^ DefineUnmanagedMarshal(System::Runtime::InteropServices::UnmanagedType unmanagedType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.UnmanagedMarshal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedType" Type="System.Runtime.InteropServices.UnmanagedType" />
      </Parameters>
      <Docs>
        <param name="unmanagedType">
          <span data-ttu-id="6dd57-151">Type non managé vers lequel le type doit être marshalé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-151">The unmanaged type to which the type is to be marshaled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="6dd57-152">Spécifie un type donné à marshaler en code non managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-152">Specifies a given type that is to be marshaled to unmanaged code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="6dd57-153">Objet <see cref="T:System.Reflection.Emit.UnmanagedMarshal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-153">An <see cref="T:System.Reflection.Emit.UnmanagedMarshal" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dd57-154">Le <xref:System.Runtime.InteropServices.UnmanagedType> transmis à cette méthode doit être un type natif simple.</span><span class="sxs-lookup"><span data-stu-id="6dd57-154">The <xref:System.Runtime.InteropServices.UnmanagedType> passed to this method must be a simple native type.</span></span> <span data-ttu-id="6dd57-155">Aucune des valeurs suivantes peut être utilisée : <xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.SafeArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.ByValArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.LPArray?displayProperty=nameWithType>, ou <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="6dd57-155">None of the following values may be used: <xref:System.Runtime.InteropServices.UnmanagedType.ByValTStr?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.SafeArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.ByValArray?displayProperty=nameWithType>, <xref:System.Runtime.InteropServices.UnmanagedType.LPArray?displayProperty=nameWithType>, or <xref:System.Runtime.InteropServices.UnmanagedType.CustomMarshaler?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="6dd57-156">Uniquement des constructions de marshaling non managé peuvent être effectuées à l’aide de cette méthode.</span><span class="sxs-lookup"><span data-stu-id="6dd57-156">Only unmanaged marshal constructs can be made using this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6dd57-157">L'argument n'est pas un type natif simple.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-157">The argument is not a simple native type.</span>
          </span>
        </exception>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="ElementCount">
      <MemberSignature Language="C#" Value="public int ElementCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ElementCount" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.ElementCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ElementCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ElementCount { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dd57-158">Obtient un élément numérique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-158">Gets a number element.</span>
          </span>
          <span data-ttu-id="6dd57-159">Cette propriété est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-159">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dd57-160">Entier indiquant le nombre d'éléments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-160">An integer indicating the element count.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dd57-161">Il existe un `ElementCount` uniquement s’il existe un `NativeTypeFixedArray`.</span><span class="sxs-lookup"><span data-stu-id="6dd57-161">There is an `ElementCount` only if there is a `NativeTypeFixedArray`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6dd57-162">L'argument n'est pas un nombre d'éléments non managés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-162">The argument is not an unmanaged element count.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetUnmanagedType">
      <MemberSignature Language="C#" Value="public System.Runtime.InteropServices.UnmanagedType GetUnmanagedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.InteropServices.UnmanagedType GetUnmanagedType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.GetUnmanagedType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GetUnmanagedType As UnmanagedType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::InteropServices::UnmanagedType GetUnmanagedType { System::Runtime::InteropServices::UnmanagedType get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.InteropServices.UnmanagedType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dd57-163">Indique un type non managé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-163">Indicates an unmanaged type.</span>
          </span>
          <span data-ttu-id="6dd57-164">Cette propriété est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-164">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dd57-165">Objet <see cref="T:System.Runtime.InteropServices.UnmanagedType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-165">An <see cref="T:System.Runtime.InteropServices.UnmanagedType" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dd57-166">Le `GetUnmanagedType` propriété est une fonction d’accesseur pour le type natif.</span><span class="sxs-lookup"><span data-stu-id="6dd57-166">The `GetUnmanagedType` property is an accessor function for the native type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.InteropServices.UnmanagedType" />
      </Docs>
    </Member>
    <Member MemberName="IIDGuid">
      <MemberSignature Language="C#" Value="public Guid IIDGuid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Guid IIDGuid" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.UnmanagedMarshal.IIDGuid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IIDGuid As Guid" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Guid IIDGuid { Guid get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="6dd57-167">Obtient un GUID.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-167">Gets a GUID.</span>
          </span>
          <span data-ttu-id="6dd57-168">Cette propriété est en lecture seule.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-168">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="6dd57-169">Objet <see cref="T:System.Guid" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-169">A <see cref="T:System.Guid" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6dd57-170">Cette propriété retourne toujours Guid.Empty.</span><span class="sxs-lookup"><span data-stu-id="6dd57-170">This property always returns Guid.Empty.</span></span> <span data-ttu-id="6dd57-171">Cette propriété peut être supprimée dans une version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="6dd57-171">This property might be removed in a future release.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="6dd57-172">L'argument n'est pas un marshaleur personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="6dd57-172">The argument is not a custom marshaler.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Guid" />
      </Docs>
    </Member>
  </Members>
</Type>