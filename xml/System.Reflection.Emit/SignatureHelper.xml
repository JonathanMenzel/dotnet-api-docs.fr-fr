<Type Name="SignatureHelper" FullName="System.Reflection.Emit.SignatureHelper">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3deceb9b861b8fb53badecf66070a80228e50fc2" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="fr-FR" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51870272" /></Metadata><TypeSignature Language="C#" Value="public sealed class SignatureHelper : System.Runtime.InteropServices._SignatureHelper" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit SignatureHelper extends System.Object implements class System.Runtime.InteropServices._SignatureHelper" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.SignatureHelper" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SignatureHelper&#xA;Implements _SignatureHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class SignatureHelper sealed : System::Runtime::InteropServices::_SignatureHelper" />
  <TypeSignature Language="F#" Value="type SignatureHelper = class&#xA;    interface _SignatureHelper" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._SignatureHelper</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._SignatureHelper))</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="383ea-101">Fournit des méthodes utilisées pour la création de signatures.</span><span class="sxs-lookup"><span data-stu-id="383ea-101">Provides methods for building signatures.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="383ea-102">Utilisez le <xref:System.Reflection.Emit.SignatureHelper> classe pour créer un objet blob de signature qui peut être passé à la <xref:System.Reflection.Emit.DynamicILInfo.SetLocalSignature%2A> méthode de la <xref:System.Reflection.Emit.DynamicILInfo> classe.</span><span class="sxs-lookup"><span data-stu-id="383ea-102">Use the <xref:System.Reflection.Emit.SignatureHelper> class to create a signature blob that can be passed to the <xref:System.Reflection.Emit.DynamicILInfo.SetLocalSignature%2A> method of the <xref:System.Reflection.Emit.DynamicILInfo> class.</span></span> <span data-ttu-id="383ea-103">Un <xref:System.Reflection.Emit.SignatureHelper> objet peut également être transmis à la <xref:System.Reflection.Emit.ILGenerator.Emit%28System.Reflection.Emit.OpCode%2CSystem.Reflection.Emit.SignatureHelper%29?displayProperty=nameWithType> surcharge de méthode pour insérer une instruction et un jeton de signature dans un flux de Microsoft intermediate language (MSIL).</span><span class="sxs-lookup"><span data-stu-id="383ea-103">A <xref:System.Reflection.Emit.SignatureHelper> object can also be passed to the <xref:System.Reflection.Emit.ILGenerator.Emit%28System.Reflection.Emit.OpCode%2CSystem.Reflection.Emit.SignatureHelper%29?displayProperty=nameWithType> method overload to insert an instruction and a signature token into a Microsoft intermediate language (MSIL) stream.</span></span> <span data-ttu-id="383ea-104">Pour plus d’informations sur les blobs de signature et les métadonnées de signature, consultez la documentation de métadonnées ECMA Partition II.</span><span class="sxs-lookup"><span data-stu-id="383ea-104">For information on signature blobs and signature metadata, see the ECMA Partition II Metadata documentation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="383ea-105">La documentation ECMA Partition II est disponible en ligne. consultez [ECMA c# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) sur MSDN et [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) sur le site Web d’Ecma International.</span><span class="sxs-lookup"><span data-stu-id="383ea-105">The ECMA Partition II documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](https://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](https://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="AddArgument">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="383ea-106">Ajoute un argument à la signature.</span><span class="sxs-lookup"><span data-stu-id="383ea-106">Adds an argument to the signature.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddArgument">
      <MemberSignature Language="C#" Value="public void AddArgument (Type clsArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArgument(class System.Type clsArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddArgument(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArgument (clsArgument As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArgument(Type ^ clsArgument);" />
      <MemberSignature Language="F#" Value="member this.AddArgument : Type -&gt; unit" Usage="signatureHelper.AddArgument clsArgument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="clsArgument" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="clsArgument"><span data-ttu-id="383ea-107">Type de l’argument.</span><span class="sxs-lookup"><span data-stu-id="383ea-107">The type of the argument.</span></span></param>
        <summary><span data-ttu-id="383ea-108">Ajoute un argument à la signature.</span><span class="sxs-lookup"><span data-stu-id="383ea-108">Adds an argument to the signature.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="383ea-109">Pour ajouter un argument avec les modificateurs personnalisés facultatifs ou requis, utilisez le <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> surcharge de méthode.</span><span class="sxs-lookup"><span data-stu-id="383ea-109">To add an argument with optional or required custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="383ea-110">La signature a déjà été finalisée.</span><span class="sxs-lookup"><span data-stu-id="383ea-110">The signature has already been finished.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="383ea-111"><paramref name="clsArgument" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-111"><paramref name="clsArgument" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddArgument">
      <MemberSignature Language="C#" Value="public void AddArgument (Type argument, bool pinned);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArgument(class System.Type argument, bool pinned) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArgument (argument As Type, pinned As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArgument(Type ^ argument, bool pinned);" />
      <MemberSignature Language="F#" Value="member this.AddArgument : Type * bool -&gt; unit" Usage="signatureHelper.AddArgument (argument, pinned)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Type" />
        <Parameter Name="pinned" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="383ea-112">Type de l'argument.</span><span class="sxs-lookup"><span data-stu-id="383ea-112">The argument type.</span></span></param>
        <param name="pinned"><span data-ttu-id="383ea-113"><see langword="true" /> si l'argument est épinglé ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-113"><see langword="true" /> if the argument is pinned; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="383ea-114">Ajoute un argument du type spécifié à la signature, en spécifiant s'il doit est épinglé.</span><span class="sxs-lookup"><span data-stu-id="383ea-114">Adds an argument of the specified type to the signature, specifying whether the argument is pinned.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="383ea-115">Pour ajouter un argument avec les modificateurs personnalisés facultatifs ou requis, utilisez le <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> surcharge de méthode.</span><span class="sxs-lookup"><span data-stu-id="383ea-115">To add an argument with optional or required custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="383ea-116"><paramref name="argument" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-116"><paramref name="argument" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddArgument">
      <MemberSignature Language="C#" Value="public void AddArgument (Type argument, Type[] requiredCustomModifiers, Type[] optionalCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArgument(class System.Type argument, class System.Type[] requiredCustomModifiers, class System.Type[] optionalCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddArgument(System.Type,System.Type[],System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArgument (argument As Type, requiredCustomModifiers As Type(), optionalCustomModifiers As Type())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArgument(Type ^ argument, cli::array &lt;Type ^&gt; ^ requiredCustomModifiers, cli::array &lt;Type ^&gt; ^ optionalCustomModifiers);" />
      <MemberSignature Language="F#" Value="member this.AddArgument : Type * Type[] * Type[] -&gt; unit" Usage="signatureHelper.AddArgument (argument, requiredCustomModifiers, optionalCustomModifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="argument" Type="System.Type" />
        <Parameter Name="requiredCustomModifiers" Type="System.Type[]" />
        <Parameter Name="optionalCustomModifiers" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="argument"><span data-ttu-id="383ea-117">Type de l'argument.</span><span class="sxs-lookup"><span data-stu-id="383ea-117">The argument type.</span></span></param>
        <param name="requiredCustomModifiers"><span data-ttu-id="383ea-118">Tableau des types représentant les modificateurs personnalisés requis pour l'argument, tels que <see cref="T:System.Runtime.CompilerServices.IsConst" /> ou <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-118">An array of types representing the required custom modifiers for the argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="383ea-119">Si l'argument ne possède pas de modificateur personnalisé requis, spécifiez <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-119">If the argument has no required custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="optionalCustomModifiers"><span data-ttu-id="383ea-120">Tableau des types représentant les modificateurs personnalisés facultatifs pour l'argument, tels que <see cref="T:System.Runtime.CompilerServices.IsConst" /> ou <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-120">An array of types representing the optional custom modifiers for the argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="383ea-121">Si l'argument ne possède pas de modificateur personnalisé facultatif, spécifiez <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-121">If the argument has no optional custom modifiers, specify <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="383ea-122">Ajoute un argument à la signature, avec les modificateurs personnalisés spécifiés.</span><span class="sxs-lookup"><span data-stu-id="383ea-122">Adds an argument to the signature, with the specified custom modifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="383ea-123">Consultez le <xref:System.Runtime.CompilerServices> espace de noms pour les classes qui représentent des modificateurs personnalisés.</span><span class="sxs-lookup"><span data-stu-id="383ea-123">See the <xref:System.Runtime.CompilerServices> namespace for classes that represent custom modifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="383ea-124"><paramref name="argument" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-124"><paramref name="argument" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="383ea-125">- ou -</span><span class="sxs-lookup"><span data-stu-id="383ea-125">-or-</span></span> 
<span data-ttu-id="383ea-126">Un élément de <paramref name="requiredCustomModifiers" /> est <paramref name="optionalCustomModifiers" /> ou <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-126">An element of <paramref name="requiredCustomModifiers" /> or <paramref name="optionalCustomModifiers" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="383ea-127">La signature a déjà été finalisée.</span><span class="sxs-lookup"><span data-stu-id="383ea-127">The signature has already been finished.</span></span>  
  
<span data-ttu-id="383ea-128">- ou -</span><span class="sxs-lookup"><span data-stu-id="383ea-128">-or-</span></span> 
<span data-ttu-id="383ea-129">Un des modificateurs personnalisés spécifiés est un type de tableau.</span><span class="sxs-lookup"><span data-stu-id="383ea-129">One of the specified custom modifiers is an array type.</span></span>  
  
<span data-ttu-id="383ea-130">- ou -</span><span class="sxs-lookup"><span data-stu-id="383ea-130">-or-</span></span> 
<span data-ttu-id="383ea-131">Un des modificateurs personnalisés spécifiés est un type générique ouvert.</span><span class="sxs-lookup"><span data-stu-id="383ea-131">One of the specified custom modifiers is an open generic type.</span></span> <span data-ttu-id="383ea-132">Cela signifie que la propriété <see cref="P:System.Type.ContainsGenericParameters" /> est <see langword="true" /> pour le modificateur personnalisé.</span><span class="sxs-lookup"><span data-stu-id="383ea-132">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddArguments">
      <MemberSignature Language="C#" Value="public void AddArguments (Type[] arguments, Type[][] requiredCustomModifiers, Type[][] optionalCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddArguments(class System.Type[] arguments, class System.Type[][] requiredCustomModifiers, class System.Type[][] optionalCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddArguments(System.Type[],System.Type[][],System.Type[][])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddArguments (arguments As Type(), requiredCustomModifiers As Type()(), optionalCustomModifiers As Type()())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddArguments(cli::array &lt;Type ^&gt; ^ arguments, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ requiredCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ optionalCustomModifiers);" />
      <MemberSignature Language="F#" Value="member this.AddArguments : Type[] * Type[][] * Type[][] -&gt; unit" Usage="signatureHelper.AddArguments (arguments, requiredCustomModifiers, optionalCustomModifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Type[]" />
        <Parameter Name="requiredCustomModifiers" Type="System.Type[][]" />
        <Parameter Name="optionalCustomModifiers" Type="System.Type[][]" />
      </Parameters>
      <Docs>
        <param name="arguments"><span data-ttu-id="383ea-133">Types des arguments à ajouter.</span><span class="sxs-lookup"><span data-stu-id="383ea-133">The types of the arguments to be added.</span></span></param>
        <param name="requiredCustomModifiers"><span data-ttu-id="383ea-134">Tableau de tableaux de types.</span><span class="sxs-lookup"><span data-stu-id="383ea-134">An array of arrays of types.</span></span> <span data-ttu-id="383ea-135">Chaque tableau de types représente les modificateurs personnalisés requis pour l'argument correspondant, tel que <see cref="T:System.Runtime.CompilerServices.IsConst" /> ou <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-135">Each array of types represents the required custom modifiers for the corresponding argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="383ea-136">Si un argument particulier ne possède pas de modificateur personnalisé requis, spécifiez <see langword="null" /> plutôt qu'un tableau de types.</span><span class="sxs-lookup"><span data-stu-id="383ea-136">If a particular argument has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="383ea-137">Si aucun des arguments ne possède de modificateur personnalisé requis, spécifiez <see langword="null" /> plutôt qu'un tableau de tableaux.</span><span class="sxs-lookup"><span data-stu-id="383ea-137">If none of the arguments have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <param name="optionalCustomModifiers"><span data-ttu-id="383ea-138">Tableau de tableaux de types.</span><span class="sxs-lookup"><span data-stu-id="383ea-138">An array of arrays of types.</span></span> <span data-ttu-id="383ea-139">Chaque tableau de types représente les modificateurs personnalisés facultatifs pour l'argument correspondant, tel que <see cref="T:System.Runtime.CompilerServices.IsConst" /> ou <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-139">Each array of types represents the optional custom modifiers for the corresponding argument, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="383ea-140">Si un argument particulier ne possède pas de modificateur personnalisé facultatif, spécifiez <see langword="null" /> plutôt qu'un tableau de types.</span><span class="sxs-lookup"><span data-stu-id="383ea-140">If a particular argument has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="383ea-141">Si aucun des arguments ne possède de modificateur personnalisé facultatif, spécifiez <see langword="null" /> plutôt qu'un tableau de tableaux.</span><span class="sxs-lookup"><span data-stu-id="383ea-141">If none of the arguments have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <summary><span data-ttu-id="383ea-142">Ajoute un jeu d'arguments à la signature, avec les modificateurs personnalisés spécifiés.</span><span class="sxs-lookup"><span data-stu-id="383ea-142">Adds a set of arguments to the signature, with the specified custom modifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="383ea-143">Les arguments sont ajoutés à la fin de la signature, dans l’ordre des éléments de `arguments`.</span><span class="sxs-lookup"><span data-stu-id="383ea-143">The arguments are added to the end of the signature, in order of the elements of `arguments`.</span></span>  
  
 <span data-ttu-id="383ea-144">Consultez le <xref:System.Runtime.CompilerServices> espace de noms pour les classes qui représentent des modificateurs personnalisés.</span><span class="sxs-lookup"><span data-stu-id="383ea-144">See the <xref:System.Runtime.CompilerServices> namespace for classes that represent custom modifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="383ea-145">Un élément de <paramref name="arguments" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-145">An element of <paramref name="arguments" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="383ea-146">- ou -</span><span class="sxs-lookup"><span data-stu-id="383ea-146">-or-</span></span> 
<span data-ttu-id="383ea-147">Un des modificateurs personnalisés spécifiés est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-147">One of the specified custom modifiers is <see langword="null" />.</span></span> <span data-ttu-id="383ea-148">(Toutefois, <see langword="null" /> peut être spécifié pour le tableau de modificateurs personnalisés de tout argument.)</span><span class="sxs-lookup"><span data-stu-id="383ea-148">(However, <see langword="null" /> can be specified for the array of custom modifiers for any argument.)</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="383ea-149">La signature a déjà été finalisée.</span><span class="sxs-lookup"><span data-stu-id="383ea-149">The signature has already been finished.</span></span>  
  
<span data-ttu-id="383ea-150">- ou -</span><span class="sxs-lookup"><span data-stu-id="383ea-150">-or-</span></span> 
<span data-ttu-id="383ea-151">Un des modificateurs personnalisés spécifiés est un type de tableau.</span><span class="sxs-lookup"><span data-stu-id="383ea-151">One of the specified custom modifiers is an array type.</span></span>  
  
<span data-ttu-id="383ea-152">- ou -</span><span class="sxs-lookup"><span data-stu-id="383ea-152">-or-</span></span> 
<span data-ttu-id="383ea-153">Un des modificateurs personnalisés spécifiés est un type générique ouvert.</span><span class="sxs-lookup"><span data-stu-id="383ea-153">One of the specified custom modifiers is an open generic type.</span></span> <span data-ttu-id="383ea-154">Cela signifie que la propriété <see cref="P:System.Type.ContainsGenericParameters" /> est <see langword="true" /> pour le modificateur personnalisé.</span><span class="sxs-lookup"><span data-stu-id="383ea-154">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span></span>  
  
<span data-ttu-id="383ea-155">- ou -</span><span class="sxs-lookup"><span data-stu-id="383ea-155">-or-</span></span> 
<span data-ttu-id="383ea-156">La taille de <paramref name="requiredCustomModifiers" /> ou <paramref name="optionalCustomModifiers" /> n’est pas égale à la taille de <paramref name="arguments" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-156">The size of <paramref name="requiredCustomModifiers" /> or <paramref name="optionalCustomModifiers" /> does not equal the size of <paramref name="arguments" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="AddSentinel">
      <MemberSignature Language="C#" Value="public void AddSentinel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddSentinel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.AddSentinel" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSentinel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddSentinel();" />
      <MemberSignature Language="F#" Value="member this.AddSentinel : unit -&gt; unit" Usage="signatureHelper.AddSentinel " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="383ea-157">Marque la fin d'une partie fixe de vararg.</span><span class="sxs-lookup"><span data-stu-id="383ea-157">Marks the end of a vararg fixed part.</span></span> <span data-ttu-id="383ea-158">Cela est utilisé uniquement lorsque l'appelant crée un site d'appel de signatures vararg.</span><span class="sxs-lookup"><span data-stu-id="383ea-158">This is only used if the caller is creating a vararg signature call site.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="signatureHelper.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="383ea-159">Objet auquel cette instance doit être comparée.</span><span class="sxs-lookup"><span data-stu-id="383ea-159">The object with which this instance should be compared.</span></span></param>
        <summary><span data-ttu-id="383ea-160">Vérifie si cette instance est égale à l'objet donné.</span><span class="sxs-lookup"><span data-stu-id="383ea-160">Checks if this instance is equal to the given object.</span></span></summary>
        <returns><span data-ttu-id="383ea-161"><see langword="true" /> si l'objet donné est un <see langword="SignatureHelper" /> et s'il représente la même signature ; sinon <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-161"><see langword="true" /> if the given object is a <see langword="SignatureHelper" /> and represents the same signature; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFieldSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetFieldSigHelper (System.Reflection.Module mod);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetFieldSigHelper(class System.Reflection.Module mod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetFieldSigHelper(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFieldSigHelper (mod As Module) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetFieldSigHelper(System::Reflection::Module ^ mod);" />
      <MemberSignature Language="F#" Value="static member GetFieldSigHelper : System.Reflection.Module -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetFieldSigHelper mod" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="383ea-162">Module dynamique qui contient le champ pour lequel <see langword="SignatureHelper" /> est demandé.</span><span class="sxs-lookup"><span data-stu-id="383ea-162">The dynamic module that contains the field for which the <see langword="SignatureHelper" /> is requested.</span></span></param>
        <summary><span data-ttu-id="383ea-163">Retourne une assistance de signature pour un champ.</span><span class="sxs-lookup"><span data-stu-id="383ea-163">Returns a signature helper for a field.</span></span></summary>
        <returns><span data-ttu-id="383ea-164">Objet <see langword="SignatureHelper" /> d'un champ.</span><span class="sxs-lookup"><span data-stu-id="383ea-164">The <see langword="SignatureHelper" /> object for a field.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="signatureHelper.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="383ea-165">Crée et retourne un code de hachage pour cette instance.</span><span class="sxs-lookup"><span data-stu-id="383ea-165">Creates and returns a hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="383ea-166">Retourne le code de hachage en fonction du nom.</span><span class="sxs-lookup"><span data-stu-id="383ea-166">Returns the hash code based on the name.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="383ea-167">Le code de hachage est créé à partir du nom de cette instance, donc la valeur de retour est la même que si le `GetHashCode` méthode ont été appelées sur la valeur de la `Name` propriété.</span><span class="sxs-lookup"><span data-stu-id="383ea-167">The hash code is created from the name of this instance, so the return value is the same as if the `GetHashCode` method were called on the value of the `Name` property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLocalVarSigHelper">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="383ea-168">Retourne une assistance de signature pour une variable locale.</span><span class="sxs-lookup"><span data-stu-id="383ea-168">Returns a signature helper for a local variable.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLocalVarSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalVarSigHelper () As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetLocalVarSigHelper();" />
      <MemberSignature Language="F#" Value="static member GetLocalVarSigHelper : unit -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="383ea-169">Retourne une assistance de signature pour une variable locale.</span><span class="sxs-lookup"><span data-stu-id="383ea-169">Returns a signature helper for a local variable.</span></span></summary>
        <returns><span data-ttu-id="383ea-170"><see cref="T:System.Reflection.Emit.SignatureHelper" /> d'une variable locale.</span><span class="sxs-lookup"><span data-stu-id="383ea-170">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> for a local variable.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLocalVarSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper (System.Reflection.Module mod);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetLocalVarSigHelper(class System.Reflection.Module mod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper(System.Reflection.Module)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLocalVarSigHelper (mod As Module) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetLocalVarSigHelper(System::Reflection::Module ^ mod);" />
      <MemberSignature Language="F#" Value="static member GetLocalVarSigHelper : System.Reflection.Module -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetLocalVarSigHelper mod" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="383ea-171">Module dynamique qui contient la variable locale pour laquelle <see langword="SignatureHelper" /> est demandé.</span><span class="sxs-lookup"><span data-stu-id="383ea-171">The dynamic module that contains the local variable for which the <see langword="SignatureHelper" /> is requested.</span></span></param>
        <summary><span data-ttu-id="383ea-172">Retourne une assistance de signature pour une variable locale.</span><span class="sxs-lookup"><span data-stu-id="383ea-172">Returns a signature helper for a local variable.</span></span></summary>
        <returns><span data-ttu-id="383ea-173">Objet <see langword="SignatureHelper" /> d'une variable locale.</span><span class="sxs-lookup"><span data-stu-id="383ea-173">The <see langword="SignatureHelper" /> object for a local variable.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMethodSigHelper">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="383ea-174">Retourne une assistance de signature pour une méthode.</span><span class="sxs-lookup"><span data-stu-id="383ea-174">Returns a signature helper for a method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.CallingConventions callingConvention, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.CallingConventions,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (callingConvention As CallingConventions, returnType As Type) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Reflection::CallingConventions callingConvention, Type ^ returnType);" />
      <MemberSignature Language="F#" Value="static member GetMethodSigHelper : System.Reflection.CallingConventions * Type -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetMethodSigHelper (callingConvention, returnType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="callingConvention"><span data-ttu-id="383ea-175">Convention d’appel de la méthode.</span><span class="sxs-lookup"><span data-stu-id="383ea-175">The calling convention of the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="383ea-176">Le type de retour de la méthode, ou <see langword="null" /> pour une procédure (<see langword="Sub" /> avec type de retour void en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="383ea-176">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span></span></param>
        <summary><span data-ttu-id="383ea-177">Retourne une assistance de signature pour une méthode donnée en fonction des conventions d'appel et type de retour de cette dernière.</span><span class="sxs-lookup"><span data-stu-id="383ea-177">Returns a signature helper for a method given the method's calling convention and return type.</span></span></summary>
        <returns><span data-ttu-id="383ea-178">L’objet <see langword="SignatureHelper" /> pour une méthode.</span><span class="sxs-lookup"><span data-stu-id="383ea-178">The <see langword="SignatureHelper" /> object for a method.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Runtime.InteropServices.CallingConvention unmanagedCallingConvention, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(valuetype System.Runtime.InteropServices.CallingConvention unmanagedCallingConvention, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Runtime.InteropServices.CallingConvention,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (unmanagedCallingConvention As CallingConvention, returnType As Type) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Runtime::InteropServices::CallingConvention unmanagedCallingConvention, Type ^ returnType);" />
      <MemberSignature Language="F#" Value="static member GetMethodSigHelper : System.Runtime.InteropServices.CallingConvention * Type -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetMethodSigHelper (unmanagedCallingConvention, returnType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unmanagedCallingConvention" Type="System.Runtime.InteropServices.CallingConvention" />
        <Parameter Name="returnType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="unmanagedCallingConvention"><span data-ttu-id="383ea-179">Convention d'appel non managée de la méthode.</span><span class="sxs-lookup"><span data-stu-id="383ea-179">The unmanaged calling convention of the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="383ea-180">Le type de retour de la méthode, ou <see langword="null" /> pour une procédure (<see langword="Sub" /> avec type de retour void en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="383ea-180">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span></span></param>
        <summary><span data-ttu-id="383ea-181">Retourne une assistance de signature pour une méthode donnée en fonction des conventions d'appel non managées et type de retour de cette dernière.</span><span class="sxs-lookup"><span data-stu-id="383ea-181">Returns a signature helper for a method given the method's unmanaged calling convention and return type.</span></span></summary>
        <returns><span data-ttu-id="383ea-182">L’objet <see langword="SignatureHelper" /> pour une méthode.</span><span class="sxs-lookup"><span data-stu-id="383ea-182">The <see langword="SignatureHelper" /> object for a method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="383ea-183"><paramref name="unmanagedCallConv" /> est une convention d'appel non managée inconnue.</span><span class="sxs-lookup"><span data-stu-id="383ea-183"><paramref name="unmanagedCallConv" /> is an unknown unmanaged calling convention.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.Module mod, System.Reflection.CallingConventions callingConvention, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(class System.Reflection.Module mod, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (mod As Module, callingConvention As CallingConventions, returnType As Type) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Reflection::Module ^ mod, System::Reflection::CallingConventions callingConvention, Type ^ returnType);" />
      <MemberSignature Language="F#" Value="static member GetMethodSigHelper : System.Reflection.Module * System.Reflection.CallingConventions * Type -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetMethodSigHelper (mod, callingConvention, returnType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="383ea-184">Le <see cref="T:System.Reflection.Emit.ModuleBuilder" /> qui contient la méthode pour laquelle la <see langword="SignatureHelper" /> est demandée.</span><span class="sxs-lookup"><span data-stu-id="383ea-184">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the method for which the <see langword="SignatureHelper" /> is requested.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="383ea-185">Convention d’appel de la méthode.</span><span class="sxs-lookup"><span data-stu-id="383ea-185">The calling convention of the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="383ea-186">Le type de retour de la méthode, ou <see langword="null" /> pour une procédure (<see langword="Sub" /> avec type de retour void en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="383ea-186">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span></span></param>
        <summary><span data-ttu-id="383ea-187">Retourne une fonction d’assistance de signature pour une méthode en fonction du module de la méthode, de la convention d’appel et du type de retour.</span><span class="sxs-lookup"><span data-stu-id="383ea-187">Returns a signature helper for a method given the method's module, calling convention, and return type.</span></span></summary>
        <returns><span data-ttu-id="383ea-188">L’objet <see langword="SignatureHelper" /> pour une méthode.</span><span class="sxs-lookup"><span data-stu-id="383ea-188">The <see langword="SignatureHelper" /> object for a method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="383ea-189"><paramref name="mod" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-189"><paramref name="mod" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="383ea-190"><paramref name="mod" /> n'est pas un <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-190"><paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.Module mod, System.Runtime.InteropServices.CallingConvention unmanagedCallConv, Type returnType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(class System.Reflection.Module mod, valuetype System.Runtime.InteropServices.CallingConvention unmanagedCallConv, class System.Type returnType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Runtime.InteropServices.CallingConvention,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (mod As Module, unmanagedCallConv As CallingConvention, returnType As Type) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Reflection::Module ^ mod, System::Runtime::InteropServices::CallingConvention unmanagedCallConv, Type ^ returnType);" />
      <MemberSignature Language="F#" Value="static member GetMethodSigHelper : System.Reflection.Module * System.Runtime.InteropServices.CallingConvention * Type -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetMethodSigHelper (mod, unmanagedCallConv, returnType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="unmanagedCallConv" Type="System.Runtime.InteropServices.CallingConvention" />
        <Parameter Name="returnType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="383ea-191">Le <see cref="T:System.Reflection.Emit.ModuleBuilder" /> qui contient la méthode pour laquelle la <see langword="SignatureHelper" /> est demandée.</span><span class="sxs-lookup"><span data-stu-id="383ea-191">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the method for which the <see langword="SignatureHelper" /> is requested.</span></span></param>
        <param name="unmanagedCallConv"><span data-ttu-id="383ea-192">Convention d'appel non managée de la méthode.</span><span class="sxs-lookup"><span data-stu-id="383ea-192">The unmanaged calling convention of the method.</span></span></param>
        <param name="returnType"><span data-ttu-id="383ea-193">Le type de retour de la méthode, ou <see langword="null" /> pour une procédure (<see langword="Sub" /> avec type de retour void en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="383ea-193">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span></span></param>
        <summary><span data-ttu-id="383ea-194">Retourne une assistance de signature pour une méthode donnée en fonction des module, convention d'appel non managée et type de retour de cette dernière.</span><span class="sxs-lookup"><span data-stu-id="383ea-194">Returns a signature helper for a method given the method's module, unmanaged calling convention, and return type.</span></span></summary>
        <returns><span data-ttu-id="383ea-195">L’objet <see langword="SignatureHelper" /> pour une méthode.</span><span class="sxs-lookup"><span data-stu-id="383ea-195">The <see langword="SignatureHelper" /> object for a method.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="383ea-196"><paramref name="mod" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-196"><paramref name="mod" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="383ea-197"><paramref name="mod" /> n'est pas un <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-197"><paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span>  
  
<span data-ttu-id="383ea-198">- ou -</span><span class="sxs-lookup"><span data-stu-id="383ea-198">-or-</span></span> 
 <span data-ttu-id="383ea-199"><paramref name="unmanagedCallConv" /> est une convention d'appel non managée inconnue.</span><span class="sxs-lookup"><span data-stu-id="383ea-199"><paramref name="unmanagedCallConv" /> is an unknown unmanaged calling convention.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodSigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetMethodSigHelper (System.Reflection.Module mod, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetMethodSigHelper(class System.Reflection.Module mod, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper(System.Reflection.Module,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetMethodSigHelper (mod As Module, returnType As Type, parameterTypes As Type()) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetMethodSigHelper(System::Reflection::Module ^ mod, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="static member GetMethodSigHelper : System.Reflection.Module * Type * Type[] -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetMethodSigHelper (mod, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="383ea-200">Le <see cref="T:System.Reflection.Emit.ModuleBuilder" /> qui contient la méthode pour laquelle la <see langword="SignatureHelper" /> est demandée.</span><span class="sxs-lookup"><span data-stu-id="383ea-200">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the method for which the <see langword="SignatureHelper" /> is requested.</span></span></param>
        <param name="returnType"><span data-ttu-id="383ea-201">Le type de retour de la méthode, ou <see langword="null" /> pour une procédure (<see langword="Sub" /> avec type de retour void en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="383ea-201">The return type of the method, or <see langword="null" /> for a void return type (<see langword="Sub" /> procedure in Visual Basic).</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="383ea-202">Types des arguments de la méthode, ou <see langword="null" /> si la méthode ne possède pas d'arguments.</span><span class="sxs-lookup"><span data-stu-id="383ea-202">The types of the arguments of the method, or <see langword="null" /> if the method has no arguments.</span></span></param>
        <summary><span data-ttu-id="383ea-203">Retourne une assistance de signature pour une convention d'appel standard, en fonction du module, du type de retour et des types d'arguments de la méthode.</span><span class="sxs-lookup"><span data-stu-id="383ea-203">Returns a signature helper for a method with a standard calling convention, given the method's module, return type, and argument types.</span></span></summary>
        <returns><span data-ttu-id="383ea-204">L’objet <see langword="SignatureHelper" /> pour une méthode.</span><span class="sxs-lookup"><span data-stu-id="383ea-204">The <see langword="SignatureHelper" /> object for a method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="383ea-205">Cette surcharge crée une signature avec une convention d’appel standard.</span><span class="sxs-lookup"><span data-stu-id="383ea-205">This overload creates a signature with a standard calling convention.</span></span>  
  
 <span data-ttu-id="383ea-206">Pour créer une signature de méthode avec les modificateurs personnalisés, utilisez le <xref:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper%28System.Reflection.Module%2CSystem.Reflection.CallingConventions%2CSystem.Type%29> surcharge de méthode, puis utiliser le <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> ou <xref:System.Reflection.Emit.SignatureHelper.AddArguments%28System.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29> des surcharges de méthode pour ajouter des arguments avec des modificateurs personnalisés.</span><span class="sxs-lookup"><span data-stu-id="383ea-206">To create a method signature with custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.GetMethodSigHelper%28System.Reflection.Module%2CSystem.Reflection.CallingConventions%2CSystem.Type%29> method overload and then use the <xref:System.Reflection.Emit.SignatureHelper.AddArgument%28System.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%29> or <xref:System.Reflection.Emit.SignatureHelper.AddArguments%28System.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29> method overloads to add arguments with custom modifiers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="383ea-207"><paramref name="mod" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-207"><paramref name="mod" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="383ea-208">- ou -</span><span class="sxs-lookup"><span data-stu-id="383ea-208">-or-</span></span> 
<span data-ttu-id="383ea-209">Un élément de <paramref name="parameterTypes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-209">An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="383ea-210"><paramref name="mod" /> n'est pas un <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-210"><paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPropertySigHelper">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="383ea-211">Retourne une assistance de signature pour une propriété.</span><span class="sxs-lookup"><span data-stu-id="383ea-211">Returns a signature helper for a property.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPropertySigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetPropertySigHelper (System.Reflection.Module mod, Type returnType, Type[] parameterTypes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetPropertySigHelper(class System.Reflection.Module mod, class System.Type returnType, class System.Type[] parameterTypes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertySigHelper (mod As Module, returnType As Type, parameterTypes As Type()) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetPropertySigHelper(System::Reflection::Module ^ mod, Type ^ returnType, cli::array &lt;Type ^&gt; ^ parameterTypes);" />
      <MemberSignature Language="F#" Value="static member GetPropertySigHelper : System.Reflection.Module * Type * Type[] -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetPropertySigHelper (mod, returnType, parameterTypes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="383ea-212"><see cref="T:System.Reflection.Emit.ModuleBuilder" /> qui contient la propriété pour laquelle <see cref="T:System.Reflection.Emit.SignatureHelper" /> est demandé.</span><span class="sxs-lookup"><span data-stu-id="383ea-212">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the property for which the <see cref="T:System.Reflection.Emit.SignatureHelper" /> is requested.</span></span></param>
        <param name="returnType"><span data-ttu-id="383ea-213">Type de propriété.</span><span class="sxs-lookup"><span data-stu-id="383ea-213">The property type.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="383ea-214">Types d'arguments, ou <see langword="null" /> si la propriété ne possède pas d'argument.</span><span class="sxs-lookup"><span data-stu-id="383ea-214">The argument types, or <see langword="null" /> if the property has no arguments.</span></span></param>
        <summary><span data-ttu-id="383ea-215">Retourne une assistance de signature pour une propriété, en fonction du module dynamique qui contient la propriété, du type de propriété et des arguments de la propriété.</span><span class="sxs-lookup"><span data-stu-id="383ea-215">Returns a signature helper for a property, given the dynamic module that contains the property, the property type, and the property arguments.</span></span></summary>
        <returns><span data-ttu-id="383ea-216">Objet <see cref="T:System.Reflection.Emit.SignatureHelper" /> d'une propriété.</span><span class="sxs-lookup"><span data-stu-id="383ea-216">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> object for a property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="383ea-217">Pour créer une assistance de signature pour une propriété avec des modificateurs personnalisés facultatifs ou requis, utilisez le <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29> surcharge de méthode.</span><span class="sxs-lookup"><span data-stu-id="383ea-217">To create a signature helper for a property with optional or required custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%2CSystem.Type%5B%5D%5B%5D%2CSystem.Type%5B%5D%5B%5D%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="383ea-218"><paramref name="mod" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-218"><paramref name="mod" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="383ea-219">- ou -</span><span class="sxs-lookup"><span data-stu-id="383ea-219">-or-</span></span> 
<span data-ttu-id="383ea-220">Un élément de <paramref name="parameterTypes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-220">An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="383ea-221"><paramref name="mod" /> n'est pas un <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-221"><paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertySigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetPropertySigHelper (System.Reflection.Module mod, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetPropertySigHelper(class System.Reflection.Module mod, class System.Type returnType, class System.Type[] requiredReturnTypeCustomModifiers, class System.Type[] optionalReturnTypeCustomModifiers, class System.Type[] parameterTypes, class System.Type[][] requiredParameterTypeCustomModifiers, class System.Type[][] optionalParameterTypeCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertySigHelper (mod As Module, returnType As Type, requiredReturnTypeCustomModifiers As Type(), optionalReturnTypeCustomModifiers As Type(), parameterTypes As Type(), requiredParameterTypeCustomModifiers As Type()(), optionalParameterTypeCustomModifiers As Type()()) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetPropertySigHelper(System::Reflection::Module ^ mod, Type ^ returnType, cli::array &lt;Type ^&gt; ^ requiredReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ optionalReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ parameterTypes, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ requiredParameterTypeCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="F#" Value="static member GetPropertySigHelper : System.Reflection.Module * Type * Type[] * Type[] * Type[] * Type[][] * Type[][] -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetPropertySigHelper (mod, returnType, requiredReturnTypeCustomModifiers, optionalReturnTypeCustomModifiers, parameterTypes, requiredParameterTypeCustomModifiers, optionalParameterTypeCustomModifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="requiredReturnTypeCustomModifiers" Type="System.Type[]" />
        <Parameter Name="optionalReturnTypeCustomModifiers" Type="System.Type[]" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
        <Parameter Name="requiredParameterTypeCustomModifiers" Type="System.Type[][]" />
        <Parameter Name="optionalParameterTypeCustomModifiers" Type="System.Type[][]" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="383ea-222"><see cref="T:System.Reflection.Emit.ModuleBuilder" /> qui contient la propriété pour laquelle <see cref="T:System.Reflection.Emit.SignatureHelper" /> est demandé.</span><span class="sxs-lookup"><span data-stu-id="383ea-222">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the property for which the <see cref="T:System.Reflection.Emit.SignatureHelper" /> is requested.</span></span></param>
        <param name="returnType"><span data-ttu-id="383ea-223">Type de propriété.</span><span class="sxs-lookup"><span data-stu-id="383ea-223">The property type.</span></span></param>
        <param name="requiredReturnTypeCustomModifiers"><span data-ttu-id="383ea-224">Tableau des types représentant les modificateurs personnalisés requis pour le type de retour, tels que <see cref="T:System.Runtime.CompilerServices.IsConst" /> ou <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-224">An array of types representing the required custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="383ea-225">Si le type de retour ne possède pas de modificateur personnalisé requis, spécifiez <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-225">If the return type has no required custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="optionalReturnTypeCustomModifiers"><span data-ttu-id="383ea-226">Tableau des types représentant les modificateurs personnalisés facultatifs pour le type de retour, tels que <see cref="T:System.Runtime.CompilerServices.IsConst" /> ou <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-226">An array of types representing the optional custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="383ea-227">Si le type de retour ne possède pas de modificateur personnalisé facultatif, spécifiez <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-227">If the return type has no optional custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="383ea-228">Types des arguments de la propriété, ou <see langword="null" /> si la propriété ne possède pas d'argument.</span><span class="sxs-lookup"><span data-stu-id="383ea-228">The types of the property's arguments, or <see langword="null" /> if the property has no arguments.</span></span></param>
        <param name="requiredParameterTypeCustomModifiers"><span data-ttu-id="383ea-229">Tableau de tableaux de types.</span><span class="sxs-lookup"><span data-stu-id="383ea-229">An array of arrays of types.</span></span> <span data-ttu-id="383ea-230">Chaque tableau de types représente les modificateurs personnalisés requis pour l'argument correspondant de la propriété.</span><span class="sxs-lookup"><span data-stu-id="383ea-230">Each array of types represents the required custom modifiers for the corresponding argument of the property.</span></span> <span data-ttu-id="383ea-231">Si un argument particulier ne possède pas de modificateur personnalisé requis, spécifiez <see langword="null" /> plutôt qu'un tableau de types.</span><span class="sxs-lookup"><span data-stu-id="383ea-231">If a particular argument has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="383ea-232">Si la propriété ne possède pas d'argument, ou si aucun des arguments ne possède de modificateur personnalisé requis, spécifiez <see langword="null" /> plutôt qu'un tableau de tableaux.</span><span class="sxs-lookup"><span data-stu-id="383ea-232">If the property has no arguments, or if none of the arguments have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <param name="optionalParameterTypeCustomModifiers"><span data-ttu-id="383ea-233">Tableau de tableaux de types.</span><span class="sxs-lookup"><span data-stu-id="383ea-233">An array of arrays of types.</span></span> <span data-ttu-id="383ea-234">Chaque tableau de types représente les modificateurs personnalisés facultatifs pour l'argument correspondant de la propriété.</span><span class="sxs-lookup"><span data-stu-id="383ea-234">Each array of types represents the optional custom modifiers for the corresponding argument of the property.</span></span> <span data-ttu-id="383ea-235">Si un argument particulier ne possède pas de modificateur personnalisé facultatif, spécifiez <see langword="null" /> plutôt qu'un tableau de types.</span><span class="sxs-lookup"><span data-stu-id="383ea-235">If a particular argument has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="383ea-236">Si la propriété ne possède pas d'argument, ou si aucun des arguments ne possède de modificateur personnalisé facultatif, spécifiez <see langword="null" /> plutôt qu'un tableau de tableaux.</span><span class="sxs-lookup"><span data-stu-id="383ea-236">If the property has no arguments, or if none of the arguments have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <summary><span data-ttu-id="383ea-237">Retourne une assistance de signature pour une propriété, en fonction du module dynamique qui contient la propriété, du type de propriété, des arguments de la propriété et des modificateurs personnalisés pour le type de retour et les arguments.</span><span class="sxs-lookup"><span data-stu-id="383ea-237">Returns a signature helper for a property, given the dynamic module that contains the property, the property type, the property arguments, and custom modifiers for the return type and arguments.</span></span></summary>
        <returns><span data-ttu-id="383ea-238">Objet <see cref="T:System.Reflection.Emit.SignatureHelper" /> d'une propriété.</span><span class="sxs-lookup"><span data-stu-id="383ea-238">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> object for a property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="383ea-239">Consultez le <xref:System.Runtime.CompilerServices> espace de noms pour les classes qui représentent des modificateurs personnalisés.</span><span class="sxs-lookup"><span data-stu-id="383ea-239">See the <xref:System.Runtime.CompilerServices> namespace for classes that represent custom modifiers.</span></span>  
  
 <span data-ttu-id="383ea-240">Si une propriété ne dispose aucuns modificateur personnalisé, utilisez le <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%29> surcharge de méthode.</span><span class="sxs-lookup"><span data-stu-id="383ea-240">If a property has no custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%29> method overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="383ea-241"><paramref name="mod" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-241"><paramref name="mod" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="383ea-242">- ou -</span><span class="sxs-lookup"><span data-stu-id="383ea-242">-or-</span></span> 
<span data-ttu-id="383ea-243">Un élément de <paramref name="parameterTypes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-243">An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="383ea-244">- ou -</span><span class="sxs-lookup"><span data-stu-id="383ea-244">-or-</span></span> 
<span data-ttu-id="383ea-245">Un des modificateurs personnalisés spécifiés est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-245">One of the specified custom modifiers is <see langword="null" />.</span></span> <span data-ttu-id="383ea-246">(Toutefois, <see langword="null" /> peut être spécifié pour le tableau de modificateurs personnalisés de tout argument.)</span><span class="sxs-lookup"><span data-stu-id="383ea-246">(However, <see langword="null" /> can be specified for the array of custom modifiers for any argument.)</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="383ea-247">La signature a déjà été finalisée.</span><span class="sxs-lookup"><span data-stu-id="383ea-247">The signature has already been finished.</span></span>  
  
<span data-ttu-id="383ea-248">- ou -</span><span class="sxs-lookup"><span data-stu-id="383ea-248">-or-</span></span> 
 <span data-ttu-id="383ea-249"><paramref name="mod" /> n'est pas un <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-249"><paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span>  
  
<span data-ttu-id="383ea-250">- ou -</span><span class="sxs-lookup"><span data-stu-id="383ea-250">-or-</span></span> 
<span data-ttu-id="383ea-251">Un des modificateurs personnalisés spécifiés est un type de tableau.</span><span class="sxs-lookup"><span data-stu-id="383ea-251">One of the specified custom modifiers is an array type.</span></span>  
  
<span data-ttu-id="383ea-252">- ou -</span><span class="sxs-lookup"><span data-stu-id="383ea-252">-or-</span></span> 
<span data-ttu-id="383ea-253">Un des modificateurs personnalisés spécifiés est un type générique ouvert.</span><span class="sxs-lookup"><span data-stu-id="383ea-253">One of the specified custom modifiers is an open generic type.</span></span> <span data-ttu-id="383ea-254">Cela signifie que la propriété <see cref="P:System.Type.ContainsGenericParameters" /> est <see langword="true" /> pour le modificateur personnalisé.</span><span class="sxs-lookup"><span data-stu-id="383ea-254">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span></span>  
  
<span data-ttu-id="383ea-255">- ou -</span><span class="sxs-lookup"><span data-stu-id="383ea-255">-or-</span></span> 
<span data-ttu-id="383ea-256">La taille de <paramref name="requiredParameterTypeCustomModifiers" /> ou <paramref name="optionalParameterTypeCustomModifiers" /> n’est pas égale à la taille de <paramref name="parameterTypes" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-256">The size of <paramref name="requiredParameterTypeCustomModifiers" /> or <paramref name="optionalParameterTypeCustomModifiers" /> does not equal the size of <paramref name="parameterTypes" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertySigHelper">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.SignatureHelper GetPropertySigHelper (System.Reflection.Module mod, System.Reflection.CallingConventions callingConvention, Type returnType, Type[] requiredReturnTypeCustomModifiers, Type[] optionalReturnTypeCustomModifiers, Type[] parameterTypes, Type[][] requiredParameterTypeCustomModifiers, Type[][] optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.SignatureHelper GetPropertySigHelper(class System.Reflection.Module mod, valuetype System.Reflection.CallingConventions callingConvention, class System.Type returnType, class System.Type[] requiredReturnTypeCustomModifiers, class System.Type[] optionalReturnTypeCustomModifiers, class System.Type[] parameterTypes, class System.Type[][] requiredParameterTypeCustomModifiers, class System.Type[][] optionalParameterTypeCustomModifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper(System.Reflection.Module,System.Reflection.CallingConventions,System.Type,System.Type[],System.Type[],System.Type[],System.Type[][],System.Type[][])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPropertySigHelper (mod As Module, callingConvention As CallingConventions, returnType As Type, requiredReturnTypeCustomModifiers As Type(), optionalReturnTypeCustomModifiers As Type(), parameterTypes As Type(), requiredParameterTypeCustomModifiers As Type()(), optionalParameterTypeCustomModifiers As Type()()) As SignatureHelper" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::SignatureHelper ^ GetPropertySigHelper(System::Reflection::Module ^ mod, System::Reflection::CallingConventions callingConvention, Type ^ returnType, cli::array &lt;Type ^&gt; ^ requiredReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ optionalReturnTypeCustomModifiers, cli::array &lt;Type ^&gt; ^ parameterTypes, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ requiredParameterTypeCustomModifiers, cli::array &lt;cli::array &lt;Type ^&gt; ^&gt; ^ optionalParameterTypeCustomModifiers);" />
      <MemberSignature Language="F#" Value="static member GetPropertySigHelper : System.Reflection.Module * System.Reflection.CallingConventions * Type * Type[] * Type[] * Type[] * Type[][] * Type[][] -&gt; System.Reflection.Emit.SignatureHelper" Usage="System.Reflection.Emit.SignatureHelper.GetPropertySigHelper (mod, callingConvention, returnType, requiredReturnTypeCustomModifiers, optionalReturnTypeCustomModifiers, parameterTypes, requiredParameterTypeCustomModifiers, optionalParameterTypeCustomModifiers)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.SignatureHelper</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mod" Type="System.Reflection.Module" />
        <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="requiredReturnTypeCustomModifiers" Type="System.Type[]" />
        <Parameter Name="optionalReturnTypeCustomModifiers" Type="System.Type[]" />
        <Parameter Name="parameterTypes" Type="System.Type[]" />
        <Parameter Name="requiredParameterTypeCustomModifiers" Type="System.Type[][]" />
        <Parameter Name="optionalParameterTypeCustomModifiers" Type="System.Type[][]" />
      </Parameters>
      <Docs>
        <param name="mod"><span data-ttu-id="383ea-257"><see cref="T:System.Reflection.Emit.ModuleBuilder" /> qui contient la propriété pour laquelle <see cref="T:System.Reflection.Emit.SignatureHelper" /> est demandé.</span><span class="sxs-lookup"><span data-stu-id="383ea-257">The <see cref="T:System.Reflection.Emit.ModuleBuilder" /> that contains the property for which the <see cref="T:System.Reflection.Emit.SignatureHelper" /> is requested.</span></span></param>
        <param name="callingConvention"><span data-ttu-id="383ea-258">Convention d’appel des accesseurs de propriété.</span><span class="sxs-lookup"><span data-stu-id="383ea-258">The calling convention of the property accessors.</span></span></param>
        <param name="returnType"><span data-ttu-id="383ea-259">Type de propriété.</span><span class="sxs-lookup"><span data-stu-id="383ea-259">The property type.</span></span></param>
        <param name="requiredReturnTypeCustomModifiers"><span data-ttu-id="383ea-260">Tableau des types représentant les modificateurs personnalisés requis pour le type de retour, tels que <see cref="T:System.Runtime.CompilerServices.IsConst" /> ou <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-260">An array of types representing the required custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="383ea-261">Si le type de retour ne possède pas de modificateur personnalisé requis, spécifiez <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-261">If the return type has no required custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="optionalReturnTypeCustomModifiers"><span data-ttu-id="383ea-262">Tableau des types représentant les modificateurs personnalisés facultatifs pour le type de retour, tels que <see cref="T:System.Runtime.CompilerServices.IsConst" /> ou <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-262">An array of types representing the optional custom modifiers for the return type, such as <see cref="T:System.Runtime.CompilerServices.IsConst" /> or <see cref="T:System.Runtime.CompilerServices.IsBoxed" />.</span></span> <span data-ttu-id="383ea-263">Si le type de retour ne possède pas de modificateur personnalisé facultatif, spécifiez <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-263">If the return type has no optional custom modifiers, specify <see langword="null" />.</span></span></param>
        <param name="parameterTypes"><span data-ttu-id="383ea-264">Types des arguments de la propriété, ou <see langword="null" /> si la propriété ne possède pas d'argument.</span><span class="sxs-lookup"><span data-stu-id="383ea-264">The types of the property's arguments, or <see langword="null" /> if the property has no arguments.</span></span></param>
        <param name="requiredParameterTypeCustomModifiers"><span data-ttu-id="383ea-265">Tableau de tableaux de types.</span><span class="sxs-lookup"><span data-stu-id="383ea-265">An array of arrays of types.</span></span> <span data-ttu-id="383ea-266">Chaque tableau de types représente les modificateurs personnalisés requis pour l'argument correspondant de la propriété.</span><span class="sxs-lookup"><span data-stu-id="383ea-266">Each array of types represents the required custom modifiers for the corresponding argument of the property.</span></span> <span data-ttu-id="383ea-267">Si un argument particulier ne possède pas de modificateur personnalisé requis, spécifiez <see langword="null" /> plutôt qu'un tableau de types.</span><span class="sxs-lookup"><span data-stu-id="383ea-267">If a particular argument has no required custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="383ea-268">Si la propriété ne possède pas d'argument, ou si aucun des arguments ne possède de modificateur personnalisé requis, spécifiez <see langword="null" /> plutôt qu'un tableau de tableaux.</span><span class="sxs-lookup"><span data-stu-id="383ea-268">If the property has no arguments, or if none of the arguments have required custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <param name="optionalParameterTypeCustomModifiers"><span data-ttu-id="383ea-269">Tableau de tableaux de types.</span><span class="sxs-lookup"><span data-stu-id="383ea-269">An array of arrays of types.</span></span> <span data-ttu-id="383ea-270">Chaque tableau de types représente les modificateurs personnalisés facultatifs pour l'argument correspondant de la propriété.</span><span class="sxs-lookup"><span data-stu-id="383ea-270">Each array of types represents the optional custom modifiers for the corresponding argument of the property.</span></span> <span data-ttu-id="383ea-271">Si un argument particulier ne possède pas de modificateur personnalisé facultatif, spécifiez <see langword="null" /> plutôt qu'un tableau de types.</span><span class="sxs-lookup"><span data-stu-id="383ea-271">If a particular argument has no optional custom modifiers, specify <see langword="null" /> instead of an array of types.</span></span> <span data-ttu-id="383ea-272">Si la propriété ne possède pas d'argument, ou si aucun des arguments ne possède de modificateur personnalisé facultatif, spécifiez <see langword="null" /> plutôt qu'un tableau de tableaux.</span><span class="sxs-lookup"><span data-stu-id="383ea-272">If the property has no arguments, or if none of the arguments have optional custom modifiers, specify <see langword="null" /> instead of an array of arrays.</span></span></param>
        <summary><span data-ttu-id="383ea-273">Retourne une assistance de signature pour une propriété, en fonction du module dynamique qui contient la propriété, la convention d'appel, le type de propriété, les arguments de la propriété et des modificateurs personnalisés pour le type de retour et les arguments.</span><span class="sxs-lookup"><span data-stu-id="383ea-273">Returns a signature helper for a property, given the dynamic module that contains the property, the calling convention, the property type, the property arguments, and custom modifiers for the return type and arguments.</span></span></summary>
        <returns><span data-ttu-id="383ea-274">Objet <see cref="T:System.Reflection.Emit.SignatureHelper" /> d'une propriété.</span><span class="sxs-lookup"><span data-stu-id="383ea-274">A <see cref="T:System.Reflection.Emit.SignatureHelper" /> object for a property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="383ea-275">Consultez le <xref:System.Runtime.CompilerServices> espace de noms pour les classes qui représentent des modificateurs personnalisés.</span><span class="sxs-lookup"><span data-stu-id="383ea-275">See the <xref:System.Runtime.CompilerServices> namespace for classes that represent custom modifiers.</span></span>  
  
 <span data-ttu-id="383ea-276">Si une propriété ne dispose aucuns modificateur personnalisé, utilisez le <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%29> surcharge de méthode.</span><span class="sxs-lookup"><span data-stu-id="383ea-276">If a property has no custom modifiers, use the <xref:System.Reflection.Emit.SignatureHelper.GetPropertySigHelper%28System.Reflection.Module%2CSystem.Type%2CSystem.Type%5B%5D%29> method overload.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="383ea-277">Cette surcharge de méthode a été introduite dans le [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] ou version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="383ea-277">This method overload is introduced in the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="383ea-278"><paramref name="mod" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-278"><paramref name="mod" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="383ea-279">- ou -</span><span class="sxs-lookup"><span data-stu-id="383ea-279">-or-</span></span> 
<span data-ttu-id="383ea-280">Un élément de <paramref name="parameterTypes" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-280">An element of <paramref name="parameterTypes" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="383ea-281">- ou -</span><span class="sxs-lookup"><span data-stu-id="383ea-281">-or-</span></span> 
<span data-ttu-id="383ea-282">Un des modificateurs personnalisés spécifiés est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-282">One of the specified custom modifiers is <see langword="null" />.</span></span> <span data-ttu-id="383ea-283">(Toutefois, <see langword="null" /> peut être spécifié pour le tableau de modificateurs personnalisés de tout argument.)</span><span class="sxs-lookup"><span data-stu-id="383ea-283">(However, <see langword="null" /> can be specified for the array of custom modifiers for any argument.)</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="383ea-284">La signature a déjà été finalisée.</span><span class="sxs-lookup"><span data-stu-id="383ea-284">The signature has already been finished.</span></span>  
  
<span data-ttu-id="383ea-285">- ou -</span><span class="sxs-lookup"><span data-stu-id="383ea-285">-or-</span></span> 
 <span data-ttu-id="383ea-286"><paramref name="mod" /> n'est pas un <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-286"><paramref name="mod" /> is not a <see cref="T:System.Reflection.Emit.ModuleBuilder" />.</span></span>  
  
<span data-ttu-id="383ea-287">- ou -</span><span class="sxs-lookup"><span data-stu-id="383ea-287">-or-</span></span> 
<span data-ttu-id="383ea-288">Un des modificateurs personnalisés spécifiés est un type de tableau.</span><span class="sxs-lookup"><span data-stu-id="383ea-288">One of the specified custom modifiers is an array type.</span></span>  
  
<span data-ttu-id="383ea-289">- ou -</span><span class="sxs-lookup"><span data-stu-id="383ea-289">-or-</span></span> 
<span data-ttu-id="383ea-290">Un des modificateurs personnalisés spécifiés est un type générique ouvert.</span><span class="sxs-lookup"><span data-stu-id="383ea-290">One of the specified custom modifiers is an open generic type.</span></span> <span data-ttu-id="383ea-291">Cela signifie que la propriété <see cref="P:System.Type.ContainsGenericParameters" /> est <see langword="true" /> pour le modificateur personnalisé.</span><span class="sxs-lookup"><span data-stu-id="383ea-291">That is, the <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" /> for the custom modifier.</span></span>  
  
<span data-ttu-id="383ea-292">- ou -</span><span class="sxs-lookup"><span data-stu-id="383ea-292">-or-</span></span> 
<span data-ttu-id="383ea-293">La taille de <paramref name="requiredParameterTypeCustomModifiers" /> ou <paramref name="optionalParameterTypeCustomModifiers" /> n’est pas égale à la taille de <paramref name="parameterTypes" />.</span><span class="sxs-lookup"><span data-stu-id="383ea-293">The size of <paramref name="requiredParameterTypeCustomModifiers" /> or <paramref name="optionalParameterTypeCustomModifiers" /> does not equal the size of <paramref name="parameterTypes" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetSignature">
      <MemberSignature Language="C#" Value="public byte[] GetSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] GetSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.GetSignature" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSignature () As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ GetSignature();" />
      <MemberSignature Language="F#" Value="member this.GetSignature : unit -&gt; byte[]" Usage="signatureHelper.GetSignature " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="383ea-294">Ajoute le jeton de fin à la signature et marque cette dernière comme terminée ; aucun autre jeton ne peut lui être ajouté.</span><span class="sxs-lookup"><span data-stu-id="383ea-294">Adds the end token to the signature and marks the signature as finished, so no further tokens can be added.</span></span></summary>
        <returns><span data-ttu-id="383ea-295">Retourne un tableau d'octets composé de la signature complète.</span><span class="sxs-lookup"><span data-stu-id="383ea-295">Returns a byte array made up of the full signature.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _SignatureHelper.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _SignatureHelper.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_SignatureHelper::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._SignatureHelper.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="383ea-296">Réservé à un usage ultérieur.</span><span class="sxs-lookup"><span data-stu-id="383ea-296">Reserved for future use.</span></span> <span data-ttu-id="383ea-297">Doit être IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="383ea-297">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="383ea-298">Tableau passé des noms à mapper.</span><span class="sxs-lookup"><span data-stu-id="383ea-298">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="383ea-299">Compte des noms à mapper.</span><span class="sxs-lookup"><span data-stu-id="383ea-299">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="383ea-300">Contexte des paramètres régionaux dans lequel interpréter les noms.</span><span class="sxs-lookup"><span data-stu-id="383ea-300">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="383ea-301">Tableau alloué par l'appelant et recevant les ID qui correspondent aux noms.</span><span class="sxs-lookup"><span data-stu-id="383ea-301">Caller-allocated array which receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="383ea-302">Mappe un jeu de noms avec un jeu correspondant d'identificateurs de dispatch.</span><span class="sxs-lookup"><span data-stu-id="383ea-302">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="383ea-303">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</span><span class="sxs-lookup"><span data-stu-id="383ea-303">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="383ea-304">Pour plus d’informations sur `IDispatch::GetIDsOfNames`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="383ea-304">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="383ea-305">L’accès à liaison tardive à l’aide de l’interface <c>IDispatch</c> COM n’est pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="383ea-305">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._SignatureHelper.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _SignatureHelper.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _SignatureHelper.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_SignatureHelper::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._SignatureHelper.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="383ea-306">Informations de type à retourner.</span><span class="sxs-lookup"><span data-stu-id="383ea-306">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="383ea-307">Identificateur des paramètres régionaux pour les informations de type.</span><span class="sxs-lookup"><span data-stu-id="383ea-307">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="383ea-308">Reçoit un pointeur vers l'objet d'informations de type demandé.</span><span class="sxs-lookup"><span data-stu-id="383ea-308">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="383ea-309">Récupère les informations de type pour un objet, qui peuvent être utilisées ensuite pour obtenir les informations de type d'une interface.</span><span class="sxs-lookup"><span data-stu-id="383ea-309">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="383ea-310">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</span><span class="sxs-lookup"><span data-stu-id="383ea-310">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="383ea-311">Pour plus d’informations sur `IDispatch::GetTypeInfo`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="383ea-311">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="383ea-312">L’accès à liaison tardive à l’aide de l’interface <c>IDispatch</c> COM n’est pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="383ea-312">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _SignatureHelper.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _SignatureHelper.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_SignatureHelper::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._SignatureHelper.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="383ea-313">Pointe vers un emplacement qui reçoit le nombre d'interfaces d'informations de type fourni par l'objet.</span><span class="sxs-lookup"><span data-stu-id="383ea-313">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="383ea-314">Récupère le nombre d'interfaces d'informations de type fourni par un objet (0 ou 1).</span><span class="sxs-lookup"><span data-stu-id="383ea-314">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="383ea-315">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</span><span class="sxs-lookup"><span data-stu-id="383ea-315">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="383ea-316">Pour plus d’informations sur `IDispatch::GetTypeInfoCount`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="383ea-316">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="383ea-317">L’accès à liaison tardive à l’aide de l’interface <c>IDispatch</c> COM n’est pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="383ea-317">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._SignatureHelper.Invoke">
      <MemberSignature Language="C#" Value="void _SignatureHelper.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._SignatureHelper.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.System#Runtime#InteropServices#_SignatureHelper#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _SignatureHelper.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._SignatureHelper.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_SignatureHelper::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._SignatureHelper.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="383ea-318">Identifie le membre.</span><span class="sxs-lookup"><span data-stu-id="383ea-318">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="383ea-319">Réservé à un usage ultérieur.</span><span class="sxs-lookup"><span data-stu-id="383ea-319">Reserved for future use.</span></span> <span data-ttu-id="383ea-320">Doit être IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="383ea-320">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="383ea-321">Contexte des paramètres régionaux dans lequel interpréter les arguments.</span><span class="sxs-lookup"><span data-stu-id="383ea-321">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="383ea-322">Indicateurs décrivant le contexte de l'appel.</span><span class="sxs-lookup"><span data-stu-id="383ea-322">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="383ea-323">Pointeur vers une structure qui contient un tableau d’arguments, un tableau d’arguments DISPID pour les arguments nommés et le nombre d’éléments de chaque tableau.</span><span class="sxs-lookup"><span data-stu-id="383ea-323">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="383ea-324">Pointeur vers l'emplacement où le résultat doit être stocké.</span><span class="sxs-lookup"><span data-stu-id="383ea-324">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="383ea-325">Pointeur vers une structure qui contient les informations sur les exceptions.</span><span class="sxs-lookup"><span data-stu-id="383ea-325">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="383ea-326">Index du premier argument comportant une erreur.</span><span class="sxs-lookup"><span data-stu-id="383ea-326">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="383ea-327">Fournit l'accès aux propriétés et aux méthodes exposées par un objet.</span><span class="sxs-lookup"><span data-stu-id="383ea-327">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="383ea-328">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</span><span class="sxs-lookup"><span data-stu-id="383ea-328">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="383ea-329">Pour plus d’informations sur `IDispatch::Invoke`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="383ea-329">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="383ea-330">L’accès à liaison tardive à l’aide de l’interface <c>IDispatch</c> COM n’est pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="383ea-330">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.SignatureHelper.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="signatureHelper.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit.ILGeneration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="383ea-331">Retourne une chaîne représentant les arguments de la signature.</span><span class="sxs-lookup"><span data-stu-id="383ea-331">Returns a string representing the signature arguments.</span></span></summary>
        <returns><span data-ttu-id="383ea-332">Retourne une chaîne représentant les arguments de cette signature.</span><span class="sxs-lookup"><span data-stu-id="383ea-332">Returns a string representing the arguments of this signature.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>