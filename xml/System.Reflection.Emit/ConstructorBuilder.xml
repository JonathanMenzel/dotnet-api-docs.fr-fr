<Type Name="ConstructorBuilder" FullName="System.Reflection.Emit.ConstructorBuilder">
  <TypeSignature Language="C#" Value="public sealed class ConstructorBuilder : System.Reflection.ConstructorInfo, System.Runtime.InteropServices._ConstructorBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit ConstructorBuilder extends System.Reflection.ConstructorInfo implements class System.Runtime.InteropServices._ConstructorBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.ConstructorBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ConstructorBuilder&#xA;Inherits ConstructorInfo&#xA;Implements _ConstructorBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConstructorBuilder sealed : System::Reflection::ConstructorInfo, System::Runtime::InteropServices::_ConstructorBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.ConstructorInfo</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._ConstructorBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._ConstructorBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="49b9d-101">Définit et représente un constructeur d’une classe dynamique.</span><span class="sxs-lookup"><span data-stu-id="49b9d-101">Defines and represents a constructor of a dynamic class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b9d-102"><xref:System.Reflection.Emit.ConstructorBuilder> permet de décrire entièrement un constructeur dans le langage intermédiaire Microsoft (MSIL), y compris le nom, attributs, la signature et corps du constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-102"><xref:System.Reflection.Emit.ConstructorBuilder> is used to fully describe a constructor in Microsoft intermediate language (MSIL), including the name, attributes, signature, and constructor body.</span></span> <span data-ttu-id="49b9d-103">Il est utilisé conjointement avec la <xref:System.Reflection.Emit.TypeBuilder> classe pour créer des classes au moment de l’exécution.</span><span class="sxs-lookup"><span data-stu-id="49b9d-103">It is used in conjunction with the <xref:System.Reflection.Emit.TypeBuilder> class to create classes at run time.</span></span> <span data-ttu-id="49b9d-104">Appelez <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A> pour obtenir une instance de <xref:System.Reflection.Emit.ConstructorBuilder>.</span><span class="sxs-lookup"><span data-stu-id="49b9d-104">Call <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A> to get an instance of <xref:System.Reflection.Emit.ConstructorBuilder>.</span></span>  
  
 <span data-ttu-id="49b9d-105">Si vous ne définissez pas un constructeur pour votre type dynamique, un constructeur par défaut est fourni automatiquement, et il appelle le constructeur par défaut de la classe de base.</span><span class="sxs-lookup"><span data-stu-id="49b9d-105">If you do not define a constructor for your dynamic type, a default constructor is provided automatically, and it calls the default constructor of the base class.</span></span>  
  
 <span data-ttu-id="49b9d-106">Si vous utilisez <xref:System.Reflection.Emit.ConstructorBuilder> pour définir un constructeur pour votre type dynamique, un constructeur par défaut n’est pas fourni.</span><span class="sxs-lookup"><span data-stu-id="49b9d-106">If you use <xref:System.Reflection.Emit.ConstructorBuilder> to define a constructor for your dynamic type, a default constructor is not provided.</span></span> <span data-ttu-id="49b9d-107">Vous disposez des options suivantes pour fournir un constructeur par défaut, outre le constructeur que vous avez défini :</span><span class="sxs-lookup"><span data-stu-id="49b9d-107">You have the following options for providing a default constructor in addition to the constructor you defined:</span></span>  
  
-   <span data-ttu-id="49b9d-108">Si vous souhaitez un constructeur par défaut qui appelle simplement le constructeur par défaut de la classe de base, vous pouvez utiliser la <xref:System.Reflection.Emit.TypeBuilder.DefineDefaultConstructor%2A?displayProperty=nameWithType> méthode à créer (et éventuellement y restreindre l’accès).</span><span class="sxs-lookup"><span data-stu-id="49b9d-108">If you want a default constructor that simply calls the default constructor of the base class, you can use the <xref:System.Reflection.Emit.TypeBuilder.DefineDefaultConstructor%2A?displayProperty=nameWithType> method to create one (and optionally restrict access to it).</span></span> <span data-ttu-id="49b9d-109">Ne fournissez pas d’implémentation pour ce constructeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="49b9d-109">Do not provide an implementation for this default constructor.</span></span> <span data-ttu-id="49b9d-110">Si vous le faites, une exception est levée lorsque vous essayez d’utiliser le constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-110">If you do, an exception is thrown when you try to use the constructor.</span></span> <span data-ttu-id="49b9d-111">Aucune exception n’est levée lorsque la <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType> méthode est appelée.</span><span class="sxs-lookup"><span data-stu-id="49b9d-111">No exception is thrown when the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType> method is called.</span></span>  
  
-   <span data-ttu-id="49b9d-112">Si vous souhaitez que le constructeur par défaut ne plus que simplement appeler le constructeur par défaut de la classe de base, qui appelle un autre constructeur de la classe de base, ou qu’il effectue quelque chose d’autre, vous devez utiliser le <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A?displayProperty=nameWithType> pour créer un (méthode)<xref:System.Reflection.Emit.ConstructorBuilder>et fournir votre propre implémentation.</span><span class="sxs-lookup"><span data-stu-id="49b9d-112">If you want a default constructor that does something more than simply calling the default constructor of the base class, or that calls another constructor of the base class, or that does something else entirely, you must use the <xref:System.Reflection.Emit.TypeBuilder.DefineConstructor%2A?displayProperty=nameWithType> method to create a <xref:System.Reflection.Emit.ConstructorBuilder>, and provide your own implementation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49b9d-113">L’exemple de code suivant illustre l’utilisation contextuelle d’un `ConstructorBuilder`.</span><span class="sxs-lookup"><span data-stu-id="49b9d-113">The following code sample illustrates the contextual usage of a `ConstructorBuilder`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.ConstructorBuilder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.ConstructorBuilder Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.ConstructorBuilder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.ConstructorBuilder Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.ConstructorBuilder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.ConstructorBuilder Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ConstructorBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ConstructorBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddDeclarativeSecurity">
      <MemberSignature Language="C#" Value="public void AddDeclarativeSecurity (System.Security.Permissions.SecurityAction action, System.Security.PermissionSet pset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddDeclarativeSecurity(valuetype System.Security.Permissions.SecurityAction action, class System.Security.PermissionSet pset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.AddDeclarativeSecurity(System.Security.Permissions.SecurityAction,System.Security.PermissionSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddDeclarativeSecurity (action As SecurityAction, pset As PermissionSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddDeclarativeSecurity(System::Security::Permissions::SecurityAction action, System::Security::PermissionSet ^ pset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" />
        <Parameter Name="pset" Type="System.Security.PermissionSet" />
      </Parameters>
      <Docs>
        <param name="action"><span data-ttu-id="49b9d-114">Mesure de sécurité à prendre telle que Demand, Assert, etc.</span><span class="sxs-lookup"><span data-stu-id="49b9d-114">The security action to be taken, such as Demand, Assert, and so on.</span></span></param>
        <param name="pset"><span data-ttu-id="49b9d-115">Jeu d’autorisations auquel la mesure s’applique.</span><span class="sxs-lookup"><span data-stu-id="49b9d-115">The set of permissions the action applies to.</span></span></param>
        <summary><span data-ttu-id="49b9d-116">Ajoute la sécurité déclarative à ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-116">Adds declarative security to this constructor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b9d-117"><xref:System.Reflection.Emit.ConstructorBuilder.AddDeclarativeSecurity%2A> peut être appelée plusieurs fois, chaque appel spécifiant une action de sécurité (tel que `Demand`, `Assert`, et `Deny`) et un jeu d’autorisations qui s’applique à l’action.</span><span class="sxs-lookup"><span data-stu-id="49b9d-117"><xref:System.Reflection.Emit.ConstructorBuilder.AddDeclarativeSecurity%2A> can be called several times, with each call specifying a security action (such as `Demand`, `Assert`, and `Deny`) and a set of permissions that the action applies to.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49b9d-118">Dans les versions 1.0, 1.1 et 2.0 du .NET Framework, les attributs de sécurité déclarative appliqués à un constructeur à l’aide de cette méthode sont stockés dans l’ancien format de métadonnées XML.</span><span class="sxs-lookup"><span data-stu-id="49b9d-118">In the .NET Framework versions 1.0, 1.1, and 2.0, the declarative security attributes applied to a constructor by using this method are stored in the old XML metadata format.</span></span> <span data-ttu-id="49b9d-119">Consultez l’émission d’attributs de sécurité déclarative.</span><span class="sxs-lookup"><span data-stu-id="49b9d-119">See Emitting Declarative Security Attributes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49b9d-120">L’exemple de code suivant illustre l’utilisation de `AddDeclarativeSecurity`.</span><span class="sxs-lookup"><span data-stu-id="49b9d-120">The following code sample illustrates the use of `AddDeclarativeSecurity`.</span></span>  
  
 [!code-cpp[ConstructorBuilder_Attributes_4#1](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CPP/constructorbuilder_attributes_4.cpp#1)]
 [!code-csharp[ConstructorBuilder_Attributes_4#1](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CS/constructorbuilder_attributes_4.cs#1)]
 [!code-vb[ConstructorBuilder_Attributes_4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/VB/constructorbuilder_attributes_4.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="49b9d-121"><paramref name="action" /> n’est pas valide (RequestMinimum, RequestOptional et RequestRefuse ne sont pas valides).</span><span class="sxs-lookup"><span data-stu-id="49b9d-121"><paramref name="action" /> is invalid (RequestMinimum, RequestOptional, and RequestRefuse are invalid).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="49b9d-122">Le type conteneur a déjà été créé à l’aide de <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="49b9d-122">The containing type has been previously created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span>  
  
 <span data-ttu-id="49b9d-123">- ou -</span><span class="sxs-lookup"><span data-stu-id="49b9d-123">-or-</span></span>  
  
 <span data-ttu-id="49b9d-124">Le jeu d’autorisations <paramref name="pset" /> contient une action qui a déjà été ajoutée par <see langword="AddDeclarativeSecurity" />.</span><span class="sxs-lookup"><span data-stu-id="49b9d-124">The permission set <paramref name="pset" /> contains an action that was added earlier by <see langword="AddDeclarativeSecurity" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="49b9d-125"><paramref name="pset" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="49b9d-125"><paramref name="pset" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodAttributes Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MethodAttributes Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ConstructorBuilder.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Attributes As MethodAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodAttributes Attributes { System::Reflection::MethodAttributes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49b9d-126">Récupère les attributs de ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-126">Retrieves the attributes for this constructor.</span></span></summary>
        <value><span data-ttu-id="49b9d-127">Retourne les attributs de ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-127">Returns the attributes for this constructor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b9d-128">L’exemple de code suivant illustre l’utilisation de `Attributes`.</span><span class="sxs-lookup"><span data-stu-id="49b9d-128">The following code sample illustrates the use of `Attributes`.</span></span>  
  
 [!code-cpp[ConstructorBuilder_Attributes_4#2](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CPP/constructorbuilder_attributes_4.cpp#2)]
 [!code-csharp[ConstructorBuilder_Attributes_4#2](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CS/constructorbuilder_attributes_4.cs#2)]
 [!code-vb[ConstructorBuilder_Attributes_4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/VB/constructorbuilder_attributes_4.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CallingConvention">
      <MemberSignature Language="C#" Value="public override System.Reflection.CallingConventions CallingConvention { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.CallingConventions CallingConvention" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ConstructorBuilder.CallingConvention" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CallingConvention As CallingConventions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::CallingConventions CallingConvention { System::Reflection::CallingConventions get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.CallingConventions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49b9d-129">Obtient une valeur <see cref="T:System.Reflection.CallingConventions" /> qui varie selon que le type de déclaration est générique ou non.</span><span class="sxs-lookup"><span data-stu-id="49b9d-129">Gets a <see cref="T:System.Reflection.CallingConventions" /> value that depends on whether the declaring type is generic.</span></span></summary>
        <value>
          <span data-ttu-id="49b9d-130"><see cref="F:System.Reflection.CallingConventions.HasThis" /> si le type de déclaration est générique ; sinon, <see cref="F:System.Reflection.CallingConventions.Standard" />.</span><span class="sxs-lookup"><span data-stu-id="49b9d-130"><see cref="F:System.Reflection.CallingConventions.HasThis" /> if the declaring type is generic; otherwise, <see cref="F:System.Reflection.CallingConventions.Standard" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public override Type DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ConstructorBuilder.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DeclaringType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ DeclaringType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49b9d-131">Récupère une référence à l’objet <see cref="T:System.Type" /> pour le type qui déclare ce membre.</span><span class="sxs-lookup"><span data-stu-id="49b9d-131">Retrieves a reference to the <see cref="T:System.Type" /> object for the type that declares this member.</span></span></summary>
        <value><span data-ttu-id="49b9d-132">Retourne l’objet <see cref="T:System.Type" /> pour le type qui déclare ce membre.</span><span class="sxs-lookup"><span data-stu-id="49b9d-132">Returns the <see cref="T:System.Type" /> object for the type that declares this member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b9d-133">Un membre d’une classe (ou interface) est déclaré ou hérité d’une classe de base (ou interface).</span><span class="sxs-lookup"><span data-stu-id="49b9d-133">A member of a class (or interface) is either declared or inherited from a base class (or interface).</span></span>  
  
 <span data-ttu-id="49b9d-134">L’exemple de code suivant illustre l’utilisation de `DeclaringType`.</span><span class="sxs-lookup"><span data-stu-id="49b9d-134">The following code sample illustrates the use of `DeclaringType`.</span></span>  
  
 [!code-cpp[ConstructorBuilder_Attributes_4#2](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CPP/constructorbuilder_attributes_4.cpp#2)]
 [!code-csharp[ConstructorBuilder_Attributes_4#2](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/CS/constructorbuilder_attributes_4.cs#2)]
 [!code-vb[ConstructorBuilder_Attributes_4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_Attributes_4/VB/constructorbuilder_attributes_4.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineParameter">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ParameterBuilder DefineParameter (int iSequence, System.Reflection.ParameterAttributes attributes, string strParamName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ParameterBuilder DefineParameter(int32 iSequence, valuetype System.Reflection.ParameterAttributes attributes, string strParamName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.DefineParameter(System.Int32,System.Reflection.ParameterAttributes,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineParameter (iSequence As Integer, attributes As ParameterAttributes, strParamName As String) As ParameterBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ParameterBuilder ^ DefineParameter(int iSequence, System::Reflection::ParameterAttributes attributes, System::String ^ strParamName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ParameterBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iSequence" Type="System.Int32" />
        <Parameter Name="attributes" Type="System.Reflection.ParameterAttributes" />
        <Parameter Name="strParamName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="iSequence"><span data-ttu-id="49b9d-135">Position du paramètre dans la liste des paramètres.</span><span class="sxs-lookup"><span data-stu-id="49b9d-135">The position of the parameter in the parameter list.</span></span> <span data-ttu-id="49b9d-136">Les paramètres sont indexés en commençant par le numéro 1 pour le premier paramètre.</span><span class="sxs-lookup"><span data-stu-id="49b9d-136">Parameters are indexed beginning with the number 1 for the first parameter.</span></span></param>
        <param name="attributes"><span data-ttu-id="49b9d-137">Attributs du paramètres.</span><span class="sxs-lookup"><span data-stu-id="49b9d-137">The attributes of the parameter.</span></span></param>
        <param name="strParamName"><span data-ttu-id="49b9d-138">Nom du paramètre.</span><span class="sxs-lookup"><span data-stu-id="49b9d-138">The name of the parameter.</span></span> <span data-ttu-id="49b9d-139">Le nom peut être la chaîne Null.</span><span class="sxs-lookup"><span data-stu-id="49b9d-139">The name can be the null string.</span></span></param>
        <summary><span data-ttu-id="49b9d-140">Définit un paramètre de ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-140">Defines a parameter of this constructor.</span></span></summary>
        <returns><span data-ttu-id="49b9d-141">Retourne un objet <see langword="ParameterBuilder" /> qui représente le nouveau paramètre de ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-141">Returns a <see langword="ParameterBuilder" /> object that represents the new parameter of this constructor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b9d-142">Si vous spécifiez 0 (zéro) pour `iSequence`, cette méthode retourne un <xref:System.Reflection.Emit.ParameterBuilder> au lieu de lever une exception.</span><span class="sxs-lookup"><span data-stu-id="49b9d-142">If you specify 0 (zero) for `iSequence`, this method returns a <xref:System.Reflection.Emit.ParameterBuilder> instead of throwing an exception.</span></span> <span data-ttu-id="49b9d-143">Rien faire d’utile que vous pouvez faire avec cette <xref:System.Reflection.Emit.ParameterBuilder>.</span><span class="sxs-lookup"><span data-stu-id="49b9d-143">There is nothing useful that you can do with this <xref:System.Reflection.Emit.ParameterBuilder>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="49b9d-144"><paramref name="iSequence" /> est inférieur à 0 (zéro) ou est supérieur au nombre de paramètres du constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-144"><paramref name="iSequence" /> is less than 0 (zero), or it is greater than the number of parameters of the constructor.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="49b9d-145">Le type conteneur a été créé à l’aide de <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="49b9d-145">The containing type has been created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="49b9d-146">Retourne les attributs personnalisés définis pour ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-146">Returns the custom attributes defined for this constructor.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit"><span data-ttu-id="49b9d-147">Contrôle l’héritage des attributs personnalisés à partir des classes de base.</span><span class="sxs-lookup"><span data-stu-id="49b9d-147">Controls inheritance of custom attributes from base classes.</span></span> <span data-ttu-id="49b9d-148">Ce paramètre est ignoré.</span><span class="sxs-lookup"><span data-stu-id="49b9d-148">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="49b9d-149">Retourne tous les attributs personnalisés définis pour ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-149">Returns all the custom attributes defined for this constructor.</span></span></summary>
        <returns><span data-ttu-id="49b9d-150">Retourne un tableau d'objets représentant tous les attributs personnalisés du constructeur représenté par cette instance de <see cref="T:System.Reflection.Emit.ConstructorBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="49b9d-150">Returns an array of objects representing all the custom attributes of the constructor represented by this <see cref="T:System.Reflection.Emit.ConstructorBuilder" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b9d-151">Le `inherit` paramètre est ignoré, car une classe n’hérite jamais les constructeurs de classes de base.</span><span class="sxs-lookup"><span data-stu-id="49b9d-151">The `inherit` parameter is ignored because a class never inherits constructors from base classes.</span></span>  
  
 <span data-ttu-id="49b9d-152">Pour obtenir les attributs personnalisés, terminez le type en appelant <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A>, récupérez le constructeur en appelant le <xref:System.Type.GetConstructor%2A> méthode sur le type retourné, puis appelez le <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> méthode sur le <xref:System.Reflection.ConstructorInfo>.</span><span class="sxs-lookup"><span data-stu-id="49b9d-152">To get the custom attributes, finish building the type by calling <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A>, retrieve the constructor by calling the <xref:System.Type.GetConstructor%2A> method on the returned type, and then call the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method on the returned <xref:System.Reflection.ConstructorInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="49b9d-153">Cette méthode n’est pas prise en charge pour l’instant.</span><span class="sxs-lookup"><span data-stu-id="49b9d-153">This method is not currently supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="49b9d-154">Type d’attribut personnalisé.</span><span class="sxs-lookup"><span data-stu-id="49b9d-154">The custom attribute type.</span></span></param>
        <param name="inherit"><span data-ttu-id="49b9d-155">Contrôle l’héritage des attributs personnalisés à partir des classes de base.</span><span class="sxs-lookup"><span data-stu-id="49b9d-155">Controls inheritance of custom attributes from base classes.</span></span> <span data-ttu-id="49b9d-156">Ce paramètre est ignoré.</span><span class="sxs-lookup"><span data-stu-id="49b9d-156">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="49b9d-157">Retourne les attributs personnalisés identifiés par le type donné.</span><span class="sxs-lookup"><span data-stu-id="49b9d-157">Returns the custom attributes identified by the given type.</span></span></summary>
        <returns><span data-ttu-id="49b9d-158">Retourne un tableau de type <see cref="T:System.Object" /> représentant les attributs de ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-158">Returns an array of type <see cref="T:System.Object" /> representing the attributes of this constructor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b9d-159">Le `inherit` paramètre est ignoré, car une classe n’hérite jamais les constructeurs de classes de base.</span><span class="sxs-lookup"><span data-stu-id="49b9d-159">The `inherit` parameter is ignored because a class never inherits constructors from base classes.</span></span>  
  
 <span data-ttu-id="49b9d-160">Pour obtenir les attributs personnalisés, terminez le type en appelant <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A>, récupérez le constructeur en appelant le <xref:System.Type.GetConstructor%2A> méthode sur le type retourné, puis appelez le <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> méthode sur le <xref:System.Reflection.ConstructorInfo>.</span><span class="sxs-lookup"><span data-stu-id="49b9d-160">To get the custom attributes, finish building the type by calling <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A>, retrieve the constructor by calling the <xref:System.Type.GetConstructor%2A> method on the returned type, and then call the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method on the returned <xref:System.Reflection.ConstructorInfo>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="49b9d-161">Cette méthode n’est pas prise en charge pour l’instant.</span><span class="sxs-lookup"><span data-stu-id="49b9d-161">This method is not currently supported.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetILGenerator">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="49b9d-162">Obtient un <see cref="T:System.Reflection.Emit.ILGenerator" /> pouvant être utilisé pour émettre un corps de méthode pour ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-162">Gets an <see cref="T:System.Reflection.Emit.ILGenerator" /> that can be used to emit a method body for this constructor.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetILGenerator">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ILGenerator GetILGenerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ILGenerator GetILGenerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.GetILGenerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetILGenerator () As ILGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ILGenerator ^ GetILGenerator();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ILGenerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="49b9d-163">Obtient un <see cref="T:System.Reflection.Emit.ILGenerator" /> pour ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-163">Gets an <see cref="T:System.Reflection.Emit.ILGenerator" /> for this constructor.</span></span></summary>
        <returns><span data-ttu-id="49b9d-164">Retourne un objet <see cref="T:System.Reflection.Emit.ILGenerator" /> pour ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-164">Returns an <see cref="T:System.Reflection.Emit.ILGenerator" /> object for this constructor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b9d-165">Le runtime génère le code pour les constructeurs par défaut.</span><span class="sxs-lookup"><span data-stu-id="49b9d-165">The runtime generates the code for default constructors.</span></span> <span data-ttu-id="49b9d-166">Par conséquent, si une tentative est faite pour obtenir un `ILGenerator`, une exception sera levée.</span><span class="sxs-lookup"><span data-stu-id="49b9d-166">Therefore, if an attempt is made to obtain an `ILGenerator`, an exception will be thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49b9d-167">L’exemple de code suivant illustre l’utilisation de la `GetILGenerator` (méthode).</span><span class="sxs-lookup"><span data-stu-id="49b9d-167">The following code sample illustrates the use of the `GetILGenerator` method.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.ConstructorBuilder Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.ConstructorBuilder Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.ConstructorBuilder Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.ConstructorBuilder Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.ConstructorBuilder Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.ConstructorBuilder Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="49b9d-168">Le constructeur est un constructeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="49b9d-168">The constructor is a default constructor.</span></span>  
  
 <span data-ttu-id="49b9d-169">- ou -</span><span class="sxs-lookup"><span data-stu-id="49b9d-169">-or-</span></span>  
  
 <span data-ttu-id="49b9d-170">Le constructeur a <see cref="T:System.Reflection.MethodAttributes" /> ou <see cref="T:System.Reflection.MethodImplAttributes" /> indicateurs indiquant qu’il ne doit pas comporter un corps de méthode.</span><span class="sxs-lookup"><span data-stu-id="49b9d-170">The constructor has <see cref="T:System.Reflection.MethodAttributes" /> or <see cref="T:System.Reflection.MethodImplAttributes" /> flags indicating that it should not have a method body.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetILGenerator">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ILGenerator GetILGenerator (int streamSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ILGenerator GetILGenerator(int32 streamSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.GetILGenerator(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetILGenerator (streamSize As Integer) As ILGenerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ILGenerator ^ GetILGenerator(int streamSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ILGenerator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="streamSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="streamSize"><span data-ttu-id="49b9d-171">Taille du flux MSIL, en octets.</span><span class="sxs-lookup"><span data-stu-id="49b9d-171">The size of the MSIL stream, in bytes.</span></span></param>
        <summary><span data-ttu-id="49b9d-172">Obtient un objet <see cref="T:System.Reflection.Emit.ILGenerator" />, avec la taille de flux MSIL spécifiée, qui peut être utilisée pour générer un corps de méthode pour ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-172">Gets an <see cref="T:System.Reflection.Emit.ILGenerator" /> object, with the specified MSIL stream size, that can be used to build a method body for this constructor.</span></span></summary>
        <returns><span data-ttu-id="49b9d-173">Un <see cref="T:System.Reflection.Emit.ILGenerator" /> pour ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-173">An <see cref="T:System.Reflection.Emit.ILGenerator" /> for this constructor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b9d-174">Le runtime génère le code pour les constructeurs par défaut.</span><span class="sxs-lookup"><span data-stu-id="49b9d-174">The runtime generates the code for default constructors.</span></span> <span data-ttu-id="49b9d-175">Par conséquent, si une tentative est faite pour obtenir un `ILGenerator` d’un constructeur par défaut, une exception est levée.</span><span class="sxs-lookup"><span data-stu-id="49b9d-175">Therefore, if an attempt is made to obtain an `ILGenerator` for a default constructor, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="49b9d-176">Le constructeur est un constructeur par défaut.</span><span class="sxs-lookup"><span data-stu-id="49b9d-176">The constructor is a default constructor.</span></span>  
  
 <span data-ttu-id="49b9d-177">- ou -</span><span class="sxs-lookup"><span data-stu-id="49b9d-177">-or-</span></span>  
  
 <span data-ttu-id="49b9d-178">Le constructeur a <see cref="T:System.Reflection.MethodAttributes" /> ou <see cref="T:System.Reflection.MethodImplAttributes" /> indicateurs indiquant qu’il ne doit pas comporter un corps de méthode.</span><span class="sxs-lookup"><span data-stu-id="49b9d-178">The constructor has <see cref="T:System.Reflection.MethodAttributes" /> or <see cref="T:System.Reflection.MethodImplAttributes" /> flags indicating that it should not have a method body.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetMethodImplementationFlags">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodImplAttributes GetMethodImplementationFlags ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Reflection.MethodImplAttributes GetMethodImplementationFlags() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.GetMethodImplementationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetMethodImplementationFlags () As MethodImplAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::MethodImplAttributes GetMethodImplementationFlags();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodImplAttributes</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="49b9d-179">Retourne les indicateurs d’implémentation de méthode de ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-179">Returns the method implementation flags for this constructor.</span></span></summary>
        <returns><span data-ttu-id="49b9d-180">Indicateurs d’implémentation de méthode de ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-180">The method implementation flags for this constructor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b9d-181">L’exemple de code suivant illustre l’utilisation de `GetMethodImplementationFlags`.</span><span class="sxs-lookup"><span data-stu-id="49b9d-181">The following code sample illustrates the use of `GetMethodImplementationFlags`.</span></span>  
  
 [!code-cpp[ConstructorBuilder_GetModule_4#3](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CPP/constructorbuilder_getmodule_4.cpp#3)]
 [!code-csharp[ConstructorBuilder_GetModule_4#3](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CS/constructorbuilder_getmodule_4.cs#3)]
 [!code-vb[ConstructorBuilder_GetModule_4#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/VB/constructorbuilder_getmodule_4.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Module GetModule ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Module GetModule() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.GetModule" />
      <MemberSignature Language="VB.NET" Value="Public Function GetModule () As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Module ^ GetModule();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="49b9d-182">Retourne une référence au module qui contient ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-182">Returns a reference to the module that contains this constructor.</span></span></summary>
        <returns><span data-ttu-id="49b9d-183">Module qui contient ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-183">The module that contains this constructor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b9d-184">L’exemple de code suivant illustre l’utilisation de `GetModule`.</span><span class="sxs-lookup"><span data-stu-id="49b9d-184">The following code sample illustrates the usage of `GetModule`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.MethodBuilder.GetModule#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.GetModule/CPP/source3.cpp#1)]
 [!code-csharp[System.Reflection.Emit.MethodBuilder.GetModule#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.GetModule/CS/source3.cs#1)]
 [!code-vb[System.Reflection.Emit.MethodBuilder.GetModule#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.MethodBuilder.GetModule/VB/source3.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetParameters">
      <MemberSignature Language="C#" Value="public override System.Reflection.ParameterInfo[] GetParameters ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.ParameterInfo[] GetParameters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.GetParameters" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetParameters () As ParameterInfo()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::ParameterInfo ^&gt; ^ GetParameters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ParameterInfo[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="49b9d-185">Retourne les paramètres de ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-185">Returns the parameters of this constructor.</span></span></summary>
        <returns><span data-ttu-id="49b9d-186">Retourne un tableau d’objets <see cref="T:System.Reflection.ParameterInfo" /> qui représentent les paramètres de ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-186">Returns an array of <see cref="T:System.Reflection.ParameterInfo" /> objects that represent the parameters of this constructor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b9d-187">Cette propriété n’est pas prise en charge jusqu'à une fois la <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType> méthode a été appelée.</span><span class="sxs-lookup"><span data-stu-id="49b9d-187">This property is not supported until after the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A?displayProperty=nameWithType> method has been called.</span></span> <span data-ttu-id="49b9d-188">Dans les versions du .NET Framework 1.0 et 1.1, <xref:System.InvalidOperationException> est levée.</span><span class="sxs-lookup"><span data-stu-id="49b9d-188">In the .NET Framework versions 1.0 and 1.1, <xref:System.InvalidOperationException> is thrown.</span></span> <span data-ttu-id="49b9d-189">Dans le .NET Framework version 2.0, <xref:System.NotSupportedException> est levée.</span><span class="sxs-lookup"><span data-stu-id="49b9d-189">In the .NET Framework version 2.0, <xref:System.NotSupportedException> is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49b9d-190">L’exemple de code illustre l’utilisation de `GetParameters`.</span><span class="sxs-lookup"><span data-stu-id="49b9d-190">The code sample illustrates the use of `GetParameters`.</span></span>  
  
 [!code-cpp[ConstructorBuilder_GetModule_4#4](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CPP/constructorbuilder_getmodule_4.cpp#4)]
 [!code-csharp[ConstructorBuilder_GetModule_4#4](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CS/constructorbuilder_getmodule_4.cs#4)]
 [!code-vb[ConstructorBuilder_GetModule_4#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/VB/constructorbuilder_getmodule_4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="49b9d-191"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> n’a pas été appelé sur le type de ce constructeur, dans les versions 1.0 et 1.1 du .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="49b9d-191"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has not been called on this constructor's type, in the .NET Framework versions 1.0 and 1.1.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="49b9d-192"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> n’a pas été appelé sur le type de ce constructeur, dans la version 2.0 du .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="49b9d-192"><see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has not been called on this constructor's type, in the .NET Framework version 2.0.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetToken">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.MethodToken GetToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Reflection.Emit.MethodToken GetToken() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.GetToken" />
      <MemberSignature Language="VB.NET" Value="Public Function GetToken () As MethodToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::MethodToken GetToken();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.MethodToken</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="49b9d-193">Retourne <see cref="T:System.Reflection.Emit.MethodToken" /> qui représente le jeton de ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-193">Returns the <see cref="T:System.Reflection.Emit.MethodToken" /> that represents the token for this constructor.</span></span></summary>
        <returns><span data-ttu-id="49b9d-194">Retourne <see cref="T:System.Reflection.Emit.MethodToken" /> de ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-194">Returns the <see cref="T:System.Reflection.Emit.MethodToken" /> of this constructor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b9d-195">Cet exemple de code illustre l’utilisation de `GetToken`.</span><span class="sxs-lookup"><span data-stu-id="49b9d-195">This code sample illustrates the use of `GetToken`.</span></span>  
  
 [!code-cpp[ConstructorBuilder_GetModule_4#2](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CPP/constructorbuilder_getmodule_4.cpp#2)]
 [!code-csharp[ConstructorBuilder_GetModule_4#2](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/CS/constructorbuilder_getmodule_4.cs#2)]
 [!code-vb[ConstructorBuilder_GetModule_4#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_GetModule_4/VB/constructorbuilder_getmodule_4.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitLocals">
      <MemberSignature Language="C#" Value="public bool InitLocals { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InitLocals" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ConstructorBuilder.InitLocals" />
      <MemberSignature Language="VB.NET" Value="Public Property InitLocals As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InitLocals { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49b9d-196">Obtient ou détermine une valeur indiquant si les variables locales de ce constructeur doivent être initialisée à zéro.</span><span class="sxs-lookup"><span data-stu-id="49b9d-196">Gets or sets whether the local variables in this constructor should be zero-initialized.</span></span></summary>
        <value><span data-ttu-id="49b9d-197">Lecture/écriture.</span><span class="sxs-lookup"><span data-stu-id="49b9d-197">Read/write.</span></span> <span data-ttu-id="49b9d-198">Obtient ou détermine une valeur indiquant si les variables locales de ce constructeur doivent être initialisée à zéro.</span><span class="sxs-lookup"><span data-stu-id="49b9d-198">Gets or sets whether the local variables in this constructor should be zero-initialized.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Invoke">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="49b9d-199">Appelle le constructeur réfléchi de manière dynamique par cette instance.</span><span class="sxs-lookup"><span data-stu-id="49b9d-199">Invokes the constructor dynamically reflected by this instance.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public override object Invoke (System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Invoke(valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] parameters, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Invoke(System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ parameters, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="invokeAttr"><span data-ttu-id="49b9d-200">Il doit s'agir d'un bit indicateur de <see cref="T:System.Reflection.BindingFlags" />, tel qu'InvokeMethod, NonPublic, etc.</span><span class="sxs-lookup"><span data-stu-id="49b9d-200">This must be a bit flag from <see cref="T:System.Reflection.BindingFlags" />, such as InvokeMethod, NonPublic, and so on.</span></span></param>
        <param name="binder"><span data-ttu-id="49b9d-201">Objet qui active la liaison, la contrainte de types d'arguments, l'appel des membres et la récupération d'objets <see langword="MemberInfo" /> par le biais de la réflexion.</span><span class="sxs-lookup"><span data-stu-id="49b9d-201">An object that enables the binding, coercion of argument types, invocation of members, and retrieval of <see langword="MemberInfo" /> objects using reflection.</span></span> <span data-ttu-id="49b9d-202">Si le binder est <see langword="null" />, le binder par défaut est utilisé.</span><span class="sxs-lookup"><span data-stu-id="49b9d-202">If binder is <see langword="null" />, the default binder is used.</span></span> <span data-ttu-id="49b9d-203">Consultez <see cref="T:System.Reflection.Binder" />.</span><span class="sxs-lookup"><span data-stu-id="49b9d-203">See <see cref="T:System.Reflection.Binder" />.</span></span></param>
        <param name="parameters"><span data-ttu-id="49b9d-204">Liste d’arguments.</span><span class="sxs-lookup"><span data-stu-id="49b9d-204">An argument list.</span></span> <span data-ttu-id="49b9d-205">Il s’agit d’un tableau d’arguments possédant les mêmes nombres, ordre et type que les paramètres du constructeur à appeler.</span><span class="sxs-lookup"><span data-stu-id="49b9d-205">This is an array of arguments with the same number, order, and type as the parameters of the constructor to be invoked.</span></span> <span data-ttu-id="49b9d-206">En l'absence de paramètres, la valeur est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="49b9d-206">If there are no parameters this should be <see langword="null" />.</span></span></param>
        <param name="culture"><span data-ttu-id="49b9d-207">Instance de <see cref="T:System.Globalization.CultureInfo" /> utilisée pour régir la contrainte des types.</span><span class="sxs-lookup"><span data-stu-id="49b9d-207">An instance of <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span></span> <span data-ttu-id="49b9d-208">Si la valeur est null, <see cref="T:System.Globalization.CultureInfo" /> du thread en cours est utilisé.</span><span class="sxs-lookup"><span data-stu-id="49b9d-208">If this is null, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span> <span data-ttu-id="49b9d-209">(Par exemple, cela est nécessaire pour convertir un <see cref="T:System.String" /> représentant 1 000 en valeur <see cref="T:System.Double" />, car 1 000 est représenté de différentes manières, selon la culture.)</span><span class="sxs-lookup"><span data-stu-id="49b9d-209">(For example, this is necessary to convert a <see cref="T:System.String" /> that represents 1000 to a <see cref="T:System.Double" /> value, since 1000 is represented differently by different cultures.)</span></span></param>
        <summary><span data-ttu-id="49b9d-210">Appelle le constructeur réfléchi de manière dynamique par cette instance sur l’objet donné, en passant les paramètres spécifiés et en tenant compte des contraintes du binder donné.</span><span class="sxs-lookup"><span data-stu-id="49b9d-210">Invokes the constructor dynamically reflected by this instance on the given object, passing along the specified parameters, and under the constraints of the given binder.</span></span></summary>
        <returns><span data-ttu-id="49b9d-211">Retourne un <see cref="T:System.Object" /> représentant la valeur de retour du constructeur appelé.</span><span class="sxs-lookup"><span data-stu-id="49b9d-211">Returns an <see cref="T:System.Object" /> that is the return value of the invoked constructor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b9d-212">Si le constructeur n’a aucun paramètre, la valeur de la `parameters` le paramètre doit être `null`.</span><span class="sxs-lookup"><span data-stu-id="49b9d-212">If the constructor has no parameters, the value of the `parameters` parameter should be `null`.</span></span> <span data-ttu-id="49b9d-213">Sinon, le nombre, le type et l’ordre des éléments dans le `parameters` tableau doit être identique pour le nombre, le type et l’ordre des paramètres pour le constructeur réfléchi par cette instance.</span><span class="sxs-lookup"><span data-stu-id="49b9d-213">Otherwise, the number, type, and order of elements in the `parameters` array should be identical to the number, type, and order of parameters for the constructor reflected by this instance.</span></span>  
  
 <span data-ttu-id="49b9d-214">Par exemple, si le constructeur réfléchi par cette instance est déclaré comme public classe acceptant deux chaînes, puis le `parameters` paramètre doit être un tableau de <xref:System.Object> avec une longueur égale à 2.</span><span class="sxs-lookup"><span data-stu-id="49b9d-214">For example, if the constructor reflected by this instance is declared as public class taking two strings, then the `parameters` parameter should be an array of <xref:System.Object> with length 2.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49b9d-215">Restrictions d’accès sont ignorées pour le code de confiance.</span><span class="sxs-lookup"><span data-stu-id="49b9d-215">Access restrictions are ignored for fully-trusted code.</span></span> <span data-ttu-id="49b9d-216">Autrement dit, propriétés, méthodes, champs et constructeurs privés sont accessibles et appelé à l’aide de la réflexion lorsque le code est entièrement fiable.</span><span class="sxs-lookup"><span data-stu-id="49b9d-216">That is, private constructors, methods, fields, and properties can be accessed and invoked using Reflection whenever the code is fully trusted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="49b9d-217">Cette méthode n’est pas prise en charge pour l’instant.</span><span class="sxs-lookup"><span data-stu-id="49b9d-217">This method is not currently supported.</span></span> <span data-ttu-id="49b9d-218">Vous pouvez récupérer le constructeur à l'aide de <see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />, puis appeler <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> sur <see cref="T:System.Reflection.ConstructorInfo" /> retourné.</span><span class="sxs-lookup"><span data-stu-id="49b9d-218">You can retrieve the constructor using <see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> and call <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> on the returned <see cref="T:System.Reflection.ConstructorInfo" />.</span></span></exception>
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="Invoke">
      <MemberSignature Language="C#" Value="public override object Invoke (object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object[] parameters, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object Invoke(object obj, valuetype System.Reflection.BindingFlags invokeAttr, class System.Reflection.Binder binder, object[] parameters, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.Invoke(System.Object,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ Invoke(System::Object ^ obj, System::Reflection::BindingFlags invokeAttr, System::Reflection::Binder ^ binder, cli::array &lt;System::Object ^&gt; ^ parameters, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
        <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
        <Parameter Name="binder" Type="System.Reflection.Binder" />
        <Parameter Name="parameters" Type="System.Object[]" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="49b9d-219">Objet qui doit être réinitialisé.</span><span class="sxs-lookup"><span data-stu-id="49b9d-219">The object that needs to be reinitialized.</span></span></param>
        <param name="invokeAttr"><span data-ttu-id="49b9d-220">Une des valeurs <see langword="BindingFlags" /> qui spécifie le type de liaison requis.</span><span class="sxs-lookup"><span data-stu-id="49b9d-220">One of the <see langword="BindingFlags" /> values that specifies the type of binding that is desired.</span></span></param>
        <param name="binder"><span data-ttu-id="49b9d-221"><see langword="Binder" /> qui définit un jeu de propriétés et active la liaison, la contrainte des types d'arguments ainsi que l'appel des membres à l'aide de la réflexion.</span><span class="sxs-lookup"><span data-stu-id="49b9d-221">A <see langword="Binder" /> that defines a set of properties and enables the binding, coercion of argument types, and invocation of members using reflection.</span></span> <span data-ttu-id="49b9d-222">Si <c>binder</c> a la valeur <see langword="null" />, Binder.DefaultBinding est utilisé.</span><span class="sxs-lookup"><span data-stu-id="49b9d-222">If <c>binder</c> is <see langword="null" />, then Binder.DefaultBinding is used.</span></span></param>
        <param name="parameters"><span data-ttu-id="49b9d-223">Liste d’arguments.</span><span class="sxs-lookup"><span data-stu-id="49b9d-223">An argument list.</span></span> <span data-ttu-id="49b9d-224">Il s’agit d’un tableau d’arguments présentant les mêmes nombre, ordre et type que les paramètres du constructeur à appeler.</span><span class="sxs-lookup"><span data-stu-id="49b9d-224">This is an array of arguments with the same number, order, and type as the parameters of the constructor to be invoked.</span></span> <span data-ttu-id="49b9d-225">En l'absence de paramètres, la valeur doit être une référence null (<see langword="Nothing" /> en Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="49b9d-225">If there are no parameters, this should be a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></param>
        <param name="culture"><span data-ttu-id="49b9d-226"><see cref="T:System.Globalization.CultureInfo" /> utilisé pour régir la contrainte de types.</span><span class="sxs-lookup"><span data-stu-id="49b9d-226">A <see cref="T:System.Globalization.CultureInfo" /> used to govern the coercion of types.</span></span> <span data-ttu-id="49b9d-227">Si la valeur est null, <see cref="T:System.Globalization.CultureInfo" /> du thread en cours est utilisé.</span><span class="sxs-lookup"><span data-stu-id="49b9d-227">If this is null, the <see cref="T:System.Globalization.CultureInfo" /> for the current thread is used.</span></span></param>
        <summary><span data-ttu-id="49b9d-228">Appelle de manière dynamique le constructeur réfléchi par cette instance avec les arguments spécifiés et les contraintes du <see langword="Binder" /> spécifié.</span><span class="sxs-lookup"><span data-stu-id="49b9d-228">Dynamically invokes the constructor reflected by this instance with the specified arguments, under the constraints of the specified <see langword="Binder" />.</span></span></summary>
        <returns><span data-ttu-id="49b9d-229">Instance de la classe associée au constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-229">An instance of the class associated with the constructor.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b9d-230">Le nombre, le type et l’ordre des éléments dans le tableau de paramètres doivent être identiques pour le nombre, le type et l’ordre des paramètres pour le constructeur réfléchi par cette instance.</span><span class="sxs-lookup"><span data-stu-id="49b9d-230">The number, type, and order of elements in the parameters array should be identical to the number, type, and order of parameters for the constructor reflected by this instance.</span></span>  
  
 <span data-ttu-id="49b9d-231">Avant d’appeler le constructeur, `Invoke` garantit que l’appelant possède l’autorisation d’accès, et que les paramètres sont de nombre, ordre et type.</span><span class="sxs-lookup"><span data-stu-id="49b9d-231">Before calling the constructor, `Invoke` ensures that the caller has access permission, and that the parameters are of the correct number, order and type.</span></span>  
  
 <span data-ttu-id="49b9d-232">Restrictions d’accès sont ignorées pour le code de confiance.</span><span class="sxs-lookup"><span data-stu-id="49b9d-232">Access restrictions are ignored for fully-trusted code.</span></span> <span data-ttu-id="49b9d-233">Autrement dit, propriétés, méthodes, champs et constructeurs privés sont accessibles et appelé à l’aide de la réflexion lorsque le code est entièrement fiable.</span><span class="sxs-lookup"><span data-stu-id="49b9d-233">That is, private constructors, methods, fields, and properties can be accessed and invoked using Reflection whenever the code is fully trusted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="49b9d-234">Cette méthode n’est pas prise en charge pour l’instant.</span><span class="sxs-lookup"><span data-stu-id="49b9d-234">This method is not currently supported.</span></span> <span data-ttu-id="49b9d-235">Vous pouvez récupérer le constructeur à l'aide de <see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />, puis appeler <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> sur <see cref="T:System.Reflection.ConstructorInfo" /> retourné.</span><span class="sxs-lookup"><span data-stu-id="49b9d-235">You can retrieve the constructor using <see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> and call <see cref="M:System.Reflection.ConstructorInfo.Invoke(System.Reflection.BindingFlags,System.Reflection.Binder,System.Object[],System.Globalization.CultureInfo)" /> on the returned <see cref="T:System.Reflection.ConstructorInfo" />.</span></span></exception>
        <altmember cref="T:System.Reflection.Binder" />
        <altmember cref="T:System.Reflection.BindingFlags" />
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType"><span data-ttu-id="49b9d-236">Type d’attribut personnalisé.</span><span class="sxs-lookup"><span data-stu-id="49b9d-236">A custom attribute type.</span></span></param>
        <param name="inherit"><span data-ttu-id="49b9d-237">Contrôle l’héritage des attributs personnalisés à partir des classes de base.</span><span class="sxs-lookup"><span data-stu-id="49b9d-237">Controls inheritance of custom attributes from base classes.</span></span> <span data-ttu-id="49b9d-238">Ce paramètre est ignoré.</span><span class="sxs-lookup"><span data-stu-id="49b9d-238">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="49b9d-239">Vérifie si le type d’attribut personnalisé spécifié est défini.</span><span class="sxs-lookup"><span data-stu-id="49b9d-239">Checks if the specified custom attribute type is defined.</span></span></summary>
        <returns>
          <span data-ttu-id="49b9d-240"><see langword="true" /> si le type d'attribut personnalisé spécifié est défini ; sinon, <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="49b9d-240"><see langword="true" /> if the specified custom attribute type is defined; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b9d-241">Consultez la spécification de métadonnées pour plus d’informations sur la mise en forme `binaryAttribute`.</span><span class="sxs-lookup"><span data-stu-id="49b9d-241">See the metadata specification for details on how to format `binaryAttribute`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="49b9d-242">Cette méthode n’est pas prise en charge pour l’instant.</span><span class="sxs-lookup"><span data-stu-id="49b9d-242">This method is not currently supported.</span></span> <span data-ttu-id="49b9d-243">Vous pouvez récupérer le constructeur à l'aide de <see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" />, puis appeler <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> sur <see cref="T:System.Reflection.ConstructorInfo" /> retourné.</span><span class="sxs-lookup"><span data-stu-id="49b9d-243">You can retrieve the constructor using <see cref="M:System.Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])" /> and call <see cref="M:System.Reflection.MemberInfo.IsDefined(System.Type,System.Boolean)" /> on the returned <see cref="T:System.Reflection.ConstructorInfo" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MethodHandle">
      <MemberSignature Language="C#" Value="public override RuntimeMethodHandle MethodHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.RuntimeMethodHandle MethodHandle" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ConstructorBuilder.MethodHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MethodHandle As RuntimeMethodHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property RuntimeMethodHandle MethodHandle { RuntimeMethodHandle get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.RuntimeMethodHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49b9d-244">Récupère le handle interne de la méthode.</span><span class="sxs-lookup"><span data-stu-id="49b9d-244">Retrieves the internal handle for the method.</span></span> <span data-ttu-id="49b9d-245">Utilisez ce handle pour accéder au handle des métadonnées sous-jacentes.</span><span class="sxs-lookup"><span data-stu-id="49b9d-245">Use this handle to access the underlying metadata handle.</span></span></summary>
        <value><span data-ttu-id="49b9d-246">Récupère le handle interne de la méthode.</span><span class="sxs-lookup"><span data-stu-id="49b9d-246">Returns the internal handle for the method.</span></span> <span data-ttu-id="49b9d-247">Utilisez ce handle pour accéder au handle des métadonnées sous-jacentes.</span><span class="sxs-lookup"><span data-stu-id="49b9d-247">Use this handle to access the underlying metadata handle.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="49b9d-248">Cette propriété n’est pas prise en charge sur cette classe.</span><span class="sxs-lookup"><span data-stu-id="49b9d-248">This property is not supported on this class.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MethodImplementationFlags">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodImplAttributes MethodImplementationFlags { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Reflection.MethodImplAttributes MethodImplementationFlags" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ConstructorBuilder.MethodImplementationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property MethodImplementationFlags As MethodImplAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodImplAttributes MethodImplementationFlags { System::Reflection::MethodImplAttributes get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodImplAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Module">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module Module { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module Module" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ConstructorBuilder.Module" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Module As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ Module { System::Reflection::Module ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49b9d-249">Obtient le module dynamique dans lequel ce constructeur est défini.</span><span class="sxs-lookup"><span data-stu-id="49b9d-249">Gets the dynamic module in which this constructor is defined.</span></span></summary>
        <value><span data-ttu-id="49b9d-250">Objet <see cref="T:System.Reflection.Module" /> représentant le module dynamique dans lequel ce constructeur est défini.</span><span class="sxs-lookup"><span data-stu-id="49b9d-250">A <see cref="T:System.Reflection.Module" /> object that represents the dynamic module in which this constructor is defined.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b9d-251">Cette propriété retourne la même valeur que le <xref:System.Reflection.Emit.ConstructorBuilder.GetModule%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="49b9d-251">This property returns the same value as the <xref:System.Reflection.Emit.ConstructorBuilder.GetModule%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Reflection.Module" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ConstructorBuilder.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49b9d-252">Récupère le nom de ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-252">Retrieves the name of this constructor.</span></span></summary>
        <value><span data-ttu-id="49b9d-253">Retourne le nom de ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-253">Returns the name of this constructor.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b9d-254">L’exemple de code suivant illustre l’utilisation de `Name`.</span><span class="sxs-lookup"><span data-stu-id="49b9d-254">The following code sample illustrates the use of `Name`.</span></span>  
  
 [!code-cpp[ConstructorBuilder_Name_5#2](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_Name_5/CPP/constructorbuilder_name_5.cpp#2)]
 [!code-csharp[ConstructorBuilder_Name_5#2](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_Name_5/CS/constructorbuilder_name_5.cs#2)]
 [!code-vb[ConstructorBuilder_Name_5#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_Name_5/VB/constructorbuilder_name_5.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReflectedType">
      <MemberSignature Language="C#" Value="public override Type ReflectedType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReflectedType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ConstructorBuilder.ReflectedType" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReflectedType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Type ^ ReflectedType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49b9d-255">Contient une référence à l'objet <see cref="T:System.Type" /> à partir duquel cet objet a été obtenu.</span><span class="sxs-lookup"><span data-stu-id="49b9d-255">Holds a reference to the <see cref="T:System.Type" /> object from which this object was obtained.</span></span></summary>
        <value><span data-ttu-id="49b9d-256">Retourne l'objet <see langword="Type" /> à partir duquel cet objet a été obtenu.</span><span class="sxs-lookup"><span data-stu-id="49b9d-256">Returns the <see langword="Type" /> object from which this object was obtained.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b9d-257">A <xref:System.Reflection.Emit.ConstructorBuilder> objet représente un constructeur sur une classe particulière.</span><span class="sxs-lookup"><span data-stu-id="49b9d-257">A <xref:System.Reflection.Emit.ConstructorBuilder> object represents a constructor on a particular class.</span></span> <span data-ttu-id="49b9d-258">Pour obtenir un <xref:System.Reflection.ConstructorInfo> objet, le <xref:System.Type> objet qui représente la classe qui prend en charge le constructeur est interrogé.</span><span class="sxs-lookup"><span data-stu-id="49b9d-258">In order to obtain a <xref:System.Reflection.ConstructorInfo> object, the <xref:System.Type> object that represents the class that supports the constructor is queried.</span></span> <span data-ttu-id="49b9d-259">Cette propriété contient une référence à cet <xref:System.Type> objet.</span><span class="sxs-lookup"><span data-stu-id="49b9d-259">This property holds a reference to that <xref:System.Type> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Reflection.MemberInfo.ReflectedType" />
      </Docs>
    </Member>
    <Member MemberName="ReturnType">
      <MemberSignature Language="C#" Value="public Type ReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ConstructorBuilder.ReturnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ReturnType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49b9d-260">Obtient <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="49b9d-260">Gets <see langword="null" />.</span></span></summary>
        <value><span data-ttu-id="49b9d-261">Retourne <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="49b9d-261">Returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b9d-262">Cette propriété peut être supprimée dans une future version.</span><span class="sxs-lookup"><span data-stu-id="49b9d-262">This property might be removed in a future version.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="49b9d-263">Définit un attribut personnalisé.</span><span class="sxs-lookup"><span data-stu-id="49b9d-263">Sets a custom attribute.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.Emit.CustomAttributeBuilder customBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (customBuilder As CustomAttributeBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::Emit::CustomAttributeBuilder ^ customBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
      </Parameters>
      <Docs>
        <param name="customBuilder"><span data-ttu-id="49b9d-264">Instance d’une classe d’assistance pour définir l’attribut personnalisé.</span><span class="sxs-lookup"><span data-stu-id="49b9d-264">An instance of a helper class to define the custom attribute.</span></span></param>
        <summary><span data-ttu-id="49b9d-265">Définit un attribut personnalisé à l’aide d’un générateur d’attributs personnalisés.</span><span class="sxs-lookup"><span data-stu-id="49b9d-265">Set a custom attribute using a custom attribute builder.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="49b9d-266">L’exemple de code suivant illustre l’utilisation de `SetCustomAttribute` du contexte d’un <xref:System.Reflection.Emit.ConstructorBuilder>, en passant un <xref:System.Reflection.Emit.CustomAttributeBuilder>.</span><span class="sxs-lookup"><span data-stu-id="49b9d-266">The following code sample illustrates the use of `SetCustomAttribute` of the context of a <xref:System.Reflection.Emit.ConstructorBuilder>, passing a <xref:System.Reflection.Emit.CustomAttributeBuilder>.</span></span>  
  
 [!code-cpp[ConstructorBuilder_SetCustomAttribute1#1](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_SetCustomAttribute1/CPP/constructorbuilder_setcustomattribute1.cpp#1)]
 [!code-csharp[ConstructorBuilder_SetCustomAttribute1#1](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_SetCustomAttribute1/CS/constructorbuilder_setcustomattribute1.cs#1)]
 [!code-vb[ConstructorBuilder_SetCustomAttribute1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_SetCustomAttribute1/VB/constructorbuilder_setcustomattribute1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="49b9d-267"><paramref name="customBuilder" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="49b9d-267"><paramref name="customBuilder" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.ConstructorInfo con, unsigned int8[] binaryAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (con As ConstructorInfo, binaryAttribute As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::ConstructorInfo ^ con, cli::array &lt;System::Byte&gt; ^ binaryAttribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="binaryAttribute" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="con"><span data-ttu-id="49b9d-268">Le constructeur de l’attribut personnalisé.</span><span class="sxs-lookup"><span data-stu-id="49b9d-268">The constructor for the custom attribute.</span></span></param>
        <param name="binaryAttribute"><span data-ttu-id="49b9d-269">Objet blob d’octets représentant les attributs.</span><span class="sxs-lookup"><span data-stu-id="49b9d-269">A byte blob representing the attributes.</span></span></param>
        <summary><span data-ttu-id="49b9d-270">Définit un attribut personnalisé à l’aide d’un objet blob d’attribut personnalisé spécifié.</span><span class="sxs-lookup"><span data-stu-id="49b9d-270">Set a custom attribute using a specified custom attribute blob.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b9d-271">Consultez la spécification de métadonnées dans la documentation ECMA Partition II pour plus d’informations sur la mise en forme `binaryAttribute`.</span><span class="sxs-lookup"><span data-stu-id="49b9d-271">See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`.</span></span> <span data-ttu-id="49b9d-272">La documentation est disponible en ligne. Consultez [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) sur MSDN et [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) sur le site web d’Ecma International.</span><span class="sxs-lookup"><span data-stu-id="49b9d-272">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49b9d-273">L’exemple de code suivant illustre l’utilisation de `SetCustomAttribute` du contexte d’un <xref:System.Reflection.Emit.ConstructorBuilder>, en passant un objet blob d’octets.</span><span class="sxs-lookup"><span data-stu-id="49b9d-273">The following code sample illustrates the use of `SetCustomAttribute` of the context of a <xref:System.Reflection.Emit.ConstructorBuilder>, passing a byte blob.</span></span>  
  
 [!code-cpp[ConstructorBuilder_SetCustomAttribute2#1](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_SetCustomAttribute2/CPP/constructorbuilder_setcustomattribute2.cpp#1)]
 [!code-csharp[ConstructorBuilder_SetCustomAttribute2#1](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_SetCustomAttribute2/CS/constructorbuilder_setcustomattribute2.cs#1)]
 [!code-vb[ConstructorBuilder_SetCustomAttribute2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_SetCustomAttribute2/VB/constructorbuilder_setcustomattribute2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="49b9d-274"><paramref name="con" /> ou <paramref name="binaryAttribute" /> a la valeur <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="49b9d-274"><paramref name="con" /> or <paramref name="binaryAttribute" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetImplementationFlags">
      <MemberSignature Language="C#" Value="public void SetImplementationFlags (System.Reflection.MethodImplAttributes attributes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetImplementationFlags(valuetype System.Reflection.MethodImplAttributes attributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.SetImplementationFlags(System.Reflection.MethodImplAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetImplementationFlags (attributes As MethodImplAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetImplementationFlags(System::Reflection::MethodImplAttributes attributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Reflection.MethodImplAttributes" />
      </Parameters>
      <Docs>
        <param name="attributes"><span data-ttu-id="49b9d-275">Indicateurs d’implémentation de méthode.</span><span class="sxs-lookup"><span data-stu-id="49b9d-275">The method implementation flags.</span></span></param>
        <summary><span data-ttu-id="49b9d-276">Définit les indicateurs d’implémentation de méthode de ce constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-276">Sets the method implementation flags for this constructor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b9d-277">L’exemple de code suivant illustre l’utilisation de `SetImplementationFlags`.</span><span class="sxs-lookup"><span data-stu-id="49b9d-277">The following code sample illustrates the use of `SetImplementationFlags`.</span></span>  
  
 [!code-cpp[ConstructorBuilder_SetImplementationFlags#1](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_SetImplementationFlags/CPP/constructorbuilder_setimplementationflags.cpp#1)]
 [!code-csharp[ConstructorBuilder_SetImplementationFlags#1](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_SetImplementationFlags/CS/constructorbuilder_setimplementationflags.cs#1)]
 [!code-vb[ConstructorBuilder_SetImplementationFlags#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_SetImplementationFlags/VB/constructorbuilder_setimplementationflags.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="49b9d-278">Le type conteneur a été créé à l’aide de <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="49b9d-278">The containing type has been created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetMethodBody">
      <MemberSignature Language="C#" Value="public void SetMethodBody (byte[] il, int maxStack, byte[] localSignature, System.Collections.Generic.IEnumerable&lt;System.Reflection.Emit.ExceptionHandler&gt; exceptionHandlers, System.Collections.Generic.IEnumerable&lt;int&gt; tokenFixups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetMethodBody(unsigned int8[] il, int32 maxStack, unsigned int8[] localSignature, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Reflection.Emit.ExceptionHandler&gt; exceptionHandlers, class System.Collections.Generic.IEnumerable`1&lt;int32&gt; tokenFixups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.SetMethodBody(System.Byte[],System.Int32,System.Byte[],System.Collections.Generic.IEnumerable{System.Reflection.Emit.ExceptionHandler},System.Collections.Generic.IEnumerable{System.Int32})" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetMethodBody (il As Byte(), maxStack As Integer, localSignature As Byte(), exceptionHandlers As IEnumerable(Of ExceptionHandler), tokenFixups As IEnumerable(Of Integer))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetMethodBody(cli::array &lt;System::Byte&gt; ^ il, int maxStack, cli::array &lt;System::Byte&gt; ^ localSignature, System::Collections::Generic::IEnumerable&lt;System::Reflection::Emit::ExceptionHandler&gt; ^ exceptionHandlers, System::Collections::Generic::IEnumerable&lt;int&gt; ^ tokenFixups);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="il" Type="System.Byte[]" />
        <Parameter Name="maxStack" Type="System.Int32" />
        <Parameter Name="localSignature" Type="System.Byte[]" />
        <Parameter Name="exceptionHandlers" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Emit.ExceptionHandler&gt;" />
        <Parameter Name="tokenFixups" Type="System.Collections.Generic.IEnumerable&lt;System.Int32&gt;" />
      </Parameters>
      <Docs>
        <param name="il"><span data-ttu-id="49b9d-279">Tableau qui contient des instructions MSIL valides.</span><span class="sxs-lookup"><span data-stu-id="49b9d-279">An array that contains valid MSIL instructions.</span></span></param>
        <param name="maxStack"><span data-ttu-id="49b9d-280">Profondeur maximale de l’évaluation de la pile.</span><span class="sxs-lookup"><span data-stu-id="49b9d-280">The maximum stack evaluation depth.</span></span></param>
        <param name="localSignature"><span data-ttu-id="49b9d-281">Tableau d’octets qui contient la structure de variable locale sérialisée.</span><span class="sxs-lookup"><span data-stu-id="49b9d-281">An array of bytes that contain the serialized local variable structure.</span></span> <span data-ttu-id="49b9d-282">Spécifie <see langword="null" /> si le constructeur n'a aucune variable locale.</span><span class="sxs-lookup"><span data-stu-id="49b9d-282">Specify <see langword="null" /> if the constructor has no local variables.</span></span></param>
        <param name="exceptionHandlers"><span data-ttu-id="49b9d-283">Collection qui contient les gestionnaires d’exceptions pour le constructeur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-283">A collection that contains the exception handlers for the constructor.</span></span> <span data-ttu-id="49b9d-284">Spécifie <see langword="null" /> si le constructeur n'a aucun gestionnaire d'exceptions.</span><span class="sxs-lookup"><span data-stu-id="49b9d-284">Specify <see langword="null" /> if the constructor has no exception handlers.</span></span></param>
        <param name="tokenFixups"><span data-ttu-id="49b9d-285">Collection de valeurs qui représentent des offsets dans <c>il</c>, dont chacun spécifie le début d’un jeton pouvant être modifié.</span><span class="sxs-lookup"><span data-stu-id="49b9d-285">A collection of values that represent offsets in <c>il</c>, each of which specifies the beginning of a token that may be modified.</span></span> <span data-ttu-id="49b9d-286">Spécifie <see langword="null" /> si aucun jeton du constructeur ne doit être modifié.</span><span class="sxs-lookup"><span data-stu-id="49b9d-286">Specify <see langword="null" /> if the constructor has no tokens that have to be modified.</span></span></param>
        <summary><span data-ttu-id="49b9d-287">Crée le corps du constructeur en utilisant un tableau d’octets d’instructions MSIL (Microsoft Intermediate Language) spécifié.</span><span class="sxs-lookup"><span data-stu-id="49b9d-287">Creates the body of the constructor by using a specified byte array of Microsoft intermediate language (MSIL) instructions.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="49b9d-288"><paramref name="il" /> est <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="49b9d-288"><paramref name="il" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="49b9d-289"><paramref name="maxStack" /> est un nombre négatif.</span><span class="sxs-lookup"><span data-stu-id="49b9d-289"><paramref name="maxStack" /> is negative.</span></span>  
  
 <span data-ttu-id="49b9d-290">- ou -</span><span class="sxs-lookup"><span data-stu-id="49b9d-290">-or-</span></span>  
  
 <span data-ttu-id="49b9d-291">Un des <paramref name="exceptionHandlers" /> spécifie un décalage en dehors de <paramref name="il" />.</span><span class="sxs-lookup"><span data-stu-id="49b9d-291">One of <paramref name="exceptionHandlers" /> specifies an offset outside of <paramref name="il" />.</span></span>  
  
 <span data-ttu-id="49b9d-292">- ou -</span><span class="sxs-lookup"><span data-stu-id="49b9d-292">-or-</span></span>  
  
 <span data-ttu-id="49b9d-293">Un des <paramref name="tokenFixups" /> spécifie un décalage qui est en dehors du tableau <paramref name="il" />.</span><span class="sxs-lookup"><span data-stu-id="49b9d-293">One of <paramref name="tokenFixups" /> specifies an offset that is outside the <paramref name="il" /> array.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="49b9d-294">Le type conteneur a été créé au préalable à l'aide de la méthode <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="49b9d-294">The containing type was previously created using the <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> method.</span></span>  
  
 <span data-ttu-id="49b9d-295">- ou -</span><span class="sxs-lookup"><span data-stu-id="49b9d-295">-or-</span></span>  
  
 <span data-ttu-id="49b9d-296">La méthode a été appelée précédemment sur cet objet <see cref="T:System.Reflection.Emit.ConstructorBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="49b9d-296">This method was called previously on this <see cref="T:System.Reflection.Emit.ConstructorBuilder" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SetSymCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetSymCustomAttribute (string name, byte[] data);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSymCustomAttribute(string name, unsigned int8[] data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.SetSymCustomAttribute(System.String,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSymCustomAttribute (name As String, data As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSymCustomAttribute(System::String ^ name, cli::array &lt;System::Byte&gt; ^ data);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="data" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="49b9d-297">Nom de l’attribut personnalisé.</span><span class="sxs-lookup"><span data-stu-id="49b9d-297">The name of the custom attribute.</span></span></param>
        <param name="data"><span data-ttu-id="49b9d-298">Valeur de l'attribut personnalisé.</span><span class="sxs-lookup"><span data-stu-id="49b9d-298">The value of the custom attribute.</span></span></param>
        <summary><span data-ttu-id="49b9d-299">Définit l’attribut personnalisé de ce constructeur associé aux informations symboliques.</span><span class="sxs-lookup"><span data-stu-id="49b9d-299">Sets this constructor's custom attribute associated with symbolic information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b9d-300">L’exemple de code suivant illustre l’utilisation de `SetSymCustomAttributes`.</span><span class="sxs-lookup"><span data-stu-id="49b9d-300">The following code sample illustrates the use of `SetSymCustomAttributes`.</span></span>  
  
 [!code-cpp[ConstructorBuilder_SetSymCustomAttribute#1](~/samples/snippets/cpp/VS_Snippets_CLR/ConstructorBuilder_SetSymCustomAttribute/CPP/constructorbuilder_setsymcustomattribute.cpp#1)]
 [!code-csharp[ConstructorBuilder_SetSymCustomAttribute#1](~/samples/snippets/csharp/VS_Snippets_CLR/ConstructorBuilder_SetSymCustomAttribute/CS/constructorbuilder_setsymcustomattribute.cs#1)]
 [!code-vb[ConstructorBuilder_SetSymCustomAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ConstructorBuilder_SetSymCustomAttribute/VB/constructorbuilder_setsymcustomattribute.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="49b9d-301">Le type conteneur a été créé à l’aide de <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span><span class="sxs-lookup"><span data-stu-id="49b9d-301">The containing type has been created using <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" />.</span></span>  
  
 <span data-ttu-id="49b9d-302">- ou -</span><span class="sxs-lookup"><span data-stu-id="49b9d-302">-or-</span></span>  
  
 <span data-ttu-id="49b9d-303">Le module n’a pas de writer de symbole défini.</span><span class="sxs-lookup"><span data-stu-id="49b9d-303">The module does not have a symbol writer defined.</span></span> <span data-ttu-id="49b9d-304">Par exemple, le module n’est pas un module de débogage.</span><span class="sxs-lookup"><span data-stu-id="49b9d-304">For example, the module is not a debug module.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Signature">
      <MemberSignature Language="C#" Value="public string Signature { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Signature" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.ConstructorBuilder.Signature" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Signature As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Signature { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="49b9d-305">Récupère la signature du champ sous la forme d’une chaîne.</span><span class="sxs-lookup"><span data-stu-id="49b9d-305">Retrieves the signature of the field in the form of a string.</span></span></summary>
        <value><span data-ttu-id="49b9d-306">Retourne la signature du champ.</span><span class="sxs-lookup"><span data-stu-id="49b9d-306">Returns the signature of the field.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorBuilder.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _ConstructorBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ConstructorBuilder.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _ConstructorBuilder.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ConstructorBuilder.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_ConstructorBuilder::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid"><span data-ttu-id="49b9d-307">Réservé à un usage ultérieur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-307">Reserved for future use.</span></span> <span data-ttu-id="49b9d-308">Doit être IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="49b9d-308">Must be IID_NULL.</span></span></param>
        <param name="rgszNames"><span data-ttu-id="49b9d-309">Tableau passé des noms à mapper.</span><span class="sxs-lookup"><span data-stu-id="49b9d-309">Passed-in array of names to be mapped.</span></span></param>
        <param name="cNames"><span data-ttu-id="49b9d-310">Compte des noms à mapper.</span><span class="sxs-lookup"><span data-stu-id="49b9d-310">Count of the names to be mapped.</span></span></param>
        <param name="lcid"><span data-ttu-id="49b9d-311">Contexte des paramètres régionaux dans lequel interpréter les noms.</span><span class="sxs-lookup"><span data-stu-id="49b9d-311">The locale context in which to interpret the names.</span></span></param>
        <param name="rgDispId"><span data-ttu-id="49b9d-312">Tableau alloué par l'appelant et recevant les ID qui correspondent aux noms.</span><span class="sxs-lookup"><span data-stu-id="49b9d-312">Caller-allocated array which receives the IDs corresponding to the names.</span></span></param>
        <summary><span data-ttu-id="49b9d-313">Mappe un jeu de noms avec un jeu correspondant d'identificateurs de dispatch.</span><span class="sxs-lookup"><span data-stu-id="49b9d-313">Maps a set of names to a corresponding set of dispatch identifiers.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b9d-314">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</span><span class="sxs-lookup"><span data-stu-id="49b9d-314">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="49b9d-315">Pour plus d’informations sur `IDispatch::GetIDsOfNames`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="49b9d-315">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="49b9d-316">L’accès à liaison tardive à l’aide de l’interface <c>IDispatch</c> COM n’est pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="49b9d-316">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _ConstructorBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _ConstructorBuilder.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_ConstructorBuilder::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo"><span data-ttu-id="49b9d-317">Informations de type à retourner.</span><span class="sxs-lookup"><span data-stu-id="49b9d-317">The type information to return.</span></span></param>
        <param name="lcid"><span data-ttu-id="49b9d-318">Identificateur des paramètres régionaux pour les informations de type.</span><span class="sxs-lookup"><span data-stu-id="49b9d-318">The locale identifier for the type information.</span></span></param>
        <param name="ppTInfo"><span data-ttu-id="49b9d-319">Reçoit un pointeur vers l'objet d'informations de type demandé.</span><span class="sxs-lookup"><span data-stu-id="49b9d-319">Receives a pointer to the requested type information object.</span></span></param>
        <summary><span data-ttu-id="49b9d-320">Récupère les informations de type pour un objet, qui peuvent être utilisées ensuite pour obtenir les informations de type d'une interface.</span><span class="sxs-lookup"><span data-stu-id="49b9d-320">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b9d-321">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</span><span class="sxs-lookup"><span data-stu-id="49b9d-321">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="49b9d-322">Pour plus d’informations sur `IDispatch::GetTypeInfo`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="49b9d-322">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="49b9d-323">L’accès à liaison tardive à l’aide de l’interface <c>IDispatch</c> COM n’est pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="49b9d-323">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _ConstructorBuilder.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _ConstructorBuilder.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_ConstructorBuilder::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorBuilder.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo"><span data-ttu-id="49b9d-324">Pointe vers un emplacement qui reçoit le nombre d'interfaces d'informations de type fourni par l'objet.</span><span class="sxs-lookup"><span data-stu-id="49b9d-324">Points to a location that receives the number of type information interfaces provided by the object.</span></span></param>
        <summary><span data-ttu-id="49b9d-325">Récupère le nombre d'interfaces d'informations de type fourni par un objet (0 ou 1).</span><span class="sxs-lookup"><span data-stu-id="49b9d-325">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b9d-326">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</span><span class="sxs-lookup"><span data-stu-id="49b9d-326">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="49b9d-327">Pour plus d’informations sur `IDispatch::GetTypeInfoCount`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="49b9d-327">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="49b9d-328">L’accès à liaison tardive à l’aide de l’interface <c>IDispatch</c> COM n’est pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="49b9d-328">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._ConstructorBuilder.Invoke">
      <MemberSignature Language="C#" Value="void _ConstructorBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._ConstructorBuilder.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.System#Runtime#InteropServices#_ConstructorBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _ConstructorBuilder.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._ConstructorBuilder.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_ConstructorBuilder::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._ConstructorBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember"><span data-ttu-id="49b9d-329">Identifie le membre.</span><span class="sxs-lookup"><span data-stu-id="49b9d-329">Identifies the member.</span></span></param>
        <param name="riid"><span data-ttu-id="49b9d-330">Réservé à un usage ultérieur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-330">Reserved for future use.</span></span> <span data-ttu-id="49b9d-331">Doit être IID_NULL.</span><span class="sxs-lookup"><span data-stu-id="49b9d-331">Must be IID_NULL.</span></span></param>
        <param name="lcid"><span data-ttu-id="49b9d-332">Contexte des paramètres régionaux dans lequel interpréter les arguments.</span><span class="sxs-lookup"><span data-stu-id="49b9d-332">The locale context in which to interpret arguments.</span></span></param>
        <param name="wFlags"><span data-ttu-id="49b9d-333">Indicateurs décrivant le contexte de l'appel.</span><span class="sxs-lookup"><span data-stu-id="49b9d-333">Flags describing the context of the call.</span></span></param>
        <param name="pDispParams"><span data-ttu-id="49b9d-334">Pointeur vers une structure qui contient un tableau d’arguments, un tableau d’arguments DISPID pour les arguments nommés et le nombre d’éléments de chaque tableau.</span><span class="sxs-lookup"><span data-stu-id="49b9d-334">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span></span></param>
        <param name="pVarResult"><span data-ttu-id="49b9d-335">Pointeur vers l'emplacement où le résultat doit être stocké.</span><span class="sxs-lookup"><span data-stu-id="49b9d-335">Pointer to the location where the result is to be stored.</span></span></param>
        <param name="pExcepInfo"><span data-ttu-id="49b9d-336">Pointeur vers une structure qui contient les informations sur les exceptions.</span><span class="sxs-lookup"><span data-stu-id="49b9d-336">Pointer to a structure that contains exception information.</span></span></param>
        <param name="puArgErr"><span data-ttu-id="49b9d-337">Index du premier argument comportant une erreur.</span><span class="sxs-lookup"><span data-stu-id="49b9d-337">The index of the first argument that has an error.</span></span></param>
        <summary><span data-ttu-id="49b9d-338">Fournit l'accès aux propriétés et aux méthodes exposées par un objet.</span><span class="sxs-lookup"><span data-stu-id="49b9d-338">Provides access to properties and methods exposed by an object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49b9d-339">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</span><span class="sxs-lookup"><span data-stu-id="49b9d-339">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="49b9d-340">Pour plus d’informations sur `IDispatch::Invoke`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="49b9d-340">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException"><span data-ttu-id="49b9d-341">L’accès à liaison tardive à l’aide de l’interface <c>IDispatch</c> COM n’est pas pris en charge.</span><span class="sxs-lookup"><span data-stu-id="49b9d-341">Late-bound access using the COM <c>IDispatch</c> interface is not supported.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.ConstructorBuilder.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="49b9d-342">Retourne cette instance <see cref="T:System.Reflection.Emit.ConstructorBuilder" /> en tant que <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="49b9d-342">Returns this <see cref="T:System.Reflection.Emit.ConstructorBuilder" /> instance as a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="49b9d-343">Retourne un <see cref="T:System.String" /> contenant le nom, les attributs et les exceptions de ce constructeur, suivis du flux MSIL (Microsoft Intermediate Language) actuel.</span><span class="sxs-lookup"><span data-stu-id="49b9d-343">Returns a <see cref="T:System.String" /> containing the name, attributes, and exceptions of this constructor, followed by the current Microsoft intermediate language (MSIL) stream.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>