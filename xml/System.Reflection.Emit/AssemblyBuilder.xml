<Type Name="AssemblyBuilder" FullName="System.Reflection.Emit.AssemblyBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8042d4d2a7c7a54f8532813c480f8abdd84ee332" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="fr-FR" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30470763" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AssemblyBuilder : System.Reflection.Assembly, System.Runtime.InteropServices._AssemblyBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit AssemblyBuilder extends System.Reflection.Assembly implements class System.Runtime.InteropServices._AssemblyBuilder" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Emit.AssemblyBuilder" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AssemblyBuilder&#xA;Inherits Assembly&#xA;Implements _AssemblyBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class AssemblyBuilder sealed : System::Reflection::Assembly, System::Runtime::InteropServices::_AssemblyBuilder" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Emit</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.Assembly</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.InteropServices._AssemblyBuilder</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComDefaultInterface(typeof(System.Runtime.InteropServices._AssemblyBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8cc16-101">Définit et représente un assembly dynamique.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8cc16-101">Defines and represents a dynamic assembly.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-102">Un assembly dynamique est un assembly qui est créé à l’aide de l’API d’émission de réflexion.</span><span class="sxs-lookup"><span data-stu-id="8cc16-102">A dynamic assembly is an assembly that is created using the Reflection Emit APIs.</span></span> <span data-ttu-id="8cc16-103">Les modules dynamiques de l’assembly sont enregistrés lors de l’assembly dynamique est enregistré à l’aide de la <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8cc16-103">The dynamic modules in the assembly are saved when the dynamic assembly is saved using the <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> method.</span></span> <span data-ttu-id="8cc16-104">Pour générer un fichier exécutable, la <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> méthode doit être appelée pour identifier la méthode qui est le point d’entrée à l’assembly.</span><span class="sxs-lookup"><span data-stu-id="8cc16-104">To generate an executable, the <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> method must be called to identify the method that is the entry point to the assembly.</span></span> <span data-ttu-id="8cc16-105">Les assemblys sont enregistrés en tant que DLL par défaut, sauf si la <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> méthode demande la génération d’une application console ou une application Windows.</span><span class="sxs-lookup"><span data-stu-id="8cc16-105">Assemblies are saved as DLLs by default, unless the <xref:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint%2A> method requests the generation of a console application or a Windows-based application.</span></span>  
  
 <span data-ttu-id="8cc16-106">Si un assembly dynamique contient plusieurs modules dynamiques, nom du fichier manifeste de l’assembly doit correspondre au nom du module qui est spécifié comme premier argument de la <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8cc16-106">If a dynamic assembly contains more than one dynamic module, the assembly's manifest file name should match the module's name that is specified as the first argument to the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A> method.</span></span>  
  
 <span data-ttu-id="8cc16-107">Certaines méthodes de la base de <xref:System.Reflection.Assembly> class, telle que `GetModules` et `GetLoadedModules`, ne fonctionne pas correctement lorsqu’elle est appelée à partir de <xref:System.Reflection.Emit.AssemblyBuilder> objets.</span><span class="sxs-lookup"><span data-stu-id="8cc16-107">Some methods on the base <xref:System.Reflection.Assembly> class, such as `GetModules` and `GetLoadedModules`, will not work correctly when called from <xref:System.Reflection.Emit.AssemblyBuilder> objects.</span></span> <span data-ttu-id="8cc16-108">Vous pouvez charger l’assembly dynamique défini et appeler les méthodes de l’assembly chargé.</span><span class="sxs-lookup"><span data-stu-id="8cc16-108">You can load the defined dynamic assembly and call the methods on the loaded assembly.</span></span> <span data-ttu-id="8cc16-109">Par exemple, pour vous assurer que les modules de ressources sont inclus dans la liste de modules retournée, appelez `GetModules` sur chargé <xref:System.Reflection.Assembly> objet.</span><span class="sxs-lookup"><span data-stu-id="8cc16-109">For example, to ensure that resource modules are included in the returned module list, call `GetModules` on the loaded <xref:System.Reflection.Assembly> object.</span></span>  
  
 <span data-ttu-id="8cc16-110">La signature d’un assembly dynamique à l’aide de <xref:System.Reflection.AssemblyName.KeyPair%2A> n’est pas effective tant que l’assembly est enregistré sur le disque.</span><span class="sxs-lookup"><span data-stu-id="8cc16-110">The signing of a dynamic assembly using <xref:System.Reflection.AssemblyName.KeyPair%2A> is not effective until the assembly is saved to disk.</span></span> <span data-ttu-id="8cc16-111">Par conséquent, les noms forts ne fonctionneront pas avec les assemblys dynamiques transitoires.</span><span class="sxs-lookup"><span data-stu-id="8cc16-111">So, strong names will not work with transient dynamic assemblies.</span></span>  
  
 <span data-ttu-id="8cc16-112">Pour obtenir un <xref:System.Reflection.Emit.AssemblyBuilder> de l’objet, utilisez le <xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8cc16-112">To get an <xref:System.Reflection.Emit.AssemblyBuilder> object, use the <xref:System.AppDomain.DefineDynamicAssembly%2A?displayProperty=nameWithType> method.</span></span>  
  
## <a name="reflection-emit-dynamic-assembly-scenarios"></a><span data-ttu-id="8cc16-113">Scénarios d’assemblys dynamiques d’émission de réflexion</span><span class="sxs-lookup"><span data-stu-id="8cc16-113">Reflection emit dynamic assembly scenarios</span></span>  
 <span data-ttu-id="8cc16-114">Voici quelques points à considérer lorsque vous utilisez la <xref:System.Reflection.Emit.AssemblyBuilder> classe pour créer des assemblys dynamiques.</span><span class="sxs-lookup"><span data-stu-id="8cc16-114">The following are some things to consider when using the <xref:System.Reflection.Emit.AssemblyBuilder> class to create dynamic assemblies.</span></span>  
  
### <a name="dynamic-modules"></a><span data-ttu-id="8cc16-115">Modules dynamiques</span><span class="sxs-lookup"><span data-stu-id="8cc16-115">Dynamic modules</span></span>  
 <span data-ttu-id="8cc16-116">Émission de réflexion prend en charge la création de modules dynamiques définis dans des assemblys dynamiques.</span><span class="sxs-lookup"><span data-stu-id="8cc16-116">Reflection emit supports the creation of dynamic modules defined in dynamic assemblies.</span></span> <span data-ttu-id="8cc16-117">Un module dynamique créé dans un assembly dynamique peut être transitoire ou persistant.</span><span class="sxs-lookup"><span data-stu-id="8cc16-117">A dynamic module created in a dynamic assembly can be transient or persistable.</span></span>  
  
### <a name="restrictions-on-type-references"></a><span data-ttu-id="8cc16-118">Restrictions sur les références de type</span><span class="sxs-lookup"><span data-stu-id="8cc16-118">Restrictions on type references</span></span>  
 <span data-ttu-id="8cc16-119">Les assemblys peuvent référencer des types définis dans un autre assembly.</span><span class="sxs-lookup"><span data-stu-id="8cc16-119">Assemblies can reference types defined in another assembly.</span></span> <span data-ttu-id="8cc16-120">Un assembly dynamique transitoire peut référencer en toute sécurité des types définis dans un autre assembly dynamique transitoire, un assembly dynamique persistable ou un assembly statique.</span><span class="sxs-lookup"><span data-stu-id="8cc16-120">A transient dynamic assembly can safely reference types defined in another transient dynamic assembly, a persistable dynamic assembly, or a static assembly.</span></span> <span data-ttu-id="8cc16-121">Toutefois, le common language runtime n’autorise pas un module dynamique persistant référencer un type défini dans un module dynamique transitoire.</span><span class="sxs-lookup"><span data-stu-id="8cc16-121">However, the common language runtime does not allow a persistable dynamic module to reference a type defined in a transient dynamic module.</span></span> <span data-ttu-id="8cc16-122">Il s’agit, car lorsque le module dynamique persistant est chargé après avoir été enregistré sur le disque, le runtime ne peut pas résoudre les références aux types définis dans le module dynamique transitoire.</span><span class="sxs-lookup"><span data-stu-id="8cc16-122">This is because when the persisted dynamic module is loaded after being saved to disk, the runtime cannot resolve the references to types defined in the transient dynamic module.</span></span>  
  
### <a name="restrictions-on-emitting-to-remote-application-domains"></a><span data-ttu-id="8cc16-123">Restrictions sur l’émission de domaines d’application à distance</span><span class="sxs-lookup"><span data-stu-id="8cc16-123">Restrictions on emitting to remote application domains</span></span>  
 <span data-ttu-id="8cc16-124">Certains scénarios requièrent un assembly dynamique créé et l’exécution dans un domaine d’application à distance.</span><span class="sxs-lookup"><span data-stu-id="8cc16-124">Some scenarios require a dynamic assembly to be created and executed in a remote application domain.</span></span> <span data-ttu-id="8cc16-125">Émission de réflexion ne permet pas d’un assembly dynamique d’être émis directement vers un domaine d’application à distance.</span><span class="sxs-lookup"><span data-stu-id="8cc16-125">Reflection emit does not allow a dynamic assembly to be emitted directly to a remote application domain.</span></span> <span data-ttu-id="8cc16-126">La solution consiste à émettre l’assembly dynamique dans le domaine d’application actuel, enregistrer l’assembly dynamique émis sur le disque, puis charger l’assembly dynamique dans le domaine d’application à distance.</span><span class="sxs-lookup"><span data-stu-id="8cc16-126">The solution is to emit the dynamic assembly in the current application domain, save the emitted dynamic assembly to disk, and then load the dynamic assembly into the remote application domain.</span></span>  
  
### <a name="dynamic-assembly-access-modes"></a><span data-ttu-id="8cc16-127">Modes d’accès d’assembly dynamique</span><span class="sxs-lookup"><span data-stu-id="8cc16-127">Dynamic assembly access modes</span></span>  
 <span data-ttu-id="8cc16-128">Assemblys dynamiques peuvent être créés à l’aide d’un des modes d’accès suivants :</span><span class="sxs-lookup"><span data-stu-id="8cc16-128">Dynamic assemblies can be created using one of the following access modes:</span></span>  
  
-   <xref:System.Reflection.Emit.AssemblyBuilderAccess.Run?displayProperty=nameWithType>  
  
     <span data-ttu-id="8cc16-129">L’assembly dynamique représenté par un <xref:System.Reflection.Emit.AssemblyBuilder> objet est temporaire.</span><span class="sxs-lookup"><span data-stu-id="8cc16-129">The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is transient.</span></span> <span data-ttu-id="8cc16-130">L’assembly dynamique peut uniquement être utilisé pour exécuter le code émis.</span><span class="sxs-lookup"><span data-stu-id="8cc16-130">The dynamic assembly can only be used to execute the emitted code.</span></span>  
  
-   <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save?displayProperty=nameWithType>  
  
     <span data-ttu-id="8cc16-131">L’assembly dynamique représenté par un <xref:System.Reflection.Emit.AssemblyBuilder> objet est persistant, mais ne peut pas être exécutée tant que le fichier enregistré fichier exécutable portable (PE) a été chargé à partir du disque.</span><span class="sxs-lookup"><span data-stu-id="8cc16-131">The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is persistable but cannot be executed until the saved portable executable (PE) file has been loaded from disk.</span></span>  
  
-   <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave?displayProperty=nameWithType>  
  
     <span data-ttu-id="8cc16-132">L’assembly dynamique représenté par un <xref:System.Reflection.Emit.AssemblyBuilder> de l’objet est persistant, mais peuvent également être exécutées avant et/ou après l’enregistrement de l’assembly sur le disque.</span><span class="sxs-lookup"><span data-stu-id="8cc16-132">The dynamic assembly represented by an <xref:System.Reflection.Emit.AssemblyBuilder> object is persistable, but can also be executed before and/or after the assembly is saved to disk.</span></span>  
  
 <span data-ttu-id="8cc16-133">Le mode d’accès doit être spécifié en fournissant les <xref:System.Reflection.Emit.AssemblyBuilderAccess> valeur dans l’appel à la <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly%2A?displayProperty=nameWithType> méthode lorsque l’assembly dynamique est défini et ne peut pas être modifié ultérieurement.</span><span class="sxs-lookup"><span data-stu-id="8cc16-133">The access mode must be specified by providing the appropriate <xref:System.Reflection.Emit.AssemblyBuilderAccess> value in the call to the <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly%2A?displayProperty=nameWithType> method when the dynamic assembly is defined and cannot be changed later.</span></span> <span data-ttu-id="8cc16-134">Le runtime utilise le mode d’accès d’un assembly dynamique pour optimiser la représentation interne de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="8cc16-134">The runtime uses the access mode of a dynamic assembly to optimize the assembly's internal representation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cc16-135">L’exemple de code suivant montre comment définir un assembly dynamique avec un seul module.</span><span class="sxs-lookup"><span data-stu-id="8cc16-135">The following code example shows how to define a dynamic assembly with one module.</span></span> <span data-ttu-id="8cc16-136">Le module dans l’assembly de l’exemple contient un seul type, `MyDynamicType`, qui a un champ privé, une propriété qui obtient et définit le champ privé, constructeurs qui initialisent le champ privé et une méthode qui multiplie un nombre fourni par l’utilisateur par le champ privé valeur et retourne le résultat.</span><span class="sxs-lookup"><span data-stu-id="8cc16-136">The module in the example assembly contains one type, `MyDynamicType`, which has a private field, a property that gets and sets the private field, constructors that initialize the private field, and a method that multiplies a user-supplied number by the private field value and returns the result.</span></span>  
  
 <span data-ttu-id="8cc16-137"><xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave?displayProperty=nameWithType> est spécifié lorsque l’assembly est créé.</span><span class="sxs-lookup"><span data-stu-id="8cc16-137"><xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave?displayProperty=nameWithType> is specified when the assembly is created.</span></span> <span data-ttu-id="8cc16-138">Le code assembleur est utilisé immédiatement, et l’assembly est également enregistré sur disque afin qu’il puisse être examiné par [Ildasm.exe (désassembleur IL)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) ou utilisées dans un autre programme.</span><span class="sxs-lookup"><span data-stu-id="8cc16-138">The assembly code is used immediately, and the assembly is also saved to disk so that it can be examined with [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) or used in another program.</span></span>  
  
 [!code-cpp[AssemblyBuilderClass#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilderClass/cpp/24895.cpp#1)]
 [!code-csharp[AssemblyBuilderClass#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilderClass/cs/24895.cs#1)]
 [!code-vb[AssemblyBuilderClass#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilderClass/vb/24895.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.ReflectionPermission">
      <span data-ttu-id="8cc16-139">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8cc16-139">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
      </span>
      <span data-ttu-id="8cc16-140">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8cc16-140">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
      </span>
    </permission>
    <altmember cref="Overload:System.AppDomain.DefineDynamicAssembly" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AssemblyBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AssemblyBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddResourceFile">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-141">Ajoute un fichier de ressources existant à cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-141">Adds an existing resource file to this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddResourceFile">
      <MemberSignature Language="C#" Value="public void AddResourceFile (string name, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddResourceFile(string name, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.AddResourceFile(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResourceFile (name As String, fileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddResourceFile(System::String ^ name, System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8cc16-142">Nom logique de la ressource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-142">The logical name of the resource.</span>
          </span>
        </param>
        <param name="fileName">
          <span data-ttu-id="8cc16-143">Nom du fichier physique (fichier .resources) auquel le nom logique est mappé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-143">The physical file name (.resources file) to which the logical name is mapped.</span>
          </span>
          <span data-ttu-id="8cc16-144">Il ne doit pas comprendre de chemin. Le fichier doit se trouver dans le même répertoire que l’assembly auquel il est ajouté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-144">This should not include a path; the file must be in the same directory as the assembly to which it is added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-145">Ajoute un fichier de ressources existant à cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-145">Adds an existing resource file to this assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-146">`fileName` doit pas être identique à celui de tout autre module persistable, une ressource managée autonome ou du fichier manifeste autonome.</span><span class="sxs-lookup"><span data-stu-id="8cc16-146">`fileName` should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file.</span></span>  
  
 <span data-ttu-id="8cc16-147">Les ressources managées dans le fichier sont supposées pour être publiques.</span><span class="sxs-lookup"><span data-stu-id="8cc16-147">The managed resources in the file are assumed to be public.</span></span>  
  
 <span data-ttu-id="8cc16-148">Le fichier de ressources spécifié doit être dans le répertoire dans lequel l’assembly doit être enregistré.</span><span class="sxs-lookup"><span data-stu-id="8cc16-148">The specified resource file must be in the directory where the assembly will be saved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8cc16-149">En commençant par le [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ce membre n’a plus besoin <xref:System.Security.Permissions.ReflectionPermission> avec la <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="8cc16-149">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8cc16-150">(Consultez [émettre des problèmes de sécurité dans la réflexion](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Pour utiliser cette fonctionnalité, votre application doit cibler [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] ou version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="8cc16-150">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cc16-151">L’exemple de code suivant illustre comment attacher un fichier de ressources à un assembly créé dynamiquement, à l’aide de `AddResourceFile`.</span><span class="sxs-lookup"><span data-stu-id="8cc16-151">The following code sample demonstrates how to attach a resource file to a dynamically created assembly, using `AddResourceFile`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8cc16-152">
            <paramref name="name" /> a été défini précédemment.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-152">
              <paramref name="name" /> has been previously defined.</span>
          </span>
          <span data-ttu-id="8cc16-153">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-153">-or-</span>
          </span>
          <span data-ttu-id="8cc16-154">Il existe un autre fichier dans l’assembly nommé <paramref name="fileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-154">There is another file in the assembly named <paramref name="fileName" />.</span>
          </span>
          <span data-ttu-id="8cc16-155">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-155">-or-</span>
          </span>
          <span data-ttu-id="8cc16-156">La longueur de <paramref name="name" /> est égale à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-156">The length of <paramref name="name" /> is zero.</span>
          </span>
          <span data-ttu-id="8cc16-157">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-157">-or-</span>
          </span>
          <span data-ttu-id="8cc16-158">La longueur de <paramref name="fileName" /> est égal à zéro, ou si <paramref name="fileName" /> inclut un chemin d’accès.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-158">The length of <paramref name="fileName" /> is zero, or if <paramref name="fileName" /> includes a path.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cc16-159">
            <paramref name="name" /> ou <paramref name="fileName" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-159">
              <paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8cc16-160">Le fichier <paramref name="fileName" /> est introuvable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-160">The file <paramref name="fileName" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-161">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-161">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-162">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-162">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-163">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-163">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8cc16-164">L’autorisation FileIOPermissionAccess.Read est requise pour accéder au fichier de ressources <paramref name="resourceFileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-164">The FileIOPermissionAccess.Read permission is needed to access the resource file <paramref name="resourceFileName" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="AddResourceFile">
      <MemberSignature Language="C#" Value="public void AddResourceFile (string name, string fileName, System.Reflection.ResourceAttributes attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddResourceFile(string name, string fileName, valuetype System.Reflection.ResourceAttributes attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.AddResourceFile(System.String,System.String,System.Reflection.ResourceAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddResourceFile (name As String, fileName As String, attribute As ResourceAttributes)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddResourceFile(System::String ^ name, System::String ^ fileName, System::Reflection::ResourceAttributes attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="attribute" Type="System.Reflection.ResourceAttributes" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8cc16-165">Nom logique de la ressource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-165">The logical name of the resource.</span>
          </span>
        </param>
        <param name="fileName">
          <span data-ttu-id="8cc16-166">Nom du fichier physique (fichier .resources) auquel le nom logique est mappé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-166">The physical file name (.resources file) to which the logical name is mapped.</span>
          </span>
          <span data-ttu-id="8cc16-167">Il ne doit pas comprendre de chemin. Le fichier doit se trouver dans le même répertoire que l’assembly auquel il est ajouté.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-167">This should not include a path; the file must be in the same directory as the assembly to which it is added.</span>
          </span>
        </param>
        <param name="attribute">
          <span data-ttu-id="8cc16-168">Attributs de la ressource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-168">The resource attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-169">Ajoute un fichier de ressources existant à cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-169">Adds an existing resource file to this assembly.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-170">`fileName` doit pas être identique à celui de tout autre module persistable, une ressource managée autonome ou du fichier manifeste autonome.</span><span class="sxs-lookup"><span data-stu-id="8cc16-170">`fileName` should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file.</span></span>  
  
 <span data-ttu-id="8cc16-171">Des attributs peuvent être spécifiés pour la ressource managée.</span><span class="sxs-lookup"><span data-stu-id="8cc16-171">Attributes can be specified for the managed resource.</span></span>  
  
 <span data-ttu-id="8cc16-172">Le fichier de ressources spécifié doit être dans le répertoire dans lequel l’assembly doit être enregistré.</span><span class="sxs-lookup"><span data-stu-id="8cc16-172">The specified resource file must be in the directory where the assembly will be saved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8cc16-173">En commençant par le [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ce membre n’a plus besoin <xref:System.Security.Permissions.ReflectionPermission> avec la <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="8cc16-173">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8cc16-174">(Consultez [émettre des problèmes de sécurité dans la réflexion](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Pour utiliser cette fonctionnalité, votre application doit cibler [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] ou version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="8cc16-174">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cc16-175">L’exemple de code suivant illustre comment attacher un fichier de ressources à un assembly créé dynamiquement, à l’aide de `AddResourceFile`.</span><span class="sxs-lookup"><span data-stu-id="8cc16-175">The following code sample demonstrates how to attach a resource file to a dynamically created assembly, using `AddResourceFile`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.AddResourceFile Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.AddResourceFile Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8cc16-176">
            <paramref name="name" /> a été défini précédemment.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-176">
              <paramref name="name" /> has been previously defined.</span>
          </span>
          <span data-ttu-id="8cc16-177">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-177">-or-</span>
          </span>
          <span data-ttu-id="8cc16-178">Il existe un autre fichier dans l’assembly nommé <paramref name="fileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-178">There is another file in the assembly named <paramref name="fileName" />.</span>
          </span>
          <span data-ttu-id="8cc16-179">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-179">-or-</span>
          </span>
          <span data-ttu-id="8cc16-180">La longueur de <paramref name="name" /> est égale à zéro ou la longueur de <paramref name="fileName" /> est égale à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-180">The length of <paramref name="name" /> is zero or if the length of <paramref name="fileName" /> is zero.</span>
          </span>
          <span data-ttu-id="8cc16-181">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-181">-or-</span>
          </span>
          <span data-ttu-id="8cc16-182">
            <paramref name="fileName" /> inclut un chemin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-182">
              <paramref name="fileName" /> includes a path.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cc16-183">
            <paramref name="name" /> ou <paramref name="fileName" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-183">
              <paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8cc16-184">Le fichier <paramref name="fileName" /> est introuvable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-184">If the file <paramref name="fileName" /> is not found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-185">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-185">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-186">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-186">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-187">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-187">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8cc16-188">L’autorisation FileIOPermissionAccess.Read est requise pour accéder au fichier de ressources <paramref name="resourceFileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-188">The FileIOPermissionAccess.Read permission is needed to access the resource file <paramref name="resourceFileName" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="CodeBase">
      <MemberSignature Language="C#" Value="public override string CodeBase { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeBase" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.CodeBase" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CodeBase As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CodeBase { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-189">Obtient l’emplacement de l’assembly, telle que spécifié à l’origine (par exemple dans un objet <see cref="T:System.Reflection.AssemblyName" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-189">Gets the location of the assembly, as specified originally (such as in an <see cref="T:System.Reflection.AssemblyName" /> object).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cc16-190">Emplacement de l’assembly, tel que spécifié à l’origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-190">The location of the assembly, as specified originally.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-191">Pour obtenir le chemin d’accès absolu du fichier chargé qui contient le manifeste, utilisez le <xref:System.Reflection.Assembly.Location%2A?displayProperty=nameWithType> propriété.</span><span class="sxs-lookup"><span data-stu-id="8cc16-191">To get the absolute path to the loaded manifest-containing file, use the <xref:System.Reflection.Assembly.Location%2A?displayProperty=nameWithType> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8cc16-192">Cette méthode n’est pas prise en charge pour l’instant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-192">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-193">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-193">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-194">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-194">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-195">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-195">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefinedTypes">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt; DefinedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.TypeInfo&gt; DefinedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.DefinedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property DefinedTypes As IEnumerable(Of TypeInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::TypeInfo ^&gt; ^ DefinedTypes { System::Collections::Generic::IEnumerable&lt;System::Reflection::TypeInfo ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.TypeInfo&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineDynamicAssembly">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-196">Définit un assembly dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-196">Defines a dynamic assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineDynamicAssembly (name As AssemblyName, access As AssemblyBuilderAccess) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8cc16-197">Nom de l'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-197">The name of the assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="8cc16-198">Droits d’accès de l’assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-198">The access rights of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-199">Définit un assembly dynamique qui porte le nom spécifié et possède les droits d’accès spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-199">Defines a dynamic assembly that has the specified name and access rights.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-200">Objet qui représente le nouvel assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-200">An object that represents the new assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicAssembly">
      <MemberSignature Language="C#" Value="public static System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly (System.Reflection.AssemblyName name, System.Reflection.Emit.AssemblyBuilderAccess access, System.Collections.Generic.IEnumerable&lt;System.Reflection.Emit.CustomAttributeBuilder&gt; assemblyAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Reflection.Emit.AssemblyBuilder DefineDynamicAssembly(class System.Reflection.AssemblyName name, valuetype System.Reflection.Emit.AssemblyBuilderAccess access, class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Emit.CustomAttributeBuilder&gt; assemblyAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicAssembly(System.Reflection.AssemblyName,System.Reflection.Emit.AssemblyBuilderAccess,System.Collections.Generic.IEnumerable{System.Reflection.Emit.CustomAttributeBuilder})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DefineDynamicAssembly (name As AssemblyName, access As AssemblyBuilderAccess, assemblyAttributes As IEnumerable(Of CustomAttributeBuilder)) As AssemblyBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Reflection::Emit::AssemblyBuilder ^ DefineDynamicAssembly(System::Reflection::AssemblyName ^ name, System::Reflection::Emit::AssemblyBuilderAccess access, System::Collections::Generic::IEnumerable&lt;System::Reflection::Emit::CustomAttributeBuilder ^&gt; ^ assemblyAttributes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.AssemblyBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.Reflection.AssemblyName" />
        <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
        <Parameter Name="assemblyAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Reflection.Emit.CustomAttributeBuilder&gt;" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8cc16-201">Nom de l'assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-201">The name of the assembly.</span>
          </span>
        </param>
        <param name="access">
          <span data-ttu-id="8cc16-202">Droits d’accès de l’assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-202">The access rights of the assembly.</span>
          </span>
        </param>
        <param name="assemblyAttributes">
          <span data-ttu-id="8cc16-203">Collection qui contient les attributs de l’assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-203">A collection that contains the attributes of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-204">Définit un nouvel assembly avec le nom, les droits d’accès et les attributs spécifiés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-204">Defines a new assembly that has the specified name, access rights, and attributes.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-205">Objet qui représente le nouvel assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-205">An object that represents the new assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineDynamicModule">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-206">Définit un module dynamique dans cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-206">Defines a dynamic module in this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder DefineDynamicModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicModule (name As String) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ DefineDynamicModule(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8cc16-207">Nom du module dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-207">The name of the dynamic module.</span>
          </span>
          <span data-ttu-id="8cc16-208">Sa longueur doit être inférieure à 260 caractères.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-208">Must be less than 260 characters in length.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-209">Définit un module dynamique transitoire nommé dans cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-209">Defines a named transient dynamic module in this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-210">
            <see cref="T:System.Reflection.Emit.ModuleBuilder" /> représentant le module dynamique défini.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-210">A <see cref="T:System.Reflection.Emit.ModuleBuilder" /> representing the defined dynamic module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-211">Il s’agit d’une erreur pour définir plusieurs modules dynamiques portant le même nom dans un assembly.</span><span class="sxs-lookup"><span data-stu-id="8cc16-211">It is an error to define multiple dynamic modules with the same name in an assembly.</span></span>  
  
 <span data-ttu-id="8cc16-212">Le module dynamique défini est transitoire.</span><span class="sxs-lookup"><span data-stu-id="8cc16-212">The defined dynamic module is transient.</span></span> <span data-ttu-id="8cc16-213">Le module dynamique n’est pas enregistré, même si l’assembly dynamique parent a été créé avec <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.</span><span class="sxs-lookup"><span data-stu-id="8cc16-213">The dynamic module is not saved, even if the parent dynamic assembly was created with <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8cc16-214">Pour supprimer les optimisations lorsque vous déboguez des modules dynamiques, appliquez le <xref:System.Diagnostics.DebuggableAttribute> d’attribut à l’assembly dynamique avant d’appeler <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span><span class="sxs-lookup"><span data-stu-id="8cc16-214">To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span></span> <span data-ttu-id="8cc16-215">Créez une instance de <xref:System.Diagnostics.DebuggableAttribute> avec la <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> indicateur et l’appliquer à l’aide de la <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8cc16-215">Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method.</span></span> <span data-ttu-id="8cc16-216">L’attribut doit être appliqué à l’assembly dynamique.</span><span class="sxs-lookup"><span data-stu-id="8cc16-216">The attribute must be applied to the dynamic assembly.</span></span> <span data-ttu-id="8cc16-217">Il n’a aucun effet si appliqué au module.</span><span class="sxs-lookup"><span data-stu-id="8cc16-217">It has no effect if applied to the module.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8cc16-218">En commençant par le [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ce membre n’a plus besoin <xref:System.Security.Permissions.ReflectionPermission> avec la <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="8cc16-218">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8cc16-219">(Consultez [émettre des problèmes de sécurité dans la réflexion](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Pour utiliser cette fonctionnalité, votre application doit cibler [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] ou version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="8cc16-219">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cc16-220">(Visual Basic, c#)</span><span class="sxs-lookup"><span data-stu-id="8cc16-220">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="8cc16-221">L’exemple de code ci-dessous montre comment créer un module dynamique transitoire à l’aide de `DefineDynamicModule`.</span><span class="sxs-lookup"><span data-stu-id="8cc16-221">The code example below demonstrates how to create a transient dynamic module using `DefineDynamicModule`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8cc16-222">
            <paramref name="name" /> commence par un espace blanc.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-222">
              <paramref name="name" /> begins with white space.</span>
          </span>
          <span data-ttu-id="8cc16-223">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-223">-or-</span>
          </span>
          <span data-ttu-id="8cc16-224">La longueur de <paramref name="name" /> est égale à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-224">The length of <paramref name="name" /> is zero.</span>
          </span>
          <span data-ttu-id="8cc16-225">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-225">-or-</span>
          </span>
          <span data-ttu-id="8cc16-226">La longueur de <paramref name="name" /> est supérieure ou égale à 260.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-226">The length of <paramref name="name" /> is greater than or equal to 260.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cc16-227">
            <paramref name="name" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-227">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-228">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-228">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="8cc16-229">L’assembly pour le writer de symbole par défaut ne peut pas être chargé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-229">The assembly for default symbol writer cannot be loaded.</span>
          </span>
          <span data-ttu-id="8cc16-230">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-230">-or-</span>
          </span>
          <span data-ttu-id="8cc16-231">Le type qui implémente l’interface du writer de symbole par défaut est introuvable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-231">The type that implements the default symbol writer interface cannot be found.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-232">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-232">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-233">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-233">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name, bool emitSymbolInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder DefineDynamicModule(string name, bool emitSymbolInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicModule (name As String, emitSymbolInfo As Boolean) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ DefineDynamicModule(System::String ^ name, bool emitSymbolInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="emitSymbolInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8cc16-234">Nom du module dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-234">The name of the dynamic module.</span>
          </span>
          <span data-ttu-id="8cc16-235">Sa longueur doit être inférieure à 260 caractères.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-235">Must be less than 260 characters in length.</span>
          </span>
        </param>
        <param name="emitSymbolInfo">
          <span data-ttu-id="8cc16-236">
            <see langword="true" /> si les informations de symboles doivent être émises ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-236">
              <see langword="true" /> if symbol information is to be emitted; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-237">Définit un module dynamique transitoire nommé dans cet assembly et spécifie si des informations de symboles doivent être émises.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-237">Defines a named transient dynamic module in this assembly and specifies whether symbol information should be emitted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-238">
            <see cref="T:System.Reflection.Emit.ModuleBuilder" /> représentant le module dynamique défini.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-238">A <see cref="T:System.Reflection.Emit.ModuleBuilder" /> representing the defined dynamic module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-239">Il s’agit d’une erreur pour définir plusieurs modules dynamiques portant le même nom dans un assembly.</span><span class="sxs-lookup"><span data-stu-id="8cc16-239">It is an error to define multiple dynamic modules with the same name in an assembly.</span></span>  
  
 <span data-ttu-id="8cc16-240">Le module dynamique n’est pas enregistré, même si l’assembly dynamique parent a été créé avec <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.</span><span class="sxs-lookup"><span data-stu-id="8cc16-240">The dynamic module is not saved, even if the parent dynamic assembly was created with <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8cc16-241">Pour supprimer les optimisations lorsque vous déboguez des modules dynamiques, appliquez le <xref:System.Diagnostics.DebuggableAttribute> d’attribut à l’assembly dynamique avant d’appeler <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span><span class="sxs-lookup"><span data-stu-id="8cc16-241">To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span></span> <span data-ttu-id="8cc16-242">Créez une instance de <xref:System.Diagnostics.DebuggableAttribute> avec la <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> indicateur et l’appliquer à l’aide de la <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8cc16-242">Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method.</span></span> <span data-ttu-id="8cc16-243">L’attribut doit être appliqué à l’assembly dynamique.</span><span class="sxs-lookup"><span data-stu-id="8cc16-243">The attribute must be applied to the dynamic assembly.</span></span> <span data-ttu-id="8cc16-244">Il n’a aucun effet si appliqué au module.</span><span class="sxs-lookup"><span data-stu-id="8cc16-244">It has no effect if applied to the module.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8cc16-245">En commençant par le [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ce membre n’a plus besoin <xref:System.Security.Permissions.ReflectionPermission> avec la <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="8cc16-245">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8cc16-246">(Consultez [émettre des problèmes de sécurité dans la réflexion](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Pour utiliser cette fonctionnalité, votre application doit cibler [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] ou version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="8cc16-246">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cc16-247">(Visual Basic, c#)</span><span class="sxs-lookup"><span data-stu-id="8cc16-247">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="8cc16-248">L’exemple de code ci-dessous montre comment créer un module dynamique transitoire à l’aide de `DefineDynamicModule`, suppression des informations de symboles.</span><span class="sxs-lookup"><span data-stu-id="8cc16-248">The code example below demonstrates how to create a transient dynamic module using `DefineDynamicModule`, suppressing symbol information.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#2)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#2)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8cc16-249">
            <paramref name="name" /> commence par un espace blanc.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-249">
              <paramref name="name" /> begins with white space.</span>
          </span>
          <span data-ttu-id="8cc16-250">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-250">-or-</span>
          </span>
          <span data-ttu-id="8cc16-251">La longueur de <paramref name="name" /> est égale à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-251">The length of <paramref name="name" /> is zero.</span>
          </span>
          <span data-ttu-id="8cc16-252">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-252">-or-</span>
          </span>
          <span data-ttu-id="8cc16-253">La longueur de <paramref name="name" /> est supérieure ou égale à 260.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-253">The length of <paramref name="name" /> is greater than or equal to 260.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cc16-254">
            <paramref name="name" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-254">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="8cc16-255">L’assembly pour le writer de symbole par défaut ne peut pas être chargé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-255">The assembly for default symbol writer cannot be loaded.</span>
          </span>
          <span data-ttu-id="8cc16-256">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-256">-or-</span>
          </span>
          <span data-ttu-id="8cc16-257">Le type qui implémente l’interface du writer de symbole par défaut est introuvable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-257">The type that implements the default symbol writer interface cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-258">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-258">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-259">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-259">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-260">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-260">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder DefineDynamicModule(string name, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicModule (name As String, fileName As String) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ DefineDynamicModule(System::String ^ name, System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8cc16-261">Nom du module dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-261">The name of the dynamic module.</span>
          </span>
          <span data-ttu-id="8cc16-262">Sa longueur doit être inférieure à 260 caractères.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-262">Must be less than 260 characters in length.</span>
          </span>
        </param>
        <param name="fileName">
          <span data-ttu-id="8cc16-263">Nom du fichier dans lequel enregistrer le module dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-263">The name of the file to which the dynamic module should be saved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-264">Définit un module dynamique persistant avec le nom donné à enregistrer dans le fichier spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-264">Defines a persistable dynamic module with the given name that will be saved to the specified file.</span>
          </span>
          <span data-ttu-id="8cc16-265">Aucune information de symbole n’est émise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-265">No symbol information is emitted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-266">Objet <see cref="T:System.Reflection.Emit.ModuleBuilder" /> représentant le module dynamique défini.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-266">A <see cref="T:System.Reflection.Emit.ModuleBuilder" /> object representing the defined dynamic module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-267">Pour définir un module dynamique persistant, cet assembly doit être créé avec le <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> ou <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> attribut.</span><span class="sxs-lookup"><span data-stu-id="8cc16-267">To define a persistable dynamic module, this assembly needs to be created with the <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> or the <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> attribute.</span></span>  
  
 <span data-ttu-id="8cc16-268">Si vous souhaitez que le module doit contenir le manifeste d’assembly, `name` doit être le même que le nom de l’assembly (autrement dit, le <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> propriété de la <xref:System.Reflection.AssemblyName> utilisé pour créer l’assembly dynamique) et `fileName` doit être le même que le nom de fichier lorsque vous enregistrez l’assembly spécifié.</span><span class="sxs-lookup"><span data-stu-id="8cc16-268">If you want the module to contain the assembly manifest, `name` should be the same as the name of the assembly (that is, the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> property of the <xref:System.Reflection.AssemblyName> used to create the dynamic assembly) and `fileName` should be the same as the filename you specify when you save the assembly.</span></span>  
  
 <span data-ttu-id="8cc16-269">Dans un assembly avec un seul module, ce module doit contenir le manifeste d’assembly.</span><span class="sxs-lookup"><span data-stu-id="8cc16-269">In an assembly with only one module, that module should contain the assembly manifest.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8cc16-270">Pour supprimer les optimisations lorsque vous déboguez des modules dynamiques, appliquez le <xref:System.Diagnostics.DebuggableAttribute> d’attribut à l’assembly dynamique avant d’appeler <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span><span class="sxs-lookup"><span data-stu-id="8cc16-270">To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span></span> <span data-ttu-id="8cc16-271">Créez une instance de <xref:System.Diagnostics.DebuggableAttribute> avec la <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> indicateur et l’appliquer à l’aide de la <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8cc16-271">Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method.</span></span> <span data-ttu-id="8cc16-272">L’attribut doit être appliqué à l’assembly dynamique.</span><span class="sxs-lookup"><span data-stu-id="8cc16-272">The attribute must be applied to the dynamic assembly.</span></span> <span data-ttu-id="8cc16-273">Il n’a aucun effet si appliqué au module.</span><span class="sxs-lookup"><span data-stu-id="8cc16-273">It has no effect if applied to the module.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8cc16-274">En commençant par le [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ce membre n’a plus besoin <xref:System.Security.Permissions.ReflectionPermission> avec la <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="8cc16-274">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8cc16-275">(Consultez [émettre des problèmes de sécurité dans la réflexion](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Pour utiliser cette fonctionnalité, votre application doit cibler [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] ou version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="8cc16-275">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cc16-276">(Visual Basic, c#)</span><span class="sxs-lookup"><span data-stu-id="8cc16-276">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="8cc16-277">L’exemple de code ci-dessous montre comment créer un module dynamique persistant à l’aide de `DefineDynamicModule`.</span><span class="sxs-lookup"><span data-stu-id="8cc16-277">The code example below demonstrates how to create a persistent dynamic module using `DefineDynamicModule`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#3)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#3)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cc16-278">
            <paramref name="name" /> ou <paramref name="fileName" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-278">
              <paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8cc16-279">La longueur de <paramref name="name" /> ou <paramref name="fileName" /> est égale à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-279">The length of <paramref name="name" /> or <paramref name="fileName" /> is zero.</span>
          </span>
          <span data-ttu-id="8cc16-280">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-280">-or-</span>
          </span>
          <span data-ttu-id="8cc16-281">La longueur de <paramref name="name" /> est supérieure ou égale à 260.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-281">The length of <paramref name="name" /> is greater than or equal to 260.</span>
          </span>
          <span data-ttu-id="8cc16-282">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-282">-or-</span>
          </span>
          <span data-ttu-id="8cc16-283">
            <paramref name="fileName" /> contient une spécification de chemin d’accès (par exemple, un composant de répertoire).</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-283">
              <paramref name="fileName" /> contains a path specification (a directory component, for example).</span>
          </span>
          <span data-ttu-id="8cc16-284">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-284">-or-</span>
          </span>
          <span data-ttu-id="8cc16-285">Il existe un conflit avec le nom d’un autre fichier appartenant à cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-285">There is a conflict with the name of another file that belongs to this assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8cc16-286">Cet assembly a déjà été enregistré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-286">This assembly has been previously saved.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8cc16-287">Cet assembly a été appelé sur un assembly dynamique avec l’attribut <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Run" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-287">This assembly was called on a dynamic assembly with <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Run" /> attribute.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-288">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-288">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="8cc16-289">L’assembly pour le writer de symbole par défaut ne peut pas être chargé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-289">The assembly for default symbol writer cannot be loaded.</span>
          </span>
          <span data-ttu-id="8cc16-290">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-290">-or-</span>
          </span>
          <span data-ttu-id="8cc16-291">Le type qui implémente l’interface du writer de symbole par défaut est introuvable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-291">The type that implements the default symbol writer interface cannot be found.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-292">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-292">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-293">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-293">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8cc16-294">Écrire = true ou Append = true est requis pour enregistrer le module</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-294">Write=true or Append=true is needed to save the module</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder DefineDynamicModule (string name, string fileName, bool emitSymbolInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder DefineDynamicModule(string name, string fileName, bool emitSymbolInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineDynamicModule (name As String, fileName As String, emitSymbolInfo As Boolean) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ DefineDynamicModule(System::String ^ name, System::String ^ fileName, bool emitSymbolInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="emitSymbolInfo" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8cc16-295">Nom du module dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-295">The name of the dynamic module.</span>
          </span>
          <span data-ttu-id="8cc16-296">Sa longueur doit être inférieure à 260 caractères.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-296">Must be less than 260 characters in length.</span>
          </span>
        </param>
        <param name="fileName">
          <span data-ttu-id="8cc16-297">Nom du fichier dans lequel enregistrer le module dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-297">The name of the file to which the dynamic module should be saved.</span>
          </span>
        </param>
        <param name="emitSymbolInfo">
          <span data-ttu-id="8cc16-298">Si la valeur est <see langword="true" />, les informations symboliques sont écrites à l’aide du writer de symbole par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-298">If <see langword="true" />, symbolic information is written using the default symbol writer.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-299">Définit un module dynamique persistant, en spécifiant le nom du module, le nom du fichier dans lequel le module doit être enregistré et si les informations de symbole doivent être émises à l’aide du writer de symbole par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-299">Defines a persistable dynamic module, specifying the module name, the name of the file to which the module will be saved, and whether symbol information should be emitted using the default symbol writer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-300">Objet <see cref="T:System.Reflection.Emit.ModuleBuilder" /> représentant le module dynamique défini.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-300">A <see cref="T:System.Reflection.Emit.ModuleBuilder" /> object representing the defined dynamic module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-301">Pour définir un module dynamique persistant, cet assembly doit être créé avec le <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> ou <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> attribut.</span><span class="sxs-lookup"><span data-stu-id="8cc16-301">To define a persistable dynamic module, this assembly needs to be created with the <xref:System.Reflection.Emit.AssemblyBuilderAccess.Save> or the <xref:System.Reflection.Emit.AssemblyBuilderAccess.RunAndSave> attribute.</span></span>  
  
 <span data-ttu-id="8cc16-302">Si vous souhaitez que le module doit contenir le manifeste d’assembly, `name` doit être le même que le nom de l’assembly (autrement dit, le <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> propriété de la <xref:System.Reflection.AssemblyName> utilisé pour créer l’assembly dynamique) et `fileName` doit être le même que le nom de fichier lorsque vous enregistrez l’assembly spécifié.</span><span class="sxs-lookup"><span data-stu-id="8cc16-302">If you want the module to contain the assembly manifest, `name` should be the same as the name of the assembly (that is, the <xref:System.Reflection.AssemblyName.Name%2A?displayProperty=nameWithType> property of the <xref:System.Reflection.AssemblyName> used to create the dynamic assembly) and `fileName` should be the same as the filename you specify when you save the assembly.</span></span>  
  
 <span data-ttu-id="8cc16-303">Dans un assembly avec un seul module, ce module doit contenir le manifeste d’assembly.</span><span class="sxs-lookup"><span data-stu-id="8cc16-303">In an assembly with only one module, that module should contain the assembly manifest.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8cc16-304">Pour supprimer les optimisations lorsque vous déboguez des modules dynamiques, appliquez le <xref:System.Diagnostics.DebuggableAttribute> d’attribut à l’assembly dynamique avant d’appeler <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span><span class="sxs-lookup"><span data-stu-id="8cc16-304">To suppress optimizations when debugging dynamic modules, apply the <xref:System.Diagnostics.DebuggableAttribute> attribute to the dynamic assembly before calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule%2A>.</span></span> <span data-ttu-id="8cc16-305">Créez une instance de <xref:System.Diagnostics.DebuggableAttribute> avec la <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> indicateur et l’appliquer à l’aide de la <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8cc16-305">Create an instance of <xref:System.Diagnostics.DebuggableAttribute> with the <xref:System.Diagnostics.DebuggableAttribute.DebuggingModes.DisableOptimizations> flag and apply it using the <xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> method.</span></span> <span data-ttu-id="8cc16-306">L’attribut doit être appliqué à l’assembly dynamique.</span><span class="sxs-lookup"><span data-stu-id="8cc16-306">The attribute must be applied to the dynamic assembly.</span></span> <span data-ttu-id="8cc16-307">Il n’a aucun effet si appliqué au module.</span><span class="sxs-lookup"><span data-stu-id="8cc16-307">It has no effect if applied to the module.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8cc16-308">En commençant par le [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ce membre n’a plus besoin <xref:System.Security.Permissions.ReflectionPermission> avec la <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="8cc16-308">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8cc16-309">(Consultez [émettre des problèmes de sécurité dans la réflexion](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Pour utiliser cette fonctionnalité, votre application doit cibler [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] ou version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="8cc16-309">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cc16-310">(Visual Basic, c#)</span><span class="sxs-lookup"><span data-stu-id="8cc16-310">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="8cc16-311">L’exemple de code ci-dessous montre comment créer un module dynamique persistant avec émission de symboles à l’aide `DefineDynamicModule`.</span><span class="sxs-lookup"><span data-stu-id="8cc16-311">The code example below demonstrates how to create a persistent dynamic module with symbol emission using `DefineDynamicModule`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CPP/source.cpp#4)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/CS/source.cs#4)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.DefineDynamicModule Example/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cc16-312">
            <paramref name="name" /> ou <paramref name="fileName" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-312">
              <paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8cc16-313">La longueur de <paramref name="name" /> ou <paramref name="fileName" /> est égale à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-313">The length of <paramref name="name" /> or <paramref name="fileName" /> is zero.</span>
          </span>
          <span data-ttu-id="8cc16-314">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-314">-or-</span>
          </span>
          <span data-ttu-id="8cc16-315">La longueur de <paramref name="name" /> est supérieure ou égale à 260.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-315">The length of <paramref name="name" /> is greater than or equal to 260.</span>
          </span>
          <span data-ttu-id="8cc16-316">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-316">-or-</span>
          </span>
          <span data-ttu-id="8cc16-317">
            <paramref name="fileName" /> contient une spécification de chemin d’accès (par exemple, un composant de répertoire).</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-317">
              <paramref name="fileName" /> contains a path specification (a directory component, for example).</span>
          </span>
          <span data-ttu-id="8cc16-318">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-318">-or-</span>
          </span>
          <span data-ttu-id="8cc16-319">Il existe un conflit avec le nom d’un autre fichier appartenant à cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-319">There is a conflict with the name of another file that belongs to this assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8cc16-320">Cet assembly a déjà été enregistré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-320">This assembly has been previously saved.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8cc16-321">Cet assembly a été appelé sur un assembly dynamique avec l’attribut <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Run" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-321">This assembly was called on a dynamic assembly with the <see cref="F:System.Reflection.Emit.AssemblyBuilderAccess.Run" /> attribute.</span>
          </span>
        </exception>
        <exception cref="T:System.ExecutionEngineException">
          <span data-ttu-id="8cc16-322">L’assembly pour le writer de symbole par défaut ne peut pas être chargé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-322">The assembly for default symbol writer cannot be loaded.</span>
          </span>
          <span data-ttu-id="8cc16-323">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-323">-or-</span>
          </span>
          <span data-ttu-id="8cc16-324">Le type qui implémente l’interface du writer de symbole par défaut est introuvable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-324">The type that implements the default symbol writer interface cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-325">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-325">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-326">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-326">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-327">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-327">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8cc16-328">Écrire = true ou Append = true est requis pour enregistrer ce module</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-328">Write=true or Append=true is needed to save this module</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-329">Définit une ressource managée autonome pour cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-329">Defines a standalone managed resource for this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineResource">
      <MemberSignature Language="C#" Value="public System.Resources.IResourceWriter DefineResource (string name, string description, string fileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Resources.IResourceWriter DefineResource(string name, string description, string fileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineResource(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineResource (name As String, description As String, fileName As String) As IResourceWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Resources::IResourceWriter ^ DefineResource(System::String ^ name, System::String ^ description, System::String ^ fileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.IResourceWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8cc16-330">Nom logique de la ressource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-330">The logical name of the resource.</span>
          </span>
        </param>
        <param name="description">
          <span data-ttu-id="8cc16-331">Description textuelle de la ressource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-331">A textual description of the resource.</span>
          </span>
        </param>
        <param name="fileName">
          <span data-ttu-id="8cc16-332">Nom du fichier physique (fichier .resources) auquel le nom logique est mappé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-332">The physical file name (.resources file) to which the logical name is mapped.</span>
          </span>
          <span data-ttu-id="8cc16-333">Le chemin ne doit pas être inclus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-333">This should not include a path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-334">Définit une ressource managée autonome pour cet assembly avec l’attribut de ressource public par défaut.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-334">Defines a standalone managed resource for this assembly with the default public resource attribute.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-335">Objet <see cref="T:System.Resources.ResourceWriter" /> pour la ressource spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-335">A <see cref="T:System.Resources.ResourceWriter" /> object for the specified resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-336">Ressources de granularité fine peuvent être ajoutées avec retourné <xref:System.Resources.ResourceWriter> en appelant <xref:System.Resources.ResourceWriter.AddResource%2A>.</span><span class="sxs-lookup"><span data-stu-id="8cc16-336">Fine grain resources can be added with the returned <xref:System.Resources.ResourceWriter> by calling <xref:System.Resources.ResourceWriter.AddResource%2A>.</span></span>  
  
 <span data-ttu-id="8cc16-337">`fileName` doit pas être identique à celui de tout autre module persistable, ressource managée autonome ou le fichier manifeste autonome.</span><span class="sxs-lookup"><span data-stu-id="8cc16-337">`fileName` should not be the same as that of any other persistable module, stand-alone managed resource, or the stand-alone manifest file.</span></span>  
  
 <span data-ttu-id="8cc16-338">Le runtime appelle la <xref:System.Resources.ResourceWriter.Close%2A> méthode lors de l’enregistrement de l’assembly dynamique.</span><span class="sxs-lookup"><span data-stu-id="8cc16-338">The runtime calls the <xref:System.Resources.ResourceWriter.Close%2A> method when the dynamic assembly is saved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8cc16-339">En commençant par le [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ce membre n’a plus besoin <xref:System.Security.Permissions.ReflectionPermission> avec la <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="8cc16-339">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8cc16-340">(Consultez [émettre des problèmes de sécurité dans la réflexion](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Pour utiliser cette fonctionnalité, votre application doit cibler [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] ou version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="8cc16-340">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cc16-341">L’exemple suivant utilise la <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A> méthode pour obtenir un writer de ressource.</span><span class="sxs-lookup"><span data-stu-id="8cc16-341">The following example uses the <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A> method to get a resource writer.</span></span> <span data-ttu-id="8cc16-342">L’exemple utilise le writer de ressource pour ajouter trois chaînes de ressources.</span><span class="sxs-lookup"><span data-stu-id="8cc16-342">The example uses the resource writer to add three resource strings.</span></span>  
  
 [!code-cpp[AssemblyBuilder.DefineResource Example 2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder.DefineResource Example 2/CPP/assemblybuilder_defineresource.cpp#1)]
 [!code-csharp[AssemblyBuilder.DefineResource Example 2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder.DefineResource Example 2/CS/assemblybuilder_defineresource.cs#1)]
 [!code-vb[AssemblyBuilder.DefineResource Example 2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder.DefineResource Example 2/VB/assemblybuilder_defineresource.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8cc16-343">
            <paramref name="name" /> a été défini précédemment.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-343">
              <paramref name="name" /> has been previously defined.</span>
          </span>
          <span data-ttu-id="8cc16-344">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-344">-or-</span>
          </span>
          <span data-ttu-id="8cc16-345">Il existe un autre fichier dans l’assembly nommé <paramref name="fileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-345">There is another file in the assembly named <paramref name="fileName" />.</span>
          </span>
          <span data-ttu-id="8cc16-346">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-346">-or-</span>
          </span>
          <span data-ttu-id="8cc16-347">La longueur de <paramref name="name" /> est égale à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-347">The length of <paramref name="name" /> is zero.</span>
          </span>
          <span data-ttu-id="8cc16-348">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-348">-or-</span>
          </span>
          <span data-ttu-id="8cc16-349">La longueur de <paramref name="fileName" /> est égale à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-349">The length of <paramref name="fileName" /> is zero.</span>
          </span>
          <span data-ttu-id="8cc16-350">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-350">-or-</span>
          </span>
          <span data-ttu-id="8cc16-351">
            <paramref name="fileName" /> inclut un chemin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-351">
              <paramref name="fileName" /> includes a path.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cc16-352">
            <paramref name="name" /> ou <paramref name="fileName" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-352">
              <paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-353">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-353">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-354">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-354">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-355">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-355">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8cc16-356">Écrire = true ou Append = true</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-356">Write=true or Append=true</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineResource">
      <MemberSignature Language="C#" Value="public System.Resources.IResourceWriter DefineResource (string name, string description, string fileName, System.Reflection.ResourceAttributes attribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Resources.IResourceWriter DefineResource(string name, string description, string fileName, valuetype System.Reflection.ResourceAttributes attribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineResource(System.String,System.String,System.String,System.Reflection.ResourceAttributes)" />
      <MemberSignature Language="VB.NET" Value="Public Function DefineResource (name As String, description As String, fileName As String, attribute As ResourceAttributes) As IResourceWriter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Resources::IResourceWriter ^ DefineResource(System::String ^ name, System::String ^ description, System::String ^ fileName, System::Reflection::ResourceAttributes attribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Resources.IResourceWriter</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="fileName" Type="System.String" />
        <Parameter Name="attribute" Type="System.Reflection.ResourceAttributes" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8cc16-357">Nom logique de la ressource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-357">The logical name of the resource.</span>
          </span>
        </param>
        <param name="description">
          <span data-ttu-id="8cc16-358">Description textuelle de la ressource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-358">A textual description of the resource.</span>
          </span>
        </param>
        <param name="fileName">
          <span data-ttu-id="8cc16-359">Nom du fichier physique (fichier .resources) auquel le nom logique est mappé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-359">The physical file name (.resources file) to which the logical name is mapped.</span>
          </span>
          <span data-ttu-id="8cc16-360">Le chemin ne doit pas être inclus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-360">This should not include a path.</span>
          </span>
        </param>
        <param name="attribute">
          <span data-ttu-id="8cc16-361">Attributs de la ressource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-361">The resource attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-362">Définit une ressource managée autonome pour cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-362">Defines a standalone managed resource for this assembly.</span>
          </span>
          <span data-ttu-id="8cc16-363">Des attributs peuvent être spécifiés pour la ressource managée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-363">Attributes can be specified for the managed resource.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-364">Objet <see cref="T:System.Resources.ResourceWriter" /> pour la ressource spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-364">A <see cref="T:System.Resources.ResourceWriter" /> object for the specified resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-365">Ressources de granularité fine peuvent être ajoutées avec retourné <xref:System.Resources.ResourceWriter> en appelant <xref:System.Resources.ResourceWriter.AddResource%2A>.</span><span class="sxs-lookup"><span data-stu-id="8cc16-365">Fine-grain resources can be added with the returned <xref:System.Resources.ResourceWriter> by calling <xref:System.Resources.ResourceWriter.AddResource%2A>.</span></span>  
  
 <span data-ttu-id="8cc16-366">`fileName` doit pas être identique à celui de tout autre module persistable, une ressource managée autonome ou du fichier manifeste autonome.</span><span class="sxs-lookup"><span data-stu-id="8cc16-366">`fileName` should not be the same as that of any other persistable module, standalone managed resource, or the standalone manifest file.</span></span>  
  
 <span data-ttu-id="8cc16-367">Le runtime appelle la <xref:System.Resources.ResourceWriter.Close%2A> méthode lors de l’enregistrement de l’assembly dynamique.</span><span class="sxs-lookup"><span data-stu-id="8cc16-367">The runtime calls the <xref:System.Resources.ResourceWriter.Close%2A> method when the dynamic assembly is saved.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8cc16-368">En commençant par le [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ce membre n’a plus besoin <xref:System.Security.Permissions.ReflectionPermission> avec la <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="8cc16-368">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8cc16-369">(Consultez [émettre des problèmes de sécurité dans la réflexion](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Pour utiliser cette fonctionnalité, votre application doit cibler [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] ou version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="8cc16-369">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8cc16-370">
            <paramref name="name" /> a déjà été défini ou il existe dans l’assembly un autre fichier nommé <paramref name="fileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-370">
              <paramref name="name" /> has been previously defined or if there is another file in the assembly named <paramref name="fileName" />.</span>
          </span>
          <span data-ttu-id="8cc16-371">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-371">-or-</span>
          </span>
          <span data-ttu-id="8cc16-372">La longueur de <paramref name="name" /> est égale à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-372">The length of <paramref name="name" /> is zero.</span>
          </span>
          <span data-ttu-id="8cc16-373">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-373">-or-</span>
          </span>
          <span data-ttu-id="8cc16-374">La longueur de <paramref name="fileName" /> est égale à zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-374">The length of <paramref name="fileName" /> is zero.</span>
          </span>
          <span data-ttu-id="8cc16-375">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-375">-or-</span>
          </span>
          <span data-ttu-id="8cc16-376">
            <paramref name="fileName" /> inclut un chemin.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-376">
              <paramref name="fileName" /> includes a path.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cc16-377">
            <paramref name="name" /> ou <paramref name="fileName" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-377">
              <paramref name="name" /> or <paramref name="fileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-378">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-378">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-379">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-379">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-380">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-380">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8cc16-381">Écrire = true ou Append = true</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-381">Write=true or Append=true</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineUnmanagedResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-382">Définit une ressource non managée pour cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-382">Defines an unmanaged resource for this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineUnmanagedResource">
      <MemberSignature Language="C#" Value="public void DefineUnmanagedResource (byte[] resource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineUnmanagedResource(unsigned int8[] resource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineUnmanagedResource (resource As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineUnmanagedResource(cli::array &lt;System::Byte&gt; ^ resource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resource" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="resource">
          <span data-ttu-id="8cc16-383">Objet blob d’octets opaque représentant la ressource non managée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-383">The opaque blob of bytes representing the unmanaged resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-384">Définit une ressource non managée pour cet assembly en tant qu’objet blob d’octets opaque.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-384">Defines an unmanaged resource for this assembly as an opaque blob of bytes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-385">Un assembly peut être associé à une seule ressource non managée.</span><span class="sxs-lookup"><span data-stu-id="8cc16-385">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="8cc16-386">Cela signifie que l’appel <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> ou <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> après qu’une des méthodes a été appelée précédemment lève System.ArgumentException est levée.</span><span class="sxs-lookup"><span data-stu-id="8cc16-386">This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException being throw.</span></span> <span data-ttu-id="8cc16-387">Plusieurs ressources non managées doivent être fusionnées avec un outil tel que l’utilitaire Microsoft ResMerge (non fourni avec le common language runtime).</span><span class="sxs-lookup"><span data-stu-id="8cc16-387">Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cc16-388">L’exemple de code suivant crée et joint un tableau d’octets représentant une ressource non managée à un assembly dynamique, à l’aide de `DefineUnmanagedResource`.</span><span class="sxs-lookup"><span data-stu-id="8cc16-388">The following code sample creates and attaches an array of bytes representing an unmanaged resource to a dynamic assembly, using `DefineUnmanagedResource`.</span></span>  
  
 [!code-cpp[AssemblyBuilder_DefineUnmanagedResource2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource2/CPP/assemblybuilder_defineunmanagedresource2.cpp#1)]
 [!code-csharp[AssemblyBuilder_DefineUnmanagedResource2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource2/CS/assemblybuilder_defineunmanagedresource2.cs#1)]
 [!code-vb[AssemblyBuilder_DefineUnmanagedResource2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource2/VB/assemblybuilder_defineunmanagedresource2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8cc16-389">Une ressource non managée a été définie précédemment.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-389">An unmanaged resource was previously defined.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cc16-390">
            <paramref name="resource" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-390">
              <paramref name="resource" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-391">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-391">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-392">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-392">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-393">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-393">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineUnmanagedResource">
      <MemberSignature Language="C#" Value="public void DefineUnmanagedResource (string resourceFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineUnmanagedResource(string resourceFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineUnmanagedResource (resourceFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineUnmanagedResource(System::String ^ resourceFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceFileName">
          <span data-ttu-id="8cc16-394">Nom du fichier de ressources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-394">The name of the resource file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-395">Définit un fichier de ressources non managées pour cet assembly selon le nom du fichier de ressources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-395">Defines an unmanaged resource file for this assembly given the name of the resource file.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-396">Un assembly peut être associé à une seule ressource non managée.</span><span class="sxs-lookup"><span data-stu-id="8cc16-396">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="8cc16-397">Cela signifie que l’appel <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> ou <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> après qu’une des méthodes a été appelée provoquera la levée de System.ArgumentException.</span><span class="sxs-lookup"><span data-stu-id="8cc16-397">This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException.</span></span> <span data-ttu-id="8cc16-398">Plusieurs ressources non managées doivent être fusionnées avec un outil tel que l’utilitaire Microsoft ResMerge (non fourni avec le common language runtime).</span><span class="sxs-lookup"><span data-stu-id="8cc16-398">Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8cc16-399">En commençant par le [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ce membre n’a plus besoin <xref:System.Security.Permissions.ReflectionPermission> avec la <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="8cc16-399">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8cc16-400">(Consultez [émettre des problèmes de sécurité dans la réflexion](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Pour utiliser cette fonctionnalité, votre application doit cibler [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] ou version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="8cc16-400">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cc16-401">L’exemple suivant illustre un appel à `DefineUnmanagedResource`, en passant un fichier de ressources externe.</span><span class="sxs-lookup"><span data-stu-id="8cc16-401">The example below demonstrates a call to `DefineUnmanagedResource`, passing an external resource file.</span></span>  
  
 [!code-cpp[AssemblyBuilder_DefineUnmanagedResource#3](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource/CPP/assemblybuilder_defineunmanagedresource.cpp#3)]
 [!code-csharp[AssemblyBuilder_DefineUnmanagedResource#3](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource/CS/assemblybuilder_defineunmanagedresource.cs#3)]
 [!code-vb[AssemblyBuilder_DefineUnmanagedResource#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineUnmanagedResource/VB/assemblybuilder_defineunmanagedresource.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8cc16-402">Une ressource non managée a été définie précédemment.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-402">An unmanaged resource was previously defined.</span>
          </span>
          <span data-ttu-id="8cc16-403">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-403">-or-</span>
          </span>
          <span data-ttu-id="8cc16-404">Le fichier <paramref name="resourceFileName" /> ne peut pas être lu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-404">The file <paramref name="resourceFileName" /> is not readable.</span>
          </span>
          <span data-ttu-id="8cc16-405">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-405">-or-</span>
          </span>
          <span data-ttu-id="8cc16-406">
            <paramref name="resourceFileName" /> est la chaîne vide ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-406">
              <paramref name="resourceFileName" /> is the empty string ("").</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cc16-407">
            <paramref name="resourceFileName" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-407">
              <paramref name="resourceFileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8cc16-408">
            <paramref name="resourceFileName" /> est introuvable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-408">
              <paramref name="resourceFileName" /> is not found.</span>
          </span>
          <span data-ttu-id="8cc16-409">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-409">-or-</span>
          </span>
          <span data-ttu-id="8cc16-410">
            <paramref name="resourceFileName" /> est un répertoire.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-410">
              <paramref name="resourceFileName" /> is a directory.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-411">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-411">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-412">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-412">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-413">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-413">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8cc16-414">L’autorisation FileIOPermissionAccess.Read est requise pour accéder au fichier de ressources <paramref name="resourceFileName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-414">The FileIOPermissionAccess.Read permission is needed to access the resource file <paramref name="resourceFileName" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="DefineVersionInfoResource">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-415">Définit une ressource d’informations de version non managée pour cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-415">Defines an unmanaged version information resource for this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DefineVersionInfoResource">
      <MemberSignature Language="C#" Value="public void DefineVersionInfoResource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineVersionInfoResource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineVersionInfoResource ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineVersionInfoResource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-416">Définit une ressource d’informations de version non managée en utilisant les informations spécifiées dans l’objet AssemblyName de l’assembly et les attributs personnalisés de l’assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-416">Defines an unmanaged version information resource using the information specified in the assembly's AssemblyName object and the assembly's custom attributes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-417">Un assembly peut être associé à une seule ressource non managée.</span><span class="sxs-lookup"><span data-stu-id="8cc16-417">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="8cc16-418">Cela signifie que l’appel <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> ou <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> après qu’une des méthodes a été appelée provoquera la levée de System.ArgumentException.</span><span class="sxs-lookup"><span data-stu-id="8cc16-418">This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException.</span></span> <span data-ttu-id="8cc16-419">Plusieurs ressources non managées doivent être fusionnées avec un outil tel que l’utilitaire Microsoft ResMerge (non fourni avec le Kit de développement logiciel du common language runtime).</span><span class="sxs-lookup"><span data-stu-id="8cc16-419">Multiple unmanaged resources need to be merged with a tool such as the Microsoft ResMerge utility (not supplied with the common language runtime SDK).</span></span>  
  
 <span data-ttu-id="8cc16-420">Chaînes d’arguments vides sont écrites comme un espace unique.</span><span class="sxs-lookup"><span data-stu-id="8cc16-420">Empty argument strings get written as a single space.</span></span> <span data-ttu-id="8cc16-421">Des espaces sont remplacés par les caractères null dans les chaînes d’arguments.</span><span class="sxs-lookup"><span data-stu-id="8cc16-421">Spaces are substituted for null characters in the argument strings.</span></span>  
  
 <span data-ttu-id="8cc16-422">Les informations sont déduites à partir de la `AssemblyName` objet utilisé pour définir cet assembly dynamique.</span><span class="sxs-lookup"><span data-stu-id="8cc16-422">The information is inferred from the `AssemblyName` object used to define this dynamic assembly.</span></span> <span data-ttu-id="8cc16-423">Les attributs personnalisés de cet assembly remplacent les informations spécifiées dans le `AssemblyName` objet.</span><span class="sxs-lookup"><span data-stu-id="8cc16-423">This assembly's custom attributes override information specified in the `AssemblyName` object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8cc16-424">En commençant par le [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ce membre n’a plus besoin <xref:System.Security.Permissions.ReflectionPermission> avec la <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="8cc16-424">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8cc16-425">(Consultez [émettre des problèmes de sécurité dans la réflexion](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Pour utiliser cette fonctionnalité, votre application doit cibler [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] ou version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="8cc16-425">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cc16-426">L’exemple ci-dessous illustre l’utilisation de `DefineVersionInfoResource`.</span><span class="sxs-lookup"><span data-stu-id="8cc16-426">The example below illustrates the usage of `DefineVersionInfoResource`.</span></span>  
  
 [!code-cpp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CPP/assemblybuilder_defineversioninforesource.cpp#1)]
 [!code-csharp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CS/assemblybuilder_defineversioninforesource.cs#1)]
 [!code-vb[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/VB/assemblybuilder_defineversioninforesource.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8cc16-427">Une ressource d’informations de version non managée a déjà été définie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-427">An unmanaged version information resource was previously defined.</span>
          </span>
          <span data-ttu-id="8cc16-428">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-428">-or-</span>
          </span>
          <span data-ttu-id="8cc16-429">Les informations de version non managée sont trop importantes pour être rendues persistantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-429">The unmanaged version information is too large to persist.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-430">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-430">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-431">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-431">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-432">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-432">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="DefineVersionInfoResource">
      <MemberSignature Language="C#" Value="public void DefineVersionInfoResource (string product, string productVersion, string company, string copyright, string trademark);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefineVersionInfoResource(string product, string productVersion, string company, string copyright, string trademark) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefineVersionInfoResource (product As String, productVersion As String, company As String, copyright As String, trademark As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefineVersionInfoResource(System::String ^ product, System::String ^ productVersion, System::String ^ company, System::String ^ copyright, System::String ^ trademark);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="product" Type="System.String" />
        <Parameter Name="productVersion" Type="System.String" />
        <Parameter Name="company" Type="System.String" />
        <Parameter Name="copyright" Type="System.String" />
        <Parameter Name="trademark" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="product">
          <span data-ttu-id="8cc16-433">Nom du produit avec lequel cet assembly est distribué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-433">The name of the product with which this assembly is distributed.</span>
          </span>
        </param>
        <param name="productVersion">
          <span data-ttu-id="8cc16-434">Version du produit avec lequel cet assembly est distribué.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-434">The version of the product with which this assembly is distributed.</span>
          </span>
        </param>
        <param name="company">
          <span data-ttu-id="8cc16-435">Nom de la société ayant créé cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-435">The name of the company that produced this assembly.</span>
          </span>
        </param>
        <param name="copyright">
          <span data-ttu-id="8cc16-436">Décrit toutes les mentions de droits d’auteur, les marques et les marques déposées s’appliquant à cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-436">Describes all copyright notices, trademarks, and registered trademarks that apply to this assembly.</span>
          </span>
          <span data-ttu-id="8cc16-437">Cela doit inclure le texte intégral de la totalité des mentions, symboles légaux, dates de copyright, numéros de marques, etc.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-437">This should include the full text of all notices, legal symbols, copyright dates, trademark numbers, and so on.</span>
          </span>
          <span data-ttu-id="8cc16-438">En français, cette chaîne doit avoir le format « Copyright Microsoft Corp. 1990-2001 ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-438">In English, this string should be in the format "Copyright Microsoft Corp. 1990-2001".</span>
          </span>
        </param>
        <param name="trademark">
          <span data-ttu-id="8cc16-439">Décrit toutes les marques et marques déposées s’appliquant à cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-439">Describes all trademarks and registered trademarks that apply to this assembly.</span>
          </span>
          <span data-ttu-id="8cc16-440">Cela doit inclure le texte intégral de la totalité des mentions, symboles légaux, numéros de marques, etc.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-440">This should include the full text of all notices, legal symbols, trademark numbers, and so on.</span>
          </span>
          <span data-ttu-id="8cc16-441">En français, cette chaîne doit avoir le format « Windows est une marque de Microsoft Corporation ».</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-441">In English, this string should be in the format "Windows is a trademark of Microsoft Corporation".</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-442">Définit une ressource d’informations de version non managée pour cet assembly avec les spécifications données.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-442">Defines an unmanaged version information resource for this assembly with the given specifications.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-443">Un assembly peut être associé à une seule ressource non managée.</span><span class="sxs-lookup"><span data-stu-id="8cc16-443">An assembly can be associated with only one unmanaged resource.</span></span> <span data-ttu-id="8cc16-444">Cela signifie que l’appel <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> ou <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> après qu’une des méthodes a été appelée provoquera la levée de System.ArgumentException.</span><span class="sxs-lookup"><span data-stu-id="8cc16-444">This means that calling <xref:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource%2A> or <xref:System.Reflection.Emit.AssemblyBuilder.DefineUnmanagedResource%2A> after either one of the methods was called previously will throw the System.ArgumentException.</span></span> <span data-ttu-id="8cc16-445">Plusieurs ressources non managées doivent être fusionnées avec un outil tel que Microsoft `ResMerge` utilitaire (non fourni avec le Kit de développement logiciel du common language runtime).</span><span class="sxs-lookup"><span data-stu-id="8cc16-445">Multiple unmanaged resources need to be merged with a tool such as the Microsoft `ResMerge` utility (not supplied with the common language runtime SDK).</span></span>  
  
 <span data-ttu-id="8cc16-446">Chaînes d’arguments vides sont écrites comme un espace unique.</span><span class="sxs-lookup"><span data-stu-id="8cc16-446">Empty argument strings get written as a single space.</span></span> <span data-ttu-id="8cc16-447">Des espaces sont remplacés par les caractères null dans les chaînes d’arguments.</span><span class="sxs-lookup"><span data-stu-id="8cc16-447">Spaces are substituted for null characters in the argument strings.</span></span>  
  
 <span data-ttu-id="8cc16-448">La structure de la ressource de version inclut des données qui identifient la version, la langue et la distribution du fichier.</span><span class="sxs-lookup"><span data-stu-id="8cc16-448">The structure of the version resource includes data that identifies the version, language, and distribution of the file.</span></span> <span data-ttu-id="8cc16-449">Programmes d’installation utilisent les fonctions dans la bibliothèque d’installation de fichiers (VER. (DLL) pour récupérer la ressource d’informations de version à partir d’un fichier et extraire les blocs d’informations de version à partir de la ressource.</span><span class="sxs-lookup"><span data-stu-id="8cc16-449">Installation programs use the functions in the file installation library (VER.DLL) to retrieve the version information resource from a file and to extract the version information blocks from the resource.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8cc16-450">En commençant par le [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ce membre n’a plus besoin <xref:System.Security.Permissions.ReflectionPermission> avec la <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="8cc16-450">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8cc16-451">(Consultez [émettre des problèmes de sécurité dans la réflexion](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Pour utiliser cette fonctionnalité, votre application doit cibler [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] ou version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="8cc16-451">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cc16-452">L’exemple ci-dessous illustre l’utilisation de `DefineVersionInfoResource`.</span><span class="sxs-lookup"><span data-stu-id="8cc16-452">The example below illustrates the usage of `DefineVersionInfoResource`.</span></span>  
  
 [!code-cpp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CPP/assemblybuilder_defineversioninforesource.cpp#1)]
 [!code-csharp[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/CS/assemblybuilder_defineversioninforesource.cs#1)]
 [!code-vb[AssemblyBuilder_DefineVersionInfoResource#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_DefineVersionInfoResource/VB/assemblybuilder_defineversioninforesource.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8cc16-453">Une ressource d’informations de version non managée a déjà été définie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-453">An unmanaged version information resource was previously defined.</span>
          </span>
          <span data-ttu-id="8cc16-454">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-454">-or-</span>
          </span>
          <span data-ttu-id="8cc16-455">Les informations de version non managée sont trop importantes pour être rendues persistantes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-455">The unmanaged version information is too large to persist.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-456">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-456">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-457">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-457">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-458">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-458">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="EntryPoint">
      <MemberSignature Language="C#" Value="public override System.Reflection.MethodInfo EntryPoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo EntryPoint" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.EntryPoint" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property EntryPoint As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::MethodInfo ^ EntryPoint { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-459">Obtient le point d’entrée de cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-459">Returns the entry point of this assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cc16-460">Point d’entrée de cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-460">The entry point of this assembly.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-461">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-461">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-462">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-462">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-463">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-463">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="8cc16-464">Objet à comparer à cette instance ou <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-464">An object to compare with this instance, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-465">Retourne une valeur qui indique si cette instance équivaut à l’objet spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-465">Returns a value that indicates whether this instance is equal to the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-466">
            <see langword="true" /> si <paramref name="obj" /> est égal au type et à la valeur de cette instance ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-466">
              <see langword="true" /> if <paramref name="obj" /> equals the type and value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Evidence">
      <MemberSignature Language="C#" Value="public override System.Security.Policy.Evidence Evidence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Policy.Evidence Evidence" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.Evidence" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Evidence As Evidence" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Policy::Evidence ^ Evidence { System::Security::Policy::Evidence ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Policy.Evidence</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-467">Obtient la preuve pour cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-467">Gets the evidence for this assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cc16-468">Preuve pour cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-468">The evidence for this assembly.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FullName">
      <MemberSignature Language="C#" Value="public override string FullName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FullName" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.FullName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FullName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FullName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-469">Obtient le nom d’affichage de l’assembly dynamique actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-469">Gets the display name of the current dynamic assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cc16-470">Nom d’affichage de l’assembly dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-470">The display name of the dynamic assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-471">Consultez <xref:System.Reflection.AssemblyName> pour obtenir une description du format du nom d’affichage d’un assembly.</span><span class="sxs-lookup"><span data-stu-id="8cc16-471">See <xref:System.Reflection.AssemblyName> for a description of the format of the display name of an assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-472">Retourne les attributs personnalisés appliqués au <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-472">Returns custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" /></span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetCustomAttributes(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="inherit">
          <span data-ttu-id="8cc16-473">Cet argument est ignoré pour les objets de ce type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-473">This argument is ignored for objects of this type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-474">Retourne tous les attributs personnalisés appliqués au <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-474">Returns all the custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-475">Un tableau qui contient les attributs personnalisés ; le tableau est vide s’il n’existe pas d’attributs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-475">An array that contains the custom attributes; the array is empty if there are no attributes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="public override object[] GetCustomAttributes (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object[] GetCustomAttributes(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetCustomAttributes(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributes (attributeType As Type, inherit As Boolean) As Object()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Object ^&gt; ^ GetCustomAttributes(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="8cc16-476">Type de base duquel dérivent des attributs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-476">The base type from which attributes derive.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="8cc16-477">Cet argument est ignoré pour les objets de ce type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-477">This argument is ignored for objects of this type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-478">Retourne tous les attributs personnalisés appliqués au <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> actuel et qui dérivent du type d'attribut spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-478">Returns all the custom attributes that have been applied to the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" />, and that derive from a specified attribute type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-479">Tableau qui contient les attributs personnalisés dérivés à tous les niveaux de <paramref name="attributeType" /> ; le tableau est vide si de tels attributs n'existent pas.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-479">An array that contains the custom attributes that are derived at any level from <paramref name="attributeType" />; the array is empty if there are no such attributes.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cc16-480">
            <paramref name="attributeType" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-480">
              <paramref name="attributeType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8cc16-481">
            <paramref name="attributeType" /> n'est pas un objet <see cref="T:System.Type" /> fourni par le runtime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-481">
              <paramref name="attributeType" /> is not a <see cref="T:System.Type" /> object supplied by the runtime.</span>
          </span>
          <span data-ttu-id="8cc16-482">Par exemple, <paramref name="attributeType" /> est un objet <see cref="T:System.Reflection.Emit.TypeBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-482">For example, <paramref name="attributeType" /> is a <see cref="T:System.Reflection.Emit.TypeBuilder" /> object.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributesData">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt; GetCustomAttributesData ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Collections.Generic.IList`1&lt;class System.Reflection.CustomAttributeData&gt; GetCustomAttributesData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetCustomAttributesData" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetCustomAttributesData () As IList(Of CustomAttributeData)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Collections::Generic::IList&lt;System::Reflection::CustomAttributeData ^&gt; ^ GetCustomAttributesData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Reflection.CustomAttributeData&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-483">Retourne des objets <see cref="T:System.Reflection.CustomAttributeData" /> qui contiennent des informations sur les attributs appliqués au <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-483">Returns <see cref="T:System.Reflection.CustomAttributeData" /> objects that contain information about the attributes that have been applied to the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-484">Liste générique d'objets <see cref="T:System.Reflection.CustomAttributeData" /> représentant des données relatives aux attributs qui ont été appliqués au module actif.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-484">A generic list of <see cref="T:System.Reflection.CustomAttributeData" /> objects representing data about the attributes that have been applied to the current module.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-485">Utilisez cette méthode pour examiner les attributs personnalisés du code dans le contexte de réflexion uniquement, dans les cas où les attributs personnalisés eux-mêmes sont définis dans le code qui est chargé dans le contexte de réflexion uniquement.</span><span class="sxs-lookup"><span data-stu-id="8cc16-485">Use this method to examine the custom attributes of code in the reflection-only context, in cases where the custom attributes themselves are defined in code that is loaded into the reflection-only context.</span></span> <span data-ttu-id="8cc16-486">Les méthodes telles que <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> et <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> ne peut pas être utilisé dans ce cas, parce qu’elles créent des instances des attributs.</span><span class="sxs-lookup"><span data-stu-id="8cc16-486">Methods such as <xref:System.Attribute.GetCustomAttributes%2A?displayProperty=nameWithType> and <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=nameWithType> cannot be used in such cases, because they create instances of the attributes.</span></span> <span data-ttu-id="8cc16-487">Impossible d’exécuter le code dans le contexte de réflexion uniquement.</span><span class="sxs-lookup"><span data-stu-id="8cc16-487">Code in the reflection-only context cannot be executed.</span></span> <span data-ttu-id="8cc16-488">Pour plus d’informations et un par exemple de code, consultez la <xref:System.Reflection.CustomAttributeData> classe.</span><span class="sxs-lookup"><span data-stu-id="8cc16-488">For more information and for example code, see the <xref:System.Reflection.CustomAttributeData> class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDynamicModule">
      <MemberSignature Language="C#" Value="public System.Reflection.Emit.ModuleBuilder GetDynamicModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Reflection.Emit.ModuleBuilder GetDynamicModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetDynamicModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDynamicModule (name As String) As ModuleBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Reflection::Emit::ModuleBuilder ^ GetDynamicModule(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Emit.ModuleBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8cc16-489">Nom du module dynamique demandé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-489">The name of the requested dynamic module.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-490">Retourne le module dynamique avec le nom spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-490">Returns the dynamic module with the specified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-491">Objet ModuleBuilder représentant le module dynamique demandé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-491">A ModuleBuilder object representing the requested dynamic module.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cc16-492">
            <paramref name="name" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-492">
              <paramref name="name" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8cc16-493">La longueur de <paramref name="name" /> est de zéro.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-493">The length of <paramref name="name" /> is zero.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-494">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-494">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-495">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-495">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-496">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-496">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetExportedTypes">
      <MemberSignature Language="C#" Value="public override Type[] GetExportedTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type[] GetExportedTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetExportedTypes" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetExportedTypes () As Type()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;Type ^&gt; ^ GetExportedTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-497">Obtient les types exportés définis dans cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-497">Gets the exported types defined in this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-498">Tableau de <see cref="T:System.Type" /> contenant les types exportés définis dans cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-498">An array of <see cref="T:System.Type" /> containing the exported types defined in this assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8cc16-499">Cette méthode n’est pas implémentée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-499">This method is not implemented.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-500">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-500">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-501">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-501">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-502">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-502">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFile">
      <MemberSignature Language="C#" Value="public override System.IO.FileStream GetFile (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.FileStream GetFile(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFile (name As String) As FileStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::FileStream ^ GetFile(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8cc16-503">Nom du fichier spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-503">The name of the specified file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-504">Obtient un <see cref="T:System.IO.FileStream" /> pour le fichier spécifié dans la table de fichiers du manifeste de cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-504">Gets a <see cref="T:System.IO.FileStream" /> for the specified file in the file table of the manifest of this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-505">
            <see cref="T:System.IO.FileStream" /> du fichier spécifié, ou <see langword="null" /> si le fichier est introuvable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-505">A <see cref="T:System.IO.FileStream" /> for the specified file, or <see langword="null" />, if the file is not found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-506">`name` ne doit pas inclure le chemin d’accès au fichier.</span><span class="sxs-lookup"><span data-stu-id="8cc16-506">`name` should not include the path to the file.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8cc16-507">Cette méthode n’est pas prise en charge pour l’instant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-507">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-508">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-508">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-509">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-509">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-510">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-510">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetFiles">
      <MemberSignature Language="C#" Value="public override System.IO.FileStream[] GetFiles (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.FileStream[] GetFiles(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetFiles(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetFiles (getResourceModules As Boolean) As FileStream()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::IO::FileStream ^&gt; ^ GetFiles(bool getResourceModules);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.FileStream[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="8cc16-511">
            <see langword="true" /> pour inclure des modules de ressources ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-511">
              <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-512">Obtient les fichiers de la table de fichiers d'un manifeste d'assembly, en spécifiant si des modules de ressources doivent être inclus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-512">Gets the files in the file table of an assembly manifest, specifying whether to include resource modules.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-513">Tableau d'objets <see cref="T:System.IO.FileStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-513">An array of <see cref="T:System.IO.FileStream" /> objects.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8cc16-514">Cette méthode n’est pas prise en charge pour l’instant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-514">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-515">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-515">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-516">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-516">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-517">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-517">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-518">Retourne le code de hachage de cette instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-518">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-519">Code de hachage d'un entier signé 32 bits.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-519">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLoadedModules">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module[] GetLoadedModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Module[] GetLoadedModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetLoadedModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetLoadedModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::Module ^&gt; ^ GetLoadedModules(bool getResourceModules);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="8cc16-520">
            <see langword="true" /> pour inclure des modules de ressources ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-520">
              <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-521">Retourne tous les modules chargés qui appartiennent à cet assembly et inclut éventuellement des modules de ressources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-521">Returns all the loaded modules that are part of this assembly, and optionally includes resource modules.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-522">Modules chargés qui appartiennent à cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-522">The loaded modules that are part of this assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceInfo">
      <MemberSignature Language="C#" Value="public override System.Reflection.ManifestResourceInfo GetManifestResourceInfo (string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.ManifestResourceInfo GetManifestResourceInfo(string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceInfo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetManifestResourceInfo (resourceName As String) As ManifestResourceInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::ManifestResourceInfo ^ GetManifestResourceInfo(System::String ^ resourceName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ManifestResourceInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="resourceName">
          <span data-ttu-id="8cc16-523">Nom de la ressource.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-523">The name of the resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-524">Retourne des informations sur la manière dont la ressource donnée a été persistante.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-524">Returns information about how the given resource has been persisted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-525">
            <see cref="T:System.Reflection.ManifestResourceInfo" /> rempli par des informations sur la topologie de la ressource, ou <see langword="null" /> si la ressource est introuvable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-525">
              <see cref="T:System.Reflection.ManifestResourceInfo" /> populated with information about the resource's topology, or <see langword="null" /> if the resource is not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8cc16-526">Cette méthode n’est pas prise en charge pour l’instant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-526">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-527">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-527">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-528">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-528">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-529">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-529">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceNames">
      <MemberSignature Language="C#" Value="public override string[] GetManifestResourceNames ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string[] GetManifestResourceNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceNames" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetManifestResourceNames () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::String ^&gt; ^ GetManifestResourceNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-530">Charge la ressource de manifeste spécifiée à partir de cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-530">Loads the specified manifest resource from this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-531">Un tableau de type <see langword="String" /> qui contient les noms de toutes les ressources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-531">An array of type <see langword="String" /> containing the names of all the resources.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8cc16-532">Cette méthode n’est pas prise en charge sur un assembly dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-532">This method is not supported on a dynamic assembly.</span>
          </span>
          <span data-ttu-id="8cc16-533">Pour obtenir les noms de ressource de manifeste, utilisez <see cref="M:System.Reflection.Assembly.GetManifestResourceNames" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-533">To get the manifest resource names, use <see cref="M:System.Reflection.Assembly.GetManifestResourceNames" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-534">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-534">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-535">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-535">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-536">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-536">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetManifestResourceStream">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-537">Charge la ressource de manifeste spécifiée à partir de cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-537">Loads the specified manifest resource from this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetManifestResourceStream (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetManifestResourceStream(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetManifestResourceStream (name As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetManifestResourceStream(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8cc16-538">Nom de la ressource de manifeste demandée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-538">The name of the manifest resource being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-539">Charge la ressource de manifeste spécifiée à partir de cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-539">Loads the specified manifest resource from this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-540">
            <see cref="T:System.IO.Stream" /> représentant cette ressource de manifeste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-540">A <see cref="T:System.IO.Stream" /> representing this manifest resource.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8cc16-541">Cette méthode n’est pas prise en charge pour l’instant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-541">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-542">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-542">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-543">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-543">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-544">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-544">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetManifestResourceStream">
      <MemberSignature Language="C#" Value="public override System.IO.Stream GetManifestResourceStream (Type type, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.IO.Stream GetManifestResourceStream(class System.Type type, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetManifestResourceStream(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::IO::Stream ^ GetManifestResourceStream(Type ^ type, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="8cc16-545">Type dont l'espace de noms définit la portée du nom de la ressource de manifeste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-545">The type whose namespace is used to scope the manifest resource name.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="8cc16-546">Nom de la ressource de manifeste demandée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-546">The name of the manifest resource being requested.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-547">Charge la ressource de manifeste spécifiée, dont la portée est définie par l'espace de noms du type déterminé, à partir de cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-547">Loads the specified manifest resource, scoped by the namespace of the specified type, from this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-548">
            <see cref="T:System.IO.Stream" /> représentant cette ressource de manifeste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-548">A <see cref="T:System.IO.Stream" /> representing this manifest resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-549">Retourné <xref:System.IO.Stream> a son pointeur de fichier défini au début de la ressource.</span><span class="sxs-lookup"><span data-stu-id="8cc16-549">The returned <xref:System.IO.Stream> has its file pointer set to the beginning of the resource.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cc16-550">Si le nom complet du `type` est « MyNameSpace.MyClasses » et `name` est « Point », `GetManifestResourceStream` recherche une ressource appelée MyNameSpace.Dot.</span><span class="sxs-lookup"><span data-stu-id="8cc16-550">If the full name of `type` is "MyNameSpace.MyClasses" and `name` is "Dot", `GetManifestResourceStream` will search for a resource named MyNameSpace.Dot.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8cc16-551">Cette méthode n’est pas prise en charge pour l’instant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-551">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-552">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-552">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-553">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-553">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-554">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-554">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetModule">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module GetModule (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Module GetModule(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetModule(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetModule (name As String) As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::Module ^ GetModule(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8cc16-555">Nom du module demandé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-555">The name of the requested module.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-556">Obtient le module spécifié dans cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-556">Gets the specified module in this assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-557">Module demandé, ou <see langword="null" /> si le module est introuvable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-557">The module being requested, or <see langword="null" /> if the module is not found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetModules">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module[] GetModules (bool getResourceModules);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Module[] GetModules(bool getResourceModules) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetModules(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetModules (getResourceModules As Boolean) As Module()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::Module ^&gt; ^ GetModules(bool getResourceModules);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="getResourceModules" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="getResourceModules">
          <span data-ttu-id="8cc16-558">
            <see langword="true" /> pour inclure des modules de ressources ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-558">
              <see langword="true" /> to include resource modules; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-559">Obtient tous les modules qui appartiennent à cet assembly et inclut éventuellement des modules de ressources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-559">Gets all the modules that are part of this assembly, and optionally includes resource modules.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-560">Modules qui appartiennent à cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-560">The modules that are part of this assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public override System.Reflection.AssemblyName GetName (bool copiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.AssemblyName GetName(bool copiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetName(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetName (copiedName As Boolean) As AssemblyName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::AssemblyName ^ GetName(bool copiedName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="copiedName" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="copiedName">
          <span data-ttu-id="8cc16-561">
            <see langword="true" /> pour définir la base de code en fonction de l'emplacement de l'assembly après la création d'un cliché instantané de ce dernier ; <see langword="false" /> pour définir la base de code en fonction de l'emplacement d'origine.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-561">
              <see langword="true" /> to set the code base to the location of the assembly after it is shadow-copied; <see langword="false" /> to set the code base to the original location.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-562">Obtient le <see cref="T:System.Reflection.AssemblyName" /> spécifié lorsque l'assembly dynamique actuel a été créé, puis définit la base de code comme spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-562">Gets the <see cref="T:System.Reflection.AssemblyName" /> that was specified when the current dynamic assembly was created, and sets the code base as specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-563">Nom de l’assembly dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-563">The name of the dynamic assembly.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReferencedAssemblies">
      <MemberSignature Language="C#" Value="public override System.Reflection.AssemblyName[] GetReferencedAssemblies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.AssemblyName[] GetReferencedAssemblies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetReferencedAssemblies () As AssemblyName()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Reflection::AssemblyName ^&gt; ^ GetReferencedAssemblies();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.AssemblyName[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-564">Obtient une liste incomplète d'objets <see cref="T:System.Reflection.AssemblyName" /> pour les assemblys référencés par <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-564">Gets an incomplete list of <see cref="T:System.Reflection.AssemblyName" /> objects for the assemblies that are referenced by this <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-565">Tableau de noms d’assemblys pour les assemblys référencés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-565">An array of assembly names for the referenced assemblies.</span>
          </span>
          <span data-ttu-id="8cc16-566">Ce tableau n’est pas une liste complète.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-566">This array is not a complete list.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-567">Cette méthode ne retourne pas une liste complète des assemblys référencés.</span><span class="sxs-lookup"><span data-stu-id="8cc16-567">This method does not return a complete list of referenced assemblies.</span></span> <span data-ttu-id="8cc16-568">Par exemple, si vous appliquez un attribut personnalisé à le <xref:System.Reflection.Emit.AssemblyBuilder>, l’assembly dans lequel l’attribut a été défini est inclus dans la liste retournée par cette méthode.</span><span class="sxs-lookup"><span data-stu-id="8cc16-568">For example, if you apply a custom attribute to the <xref:System.Reflection.Emit.AssemblyBuilder>, the assembly in which the attribute was defined is included in the list returned by this method.</span></span> <span data-ttu-id="8cc16-569">Toutefois, si vous utilisez un <xref:System.Type> objet pour spécifier le type d’un paramètre de méthode, que le type n’est pas inclus.</span><span class="sxs-lookup"><span data-stu-id="8cc16-569">However, if you use a <xref:System.Type> object to specify the type of a method parameter, that type is not included.</span></span>  
  
 <span data-ttu-id="8cc16-570">Pour obtenir une liste complète des assemblys référencés, enregistrez l’assembly, chargez-le dans un autre domaine d’application, puis appelez le <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=nameWithType> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8cc16-570">To get a complete list of referenced assemblies, save the assembly, load it into another application domain, and call the <xref:System.Reflection.Assembly.GetReferencedAssemblies%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetSatelliteAssembly">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-571">Obtient un assembly satellite spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-571">Gets a specified satellite assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetSatelliteAssembly(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetSatelliteAssembly (culture As CultureInfo) As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="8cc16-572">Culture spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-572">The specified culture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-573">Obtient l'assembly satellite pour la culture spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-573">Gets the satellite assembly for the specified culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-574">Assembly satellite spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-574">The specified satellite assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-575">Les assemblys satellites contiennent des ressources localisées, comme les assemblys d’application principaux qui contiennent du code exécutable non localisables et des ressources pour une culture unique utilisée comme culture neutre ou par défaut.</span><span class="sxs-lookup"><span data-stu-id="8cc16-575">Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.</span></span>  
  
 <span data-ttu-id="8cc16-576">Appelez cette méthode pour utiliser votre version actuelle de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="8cc16-576">Call this method to use your current assembly version.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cc16-577">
            <paramref name="culture" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-577">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8cc16-578">L’assembly est introuvable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-578">The assembly cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8cc16-579">L'assembly satellite avec un nom de fichier correspondant a été trouvé, mais <see langword="CultureInfo" /> ne correspondait pas à celui spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-579">The satellite assembly with a matching file name was found, but the <see langword="CultureInfo" /> did not match the one specified.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8cc16-580">L’assembly satellite n’est pas un assembly valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-580">The satellite assembly is not a valid assembly.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSatelliteAssembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly GetSatelliteAssembly (System.Globalization.CultureInfo culture, Version version);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Assembly GetSatelliteAssembly(class System.Globalization.CultureInfo culture, class System.Version version) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetSatelliteAssembly(System.Globalization.CultureInfo,System.Version)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::Assembly ^ GetSatelliteAssembly(System::Globalization::CultureInfo ^ culture, Version ^ version);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="version" Type="System.Version" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="8cc16-581">Culture spécifiée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-581">The specified culture.</span>
          </span>
        </param>
        <param name="version">
          <span data-ttu-id="8cc16-582">Version de l'assembly satellite.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-582">The version of the satellite assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-583">Obtient la version spécifiée de l'assembly satellite pour la culture donnée.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-583">Gets the specified version of the satellite assembly for the specified culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-584">Assembly satellite spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-584">The specified satellite assembly.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-585">Les assemblys satellites contiennent des ressources localisées, comme les assemblys d’application principaux qui contiennent du code exécutable non localisables et des ressources pour une culture unique utilisée comme culture neutre ou par défaut.</span><span class="sxs-lookup"><span data-stu-id="8cc16-585">Satellite assemblies contain localized resources, as distinct from main application assemblies, which contain non-localizable executable code and resources for a single culture that serve as the default or neutral culture.</span></span>  
  
 <span data-ttu-id="8cc16-586">Appelez le <xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29> surcharge à utiliser votre version actuelle de l’assembly.</span><span class="sxs-lookup"><span data-stu-id="8cc16-586">Call the <xref:System.Reflection.Assembly.GetSatelliteAssembly%28System.Globalization.CultureInfo%29> overload to use your current assembly version.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cc16-587">
            <paramref name="culture" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-587">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileLoadException">
          <span data-ttu-id="8cc16-588">L'assembly satellite avec un nom de fichier correspondant a été trouvé, mais <see langword="CultureInfo" /> ou la version ne correspondait pas à celui spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-588">The satellite assembly with a matching file name was found, but the <see langword="CultureInfo" /> or the version did not match the one specified.</span>
          </span>
        </exception>
        <exception cref="T:System.IO.FileNotFoundException">
          <span data-ttu-id="8cc16-589">L’assembly est introuvable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-589">The assembly cannot be found.</span>
          </span>
        </exception>
        <exception cref="T:System.BadImageFormatException">
          <span data-ttu-id="8cc16-590">L’assembly satellite n’est pas un assembly valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-590">The satellite assembly is not a valid assembly.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public override Type GetType (string name, bool throwOnError, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Type GetType(string name, bool throwOnError, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.GetType(System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetType (name As String, throwOnError As Boolean, ignoreCase As Boolean) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override Type ^ GetType(System::String ^ name, bool throwOnError, bool ignoreCase);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="throwOnError" Type="System.Boolean" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8cc16-591">Nom du type à rechercher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-591">The name of the type to search for.</span>
          </span>
        </param>
        <param name="throwOnError">
          <span data-ttu-id="8cc16-592">
            <see langword="true" /> pour lever une exception si le type est introuvable ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-592">
              <see langword="true" /> to throw an exception if the type is not found; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="8cc16-593">
            <see langword="true" /> pour ignorer la casse du nom de type lors de la recherche ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-593">
              <see langword="true" /> to ignore the case of the type name when searching; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-594">Obtient le type spécifié à partir des types définis et créés dans le <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-594">Gets the specified type from the types that have been defined and created in the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-595">Type spécifié, ou <see langword="null" /> si le type est introuvable ou s'il n'a pas encore été créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-595">The specified type, or <see langword="null" /> if the type is not found or has not been created yet.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-596">Impossible de trouver un type jusqu'à ce qu’il a été créé en appelant le <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> (méthode).</span><span class="sxs-lookup"><span data-stu-id="8cc16-596">A type cannot be found until it has been created by calling the <xref:System.Reflection.Emit.TypeBuilder.CreateType%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalAssemblyCache">
      <MemberSignature Language="C#" Value="public override bool GlobalAssemblyCache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GlobalAssemblyCache" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.GlobalAssemblyCache" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property GlobalAssemblyCache As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool GlobalAssemblyCache { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-597">Obtient une valeur qui indique si l’assembly a été chargé à partir du Global Assembly Cache.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-597">Gets a value that indicates whether the assembly was loaded from the global assembly cache.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cc16-598">Toujours <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-598">Always <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-599"><xref:System.Reflection.Emit.AssemblyBuilder> objets représentent toujours des assemblys dynamiques et par conséquent ne sont jamais chargés à partir du global assembly cache.</span><span class="sxs-lookup"><span data-stu-id="8cc16-599"><xref:System.Reflection.Emit.AssemblyBuilder> objects always represent dynamic assemblies, and therefore are never loaded from the global assembly cache.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostContext">
      <MemberSignature Language="C#" Value="public override long HostContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 HostContext" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.HostContext" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property HostContext As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property long HostContext { long get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-600">Obtient le contexte hôte où l’assembly dynamique est créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-600">Gets the host context where the dynamic assembly is being created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cc16-601">Valeur qui indique le contexte hôte où l’assembly dynamique est créé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-601">A value that indicates the host context where the dynamic assembly is being created.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageRuntimeVersion">
      <MemberSignature Language="C#" Value="public override string ImageRuntimeVersion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageRuntimeVersion" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.ImageRuntimeVersion" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ImageRuntimeVersion As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ImageRuntimeVersion { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-602">Obtient la version du Common Language Runtime (CLR) qui sera enregistrée dans le fichier contenant le manifeste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-602">Gets the version of the common language runtime that will be saved in the file containing the manifest.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cc16-603">Chaîne représentant la version du Common Language Runtime.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-603">A string representing the common language runtime version.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-604">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-604">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-605">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-605">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-606">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-606">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public override bool IsDefined (Type attributeType, bool inherit);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool IsDefined(class System.Type attributeType, bool inherit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.IsDefined(System.Type,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function IsDefined (attributeType As Type, inherit As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool IsDefined(Type ^ attributeType, bool inherit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributeType" Type="System.Type" />
        <Parameter Name="inherit" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="attributeType">
          <span data-ttu-id="8cc16-607">Type d’attribut à tester.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-607">The type of attribute to test for.</span>
          </span>
        </param>
        <param name="inherit">
          <span data-ttu-id="8cc16-608">Cet argument est ignoré pour les objets de ce type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-608">This argument is ignored for objects of this type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-609">Retourne une valeur qui indique si une ou plusieurs instances du type d’attribut spécifié sont appliquées à ce membre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-609">Returns a value that indicates whether one or more instances of the specified attribute type is applied to this member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="8cc16-610">
            <see langword="true" /> si une ou plusieurs instances de <paramref name="attributeType" /> sont appliquées à cet assembly dynamique ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-610">
              <see langword="true" /> if one or more instances of <paramref name="attributeType" /> is applied to this dynamic assembly; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDynamic">
      <MemberSignature Language="C#" Value="public override bool IsDynamic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDynamic" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.IsDynamic" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property IsDynamic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDynamic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-611">Obtient une valeur qui indique que l’assembly actuel est un assembly dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-611">Gets a value that indicates that the current assembly is a dynamic assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cc16-612">Toujours <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-612">Always <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-613">Un <xref:System.Reflection.Emit.AssemblyBuilder> objet représente toujours un assembly dynamique.</span><span class="sxs-lookup"><span data-stu-id="8cc16-613">An <xref:System.Reflection.Emit.AssemblyBuilder> object always represents a dynamic assembly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Location">
      <MemberSignature Language="C#" Value="public override string Location { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Location" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.Location" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Location As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Location { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-614">Obtient l’emplacement, au format code base, du fichier chargé qui contient le manifeste, s’il n’est pas un cliché instantané.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-614">Gets the location, in codebase format, of the loaded file that contains the manifest if it is not shadow-copied.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cc16-615">Emplacement du fichier chargé qui contient le manifeste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-615">The location of the loaded file that contains the manifest.</span>
          </span>
          <span data-ttu-id="8cc16-616">Si le fichier chargé est un cliché instantané, le <see langword="Location" /> est celui du fichier avant l'exécution du cliché instantané.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-616">If the loaded file has been shadow-copied, the <see langword="Location" /> is that of the file before being shadow-copied.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8cc16-617">Cette méthode n’est pas prise en charge pour l’instant.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-617">This method is not currently supported.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-618">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-618">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-619">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-619">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-620">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-620">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ManifestModule">
      <MemberSignature Language="C#" Value="public override System.Reflection.Module ManifestModule { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Module ManifestModule" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.ManifestModule" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ManifestModule As Module" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Module ^ ManifestModule { System::Reflection::Module ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Module</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-621">Obtient le module du <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> actuel qui contient le manifeste de l’assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-621">Gets the module in the current <see cref="T:System.Reflection.Emit.AssemblyBuilder" /> that contains the assembly manifest.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cc16-622">Le module du manifeste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-622">The manifest module.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modules">
      <MemberSignature Language="C#" Value="public override System.Collections.Generic.IEnumerable&lt;System.Reflection.Module&gt; Modules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.Module&gt; Modules" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.Modules" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Modules As IEnumerable(Of Module)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IEnumerable&lt;System::Reflection::Module ^&gt; ^ Modules { System::Collections::Generic::IEnumerable&lt;System::Reflection::Module ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.Module&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PermissionSet">
      <MemberSignature Language="C#" Value="public override System.Security.PermissionSet PermissionSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.PermissionSet PermissionSet" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.PermissionSet" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property PermissionSet As PermissionSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::PermissionSet ^ PermissionSet { System::Security::PermissionSet ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Security.PermissionSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-623">Obtient le jeu accordé de l’assembly dynamique actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-623">Gets the grant set of the current dynamic assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cc16-624">Jeu accordé de l’assembly dynamique actuel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-624">The grant set of the current dynamic assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-625"><xref:System.Security.PermissionSet> les objets peuvent contenir des informations sensibles telles que les chemins d’accès.</span><span class="sxs-lookup"><span data-stu-id="8cc16-625"><xref:System.Security.PermissionSet> objects can contain sensitive information such as paths.</span></span> <span data-ttu-id="8cc16-626">Par conséquent, la confiance totale est requise pour accéder à ces objets.</span><span class="sxs-lookup"><span data-stu-id="8cc16-626">Therefore, full trust is required to access these objects.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="8cc16-627">requiert une confiance totale pour l’appelant immédiat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-627">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="8cc16-628">Ce membre ne peut pas être utilisé par le code de confiance partielle ou transparent.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-628">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ReflectionOnly">
      <MemberSignature Language="C#" Value="public override bool ReflectionOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReflectionOnly" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.ReflectionOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ReflectionOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReflectionOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-629">Obtient une valeur indiquant si l’assembly dynamique est dans le contexte de réflexion uniquement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-629">Gets a value indicating whether the dynamic assembly is in the reflection-only context.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cc16-630">
            <see langword="true" /> si l'assembly dynamique est dans le contexte de réflexion uniquement ; sinon, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-630">
              <see langword="true" /> if the dynamic assembly is in the reflection-only context; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-631">Pour émettre un assembly dynamique dans le contexte de réflexion uniquement, spécifiez <xref:System.Reflection.Emit.AssemblyBuilderAccess.ReflectionOnly?displayProperty=nameWithType> lorsque vous créez le <xref:System.Reflection.Emit.AssemblyBuilder>.</span><span class="sxs-lookup"><span data-stu-id="8cc16-631">To emit a dynamic assembly in the reflection-only context, specify <xref:System.Reflection.Emit.AssemblyBuilderAccess.ReflectionOnly?displayProperty=nameWithType> when you create the <xref:System.Reflection.Emit.AssemblyBuilder>.</span></span> <span data-ttu-id="8cc16-632">Si un assembly dynamique est émis dans le contexte de réflexion uniquement, son code ne peut pas être exécuté.</span><span class="sxs-lookup"><span data-stu-id="8cc16-632">If a dynamic assembly is emitted in the reflection-only context, its code cannot be executed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8cc16-633">Après avoir enregistré un assembly dynamique sur le disque, vous pouvez utiliser la <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A?displayProperty=nameWithType> méthode pour charger l’assembly achevé dans le contexte de réflexion uniquement.</span><span class="sxs-lookup"><span data-stu-id="8cc16-633">After you have saved a dynamic assembly to disk, you can use the <xref:System.Reflection.Assembly.ReflectionOnlyLoad%2A?displayProperty=nameWithType> method to load the completed assembly into the reflection-only context.</span></span> <span data-ttu-id="8cc16-634">Toutefois, l’assembly ne peut ne plus être modifié.</span><span class="sxs-lookup"><span data-stu-id="8cc16-634">However, the assembly can no longer be modified.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Reflection.Emit.AssemblyBuilderAccess.ReflectionOnly" />
        <altmember cref="M:System.Reflection.Assembly.ReflectionOnlyLoad(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-635">Enregistre cet assembly dynamique sur le disque.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-635">Saves this dynamic assembly to disk.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string assemblyFileName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string assemblyFileName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.Save(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save (assemblyFileName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ assemblyFileName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFileName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyFileName">
          <span data-ttu-id="8cc16-636">Nom de fichier de l’assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-636">The file name of the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-637">Enregistre cet assembly dynamique sur le disque.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-637">Saves this dynamic assembly to disk.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-638">Cette méthode enregistre tous les modules dynamiques non transitoires définis dans cet assembly dynamique.</span><span class="sxs-lookup"><span data-stu-id="8cc16-638">This method saves all non-transient dynamic modules defined in this dynamic assembly.</span></span> <span data-ttu-id="8cc16-639">Les modules dynamiques transitoires ne sont pas enregistrées.</span><span class="sxs-lookup"><span data-stu-id="8cc16-639">Transient dynamic modules are not saved.</span></span> <span data-ttu-id="8cc16-640">Le nom de fichier d’assembly peut être le même que le nom de l’un des modules.</span><span class="sxs-lookup"><span data-stu-id="8cc16-640">The assembly file name can be the same as the name of one of the modules.</span></span> <span data-ttu-id="8cc16-641">Dans ce cas, le manifeste d’assembly est stocké dans ce module.</span><span class="sxs-lookup"><span data-stu-id="8cc16-641">If so, the assembly manifest is stored within that module.</span></span> <span data-ttu-id="8cc16-642">`assemblyFileName` peut être différent des noms de tous les modules contenus dans l’assembly.</span><span class="sxs-lookup"><span data-stu-id="8cc16-642">`assemblyFileName` can be different from the names of all of the modules contained within the assembly.</span></span> <span data-ttu-id="8cc16-643">Dans ce cas, le fichier d’assembly contient le manifeste d’assembly.</span><span class="sxs-lookup"><span data-stu-id="8cc16-643">If so, the assembly file contains only the assembly manifest.</span></span>  
  
 <span data-ttu-id="8cc16-644">Pour chaque <xref:System.Resources.ResourceWriter> obtenue à l’aide <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, cette méthode écrit le fichier .resources et appelle <xref:System.Resources.ResourceWriter.Close%2A> pour fermer le flux.</span><span class="sxs-lookup"><span data-stu-id="8cc16-644">For each <xref:System.Resources.ResourceWriter> obtained using <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, this method writes the .resources file and calls <xref:System.Resources.ResourceWriter.Close%2A> to close the stream.</span></span>  
  
 <span data-ttu-id="8cc16-645">Le `assemblyFileName` doit être un nom de fichier simple sans un composant de lecteur ou un répertoire.</span><span class="sxs-lookup"><span data-stu-id="8cc16-645">The `assemblyFileName` needs to be a simple file name without a drive or directory component.</span></span> <span data-ttu-id="8cc16-646">Pour créer un assembly dans un répertoire spécifique, utilisez une de la <xref:System.AppDomain.DefineDynamicAssembly%2A> méthodes qui accepte un argument de répertoire cible.</span><span class="sxs-lookup"><span data-stu-id="8cc16-646">To create an assembly in a specific directory, use one of the <xref:System.AppDomain.DefineDynamicAssembly%2A> methods that takes a target directory argument.</span></span>  
  
 <span data-ttu-id="8cc16-647">Dans le .NET Framework version 2.0, cette surcharge de la <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> méthode équivaut à appeler le <xref:System.Reflection.Emit.AssemblyBuilder.Save%28System.String%2CSystem.Reflection.PortableExecutableKinds%2CSystem.Reflection.ImageFileMachine%29> surcharge de méthode avec <xref:System.Reflection.PortableExecutableKinds.ILOnly> pour le `portableExecutableKind` paramètre et <xref:System.Reflection.ImageFileMachine.I386> pour la `imageFileMachine` paramètre.</span><span class="sxs-lookup"><span data-stu-id="8cc16-647">In the .NET Framework version 2.0, this overload of the <xref:System.Reflection.Emit.AssemblyBuilder.Save%2A> method is equivalent to calling the <xref:System.Reflection.Emit.AssemblyBuilder.Save%28System.String%2CSystem.Reflection.PortableExecutableKinds%2CSystem.Reflection.ImageFileMachine%29> method overload with <xref:System.Reflection.PortableExecutableKinds.ILOnly> for the `portableExecutableKind` parameter and <xref:System.Reflection.ImageFileMachine.I386> for the `imageFileMachine` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cc16-648">L’exemple de code suivant crée un assembly dynamique, puis il à un disque local à l’aide de `Save`.</span><span class="sxs-lookup"><span data-stu-id="8cc16-648">The following code sample creates a dynamic assembly and then persists it to a local disk using `Save`.</span></span>  
  
 [!code-cpp[System.Reflection.Emit.AssemblyBuilder.Save Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.Save Example/CPP/source.cpp#1)]
 [!code-csharp[System.Reflection.Emit.AssemblyBuilder.Save Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.Save Example/CS/source.cs#1)]
 [!code-vb[System.Reflection.Emit.AssemblyBuilder.Save Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Reflection.Emit.AssemblyBuilder.Save Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8cc16-649">La longueur de <paramref name="assemblyFileName" /> est égale à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-649">The length of <paramref name="assemblyFileName" /> is 0.</span>
          </span>
          <span data-ttu-id="8cc16-650">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-650">-or-</span>
          </span>
          <span data-ttu-id="8cc16-651">Plusieurs fichiers de ressources de modules de l’assembly portent le même nom.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-651">There are two or more modules resource files in the assembly with the same name.</span>
          </span>
          <span data-ttu-id="8cc16-652">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-652">-or-</span>
          </span>
          <span data-ttu-id="8cc16-653">Le répertoire cible de l’assembly n’est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-653">The target directory of the assembly is invalid.</span>
          </span>
          <span data-ttu-id="8cc16-654">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-654">-or-</span>
          </span>
          <span data-ttu-id="8cc16-655">
            <paramref name="assemblyFileName" /> n'est pas un nom de fichier simple (par exemple, il inclut un répertoire ou un lecteur), ou vous avez défini plusieurs ressources non managées dans cet assembly, notamment une ressource d'informations de version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-655">
              <paramref name="assemblyFileName" /> is not a simple file name (for example, has a directory or drive component), or more than one unmanaged resource, including a version information resource, was defined in this assembly.</span>
          </span>
          <span data-ttu-id="8cc16-656">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-656">-or-</span>
          </span>
          <span data-ttu-id="8cc16-657">La chaîne <see langword="CultureInfo" /> de <see cref="T:System.Reflection.AssemblyCultureAttribute" /> n'est pas valide et <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" /> a été appelé avant l'appel à cette méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-657">The <see langword="CultureInfo" /> string in <see cref="T:System.Reflection.AssemblyCultureAttribute" /> is not a valid string and <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" /> was called prior to calling this method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cc16-658">
            <paramref name="assemblyFileName" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-658">
              <paramref name="assemblyFileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8cc16-659">Cet assembly a déjà été enregistré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-659">This assembly has been saved before.</span>
          </span>
          <span data-ttu-id="8cc16-660">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-660">-or-</span>
          </span>
          <span data-ttu-id="8cc16-661">Cet assembly a accès à <see langword="Run" /><see cref="T:System.Reflection.Emit.AssemblyBuilderAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-661">This assembly has access <see langword="Run" /><see cref="T:System.Reflection.Emit.AssemblyBuilderAccess" /></span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8cc16-662">Une erreur de sortie se produit pendant l’enregistrement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-662">An output error occurs during the save.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8cc16-663">
            <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> n'a pas été appelé pour un des types des modules de l'assembly à écrire sur disque.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-663">
              <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has not been called for any of the types in the modules of the assembly to be written to disk.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8cc16-664">Écrire = true ou Append = true est requis pour enregistrer cet assembly sous le nom de fichier spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-664">Write = true or Append = true is needed to save this assembly to the specified file name.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-665">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-665">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-666">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-666">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (string assemblyFileName, System.Reflection.PortableExecutableKinds portableExecutableKind, System.Reflection.ImageFileMachine imageFileMachine);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(string assemblyFileName, valuetype System.Reflection.PortableExecutableKinds portableExecutableKind, valuetype System.Reflection.ImageFileMachine imageFileMachine) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.Save(System.String,System.Reflection.PortableExecutableKinds,System.Reflection.ImageFileMachine)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::String ^ assemblyFileName, System::Reflection::PortableExecutableKinds portableExecutableKind, System::Reflection::ImageFileMachine imageFileMachine);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyFileName" Type="System.String" />
        <Parameter Name="portableExecutableKind" Type="System.Reflection.PortableExecutableKinds" />
        <Parameter Name="imageFileMachine" Type="System.Reflection.ImageFileMachine" />
      </Parameters>
      <Docs>
        <param name="assemblyFileName">
          <span data-ttu-id="8cc16-667">Nom de fichier de l’assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-667">The file name of the assembly.</span>
          </span>
        </param>
        <param name="portableExecutableKind">
          <span data-ttu-id="8cc16-668">Combinaison d'opérations de bits des valeurs <see cref="T:System.Reflection.PortableExecutableKinds" /> spécifiant la nature du code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-668">A bitwise combination of the <see cref="T:System.Reflection.PortableExecutableKinds" /> values that specifies the nature of the code.</span>
          </span>
        </param>
        <param name="imageFileMachine">
          <span data-ttu-id="8cc16-669">Une des valeurs <see cref="T:System.Reflection.ImageFileMachine" /> qui spécifie la plateforme cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-669">One of the <see cref="T:System.Reflection.ImageFileMachine" /> values that specifies the target platform.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-670">Enregistre cet assembly dynamique sur le disque, en spécifiant la nature du code contenu dans les fichiers exécutables de l’assembly, ainsi que la plateforme cible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-670">Saves this dynamic assembly to disk, specifying the nature of code in the assembly's executables and the target platform.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-671">Si `imageFileMachine` et `portableExecutableKind` ne sont pas compatibles, `imageFileMachine` est prioritaire sur `portableExecutableKind`.</span><span class="sxs-lookup"><span data-stu-id="8cc16-671">If `imageFileMachine` and `portableExecutableKind` are incompatible, `imageFileMachine` takes precedence over `portableExecutableKind`.</span></span> <span data-ttu-id="8cc16-672">Aucune exception n'est levée.</span><span class="sxs-lookup"><span data-stu-id="8cc16-672">No exception is thrown.</span></span> <span data-ttu-id="8cc16-673">Par exemple, si vous spécifiez <xref:System.Reflection.ImageFileMachine.I386?displayProperty=nameWithType> avec <xref:System.Reflection.PortableExecutableKinds.PE32Plus?displayProperty=nameWithType>, <xref:System.Reflection.PortableExecutableKinds.PE32Plus?displayProperty=nameWithType> est ignoré.</span><span class="sxs-lookup"><span data-stu-id="8cc16-673">For example, if you specify <xref:System.Reflection.ImageFileMachine.I386?displayProperty=nameWithType> with <xref:System.Reflection.PortableExecutableKinds.PE32Plus?displayProperty=nameWithType>, <xref:System.Reflection.PortableExecutableKinds.PE32Plus?displayProperty=nameWithType> is ignored.</span></span>  
  
 <span data-ttu-id="8cc16-674">Cette méthode enregistre tous les modules dynamiques non transitoires définis dans cet assembly dynamique.</span><span class="sxs-lookup"><span data-stu-id="8cc16-674">This method saves all non-transient dynamic modules defined in this dynamic assembly.</span></span> <span data-ttu-id="8cc16-675">Les modules dynamiques transitoires ne sont pas enregistrées.</span><span class="sxs-lookup"><span data-stu-id="8cc16-675">Transient dynamic modules are not saved.</span></span> <span data-ttu-id="8cc16-676">Le nom de fichier d’assembly peut être le même que le nom d’un des modules.</span><span class="sxs-lookup"><span data-stu-id="8cc16-676">The assembly file name can be the same as the name of one of the module.</span></span> <span data-ttu-id="8cc16-677">Dans ce cas, le manifeste d’assembly est stocké dans ce module.</span><span class="sxs-lookup"><span data-stu-id="8cc16-677">If so, the assembly manifest is stored within that module.</span></span> <span data-ttu-id="8cc16-678">`assemblyFileName` peut être différent des noms de tous les modules contenus dans l’assembly.</span><span class="sxs-lookup"><span data-stu-id="8cc16-678">`assemblyFileName` can be different from the names of all of the modules contained within the assembly.</span></span> <span data-ttu-id="8cc16-679">Dans ce cas, le fichier d’assembly contient le manifeste d’assembly.</span><span class="sxs-lookup"><span data-stu-id="8cc16-679">If so, the assembly file contains only the assembly manifest.</span></span>  
  
 <span data-ttu-id="8cc16-680">Pour chaque <xref:System.Resources.ResourceWriter> obtenue à l’aide <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, cette méthode écrit le fichier .resources et appelle <xref:System.Resources.ResourceWriter.Close%2A> pour fermer le flux.</span><span class="sxs-lookup"><span data-stu-id="8cc16-680">For each <xref:System.Resources.ResourceWriter> obtained using <xref:System.Reflection.Emit.AssemblyBuilder.DefineResource%2A>, this method writes the .resources file and calls <xref:System.Resources.ResourceWriter.Close%2A> to close the stream.</span></span>  
  
 <span data-ttu-id="8cc16-681">Le `assemblyFileName` doit être un nom de fichier simple sans un composant de lecteur ou un répertoire.</span><span class="sxs-lookup"><span data-stu-id="8cc16-681">The `assemblyFileName` needs to be a simple file name without a drive or directory component.</span></span> <span data-ttu-id="8cc16-682">Pour créer un assembly dans un répertoire spécifique, utilisez une de la <xref:System.AppDomain.DefineDynamicAssembly%2A> méthodes qui accepte un argument de répertoire cible.</span><span class="sxs-lookup"><span data-stu-id="8cc16-682">To create an assembly in a specific directory, use one of the <xref:System.AppDomain.DefineDynamicAssembly%2A> methods that takes a target directory argument.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8cc16-683">La longueur de <paramref name="assemblyFileName" /> est égale à 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-683">The length of <paramref name="assemblyFileName" /> is 0.</span>
          </span>
          <span data-ttu-id="8cc16-684">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-684">-or-</span>
          </span>
          <span data-ttu-id="8cc16-685">Plusieurs fichiers de ressources de modules de l’assembly portent le même nom.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-685">There are two or more modules resource files in the assembly with the same name.</span>
          </span>
          <span data-ttu-id="8cc16-686">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-686">-or-</span>
          </span>
          <span data-ttu-id="8cc16-687">Le répertoire cible de l’assembly n’est pas valide.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-687">The target directory of the assembly is invalid.</span>
          </span>
          <span data-ttu-id="8cc16-688">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-688">-or-</span>
          </span>
          <span data-ttu-id="8cc16-689">
            <paramref name="assemblyFileName" /> n'est pas un nom de fichier simple (par exemple, il inclut un répertoire ou un lecteur), ou vous avez défini plusieurs ressources non managées dans cet assembly, notamment des ressources d'informations de version.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-689">
              <paramref name="assemblyFileName" /> is not a simple file name (for example, has a directory or drive component), or more than one unmanaged resource, including a version information resources, was defined in this assembly.</span>
          </span>
          <span data-ttu-id="8cc16-690">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-690">-or-</span>
          </span>
          <span data-ttu-id="8cc16-691">La chaîne <see langword="CultureInfo" /> de <see cref="T:System.Reflection.AssemblyCultureAttribute" /> n'est pas valide et <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" /> a été appelé avant l'appel à cette méthode.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-691">The <see langword="CultureInfo" /> string in <see cref="T:System.Reflection.AssemblyCultureAttribute" /> is not a valid string and <see cref="M:System.Reflection.Emit.AssemblyBuilder.DefineVersionInfoResource(System.String,System.String,System.String,System.String,System.String)" /> was called prior to calling this method.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cc16-692">
            <paramref name="assemblyFileName" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-692">
              <paramref name="assemblyFileName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8cc16-693">Cet assembly a déjà été enregistré.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-693">This assembly has been saved before.</span>
          </span>
          <span data-ttu-id="8cc16-694">- ou -</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-694">-or-</span>
          </span>
          <span data-ttu-id="8cc16-695">Cet assembly a accès à <see langword="Run" /><see cref="T:System.Reflection.Emit.AssemblyBuilderAccess" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-695">This assembly has access <see langword="Run" /><see cref="T:System.Reflection.Emit.AssemblyBuilderAccess" /></span>
          </span>
        </exception>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="8cc16-696">Une erreur de sortie se produit pendant l’enregistrement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-696">An output error occurs during the save.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="8cc16-697">
            <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> n'a pas été appelé pour un des types des modules de l'assembly à écrire sur disque.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-697">
              <see cref="M:System.Reflection.Emit.TypeBuilder.CreateType" /> has not been called for any of the types in the modules of the assembly to be written to disk.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.FileIOPermission">
          <span data-ttu-id="8cc16-698">Écrire = true ou Append = true est requis pour enregistrer cet assembly sous le nom de fichier spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-698">Write = true or Append = true is needed to save this assembly to the specified file name.</span>
          </span>
        </permission>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-699">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-699">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-700">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-700">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SecurityRuleSet">
      <MemberSignature Language="C#" Value="public override System.Security.SecurityRuleSet SecurityRuleSet { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.SecurityRuleSet SecurityRuleSet" />
      <MemberSignature Language="DocId" Value="P:System.Reflection.Emit.AssemblyBuilder.SecurityRuleSet" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property SecurityRuleSet As SecurityRuleSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::SecurityRuleSet SecurityRuleSet { System::Security::SecurityRuleSet get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.SecurityRuleSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-701">Obtient une valeur qui indique quel ensemble de règles de sécurité le Common Language Runtime (CLR) applique pour cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-701">Gets a value that indicates which set of security rules the common language runtime (CLR) enforces for this assembly.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8cc16-702">Ensemble de règles de sécurité que le CLR applique pour cet assembly dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-702">The security rule set that the CLR enforces for this dynamic assembly.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-703">Le [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] applique toujours la transparence de niveau 2 (<xref:System.Security.SecurityRuleSet.Level2?displayProperty=nameWithType>) pour les assemblys dynamiques qu’il génère.</span><span class="sxs-lookup"><span data-stu-id="8cc16-703">The [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)] always enforces level 2 transparency (<xref:System.Security.SecurityRuleSet.Level2?displayProperty=nameWithType>) for the dynamic assemblies it generates.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetCustomAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-704">Définit un attribut personnalisé sur cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-704">Sets a custom attribute on this assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.Emit.CustomAttributeBuilder customBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.Emit.CustomAttributeBuilder customBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.Emit.CustomAttributeBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (customBuilder As CustomAttributeBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::Emit::CustomAttributeBuilder ^ customBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
      </Parameters>
      <Docs>
        <param name="customBuilder">
          <span data-ttu-id="8cc16-705">Instance d’une classe d’assistance pour définir l’attribut personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-705">An instance of a helper class to define the custom attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-706">Définissez un attribut personnalisé sur cet assembly à l’aide d’un générateur d’attributs personnalisés.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-706">Set a custom attribute on this assembly using a custom attribute builder.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="8cc16-707"><xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> ne peut pas être utilisé pour définir les attributs de sécurité déclarative.</span><span class="sxs-lookup"><span data-stu-id="8cc16-707"><xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> cannot be used to set declarative security attributes.</span></span> <span data-ttu-id="8cc16-708">Utilisez une des surcharges de <xref:System.AppDomain.DefineDynamicAssembly%2A> que prend obligatoire, facultatif et les autorisations refusées.</span><span class="sxs-lookup"><span data-stu-id="8cc16-708">Use one of the overloads of <xref:System.AppDomain.DefineDynamicAssembly%2A> that takes required, optional, and refused permissions.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8cc16-709">En commençant par le [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ce membre n’a plus besoin <xref:System.Security.Permissions.ReflectionPermission> avec la <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="8cc16-709">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8cc16-710">(Consultez [émettre des problèmes de sécurité dans la réflexion](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Pour utiliser cette fonctionnalité, votre application doit cibler [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] ou version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="8cc16-710">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cc16-711">L’exemple de code suivant illustre l’utilisation de `SetCustomAttribute` dans <xref:System.Reflection.Emit.AssemblyBuilder>, en utilisant un <xref:System.Reflection.Emit.CustomAttributeBuilder>.</span><span class="sxs-lookup"><span data-stu-id="8cc16-711">The following code sample illustrates the use of `SetCustomAttribute` within <xref:System.Reflection.Emit.AssemblyBuilder>, using a <xref:System.Reflection.Emit.CustomAttributeBuilder>.</span></span>  
  
 [!code-cpp[AssemblyBuilder_SetCustomAttribute1#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute1/CPP/assemblybuilder_setcustomattribute1.cpp#1)]
 [!code-csharp[AssemblyBuilder_SetCustomAttribute1#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute1/CS/assemblybuilder_setcustomattribute1.cs#1)]
 [!code-vb[AssemblyBuilder_SetCustomAttribute1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute1/VB/assemblybuilder_setcustomattribute1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cc16-712">
            <paramref name="con" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-712">
              <paramref name="con" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-713">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-713">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-714">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-714">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-715">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-715">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetCustomAttribute">
      <MemberSignature Language="C#" Value="public void SetCustomAttribute (System.Reflection.ConstructorInfo con, byte[] binaryAttribute);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetCustomAttribute(class System.Reflection.ConstructorInfo con, unsigned int8[] binaryAttribute) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute(System.Reflection.ConstructorInfo,System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetCustomAttribute (con As ConstructorInfo, binaryAttribute As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetCustomAttribute(System::Reflection::ConstructorInfo ^ con, cli::array &lt;System::Byte&gt; ^ binaryAttribute);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Emit</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        <Parameter Name="binaryAttribute" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="con">
          <span data-ttu-id="8cc16-716">Le constructeur de l’attribut personnalisé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-716">The constructor for the custom attribute.</span>
          </span>
        </param>
        <param name="binaryAttribute">
          <span data-ttu-id="8cc16-717">Objet blob d’octets représentant les attributs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-717">A byte blob representing the attributes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-718">Définit un attribut personnalisé sur cet assembly à l’aide d’un objet blob d’attribut personnalisé spécifié.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-718">Set a custom attribute on this assembly using a specified custom attribute blob.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-719">Consultez la spécification de métadonnées dans la documentation ECMA Partition II pour plus d’informations sur la mise en forme `binaryAttribute`.</span><span class="sxs-lookup"><span data-stu-id="8cc16-719">See the metadata specification in the ECMA Partition II documentation for details on how to format `binaryAttribute`.</span></span> <span data-ttu-id="8cc16-720">La documentation est disponible en ligne. Consultez [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) sur MSDN et [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) sur le site web d’Ecma International.</span><span class="sxs-lookup"><span data-stu-id="8cc16-720">The documentation is available online; see [ECMA C# and Common Language Infrastructure Standards](http://go.microsoft.com/fwlink/?LinkID=99212) on MSDN and [Standard ECMA-335 - Common Language Infrastructure (CLI)](http://go.microsoft.com/fwlink/?LinkID=65552) on the Ecma International Web site.</span></span>  
  
 <span data-ttu-id="8cc16-721">`RuntimeConstructorInfo` est un type spécial généré par le système.</span><span class="sxs-lookup"><span data-stu-id="8cc16-721">`RuntimeConstructorInfo` is a special type generated by the system.</span></span> <span data-ttu-id="8cc16-722">Il dérive le <xref:System.Reflection.ConstructorInfo> classe et tous les <xref:System.Reflection.ConstructorInfo> objet que vous obtenez par réflexion est réellement une instance de `RuntimeConstructorInfo`.</span><span class="sxs-lookup"><span data-stu-id="8cc16-722">It derives from the <xref:System.Reflection.ConstructorInfo> class, and any <xref:System.Reflection.ConstructorInfo> object you obtain through reflection is actually an instance of `RuntimeConstructorInfo`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8cc16-723"><xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> ne peut pas être utilisé pour définir les attributs de sécurité déclarative.</span><span class="sxs-lookup"><span data-stu-id="8cc16-723"><xref:System.Reflection.Emit.AssemblyBuilder.SetCustomAttribute%2A> cannot be used to set declarative security attributes.</span></span> <span data-ttu-id="8cc16-724">Utilisez une des surcharges de <xref:System.AppDomain.DefineDynamicAssembly%2A> que prend obligatoire, facultatif et les autorisations refusées.</span><span class="sxs-lookup"><span data-stu-id="8cc16-724">Use one of the overloads of <xref:System.AppDomain.DefineDynamicAssembly%2A> that takes required, optional, and refused permissions.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8cc16-725">En commençant par le [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ce membre n’a plus besoin <xref:System.Security.Permissions.ReflectionPermission> avec la <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="8cc16-725">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8cc16-726">(Consultez [émettre des problèmes de sécurité dans la réflexion](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Pour utiliser cette fonctionnalité, votre application doit cibler [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] ou version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="8cc16-726">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="8cc16-727">L’exemple de code suivant illustre l’utilisation de `SetCustomAttribute` pour attacher un attribut personnalisé à un assembly généré dynamiquement.</span><span class="sxs-lookup"><span data-stu-id="8cc16-727">The following code sample illustrates the use of `SetCustomAttribute` to attach a custom attribute to a dynamically generated assembly.</span></span>  
  
 [!code-cpp[AssemblyBuilder_SetCustomAttribute2#1](~/samples/snippets/cpp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute2/CPP/assemblybuilder_setcustomattribute2.cpp#1)]
 [!code-csharp[AssemblyBuilder_SetCustomAttribute2#1](~/samples/snippets/csharp/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute2/CS/assemblybuilder_setcustomattribute2.cs#1)]
 [!code-vb[AssemblyBuilder_SetCustomAttribute2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AssemblyBuilder_SetCustomAttribute2/VB/assemblybuilder_setcustomattribute2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cc16-728">
            <paramref name="con" /> ou <paramref name="binaryAttribute" /> a la valeur <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-728">
              <paramref name="con" /> or <paramref name="binaryAttribute" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-729">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-729">The caller does not have the required permission.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="8cc16-730">
            <paramref name="con" /> n’est pas un objet <see langword="RuntimeConstructorInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-730">
              <paramref name="con" /> is not a <see langword="RuntimeConstructorInfo" /> object.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-731">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-731">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-732">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-732">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetEntryPoint">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8cc16-733">Définit le point d’entrée de cet assembly dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-733">Sets the entry point for this dynamic assembly.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetEntryPoint">
      <MemberSignature Language="C#" Value="public void SetEntryPoint (System.Reflection.MethodInfo entryMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEntryPoint(class System.Reflection.MethodInfo entryMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint(System.Reflection.MethodInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetEntryPoint (entryMethod As MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEntryPoint(System::Reflection::MethodInfo ^ entryMethod);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryMethod" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="entryMethod">
          <span data-ttu-id="8cc16-734">Référence à la méthode qui représente le point d’entrée de cet assembly dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-734">A reference to the method that represents the entry point for this dynamic assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-735">Définit le point d’entrée de cet assembly dynamique, en supposant que l’application créée est une application console.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-735">Sets the entry point for this dynamic assembly, assuming that a console application is being built.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cc16-736">
            <paramref name="entryMethod" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-736">
              <paramref name="entryMethod" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8cc16-737">
            <paramref name="entryMethod" /> n'est pas contenu dans cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-737">
              <paramref name="entryMethod" /> is not contained within this assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-738">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-738">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-739">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-739">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-740">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-740">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="SetEntryPoint">
      <MemberSignature Language="C#" Value="public void SetEntryPoint (System.Reflection.MethodInfo entryMethod, System.Reflection.Emit.PEFileKinds fileKind);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetEntryPoint(class System.Reflection.MethodInfo entryMethod, valuetype System.Reflection.Emit.PEFileKinds fileKind) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.SetEntryPoint(System.Reflection.MethodInfo,System.Reflection.Emit.PEFileKinds)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetEntryPoint (entryMethod As MethodInfo, fileKind As PEFileKinds)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetEntryPoint(System::Reflection::MethodInfo ^ entryMethod, System::Reflection::Emit::PEFileKinds fileKind);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entryMethod" Type="System.Reflection.MethodInfo" />
        <Parameter Name="fileKind" Type="System.Reflection.Emit.PEFileKinds" />
      </Parameters>
      <Docs>
        <param name="entryMethod">
          <span data-ttu-id="8cc16-741">Référence à la méthode qui représente le point d’entrée de cet assembly dynamique.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-741">A reference to the method that represents the entry point for this dynamic assembly.</span>
          </span>
        </param>
        <param name="fileKind">
          <span data-ttu-id="8cc16-742">Type de l’exécutable de l’assembly en cours de génération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-742">The type of the assembly executable being built.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-743">Définit le point d’entrée pour cet assembly et le type du fichier exécutable portable (fichier PE) en cours de génération.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-743">Sets the entry point for this assembly and defines the type of the portable executable (PE file) being built.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="8cc16-744">En commençant par le [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], ce membre n’a plus besoin <xref:System.Security.Permissions.ReflectionPermission> avec la <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> indicateur.</span><span class="sxs-lookup"><span data-stu-id="8cc16-744">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this member no longer requires <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.ReflectionEmit?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="8cc16-745">(Consultez [émettre des problèmes de sécurité dans la réflexion](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) Pour utiliser cette fonctionnalité, votre application doit cibler [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] ou version ultérieure.</span><span class="sxs-lookup"><span data-stu-id="8cc16-745">(See [Security Issues in Reflection Emit](~/docs/framework/reflection-and-codedom/security-issues-in-reflection-emit.md).) To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8cc16-746">
            <paramref name="entryMethod" /> est <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-746">
              <paramref name="entryMethod" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="8cc16-747">
            <paramref name="entryMethod" /> n'est pas contenu dans cet assembly.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-747">
              <paramref name="entryMethod" /> is not contained within this assembly.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="8cc16-748">L'appelant n'a pas l'autorisation requise.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-748">The caller does not have the required permission.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission">
          <span data-ttu-id="8cc16-749">Lorsqu’elle est appelée à liaison tardive via des mécanismes tels que <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-749">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span>
          </span>
          <span data-ttu-id="8cc16-750">Énumération associée : <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-750">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames">
      <MemberSignature Language="C#" Value="void _AssemblyBuilder.GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames([in]valuetype System.Guid&amp; riid, native int rgszNames, unsigned int32 cNames, unsigned int32 lcid, native int rgDispId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetIDsOfNames (ByRef riid As Guid, rgszNames As IntPtr, cNames As UInteger, lcid As UInteger, rgDispId As IntPtr) Implements _AssemblyBuilder.GetIDsOfNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames(Guid % riid, IntPtr rgszNames, System::UInt32 cNames, System::UInt32 lcid, IntPtr rgDispId) = System::Runtime::InteropServices::_AssemblyBuilder::GetIDsOfNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyBuilder.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="rgszNames" Type="System.IntPtr" />
        <Parameter Name="cNames" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="rgDispId" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="riid">
          <span data-ttu-id="8cc16-751">Réservé à un usage ultérieur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-751">Reserved for future use.</span>
          </span>
          <span data-ttu-id="8cc16-752">Doit être IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-752">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="rgszNames">
          <span data-ttu-id="8cc16-753">Tableau passé des noms à mapper.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-753">Passed-in array of names to be mapped.</span>
          </span>
        </param>
        <param name="cNames">
          <span data-ttu-id="8cc16-754">Compte des noms à mapper.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-754">Count of the names to be mapped.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="8cc16-755">Contexte des paramètres régionaux dans lequel interpréter les noms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-755">The locale context in which to interpret the names.</span>
          </span>
        </param>
        <param name="rgDispId">
          <span data-ttu-id="8cc16-756">Tableau alloué par l'appelant et recevant les ID qui correspondent aux noms.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-756">Caller-allocated array which receives the IDs corresponding to the names.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-757">Mappe un jeu de noms avec un jeu correspondant d'identificateurs de dispatch.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-757">Maps a set of names to a corresponding set of dispatch identifiers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-758">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</span><span class="sxs-lookup"><span data-stu-id="8cc16-758">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="8cc16-759">Pour plus d’informations sur `IDispatch::GetIDsOfNames`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="8cc16-759">For more information about `IDispatch::GetIDsOfNames`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="8cc16-760">La méthode est appelée à liaison tardive à l’aide de l’interface <c>IDispatch</c> COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-760">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo">
      <MemberSignature Language="C#" Value="void _AssemblyBuilder.GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo(unsigned int32 iTInfo, unsigned int32 lcid, native int ppTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfo (iTInfo As UInteger, lcid As UInteger, ppTInfo As IntPtr) Implements _AssemblyBuilder.GetTypeInfo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo(System::UInt32 iTInfo, System::UInt32 lcid, IntPtr ppTInfo) = System::Runtime::InteropServices::_AssemblyBuilder::GetTypeInfo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="iTInfo" Type="System.UInt32" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="ppTInfo" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="iTInfo">
          <span data-ttu-id="8cc16-761">Informations de type à retourner.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-761">The type information to return.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="8cc16-762">Identificateur des paramètres régionaux pour les informations de type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-762">The locale identifier for the type information.</span>
          </span>
        </param>
        <param name="ppTInfo">
          <span data-ttu-id="8cc16-763">Reçoit un pointeur vers l'objet d'informations de type demandé.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-763">Receives a pointer to the requested type information object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-764">Récupère les informations de type pour un objet, qui peuvent être utilisées ensuite pour obtenir les informations de type d'une interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-764">Retrieves the type information for an object, which can then be used to get the type information for an interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-765">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</span><span class="sxs-lookup"><span data-stu-id="8cc16-765">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="8cc16-766">Pour plus d’informations sur `IDispatch::GetTypeInfo`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="8cc16-766">For more information about `IDispatch::GetTypeInfo`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="8cc16-767">La méthode est appelée à liaison tardive à l’aide de l’interface <c>IDispatch</c> COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-767">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount">
      <MemberSignature Language="C#" Value="void _AssemblyBuilder.GetTypeInfoCount (out uint pcTInfo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount([out] unsigned int32&amp; pcTInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#GetTypeInfoCount(System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Sub GetTypeInfoCount (ByRef pcTInfo As UInteger) Implements _AssemblyBuilder.GetTypeInfoCount" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount([Runtime::InteropServices::Out] System::UInt32 % pcTInfo) = System::Runtime::InteropServices::_AssemblyBuilder::GetTypeInfoCount;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyBuilder.GetTypeInfoCount(System.UInt32@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pcTInfo" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="pcTInfo">
          <span data-ttu-id="8cc16-768">Pointe vers un emplacement qui reçoit le nombre d'interfaces d'informations de type fourni par l'objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-768">Points to a location that receives the number of type information interfaces provided by the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-769">Récupère le nombre d'interfaces d'informations de type fourni par un objet (0 ou 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-769">Retrieves the number of type information interfaces that an object provides (either 0 or 1).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-770">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</span><span class="sxs-lookup"><span data-stu-id="8cc16-770">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="8cc16-771">Pour plus d’informations sur `IDispatch::GetTypeInfoCount`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="8cc16-771">For more information about `IDispatch::GetTypeInfoCount`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="8cc16-772">La méthode est appelée à liaison tardive à l’aide de l’interface <c>IDispatch</c> COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-772">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.InteropServices._AssemblyBuilder.Invoke">
      <MemberSignature Language="C#" Value="void _AssemblyBuilder.Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.InteropServices._AssemblyBuilder.Invoke(unsigned int32 dispIdMember, [in]valuetype System.Guid&amp; riid, unsigned int32 lcid, int16 wFlags, native int pDispParams, native int pVarResult, native int pExcepInfo, native int puArgErr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Emit.AssemblyBuilder.System#Runtime#InteropServices#_AssemblyBuilder#Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Sub Invoke (dispIdMember As UInteger, ByRef riid As Guid, lcid As UInteger, wFlags As Short, pDispParams As IntPtr, pVarResult As IntPtr, pExcepInfo As IntPtr, puArgErr As IntPtr) Implements _AssemblyBuilder.Invoke" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.InteropServices._AssemblyBuilder.Invoke(System::UInt32 dispIdMember, Guid % riid, System::UInt32 lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr) = System::Runtime::InteropServices::_AssemblyBuilder::Invoke;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.InteropServices._AssemblyBuilder.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dispIdMember" Type="System.UInt32" />
        <Parameter Name="riid" Type="System.Guid&amp;" RefType="ref" />
        <Parameter Name="lcid" Type="System.UInt32" />
        <Parameter Name="wFlags" Type="System.Int16" />
        <Parameter Name="pDispParams" Type="System.IntPtr" />
        <Parameter Name="pVarResult" Type="System.IntPtr" />
        <Parameter Name="pExcepInfo" Type="System.IntPtr" />
        <Parameter Name="puArgErr" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="dispIdMember">
          <span data-ttu-id="8cc16-773">Identifie le membre.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-773">Identifies the member.</span>
          </span>
        </param>
        <param name="riid">
          <span data-ttu-id="8cc16-774">Réservé à un usage ultérieur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-774">Reserved for future use.</span>
          </span>
          <span data-ttu-id="8cc16-775">Doit être IID_NULL.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-775">Must be IID_NULL.</span>
          </span>
        </param>
        <param name="lcid">
          <span data-ttu-id="8cc16-776">Contexte des paramètres régionaux dans lequel interpréter les arguments.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-776">The locale context in which to interpret arguments.</span>
          </span>
        </param>
        <param name="wFlags">
          <span data-ttu-id="8cc16-777">Indicateurs décrivant le contexte de l'appel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-777">Flags describing the context of the call.</span>
          </span>
        </param>
        <param name="pDispParams">
          <span data-ttu-id="8cc16-778">Pointeur vers une structure qui contient un tableau d’arguments, un tableau d’arguments DISPID pour les arguments nommés et le nombre d’éléments de chaque tableau.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-778">Pointer to a structure containing an array of arguments, an array of argument DISPIDs for named arguments, and counts for the number of elements in the arrays.</span>
          </span>
        </param>
        <param name="pVarResult">
          <span data-ttu-id="8cc16-779">Pointeur vers l'emplacement où le résultat doit être stocké.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-779">Pointer to the location where the result is to be stored.</span>
          </span>
        </param>
        <param name="pExcepInfo">
          <span data-ttu-id="8cc16-780">Pointeur vers une structure qui contient les informations sur les exceptions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-780">Pointer to a structure that contains exception information.</span>
          </span>
        </param>
        <param name="puArgErr">
          <span data-ttu-id="8cc16-781">Index du premier argument comportant une erreur.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-781">The index of the first argument that has an error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8cc16-782">Fournit l'accès aux propriétés et aux méthodes exposées par un objet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-782">Provides access to properties and methods exposed by an object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8cc16-783">Cette méthode permet d’accéder aux classes managées à partir de code non managé et ne doit pas être appelée à partir du code managé.</span><span class="sxs-lookup"><span data-stu-id="8cc16-783">This method is for access to managed classes from unmanaged code, and should not be called from managed code.</span></span> <span data-ttu-id="8cc16-784">Pour plus d’informations sur `IDispatch::Invoke`, consultez MSDN Library.</span><span class="sxs-lookup"><span data-stu-id="8cc16-784">For more information about `IDispatch::Invoke`, see the MSDN Library.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="8cc16-785">La méthode est appelée à liaison tardive à l’aide de l’interface <c>IDispatch</c> COM.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8cc16-785">The method is called late-bound using the COM <c>IDispatch</c> interface.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>